{
  "version": 3,
  "sources": ["index.ts"],
  "sourcesContent": ["/**\n * Human demo for browsers\n * @description Simple Human demo for browsers using WebCam\n */\n\nimport Human from '../../dist/human.custom.esm.js'; // equivalent of @vladmandic/human\n\nconst config = {\n  modelBasePath: '../../models',\n  backend: 'humangl',\n};\n\nconst human = new Human(config);\nlet result;\n\nconst video = document.getElementById('video') as HTMLVideoElement;\nconst canvas = document.getElementById('canvas') as HTMLCanvasElement;\nconst fps = { detect: 0, draw: 0, element: document.getElementById('status') };\n\n// eslint-disable-next-line no-console\nconst log = (...msg) => console.log(...msg);\nconst status = (msg) => { if (fps.element) fps.element.innerText = msg; };\n\nasync function webCam() {\n  status('starting webcam...');\n  const options = { audio: false, video: { facingMode: 'user', resizeMode: 'none', width: { ideal: document.body.clientWidth } } };\n  const stream: MediaStream = await navigator.mediaDevices.getUserMedia(options);\n  const ready = new Promise((resolve) => { video.onloadeddata = () => resolve(true); });\n  video.srcObject = stream;\n  video.play();\n  await ready;\n  canvas.width = video.videoWidth;\n  canvas.height = video.videoHeight;\n  const track: MediaStreamTrack = stream.getVideoTracks()[0];\n  const capabilities: MediaTrackCapabilities = track.getCapabilities();\n  const settings: MediaTrackSettings = track.getSettings();\n  const constraints: MediaTrackConstraints = track.getConstraints();\n  log('video:', video.videoWidth, video.videoHeight, { stream, track, settings, constraints, capabilities });\n  canvas.onclick = () => {\n    if (video.paused) video.play();\n    else video.pause();\n  };\n}\n\nasync function detectionLoop() {\n  const t0 = human.now();\n  if (!video.paused) result = await human.detect(video);\n  const t1 = human.now();\n  fps.detect = 1000 / (t1 - t0);\n  requestAnimationFrame(detectionLoop);\n}\n\nasync function drawLoop() {\n  const t0 = human.now();\n  if (!video.paused) {\n    const interpolated = await human.next(result);\n    await human.draw.canvas(video, canvas);\n    await human.draw.all(canvas, interpolated);\n  }\n  const t1 = human.now();\n  fps.draw = 1000 / (t1 - t0);\n  status(video.paused ? 'paused' : `fps: ${fps.detect.toFixed(1).padStart(5, ' ')} detect / ${fps.draw.toFixed(1).padStart(5, ' ')} draw`);\n  requestAnimationFrame(drawLoop);\n}\n\nasync function main() {\n  status('loading...');\n  await human.load();\n  status('initializing...');\n  await human.warmup();\n  await webCam();\n  await detectionLoop();\n  await drawLoop();\n}\n\nwindow.onload = main;\n"],
  "mappings": ";;;;;;;AAKA;AAEA,IAAM,SAAS;AAAA,EACb,eAAe;AAAA,EACf,SAAS;AAAA;AAGX,IAAM,QAAQ,IAAI,MAAM;AACxB,IAAI;AAEJ,IAAM,QAAQ,SAAS,eAAe;AACtC,IAAM,SAAS,SAAS,eAAe;AACvC,IAAM,MAAM,EAAE,QAAQ,GAAG,MAAM,GAAG,SAAS,SAAS,eAAe;AAGnE,IAAM,MAAM,IAAI,QAAQ,QAAQ,IAAI,GAAG;AACvC,IAAM,SAAS,CAAC,QAAQ;AAAE,MAAI,IAAI;AAAS,QAAI,QAAQ,YAAY;AAAA;AAEnE,wBAAwB;AACtB,SAAO;AACP,QAAM,UAAU,EAAE,OAAO,OAAO,OAAO,EAAE,YAAY,QAAQ,YAAY,QAAQ,OAAO,EAAE,OAAO,SAAS,KAAK;AAC/G,QAAM,SAAsB,MAAM,UAAU,aAAa,aAAa;AACtE,QAAM,QAAQ,IAAI,QAAQ,CAAC,YAAY;AAAE,UAAM,eAAe,MAAM,QAAQ;AAAA;AAC5E,QAAM,YAAY;AAClB,QAAM;AACN,QAAM;AACN,SAAO,QAAQ,MAAM;AACrB,SAAO,SAAS,MAAM;AACtB,QAAM,QAA0B,OAAO,iBAAiB;AACxD,QAAM,eAAuC,MAAM;AACnD,QAAM,WAA+B,MAAM;AAC3C,QAAM,cAAqC,MAAM;AACjD,MAAI,UAAU,MAAM,YAAY,MAAM,aAAa,EAAE,QAAQ,OAAO,UAAU,aAAa;AAC3F,SAAO,UAAU,MAAM;AACrB,QAAI,MAAM;AAAQ,YAAM;AAAA;AACnB,YAAM;AAAA;AAAA;AAIf,+BAA+B;AAC7B,QAAM,KAAK,MAAM;AACjB,MAAI,CAAC,MAAM;AAAQ,aAAS,MAAM,MAAM,OAAO;AAC/C,QAAM,KAAK,MAAM;AACjB,MAAI,SAAS,MAAQ,MAAK;AAC1B,wBAAsB;AAAA;AAGxB,0BAA0B;AACxB,QAAM,KAAK,MAAM;AACjB,MAAI,CAAC,MAAM,QAAQ;AACjB,UAAM,eAAe,MAAM,MAAM,KAAK;AACtC,UAAM,MAAM,KAAK,OAAO,OAAO;AAC/B,UAAM,MAAM,KAAK,IAAI,QAAQ;AAAA;AAE/B,QAAM,KAAK,MAAM;AACjB,MAAI,OAAO,MAAQ,MAAK;AACxB,SAAO,MAAM,SAAS,WAAW,QAAQ,IAAI,OAAO,QAAQ,GAAG,SAAS,GAAG,iBAAiB,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAG;AAC5H,wBAAsB;AAAA;AAGxB,sBAAsB;AACpB,SAAO;AACP,QAAM,MAAM;AACZ,SAAO;AACP,QAAM,MAAM;AACZ,QAAM;AACN,QAAM;AACN,QAAM;AAAA;AAGR,OAAO,SAAS;",
  "names": []
}
