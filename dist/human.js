/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var Human=(()=>{var Eh=Object.defineProperty;var rR=Object.getOwnPropertyDescriptor;var aR=Object.getOwnPropertyNames;var oR=Object.prototype.hasOwnProperty;var iR=(e,t,n)=>t in e?Eh(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var lR=e=>Eh(e,"__esModule",{value:!0});var od=(e,t)=>{for(var n in t)Eh(e,n,{get:t[n],enumerable:!0})},uR=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of aR(t))!oR.call(e,r)&&(n||r!=="default")&&Eh(e,r,{get:()=>t[r],enumerable:!(s=rR(t,r))||s.enumerable});return e};var cR=(e=>(t,n)=>e&&e.get(t)||(n=uR(lR({}),t,1),e&&e.set(t,n),n))(typeof WeakMap!="undefined"?new WeakMap:0);var fe=(e,t,n)=>(iR(e,typeof t!="symbol"?t+"":t,n),n),q5=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var id=(e,t,n)=>(q5(e,t,"read from private field"),n?n.call(e):t.get(e)),ld=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},ud=(e,t,n,s)=>(q5(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);var Y1e={};od(Y1e,{Human:()=>lE,default:()=>lE,defaults:()=>Ra,env:()=>he});function J(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function Ue(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var ie=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function w2(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")w2(e[r],t[r],r,s);else{let a=e&&typeof e[r]!="undefined";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&J("invalid configuration",s),s}function Rn(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=Rn(a,o):n[r]=o}),n),{})}var Ra={backend:"",modelBasePath:"",wasmPath:"",debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var Ve={};od(Ve,{Abs:()=>gi,Acos:()=>lu,Acosh:()=>uu,AdadeltaOptimizer:()=>Gf,AdagradOptimizer:()=>Hf,AdamOptimizer:()=>jf,AdamaxOptimizer:()=>qf,Add:()=>Zr,AddN:()=>$a,All:()=>cu,Any:()=>du,ArgMax:()=>Fa,ArgMin:()=>pu,Asin:()=>hu,Asinh:()=>fu,Atan:()=>mu,Atan2:()=>yu,Atanh:()=>gu,AvgPool:()=>Oa,AvgPool3D:()=>fd,AvgPool3DGrad:()=>zh,AvgPoolGrad:()=>Mh,BackendWasm:()=>mT,BatchMatMul:()=>Ma,BatchToSpaceND:()=>yi,Bincount:()=>Lh,BroadcastArgs:()=>Bh,BroadcastTo:()=>u3,Callback:()=>wI,CallbackList:()=>ck,Cast:()=>za,Ceil:()=>La,ClipByValue:()=>Yr,Complex:()=>md,ComplexAbs:()=>gd,Concat:()=>Ai,Conv2D:()=>Ba,Conv2DBackpropFilter:()=>Wh,Conv2DBackpropInput:()=>Wa,Conv3D:()=>yd,Conv3DBackpropFilterV2:()=>Vh,Conv3DBackpropInputV2:()=>Uh,Cos:()=>Va,Cosh:()=>Ua,CropAndResize:()=>bi,Cumsum:()=>xi,CustomCallback:()=>pk,DataStorage:()=>dd,DenseBincount:()=>Gh,DepthToSpace:()=>vi,DepthwiseConv2dNative:()=>Ga,DepthwiseConv2dNativeBackpropFilter:()=>Hh,DepthwiseConv2dNativeBackpropInput:()=>jh,Diag:()=>qh,Dilation2D:()=>Ad,Dilation2DBackpropFilter:()=>Kh,Dilation2DBackpropInput:()=>Xh,ENV:()=>pr,EarlyStopping:()=>II,Einsum:()=>xd,Elu:()=>ja,EluGrad:()=>Zh,Environment:()=>i3,Equal:()=>wi,Erf:()=>Au,Exp:()=>qa,ExpandDims:()=>ki,Expm1:()=>Ii,FFT:()=>Yh,Fill:()=>xu,FlipLeftRight:()=>Si,Floor:()=>Xa,FloorDiv:()=>Ka,FromPixels:()=>_d,FusedBatchNorm:()=>Za,FusedConv2D:()=>No,FusedDepthwiseConv2D:()=>Eo,GPGPUContext:()=>yc,GatherNd:()=>Ti,GatherV2:()=>Ci,GraphModel:()=>nS,Greater:()=>Ni,GreaterEqual:()=>Ya,History:()=>dk,IFFT:()=>Jh,Identity:()=>Ja,Imag:()=>bd,InputSpec:()=>Qt,IsFinite:()=>bu,IsInf:()=>vu,IsNan:()=>wu,KernelBackend:()=>ru,LRN:()=>wd,LRNGrad:()=>ef,LayerVariable:()=>ok,LayersModel:()=>aa,LeakyRelu:()=>Qa,Less:()=>Ei,LessEqual:()=>Ri,LinSpace:()=>Qh,Log:()=>eo,Log1p:()=>ku,LogSoftmax:()=>c3,LogicalAnd:()=>_i,LogicalNot:()=>Iu,LogicalOr:()=>vd,MathBackendCPU:()=>sx,MathBackendWebGL:()=>Rp,Max:()=>to,MaxPool:()=>so,MaxPool3D:()=>kd,MaxPool3DGrad:()=>nf,MaxPoolGrad:()=>tf,MaxPoolWithArgmax:()=>sf,Maximum:()=>no,Mean:()=>ro,Min:()=>ao,Minimum:()=>oo,MirrorPad:()=>io,Mod:()=>Su,MomentumOptimizer:()=>Xf,Multinomial:()=>rf,Multiply:()=>lo,Neg:()=>Di,NonMaxSuppressionV3:()=>$i,NonMaxSuppressionV4:()=>Cu,NonMaxSuppressionV5:()=>Fi,NotEqual:()=>Pi,OP_SCOPE_SUFFIX:()=>R3,OneHot:()=>Mi,OnesLike:()=>Oi,Optimizer:()=>na,OptimizerConstructors:()=>Wo,Pack:()=>zi,PadV2:()=>uo,Pool:()=>t9,Pow:()=>co,Prelu:()=>po,Prod:()=>Li,RMSPropOptimizer:()=>Kf,RNN:()=>oa,Range:()=>Tu,Rank:()=>A3,Real:()=>Id,RealDiv:()=>Ha,Reciprocal:()=>Nu,Reduction:()=>ls,Relu:()=>ho,Relu6:()=>mo,Reshape:()=>Bi,ResizeBilinear:()=>fo,ResizeBilinearGrad:()=>of,ResizeNearestNeighbor:()=>Eu,ResizeNearestNeighborGrad:()=>af,Reverse:()=>Wi,RotateWithOffset:()=>tl,Round:()=>Vi,Rsqrt:()=>go,SGDOptimizer:()=>tp,ScatterNd:()=>Ui,Select:()=>Gi,Selu:()=>Ru,Sequential:()=>bm,Sigmoid:()=>Ao,Sign:()=>_u,Sin:()=>yo,Sinh:()=>ji,Slice:()=>Hi,Softmax:()=>vo,Softplus:()=>Du,SpaceToBatchND:()=>qi,SparseFillEmptyRows:()=>Sd,SparseReshape:()=>Pu,SparseSegmentMean:()=>Cd,SparseSegmentSum:()=>Td,SparseToDense:()=>Nd,SplitV:()=>Xi,Sqrt:()=>xo,Square:()=>$u,SquaredDifference:()=>wo,Step:()=>Co,StridedSlice:()=>Ki,StringNGrams:()=>Ed,StringSplit:()=>lf,StringToHashBucketFast:()=>uf,Sub:()=>ko,Sum:()=>bo,SymbolicTensor:()=>kr,Tan:()=>Zi,Tanh:()=>Io,Tensor:()=>nt,TensorBuffer:()=>rn,Tile:()=>Jr,TopK:()=>Yi,Transform:()=>Ji,Transpose:()=>So,Unique:()=>cf,Unpack:()=>Qi,UnsortedSegmentSum:()=>Rd,Variable:()=>Ld,ZerosLike:()=>el,_FusedMatMul:()=>To,abs:()=>an,acos:()=>fv,acosh:()=>mv,add:()=>ue,addN:()=>bf,all:()=>cy,any:()=>vf,argMax:()=>Ms,argMin:()=>gv,asin:()=>yv,asinh:()=>Av,atan:()=>xv,atan2:()=>bv,atanh:()=>vv,avgPool:()=>kf,avgPool3d:()=>hy,backend:()=>gr,backend_util:()=>N,basicLSTMCell:()=>VD,batchNorm:()=>Uu,batchNorm2d:()=>Sv,batchNorm3d:()=>Cv,batchNorm4d:()=>Tv,batchToSpaceND:()=>If,bincount:()=>fy,booleanMaskAsync:()=>eO,broadcastArgs:()=>Nv,broadcastTo:()=>jd,broadcast_util:()=>il,browser:()=>Os,buffer:()=>Le,callbacks:()=>TG,cast:()=>ge,ceil:()=>Ev,clipByValue:()=>bs,clone:()=>Vn,complex:()=>Do,concat:()=>St,concat1d:()=>Rv,concat2d:()=>Gu,concat3d:()=>_v,concat4d:()=>Dv,constraints:()=>Lw,conv1d:()=>my,conv2d:()=>Mo,conv2dTranspose:()=>yy,conv3d:()=>Ay,conv3dTranspose:()=>$v,copyRegisteredKernels:()=>a9,cos:()=>Sf,cosh:()=>xy,cosineWindow:()=>Gy,cumsum:()=>by,customGrad:()=>Fr,data:()=>sS,denseBincount:()=>Fv,deprecationWarn:()=>iy,depthToSpace:()=>Ov,depthwiseConv2d:()=>qd,deregisterOp:()=>RG,device_util:()=>Mu,diag:()=>AP,dilation2d:()=>Mv,disableDeprecationWarnings:()=>rD,dispose:()=>te,disposeVariables:()=>aD,div:()=>de,divNoNan:()=>zv,dot:()=>SP,dropout:()=>hw,einsum:()=>Lv,elu:()=>Xd,enableDebugMode:()=>sD,enableProdMode:()=>oy,enclosingPowerOfTwo:()=>fw,engine:()=>Dn,env:()=>Y,equal:()=>zs,erf:()=>Bv,exp:()=>Ls,expandDims:()=>Yt,expm1:()=>Wv,eye:()=>vy,fft:()=>Of,fill:()=>Hu,findBackend:()=>uy,findBackendFactory:()=>uD,floor:()=>Kd,floorDiv:()=>Gd,forceHalfFloat:()=>PC,fused:()=>Bo,gather:()=>ju,gatherND:()=>pw,gather_util:()=>Y2,getBackend:()=>xs,getGradient:()=>E2,getKernel:()=>df,getKernelsForBackend:()=>Dr,getThreadsCount:()=>Aye,gpgpu_util:()=>oC,grad:()=>ZP,grads:()=>YP,greater:()=>vs,greaterEqual:()=>pl,ifft:()=>Jd,imag:()=>Cf,image:()=>Ie,inTopKAsync:()=>dO,initializers:()=>jw,input:()=>Fk,io:()=>os,irfft:()=>zy,isFinite:()=>BP,isInf:()=>VP,isNaN:()=>Vv,keep:()=>An,kernel_impls:()=>tr,layers:()=>sk,leakyRelu:()=>Tf,less:()=>wy,lessEqual:()=>hl,linalg:()=>Iw,linspace:()=>Uv,loadGraphModel:()=>We,loadLayersModel:()=>zV,localResponseNormalization:()=>Gv,log:()=>Bs,log1p:()=>Nf,logSigmoid:()=>s$,logSoftmax:()=>ky,logSumExp:()=>Kv,logicalAnd:()=>yr,logicalNot:()=>Rf,logicalOr:()=>Cy,logicalXor:()=>m$,losses:()=>KM,matMul:()=>qe,math:()=>X3,max:()=>xn,maxPool:()=>_f,maxPool3d:()=>Ty,maxPoolWithArgmax:()=>Zv,maximum:()=>ea,mean:()=>Gt,memory:()=>xf,meshgrid:()=>v$,metrics:()=>xI,min:()=>zo,minimum:()=>Zd,mirrorPad:()=>Yv,mod:()=>Xu,model:()=>OV,models:()=>bI,moments:()=>Df,movingAverage:()=>sO,mul:()=>L,multiRNNCell:()=>E$,multinomial:()=>Jv,neg:()=>Lt,nextFrame:()=>Sw,norm:()=>Vy,notEqual:()=>Ku,oneHot:()=>Ud,ones:()=>ws,onesLike:()=>Ws,op:()=>U,outerProduct:()=>$$,pad:()=>er,pad1d:()=>M$,pad2d:()=>L$,pad3d:()=>W$,pad4d:()=>U$,pool:()=>X$,pow:()=>Lo,prelu:()=>$f,print:()=>V3,prod:()=>Ny,profile:()=>oD,rand:()=>Q$,randomGamma:()=>sF,randomNormal:()=>Qv,randomUniform:()=>Zu,range:()=>Yu,ready:()=>Bu,real:()=>Yd,reciprocal:()=>ew,registerBackend:()=>cl,registerCallbackConstructor:()=>LV,registerGradient:()=>d3,registerKernel:()=>Js,registerOp:()=>EG,regularizers:()=>vI,relu:()=>Or,relu6:()=>_y,removeBackend:()=>lD,reshape:()=>H,reverse:()=>Vs,reverse1d:()=>pF,reverse2d:()=>fF,reverse3d:()=>gF,reverse4d:()=>AF,rfft:()=>Mf,round:()=>Dy,rsqrt:()=>Py,scalar:()=>Te,scatterND:()=>dw,scatter_util:()=>J2,selu:()=>$y,separableConv2d:()=>tw,sequential:()=>MV,serialization:()=>ce,setBackend:()=>ly,setPlatform:()=>cD,setThreadsCount:()=>yye,setWasmPath:()=>gye,setWasmPaths:()=>nb,setWebGLContext:()=>Wm,setdiff1dAsync:()=>nw,shared:()=>Fm,sigmoid:()=>Pn,sign:()=>sw,signal:()=>XM,sin:()=>Fy,sinh:()=>Oy,slice:()=>Fe,slice1d:()=>Ff,slice2d:()=>My,slice3d:()=>ml,slice4d:()=>gl,slice_util:()=>zt,softmax:()=>Ju,softplus:()=>qu,spaceToBatchND:()=>Pf,sparse:()=>ep,sparseToDense:()=>Uy,spectral:()=>qM,split:()=>Jt,sqrt:()=>$n,square:()=>bt,squaredDifference:()=>Ly,squeeze:()=>Ye,stack:()=>on,step:()=>Qd,stridedSlice:()=>rw,string:()=>Uf,sub:()=>pe,sum:()=>we,sumOutType:()=>Bd,tan:()=>aw,tanh:()=>Vu,tensor:()=>ht,tensor1d:()=>Tt,tensor2d:()=>Ar,tensor3d:()=>Z3,tensor4d:()=>GF,tensor5d:()=>HF,tensor6d:()=>jF,tensor_util:()=>fr,test_util:()=>dv,tidy:()=>X,tile:()=>Qs,time:()=>iD,topk:()=>ow,train:()=>yl,transpose:()=>rt,truncatedNormal:()=>zf,unique:()=>By,unregisterGradient:()=>r9,unregisterKernel:()=>s9,unsortedSegmentSum:()=>iw,unstack:()=>is,upcastType:()=>Wn,util:()=>w,valueAndGrad:()=>JP,valueAndGrads:()=>QP,variable:()=>lw,variableGrads:()=>Hv,version:()=>Up,version_converter:()=>PH,version_core:()=>ay,version_cpu:()=>xq,version_layers:()=>C1,version_wasm:()=>xye,version_webgl:()=>Vee,webgl:()=>Uee,webgl_util:()=>R7,webgpu:()=>c6,where:()=>Gn,whereAsync:()=>Wy,zeros:()=>Ht,zerosLike:()=>at});var dR=Object.create,Rh=Object.defineProperty,pR=Object.getOwnPropertyDescriptor,hR=Object.getOwnPropertyNames,fR=Object.getPrototypeOf,mR=Object.prototype.hasOwnProperty,X5=e=>Rh(e,"__esModule",{value:!0}),sn=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},Me=(e,t)=>{X5(e);for(var n in t)Rh(e,n,{get:t[n],enumerable:!0})},gR=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of hR(t))!mR.call(e,s)&&s!=="default"&&Rh(e,s,{get:()=>t[s],enumerable:!(n=pR(t,s))||n.enumerable});return e},hi=e=>gR(X5(Rh(e!=null?dR(fR(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),yR=sn({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(P){}function s(P,T,O){this.low=P|0,this.high=T|0,this.unsigned=!!O}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(P){return(P&&P.__isLong__)===!0}s.isLong=r;var a={},o={};function i(P,T){var O,G,K;return T?(P>>>=0,(K=0<=P&&P<256)&&(G=o[P],G)?G:(O=c(P,(P|0)<0?-1:0,!0),K&&(o[P]=O),O)):(P|=0,(K=-128<=P&&P<128)&&(G=a[P],G)?G:(O=c(P,P<0?-1:0,!1),K&&(a[P]=O),O))}s.fromInt=i;function l(P,T){if(isNaN(P))return T?b:A;if(T){if(P<0)return b;if(P>=g)return R}else{if(P<=-y)return F;if(P+1>=y)return E}return P<0?l(-P,T).neg():c(P%m|0,P/m|0,T)}s.fromNumber=l;function c(P,T,O){return new s(P,T,O)}s.fromBits=c;var u=Math.pow;function d(P,T,O){if(P.length===0)throw Error("empty string");if(P==="NaN"||P==="Infinity"||P==="+Infinity"||P==="-Infinity")return A;if(typeof T=="number"?(O=T,T=!1):T=!!T,O=O||10,O<2||36<O)throw RangeError("radix");var G;if((G=P.indexOf("-"))>0)throw Error("interior hyphen");if(G===0)return d(P.substring(1),T,O).neg();for(var K=l(u(O,8)),z=A,j=0;j<P.length;j+=8){var W=Math.min(8,P.length-j),Q=parseInt(P.substring(j,j+W),O);if(W<8){var ne=l(u(O,W));z=z.mul(ne).add(l(Q))}else z=z.mul(K),z=z.add(l(Q))}return z.unsigned=T,z}s.fromString=d;function p(P,T){return typeof P=="number"?l(P,T):typeof P=="string"?d(P,T):c(P.low,P.high,typeof T=="boolean"?T:P.unsigned)}s.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,y=g/2,x=i(f),A=i(0);s.ZERO=A;var b=i(0,!0);s.UZERO=b;var v=i(1);s.ONE=v;var C=i(1,!0);s.UONE=C;var I=i(-1);s.NEG_ONE=I;var E=c(4294967295|0,2147483647|0,!1);s.MAX_VALUE=E;var R=c(4294967295|0,4294967295|0,!0);s.MAX_UNSIGNED_VALUE=R;var F=c(0,2147483648|0,!1);s.MIN_VALUE=F;var _=s.prototype;_.toInt=function(){return this.unsigned?this.low>>>0:this.low},_.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},_.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(F)){var O=l(T),G=this.div(O),K=G.mul(O).sub(this);return G.toString(T)+K.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var z=l(u(T,6),this.unsigned),j=this,W="";;){var Q=j.div(z),ne=j.sub(Q.mul(z)).toInt()>>>0,oe=ne.toString(T);if(j=Q,j.isZero())return oe+W;for(;oe.length<6;)oe="0"+oe;W=""+oe+W}},_.getHighBits=function(){return this.high},_.getHighBitsUnsigned=function(){return this.high>>>0},_.getLowBits=function(){return this.low},_.getLowBitsUnsigned=function(){return this.low>>>0},_.getNumBitsAbs=function(){if(this.isNegative())return this.eq(F)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,O=31;O>0&&(T&1<<O)==0;O--);return this.high!=0?O+33:O+1},_.isZero=function(){return this.high===0&&this.low===0},_.eqz=_.isZero,_.isNegative=function(){return!this.unsigned&&this.high<0},_.isPositive=function(){return this.unsigned||this.high>=0},_.isOdd=function(){return(this.low&1)===1},_.isEven=function(){return(this.low&1)===0},_.equals=function(T){return r(T)||(T=p(T)),this.unsigned!==T.unsigned&&this.high>>>31===1&&T.high>>>31===1?!1:this.high===T.high&&this.low===T.low},_.eq=_.equals,_.notEquals=function(T){return!this.eq(T)},_.neq=_.notEquals,_.ne=_.notEquals,_.lessThan=function(T){return this.comp(T)<0},_.lt=_.lessThan,_.lessThanOrEqual=function(T){return this.comp(T)<=0},_.lte=_.lessThanOrEqual,_.le=_.lessThanOrEqual,_.greaterThan=function(T){return this.comp(T)>0},_.gt=_.greaterThan,_.greaterThanOrEqual=function(T){return this.comp(T)>=0},_.gte=_.greaterThanOrEqual,_.ge=_.greaterThanOrEqual,_.compare=function(T){if(r(T)||(T=p(T)),this.eq(T))return 0;var O=this.isNegative(),G=T.isNegative();return O&&!G?-1:!O&&G?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},_.comp=_.compare,_.negate=function(){return!this.unsigned&&this.eq(F)?F:this.not().add(v)},_.neg=_.negate,_.add=function(T){r(T)||(T=p(T));var O=this.high>>>16,G=this.high&65535,K=this.low>>>16,z=this.low&65535,j=T.high>>>16,W=T.high&65535,Q=T.low>>>16,ne=T.low&65535,oe=0,Z=0,ae=0,re=0;return re+=z+ne,ae+=re>>>16,re&=65535,ae+=K+Q,Z+=ae>>>16,ae&=65535,Z+=G+W,oe+=Z>>>16,Z&=65535,oe+=O+j,oe&=65535,c(ae<<16|re,oe<<16|Z,this.unsigned)},_.subtract=function(T){return r(T)||(T=p(T)),this.add(T.neg())},_.sub=_.subtract,_.multiply=function(T){if(this.isZero())return A;if(r(T)||(T=p(T)),n){var O=n.mul(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}if(T.isZero())return A;if(this.eq(F))return T.isOdd()?F:A;if(T.eq(F))return this.isOdd()?F:A;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(x)&&T.lt(x))return l(this.toNumber()*T.toNumber(),this.unsigned);var G=this.high>>>16,K=this.high&65535,z=this.low>>>16,j=this.low&65535,W=T.high>>>16,Q=T.high&65535,ne=T.low>>>16,oe=T.low&65535,Z=0,ae=0,re=0,me=0;return me+=j*oe,re+=me>>>16,me&=65535,re+=z*oe,ae+=re>>>16,re&=65535,re+=j*ne,ae+=re>>>16,re&=65535,ae+=K*oe,Z+=ae>>>16,ae&=65535,ae+=z*ne,Z+=ae>>>16,ae&=65535,ae+=j*Q,Z+=ae>>>16,ae&=65535,Z+=G*oe+K*ne+z*Q+j*W,Z&=65535,c(re<<16|me,Z<<16|ae,this.unsigned)},_.mul=_.multiply,_.divide=function(T){if(r(T)||(T=p(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var O=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:A;var G,K,z;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return b;if(T.gt(this.shru(1)))return C;z=b}else{if(this.eq(F)){if(T.eq(v)||T.eq(I))return F;if(T.eq(F))return v;var j=this.shr(1);return G=j.div(T).shl(1),G.eq(A)?T.isNegative()?v:I:(K=this.sub(T.mul(G)),z=G.add(K.div(T)),z)}else if(T.eq(F))return this.unsigned?b:A;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();z=A}for(K=this;K.gte(T);){G=Math.max(1,Math.floor(K.toNumber()/T.toNumber()));for(var W=Math.ceil(Math.log(G)/Math.LN2),Q=W<=48?1:u(2,W-48),ne=l(G),oe=ne.mul(T);oe.isNegative()||oe.gt(K);)G-=Q,ne=l(G,this.unsigned),oe=ne.mul(T);ne.isZero()&&(ne=v),z=z.add(ne),K=K.sub(oe)}return z},_.div=_.divide,_.modulo=function(T){if(r(T)||(T=p(T)),n){var O=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},_.mod=_.modulo,_.rem=_.modulo,_.not=function(){return c(~this.low,~this.high,this.unsigned)},_.and=function(T){return r(T)||(T=p(T)),c(this.low&T.low,this.high&T.high,this.unsigned)},_.or=function(T){return r(T)||(T=p(T)),c(this.low|T.low,this.high|T.high,this.unsigned)},_.xor=function(T){return r(T)||(T=p(T)),c(this.low^T.low,this.high^T.high,this.unsigned)},_.shiftLeft=function(T){return r(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?c(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):c(0,this.low<<T-32,this.unsigned)},_.shl=_.shiftLeft,_.shiftRight=function(T){return r(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?c(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):c(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},_.shr=_.shiftRight,_.shiftRightUnsigned=function(T){if(r(T)&&(T=T.toInt()),T&=63,T===0)return this;var O=this.high;if(T<32){var G=this.low;return c(G>>>T|O<<32-T,O>>>T,this.unsigned)}else return T===32?c(O,0,this.unsigned):c(O>>>T-32,0,this.unsigned)},_.shru=_.shiftRightUnsigned,_.shr_u=_.shiftRightUnsigned,_.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},_.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},_.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},_.toBytesLE=function(){var T=this.high,O=this.low;return[O&255,O>>>8&255,O>>>16&255,O>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},_.toBytesBE=function(){var T=this.high,O=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,O>>>24,O>>>16&255,O>>>8&255,O&255]},s.fromBytes=function(T,O,G){return G?s.fromBytesLE(T,O):s.fromBytesBE(T,O)},s.fromBytesLE=function(T,O){return new s(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,O)},s.fromBytesBE=function(T,O){return new s(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],O)}}}),AR=sn({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),xR=sn({"(disabled):util"(){}}),bR=sn({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(c){var u=this,d=l();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(c),u.s0<0&&(u.s0+=1),u.s1-=d(c),u.s1<0&&(u.s1+=1),u.s2-=d(c),u.s2<0&&(u.s2+=1),d=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var d=new a(c),p=u&&u.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function l(){var c=4022871197,u=function(d){d=String(d);for(var p=0;p<d.length;p++){c+=d.charCodeAt(p);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),vR=sn({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),wR=sn({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,d==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),kR=sn({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.x,p=c.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,c.i=p+1&7,f};function u(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}u(c,l)}function o(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.x&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),IR=sn({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.w,p=c.X,h=c.i,f,m;return c.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,c.i=h,m+(d^d>>>16)|0};function u(d,p){var h,f,m,g,y,x=[],A=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,A=Math.max(A,p.length)),m=0,g=-32;g<A;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=x[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(x[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;d.w=y,d.X=x,d.i=m}u(c,l)}function o(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.X&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),SR=sn({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.b,h=c.c,f=c.d,m=c.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,c.b=p=p<<20^p>>>12^h,c.c=h=h-f|0,c.d=f<<16^h>>>16^m,c.a=m-p|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var d=0;d<u.length+20;d++)c.b^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),CR=sn({"(disabled):crypto"(){}}),TR=sn({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",c=r.pow(a,o),u=r.pow(2,i),d=u*2,p=a-1,h;function f(v,C,I){var E=[];C=C==!0?{entropy:!0}:C||{};var R=x(y(C.entropy?[v,b(s)]:v==null?A():v,3),E),F=new m(E),_=function(){for(var P=F.g(o),T=c,O=0;P<u;)P=(P+O)*a,T*=a,O=F.g(1);for(;P>=d;)P/=2,T/=2,O>>>=1;return(P+O)/T};return _.int32=function(){return F.g(4)|0},_.quick=function(){return F.g(4)/4294967296},_.double=_,x(b(F.S),s),(C.pass||I||function(P,T,O,G){return G&&(G.S&&g(G,F),P.state=function(){return g(F,{})}),O?(r[l]=P,T):P})(_,R,"global"in C?C.global:this==r,C.state)}function m(v){var C,I=v.length,E=this,R=0,F=E.i=E.j=0,_=E.S=[];for(I||(v=[I++]);R<a;)_[R]=R++;for(R=0;R<a;R++)_[R]=_[F=p&F+v[R%I]+(C=_[R])],_[F]=C;(E.g=function(P){for(var T,O=0,G=E.i,K=E.j,z=E.S;P--;)T=z[G=p&G+1],O=O*a+z[p&(z[G]=z[K=p&K+T])+(z[K]=T)];return E.i=G,E.j=K,O})(a)}function g(v,C){return C.i=v.i,C.j=v.j,C.S=v.S.slice(),C}function y(v,C){var I=[],E=typeof v,R;if(C&&E=="object")for(R in v)try{I.push(y(v[R],C-1))}catch(F){}return I.length?I:E=="string"?v:v+"\0"}function x(v,C){for(var I=v+"",E,R=0;R<I.length;)C[p&R]=p&(E^=C[p&R]*19)+I.charCodeAt(R++);return b(C)}function A(){try{var v;return h&&(v=h.randomBytes)?v=v(a):(v=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(v)),b(v)}catch(E){var C=n.navigator,I=C&&C.plugins;return[+new Date,n,I,n.screen,b(s)]}}function b(v){return String.fromCharCode.apply(0,v)}if(x(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=CR()}catch(v){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),_h=sn({"src/node_modules/seedrandom/index.js"(e,t){var n=bR(),s=vR(),r=wR(),a=kR(),o=IR(),i=SR(),l=TR();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),K5=sn({"(disabled):src/node_modules/string_decoder/index.js"(){}}),Dh=sn({"(disabled):fs"(){}}),cd=sn({"(disabled):path"(){}}),NR=sn({"(disabled):worker_threads"(){}}),ER=sn({"(disabled):perf_hooks"(){}}),RR=sn({"(disabled):os"(){}}),_R=sn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return re.buffer!=ut&&ss(re.buffer),gs}function o(){return re.buffer!=ut&&ss(re.buffer),In}function i(){return re.buffer!=ut&&ss(re.buffer),ys}function l(){return re.buffer!=ut&&ss(re.buffer),_s}function c(){return re.buffer!=ut&&ss(re.buffer),Ds}var u=typeof r!="undefined"?r:{},d,p;u.ready=new Promise(function(S,D){d=S,p=D});var h;typeof process!="undefined"&&process.listeners&&(h={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f={},m;for(m in u)u.hasOwnProperty(m)&&(f[m]=u[m]);var g=[],y="./this.program",x=function(S,D){throw D},A=!1,b=!1,v=!1,C=!1;A=typeof window=="object",b=typeof importScripts=="function",v=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=!A&&!v&&!b;var I=u.ENVIRONMENT_IS_PTHREAD||!1;I&&(ut=u.buffer);var E="";function R(S){return u.locateFile?u.locateFile(S,E):E+S}var F,_,P,T,O,G;if(v){b?E=cd().dirname(E)+"/":E=__dirname+"/",F=function(D,B){return O||(O=Dh()),G||(G=cd()),D=G.normalize(D),O.readFileSync(D,B?null:"utf8")},P=function(D){var B=F(D,!0);return B.buffer||(B=new Uint8Array(B)),Se(B.buffer),B},process.argv.length>1&&(y=process.argv[1].replace(/\\/g,"/")),g=process.argv.slice(2),process.on("uncaughtException",function(S){if(!(S instanceof ad))throw S}),process.on("unhandledRejection",qr),x=function(S){process.exit(S)},u.inspect=function(){return"[Emscripten Module object]"};var K;try{K=NR()}catch(S){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),S}global.Worker=K.Worker}else C?(typeof read!="undefined"&&(F=function(D){return read(D)}),P=function(D){var B;return typeof readbuffer=="function"?new Uint8Array(readbuffer(D)):(B=read(D,"binary"),Se(typeof B=="object"),B)},typeof scriptArgs!="undefined"?g=scriptArgs:typeof arguments!="undefined"&&(g=arguments),typeof quit=="function"&&(x=function(S){quit(S)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(A||b)&&(b?E=self.location.href:typeof document!="undefined"&&document.currentScript&&(E=document.currentScript.src),typeof s!="undefined"&&s&&(E=s),E.indexOf("blob:")!==0?E=E.substr(0,E.lastIndexOf("/")+1):E="",v?(F=function(D,B){return O||(O=Dh()),G||(G=cd()),D=G.normalize(D),O.readFileSync(D,B?null:"utf8")},P=function(D){var B=F(D,!0);return B.buffer||(B=new Uint8Array(B)),Se(B.buffer),B}):(F=function(S){var D=new XMLHttpRequest;return D.open("GET",S,!1),D.send(null),D.responseText},b&&(P=function(S){var D=new XMLHttpRequest;return D.open("GET",S,!1),D.responseType="arraybuffer",D.send(null),new Uint8Array(D.response)}),_=function(S,D,B){var ee=new XMLHttpRequest;ee.open("GET",S,!0),ee.responseType="arraybuffer",ee.onload=function(){if(ee.status==200||ee.status==0&&ee.response){D(ee.response);return}B()},ee.onerror=B,ee.send(null)}),T=function(S){document.title=S});v&&typeof performance=="undefined"&&(global.performance=ER().performance);var z=u.print||console.log.bind(console),j=u.printErr||console.warn.bind(console);for(m in f)f.hasOwnProperty(m)&&(u[m]=f[m]);f=null,u.arguments&&(g=u.arguments),u.thisProgram&&(y=u.thisProgram),u.quit&&(x=u.quit);function W(S){W.shown||(W.shown={}),W.shown[S]||(W.shown[S]=1,j(S))}var Q=Atomics.load,ne=Atomics.store,oe=Atomics.compareExchange,Z;u.wasmBinary&&(Z=u.wasmBinary);var ae=u.noExitRuntime||!0;typeof WebAssembly!="object"&&qr("no native wasm support detected");var re,me,be=!1,Ne;function Se(S,D){S||qr("Assertion failed: "+D)}function Pe(S){var D=u["_"+S];return Se(D,"Cannot call unknown function "+S+", make sure it is exported"),D}function ze(S,D,B,ee,xe){var ye={string:function(zn){var su=0;if(zn!=null&&zn!==0){var j5=(zn.length<<2)+1;su=eu(j5),lt(zn,su,j5)}return su},array:function(zn){var su=eu(zn.length);return Dt(zn,su),su}};function Ae(zn){return D==="string"?et(zn):D==="boolean"?Boolean(zn):zn}var Ee=Pe(S),ft=[],gn=0;if(ee)for(var nn=0;nn<ee.length;nn++){var Ea=ye[B[nn]];Ea?(gn===0&&(gn=rd()),ft[nn]=Ea(ee[nn])):ft[nn]=ee[nn]}var nu=Ee.apply(null,ft);return nu=Ae(nu),gn!==0&&Ql(gn),nu}function Qe(S,D,B,ee){B=B||[];var xe=B.every(function(Ae){return Ae==="number"}),ye=D!=="string";return ye&&xe&&!ee?Pe(S):function(){return ze(S,D,B,arguments,ee)}}function Ze(S,D,B){for(var ee=D+B,xe="";!(D>=ee);){var ye=S[D++];if(!ye)return xe;if(!(ye&128)){xe+=String.fromCharCode(ye);continue}var Ae=S[D++]&63;if((ye&224)==192){xe+=String.fromCharCode((ye&31)<<6|Ae);continue}var Ee=S[D++]&63;if((ye&240)==224?ye=(ye&15)<<12|Ae<<6|Ee:ye=(ye&7)<<18|Ae<<12|Ee<<6|S[D++]&63,ye<65536)xe+=String.fromCharCode(ye);else{var ft=ye-65536;xe+=String.fromCharCode(55296|ft>>10,56320|ft&1023)}}return xe}function et(S,D){return S?Ze(o(),S,D):""}function yt(S,D,B,ee){if(!(ee>0))return 0;for(var xe=B,ye=B+ee-1,Ae=0;Ae<S.length;++Ae){var Ee=S.charCodeAt(Ae);if(Ee>=55296&&Ee<=57343){var ft=S.charCodeAt(++Ae);Ee=65536+((Ee&1023)<<10)|ft&1023}if(Ee<=127){if(B>=ye)break;D[B++]=Ee}else if(Ee<=2047){if(B+1>=ye)break;D[B++]=192|Ee>>6,D[B++]=128|Ee&63}else if(Ee<=65535){if(B+2>=ye)break;D[B++]=224|Ee>>12,D[B++]=128|Ee>>6&63,D[B++]=128|Ee&63}else{if(B+3>=ye)break;D[B++]=240|Ee>>18,D[B++]=128|Ee>>12&63,D[B++]=128|Ee>>6&63,D[B++]=128|Ee&63}}return D[B]=0,B-xe}function lt(S,D,B){return yt(S,o(),D,B)}function At(S){for(var D=0,B=0;B<S.length;++B){var ee=S.charCodeAt(B);ee>=55296&&ee<=57343&&(ee=65536+((ee&1023)<<10)|S.charCodeAt(++B)&1023),ee<=127?++D:ee<=2047?D+=2:ee<=65535?D+=3:D+=4}return D}function Dt(S,D){a().set(S,D)}function ts(S,D){return S%D>0&&(S+=D-S%D),S}var ut,gs,In,Xs,ns,ys,_s,Ks,Ds;function ss(S){ut=S,u.HEAP8=gs=new Int8Array(S),u.HEAP16=Xs=new Int16Array(S),u.HEAP32=ys=new Int32Array(S),u.HEAPU8=In=new Uint8Array(S),u.HEAPU16=ns=new Uint16Array(S),u.HEAPU32=_s=new Uint32Array(S),u.HEAPF32=Ks=new Float32Array(S),u.HEAPF64=Ds=new Float64Array(S)}var wa=u.INITIAL_MEMORY||16777216;if(I)re=u.wasmMemory,ut=u.buffer;else if(u.wasmMemory)re=u.wasmMemory;else if(re=new WebAssembly.Memory({initial:wa/65536,maximum:2147483648/65536,shared:!0}),!(re.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");re&&(ut=re.buffer),wa=ut.byteLength,ss(ut);var En,ka=[],Ps=[],qc=[],Xc=[],jr=[],nh=!1,Z0=!1;I||Ps.push({func:function(){bh()}});function sh(){if(!I){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)Y0(u.preRun.shift());Xl(ka)}}function rh(){nh=!0,!I&&Xl(Ps)}function ah(){I||Xl(qc)}function rs(){I||(Z0=!0)}function oh(){if(!I){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)J0(u.postRun.shift());Xl(jr)}}function Y0(S){ka.unshift(S)}function J0(S){jr.unshift(S)}var Zs=0,Kc=null,ui=null;function Q0(S){Se(!I,"addRunDependency cannot be used in a pthread worker"),Zs++,u.monitorRunDependencies&&u.monitorRunDependencies(Zs)}function eg(S){if(Zs--,u.monitorRunDependencies&&u.monitorRunDependencies(Zs),Zs==0&&(Kc!==null&&(clearInterval(Kc),Kc=null),ui)){var D=ui;ui=null,D()}}u.preloadedImages={},u.preloadedAudios={};function qr(S){u.onAbort&&u.onAbort(S),I&&console.error("Pthread aborting at "+new Error().stack),S+="",j(S),be=!0,Ne=1,S="abort("+S+"). Build with -s ASSERTIONS=1 for more info.";var D=new WebAssembly.RuntimeError(S);throw p(D),D}function ci(S,D){return String.prototype.startsWith?S.startsWith(D):S.indexOf(D)===0}var tg="data:application/octet-stream;base64,";function ih(S){return ci(S,tg)}var ng="file://";function lh(S){return ci(S,ng)}var as="tfjs-backend-wasm-threaded-simd.wasm";ih(as)||(as=R(as));function sg(S){try{if(S==as&&Z)return new Uint8Array(Z);if(P)return P(S);throw"both async and sync fetching of the wasm failed"}catch(D){qr(D)}}function uh(){if(!Z&&(A||b)){if(typeof fetch=="function"&&!lh(as))return fetch(as,{credentials:"same-origin"}).then(function(S){if(!S.ok)throw"failed to load wasm binary file at '"+as+"'";return S.arrayBuffer()}).catch(function(){return sg(as)});if(_)return new Promise(function(S,D){_(as,function(B){S(new Uint8Array(B))},D)})}return Promise.resolve().then(function(){return sg(as)})}function rg(){var S={a:Zg};function D(Ae,Ee){var ft=Ae.exports;if(u.asm=ft,En=u.asm.nb,me=Ee,!I){var gn=De.unusedWorkers.length;De.unusedWorkers.forEach(function(nn){De.loadWasmModuleToWorker(nn,function(){--gn||eg("wasm-instantiate")})})}}I||Q0("wasm-instantiate");function B(Ae){D(Ae.instance,Ae.module)}function ee(Ae){return uh().then(function(Ee){return WebAssembly.instantiate(Ee,S)}).then(Ae,function(Ee){j("failed to asynchronously prepare wasm: "+Ee),qr(Ee)})}function xe(){return!Z&&typeof WebAssembly.instantiateStreaming=="function"&&!ih(as)&&!lh(as)&&typeof fetch=="function"?fetch(as,{credentials:"same-origin"}).then(function(Ae){var Ee=WebAssembly.instantiateStreaming(Ae,S);return Ee.then(B,function(ft){return j("wasm streaming compile failed: "+ft),j("falling back to ArrayBuffer instantiation"),ee(B)})}):ee(B)}if(u.instantiateWasm)try{var ye=u.instantiateWasm(S,D);return ye}catch(Ae){return j("Module.instantiateWasm callback failed with error: "+Ae),!1}return xe().catch(p),{}}var ch={10216:function(){throw"Canceled!"},10234:function(S,D){setTimeout(function(){B5(S,D)},0)}};function ag(){De.initRuntime()}function Xl(S){for(;S.length>0;){var D=S.shift();if(typeof D=="function"){D(u);continue}var B=D.func;typeof B=="number"?D.arg===void 0?En.get(B)():En.get(B)(D.arg):B(D.arg===void 0?null:D.arg)}}var Ia={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Zc(S,D){if(S<=0||S>a().length||S&!0||D<0)return-28;if(D==0)return 0;D>=2147483647&&(D=1/0);var B=Atomics.load(i(),tu>>2),ee=0;if(B==S){var xe=Atomics.compareExchange(i(),tu>>2,B,0);if(xe==B&&(--D,ee=1,D<=0))return 1}var ye=Atomics.notify(i(),S>>2,D);if(ye>=0)return ye+ee;throw"Atomics.notify returned an unexpected value "+ye}u._emscripten_futex_wake=Zc;function og(S){if(I)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in killThread!";i()[S+12>>2]=0;var D=De.pthreads[S];D.worker.terminate(),De.freeThreadData(D),De.runningWorkers.splice(De.runningWorkers.indexOf(D.worker),1),D.worker.pthread=void 0}function ig(S){if(I)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cancelThread!";var D=De.pthreads[S];D.worker.postMessage({cmd:"cancel"})}function dh(S){if(I)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cleanupThread!";var D=De.pthreads[S];if(D){i()[S+12>>2]=0;var B=D.worker;De.returnWorkerToPool(B)}}var De={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var S=8,D=0;D<S;++D)De.allocateUnusedWorker()},initRuntime:function(){for(var S=pi(228),D=0;D<228/4;++D)l()[S/4+D]=0;i()[S+12>>2]=S;var B=S+152;i()[B>>2]=B;for(var ee=pi(512),D=0;D<128;++D)l()[ee/4+D]=0;Atomics.store(l(),S+100>>2,ee),Atomics.store(l(),S+40>>2,S),b2(S,!b,1),z5(S)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;De.threadExitHandlers.length>0;)De.threadExitHandlers.pop()();I&&Na()&&M5()},runExitHandlersAndDeinitThread:function(S,D){Atomics.store(l(),S+56>>2,1),Atomics.store(l(),S+60>>2,0),De.runExitHandlers(),Atomics.store(l(),S+4>>2,D),Atomics.store(l(),S+0>>2,1),Zc(S+0,2147483647),b2(0,0,0)},threadExit:function(S){var D=Na();D&&(De.runExitHandlersAndDeinitThread(D,S),I&&postMessage({cmd:"exit"}))},threadCancel:function(){De.runExitHandlersAndDeinitThread(Na(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var S in De.pthreads){var D=De.pthreads[S];D&&D.worker&&De.returnWorkerToPool(D.worker)}De.pthreads={};for(var B=0;B<De.unusedWorkers.length;++B){var ee=De.unusedWorkers[B];ee.terminate()}De.unusedWorkers=[];for(var B=0;B<De.runningWorkers.length;++B){var ee=De.runningWorkers[B],D=ee.pthread;De.freeThreadData(D),ee.terminate()}De.runningWorkers=[]},freeThreadData:function(S){if(!!S){if(S.threadInfoStruct){var D=i()[S.threadInfoStruct+100>>2];i()[S.threadInfoStruct+100>>2]=0,sd(D),sd(S.threadInfoStruct)}S.threadInfoStruct=0,S.allocatedOwnStack&&S.stackBase&&sd(S.stackBase),S.stackBase=0,S.worker&&(S.worker.pthread=null)}},returnWorkerToPool:function(S){De.runWithoutMainThreadQueuedCalls(function(){delete De.pthreads[S.pthread.threadInfoStruct],De.unusedWorkers.push(S),De.runningWorkers.splice(De.runningWorkers.indexOf(S),1),De.freeThreadData(S.pthread),S.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(S){i()[H5>>2]=0;try{S()}finally{i()[H5>>2]=1}},receiveObjectTransfer:function(S){},loadWasmModuleToWorker:function(S,D){S.onmessage=function(B){var ee=B.data,xe=ee.cmd;if(S.pthread&&(De.currentProxiedOperationCallerThread=S.pthread.threadInfoStruct),ee.targetThread&&ee.targetThread!=Na()){var ye=De.pthreads[ee.targetThread];ye?ye.worker.postMessage(B.data,ee.transferList):console.error('Internal error! Worker sent a message "'+xe+'" to target pthread '+ee.targetThread+", but that thread no longer exists!"),De.currentProxiedOperationCallerThread=void 0;return}if(xe==="processQueuedMainThreadWork")Sh();else if(xe==="spawnThread")Ah(B.data);else if(xe==="cleanupThread")dh(ee.thread);else if(xe==="killThread")og(ee.thread);else if(xe==="cancelThread")ig(ee.thread);else if(xe==="loaded")S.loaded=!0,D&&D(S),S.runPthread&&(S.runPthread(),delete S.runPthread);else if(xe==="print")z("Thread "+ee.threadId+": "+ee.text);else if(xe==="printErr")j("Thread "+ee.threadId+": "+ee.text);else if(xe==="alert")alert("Thread "+ee.threadId+": "+ee.text);else if(xe==="exit"){var Ae=S.pthread&&Atomics.load(l(),S.pthread.threadInfoStruct+64>>2);Ae&&De.returnWorkerToPool(S)}else if(xe==="exitProcess")try{nR(ee.returnCode)}catch(Ee){if(Ee instanceof ad)return;throw Ee}else xe==="cancelDone"?De.returnWorkerToPool(S):xe==="objectTransfer"?De.receiveObjectTransfer(B.data):B.data.target==="setimmediate"?S.postMessage(B.data):j("worker sent an unknown command "+xe);De.currentProxiedOperationCallerThread=void 0},S.onerror=function(B){j("pthread sent an error! "+B.filename+":"+B.lineno+": "+B.message)},v&&(S.on("message",function(B){S.onmessage({data:B})}),S.on("error",function(B){S.onerror(B)}),S.on("exit",function(B){})),S.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||s,wasmMemory:re,wasmModule:me})},allocateUnusedWorker:function(){var S=R("tfjs-backend-wasm-threaded-simd.worker.js");De.unusedWorkers.push(new Worker(S))},getNewWorker:function(){return De.unusedWorkers.length==0&&(De.allocateUnusedWorker(),De.loadWasmModuleToWorker(De.unusedWorkers[0])),De.unusedWorkers.length>0?De.unusedWorkers.pop():null},busySpinWait:function(S){for(var D=performance.now()+S;performance.now()<D;);}};function lg(S,D){U5(S,D),Ql(S)}u.establishStackSpace=lg;function ug(){return ae}u.getNoExitRuntime=ug;function cg(S,D){return En.get(S)(D)}u.invokeEntryPoint=cg;function dg(S,D,B,ee){qr("Assertion failed: "+et(S)+", at: "+[D?et(D):"unknown filename",B,ee?et(ee):"unknown function"])}function pg(S,D){var B=_main(S,D)}var di;v?di=function(){var S=process.hrtime();return S[0]*1e3+S[1]/1e6}:I?di=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?di=dateNow:di=function(){return performance.now()};function hg(S){return i()[F5()>>2]=S,S}function fg(S,D){if(I)return Sa(1,1,S,D)}function mg(S,D){if(S==D)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:S,cmd:"processThreadQueue"});else{var B=De.pthreads[S],ee=B&&B.worker;if(!ee)return;ee.postMessage({cmd:"processThreadQueue"})}return 1}function gg(){qr()}function yg(S,D,B){var ee=vg(D,B);return ch[S].apply(null,ee)}function Ag(S,D){}function ph(S,D,B){if(S<=0||S>a().length||S&!0)return-28;if(A){if(Atomics.load(i(),S>>2)!=D)return-6;for(var xe=performance.now(),ye=xe+B,Ae=Atomics.exchange(i(),tu>>2,S);;){if(xe=performance.now(),xe>ye)return Ae=Atomics.exchange(i(),tu>>2,0),-73;if(Ae=Atomics.exchange(i(),tu>>2,0),Ae==0)break;if(Sh(),Atomics.load(i(),S>>2)!=D)return-6;Ae=Atomics.exchange(i(),tu>>2,S)}return 0}else{var ee=Atomics.wait(i(),S>>2,D,B);if(ee==="timed-out")return-73;if(ee==="not-equal")return-6;if(ee==="ok")return 0;throw"Atomics.wait returned an unexpected value "+ee}}function xg(S,D,B){o().copyWithin(S,D,D+B)}function bg(){return v?RR().cpus().length:navigator.hardwareConcurrency}function Sa(S,D){for(var B=arguments.length-2,ee=rd(),xe=B,ye=eu(xe*8),Ae=ye>>3,Ee=0;Ee<B;Ee++){var ft=arguments[2+Ee];c()[Ae+Ee]=ft}var gn=V5(S,xe,ye,D);return Ql(ee),gn}var Yc=[],Jc=[];function vg(S,D){Jc.length=0;var B;for(D>>=2;B=o()[S++];){var ee=B<105;ee&&D&1&&D++,Jc.push(ee?c()[D++>>1]:i()[D]),++D}return Jc}function wg(S,D,B){Yc.length=D;for(var ee=B>>3,xe=0;xe<D;xe++)Yc[xe]=c()[ee+xe];var ye=S<0,Ae=ye?ch[-S-1]:Kg[S];return Ae.apply(null,Yc)}function kg(){return o().length}function Ig(S){try{return re.grow(S-ut.byteLength+65535>>>16),ss(re.buffer),1}catch(D){}}function Sg(S){var D=kg();if(S<=D)return!1;var B=2147483648;if(S>B)return!1;for(var ee=1;ee<=4;ee*=2){var xe=D*(1+.2/ee);xe=Math.min(xe,S+100663296);var ye=Math.min(B,ts(Math.max(S,xe),65536)),Ae=Ig(ye);if(Ae)return!0}return!1}var He={inEventHandler:0,removeAllEventListeners:function(){for(var S=He.eventHandlers.length-1;S>=0;--S)He._removeHandler(S);He.eventHandlers=[],He.deferredCalls=[]},registerRemoveEventListeners:function(){He.removeEventListenersRegistered||(Xc.push(He.removeAllEventListeners),He.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(S,D,B){function ee(Ae,Ee){if(Ae.length!=Ee.length)return!1;for(var ft in Ae)if(Ae[ft]!=Ee[ft])return!1;return!0}for(var xe in He.deferredCalls){var ye=He.deferredCalls[xe];if(ye.targetFunction==S&&ee(ye.argsList,B))return}He.deferredCalls.push({targetFunction:S,precedence:D,argsList:B}),He.deferredCalls.sort(function(Ae,Ee){return Ae.precedence<Ee.precedence})},removeDeferredCalls:function(S){for(var D=0;D<He.deferredCalls.length;++D)He.deferredCalls[D].targetFunction==S&&(He.deferredCalls.splice(D,1),--D)},canPerformEventHandlerRequests:function(){return He.inEventHandler&&He.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!He.canPerformEventHandlerRequests())for(var S=0;S<He.deferredCalls.length;++S){var D=He.deferredCalls[S];He.deferredCalls.splice(S,1),--S,D.targetFunction.apply(null,D.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(S,D){for(var B=0;B<He.eventHandlers.length;++B)He.eventHandlers[B].target==S&&(!D||D==He.eventHandlers[B].eventTypeString)&&He._removeHandler(B--)},_removeHandler:function(S){var D=He.eventHandlers[S];D.target.removeEventListener(D.eventTypeString,D.eventListenerFunc,D.useCapture),He.eventHandlers.splice(S,1)},registerOrRemoveHandler:function(S){var D=function(xe){++He.inEventHandler,He.currentEventHandler=S,He.runDeferredCalls(),S.handlerFunc(xe),He.runDeferredCalls(),--He.inEventHandler};if(S.callbackfunc)S.eventListenerFunc=D,S.target.addEventListener(S.eventTypeString,D,S.useCapture),He.eventHandlers.push(S),He.registerRemoveEventListeners();else for(var B=0;B<He.eventHandlers.length;++B)He.eventHandlers[B].target==S.target&&He.eventHandlers[B].eventTypeString==S.eventTypeString&&He._removeHandler(B--)},queueEventHandlerOnThread_iiii:function(S,D,B,ee,xe){var ye=rd(),Ae=eu(12);i()[Ae>>2]=B,i()[Ae+4>>2]=ee,i()[Ae+8>>2]=xe,x2(0,S,637534208,D,ee,Ae),Ql(ye)},getTargetThreadForEventCallback:function(S){switch(S){case 1:return 0;case 2:return De.currentProxiedOperationCallerThread;default:return S}},getNodeNameForTarget:function(S){return S?S==window?"#window":S==screen?"#screen":S&&S.nodeName?S.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Cg(S){var D=At(S)+1,B=pi(D);return lt(S,B,D),B}function Tg(S,D,B,ee){var xe=rd(),ye=eu(12),Ae=0;D&&(Ae=Cg(D)),i()[ye>>2]=Ae,i()[ye+4>>2]=B,i()[ye+8>>2]=ee,x2(0,S,657457152,0,Ae,ye),Ql(xe)}function Ng(S,D,B,ee){D=D?et(D):"",Tg(S,D,B,ee)}function Eg(S){return S>2?et(S):S}var Rg=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function _g(S){S=Eg(S);var D=Rg[S]||(typeof document!="undefined"?document.querySelector(S):void 0);return D}function Qc(S){return _g(S)}function hh(S,D,B){var ee=Qc(S);if(!ee)return-4;if(ee.canvasSharedPtr&&(i()[ee.canvasSharedPtr>>2]=D,i()[ee.canvasSharedPtr+4>>2]=B),ee.offscreenCanvas||!ee.controlTransferredOffscreen){ee.offscreenCanvas&&(ee=ee.offscreenCanvas);var xe=!1;if(ee.GLctxObject&&ee.GLctxObject.GLctx){var ye=ee.GLctxObject.GLctx.getParameter(2978);xe=ye[0]===0&&ye[1]===0&&ye[2]===ee.width&&ye[3]===ee.height}ee.width=D,ee.height=B,xe&&ee.GLctxObject.GLctx.viewport(0,0,D,B)}else if(ee.canvasSharedPtr){var Ae=i()[ee.canvasSharedPtr+8>>2];return Ng(Ae,S,D,B),1}else return-4;return 0}function fh(S,D,B){return I?Sa(2,1,S,D,B):hh(S,D,B)}function Dg(S,D,B){var ee=Qc(S);return ee?hh(S,D,B):fh(S,D,B)}function Pg(S){}function $g(S,D){}function Fg(S){var D=S.getExtension("ANGLE_instanced_arrays");if(D)return S.vertexAttribDivisor=function(B,ee){D.vertexAttribDivisorANGLE(B,ee)},S.drawArraysInstanced=function(B,ee,xe,ye){D.drawArraysInstancedANGLE(B,ee,xe,ye)},S.drawElementsInstanced=function(B,ee,xe,ye,Ae){D.drawElementsInstancedANGLE(B,ee,xe,ye,Ae)},1}function Og(S){var D=S.getExtension("OES_vertex_array_object");if(D)return S.createVertexArray=function(){return D.createVertexArrayOES()},S.deleteVertexArray=function(B){D.deleteVertexArrayOES(B)},S.bindVertexArray=function(B){D.bindVertexArrayOES(B)},S.isVertexArray=function(B){return D.isVertexArrayOES(B)},1}function Mg(S){var D=S.getExtension("WEBGL_draw_buffers");if(D)return S.drawBuffers=function(B,ee){D.drawBuffersWEBGL(B,ee)},1}function zg(S){return!!(S.multiDrawWebgl=S.getExtension("WEBGL_multi_draw"))}var pt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(D){pt.lastError||(pt.lastError=D)},getNewId:function(S){for(var D=pt.counter++,B=S.length;B<D;B++)S[B]=null;return D},getSource:function(S,D,B,ee){for(var xe="",ye=0;ye<D;++ye){var Ae=ee?i()[ee+ye*4>>2]:-1;xe+=et(i()[B+ye*4>>2],Ae<0?void 0:Ae)}return xe},createContext:function(S,D){var B=S.getContext("webgl",D);if(!B)return 0;var ee=pt.registerContext(B,D);return ee},registerContext:function(S,D){var B=pi(8);i()[B+4>>2]=Na();var ee={handle:B,attributes:D,version:D.majorVersion,GLctx:S};return S.canvas&&(S.canvas.GLctxObject=ee),pt.contexts[B]=ee,(typeof D.enableExtensionsByDefault=="undefined"||D.enableExtensionsByDefault)&&pt.initExtensions(ee),B},makeContextCurrent:function(S){return pt.currentContext=pt.contexts[S],u.ctx=Ca=pt.currentContext&&pt.currentContext.GLctx,!(S&&!Ca)},getContext:function(S){return pt.contexts[S]},deleteContext:function(S){pt.currentContext===pt.contexts[S]&&(pt.currentContext=null),typeof He=="object"&&He.removeAllHandlersOnTarget(pt.contexts[S].GLctx.canvas),pt.contexts[S]&&pt.contexts[S].GLctx.canvas&&(pt.contexts[S].GLctx.canvas.GLctxObject=void 0),sd(pt.contexts[S].handle),pt.contexts[S]=null},initExtensions:function(S){if(S||(S=pt.currentContext),!S.initExtensionsDone){S.initExtensionsDone=!0;var D=S.GLctx;Fg(D),Og(D),Mg(D),D.disjointTimerQueryExt=D.getExtension("EXT_disjoint_timer_query"),zg(D);var B=D.getSupportedExtensions()||[];B.forEach(function(ee){ee.indexOf("lose_context")<0&&ee.indexOf("debug")<0&&D.getExtension(ee)})}},populateUniformTable:function(S){for(var D=pt.programs[S],B=pt.programInfos[S]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},ee=B.uniforms,xe=Ca.getProgramParameter(D,35718),ye=0;ye<xe;++ye){var Ae=Ca.getActiveUniform(D,ye),Ee=Ae.name;B.maxUniformLength=Math.max(B.maxUniformLength,Ee.length+1),Ee.slice(-1)=="]"&&(Ee=Ee.slice(0,Ee.lastIndexOf("[")));var ft=Ca.getUniformLocation(D,Ee);if(ft){var gn=pt.getNewId(pt.uniforms);ee[Ee]=[Ae.size,gn],pt.uniforms[gn]=ft;for(var nn=1;nn<Ae.size;++nn){var Ea=Ee+"["+nn+"]";ft=Ca.getUniformLocation(D,Ea),gn=pt.getNewId(pt.uniforms),pt.uniforms[gn]=ft}}}}},Lg=["default","low-power","high-performance"];function Bg(S,D){var B=D>>2,ee=i()[B+(24>>2)],xe={alpha:!!i()[B+(0>>2)],depth:!!i()[B+(4>>2)],stencil:!!i()[B+(8>>2)],antialias:!!i()[B+(12>>2)],premultipliedAlpha:!!i()[B+(16>>2)],preserveDrawingBuffer:!!i()[B+(20>>2)],powerPreference:Lg[ee],failIfMajorPerformanceCaveat:!!i()[B+(28>>2)],majorVersion:i()[B+(32>>2)],minorVersion:i()[B+(36>>2)],enableExtensionsByDefault:i()[B+(40>>2)],explicitSwapControl:i()[B+(44>>2)],proxyContextToMainThread:i()[B+(48>>2)],renderViaOffscreenBackBuffer:i()[B+(52>>2)]},ye=Qc(S);if(!ye||xe.explicitSwapControl)return 0;var Ae=pt.createContext(ye,xe);return Ae}function Wg(S,D){return Bg(S,D)}var Kl={mappings:{},buffers:[null,[],[]],printChar:function(S,D){var B=Kl.buffers[S];D===0||D===10?((S===1?z:j)(Ze(B,0)),B.length=0):B.push(D)},varargs:void 0,get:function(){Kl.varargs+=4;var S=i()[Kl.varargs-4>>2];return S},getStr:function(S){var D=et(S);return D},get64:function(S,D){return S}};function mh(S){return I?Sa(3,1,S):0}function gh(S,D,B,ee,xe){if(I)return Sa(4,1,S,D,B,ee,xe)}function yh(S,D,B,ee){if(I)return Sa(5,1,S,D,B,ee);for(var xe=0,ye=0;ye<B;ye++){for(var Ae=i()[D+ye*8>>2],Ee=i()[D+(ye*8+4)>>2],ft=0;ft<Ee;ft++)Kl.printChar(S,o()[Ae+ft]);xe+=Ee}return i()[ee>>2]=xe,0}function Vg(S){var D=De.threadExitHandlers.pop();S&&D()}function Ug(S,D){De.threadExitHandlers.push(function(){En.get(S)(D)})}function Ah(S){if(I)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var D=De.getNewWorker();if(D.pthread!==void 0)throw"Internal error!";if(!S.pthread_ptr)throw"Internal error, no pthread ptr!";De.runningWorkers.push(D);for(var B=pi(128*4),ee=0;ee<128;++ee)i()[B+ee*4>>2]=0;var xe=S.stackBase+S.stackSize,ye=De.pthreads[S.pthread_ptr]={worker:D,stackBase:S.stackBase,stackSize:S.stackSize,allocatedOwnStack:S.allocatedOwnStack,threadInfoStruct:S.pthread_ptr},Ae=ye.threadInfoStruct>>2;Atomics.store(l(),Ae+(64>>2),S.detached),Atomics.store(l(),Ae+(100>>2),B),Atomics.store(l(),Ae+(40>>2),ye.threadInfoStruct),Atomics.store(l(),Ae+(80>>2),S.stackSize),Atomics.store(l(),Ae+(76>>2),xe),Atomics.store(l(),Ae+(104>>2),S.stackSize),Atomics.store(l(),Ae+(104+8>>2),xe),Atomics.store(l(),Ae+(104+12>>2),S.detached);var Ee=O5(),ft=Ee+40;Atomics.store(l(),Ae+(172>>2),ft),D.pthread=ye;var gn={cmd:"run",start_routine:S.startRoutine,arg:S.arg,threadInfoStruct:S.pthread_ptr,stackBase:S.stackBase,stackSize:S.stackSize};D.runPthread=function(){gn.time=performance.now(),D.postMessage(gn,S.transferList)},D.loaded&&(D.runPthread(),delete D.runPthread)}function Gg(S,D,B,ee){if(typeof SharedArrayBuffer=="undefined")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!S)return j("pthread_create called with a null thread pointer!"),28;var xe=[],ye=0;if(I&&(xe.length===0||ye))return W5(687865856,S,D,B,ee);if(ye)return ye;var Ae=0,Ee=0,ft=0;D&&D!=-1?(Ae=i()[D>>2],Ae+=81920,Ee=i()[D+8>>2],ft=i()[D+12>>2]!==0):Ae=2097152;var gn=Ee==0;gn?Ee=G5(16,Ae):(Ee-=Ae,Se(Ee>0));for(var nn=pi(228),Ea=0;Ea<228>>2;++Ea)l()[(nn>>2)+Ea]=0;i()[S>>2]=nn,i()[nn+12>>2]=nn;var nu=nn+152;i()[nu>>2]=nu;var zn={stackBase:Ee,stackSize:Ae,allocatedOwnStack:gn,detached:ft,startRoutine:B,pthread_ptr:nn,arg:ee,transferList:xe};return I?(zn.cmd="spawnThread",postMessage(zn,xe)):Ah(zn),0}function Hg(){if(!!I){var S=Na();if(!!S){var D=Atomics.load(l(),S+56>>2);if(!D){var B=Atomics.load(l(),S+0>>2);if(B==2)throw"Canceled!"}}}}function jg(){v||b||W("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function qg(S,D,B){if(!S)return j("pthread_join attempted on a null thread pointer!"),Ia.ESRCH;if(I&&Na()==S)return j("PThread "+S+" is attempting to join to itself!"),Ia.EDEADLK;if(!I&&L5()==S)return j("Main thread "+S+" is attempting to join to itself!"),Ia.EDEADLK;var ee=i()[S+12>>2];if(ee!==S)return j("pthread_join attempted on thread "+S+", which does not point to a valid thread, or does not exist anymore!"),Ia.ESRCH;var xe=Atomics.load(l(),S+64>>2);if(xe)return j("Attempted to join thread "+S+", which was already detached!"),Ia.EINVAL;for(B&&jg();;){var ye=Atomics.load(l(),S+0>>2);if(ye==1){var Ae=Atomics.load(l(),S+4>>2);return D&&(i()[D>>2]=Ae),Atomics.store(l(),S+64>>2,1),I?postMessage({cmd:"cleanupThread",thread:S}):dh(S),0}if(!B)return Ia.EBUSY;Hg(),I||Sh(),ph(S+0,ye,I?100:1)}}function Xg(S,D){return qg(S,D,!0)}function xh(S){if(I)return Sa(6,1,S);switch(S){case 30:return 16384;case 85:var D=2147483648;return D/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return hg(28),-1}I||De.initMainThreadBlock();var Ca,Kg=[null,fg,fh,mh,gh,yh,xh],Zg={e:dg,r:pg,x:mg,b:gg,y:yg,j:Ag,d:ph,c:Zc,f:di,p:xg,A:bg,u:wg,q:Sg,v:Dg,i:Pg,s:$g,w:Wg,l:mh,n:gh,g:yh,o:ag,a:re||u.wasmMemory,z:Vg,k:Ug,h:Gg,m:Xg,t:xh},$5=rg(),bh=u.___wasm_call_ctors=function(){return(bh=u.___wasm_call_ctors=u.asm.B).apply(null,arguments)},Yg=u._init=function(){return(Yg=u._init=u.asm.C).apply(null,arguments)},Jg=u._init_with_threads_count=function(){return(Jg=u._init_with_threads_count=u.asm.D).apply(null,arguments)},Qg=u._get_threads_count=function(){return(Qg=u._get_threads_count=u.asm.E).apply(null,arguments)},e2=u._register_tensor=function(){return(e2=u._register_tensor=u.asm.F).apply(null,arguments)},t2=u._dispose_data=function(){return(t2=u._dispose_data=u.asm.G).apply(null,arguments)},n2=u._dispose=function(){return(n2=u._dispose=u.asm.H).apply(null,arguments)},s2=u._Abs=function(){return(s2=u._Abs=u.asm.I).apply(null,arguments)},r2=u._Add=function(){return(r2=u._Add=u.asm.J).apply(null,arguments)},a2=u._AddN=function(){return(a2=u._AddN=u.asm.K).apply(null,arguments)},o2=u._All=function(){return(o2=u._All=u.asm.L).apply(null,arguments)},i2=u._Any=function(){return(i2=u._Any=u.asm.M).apply(null,arguments)},l2=u._ArgMax=function(){return(l2=u._ArgMax=u.asm.N).apply(null,arguments)},u2=u._AvgPool=function(){return(u2=u._AvgPool=u.asm.O).apply(null,arguments)},c2=u._BatchMatMul=function(){return(c2=u._BatchMatMul=u.asm.P).apply(null,arguments)},d2=u._Ceil=function(){return(d2=u._Ceil=u.asm.Q).apply(null,arguments)},p2=u._ClipByValue=function(){return(p2=u._ClipByValue=u.asm.R).apply(null,arguments)},h2=u._Conv2D=function(){return(h2=u._Conv2D=u.asm.S).apply(null,arguments)},f2=u._Conv2DBackpropInput=function(){return(f2=u._Conv2DBackpropInput=u.asm.T).apply(null,arguments)},m2=u._Cos=function(){return(m2=u._Cos=u.asm.U).apply(null,arguments)},g2=u._Cosh=function(){return(g2=u._Cosh=u.asm.V).apply(null,arguments)},vh=u._CropAndResize=function(){return(vh=u._CropAndResize=u.asm.W).apply(null,arguments)},wh=u._Cumsum=function(){return(wh=u._Cumsum=u.asm.X).apply(null,arguments)},ed=u._DepthToSpace=function(){return(ed=u._DepthToSpace=u.asm.Y).apply(null,arguments)},Zl=u._DepthwiseConv2dNative=function(){return(Zl=u._DepthwiseConv2dNative=u.asm.Z).apply(null,arguments)},y2=u._Elu=function(){return(y2=u._Elu=u.asm._).apply(null,arguments)},td=u._Equal=function(){return(td=u._Equal=u.asm.$).apply(null,arguments)},Yl=u._Exp=function(){return(Yl=u._Exp=u.asm.aa).apply(null,arguments)},Jl=u._FlipLeftRight=function(){return(Jl=u._FlipLeftRight=u.asm.ba).apply(null,arguments)},A2=u._Floor=function(){return(A2=u._Floor=u.asm.ca).apply(null,arguments)},se=u._FloorDiv=function(){return(se=u._FloorDiv=u.asm.da).apply(null,arguments)},le=u._FusedBatchNorm=function(){return(le=u._FusedBatchNorm=u.asm.ea).apply(null,arguments)},Ce=u._FusedConv2D=function(){return(Ce=u._FusedConv2D=u.asm.fa).apply(null,arguments)},ct=u._FusedDepthwiseConv2D=function(){return(ct=u._FusedDepthwiseConv2D=u.asm.ga).apply(null,arguments)},Vt=u._Gather=function(){return(Vt=u._Gather=u.asm.ha).apply(null,arguments)},Pt=u._GatherNd=function(){return(Pt=u._GatherNd=u.asm.ia).apply(null,arguments)},tt=u._Greater=function(){return(tt=u._Greater=u.asm.ja).apply(null,arguments)},st=u._GreaterEqual=function(){return(st=u._GreaterEqual=u.asm.ka).apply(null,arguments)},Sn=u._LeakyRelu=function(){return(Sn=u._LeakyRelu=u.asm.la).apply(null,arguments)},Xr=u._Less=function(){return(Xr=u._Less=u.asm.ma).apply(null,arguments)},Kr=u._LessEqual=function(){return(Kr=u._LessEqual=u.asm.na).apply(null,arguments)},kh=u._Log=function(){return(kh=u._Log=u.asm.oa).apply(null,arguments)},nd=u._LogicalAnd=function(){return(nd=u._LogicalAnd=u.asm.pa).apply(null,arguments)},As=u._Max=function(){return(As=u._Max=u.asm.qa).apply(null,arguments)},Ta=u._MaxPool=function(){return(Ta=u._MaxPool=u.asm.ra).apply(null,arguments)},Ih=u._Maximum=function(){return(Ih=u._Maximum=u.asm.sa).apply(null,arguments)},uE=u._Mean=function(){return(uE=u._Mean=u.asm.ta).apply(null,arguments)},cE=u._Min=function(){return(cE=u._Min=u.asm.ua).apply(null,arguments)},dE=u._Minimum=function(){return(dE=u._Minimum=u.asm.va).apply(null,arguments)},pE=u._MirrorPad=function(){return(pE=u._MirrorPad=u.asm.wa).apply(null,arguments)},hE=u._Multiply=function(){return(hE=u._Multiply=u.asm.xa).apply(null,arguments)},fE=u._Neg=function(){return(fE=u._Neg=u.asm.ya).apply(null,arguments)},mE=u._NonMaxSuppressionV3=function(){return(mE=u._NonMaxSuppressionV3=u.asm.za).apply(null,arguments)},gE=u._NonMaxSuppressionV4=function(){return(gE=u._NonMaxSuppressionV4=u.asm.Aa).apply(null,arguments)},yE=u._NonMaxSuppressionV5=function(){return(yE=u._NonMaxSuppressionV5=u.asm.Ba).apply(null,arguments)},AE=u._NotEqual=function(){return(AE=u._NotEqual=u.asm.Ca).apply(null,arguments)},xE=u._OneHot=function(){return(xE=u._OneHot=u.asm.Da).apply(null,arguments)},bE=u._PadV2=function(){return(bE=u._PadV2=u.asm.Ea).apply(null,arguments)},vE=u._Pow=function(){return(vE=u._Pow=u.asm.Fa).apply(null,arguments)},wE=u._Prelu=function(){return(wE=u._Prelu=u.asm.Ga).apply(null,arguments)},kE=u._Prod=function(){return(kE=u._Prod=u.asm.Ha).apply(null,arguments)},IE=u._RealDiv=function(){return(IE=u._RealDiv=u.asm.Ia).apply(null,arguments)},SE=u._Relu=function(){return(SE=u._Relu=u.asm.Ja).apply(null,arguments)},CE=u._Relu6=function(){return(CE=u._Relu6=u.asm.Ka).apply(null,arguments)},TE=u._ResizeBilinear=function(){return(TE=u._ResizeBilinear=u.asm.La).apply(null,arguments)},NE=u._Reverse=function(){return(NE=u._Reverse=u.asm.Ma).apply(null,arguments)},EE=u._RotateWithOffset=function(){return(EE=u._RotateWithOffset=u.asm.Na).apply(null,arguments)},RE=u._Round=function(){return(RE=u._Round=u.asm.Oa).apply(null,arguments)},_E=u._Rsqrt=function(){return(_E=u._Rsqrt=u.asm.Pa).apply(null,arguments)},DE=u._ScatterNd=function(){return(DE=u._ScatterNd=u.asm.Qa).apply(null,arguments)},PE=u._SelectV2=function(){return(PE=u._SelectV2=u.asm.Ra).apply(null,arguments)},$E=u._Sigmoid=function(){return($E=u._Sigmoid=u.asm.Sa).apply(null,arguments)},FE=u._Sin=function(){return(FE=u._Sin=u.asm.Ta).apply(null,arguments)},OE=u._Softmax=function(){return(OE=u._Softmax=u.asm.Ua).apply(null,arguments)},ME=u._SparseFillEmptyRows=function(){return(ME=u._SparseFillEmptyRows=u.asm.Va).apply(null,arguments)},zE=u._SparseReshape=function(){return(zE=u._SparseReshape=u.asm.Wa).apply(null,arguments)},LE=u._SparseSegmentReduction=function(){return(LE=u._SparseSegmentReduction=u.asm.Xa).apply(null,arguments)},BE=u._Sqrt=function(){return(BE=u._Sqrt=u.asm.Ya).apply(null,arguments)},WE=u._Square=function(){return(WE=u._Square=u.asm.Za).apply(null,arguments)},VE=u._SquaredDifference=function(){return(VE=u._SquaredDifference=u.asm._a).apply(null,arguments)},UE=u._Step=function(){return(UE=u._Step=u.asm.$a).apply(null,arguments)},GE=u._StridedSlice=function(){return(GE=u._StridedSlice=u.asm.ab).apply(null,arguments)},HE=u._Sub=function(){return(HE=u._Sub=u.asm.bb).apply(null,arguments)},jE=u._Sum=function(){return(jE=u._Sum=u.asm.cb).apply(null,arguments)},qE=u._Tan=function(){return(qE=u._Tan=u.asm.db).apply(null,arguments)},XE=u._Tanh=function(){return(XE=u._Tanh=u.asm.eb).apply(null,arguments)},KE=u._Tile=function(){return(KE=u._Tile=u.asm.fb).apply(null,arguments)},ZE=u._TopK=function(){return(ZE=u._TopK=u.asm.gb).apply(null,arguments)},YE=u._Transform=function(){return(YE=u._Transform=u.asm.hb).apply(null,arguments)},JE=u._Transpose=function(){return(JE=u._Transpose=u.asm.ib).apply(null,arguments)},QE=u.__FusedMatMul=function(){return(QE=u.__FusedMatMul=u.asm.jb).apply(null,arguments)},pi=u._malloc=function(){return(pi=u._malloc=u.asm.kb).apply(null,arguments)},sd=u._free=function(){return(sd=u._free=u.asm.lb).apply(null,arguments)},F5=u.___errno_location=function(){return(F5=u.___errno_location=u.asm.mb).apply(null,arguments)},O5=u._emscripten_get_global_libc=function(){return(O5=u._emscripten_get_global_libc=u.asm.ob).apply(null,arguments)},Na=u._pthread_self=function(){return(Na=u._pthread_self=u.asm.pb).apply(null,arguments)},M5=u.___pthread_tsd_run_dtors=function(){return(M5=u.___pthread_tsd_run_dtors=u.asm.qb).apply(null,arguments)},Sh=u._emscripten_main_thread_process_queued_calls=function(){return(Sh=u._emscripten_main_thread_process_queued_calls=u.asm.rb).apply(null,arguments)},eR=u._emscripten_current_thread_process_queued_calls=function(){return(eR=u._emscripten_current_thread_process_queued_calls=u.asm.sb).apply(null,arguments)},z5=u._emscripten_register_main_browser_thread_id=function(){return(z5=u._emscripten_register_main_browser_thread_id=u.asm.tb).apply(null,arguments)},L5=u._emscripten_main_browser_thread_id=function(){return(L5=u._emscripten_main_browser_thread_id=u.asm.ub).apply(null,arguments)},B5=u.__emscripten_do_dispatch_to_thread=function(){return(B5=u.__emscripten_do_dispatch_to_thread=u.asm.vb).apply(null,arguments)},W5=u._emscripten_sync_run_in_main_thread_4=function(){return(W5=u._emscripten_sync_run_in_main_thread_4=u.asm.wb).apply(null,arguments)},V5=u._emscripten_run_in_main_runtime_thread_js=function(){return(V5=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},x2=u.__emscripten_call_on_thread=function(){return(x2=u.__emscripten_call_on_thread=u.asm.yb).apply(null,arguments)},tR=u._emscripten_tls_init=function(){return(tR=u._emscripten_tls_init=u.asm.zb).apply(null,arguments)},b2=u.__emscripten_thread_init=function(){return(b2=u.__emscripten_thread_init=u.asm.Ab).apply(null,arguments)},rd=u.stackSave=function(){return(rd=u.stackSave=u.asm.Bb).apply(null,arguments)},Ql=u.stackRestore=function(){return(Ql=u.stackRestore=u.asm.Cb).apply(null,arguments)},eu=u.stackAlloc=function(){return(eu=u.stackAlloc=u.asm.Db).apply(null,arguments)},U5=u._emscripten_stack_set_limits=function(){return(U5=u._emscripten_stack_set_limits=u.asm.Eb).apply(null,arguments)},G5=u._memalign=function(){return(G5=u._memalign=u.asm.Fb).apply(null,arguments)},H5=u.__emscripten_allow_main_runtime_queued_calls=10208,tu=u.__emscripten_main_thread_futex=10412;u.cwrap=Qe,u.PThread=De,u.PThread=De,u.wasmMemory=re,u.ExitStatus=ad;var Ch;function ad(S){this.name="ExitStatus",this.message="Program terminated with exit("+S+")",this.status=S}ui=function S(){Ch||v2(),Ch||(ui=S)};function v2(S){if(S=S||g,Zs>0)return;if(I){d(u),rh(),postMessage({cmd:"loaded"});return}if(sh(),Zs>0)return;function D(){Ch||(Ch=!0,u.calledRun=!0,!be&&(rh(),ah(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),oh()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),D()},1)):D()}u.run=v2;function nR(S,D){if(!(D&&ae&&S===0)){if(!D&&I)throw postMessage({cmd:"exitProcess",returnCode:S}),new ad(S);ae||(De.terminateAllThreads(),Ne=S,rs(),u.onExit&&u.onExit(S),be=!0),x(S,new ad(S))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();I&&(ae=!1,De.initWorker()),v2();var Th;h&&(Th={uncaughtException:process.listeners("uncaughtException").filter(function(S){return!h.uncaughtException.indexOf(S)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(S){return!h.unhandledRejection.indexOf(S)>-1})});var Nh;if(typeof WasmBackendModule!="undefined")Nh=WasmBackendModule;else if(typeof r!="undefined")Nh=r;else throw new Error("Could not find wasm module in post.js");if(Th){var sR=Nh._dispose;Nh._dispose=function(){sR(),Th.uncaughtException.forEach(function(S){process.removeListener("uncaughtException",S)}),Th.unhandledRejection.forEach(function(S){process.removeListener("unhandledRejection",S)})}}return r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),DR=sn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},o,i;a.ready=new Promise(function(se,le){o=se,i=le});var l;typeof process!="undefined"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c={},u;for(u in a)a.hasOwnProperty(u)&&(c[u]=a[u]);var d=[],p="./this.program",h=function(se,le){throw le},f=!1,m=!1,g=!1,y=!1;f=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y=!f&&!g&&!m;var x="";function A(se){return a.locateFile?a.locateFile(se,x):x+se}var b,v,C,I,E,R;g?(m?x=cd().dirname(x)+"/":x=__dirname+"/",b=function(le,Ce){return E||(E=Dh()),R||(R=cd()),le=R.normalize(le),E.readFileSync(le,Ce?null:"utf8")},C=function(le){var Ce=b(le,!0);return Ce.buffer||(Ce=new Uint8Array(Ce)),z(Ce.buffer),Ce},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(se){if(!(se instanceof y2))throw se}),process.on("unhandledRejection",jr),h=function(se){process.exit(se)},a.inspect=function(){return"[Emscripten Module object]"}):y?(typeof read!="undefined"&&(b=function(le){return read(le)}),C=function(le){var Ce;return typeof readbuffer=="function"?new Uint8Array(readbuffer(le)):(Ce=read(le,"binary"),z(typeof Ce=="object"),Ce)},typeof scriptArgs!="undefined"?d=scriptArgs:typeof arguments!="undefined"&&(d=arguments),typeof quit=="function"&&(h=function(se){quit(se)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(f||m)&&(m?x=self.location.href:typeof document!="undefined"&&document.currentScript&&(x=document.currentScript.src),s&&(x=s),x.indexOf("blob:")!==0?x=x.substr(0,x.lastIndexOf("/")+1):x="",b=function(se){var le=new XMLHttpRequest;return le.open("GET",se,!1),le.send(null),le.responseText},m&&(C=function(se){var le=new XMLHttpRequest;return le.open("GET",se,!1),le.responseType="arraybuffer",le.send(null),new Uint8Array(le.response)}),v=function(se,le,Ce){var ct=new XMLHttpRequest;ct.open("GET",se,!0),ct.responseType="arraybuffer",ct.onload=function(){if(ct.status==200||ct.status==0&&ct.response){le(ct.response);return}Ce()},ct.onerror=Ce,ct.send(null)},I=function(se){document.title=se});var F=a.print||console.log.bind(console),_=a.printErr||console.warn.bind(console);for(u in c)c.hasOwnProperty(u)&&(a[u]=c[u]);c=null,a.arguments&&(d=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(h=a.quit);var P;a.wasmBinary&&(P=a.wasmBinary);var T=a.noExitRuntime||!0;typeof WebAssembly!="object"&&jr("no native wasm support detected");var O,G=!1,K;function z(se,le){se||jr("Assertion failed: "+le)}function j(se){var le=a["_"+se];return z(le,"Cannot call unknown function "+se+", make sure it is exported"),le}function W(se,le,Ce,ct,Vt){var Pt={string:function(As){var Ta=0;if(As!=null&&As!==0){var Ih=(As.length<<2)+1;Ta=ed(Ih),re(As,Ta,Ih)}return Ta},array:function(As){var Ta=ed(As.length);return me(As,Ta),Ta}};function tt(As){return le==="string"?Z(As):le==="boolean"?Boolean(As):As}var st=j(se),Sn=[],Xr=0;if(ct)for(var Kr=0;Kr<ct.length;Kr++){var kh=Pt[Ce[Kr]];kh?(Xr===0&&(Xr=vh()),Sn[Kr]=kh(ct[Kr])):Sn[Kr]=ct[Kr]}var nd=st.apply(null,Sn);return nd=tt(nd),Xr!==0&&wh(Xr),nd}function Q(se,le,Ce,ct){Ce=Ce||[];var Vt=Ce.every(function(tt){return tt==="number"}),Pt=le!=="string";return Pt&&Vt&&!ct?j(se):function(){return W(se,le,Ce,arguments,ct)}}var ne=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function oe(se,le,Ce){for(var ct=le+Ce,Vt=le;se[Vt]&&!(Vt>=ct);)++Vt;if(Vt-le>16&&se.subarray&&ne)return ne.decode(se.subarray(le,Vt));for(var Pt="";le<Vt;){var tt=se[le++];if(!(tt&128)){Pt+=String.fromCharCode(tt);continue}var st=se[le++]&63;if((tt&224)==192){Pt+=String.fromCharCode((tt&31)<<6|st);continue}var Sn=se[le++]&63;if((tt&240)==224?tt=(tt&15)<<12|st<<6|Sn:tt=(tt&7)<<18|st<<12|Sn<<6|se[le++]&63,tt<65536)Pt+=String.fromCharCode(tt);else{var Xr=tt-65536;Pt+=String.fromCharCode(55296|Xr>>10,56320|Xr&1023)}}return Pt}function Z(se,le){return se?oe(Pe,se,le):""}function ae(se,le,Ce,ct){if(!(ct>0))return 0;for(var Vt=Ce,Pt=Ce+ct-1,tt=0;tt<se.length;++tt){var st=se.charCodeAt(tt);if(st>=55296&&st<=57343){var Sn=se.charCodeAt(++tt);st=65536+((st&1023)<<10)|Sn&1023}if(st<=127){if(Ce>=Pt)break;le[Ce++]=st}else if(st<=2047){if(Ce+1>=Pt)break;le[Ce++]=192|st>>6,le[Ce++]=128|st&63}else if(st<=65535){if(Ce+2>=Pt)break;le[Ce++]=224|st>>12,le[Ce++]=128|st>>6&63,le[Ce++]=128|st&63}else{if(Ce+3>=Pt)break;le[Ce++]=240|st>>18,le[Ce++]=128|st>>12&63,le[Ce++]=128|st>>6&63,le[Ce++]=128|st&63}}return le[Ce]=0,Ce-Vt}function re(se,le,Ce){return ae(se,Pe,le,Ce)}function me(se,le){Se.set(se,le)}function be(se,le){return se%le>0&&(se+=le-se%le),se}var Ne,Se,Pe,ze,Qe,Ze,et,yt,lt;function At(se){Ne=se,a.HEAP8=Se=new Int8Array(se),a.HEAP16=ze=new Int16Array(se),a.HEAP32=Ze=new Int32Array(se),a.HEAPU8=Pe=new Uint8Array(se),a.HEAPU16=Qe=new Uint16Array(se),a.HEAPU32=et=new Uint32Array(se),a.HEAPF32=yt=new Float32Array(se),a.HEAPF64=lt=new Float64Array(se)}var Dt=a.INITIAL_MEMORY||16777216,ts,ut=[],gs=[],In=[],Xs=[],ns=!1;gs.push({func:function(){uh()}});function ys(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)ss(a.preRun.shift());Zs(ut)}function _s(){ns=!0,Zs(gs)}function Ks(){Zs(In)}function Ds(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)wa(a.postRun.shift());Zs(Xs)}function ss(se){ut.unshift(se)}function wa(se){Xs.unshift(se)}var En=0,ka=null,Ps=null;function qc(se){En++,a.monitorRunDependencies&&a.monitorRunDependencies(En)}function Xc(se){if(En--,a.monitorRunDependencies&&a.monitorRunDependencies(En),En==0&&(ka!==null&&(clearInterval(ka),ka=null),Ps)){var le=Ps;Ps=null,le()}}a.preloadedImages={},a.preloadedAudios={};function jr(se){a.onAbort&&a.onAbort(se),se+="",_(se),G=!0,K=1,se="abort("+se+"). Build with -s ASSERTIONS=1 for more info.";var le=new WebAssembly.RuntimeError(se);throw i(le),le}function nh(se,le){return String.prototype.startsWith?se.startsWith(le):se.indexOf(le)===0}var Z0="data:application/octet-stream;base64,";function sh(se){return nh(se,Z0)}var rh="file://";function ah(se){return nh(se,rh)}var rs="tfjs-backend-wasm.wasm";sh(rs)||(rs=A(rs));function oh(se){try{if(se==rs&&P)return new Uint8Array(P);if(C)return C(se);throw"both async and sync fetching of the wasm failed"}catch(le){jr(le)}}function Y0(){if(!P&&(f||m)){if(typeof fetch=="function"&&!ah(rs))return fetch(rs,{credentials:"same-origin"}).then(function(se){if(!se.ok)throw"failed to load wasm binary file at '"+rs+"'";return se.arrayBuffer()}).catch(function(){return oh(rs)});if(v)return new Promise(function(se,le){v(rs,function(Ce){se(new Uint8Array(Ce))},le)})}return Promise.resolve().then(function(){return oh(rs)})}function J0(){var se={a:as};function le(tt,st){var Sn=tt.exports;a.asm=Sn,O=a.asm.h,At(O.buffer),ts=a.asm.Va,Xc("wasm-instantiate")}qc("wasm-instantiate");function Ce(tt){le(tt.instance)}function ct(tt){return Y0().then(function(st){return WebAssembly.instantiate(st,se)}).then(tt,function(st){_("failed to asynchronously prepare wasm: "+st),jr(st)})}function Vt(){return!P&&typeof WebAssembly.instantiateStreaming=="function"&&!sh(rs)&&!ah(rs)&&typeof fetch=="function"?fetch(rs,{credentials:"same-origin"}).then(function(tt){var st=WebAssembly.instantiateStreaming(tt,se);return st.then(Ce,function(Sn){return _("wasm streaming compile failed: "+Sn),_("falling back to ArrayBuffer instantiation"),ct(Ce)})}):ct(Ce)}if(a.instantiateWasm)try{var Pt=a.instantiateWasm(se,le);return Pt}catch(tt){return _("Module.instantiateWasm callback failed with error: "+tt),!1}return Vt().catch(i),{}}function Zs(se){for(;se.length>0;){var le=se.shift();if(typeof le=="function"){le(a);continue}var Ce=le.func;typeof Ce=="number"?le.arg===void 0?ts.get(Ce)():ts.get(Ce)(le.arg):Ce(le.arg===void 0?null:le.arg)}}function Kc(){jr()}function ui(se,le,Ce){Pe.copyWithin(se,le,le+Ce)}function Q0(){return Pe.length}function eg(se){try{return O.grow(se-Ne.byteLength+65535>>>16),At(O.buffer),1}catch(le){}}function qr(se){var le=Q0(),Ce=2147483648;if(se>Ce)return!1;for(var ct=1;ct<=4;ct*=2){var Vt=le*(1+.2/ct);Vt=Math.min(Vt,se+100663296);var Pt=Math.min(Ce,be(Math.max(se,Vt),65536)),tt=eg(Pt);if(tt)return!0}return!1}var ci={mappings:{},buffers:[null,[],[]],printChar:function(se,le){var Ce=ci.buffers[se];le===0||le===10?((se===1?F:_)(oe(Ce,0)),Ce.length=0):Ce.push(le)},varargs:void 0,get:function(){ci.varargs+=4;var se=Ze[ci.varargs-4>>2];return se},getStr:function(se){var le=Z(se);return le},get64:function(se,le){return se}};function tg(se){return 0}function ih(se,le,Ce,ct,Vt){}function ng(se,le,Ce,ct){for(var Vt=0,Pt=0;Pt<Ce;Pt++){for(var tt=Ze[le+Pt*8>>2],st=Ze[le+(Pt*8+4)>>2],Sn=0;Sn<st;Sn++)ci.printChar(se,Pe[tt+Sn]);Vt+=st}return Ze[ct>>2]=Vt,0}function lh(){return 28}var as={a:Kc,d:ui,e:qr,f:tg,c:ih,b:ng,g:lh},sg=J0(),uh=a.___wasm_call_ctors=function(){return(uh=a.___wasm_call_ctors=a.asm.i).apply(null,arguments)},rg=a._init=function(){return(rg=a._init=a.asm.j).apply(null,arguments)},ch=a._init_with_threads_count=function(){return(ch=a._init_with_threads_count=a.asm.k).apply(null,arguments)},ag=a._get_threads_count=function(){return(ag=a._get_threads_count=a.asm.l).apply(null,arguments)},Xl=a._register_tensor=function(){return(Xl=a._register_tensor=a.asm.m).apply(null,arguments)},Ia=a._dispose_data=function(){return(Ia=a._dispose_data=a.asm.n).apply(null,arguments)},Zc=a._dispose=function(){return(Zc=a._dispose=a.asm.o).apply(null,arguments)},og=a._Abs=function(){return(og=a._Abs=a.asm.p).apply(null,arguments)},ig=a._Add=function(){return(ig=a._Add=a.asm.q).apply(null,arguments)},dh=a._AddN=function(){return(dh=a._AddN=a.asm.r).apply(null,arguments)},De=a._All=function(){return(De=a._All=a.asm.s).apply(null,arguments)},lg=a._Any=function(){return(lg=a._Any=a.asm.t).apply(null,arguments)},ug=a._ArgMax=function(){return(ug=a._ArgMax=a.asm.u).apply(null,arguments)},cg=a._AvgPool=function(){return(cg=a._AvgPool=a.asm.v).apply(null,arguments)},dg=a._BatchMatMul=function(){return(dg=a._BatchMatMul=a.asm.w).apply(null,arguments)},pg=a._Ceil=function(){return(pg=a._Ceil=a.asm.x).apply(null,arguments)},di=a._ClipByValue=function(){return(di=a._ClipByValue=a.asm.y).apply(null,arguments)},hg=a._Conv2D=function(){return(hg=a._Conv2D=a.asm.z).apply(null,arguments)},fg=a._Conv2DBackpropInput=function(){return(fg=a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},mg=a._Cos=function(){return(mg=a._Cos=a.asm.B).apply(null,arguments)},gg=a._Cosh=function(){return(gg=a._Cosh=a.asm.C).apply(null,arguments)},yg=a._CropAndResize=function(){return(yg=a._CropAndResize=a.asm.D).apply(null,arguments)},Ag=a._Cumsum=function(){return(Ag=a._Cumsum=a.asm.E).apply(null,arguments)},ph=a._DepthToSpace=function(){return(ph=a._DepthToSpace=a.asm.F).apply(null,arguments)},xg=a._DepthwiseConv2dNative=function(){return(xg=a._DepthwiseConv2dNative=a.asm.G).apply(null,arguments)},bg=a._Elu=function(){return(bg=a._Elu=a.asm.H).apply(null,arguments)},Sa=a._Equal=function(){return(Sa=a._Equal=a.asm.I).apply(null,arguments)},Yc=a._Exp=function(){return(Yc=a._Exp=a.asm.J).apply(null,arguments)},Jc=a._FlipLeftRight=function(){return(Jc=a._FlipLeftRight=a.asm.K).apply(null,arguments)},vg=a._Floor=function(){return(vg=a._Floor=a.asm.L).apply(null,arguments)},wg=a._FloorDiv=function(){return(wg=a._FloorDiv=a.asm.M).apply(null,arguments)},kg=a._FusedBatchNorm=function(){return(kg=a._FusedBatchNorm=a.asm.N).apply(null,arguments)},Ig=a._FusedConv2D=function(){return(Ig=a._FusedConv2D=a.asm.O).apply(null,arguments)},Sg=a._FusedDepthwiseConv2D=function(){return(Sg=a._FusedDepthwiseConv2D=a.asm.P).apply(null,arguments)},He=a._Gather=function(){return(He=a._Gather=a.asm.Q).apply(null,arguments)},Cg=a._GatherNd=function(){return(Cg=a._GatherNd=a.asm.R).apply(null,arguments)},Tg=a._Greater=function(){return(Tg=a._Greater=a.asm.S).apply(null,arguments)},Ng=a._GreaterEqual=function(){return(Ng=a._GreaterEqual=a.asm.T).apply(null,arguments)},Eg=a._LeakyRelu=function(){return(Eg=a._LeakyRelu=a.asm.U).apply(null,arguments)},Rg=a._Less=function(){return(Rg=a._Less=a.asm.V).apply(null,arguments)},_g=a._LessEqual=function(){return(_g=a._LessEqual=a.asm.W).apply(null,arguments)},Qc=a._Log=function(){return(Qc=a._Log=a.asm.X).apply(null,arguments)},hh=a._LogicalAnd=function(){return(hh=a._LogicalAnd=a.asm.Y).apply(null,arguments)},fh=a._Max=function(){return(fh=a._Max=a.asm.Z).apply(null,arguments)},Dg=a._MaxPool=function(){return(Dg=a._MaxPool=a.asm._).apply(null,arguments)},Pg=a._Maximum=function(){return(Pg=a._Maximum=a.asm.$).apply(null,arguments)},$g=a._Mean=function(){return($g=a._Mean=a.asm.aa).apply(null,arguments)},Fg=a._Min=function(){return(Fg=a._Min=a.asm.ba).apply(null,arguments)},Og=a._Minimum=function(){return(Og=a._Minimum=a.asm.ca).apply(null,arguments)},Mg=a._MirrorPad=function(){return(Mg=a._MirrorPad=a.asm.da).apply(null,arguments)},zg=a._Multiply=function(){return(zg=a._Multiply=a.asm.ea).apply(null,arguments)},pt=a._Neg=function(){return(pt=a._Neg=a.asm.fa).apply(null,arguments)},Lg=a._NonMaxSuppressionV3=function(){return(Lg=a._NonMaxSuppressionV3=a.asm.ga).apply(null,arguments)},Bg=a._NonMaxSuppressionV4=function(){return(Bg=a._NonMaxSuppressionV4=a.asm.ha).apply(null,arguments)},Wg=a._NonMaxSuppressionV5=function(){return(Wg=a._NonMaxSuppressionV5=a.asm.ia).apply(null,arguments)},Kl=a._NotEqual=function(){return(Kl=a._NotEqual=a.asm.ja).apply(null,arguments)},mh=a._OneHot=function(){return(mh=a._OneHot=a.asm.ka).apply(null,arguments)},gh=a._PadV2=function(){return(gh=a._PadV2=a.asm.la).apply(null,arguments)},yh=a._Pow=function(){return(yh=a._Pow=a.asm.ma).apply(null,arguments)},Vg=a._Prelu=function(){return(Vg=a._Prelu=a.asm.na).apply(null,arguments)},Ug=a._Prod=function(){return(Ug=a._Prod=a.asm.oa).apply(null,arguments)},Ah=a._RealDiv=function(){return(Ah=a._RealDiv=a.asm.pa).apply(null,arguments)},Gg=a._Relu=function(){return(Gg=a._Relu=a.asm.qa).apply(null,arguments)},Hg=a._Relu6=function(){return(Hg=a._Relu6=a.asm.ra).apply(null,arguments)},jg=a._ResizeBilinear=function(){return(jg=a._ResizeBilinear=a.asm.sa).apply(null,arguments)},qg=a._Reverse=function(){return(qg=a._Reverse=a.asm.ta).apply(null,arguments)},Xg=a._RotateWithOffset=function(){return(Xg=a._RotateWithOffset=a.asm.ua).apply(null,arguments)},xh=a._Round=function(){return(xh=a._Round=a.asm.va).apply(null,arguments)},Ca=a._Rsqrt=function(){return(Ca=a._Rsqrt=a.asm.wa).apply(null,arguments)},Kg=a._ScatterNd=function(){return(Kg=a._ScatterNd=a.asm.xa).apply(null,arguments)},Zg=a._SelectV2=function(){return(Zg=a._SelectV2=a.asm.ya).apply(null,arguments)},$5=a._Sigmoid=function(){return($5=a._Sigmoid=a.asm.za).apply(null,arguments)},bh=a._Sin=function(){return(bh=a._Sin=a.asm.Aa).apply(null,arguments)},Yg=a._Softmax=function(){return(Yg=a._Softmax=a.asm.Ba).apply(null,arguments)},Jg=a._SparseFillEmptyRows=function(){return(Jg=a._SparseFillEmptyRows=a.asm.Ca).apply(null,arguments)},Qg=a._SparseReshape=function(){return(Qg=a._SparseReshape=a.asm.Da).apply(null,arguments)},e2=a._SparseSegmentReduction=function(){return(e2=a._SparseSegmentReduction=a.asm.Ea).apply(null,arguments)},t2=a._Sqrt=function(){return(t2=a._Sqrt=a.asm.Fa).apply(null,arguments)},n2=a._Square=function(){return(n2=a._Square=a.asm.Ga).apply(null,arguments)},s2=a._SquaredDifference=function(){return(s2=a._SquaredDifference=a.asm.Ha).apply(null,arguments)},r2=a._Step=function(){return(r2=a._Step=a.asm.Ia).apply(null,arguments)},a2=a._StridedSlice=function(){return(a2=a._StridedSlice=a.asm.Ja).apply(null,arguments)},o2=a._Sub=function(){return(o2=a._Sub=a.asm.Ka).apply(null,arguments)},i2=a._Sum=function(){return(i2=a._Sum=a.asm.La).apply(null,arguments)},l2=a._Tan=function(){return(l2=a._Tan=a.asm.Ma).apply(null,arguments)},u2=a._Tanh=function(){return(u2=a._Tanh=a.asm.Na).apply(null,arguments)},c2=a._Tile=function(){return(c2=a._Tile=a.asm.Oa).apply(null,arguments)},d2=a._TopK=function(){return(d2=a._TopK=a.asm.Pa).apply(null,arguments)},p2=a._Transform=function(){return(p2=a._Transform=a.asm.Qa).apply(null,arguments)},h2=a._Transpose=function(){return(h2=a._Transpose=a.asm.Ra).apply(null,arguments)},f2=a.__FusedMatMul=function(){return(f2=a.__FusedMatMul=a.asm.Sa).apply(null,arguments)},m2=a._malloc=function(){return(m2=a._malloc=a.asm.Ta).apply(null,arguments)},g2=a._free=function(){return(g2=a._free=a.asm.Ua).apply(null,arguments)},vh=a.stackSave=function(){return(vh=a.stackSave=a.asm.Wa).apply(null,arguments)},wh=a.stackRestore=function(){return(wh=a.stackRestore=a.asm.Xa).apply(null,arguments)},ed=a.stackAlloc=function(){return(ed=a.stackAlloc=a.asm.Ya).apply(null,arguments)};a.cwrap=Q;var Zl;function y2(se){this.name="ExitStatus",this.message="Program terminated with exit("+se+")",this.status=se}Ps=function se(){Zl||td(),Zl||(Ps=se)};function td(se){if(se=se||d,En>0||(ys(),En>0))return;function le(){Zl||(Zl=!0,a.calledRun=!0,!G&&(_s(),Ks(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Ds()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),le()},1)):le()}if(a.run=td,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();td();var Yl;l&&(Yl={uncaughtException:process.listeners("uncaughtException").filter(function(se){return!l.uncaughtException.indexOf(se)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(se){return!l.unhandledRejection.indexOf(se)>-1})});var Jl;if(typeof r!="undefined")Jl=r;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Jl=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Yl){var A2=Jl._dispose;Jl._dispose=function(){A2(),Yl.uncaughtException.forEach(function(se){process.removeListener("uncaughtException",se)}),Yl.unhandledRejection.forEach(function(se){process.removeListener("unhandledRejection",se)})}}return r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),PR=1e-7,$R=1e-4,dd=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},ru=class{refCount(e){return $s("refCount")}incRef(e){return $s("incRef")}timerAvailable(){return!0}time(e){return $s("time")}read(e){return $s("read")}readSync(e){return $s("readSync")}readToGPU(e,t){return $s("readToGPU")}numDataIds(){return $s("numDataIds")}disposeData(e,t){return $s("disposeData")}write(e,t,n){return $s("write")}move(e,t,n,s,r){return $s("move")}memory(){return $s("memory")}floatPrecision(){return $s("floatPrecision")}epsilon(){return this.floatPrecision()===32?PR:$R}dispose(){return $s("dispose")}};function $s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Z5(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Ph(e,t,n)}function FR(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,Ph(e,n,s),Ph(t,n,s)}function pd(e,t,n){return Math.max(e,Math.min(t,n))}function OR(e){return e%2===0?e:e+1}function Ph(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function MR(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function zR(e,t){let n=Math.random();return t*n+(1-n)*e}function LR(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function M(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Ln(e,t,n=""){M(_a(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function fi(e){M(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function mi(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||_n(e)&&!n)for(let s=0;s<e.length;++s)mi(e[s],t,n);else t.push(e);return t}function Ct(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function BR(e){return e.length===0}function _a(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function au(e){return e%1===0}function WR(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function VR(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function UR(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Z5(t),t}function hd(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function GR(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function HR(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function Ys(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),M(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),M(e.every(s=>au(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function Y5(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:Ys(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function J5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function Q5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function e3(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function t3(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function jR(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function _n(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function k2(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function n3(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Da(e){return typeof e=="string"||e instanceof String}function s3(e){return typeof e=="boolean"}function r3(e){return typeof e=="number"}function $h(e){return Array.isArray(e)?$h(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":r3(e)?"float32":Da(e)?"string":s3(e)?"bool":"float32"}function Pa(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Fh(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function ou(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function a3(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<a;l++)r[l]=a3(e+l*i,o,n,s)}return r}function iu(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return a3(0,e,t,n)}function I2(e,t){let n=Oh(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Oh(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function qR(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return iu(e,new Float32Array(n));if(t==="int32")return iu(e,new Int32Array(n));if(t==="bool")return iu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function S2(e){e.forEach(t=>{M(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function XR(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function KR(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function C2(e){return e&&e.then&&typeof e.then=="function"}var o3="tfjsflags",i3=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ZR,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(C2(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);o3 in e&&e[o3].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=JR(s,r)})}};function ZR(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(YR(t,s[0],s[1]),s.join("="))),t}function YR(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function JR(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Y(){return pr}var pr=null;function QR(e){pr=e}var T2;function l3(){if(T2==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");T2=e}return T2}function e9(){let e=l3();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function N2(e,t){let n=e9();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var gi="Abs",lu="Acos",uu="Acosh",Zr="Add",$a="AddN",cu="All",du="Any",Fa="ArgMax",pu="ArgMin",hu="Asin",fu="Asinh",mu="Atan",gu="Atanh",yu="Atan2",Oa="AvgPool",Mh="AvgPoolGrad",fd="AvgPool3D",zh="AvgPool3DGrad",Ma="BatchMatMul",yi="BatchToSpaceND",Lh="Bincount",u3="BroadcastTo",Bh="BroadcastArgs",za="Cast",La="Ceil",Yr="ClipByValue",md="Complex",gd="ComplexAbs",Ai="Concat",Ba="Conv2D",Wh="Conv2DBackpropFilter",Wa="Conv2DBackpropInput",yd="Conv3D",Vh="Conv3DBackpropFilterV2",Uh="Conv3DBackpropInputV2",Va="Cos",Ua="Cosh",xi="Cumsum",bi="CropAndResize",Gh="DenseBincount",vi="DepthToSpace",Ga="DepthwiseConv2dNative",Hh="DepthwiseConv2dNativeBackpropFilter",jh="DepthwiseConv2dNativeBackpropInput",qh="Diag",Ad="Dilation2D",Xh="Dilation2DBackpropInput",Kh="Dilation2DBackpropFilter",Ha="RealDiv",xd="Einsum",ja="Elu",Zh="EluGrad",Au="Erf",wi="Equal",qa="Exp",ki="ExpandDims",Ii="Expm1",Yh="FFT",xu="Fill",Si="FlipLeftRight",Xa="Floor",Ka="FloorDiv",Za="FusedBatchNorm",Ci="GatherV2",Ti="GatherNd",Ni="Greater",Ya="GreaterEqual",Ja="Identity",Jh="IFFT",bd="Imag",bu="IsFinite",vu="IsInf",wu="IsNan",Qa="LeakyRelu",Ei="Less",Ri="LessEqual",Qh="LinSpace",eo="Log",ku="Log1p",_i="LogicalAnd",Iu="LogicalNot",vd="LogicalOr",c3="LogSoftmax",wd="LRN",ef="LRNGrad",to="Max",no="Maximum",so="MaxPool",tf="MaxPoolGrad",kd="MaxPool3D",nf="MaxPool3DGrad",sf="MaxPoolWithArgmax",ro="Mean",ao="Min",oo="Minimum",io="MirrorPad",Su="Mod",rf="Multinomial",lo="Multiply",Di="Neg",Pi="NotEqual",$i="NonMaxSuppressionV3",Cu="NonMaxSuppressionV4",Fi="NonMaxSuppressionV5",Oi="OnesLike",Mi="OneHot",zi="Pack",uo="PadV2",t9="Pool",co="Pow",po="Prelu",Li="Prod",Tu="Range",Id="Real",Nu="Reciprocal",ho="Relu",Bi="Reshape",Eu="ResizeNearestNeighbor",af="ResizeNearestNeighborGrad",fo="ResizeBilinear",of="ResizeBilinearGrad",mo="Relu6",Wi="Reverse",Vi="Round",go="Rsqrt",Ui="ScatterNd",Gi="Select",Ru="Selu",Hi="Slice",yo="Sin",ji="Sinh",_u="Sign",Ao="Sigmoid",Du="Softplus",xo="Sqrt",bo="Sum",qi="SpaceToBatchND",Xi="SplitV",vo="Softmax",Sd="SparseFillEmptyRows",Pu="SparseReshape",Cd="SparseSegmentMean",Td="SparseSegmentSum",Nd="SparseToDense",wo="SquaredDifference",$u="Square",Ki="StridedSlice",Ed="StringNGrams",lf="StringSplit",uf="StringToHashBucketFast",ko="Sub",Zi="Tan",Io="Tanh",Jr="Tile",Yi="TopK",Ji="Transform",So="Transpose",cf="Unique",Qi="Unpack",Rd="UnsortedSegmentSum",el="ZerosLike",Co="Step",_d="FromPixels",tl="RotateWithOffset",To="_FusedMatMul",No="FusedConv2D",Eo="FusedDepthwiseConv2D";function Ro(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...e)}function n9(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...e)}var Fu=N2("kernelRegistry",()=>new Map),Dd=N2("gradRegistry",()=>new Map);function df(e,t){let n=R2(e,t);return Fu.get(n)}function E2(e){return Dd.get(e)}function Dr(e){let t=Fu.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function Js(e){let{kernelName:t,backendName:n}=e,s=R2(t,n);Fu.has(s)&&Ro(`The kernel '${t}' for backend '${n}' is already registered`),Fu.set(s,e)}function d3(e){let{kernelName:t}=e;Dd.has(t)&&Y().getBool("DEBUG")&&Ro(`Overriding the gradient for '${t}'`),Dd.set(t,e)}function s9(e,t){let n=R2(e,t);if(!Fu.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Fu.delete(n)}function r9(e){if(!Dd.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Dd.delete(e)}function a9(e,t){Dr(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});Js(r)})}function R2(e,t){return`${t}_${e}`}var w={};Me(w,{arraysEqual:()=>_a,assert:()=>M,assertNonNegativeIntegerDimensions:()=>S2,assertNonNull:()=>fi,assertShapesMatch:()=>Ln,bytesFromStringArray:()=>n3,bytesPerElement:()=>k2,checkConversionForErrors:()=>e3,clamp:()=>pd,computeStrides:()=>ou,createScalarValue:()=>d9,createShuffledIndices:()=>UR,decodeString:()=>ff,distSquared:()=>LR,encodeString:()=>Fd,fetch:()=>h9,fingerPrint64:()=>c9,flatten:()=>mi,getArrayFromDType:()=>Q5,getTypedArrayFromDType:()=>J5,hasEncodingLoss:()=>jR,hexToLong:()=>Pd,indexToLoc:()=>KR,inferDtype:()=>$h,inferFromImplicitShape:()=>HR,isBoolean:()=>s3,isFunction:()=>Pa,isInt:()=>au,isNumber:()=>r3,isPromise:()=>C2,isScalarShape:()=>BR,isString:()=>Da,isTypedArray:()=>_n,isValidDtype:()=>t3,locToIndex:()=>XR,makeOnesTypedArray:()=>I2,makeZerosNestedTypedArray:()=>qR,makeZerosTypedArray:()=>Oh,nearestDivisor:()=>Fh,nearestLargerEven:()=>OR,now:()=>$d,parseAxisParam:()=>Ys,randUniform:()=>zR,repeatedTry:()=>GR,rightPad:()=>hd,shuffle:()=>Z5,shuffleCombo:()=>FR,sizeFromShape:()=>Ct,sizeToSquarishShape:()=>VR,squeezeShape:()=>Y5,sum:()=>MR,swap:()=>Ph,tanh:()=>WR,toNestedArray:()=>iu,toTypedArray:()=>hf});var p3=hi(yR()),nl=p3.default||p3;function Pd(e){return nl.fromString(e,!0,16)}var h3=Pd("c3a5c85c97cb3127"),sl=Pd("b492b66fbe98f273"),Bn=Pd("9ae16a3b2f90404f");function _2(e){return e.xor(e.shru(47))}function f3(e,t,n){let s=e.slice(t,t+n);return nl.fromBytes(Array.from(s),!0,!0)}function It(e,t){return f3(e,t,8)}function m3(e,t){return f3(e,t,4)}function yn(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function _o(e,t,n=Pd("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function o9(e,t,n,s,r,a){r=r.add(e),a=yn(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(yn(r,44)),[r.add(s),a.add(o)]}function pf(e,t,n,s){return o9(It(e,t),It(e,t+8),It(e,t+16),It(e,t+24),n,s)}function i9(e,t=e.length){if(t>=8){let n=Bn.add(t*2),s=It(e,0).add(Bn),r=It(e,t-8),a=yn(r,37).mul(n).add(s),o=yn(s,25).add(r).mul(n);return _o(a,o,n)}if(t>=4){let n=Bn.add(t*2),s=m3(e,0);return _o(s.shl(3).add(t),m3(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return _2(Bn.mul(a).xor(h3.mul(o))).mul(Bn)}return Bn}function l9(e,t=e.length){let n=Bn.add(t*2),s=It(e,0).mul(sl),r=It(e,8),a=It(e,t-8).mul(n),o=It(e,t-16).mul(Bn);return _o(yn(s.add(r),43).add(yn(a,30)).add(o),s.add(yn(r.add(Bn),18)).add(a),n)}function u9(e,t=e.length){let n=Bn.add(t*2),s=It(e,0).mul(Bn),r=It(e,8),a=It(e,t-8).mul(n),o=It(e,t-16).mul(Bn),i=yn(s.add(r),43).add(yn(a,30)).add(o),l=_o(i,s.add(yn(r.add(Bn),18)).add(a),n),c=It(e,16).mul(n),u=It(e,24),d=i.add(It(e,t-32)).mul(n),p=l.add(It(e,t-24)).mul(n);return _o(yn(c.add(u),43).add(yn(d,30)).add(p),c.add(yn(u.add(s),18)).add(d),n)}function c9(e,t=e.length){let n=nl.fromNumber(81,!0);if(t<=32)return t<=16?i9(e,t):l9(e,t);if(t<=64)return u9(e,t);let s=n,r=n.mul(sl).add(113),a=_2(r.mul(Bn).add(113)).mul(Bn),o=[nl.UZERO,nl.UZERO],i=[nl.UZERO,nl.UZERO];s=s.mul(Bn).add(It(e,0));let l=0,c=(t-1>>6)*64,u=c+(t-1&63)-63;do s=yn(s.add(r).add(o[0]).add(It(e,l+8)),37).mul(sl),r=yn(r.add(o[1]).add(It(e,l+48)),42).mul(sl),s=s.xor(i[1]),r=r.add(o[0]).add(It(e,l+40)),a=yn(a.add(i[0]),33).mul(sl),o=pf(e,l,o[1].mul(sl),s.add(i[0])),i=pf(e,l+32,a.add(i[1]),r.add(It(e,l+16))),[a,s]=[s,a],l+=64;while(l!==c);let d=sl.add(a.and(255).shl(1));return l=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=yn(s.add(r).add(o[0]).add(It(e,l+8)),37).mul(d),r=yn(r.add(o[1]).add(It(e,l+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(It(e,l+40))),a=yn(a.add(i[0]),33).mul(d),o=pf(e,l,o[1].mul(d),s.add(i[0])),i=pf(e,l+32,a.add(i[1]),r.add(It(e,l+16))),[a,s]=[s,a],_o(_o(o[0],i[0],d).add(_2(r).mul(h3)).add(a),_o(o[1],i[1],d).add(s),d)}function d9(e,t){return t==="string"?Fd(e):hf([e],t)}function p9(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function hf(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=mi(e)),Y().getBool("DEBUG")&&e3(e,t),p9(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function $d(){return Y().platform.now()}function h9(e,t){return Y().platform.fetch(e,t)}function Fd(e,t="utf-8"){return t=t||"utf-8",Y().platform.encode(e,t)}function ff(e,t="utf-8"){return t=t||"utf-8",Y().platform.decode(e,t)}var f9=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new g9)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=$d();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:$d()-o})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let c=s[l];c.data().then(u=>{m9(u,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function m9(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var g9=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?hd(`${s}ms`,9):s.error,i=hd(e,25),l=t.rank,c=t.size,u=hd(t.shape.toString(),14),d="";for(let p in r){let h=r[p];if(h!=null){let f=h.shape||t.shape,m=f.length;d+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${u}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function y9(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let c=e[l],u=c.inputs;for(let d in u){let p=u[d],h=!1;for(let f=0;f<t.length;f++)if(s[p.id]){c.outputs.forEach(m=>s[m.id]=!0),h=!0,r[c.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let c=e[l],u=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(let p in u)a[u[p].id]=!0,o[c.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let c=e[l];if(r[c.id]&&o[c.id]){let u={};for(let p in c.inputs){let h=c.inputs[p];s[h.id]&&(u[p]=h)}let d=Object.assign({},c);d.inputs=u,d.outputs=c.outputs,i.push(d)}}return i}function A9(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let c=e[l.id];c!=null?o.push(c):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let c=n(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=a.inputs[l];if(!_a(c.shape,u.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=c;else{let d=e[u.id];e[u.id]=s(d,c),d.dispose()}}}}var g3=20,Od=3,D2=7;function x9(e,t,n,s){let r=ou(t),a=b9(e,t,n,r),o=t.length,i=mf(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function b9(e,t,n,s){let r=Ct(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?zd(e):e;if(i>1)for(let c=0;c<r/a;c++){let u=c*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],Md(l[u+d],0,n).length)}return o}function Md(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(D2))} + ${parseFloat(e[1].toFixed(D2))}j`:Da(e)?s=`'${e}'`:n==="bool"?s=y3(e):s=parseFloat(e.toFixed(D2)).toString(),hd(s,t)}function y3(e){return e===0?"false":"true"}function mf(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=zd(e);return[Md(m[0],0,n)]}return n==="bool"?[y3(e[0])]:[e[0].toString()]}if(l===1){if(i>g3){let g=Od*o,y=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-Od)*o,i*o));return n==="complex64"&&(y=zd(y),x=zd(x)),["["+y.map((A,b)=>Md(A,r[b],n)).join(", ")+", ..., "+x.map((A,b)=>Md(A,r[i-Od+b],n)).join(", ")+"]"]}let m=n==="complex64"?zd(e):Array.from(e);return["["+m.map((g,y)=>Md(g,r[y],n)).join(", ")+"]"]}let c=t.slice(1),u=s.slice(1),d=s[0]*o,p=[];if(i>g3){for(let m=0;m<Od;m++){let g=m*d,y=g+d;p.push(...mf(e.slice(g,y),c,n,u,r,!1))}p.push("...");for(let m=i-Od;m<i;m++){let g=m*d,y=g+d;p.push(...mf(e.slice(g,y),c,n,u,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,y=g+d;p.push(...mf(e.slice(g,y),c,n,u,r,m===i-1))}let h=l===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function zd(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var rn=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ct(e),n!=null){let s=n.length;M(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Q5(t,this.size),this.strides=ou(e)}set(e,...t){t.length===0&&(t=[0]),M(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return hr().makeTensor(this.values,this.shape,this.dtype)}},hr=null,Ou=null,v9=null;function w9(e){hr=e}function k9(e){Ou=e}function I9(e){v9=e}var nt=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ct(e),this.strides=ou(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Ou.buffer(this.shape,this.dtype,e)}bufferSync(){return Ou.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return iu(this.shape,e,this.dtype==="complex64")}arraySync(){return iu(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=hr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>ff(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),hr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=hr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>ff(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await hr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(hr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ou.print(this,e)}clone(){return this.throwIfDisposed(),Ou.clone(this)}toString(e=!1){let t=this.dataSync();return x9(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ou.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),hr().makeVariable(this,e,t,n)}};Object.defineProperty(nt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function S9(){return N2("Tensor",()=>nt)}S9();var Ld=class extends nt{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!_a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);hr().disposeTensor(this),this.dataId=e.dataId,hr().incRef(this,null)}dispose(){hr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ld,Symbol.hasInstance,{value:e=>e instanceof nt&&e.assign!=null&&e.assign instanceof Function});var fr={};Me(fr,{assertTypesMatch:()=>k3,getTensorsInContainer:()=>P2,isTensorInList:()=>T9,makeTypesMatch:()=>Mt});var A3=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(A3||{}),x3=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(x3||{}),b3=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(b3||{}),v3=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(v3||{}),w3=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(w3||{}),C9={float32:v3,int32:x3,bool:b3,complex64:w3};function Wn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return C9[e][t]}function Bd(e){return Wn(e,"int32")}function Mt(e,t){if(e.dtype===t.dtype)return[e,t];let n=Wn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function k3(e,t){M(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function T9(e,t){return t.some(n=>n.id===e.id)}function P2(e){let t=[];return I3(e,t,new Set),t}function I3(e,t,n){if(e==null)return;if(e instanceof nt){t.push(e);return}if(!N9(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),I3(a,t,n))}}function N9(e){return Array.isArray(e)||typeof e=="object"}function $2(e){return e.kernelName!=null}var S3=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},F2=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new S3}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ro(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new f9(this.backendInstance),!0}setupRegisteredKernels(){Dr(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Dr(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof ru)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Ro(`Initialization of backend ${e} failed`),Ro(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Ro(`Initialization of backend ${e} failed`),Ro(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return F2.nextTensorId++}nextVariableId(){return F2.nextVariableId++}clone(e){let t=V.runKernel(Ja,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return V.runKernel(za,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(df(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=$2(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if($2(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=df(h,this.backendName);M(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let y=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,y,x);let A=x.map(b=>{if(b.rank!=null)return b;let{dataId:v,shape:C,dtype:I}=b;return this.makeTensorFromDataId(v,C,I)});if(s){let b=this.getTensorsForGradient(h,f,A);n=this.saveTensorsForBackwardMode(b)}return A}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:c,attrs:u}=e,d=$2(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(l,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(l,c,t,d,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(h=>c[h]!=null?c[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=E2(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(M(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,c)=>a[c]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&Da(e[0])&&(r=e.map(i=>Fd(i)));let a=s.write(r,t,n),o=new nt(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=n3(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r=new nt(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new Ld(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*k2(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ld||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*k2(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=E2(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((c,u)=>{if(c==null){let d=n[u],p=Oh(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=P2(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(M(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));M(r instanceof nt,()=>"The result y returned by f() must be a tensor.");let a=y9(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n==null?E9(r.shape):n,A9(o,a,l=>this.tidy(l),R9);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return M(Pa(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{M(t.every(o=>o instanceof nt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),M(n.value instanceof nt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M(Pa(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),c=Array.isArray(l)?l:[l];M(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(c.every(d=>d instanceof nt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return c.forEach((d,p)=>{u[p]=()=>d}),u};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=$d(),n=await this.backend.time(e);return n.wallMs=$d()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new S3;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},O2=F2;O2.nextTensorId=0;O2.nextVariableId=0;function E9(e){let t=I2(Ct(e),"float32");return V.makeTensor(t,e,"float32")}function C3(){let e=l3();if(e._tfengine==null){let t=new i3(e);e._tfengine=new O2(t)}return QR(e._tfengine.ENV),w9(()=>e._tfengine),e._tfengine}var V=C3();function R9(e,t){let n={a:e,b:t};return V.runKernel(Zr,n)}var Mu={};Me(Mu,{isBrowser:()=>T3,isMobile:()=>P9,mockIsMobile:()=>D9});function _9(){return typeof navigator!="undefined"&&navigator!=null}var M2;function D9(e){M2=e}function P9(e){if(M2!==void 0)return M2;if(e||_9()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function T3(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var mr=Y();mr.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});mr.registerFlag("IS_BROWSER",()=>T3());mr.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");mr.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));mr.registerFlag("PROD",()=>!1);mr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>mr.getBool("DEBUG"));mr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);mr.registerFlag("IS_TEST",()=>!1);mr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);mr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Pr(e,t){let n=e;if(_n(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||_n(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&N3(e,s,[]),s}function N3(e,t,n){if(n=n||[],!Array.isArray(e)&&!_n(e)){M(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}M(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),M(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)N3(e[r],s,n.concat(r))}function E3(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function $(e,t,n,s="numeric"){if(e instanceof nt)return E3(s,e.dtype,t,n),e;let r=$h(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),E3(s,r,t,n),e==null||!_n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=Pr(e,r);!_n(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?hf(e,r):mi(e,[],!0);return V.makeTensor(i,a,r)}function Wd(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>$(a,`${t}[${o}]`,n,s))}var R3="__op";function U(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+R3;let r=(...a)=>{V.startScope(n);try{let o=s(...a);return C2(o)&&console.error("Cannot return a Promise inside of tidy."),V.endScope(o),o}catch(o){throw V.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function $9(e,t){let n=$(e,"real","complex"),s=$(t,"imag","complex");Ln(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return V.runKernel(md,r)}var Do=U({complex_:$9});function Po(e,t,n,s){if(s==null&&(s=$h(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!_n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){S2(t);let r=Ct(t),a=Ct(n);M(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==Ct(t.slice(o)):!0;M(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!_n(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?hf(e,s):mi(e,[],!0),V.makeTensor(e,t,s)}function ht(e,t,n){let s=Pr(e,n);return Po(e,t,s,n)}var z2={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},gf=4;async function F9(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async d=>{let p=await l.bytes(),h=p.reduce((g,y)=>g+y.length,0)+gf*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let y=p[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,m),m+=gf,f.set(y,m),m+=y.length}d(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),n.push(c)}let a=await Promise.all(s);return{data:O9(a),specs:n}}function _3(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,c=Ct(l),u;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=z2[d.dtype],h=e.slice(r,r+c*p),f=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=V9()),u=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*p}else if(i==="string"){let d=Ct(a.shape);u=[];for(let p=0;p<d;p++){let h=new Uint32Array(e.slice(r,r+gf))[0];r+=gf;let f=new Uint8Array(e.slice(r,r+h));u.push(f),r+=h}}else{let d=z2[i],p=e.slice(r,r+c*d);if(i==="float32")u=new Float32Array(p);else if(i==="int32")u=new Int32Array(p);else if(i==="bool")u=new Uint8Array(p);else if(i==="complex64"){u=new Float32Array(p);let h=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<h.length;y++)h[y]=u[y*2],f[y]=u[y*2+1];let m=ht(h,l,"float32"),g=ht(f,l,"float32");n[o]=Do(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*d}i!=="complex64"&&(n[o]=ht(u,l,i))}return n}function O9(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var L2=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function D3(e){return L2?Buffer.byteLength(e):new Blob([e]).size}function M9(e){if(L2)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function z9(e){if(L2){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function B2(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function P3(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function $3(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function W2(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Vd(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:D3(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:D3(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function L9(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=~8388608,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function B9(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function W9(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function V9(){let e=L9(),t=B9(),n=W9();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var Ut=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ut.instance==null&&(Ut.instance=new Ut),Ut.instance}static registerSaveRouter(e){Ut.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ut.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ut.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ut.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?Ut.getInstance().loadRouters:Ut.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},U9=e=>Ut.registerSaveRouter(e),G9=e=>Ut.registerLoadRouter(e),H9=e=>Ut.getSaveHandlers(e),j9=(e,t)=>Ut.getLoadHandlers(e,t),V2="tensorflowjs",U2=1,rl="models_store",$o="model_info_store";function F3(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function G2(e){let t=e.result;t.createObjectStore(rl,{keyPath:"modelPath"}),t.createObjectStore($o,{keyPath:"modelPath"})}var al=class{constructor(e){if(this.indexedDB=F3(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(V2,U2);r.onupgradeneeded=()=>G2(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(rl,"readonly"),l=o.objectStore(rl).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=c=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=Vd(t),i=a.transaction($o,"readwrite"),l=i.objectStore($o),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),u;c.onsuccess=()=>{u=a.transaction(rl,"readwrite");let p=u.objectStore(rl).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});p.onsuccess=()=>n({modelArtifactsInfo:o}),p.onerror=h=>{l=i.objectStore($o);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(p.error)),f.onerror=m=>(a.close(),s(p.error))}},c.onerror=d=>(a.close(),s(c.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};al.URL_SCHEME="indexeddb://";var O3=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(al.URL_SCHEME)?q9(e.slice(al.URL_SCHEME.length)):null;Ut.registerSaveRouter(O3);Ut.registerLoadRouter(O3);function q9(e){return new al(e)}function X9(e){return e.startsWith(al.URL_SCHEME)?e.slice(al.URL_SCHEME.length):e}var K9=class{constructor(){this.indexedDB=F3()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(V2,U2);n.onupgradeneeded=()=>G2(n),n.onsuccess=()=>{let s=n.result,r=s.transaction($o,"readonly"),o=r.objectStore($o).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=X9(e),new Promise((t,n)=>{let s=this.indexedDB.open(V2,U2);s.onupgradeneeded=()=>G2(s),s.onsuccess=()=>{let r=s.result,a=r.transaction($o,"readwrite"),o=a.objectStore($o),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=o.delete(e),u=()=>{l=r.transaction(rl,"readwrite");let p=l.objectStore(rl).delete(e);p.onsuccess=()=>t(i.result.modelArtifactsInfo),p.onerror=h=>n(i.error)};c.onsuccess=u,c.onerror=d=>(u(),r.close(),n(i.error))}},i.onerror=c=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Qr="/",zu="tensorflowjs_models",M3="info",Z9="model_topology",Y9="weight_specs",J9="weight_data",Q9="model_metadata";function z3(e){return{info:[zu,e,M3].join(Qr),topology:[zu,e,Z9].join(Qr),weightSpecs:[zu,e,Y9].join(Qr),weightData:[zu,e,J9].join(Qr),modelMetadata:[zu,e,Q9].join(Qr)}}function L3(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function e_(e){let t=e.split(Qr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Qr)}function t_(e){return e.startsWith(ol.URL_SCHEME)?e.slice(ol.URL_SCHEME.length):e}var ol=class{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=z3(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Vd(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,M9(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw L3(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=z9(a),t}};ol.URL_SCHEME="localstorage://";var B3=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ol.URL_SCHEME)?n_(e.slice(ol.URL_SCHEME.length)):null;Ut.registerSaveRouter(B3);Ut.registerLoadRouter(B3);function n_(e){return new ol(e)}var s_=class{constructor(){M(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=zu+Qr,n=Qr+M3;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=e_(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=t_(e);let t=z3(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return L3(t),n}},Lu="://",Fs=class{constructor(){this.managers={}}static getInstance(){return Fs.instance==null&&(Fs.instance=new Fs),Fs.instance}static registerManager(e,t){M(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Lu)&&(e=e.slice(0,e.indexOf(Lu))),M(e.length>0,()=>"scheme must not be an empty string.");let n=Fs.getInstance();M(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function yf(e){if(e.indexOf(Lu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Fs.getSchemes().join(",")}`);return{scheme:e.split(Lu)[0],path:e.split(Lu)[1]}}async function W3(e,t,n=!1){M(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=Ut.getLoadHandlers(e);M(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),M(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=Ut.getSaveHandlers(t);M(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),M(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=yf(e).scheme,l=yf(e).path,c=i===yf(e).scheme,u=await r.load();n&&c&&await Fs.getManager(i).removeModel(l);let d=await o.save(u);return n&&!c&&await Fs.getManager(i).removeModel(l),d.modelArtifactsInfo}async function r_(){let e=Fs.getSchemes(),t={};for(let n of e){let s=await Fs.getManager(n).listModels();for(let r in s){let a=n+Lu+r;t[a]=s[r]}}return t}async function a_(e){let t=yf(e);return Fs.getManager(t.scheme).removeModel(t.path)}async function o_(e,t){return W3(e,t,!1)}async function i_(e,t){return W3(e,t,!0)}var l_=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new l_);try{Fs.registerManager(ol.URL_SCHEME,new s_)}catch(e){}try{Fs.registerManager(al.URL_SCHEME,new K9)}catch(e){}}var u_={importFetch:()=>AR()},H2,c_=class{constructor(){this.util=xR(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(H2==null&&(H2=u_.importFetch()),H2(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Y().get("IS_NODE")&&Y().setPlatform("node",new c_);function Le(e,t="float32",n){return t=t||"float32",S2(e),new rn(e,t,n)}function d_(e,t){let n=$(e,"x","cast");if(!t3(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return V.runKernel(za,s,r)}var ge=U({cast_:d_});function p_(e){let n={x:$(e,"x","clone","string_or_numeric")};return V.runKernel(Ja,n)}var Vn=U({clone_:p_});function V3(e,t=!1){console.log(e.toString(t))}C3();var h_={buffer:Le,cast:ge,clone:Vn,print:V3};k9(h_);var os={};Me(os,{browserFiles:()=>b_,browserHTTPRequest:()=>S_,concatenateArrayBuffers:()=>B2,copyModel:()=>o_,decodeWeights:()=>_3,encodeWeights:()=>F9,fromMemory:()=>T_,getLoadHandlers:()=>j9,getModelArtifactsForJSON:()=>W2,getModelArtifactsInfoForJSON:()=>Vd,getSaveHandlers:()=>H9,http:()=>K2,isHTTPScheme:()=>X2,listModels:()=>r_,loadWeights:()=>v_,moveModel:()=>i_,registerLoadRouter:()=>G9,registerSaveRouter:()=>U9,removeModel:()=>a_,weightsLoaderFactory:()=>j3,withSaveHandler:()=>N_});var f_="model",m_=".json",g_=".weights.bin";function U3(e){return new Promise(t=>setTimeout(t)).then(e)}var j2=class{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(j2.URL_SCHEME)&&(e=e.slice(j2.URL_SCHEME.length)),(e==null||e.length===0)&&(e=f_),this.modelJsonFileName=e+m_,this.weightDataFileName=e+g_}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=$3(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await U3(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await U3(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Vd(e)}}}},Af=j2;Af.URL_SCHEME="downloads://";var y_=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=W2(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,B2(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>P3(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=P3(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},A_=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Af.URL_SCHEME)?x_(e.slice(Af.URL_SCHEME.length)):null;Ut.registerSaveRouter(A_);function x_(e="model"){return new Af(e)}function b_(e){return new y_(e)}function G3(e,t,n,s){o(e),n=n==null?0:n,s=s==null?1:s,i(n,s);let r=0,a=l=>(l.then(c=>{let u=n+ ++r/e.length*(s-n);return t(u),c}),l);function o(l){M(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){M(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),M(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),M(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(a))}async function H3(e,t){t==null&&(t={});let n=t.fetchFunc==null?Y().platform.fetch:t.fetchFunc,s=e.map(d=>n(d,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await G3(s,t.onProgress,r,a)).map(d=>d.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(i):await G3(i,t.onProgress,l,c)}async function v_(e,t="",n,s){return j3(o=>H3(o,{requestInit:s}))(e,t,n)}function j3(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=z2[y]*Ct(g.shape),A=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,v)=>{b===g.name&&(A(),o[v]=!0)}):A(),i.push(g.name),m+=x})}),!o.every(h=>h)){let h=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),c=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;c.push(m)})});let u=await e(c),d={},p=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let b=0;b<f;b++)m+=u[p+b].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let v=new Uint8Array(u[p+b]);y.set(v,x),x+=v.byteLength}a[h].forEach(b=>{let v=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),C=_3(v,[b.manifestEntry]);for(let I in C)d[I]=C[I]}),p+=f}),d}}var w_="application/octet-stream",k_="application/json",q2=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(M(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,M(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&M(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=$3(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:k_}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:w_}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Vd(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return W2(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=I_(t),r=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let o=[],i=[];for(let c of e)for(let u of c.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(u)):o.push(r+u+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await H3(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,B2(l)]}};q2.URL_SCHEME_REGEX=/^https?:\/\//;function I_(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function X2(e){return e.match(q2.URL_SCHEME_REGEX)!=null}var q3=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>X2(s)):n=X2(e),n)return K2(e,t)}return null};Ut.registerSaveRouter(q3);Ut.registerLoadRouter(q3);function K2(e,t){return new q2(e,t)}function S_(e,t){return K2(e,t)}var Z2=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},C_=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function T_(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Z2(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Z2({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Z2({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function N_(e){return new C_(e)}var X3={};Me(X3,{confusionMatrix:()=>P_});function E_(e,t,n=!1,s=!1){let r=$(e,"a","matMul"),a=$(t,"b","matMul");[r,a]=Mt(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return V.runKernel(Ma,o,i)}var qe=U({matMul_:E_});function R_(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:$(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return V.runKernel(Mi,a,o)}var Ud=U({oneHot_:R_});function __(e,t){let n=$(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{M(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return V.runKernel(So,s,r)}var rt=U({transpose_:__});function D_(e,t,n){let s=$(e,"labels","confusionMatrix"),r=$(t,"predictions","confusionMatrix");M(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),M(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),M(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),M(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),M(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=Ud(ge(s,"int32"),n),o=Ud(ge(r,"int32"),n),i=rt(a),l=qe(i,o);return ge(l,"int32")}var P_=U({confusionMatrix_:D_}),il={};Me(il,{assertAndGetBroadcastShape:()=>xt,getBroadcastDims:()=>K3,getReductionAxes:()=>Zt});function K3(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function Zt(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function xt(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var Os={};Me(Os,{fromPixels:()=>B_,fromPixelsAsync:()=>z_,toPixels:()=>L_});function Z3(e,t,n){if(fi(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Pr(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Po(e,t,s,n)}var ll;function Y3(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r){let f=2;if(r&&e.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(df(_d,V.backendName)!=null){let f={pixels:e},m={numChannels:t};return V.runKernel(_d,f,m)}let[c,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(o)d=e.getContext("2d").getImageData(0,0,c,u).data;else if(s||n)d=e.data;else if(a||r||i){if(ll==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")ll=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ll=document.createElement("canvas").getContext("2d");ll.canvas.width=c,ll.canvas.height=u,ll.drawImage(e,0,0,c,u),d=ll.getImageData(0,0,c,u).data}let p;if(t===4)p=new Int32Array(d);else{let f=c*u;p=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)p[m*t+g]=d[m*4+g]}return Z3(p,[u,c,t],"int32")}function $_(e){return e!=null&&e.data instanceof Uint8Array}function F_(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function O_(e){return e!=null&&e.width!==0&&e.height!==0}function M_(e){return F_()&&!(e instanceof ImageBitmap)&&O_(e)&&!$_(e)}async function z_(e,t=3){let n=null;if(Y().getBool("WRAP_TO_IMAGEBITMAP")&&M_(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return Y3(n,t)}async function L_(e,t){let n=$(e,"img","toPixels");if(!(e instanceof nt)){let c=n;n=ge(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){let u=[0,0,0,255];for(let p=0;p<a;p++){let h=o[c*a+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(u[0]=h*i,u[1]=h*i,u[2]=h*i):u[p]=h*i}let d=c*4;l[d+0]=Math.round(u[0]),l[d+1]=Math.round(u[1]),l[d+2]=Math.round(u[2]),l[d+3]=Math.round(u[3])}if(t!=null){t.width=r,t.height=s;let c=t.getContext("2d"),u=new ImageData(l,r,s);c.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var B_=U({fromPixels_:Y3}),Y2={};Me(Y2,{prepareAndValidate:()=>J3});function J3(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(Ct(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let d=0;d<r.length-1;++d)o*=r[d];let i=e.shape,l=r.slice();l.pop();let c=1;for(let d=a;d<n;++d)c*=i[d],l.push(i[d]);let u=[...ou(e.shape).map(d=>d/c),1].slice(0,a);return[l,o,c,u]}var J2={};Me(J2,{calculateShapes:()=>Q3,validateInput:()=>ey,validateUpdateShape:()=>Q2});function Q2(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function ey(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Q2(n,t,e)}function Q3(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let d=r;d<a;++d)o*=n[d];let i=r<1?1:r,l=Ct(t.shape)/i,c=[...ou(n.slice(0,r)),1],u=Ct(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}var zt={};Me(zt,{assertParamsValid:()=>V_,computeFlatOffset:()=>q_,computeOutShape:()=>G_,getNormalizedAxes:()=>H_,isSliceContinous:()=>j_,maskToAxes:()=>U_,parseSliceParams:()=>lv,sliceInfo:()=>X_,startForAxis:()=>ov,startIndicesWithElidedDims:()=>sv,stopForAxis:()=>iv,stopIndicesWithElidedDims:()=>rv,stridesForAxis:()=>av,stridesWithElidedDims:()=>ev});var ty=-2,W_=-1;function V_(e,t,n){let s=e.shape.length;M(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),M(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)M(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function U_(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function G_(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function ev(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function tv(e,t,n){return n<=e?n:n-(t-1)}function nv(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function H_(e,t,n,s,r,a,o,i,l){let c=e.length,u=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){let h=t[0],f=n+1;u=sv(o,h,f,s,e),d=rv(i,h,f,r,e),p=ev(a,h,f,e)}else for(let h=0;h<c;h++)u[h]=ov(o,s,a,e,h,l),d[h]=iv(i,r,a,e,h,l),p[h]=av(a,h,l);return{begin:u,end:d,strides:p}}function sv(e,t,n,s,r){let a=[...r],o=nv(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=tv(t,n,i),c=s[l];e&1<<l&&(c=0),a[i]=c}return a}function rv(e,t,n,s,r){let a=[...r],o=nv(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=tv(t,n,i),c=s[l];e&1<<l&&(c=Number.MAX_SAFE_INTEGER),a[i]=c}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=pd(0,a[i],r[i])}return a}function av(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function ov(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=pd(0,o,l-1),o}function iv(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=pd(0,o,l):o=pd(-1,o,l-1),o}function j_(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function q_(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function lv(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{M(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(M(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function X_(e,t,n,s,r,a,o,i,l){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let A=0;A<d.dims;A++)u&&(1<<A&i)!==0&&d.numAddAxisAfterEllipsis++,1<<A&o&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};K_(d,p);let h=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(p.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let b=!!(p.shrinkAxisMask&1<<A),v=e[A];if(v===-1){g.push(b?1:-1);continue}let C=[p.beginMask&1<<A,p.endMask&1<<A],I=[p.strides[A]>0?0:-1,p.strides[A]>0?v:v-1];if(b&&p.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[A]===1;let E=!!(p.beginMask&1<<A&&p.endMask&1<<A);if(p.beginValid&&p.endValid){if(b){let P=p.begin[A]<0?v+p.begin[A]:p.begin[A];if(p.begin[A]=P,p.end[A]=p.begin[A]+1,P<0||P>=v)throw Error(`slice index ${p.begin[A]} of dimension ${A} out of bounds.`)}else p.begin[A]=uv(p.begin[A],0,p.strides[A],v,C,I),p.end[A]=uv(p.end[A],1,p.strides[A],v,C,I);let _=p.strides[A]===1&&p.begin[A]===0&&p.end[A]===v;h=h&&_,f=f&&(A===0&&p.strides[A]===1||_)}else h=h&&p.strides[A]===1&&E,f=f&&(A===0&&p.strides[A]===1||E);let R,F=!1;if(p.beginValid&&p.endValid?(R=p.end[A]-p.begin[A],F=!0):b?(R=1,F=!0):E&&v>=0&&(p.strides[A]<0?R=-v:R=v,F=!0),F){let _;R===0||R<0!=p.strides[A]<0?_=0:_=Math.trunc(R/p.strides[A])+(R%p.strides[A]!==0?1:0),g.push(_)}else g.push(-1)}for(let A=0;A<p.finalShapeGatherIndices.length;++A){let b=p.finalShapeGatherIndices[A];b>=0?y.push(g[b]):b===ty&&y.push(1)}return{finalShapeSparse:y.filter((A,b)=>p.finalShapeGatherIndices[b]!==ty),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function K_(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(ty),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(W_),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function uv(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var ce={};Me(ce,{Serializable:()=>cv,SerializationMap:()=>ul,registerClass:()=>Fo});var cv=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ul=class{constructor(){this.classNameMap={}}static getMap(){return ul.instance==null&&(ul.instance=new ul),ul.instance}static register(e){ul.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Fo(e){M(e.className!=null,()=>"Class being registered does not have the static className property defined."),M(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),M(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ul.register(e)}var dv={};Me(dv,{TEST_EPSILON_FLOAT16:()=>pv,encodeStrings:()=>hv,expectArrayBuffersEqual:()=>nD,expectArraysClose:()=>Y_,expectArraysEqual:()=>Q_,expectNumbersClose:()=>eD,expectPromiseToFail:()=>J_,expectValuesInRange:()=>tD,testEpsilon:()=>ny});var Z_=.001,pv=.1;function Y_(e,t,n){return n==null&&(n=ny()),sy(e,t,(s,r)=>ry(s,r,n))}function ny(){return V.backend.floatPrecision()===32?Z_:pv}function sy(e,t,n){let s=!0;if((_n(e)||_n(t))&&(s=!1),_n(e)&&_n(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Pr(e),i=Pr(t);if(!_a(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=_n(e)?e:mi(e),a=_n(t)?t:mi(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}}function J_(e,t){e().then(()=>t.fail(),()=>t())}function Q_(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Da(e)||Da(e[0])||Da(t)||Da(t[0])?sy(e,n,(s,r)=>s==r):sy(e,t,(s,r)=>ry(s,r,0))}function eD(e,t,n){if(n==null&&(n=ny()),!ry(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function ry(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function tD(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function nD(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function hv(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?hv(n):e[t]=Fd(n)}return e}var ay="0.0.0";function oy(){Y().set("PROD",!0)}function sD(){Y().set("DEBUG",!0)}function rD(){Y().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function iy(e){Y().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}I9(iy);function aD(){V.disposeVariables()}function Dn(){return V}function xf(){return V.memory()}function oD(e){return V.profile(e)}function X(e,t){return V.tidy(e,t)}function te(e){P2(e).forEach(n=>n.dispose())}function An(e){return V.keep(e)}function iD(e){return V.time(e)}function ly(e){return V.setBackend(e)}function Bu(){return V.ready()}function xs(){return V.backendName}function lD(e){V.removeBackend(e)}function uy(e){return V.findBackend(e)}function uD(e){return V.findBackendFactory(e)}function cl(e,t,n=1){return V.registerBackend(e,t,n)}function gr(){return V.backend}function cD(e,t){Y().setPlatform(e,t)}function dD(e,t){let n=$(e,"a","add"),s=$(t,"b","add");[n,s]=Mt(n,s);let r={a:n,b:s};return V.runKernel(Zr,r)}var ue=U({add_:dD});function pD(e,t){let n=$(e,"a","floorDiv"),s=$(t,"b","floorDiv");[n,s]=Mt(n,s);let r={a:n,b:s};return V.runKernel(Ka,r)}var Gd=U({floorDiv_:pD});function hD(e,t){let n=$(e,"a","div"),s=$(t,"b","div");if([n,s]=Mt(n,s),n.dtype==="int32"&&s.dtype==="int32")return Gd(n,s);let r={a:n,b:s},a={};return V.runKernel(Ha,r,a)}var de=U({div_:hD});function fD(e,t){let n=$(e,"a","mul"),s=$(t,"b","mul");[n,s]=Mt(n,s);let r={a:n,b:s};return V.runKernel(lo,r)}var L=U({mul_:fD});function mD(e){let t=$(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return V.runKernel(gd,n)}else{let n={x:t};return V.runKernel(gi,n)}}var an=U({abs_:mD});function gD(e){let n={x:$(e,"x","acos")};return V.runKernel(lu,n)}var fv=U({acos_:gD});function yD(e){let n={x:$(e,"x","acosh")};return V.runKernel(uu,n)}var mv=U({acosh_:yD});function AD(e){M(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),M(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>$(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!_a(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return V.runKernel($a,s)}var bf=U({addN_:AD});function xD(e,t=null,n=!1){let r={x:$(e,"x","all","bool")},a={axis:t,keepDims:n};return V.runKernel(cu,r,a)}var cy=U({all_:xD});function bD(e,t=null,n=!1){let r={x:$(e,"x","any","bool")},a={axis:t,keepDims:n};return V.runKernel(du,r,a)}var vf=U({any_:bD});function vD(e,t=0){let s={x:$(e,"x","argMax")},r={axis:t};return V.runKernel(Fa,s,r)}var Ms=U({argMax_:vD});function wD(e,t=0){let s={x:$(e,"x","argMin")},r={axis:t};return V.runKernel(pu,s,r)}var gv=U({argMin_:wD});function kD(e){let n={x:$(e,"x","asin")};return V.runKernel(hu,n)}var yv=U({asin_:kD});function ID(e){let n={x:$(e,"x","asinh")};return V.runKernel(fu,n)}var Av=U({asinh_:ID});function SD(e){let n={x:$(e,"x","atan")};return V.runKernel(mu,n)}var xv=U({atan_:SD});function CD(e,t){let n=$(e,"a","atan2"),s=$(t,"b","atan2");[n,s]=Mt(n,s);let r={a:n,b:s};return V.runKernel(yu,r)}var bv=U({atan2_:CD});function TD(e){let n={x:$(e,"x","atanh")};return V.runKernel(gu,n)}var vv=U({atanh_:TD});function ND(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=Iv(r);return Hd(e,i,n,a,s,null,null,l)}function wv(e,t,n,s,r,a,o="channelsLast"){let[i,l]=wf(t),c;if(o==="channelsLast")c=[i,l,e[3],e[3]];else if(o==="channelsFirst")c=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Hd(e,c,n,s,r,a,!1,o)}function ED(e,t,n,s,r,a,o="NDHWC"){let[i,l,c]=py(t),u,d;if(o==="NDHWC")d="channelsLast",u=[i,l,c,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",u=[i,l,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return kv(e,u,n,s,r,!1,d,a)}function Hd(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,c,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,d]=e;else if(i==="channelsFirst")[l,d,c,u]=e;else throw new Error(`Unknown dataFormat ${i}`);let[p,h,,f]=t,[m,g]=wf(n),[y,x]=wf(s),A=Wu(p,y),b=Wu(h,x),{padInfo:v,outHeight:C,outWidth:I}=DD(r,c,u,m,g,A,b,a,i),E=o?f*d:f,R;return i==="channelsFirst"?R=[l,E,C,I]:i==="channelsLast"&&(R=[l,C,I,E]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:u,inChannels:d,outHeight:C,outWidth:I,outChannels:E,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:A,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:e,outShape:R,filterShape:t}}function kv(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,c,u,d,p]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,d,p]=e;else if(o==="channelsFirst")[l,p,c,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[y,x,A]=py(n),[b,v,C]=py(s),I=Wu(h,b),E=Wu(f,v),R=Wu(m,C),{padInfo:F,outDepth:_,outHeight:P,outWidth:T}=PD(r,c,u,d,y,x,A,I,E,R,i),O=a?g*p:g,G;return o==="channelsFirst"?G=[l,O,_,P,T]:o==="channelsLast"&&(G=[l,_,P,T,O]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:d,inChannels:p,outDepth:_,outHeight:P,outWidth:T,outChannels:O,padInfo:F,strideDepth:y,strideHeight:x,strideWidth:A,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:v,dilationWidth:C,inShape:e,outShape:G,filterShape:t}}function RD(e,t,n,s,r){s==null&&(s=dy(e,t,n));let a=e[0],o=e[1],i=dl((a-t+2*s)/n+1,r),l=dl((o-t+2*s)/n+1,r);return[i,l]}function _D(e,t,n,s,r,a){r==null&&(r=dy(e,t,s));let o=e[0],i=e[1],l=e[2],c=dl((o-t+2*r)/s+1,a),u=dl((i-t+2*r)/s+1,a),d=dl((l-t+2*r)/s+1,a);return[c,u,d,n]}function dy(e,t,n,s=1){let r=Wu(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function wf(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function py(e){return typeof e=="number"?[e,e,e]:e}function Wu(e,t){return t<=1?e:e+(e-1)*(t-1)}function DD(e,t,n,s,r,a,o,i,l){let c,u,d;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=RD([t,n],a,s,e,i);u=h[0],d=h[1]}else if(e==="same"){u=Math.ceil(t/s),d=Math.ceil(n/r);let p=Math.max(0,(u-1)*s+a-t),h=Math.max(0,(d-1)*r+o-n),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),y=h-g;c={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-a+1)/s),d=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=dl((t-a+p+h)/s+1,i),d=dl((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:u,outWidth:d}}function PD(e,t,n,s,r,a,o,i,l,c,u){let d,p,h,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=_D([t,n,s,1],i,1,r,e,u);p=g[0],h=g[1],f=g[2]}else if(e==="same"){p=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/o);let m=(p-1)*r+i-t,g=(h-1)*a+l-n,y=(f-1)*o+c-s,x=Math.floor(m/2),A=m-x,b=Math.floor(g/2),v=g-b,C=Math.floor(y/2),I=y-C;d={top:b,bottom:v,left:C,right:I,front:x,back:A,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/r),h=Math.ceil((n-l+1)/a),f=Math.ceil((s-c+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function dl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Oo(e){let[t,n,s]=wf(e);return t===1&&n===1&&s===1}function $r(e,t){return Oo(e)||Oo(t)}function Iv(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Un(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")M(au(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{M(au(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function $D(e,t){let s={x:$(e,"x","reshape","string_or_numeric")},r={shape:t};return V.runKernel(Bi,s,r)}var H=U({reshape_:$D});function FD(e,t,n,s,r){let a=$(e,"x","avgPool","float32"),o=1;M($r(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Un("avgPool",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=V.runKernel(Oa,c,u);return d=ge(d,a.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var kf=U({avgPool_:FD});function OD(e,t,n,s,r,a="NDHWC"){let o=$(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Un("avgPool3d",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=V.runKernel(fd,c,u);return d=ge(d,i.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var hy=U({avgPool3d_:OD});function MD(e,t=0){M(e.length>=1,()=>"Pass at least one tensor to concat");let n=Wd(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Vn(n[0]);let s=n,r={axis:t};return V.runKernel(Ai,s,r)}var St=U({concat_:MD});function zD(e){let n={x:$(e,"x","sigmoid","float32")};return V.runKernel(Ao,n)}var Pn=U({sigmoid_:zD});function LD(e,t,n){let s=$(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return V.runKernel(Hi,r,a)}var Fe=U({slice_:LD});function BD(e){let n={x:$(e,"x","tanh","float32")};return V.runKernel(Io,n)}var Vu=U({tanh_:BD});function WD(e,t,n,s,r,a){let o=$(e,"forgetBias","basicLSTMCell"),i=$(t,"lstmKernel","basicLSTMCell"),l=$(n,"lstmBias","basicLSTMCell"),c=$(s,"data","basicLSTMCell"),u=$(r,"c","basicLSTMCell"),d=$(a,"h","basicLSTMCell"),p=St([c,d],1),h=qe(p,i),f=ue(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=Fe(f,[0,0],y),A=Fe(f,[0,g],y),b=Fe(f,[0,g*2],y),v=Fe(f,[0,g*3],y),C=ue(L(Pn(x),Vu(A)),L(u,Pn(ue(o,b)))),I=L(Vu(C),Pn(v));return[C,I]}var VD=U({basicLSTMCell_:WD});function UD(e,t,n){let s=$(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);M(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),M(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),M(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return V.runKernel(yi,a,o)}var If=U({batchToSpaceND_:UD});function GD(e){let t;return e.rank===0||e.rank===1?t=H(e,[1,1,1,e.size]):e.rank===2?t=H(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function HD(e,t,n,s,r,a){a==null&&(a=.001);let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;r!=null&&(c=$(r,"scale","batchNorm"));let u;s!=null&&(u=$(s,"offset","batchNorm")),M(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:GD(o),scale:c,offset:u,mean:i,variance:l},h={varianceEpsilon:a},f=V.runKernel(Za,p,h);return H(f,o.shape)}var Uu=U({batchNorm_:HD});function jD(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;r!=null&&(c=$(r,"scale","batchNorm"));let u;return s!=null&&(u=$(s,"offset","batchNorm")),M(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),M(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),M(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Uu(o,i,l,u,c,a)}var Sv=U({batchNorm2d_:jD});function qD(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;r!=null&&(c=$(r,"scale","batchNorm"));let u;return s!=null&&(u=$(s,"offset","batchNorm")),M(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),M(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),M(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Uu(o,i,l,u,c,a)}var Cv=U({batchNorm3d_:qD});function XD(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;r!=null&&(c=$(r,"scale","batchNorm"));let u;return s!=null&&(u=$(s,"offset","batchNorm")),M(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),M(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),M(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Uu(o,i,l,u,c,a)}var Tv=U({batchNorm4d_:XD});function KD(e,t,n){let s=$(e,"x","bincount"),r=$(t,"weights","bincount");M(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return V.runKernel(Lh,a,o)}var fy=U({bincount_:KD});function ZD(e,t){let n=$(e,"s0","broadcastArgs","int32"),s=$(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return V.runKernel(Bh,r)}var Nv=U({broadcastArgs_:ZD});function YD(e,t){let n=$(e,"broadcastTo","x"),s=n.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let c=n.shape.slice();for(;c.length<t.length;)c.unshift(1);n=H(n,c)}let r=n.shape,a=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])a[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return Vn(n);let i={x:n},l={reps:a};return V.runKernel(Jr,i,l)}var jd=U({broadcastTo_:YD});function JD(e){let n={x:$(e,"x","ceil","float32")};return V.runKernel(La,n)}var Ev=U({ceil_:JD});function QD(e,t,n){let s=$(e,"x","clipByValue");M(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return V.runKernel(Yr,r,a)}var bs=U({clipByValue_:QD});function eP(e){return St(e,0)}var Rv=U({concat1d_:eP});function tP(e,t){return St(e,t)}var Gu=U({concat2d_:tP});function nP(e,t){return St(e,t)}var _v=U({concat3d_:nP});function sP(e,t){return St(e,t)}var Dv=U({concat4d_:sP});function rP(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","conv2d","float32"),l=$(t,"filter","conv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Un("conv2d",s,o);let d=r==="NHWC"?c.shape[3]:c.shape[1];M(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),M($r(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let p={x:c,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=V.runKernel(Ba,p,h);return u?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Mo=U({conv2d_:rP});function aP(e,t,n,s,r="NWC",a=1,o){let i=$(e,"x","conv1d"),l=$(t,"filter","conv1d"),c=i,u=!1;i.rank===2&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1]])),M(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),M(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Un("conv1d",s,o),M(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),M($r(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),M(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let d=H(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=H(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Mo(p,d,[1,n],s,"NHWC",[1,a],o);return u?H(g,[g.shape[2],g.shape[3]]):H(g,[g.shape[0],g.shape[2],g.shape[3]])}var my=U({conv1d_:aP});function oP(e,t,n,s,r,a="NHWC",o){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,c=!1;t.rank===3&&(c=!0,l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),M(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),M(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),M(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?l.shape[3]:l.shape[1];M(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),M(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),Un("conv2dDerInput",r,o);let p={dy:l,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=V.runKernel(Wa,p,h);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var gy=U({conv2DBackpropInput_:oP});function iP(e,t,n,s,r,a){let o=$(e,"x","conv2dTranspose"),i=$(t,"filter","conv2dTranspose");return gy(n,o,i,s,r,"NHWC",a)}var yy=U({conv2dTranspose_:iP});function lP(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=$(e,"x","conv3d"),i=$(t,"filter","conv3d"),l=o,c=!1;o.rank===4&&(c=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),M(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),M(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),M($r(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let u={x:l,filter:i},d={strides:n,pad:s,dataFormat:r,dilations:a},p=V.runKernel(yd,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Ay=U({conv3d_:lP});function uP(e,t,n,s,r){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],c=o.shape[4];M(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),M(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),M(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),M(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),M(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let u={dy:o,filter:n},d={pad:r,strides:s,inputShape:a},p=V.runKernel(Uh,u,d);return i?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Pv=U({conv3DBackpropInput_:uP});function cP(e,t,n,s,r){let a=$(e,"x","conv3dTranspose"),o=$(t,"filter","conv3dTranspose");return Pv(n,a,o,s,r)}var $v=U({conv3dTranspose_:cP});function dP(e){let n={x:$(e,"x","cos","float32")};return V.runKernel(Va,n)}var Sf=U({cos_:dP});function pP(e){let n={x:$(e,"x","cosh","float32")};return V.runKernel(Ua,n)}var xy=U({cosh_:pP});function hP(e,t=0,n=!1,s=!1){let a={x:$(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return V.runKernel(xi,a,o)}var by=U({cumsum_:hP});function fP(e,t,n,s=!1){let r=$(e,"x","denseBincount"),a=$(t,"weights","denseBincount");M(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),M(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return V.runKernel(Gh,o,i)}var Fv=U({denseBincount_:fP});function mP(e,t,n="NHWC"){let s=$(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];M(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),M(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),M(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),M(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return V.runKernel(vi,i,l)}var Ov=U({depthToSpace_:mP});function gP(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","depthwiseConv2d","float32"),l=$(t,"filter","depthwiseConv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),Un("depthwiseConv2d",s,o);let d={x:c,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},h=V.runKernel(Ga,d,p);return u?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var qd=U({depthwiseConv2d_:gP});function yP(e){let n={x:$(e,"x","diag")};return V.runKernel(qh,n)}var AP=U({diag_:yP});function xP(e,t,n,s,r=[1,1],a="NHWC"){let o=$(e,"x","dilation2d"),i=$(t,"filter","dilation2d");M(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),M(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),M(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,c=!1;o.rank===3&&(l=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);let u={x:l,filter:i},d={strides:n,pad:s,dilations:r},p=V.runKernel(Ad,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Mv=U({dilation2d_:xP});function bP(e,t){let n=$(e,"a","equal","string_or_numeric"),s=$(t,"b","equal","string_or_numeric");[n,s]=Mt(n,s),xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(wi,r)}var zs=U({equal_:bP});function vP(e,t,n){let s=$(t,"a","where"),r=$(n,"b","where"),a=$(e,"condition","where","bool"),o=xt(xt(a.shape,s.shape),r.shape),i=jd(a,o),l=jd(s,o),c=jd(r,o),u={condition:i,t:l,e:c};return V.runKernel(Gi,u)}var Gn=U({where_:vP});function wP(e){let n={x:$(e,"x","zerosLike")};return V.runKernel(el,n)}var at=U({zerosLike_:wP});function kP(e,t){let n=$(e,"a","div"),s=$(t,"b","div");[n,s]=Mt(n,s);let r=de(n,s),a=at(r),o=zs(s,a);return Gn(o,a,r)}var zv=U({divNoNan_:kP});function IP(e,t){let n=$(e,"t1","dot"),s=$(t,"t2","dot");M((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(M(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=H(n,[1,-1]),i=H(s,[-1,1]),l=qe(o,i);return H(l,[])}else if(n.rank===1&&s.rank===2){let o=H(n,[1,-1]),i=H(s,[s.shape[0],s.shape[1]]),l=qe(o,i);return H(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=H(s,[-1,1]),i=qe(n,o);return H(i,[i.size])}else{let o=H(s,[s.shape[0],s.shape[1]]);return qe(n,o)}}var SP=U({dot_:IP});function CP(e,...t){let n=t.map((r,a)=>$(r,`tensors${a}`,"einsum")),s={equation:e};return V.runKernel(xd,n,s)}var Lv=U({einsum_:CP});function TP(e){let n={x:$(e,"x","elu","float32")};return V.runKernel(ja,n)}var Xd=U({elu_:TP});function NP(e){let t=$(e,"x","erf");M(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ge(t,"float32"));let n={x:t};return V.runKernel(Au,n)}var Bv=U({erf_:NP});function EP(e){let n={x:$(e,"x","exp")};return V.runKernel(qa,n)}var Ls=U({exp_:EP});function RP(e,t=0){let n=$(e,"x","expandDims","string_or_numeric");M(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return V.runKernel(ki,s,r)}var Yt=U({expandDims_:RP});function _P(e){let n={x:$(e,"x","expm1")};return V.runKernel(Ii,n)}var Wv=U({expm1_:_P});function DP(e,t){let n=$(e,"x","tile","string_or_numeric");M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return V.runKernel(Jr,s,r)}var Qs=U({tile_:DP});function PP(e,t,n,s="float32"){t==null&&(t=e);let r=Le([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=H(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return Qs(Yt(o,0),[n[0],1,1]);if(n.length===2)return Qs(Yt(Yt(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return Qs(Yt(Yt(Yt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var vy=U({eye_:PP});function Hu(e,t,n){let s={shape:e,value:t,dtype:n};return V.runKernel(xu,{},s)}function $P(e){let n={x:$(e,"x","floor","float32")};return V.runKernel(Xa,n)}var Kd=U({floor_:$P});function FP(e,t,n=0,s=0){let r=$(e,"x","gather"),a=$(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return V.runKernel(Ci,o,i)}var ju=U({gather_:FP});function OP(e,t){let n=$(e,"a","greater","string_or_numeric"),s=$(t,"b","greater","string_or_numeric");[n,s]=Mt(n,s),xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ni,r)}var vs=U({greater_:OP});function MP(e,t){let n=$(e,"a","greaterEqual","string_or_numeric"),s=$(t,"b","greaterEqual","string_or_numeric");[n,s]=Mt(n,s),xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ya,r)}var pl=U({greaterEqual_:MP});function zP(e){let n={input:$(e,"input","imag")};return V.runKernel(bd,n)}var Cf=U({imag_:zP});function LP(e){let n={x:$(e,"x","isFinite")};return V.runKernel(bu,n)}var BP=U({isFinite_:LP});function WP(e){let n={x:$(e,"x","isInf")};return V.runKernel(vu,n)}var VP=U({isInf_:WP});function UP(e){let n={x:$(e,"x","isNaN")};return V.runKernel(wu,n)}var Vv=U({isNaN_:UP});function GP(e,t=.2){let s={x:$(e,"x","leakyRelu")},r={alpha:t};return V.runKernel(Qa,s,r)}var Tf=U({leakyRelu_:GP});function HP(e,t){let n=$(e,"a","less","string_or_numeric"),s=$(t,"b","less","string_or_numeric");[n,s]=Mt(n,s),xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ei,r)}var wy=U({less_:HP});function jP(e,t){let n=$(e,"a","lessEqual","string_or_numeric"),s=$(t,"b","lessEqual","string_or_numeric");[n,s]=Mt(n,s),xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ri,r)}var hl=U({lessEqual_:jP});function Uv(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return V.runKernel(Qh,{},s)}function qP(e,t=5,n=1,s=1,r=.5){let a=$(e,"x","localResponseNormalization");M(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),M(au(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=H(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},c={depthRadius:t,bias:n,alpha:s,beta:r},u=V.runKernel(wd,l,c);return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Gv=U({localResponseNormalization_:qP});function XP(e){let n={x:$(e,"x","log","float32")};return V.runKernel(eo,n)}var Bs=U({log_:XP});function KP(e){let n={x:$(e,"x","log1p")};return V.runKernel(ku,n)}var Nf=U({log1p_:KP});function ZP(e){return M(Pa(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=$(t,"x","tf.grad","string_or_numeric"),r=n!=null?$(n,"dy","tf.grad"):null;return V.tidy(()=>{let{value:a,grads:o}=V.gradients(()=>e(s),[s],r);return r!=null&&Ln(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Ef(o),o[0]})}}function YP(e){return M(Pa(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{M(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=Wd(t,"args","tf.grads","string_or_numeric"),r=n!=null?$(n,"dy","tf.grads"):null;return V.tidy(()=>{let{value:a,grads:o}=V.gradients(()=>e(...s),s,r);return r!=null&&Ln(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ef(o),o})}}function JP(e){return M(Pa(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{M(t instanceof nt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),M(n==null||n instanceof nt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=V.gradients(()=>e(t),[t],n);return Ef(s),{grad:s[0],value:r}}}function QP(e){return M(Pa(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{M(Array.isArray(t)&&t.every(r=>r instanceof nt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),M(n==null||n instanceof nt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=V.gradients(()=>e(...t),t,n);return n!=null&&Ln(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ef(s.grads),s}}function Hv(e,t){M(Pa(e),()=>"The f passed in variableGrads(f) must be a function"),M(t==null||Array.isArray(t)&&t.every(c=>c instanceof Ld),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in V.registeredVariables)t.push(V.registeredVariables[c])}let s=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),M(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=V.gradients(e,t,null,a);M(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((c,u)=>{i[u]!=null&&(l[c.name]=i[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Fr(e){return V.customGrad(e)}function Ef(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function e$(e){let n={x:$(e,"x","neg")};return V.runKernel(Di,n)}var Lt=U({neg_:e$});function t$(e){let n={x:$(e,"x","softplus")};return V.runKernel(Du,n)}var qu=U({softplus_:t$});function n$(e){let t=$(e,"x","logSigmoid");return Fr(s=>({value:Lt(qu(Lt(s))),gradFunc:o=>L(o,Pn(Lt(s)))}))(t)}var s$=U({logSigmoid_:n$});function r$(e,t=null,n=!1){let r={x:$(e,"x","max")},a={reductionIndices:t,keepDims:n};return V.runKernel(to,r,a)}var xn=U({max_:r$});function a$(e,t){let n=$(e,"a","sub"),s=$(t,"b","sub");[n,s]=Mt(n,s);let r={a:n,b:s};return V.runKernel(ko,r)}var pe=U({sub_:a$});function o$(e,t=null,n=!1){let s=$(e,"x","sum");s.dtype==="bool"&&(s=ge(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return V.runKernel(bo,r,a)}var we=U({sum_:o$});function i$(e,t=-1){let n=$(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Fr((r,a)=>{let o=!0,i=xn(r,t,!0),l=pe(r,i),c=pe(ge(l,"float32"),Bs(we(Ls(l),t,o)));return a([c]),{value:c,gradFunc:(d,p)=>{let[h]=p,f=!0,m=Ls(h);return pe(d,L(we(d,t,f),m))}}})(n)}var ky=U({logSoftmax_:i$});function Iy(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function jv(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function qv(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function fl(e,t){let n=t.map(s=>1);return jv(e,n,t)}function l$(e,t,n){M(Iy(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Xv(e,t){if(Iy(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function Sy(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function u$(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function c$(e,t=null,n=!1){let s=$(e,"x","logSumExp"),r=Ys(t,s.shape),a=xn(s,r,!0),o=pe(s,a),i=Ls(o),l=we(i,r),c=Bs(l),u=ue(H(a,c.shape),c);if(n){let d=fl(u.shape,r);return H(u,d)}return u}var Kv=U({logSumExp_:c$});function d$(e,t){let n=$(e,"a","logicalAnd","bool"),s=$(t,"b","logicalAnd","bool");xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(_i,r)}var yr=U({logicalAnd_:d$});function p$(e){let n={x:$(e,"x","logicalNot","bool")};return V.runKernel(Iu,n)}var Rf=U({logicalNot_:p$});function h$(e,t){let n=$(e,"a","logicalOr","bool"),s=$(t,"b","logicalOr","bool");xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(vd,r)}var Cy=U({logicalOr_:h$});function f$(e,t){let n=$(e,"a","logicalXor","bool"),s=$(t,"b","logicalXor","bool");return xt(n.shape,s.shape),yr(Cy(e,t),Rf(yr(e,t)))}var m$=U({logicalXor_:f$});function g$(e,t,n,s,r){let a=$(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),M($r(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),Un("maxPool",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=V.runKernel(so,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var _f=U({maxPool_:g$});function y$(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=$(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Un("maxPool3d",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=V.runKernel(kd,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Ty=U({maxPool3d_:y$});function A$(e,t,n,s,r=!1){let o={x:$(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=V.runKernel(sf,o,i);return{result:l[0],indexes:l[1]}}var Zv=U({maxPoolWithArgmax_:A$});function x$(e,t){let n=$(e,"a","maximum"),s=$(t,"b","maximum");[n,s]=Mt(n,s),n.dtype==="bool"&&(n=ge(n,"int32"),s=ge(s,"int32")),xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(no,r)}var ea=U({maximum_:x$});function b$(e,t=null,n=!1){let r={x:$(e,"x","mean")},a={axis:t,keepDims:n};return V.runKernel(ro,r,a)}var Gt=U({mean_:b$});function Ht(e,t="float32"){if(t==="complex64"){let s=Ht(e,"float32"),r=Ht(e,"float32");return Do(s,r)}let n=Oh(Ct(e),t);return V.makeTensor(n,e,t)}function ws(e,t="float32"){if(t==="complex64"){let s=ws(e,"float32"),r=Ht(e,"float32");return Do(s,r)}let n=I2(Ct(e),t);return V.makeTensor(n,e,t)}function v$(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=$(e,"x","meshgrid",e instanceof nt?e.dtype:"float32");if(t===void 0)return[s];let r=$(t,"y","meshgrid",t instanceof nt?t.dtype:"float32"),a=Ct(s.shape),o=Ct(r.shape);return n==="xy"?(s=H(s,[1,-1]),r=H(r,[-1,1]),[qe(ws([o,1],s.dtype),s),qe(r,ws([1,a],r.dtype))]):(s=H(s,[-1,1]),r=H(r,[1,-1]),[qe(s,ws([1,o],s.dtype)),qe(ws([a,1],r.dtype),r)])}function w$(e,t=null,n=!1){let r={x:$(e,"x","min")},a={axis:t,keepDims:n};return V.runKernel(ao,r,a)}var zo=U({min_:w$});function k$(e,t){let n=$(e,"a","minimum"),s=$(t,"b","minimum");[n,s]=Mt(n,s),n.dtype==="bool"&&(n=ge(n,"int32"),s=ge(s,"int32")),xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(oo,r)}var Zd=U({minimum_:k$});function I$(e,t,n){M(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=$(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)M(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),M(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return V.runKernel(io,o,a)}var Yv=U({mirrorPad_:I$});function S$(e,t){let n=$(e,"a","mod"),s=$(t,"b","mod");[n,s]=Mt(n,s);let r={a:n,b:s};return V.runKernel(Su,r)}var Xu=U({mod_:S$});function C$(e){let t=$(e,"x","square"),n={};return V.runKernel("Square",{x:t},n)}var bt=U({square_:C$});function T$(e,t=null,n=!1){e=$(e,"x","moments");let s=Ys(t,e.shape),r=Gt(e,s,n),a=r.shape;n||(a=fl(r.shape,s));let o=bt(pe(ge(e,"float32"),H(r,a))),i=Gt(o,s,n);return{mean:r,variance:i}}var Df=U({moments_:T$});function N$(e,t,n,s){let r=$(t,"data","multiRNNCell"),a=Wd(n,"c","multiRNNCell"),o=Wd(s,"h","multiRNNCell"),i=r,l=[];for(let d=0;d<e.length;d++){let p=e[d](i,a[d],o[d]);l.push(p[0]),l.push(p[1]),i=p[1]}let c=[],u=[];for(let d=0;d<l.length;d+=2)c.push(l[d]),u.push(l[d+1]);return[c,u]}var E$=U({multiRNNCell_:N$});function R$(e,t,n,s=!1){let r=$(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?H(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:s},u=V.runKernel(rf,l,c);return o===1?H(u,[u.size]):u}var Jv=U({multinomial_:R$});function _$(e,t){let n=$(e,"a","notEqual","string_or_numeric"),s=$(t,"b","notEqual","string_or_numeric");[n,s]=Mt(n,s),xt(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Pi,r)}var Ku=U({notEqual_:_$});function D$(e){let n={x:$(e,"x","onesLike")};return V.runKernel(Oi,n)}var Ws=U({onesLike_:D$});function P$(e,t){let n=$(e,"v1","outerProduct"),s=$(t,"v2","outerProduct");M(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=H(n,[-1,1]),a=H(s,[1,-1]);return qe(r,a)}var $$=U({outerProduct_:P$});function F$(e,t,n=0){let s=$(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return V.runKernel(uo,a,r)}var er=U({pad_:F$});function O$(e,t,n=0){return M(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),er(e,[t],n)}var M$=U({pad1d_:O$});function z$(e,t,n=0){return M(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),er(e,t,n)}var L$=U({pad2d_:z$});function B$(e,t,n=0){return M(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),er(e,t,n)}var W$=U({pad3d_:B$});function V$(e,t,n=0){return M(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),er(e,t,n)}var U$=U({pad4d_:V$});function G$(e,t,n){let s=$(e,"x","spaceToBatchND");M(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),M(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),M(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return V.runKernel(qi,r,a)}var Pf=U({spaceToBatchND_:G$});function H$(e,t,n,s,r,a,o){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let i=$(e,"x","maxPool"),l=i,c=!1;i.rank===3&&(c=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M($r(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let u=wv(l.shape,t,a,r,s),d=[u.dilationHeight,u.dilationWidth],p;s==="same"?p=q$([u.filterHeight,u.filterWidth],d):p=[[0,0],[0,0]];let h=d[0]===1&&d[1]===1,[f,m]=j$([u.inHeight,u.inWidth],d,p),g=h?s:"valid",y=h?l:Pf(l,d,f),A=(n==="avg"?()=>kf(y,t,a,g,o):()=>_f(y,t,a,g,o))(),b=h?A:If(A,d,m);return c?H(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function j$(e,t,n){let s=n.map(u=>u[0]),r=n.map(u=>u[1]),a=e.concat(s,r),o=t.map((u,d)=>(u-a[d]%u)%u),i=r.map((u,d)=>u+o[d]),l=t.map((u,d)=>[s[d],i[d]]),c=t.map((u,d)=>[0,o[d]]);return[l,c]}function q$(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var X$=U({pool_:H$});function K$(e,t){let n=$(e,"base","pow"),s=$(t,"exp","pow");[n,s]=Mt(n,s);let r={a:n,b:s};return V.runKernel(co,r)}var Lo=U({pow_:K$});function Z$(e,t){let n=$(e,"x","prelu"),s=$(t,"alpha","prelu"),r={x:n,alpha:s};return V.runKernel(po,r)}var $f=U({prelu_:Z$});function Y$(e,t=null,n=!1){let s=$(e,"x","prod");s.dtype==="bool"&&(s=ge(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return V.runKernel(Li,r,a)}var Ny=U({prod_:Y$});function J$(e,t,n){let s=Ct(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return V.makeTensor(r,e,n)}var Q$=U({rand_:J$}),Ey=hi(_h()),Ry=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=Ey.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},eF=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=Ey.alea(r.toString()),this.randn=new Ry(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},tF=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ey.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function nF(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new eF(t,n,s,r),o=Le(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var sF=U({randomGamma_:nF});function rF(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new Ry(t,n,s,!1,r),o=Le(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var Qv=U({randomNormal_:rF});function aF(e,t=0,n=1,s="float32",r){let a=Le(e,s),o=new tF(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var Zu=U({randomUniform_:aF});function Yu(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return V.runKernel(Tu,{},r)}function oF(e){let n={input:$(e,"input","real")};return V.runKernel(Id,n)}var Yd=U({real_:oF});function iF(e){let n={x:$(e,"x","reciprocal")};return V.runKernel(Nu,n)}var ew=U({reciprocal_:iF});function lF(e){let n={x:$(e,"x","relu")};return V.runKernel(ho,n)}var Or=U({relu_:lF});function uF(e){let n={x:$(e,"x","relu6")};return V.runKernel(mo,n)}var _y=U({relu6_:uF});function cF(e,t){let s={x:$(e,"x","reverse")},r={dims:t};return V.runKernel(Wi,s,r)}var Vs=U({reverse_:cF});function dF(e){let t=$(e,"x","reverse");return M(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Vs(t,0)}var pF=U({reverse1d_:dF});function hF(e,t){let n=$(e,"x","reverse");return M(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Vs(n,t)}var fF=U({reverse2d_:hF});function mF(e,t){let n=$(e,"x","reverse");return M(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Vs(n,t)}var gF=U({reverse3d_:mF});function yF(e,t){let n=$(e,"x","reverse");return M(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Vs(n,t)}var AF=U({reverse4d_:yF});function xF(e){let n={x:$(e,"x","round")};return V.runKernel(Vi,n)}var Dy=U({round_:xF});function bF(e){let n={x:$(e,"x","rsqrt","float32")};return V.runKernel(go,n)}var Py=U({rsqrt_:bF});function Te(e,t){if((_n(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&_n(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Po(e,[],[],t)}function vF(e){let n={x:$(e,"x","selu")};return V.runKernel(Ru,n)}var $y=U({selu_:vF});function wF(e,t,n,s,r,a=[1,1],o="NHWC"){let i=$(e,"x","separableConv2d"),l=$(t,"depthwiseFilter","separableConv2d"),c=$(n,"pointwiseFilter","separableConv2d"),u=i,d=!1;if(i.rank===3&&(d=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),M(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let p=l.shape[2],h=l.shape[3];M(c.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`);let f=qd(u,l,s,r,o,a),g=Mo(f,c,1,"valid",o);return d?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var tw=U({separableConv2d_:wF});async function kF(e,t){let n=$(e,"x","setdiff1d"),s=$(t,"y","setdiff1d");M(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),M(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),M(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;let l=new rn([i],n.dtype),c=new rn([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(l.values[d]=r[u],c.values[d]=u,d++);return[l.toTensor(),c.toTensor()]}var nw=kF;function IF(e){let n={x:$(e,"x","sign")};return V.runKernel(_u,n)}var sw=U({sign_:IF});function SF(e){let n={x:$(e,"x","sin","float32")};return V.runKernel(yo,n)}var Fy=U({sin_:SF});function CF(e){let n={x:$(e,"x","sinh")};return V.runKernel(ji,n)}var Oy=U({sinh_:CF});function TF(e,t,n){let s=$(e,"x","slice1d");return M(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Fe(s,[t],[n])}var Ff=U({slice1d_:TF});function NF(e,t,n){let s=$(e,"x","slice2d");return M(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Fe(s,t,n)}var My=U({slice2d_:NF});function EF(e,t,n){let s=$(e,"x","slice3d");return M(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Fe(s,t,n)}var ml=U({slice3d_:EF});function RF(e,t,n){let s=$(e,"x","slice4d");return M(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Fe(s,t,n)}var gl=U({slice4d_:RF});function _F(e,t=-1){let n=$(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return V.runKernel(vo,s,r)}var Ju=U({softmax_:_F});function DF(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(Yh,t)}var Of=U({fft_:DF});function PF(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(Jh,t)}var Jd=U({ifft_:PF});function $F(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=H(e,[n,t]);s=Jd(r)}else{let r=[n,2*(t-1)],a=H(Yd(e),[n,t]),o=H(Cf(e),[n,t]),i=Vs(Fe(a,[0,1],[n,t-2]),1),l=L(Vs(Fe(o,[0,1],[n,t-2]),1),Te(-1)),c=St([a,i],1),u=St([o,l],1),d=H(Do(c,u),[r[0],r[1]]);s=Jd(d)}if(s=Yd(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=H(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var zy=U({irfft_:$F});function FF(e,t,n=0){let r={x:$(e,"x","split")},a={numOrSizeSplits:t,axis:n};return V.runKernel(Xi,r,a)}var Jt=U({split_:FF});function OF(e,t){M(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=Fe(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=St([e,Ht(f)],e.shape.length-1),n=t}else r=e;let a=at(r),o=H(Do(r,a),[s,n]),i=Of(o),l=Math.floor(n/2)+1,c=Yd(i),u=Cf(i),d=Jt(c,[l,n-l],c.shape.length-1),p=Jt(u,[l,n-l],u.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,H(Do(d[0],p[0]),h)}var Mf=U({rfft_:OF});function MF(e){let n={x:$(e,"x","sqrt","float32")};return V.runKernel(xo,n)}var $n=U({sqrt_:MF});function zF(e,t){let n=$(e,"a","squaredDifference"),s=$(t,"b","squaredDifference");[n,s]=Mt(n,s),xt(n.shape,s.shape);let r={a:n,b:s},a={};return V.runKernel(wo,r,a)}var Ly=U({squaredDifference_:zF});function LF(e,t){let n=$(e,"x","squeeze");return H(n,Y5(n.shape,t).newShape)}var Ye=U({squeeze_:LF});function BF(e,t=0){let n=Wd(e,"tensors","stack","string_or_numeric");M(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&M(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return V.runKernel(zi,s,r)}var on=U({stack_:BF});function WF(e,t=0){let s={x:$(e,"x","step")},r={alpha:t};return V.runKernel(Co,s,r)}var Qd=U({step_:WF});function VF(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let u={x:$(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return V.runKernel(Ki,u,d)}var rw=U({stridedSlice_:VF});function UF(e){let n={x:$(e,"x","tan","float32")};return V.runKernel(Zi,n)}var aw=U({tan_:UF});function Tt(e,t){fi(e);let n=Pr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Po(e,null,n,t)}function Ar(e,t,n){if(fi(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Pr(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Po(e,t,s,n)}function GF(e,t,n){if(fi(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Pr(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Po(e,t,s,n)}function HF(e,t,n){if(fi(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Pr(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Po(e,t,s,n)}function jF(e,t,n){if(fi(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Pr(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Po(e,t,s,n)}function qF(e,t=1,n=!0){let s=$(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=V.runKernel(Yi,a,o);return{values:i,indices:l}}var ow=U({topk_:qF});function XF(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new Ry(t,n,s,!0,r),o=Le(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var zf=U({truncatedNormal_:XF});function KF(e,t=0){let n=$(e,"x","unique","string_or_numeric");M(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=V.runKernel(cf,s,r);return{values:a,indices:o}}var By=U({unique_:KF});function ZF(e,t,n){let s=$(e,"x","unsortedSegmentSum"),r=$(t,"segmentIds","unsortedSegmentSum","int32");M(au(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return V.runKernel(Rd,a,o)}var iw=U({unsortedSegmentSum_:ZF});function YF(e,t=0){let n=$(e,"x","unstack","string_or_numeric");M(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return V.runKernel(Qi,s,r)}var is=U({unstack_:YF});function lw(e,t=!0,n,s){return V.makeVariable(e,t,n,s)}function uw(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=Le(e,"int32"),r=Le([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function JF(e){let t=$(e,"condition","whereAsync","bool"),n=await t.data(),s=uw(t.shape,n);return e!==t&&t.dispose(),s}var Wy=JF;async function QF(e,t,n){let s=$(e,"tensor","boolMask"),r=$(t,"mask","boolMask","bool"),a=n==null?0:n,o=r.rank,i=s.shape;M(o>0,()=>"mask cannot be scalar"),Ln(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let c=i.slice(0,a).concat([l],i.slice(a+o)),u=H(s,c),d=H(r,[-1]),p=await Wy(d),h=Ye(p,[1]),f=ju(u,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),u.dispose(),d.dispose(),p.dispose(),f}var eO=QF;function tO(e,t="euclidean",n=null,s=!1){e=$(e,"x","norm");let r=cw(e,t,n),a=r.shape;if(s){let o=Ys(n,e.shape);a=fl(r.shape,o)}return H(r,a)}function cw(e,t,n=null){if(e.rank===0)return an(e);if(e.rank!==1&&n===null)return cw(H(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return we(an(e),n);if(t===1/0)return xn(an(e),n);if(t===-1/0)return zo(an(e),n);if(t==="euclidean"||t===2)return $n(we(Lo(an(e),Te(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return xn(we(an(e),n[0]),n[1]-1);if(t===1/0)return xn(we(an(e),n[1]),n[0]);if(t===-1/0)return zo(we(an(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return $n(we(bt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Vy=U({norm_:tO});function nO(e,t,n,s,r=!0){let a=$(e,"v","movingAverage"),o=$(t,"x","movingAverage"),i=$(n,"decay","movingAverage");k3(a,o),M(_a(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Te(1),c=pe(l,i),u=L(pe(o,a),c);if(r){M(s!=null,()=>"When using zeroDebias: true, step is required.");let d=$(s,"step","movingAverage");u=de(u,pe(l,Lo(i,d)))}return ue(a,u)}var sO=U({movingAverage_:nO});function rO(e,t,n){let s=$(e,"indices","scatterND","int32"),r=$(t,"updates","scatterND");ey(r,s,n);let a={indices:s,updates:r},o={shape:n};return V.runKernel(Ui,a,o)}var dw=U({scatterND_:rO});function aO(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function oO(e,t,n,s=0){let r=$(e,"sparseIndices","sparseToDense","int32"),a=$(t,"sparseValues","sparseToDense"),o=$(s,"defaultValue","sparseToDense",a.dtype);aO(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return V.runKernel(Nd,i,l)}var Uy=U({sparseToDense_:oO});function iO(e,t){let n=$(t,"indices","gatherND","int32"),r={params:$(e,"x","gatherND","string_or_numeric"),indices:n};return V.runKernel(Ti,r)}var pw=U({gatherND_:iO});function lO(e,t){if(t==null)return e.shape.slice();if(_a(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function uO(e,t,n,s){let r=$(e,"x","dropout");if(M(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),M(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof nt?r.clone():r;let a=lO(r,n),o=1-t,i=de(Kd(ue(Zu(a,0,1,"float32",s),o)),o);return L(r,i)}var hw=U({dropout_:uO});function fw(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Gy(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return Tt(r,"float32")}async function cO(e,t,n=1){let s=$(e,"predictions","inTopK"),r=$(t,"targets","inTopK");M(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),M(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Ln(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];M(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,c]=[o.length/a,a],u=J5("bool",l);for(let d=0;d<l;d++){let p=d*c,h=o.subarray(p,p+c),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),u[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){u[d]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),ht(u,r.shape,"bool")}var dO=cO,Bo={};Me(Bo,{conv2d:()=>fO,depthwiseConv2d:()=>AO,matMul:()=>bO});function pO(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]])),M(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),M(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),M(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=a==="NHWC"?i.shape[3]:i.shape[1],u=a==="NHWC"?l.shape[3]:l.shape[1];M(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),M(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),Un("conv2dDerFilter",r,o);let d={x:i,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return V.runKernel(Wh,d,p)}var Hy=U({conv2DBackpropFilter_:pO});function Lf(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return L(e,Qd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Bf(e,t){let n=t,s=Zt(e.shape,t.shape);return s.length>0&&(n=we(n,s)),H(n,e.shape)}function Wf(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Or(e);if(t==="elu")return Xd(e);if(t==="relu6")return _y(e);if(t==="prelu")return $f(e,n);if(t==="leakyrelu")return Tf(e,s);if(t==="sigmoid")return Pn(e);throw new Error(`Unknown fused activation ${t}.`)}var Vf=(e,t)=>!(e>0)||t==="linear";function hO({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Vf(V.state.gradientDepth,l)===!1){let v=Mo(e,t,n,s,r,a,o);return i!=null&&(v=ue(v,i)),Wf(v,l,c,u)}let d=$(e,"x","conv2d","float32"),p=$(t,"filter","conv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),M(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),Un("fused conv2d",s,o),M(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),M($r(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=Hd(h.shape,p.shape,n,a,s,o),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Mt(g,d),xt(m.outShape,g.shape));let y;c!=null&&(y=$(c,"prelu weights","fused conv2d"));let x=(v,C)=>{let[I,E,R,F]=C,_=Lf(v,R,l);M(Oo(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let P=gy(E.shape,_,I,n,s),T=Hy(E,_,I.shape,n,s),O=[P,T];if(F!=null){let G=Bf(F,_);O.push(G)}return O},A={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Fr((C,I,E)=>{let R=V.runKernel(No,A,b);return E([I,C,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):Fr((C,I,E,R)=>{let F=V.runKernel(No,A,b);return R([I,C,F,E]),f&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(h,p,g)}var fO=U({fusedConv2d_:hO});function mO(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:i,dy:l},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return V.runKernel(Hh,c,u)}var mw=U({depthwiseConv2dNativeBackpropFilter_:mO});function gO(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:i,filter:n},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},d=V.runKernel(jh,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var gw=U({depthwiseConv2dNativeBackpropInput_:gO});function yO({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(Vf(V.state.gradientDepth,l)===!1){let v=qd(e,t,n,s,r,a,o);return i!=null&&(v=ue(v,i)),Wf(v,l,c,u)}let d=$(e,"x","depthwiseConv2d","float32"),p=$(t,"filter","depthwiseConv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),M(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),M(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),M($r(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),Un("fused depthwiseConv2d",s,o);let m=Hd(h.shape,p.shape,n,a,s,o,!0),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Mt(g,d),xt(m.outShape,g.shape));let y;c!=null&&(y=$(c,"prelu weights","fused depthwiseConv2d"));let x=(v,C)=>{M(Oo(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[I,E,R,F]=C,_=Lf(v,R,l),P=gw(E.shape,_,I,n,s,a,o),T=mw(E,_,I.shape,n,s,a,o);if(F!=null){let O=Bf(g,_);return[P,T,O]}return[P,T]},A={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Fr((C,I,E)=>{let R=V.runKernel(Eo,A,b);return E([I,C,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):Fr((C,I,E,R)=>{let F=V.runKernel(Eo,A,b);return R([I,C,F,E]),f&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(h,p,g)}var AO=U({fusedDepthwiseConv2d_:yO});function xO({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(Vf(V.state.gradientDepth,a)===!1){let _=qe(e,t,n,s);return r!=null&&(_=ue(_,r)),Wf(_,a,o,i)}let l=$(e,"a","fused matMul"),c=$(t,"b","fused matMul");[l,c]=Mt(l,c);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=Ct(f),y=Ct(m);M(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);let A=xt(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,h]),b=n?H(l,[g,u,p]):H(l,[g,p,u]),v=s?H(c,[y,h,d]):H(c,[y,d,h]),C;r!=null&&(C=$(r,"bias","fused matMul"),[C]=Mt(C,l),xt(A,C.shape));let I;o!=null&&(I=$(o,"prelu weights","fused matMul"));let E=(_,P)=>{let[T,O,G,K]=P,z=Lf(H(_,G.shape),G,a),j,W;if(!n&&!s?(j=qe(z,O,!1,!0),W=qe(T,z,!0,!1)):!n&&s?(j=qe(z,O,!1,!1),W=qe(z,T,!0,!1)):n&&!s?(j=qe(O,z,!1,!0),W=qe(T,z,!1,!1)):(j=qe(O,z,!0,!0),W=qe(z,T,!0,!0)),r!=null){let Q=Bf(K,z);return[j,W,Q]}else return[j,W]},R={a:b,b:v,bias:C,preluActivationWeights:I},F={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?Fr((P,T,O)=>{let G=V.runKernel(To,R,F);return O([P,T,G]),{value:H(G,A),gradFunc:E}})(b,v):Fr((P,T,O,G)=>{let K=V.runKernel(To,R,F);return G([P,T,K,O]),{value:H(K,A),gradFunc:E}})(b,v,C)}var bO=U({fusedMatMul_:xO});function vO(e){return Gy(e,.54,.46)}var wO=U({hammingWindow_:vO});function kO(e){return Gy(e,.5,.5)}var yw=U({hannWindow_:kO});function IO(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(Fe(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=St([Fe(e,a,t-i),Hu([i],r)]);o.push(l),a+=n}return o.length===0?Ar([],[0,t]):H(St(o),[o.length,t])}var Aw=U({frame_:IO});function SO(e,t,n,s,r=yw){s==null&&(s=fw(t));let a=Aw(e,t,n),o=L(a,r(t));return Mf(o,s)}var CO=U({stft_:SO});function TO(e,t,n,s,r="bilinear",a=0){let o=$(e,"image","cropAndResize"),i=$(t,"boxes","cropAndResize","float32"),l=$(n,"boxInd","cropAndResize","int32"),c=i.shape[0];M(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),M(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),M(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),M(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),M(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let u={image:o,boxes:i,boxInd:l},d={method:r,extrapolationValue:a,cropSize:s};return V.runKernel(bi,u,d)}var NO=U({cropAndResize_:TO});function EO(e){let t=$(e,"image","flipLeftRight","float32");M(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return V.runKernel(Si,n,{})}var RO=U({flipLeftRight_:EO});function _O(e){let t=$(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];M(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),M(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Qs(t,r)}var DO=U({grayscaleToRGB_:_O});function PO(e,t,n=0,s=.5){let r=$(e,"image","rotateWithOffset","float32");M(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return V.runKernel(tl,a,o)}var $O=U({rotateWithOffset_:PO});function Qu(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),M(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),M(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),M(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),M(t.rank===1,()=>"scores must be a 1D tensor"),M(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),M(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function FO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppression","float32"),o=$(t,"scores","nonMaxSuppression","float32"),i=Qu(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return V.runKernel($i,{boxes:a,scores:o},l)}var OO=U({nonMaxSuppression_:FO});function MO(e,t,n){let s=zO(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function zO(e,t,n){return BO(e,t,n||LO)}function LO(e,t){return e>t?1:e<t?-1:0}function BO(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function xw(e,t,n,s,r){return jy(e,t,n,s,r,0)}function bw(e,t,n,s,r,a){return jy(e,t,n,s,r,0,!1,a,!0)}function vw(e,t,n,s,r,a){return jy(e,t,n,s,r,a,!0)}function jy(e,t,n,s,r,a,o=!1,i=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(ww);let u=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&c.length>0;){let g=c.pop(),{score:y,boxIndex:x,suppressBeginIndex:A}=g;if(y<r)break;let b=!1;for(let v=d.length-1;v>=A;--v){let C=WO(e,x,d[v]);if(C>=s){b=!0;break}if(g.score=g.score*VO(s,u,C),g.score<=r)break}g.suppressBeginIndex=d.length,b||(g.score===y?(d.push(x),p.push(g.score)):g.score>r&&MO(c,g,ww))}let h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=p),l&&(m.validOutputs=h),m}function WO(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(i-a)*(l-o),f=(d-c)*(p-u);if(h<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(o,u),y=Math.min(i,d),x=Math.min(l,p),A=Math.max(y-m,0)*Math.max(x-g,0);return A/(h+f-A)}function VO(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function ww(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function UO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppressionAsync"),o=$(t,"scores","nonMaxSuppressionAsync"),i=Qu(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:d}=xw(c,u,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),Tt(d,"int32")}var GO=UO;function HO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Qu(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},d=V.runKernel(Fi,c,u);return{selectedIndices:d[0],selectedScores:d[1]}}var jO=U({nonMaxSuppressionWithScore_:HO});async function qO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Qu(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c=await Promise.all([o.data(),i.data()]),u=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=vw(u,d,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Tt(p,"int32"),selectedScores:Tt(h)}}var XO=qO;function KO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Qu(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,p={boxes:o,scores:i},h={maxOutputSize:c,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:a},f=V.runKernel(Cu,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var ZO=U({nonMaxSuppressionPadded_:KO});async function YO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Qu(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=bw(p,h,c,u,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Tt(f,"int32"),validOutputs:Te(m,"int32")}}var JO=YO;function QO(e,t,n=!1,s=!1){let r=$(e,"images","resizeBilinear");M(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),M(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=V.runKernel(fo,i,l);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var eM=U({resizeBilinear_:QO});function tM(e,t,n=!1,s=!1){let r=$(e,"images","resizeNearestNeighbor");M(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),M(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),M(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=V.runKernel(Eu,i,l);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var nM=U({resizeNearestNeighbor_:tM});function sM(e,t="binary",n=!1,s=.5){let r=$(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],c=L(Tt([s]),255),u,d,p,h;if(M(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),M(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),M(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),M(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[u,d,p]=Jt(r,[1,1,1],-1);let g=L(u,a),y=L(d,o),x=L(p,i);h=ue(ue(g,y),x)}else h=e;if(t==="otsu"){let g=fy(ge(Dy(h),"int32"),ht([]),256);c=rM(g,l)}let f=n?hl(h,c):vs(h,c);return ge(L(f,255),"int32")}function rM(e,t){let n=Tt([-1]),s=Tt([0]),r=Tt([0]),a,o,i,l,c,u;for(let d=0;d<e.size-1;d++){a=Fe(e,0,d+1),o=Fe(e,d+1),c=de(we(a),t),u=de(we(o),t);let p=we(L(a,Yu(0,a.size)));i=de(p,we(a));let h=Hu(o.shape,a.size),f=ue(Yu(0,o.size),h),m=L(o,f);l=de(we(m),we(o));let g=pe(i,l),y=pe(i,l),x=L(c,u);r=L(L(x,g),y);let A=vs(r,s);s=Gn(A,r,s),n=Gn(A,Tt([d]),n)}return n}var aM=U({threshold_:sM});function oM(e,t,n="nearest",s="constant",r=0,a){let o=$(e,"image","transform","float32"),i=$(t,"transforms","transform","float32");M(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),M(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},c={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return V.runKernel(Ji,l,c)}var iM=U({transform_:oM});function lM(e,t,n){M(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),M(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=$(e,"a","bandPart");M(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=H(Yu(0,a,1,"int32"),[-1,1]),l=Yu(0,o,1,"int32"),c=pe(i,l),u=yr(hl(c,Te(+t,"int32")),pl(c,Te(-n,"int32"))),d=Ht([a,o],s.dtype);return H(on(is(H(s,[-1,a,o])).map(p=>Gn(u,p,d))),r)}var uM=U({bandPart_:lM});function cM(e){let t;if(Array.isArray(e)){t=!1,M(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)M(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=Jt(e,e.shape[0],0).map(r=>Ye(r,[0]));M(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(V.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=L(we(L(n[o],a)),n[o]);a=pe(a,i)}return de(a,Vy(a,"euclidean"))}));return t?on(n,0):n}var dM=U({gramSchmidt_:cM});function pM(e,t=!1){if(M(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return kw(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c),s=is(H(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[c,u]=kw(l,t);r.push(c),a.push(u)});let o=H(on(r,0),e.shape),i=H(on(a,0),e.shape);return[o,i]}}function kw(e,t=!1){return V.tidy(()=>{M(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=vy(n),a=Vn(e),o=Ar([[1]],[1,1]),i=Vn(o),l=n>=s?s:n;for(let c=0;c<l;++c){let u=a,d=i,p=r;[i,a,r]=V.tidy(()=>{let h=Fe(a,[c,c],[n-c,1]),f=Vy(h),m=Fe(a,[c,c],[1,1]),g=Gn(vs(m,0),Ar([[-1]]),Ar([[1]])),y=pe(m,L(g,f)),x=de(h,y);x.shape[0]===1?i=Vn(o):i=St([o,Fe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let A=Lt(de(qe(g,y),f)),b=Fe(a,[c,0],[n-c,s]),v=L(A,i),C=rt(i);if(c===0)a=pe(b,qe(v,qe(C,b)));else{let R=pe(b,qe(v,qe(C,b)));a=St([Fe(a,[0,0],[c,s]),R],0)}let I=rt(v),E=Fe(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=pe(E,qe(qe(E,i),I));else{let R=pe(E,qe(qe(E,i),I));r=St([Fe(r,[0,0],[n,c]),R],1)}return[i,a,r]}),te([u,d,p])}return!t&&n>s&&(r=Fe(r,[0,0],[n,s]),a=Fe(a,[0,0],[s,s])),[r,a]})}var hM=U({qr_:pM}),ls=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(ls||{});function fM(e,t,n=ls.SUM_BY_NONZERO_WEIGHTS){let s=$(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=$(t,"weights","computeWeightedLoss"));let a=r==null?s:L(s,r);if(n===ls.NONE)return a;if(n===ls.SUM)return we(a);if(n===ls.MEAN){if(r==null)return Gt(a);{let o=s.size/r.size,i=de(we(a),we(r));return o>1?de(i,Te(o)):i}}if(n===ls.SUM_BY_NONZERO_WEIGHTS){if(r==null)return de(we(a),Te(s.size));{let o=L(r,ws(s.shape)),i=ge(we(Ku(o,Te(0))),"float32");return de(we(a),i)}}throw Error(`Unknown reduction: ${n}`)}var ta=U({computeWeightedLoss_:fM});function mM(e,t,n,s=ls.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","absoluteDifference"),a=$(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=$(n,"weights","absoluteDifference")),Ln(r.shape,a.shape,"Error in absoluteDifference: ");let i=an(pe(r,a));return ta(i,o,s)}var gM=U({absoluteDifference_:mM});function yM(e,t,n,s,r=ls.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","cosineDistance"),o=$(t,"predictions","cosineDistance"),i=null;s!=null&&(i=$(s,"weights","cosineDistance")),Ln(a.shape,o.shape,"Error in cosineDistance: ");let l=Te(1),c=pe(l,we(L(a,o),n,!0));return ta(c,i,r)}var AM=U({cosineDistance_:yM});function xM(e,t,n,s=ls.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","hingeLoss"),a=$(t,"predictions","hingeLoss"),o=null;n!=null&&(o=$(n,"weights","hingeLoss")),Ln(r.shape,a.shape,"Error in hingeLoss: ");let i=Te(1);r=pe(L(Te(2),r),i);let l=Or(pe(i,L(r,a)));return ta(l,o,s)}var bM=U({hingeLoss_:xM});function vM(e,t,n,s=1,r=ls.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","huberLoss"),o=$(t,"predictions","huberLoss"),i=null;n!=null&&(i=$(n,"weights","huberLoss")),Ln(a.shape,o.shape,"Error in huberLoss: ");let l=Te(s),c=an(pe(o,a)),u=Zd(c,l),d=pe(c,u),p=ue(L(Te(.5),bt(u)),L(l,d));return ta(p,i,r)}var wM=U({huberLoss_:vM});function kM(e,t,n,s=1e-7,r=ls.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","logLoss"),o=$(t,"predictions","logLoss"),i=null;n!=null&&(i=$(n,"weights","logLoss")),Ln(a.shape,o.shape,"Error in logLoss: ");let l=Te(1),c=Te(s),u=Lt(L(a,Bs(ue(o,c)))),d=L(pe(l,a),Bs(ue(pe(l,o),c))),p=pe(u,d);return ta(p,i,r)}var IM=U({logLoss_:kM});function SM(e,t,n,s=ls.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","meanSquaredError"),a=$(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=$(n,"weights","meanSquaredError")),Ln(r.shape,a.shape,"Error in meanSquaredError: ");let i=Ly(r,a);return ta(i,o,s)}var CM=U({meanSquaredError_:SM});function TM(e,t){let n=$(e,"labels","sigmoidCrossEntropyWithLogits"),s=$(t,"logits","sigmoidCrossEntropyWithLogits");Ln(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Or(s),a=L(s,n),o=Nf(Ls(Lt(an(s))));return ue(pe(r,a),o)}function NM(e,t,n,s=0,r=ls.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"multiClassLabels","sigmoidCrossEntropy"),o=$(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","sigmoidCrossEntropy")),Ln(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let c=Te(s),u=Te(1),d=Te(.5);a=ue(L(a,pe(u,c)),L(d,c))}let l=TM(a,o);return ta(l,i,r)}var EM=U({sigmoidCrossEntropy_:NM});function RM(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Fr((r,a,o)=>{let l=Kv(a,[n],!0),c=pe(ge(a,"float32"),l);o([r,c]);let u=Lt(L(c,r));return{value:we(u,[n]),gradFunc:(h,f)=>{let[m,g]=f,y=fl(h.shape,[n]);return[L(H(h,y),pe(ge(m,"float32"),Ls(g))),L(H(h,y),pe(Ls(g),ge(m,"float32")))]}}})(e,t)}function _M(e,t,n,s=0,r=ls.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"onehotLabels","softmaxCrossEntropy"),o=$(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","softmaxCrossEntropy")),Ln(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let c=Te(s),u=Te(1),d=Te(a.shape[1]);a=ue(L(a,pe(u,c)),de(c,d))}let l=RM(a,o);return ta(l,i,r)}var DM=U({softmaxCrossEntropy_:_M});function PM(e,t,n,s){let r=$(e,"indices","sparseFillEmptyRows","int32"),a=$(t,"values","sparseFillEmptyRows"),o=$(n,"denseShape","sparseFillEmptyRows","int32"),i=$(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},c=V.runKernel(Sd,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}var $M=U({sparseFillEmptyRows_:PM});function FM(e,t,n){let s=$(e,"inputIndices","sparseReshape","int32"),r=$(t,"inputShape","sparseReshape","int32"),a=$(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=V.runKernel(Pu,o);return{outputIndices:i[0],outputShape:i[1]}}var OM=U({sparseReshape_:FM});function MM(e,t,n){let s=$(e,"data","sparseSegmentMean"),r=$(t,"indices","sparseSegmentMean","int32"),a=$(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return V.runKernel(Cd,o)}var zM=U({sparseSegmentMean_:MM});function LM(e,t,n){let s=$(e,"data","sparseSegmentSum"),r=$(t,"indices","sparseSegmentSum","int32"),a=$(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return V.runKernel(Td,o)}var BM=U({sparseSegmentSum_:LM});function WM(e,t,n,s,r,a,o,i){let l=$(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let c=$(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:l,dataSplits:c},p=V.runKernel(Ed,d,u);return{nGrams:p[0],nGramsSplits:p[1]}}var VM=U({stringNGrams_:WM});function UM(e,t,n=!0){let s=$(e,"input","stringSplit","string"),r=$(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=V.runKernel(lf,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var GM=U({stringSplit_:UM});function HM(e,t){let n=$(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return V.runKernel(uf,r,s)}var jM=U({stringToHashBucketFast_:HM}),qM={fft:Of,ifft:Jd,rfft:Mf,irfft:zy},XM={hammingWindow:wO,hannWindow:yw,frame:Aw,stft:CO},Ie={flipLeftRight:RO,grayscaleToRGB:DO,resizeNearestNeighbor:nM,resizeBilinear:eM,rotateWithOffset:$O,cropAndResize:NO,nonMaxSuppression:OO,nonMaxSuppressionAsync:GO,nonMaxSuppressionWithScore:jO,nonMaxSuppressionWithScoreAsync:XO,nonMaxSuppressionPadded:ZO,nonMaxSuppressionPaddedAsync:JO,threshold:aM,transform:iM},Iw={bandPart:uM,gramSchmidt:dM,qr:hM},KM={absoluteDifference:gM,computeWeightedLoss:ta,cosineDistance:AM,hingeLoss:bM,huberLoss:wM,logLoss:IM,meanSquaredError:CM,sigmoidCrossEntropy:EM,softmaxCrossEntropy:DM},ep={sparseFillEmptyRows:$M,sparseReshape:OM,sparseSegmentMean:zM,sparseSegmentSum:BM},Uf={stringNGrams:VM,stringSplit:GM,stringToHashBucketFast:jM},na=class extends cv{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return te(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Hv(e,t)}dispose(){this.iterations_!=null&&te(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Te(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(na,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Gf=class extends na{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:X(()=>at(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:X(()=>at(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;X(()=>{let c=ue(L(i,this.rho),L(bt(o),1-this.rho)),u=L(de($n(ue(l,this.epsilon)),$n(ue(i,this.epsilon))),o),d=ue(L(l,this.rho),L(bt(u),1-this.rho));i.assign(c),l.assign(d);let p=ue(L(u,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(te(this.accumulatedGrads.map(e=>e.variable)),te(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Gf.className="Adadelta";Fo(Gf);var Hf=class extends na{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n];if(this.accumulatedGrads[s]==null){let i=!1;this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:X(()=>Hu(r.shape,this.initialAccumulatorValue).variable(i))}}let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;X(()=>{let i=ue(o,bt(a));o.assign(i);let l=ue(L(de(a,$n(ue(i,V.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&te(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Hf.className="Adagrad";Fo(Hf);var jf=class extends na{constructor(e,t,n,s=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],X(()=>{this.accBeta1=Te(t).variable(),this.accBeta2=Te(n).variable()}),s==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);X(()=>{let n=pe(1,this.accBeta1),s=pe(1,this.accBeta2);t.forEach((r,a)=>{let o=V.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:X(()=>at(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:X(()=>at(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=ue(L(c,this.beta1),L(l,1-this.beta1)),p=ue(L(u,this.beta2),L(bt(l),1-this.beta2)),h=de(d,n),f=de(p,s);c.assign(d),u.assign(p);let m=ue(L(de(h,ue($n(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&te(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&te(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),X(()=>{this.accBeta1.assign(Lo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Lo(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};jf.className="Adam";Fo(jf);var qf=class extends na{constructor(e,t,n,s=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],X(()=>{this.iteration=Te(0).variable(),this.accBeta1=Te(t).variable()}),s==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);X(()=>{let n=pe(1,this.accBeta1),s=de(-this.learningRate,ue(L(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=V.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:at(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:at(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=ue(L(c,this.beta1),L(l,1-this.beta1)),p=L(u,this.beta2),h=an(l),f=ea(p,h);c.assign(d),u.assign(f);let m=ue(L(de(s,n),de(d,ue(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(ue(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&te(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&te(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};qf.className="Adamax";Fo(qf);var tp=class extends na{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=V.registeredVariables[n];X(()=>{let o=ue(L(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=An(Te(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};tp.className="SGD";Fo(tp);var Xf=class extends tp{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Te(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n];if(this.accumulations[s]==null){let i=!1;this.accumulations[s]={originalName:`${n}/momentum`,variable:X(()=>at(r).variable(i))}}let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&X(()=>{let i,l=ue(L(this.m,a),o);this.useNesterov?i=ue(L(this.c,ue(o,L(l,this.m))),r):i=ue(L(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&te(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Xf.className="Momentum";Fo(Xf);var Kf=class extends na{constructor(e,t=.9,n=0,s=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=V.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:X(()=>at(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:X(()=>at(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:X(()=>at(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;X(()=>{let c=ue(L(i,this.decay),L(bt(o),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[s].variable,d=ue(L(u,this.decay),L(o,1-this.decay)),p=de(L(o,this.learningRate),$n(pe(c,ue(bt(d),this.epsilon)))),h=ue(L(l,this.momentum),p);i.assign(c),u.assign(d),l.assign(h);let f=pe(r,h);r.assign(f)}else{let u=ue(L(i,this.decay),L(bt(o),1-this.decay)),d=ue(L(l,this.momentum),de(L(o,this.learningRate),$n(ue(u,this.epsilon))));i.assign(u),l.assign(d);let p=pe(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&te(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&te(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&te(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Kf.className="RMSProp";Fo(Kf);var Wo=class{static sgd(e){return new tp(e)}static momentum(e,t,n=!1){return new Xf(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Kf(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new jf(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Gf(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new qf(e,t,n,s,r)}static adagrad(e,t=.1){return new Hf(e,t)}},yl={sgd:Wo.sgd,momentum:Wo.momentum,adadelta:Wo.adadelta,adagrad:Wo.adagrad,rmsprop:Wo.rmsprop,adamax:Wo.adamax,adam:Wo.adam},ZM=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function Sw(){return new Promise(e=>ZM(()=>e()))}var N={};Me(N,{ERF_A1:()=>iz,ERF_A2:()=>lz,ERF_A3:()=>uz,ERF_A4:()=>cz,ERF_A5:()=>dz,ERF_P:()=>oz,PARALLELIZE_THRESHOLD:()=>qy,SELU_SCALE:()=>Tw,SELU_SCALEALPHA:()=>Cw,applyActivation:()=>Wf,assertAndGetBroadcastShape:()=>xt,assertAxesAreInnerMostDims:()=>l$,assertParamsConsistent:()=>YM,assignToTypedArray:()=>yz,axesAreInnerMostDims:()=>Iy,calculateShapes:()=>Q3,checkEinsumDimSizes:()=>kz,checkPadOnDimRoundingMode:()=>Un,combineLocations:()=>jv,complexWithEvenIndex:()=>fz,complexWithOddIndex:()=>mz,computeConv2DInfo:()=>Hd,computeConv3DInfo:()=>kv,computeDefaultPad:()=>dy,computeDilation2DInfo:()=>ND,computeOptimalWindowSize:()=>QM,computeOutAndReduceShapes:()=>qv,computeOutShape:()=>JM,computePool2DInfo:()=>wv,computePool3DInfo:()=>ED,convertConv2DDataFormat:()=>Iv,decodeEinsumEquation:()=>vz,eitherStridesOrDilationsAreOne:()=>$r,expandShapeToKeepDim:()=>fl,exponent:()=>xz,exponents:()=>Az,fromStringArrayToUint8:()=>Gz,fromUint8ToStringArray:()=>Uz,getAxesPermutation:()=>Xv,getBroadcastDims:()=>K3,getComplexWithIndex:()=>gz,getEinsumComputePath:()=>Iz,getEinsumPermutation:()=>wz,getFusedBiasGradient:()=>Bf,getFusedDyActivation:()=>Lf,getImageCenter:()=>ez,getInnerMostAxes:()=>u$,getPermuted:()=>nz,getReductionAxes:()=>Zt,getReshaped:()=>tz,getReshapedPermuted:()=>sz,getSliceBeginCoords:()=>rz,getSliceSize:()=>az,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Nz,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Ez,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Rz,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Pz,getSparseReshapeInputOutputMismatchErrorMessage:()=>Fz,getSparseReshapeInputOutputMultipleErrorMessage:()=>$z,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>_z,getSparseReshapeNegativeOutputDimErrorMessage:()=>Dz,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Lz,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Oz,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Mz,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>zz,getUndoAxesPermutation:()=>Sy,isIdentityPermutation:()=>Sz,log:()=>n9,mergeRealAndImagArrays:()=>pz,prepareAndValidate:()=>J3,prepareSplitSize:()=>Tz,segment_util:()=>Rw,shouldFuse:()=>Vf,slice_util:()=>zt,splitRealAndImagArrays:()=>hz,tupleValuesAreOne:()=>Oo,upcastType:()=>Wn,validateInput:()=>ey,validateUpdateShape:()=>Q2,warn:()=>Ro});function YM(e,t){let n=e[0].length;e.forEach((r,a)=>{M(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),M(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)M(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function JM(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var qy=30;function QM(e){return e<=qy?e:Fh(e,Math.floor(Math.sqrt(e)))}function ez(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function tz(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function nz(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2===1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function sz(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function rz(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function az(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var Cw=1.7580993408473768,Tw=1.0507009873554805,oz=.3275911,iz=.254829592,lz=-.284496736,uz=1.421413741,cz=-1.453152027,dz=1.061405429;function pz(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function hz(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function fz(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function mz(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function gz(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function yz(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function Az(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function xz(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var Xy="->",bz=/->/g,Nw=",",Ew="...";function vz(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(bz,"").length)/Xy.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Xy}").`);let[s,r]=e.split(Xy);M(s.indexOf(Ew)===-1,()=>`The ellipsis notation ("${Ew}") is not supported yet.`);let a=s.split(Nw),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let p=0;p<r.length;++p){let h=r[p];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let p=0;p<s.length;++p){let h=s[p];i.indexOf(h)===-1&&h!==Nw&&i.push(h)}let l=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let h=0;h<a[p].length;++h)l[p].push(i.indexOf(a[p][h]))}let c=i.length,u=r.length,d=[];for(let p=u;p<c;++p)d.push(p);return{allDims:i,summedDims:d,idDims:l}}function wz(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function kz(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:M(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function Iz(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=Cz(t,i);for(let c of l)a.indexOf(c)===-1&&(s[o].push(c),a.push(c))}return{path:n,steps:s}}function Sz(e){return e.every((t,n)=>t===n)}function Cz(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function Tz(e,t,n=0){let s=[];if(typeof t=="number")M(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);M(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}M(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function Nz(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function Ez(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Rz(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function _z(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Dz(e,t){return`size ${e} must be non-negative, not ${t}`}function Pz(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function $z(e,t){let n=Ct(e),s=Ct(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function Fz(e,t){let n=Ct(e),s=Ct(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function Oz(){return"segment ids must be >= 0"}function Mz(){return"segment ids are not increasing"}function zz(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Lz(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Rw={};Me(Rw,{collectGatherOpShapeInfo:()=>Vz,computeOutShape:()=>Wz,segOpComputeOptimalWindowSize:()=>Bz});function Bz(e,t){let n=!1,s;for(e<=qy?(s=e,n=!0):s=Fh(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=Fh(e,s+1);return s}function Wz(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function Vz(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],l=1,c=1,u=1;for(let d=0;d<s;++d)i.push(e.shape[d]),l*=e.shape[d];for(let d=s;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=s;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:i}}function Uz(e){try{return e.map(t=>ff(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Gz(e){return e.map(t=>Fd(t))}var tr={};Me(tr,{nonMaxSuppressionV3Impl:()=>xw,nonMaxSuppressionV4Impl:()=>bw,nonMaxSuppressionV5Impl:()=>vw,whereImpl:()=>uw});var _w={kernelName:gi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Qd(ge(n,"float32"),-1))}}},Hz={kernelName:lu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=bt(ge(n,"float32")),r=$n(pe(Te(1),s));return Lt(de(e,r))}}}},jz={kernelName:uu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=$n(pe(bt(ge(n,"float32")),1));return de(e,s)}}}},qz={kernelName:Zr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=xt(n.shape,s.shape);return{a:()=>{let i=e,l=Zt(n.shape,r);return l.length>0&&(i=we(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Zt(s.shape,r);return l.length>0&&(i=we(i,l)),H(i,s.shape)}}}},Xz={kernelName:$a,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},Kz={kernelName:Fa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>at(n)}}},Zz={kernelName:pu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>at(n)}}},Yz={kernelName:hu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,$n(pe(Te(1),bt(ge(n,"float32")))))}}},Jz={kernelName:fu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=$n(ue(Te(1),bt(ge(n,"float32"))));return de(e,s)}}}},Qz={kernelName:yu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=xt(n.shape,s.shape);return{a:()=>{let i=ue(bt(n),bt(s)),l=L(e,de(s,i)),c=Zt(n.shape,r);return c.length>0&&(l=we(l,c)),H(l,n.shape)},b:()=>{let i=ue(bt(n),bt(s)),l=Lt(L(e,de(n,i))),c=Zt(s.shape,r);return c.length>0&&(l=we(l,c)),H(l,s.shape)}}}},eL={kernelName:mu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ue(bt(ge(n,"float32")),1))}}},tL={kernelName:gu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,pe(Te(1),bt(ge(n,"float32"))))}}};function nL(e,t,n,s,r,a){let o=$(e,"dy","avgPool3dGrad"),i=$(t,"input","avgPool3dGrad"),l=o,c=i,u=!1;i.rank===4&&(u=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Un("avgPool3dGrad",r,a);let d={dy:l,input:c},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=V.runKernel(zh,d,p);return u?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var sL=U({avgPool3dGrad_:nL}),rL={kernelName:fd,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>sL(e,s,r,a,o,i)}}};function aL(e,t,n,s,r){let a=$(e,"dy","avgPoolGrad"),o=$(t,"input","avgPoolGrad");M(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,c=!1;o.rank===3&&(c=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),M(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let u={dy:l,input:i},d={filterSize:n,strides:s,pad:r},p=V.runKernel(Mh,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var oL=U({avgPoolGrad_:aL}),iL={kernelName:Oa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>oL(e,s,r,a,o)}}},lL={kernelName:Ma,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>qe(e,r,!1,!0),b:()=>qe(s,e,!0,!1)}:!a&&o?{a:()=>qe(e,r,!1,!1),b:()=>qe(e,s,!0,!1)}:a&&!o?{a:()=>qe(r,e,!1,!0),b:()=>qe(s,e,!1,!1)}:{a:()=>qe(r,e,!0,!0),b:()=>qe(e,s,!0,!0)}}},uL={kernelName:yi,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>Pf(e,s,r)}}},cL={kernelName:u3,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>we(e,i,!0)}}},dL={kernelName:za,gradFunc:e=>({x:()=>e.clone()})},pL={kernelName:La,gradFunc:e=>({x:()=>at(e)})},hL={kernelName:Yr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Gn(yr(pl(s,r),hl(s,a)),e,at(e))}}},fL={kernelName:gd,inputsToSave:["x"],gradFunc:_w.gradFunc},mL={kernelName:Ai,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=Ys(r,t[0].shape)[0],o=s.map(l=>l[a]);return Jt(e,o,a).map(l=>()=>l)}},gL={kernelName:Ba,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return M(Oo(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>gy(s.shape,e,r,o,i,l),filter:()=>Hy(s,e,r.shape,o,i,l)}}},yL={kernelName:Wa,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>Mo(e,r,a,o,i,1,l),filter:()=>Hy(e,s,r.shape,a,o,i,l)}}};function AL(e,t,n,s,r){let a=e;e.rank===4&&(a=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),M(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),M(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),M(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),M(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return V.runKernel(Vh,i,l)}var xL=U({conv3DBackpropFilter_:AL}),bL={kernelName:yd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;M(Oo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>Pv(o.shape,e,i,r,a),filter:()=>xL(o,e,i.shape,r,a)}}},vL={kernelName:Va,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Lt(Fy(ge(n,"float32"))),e)}}},wL={kernelName:Ua,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Oy(ge(n,"float32")),e)}}},kL={kernelName:xi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=Xv([r],s.rank),l=by(e,r,a,!o);return i!=null&&(l=rt(l,i)),l}}}},IL={kernelName:Ga,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s==null?[1,1]:s;M(Oo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,c]=t;return M(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),M(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),M($r(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),Un("depthwiseConv2d",a,o),{x:()=>gw(l.shape,e,c,r,a,i,o),filter:()=>mw(l,e,c.shape,r,a,i,o)}}},SL={kernelName:Ad,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>V.runKernel(Xh,a,n),filter:()=>V.runKernel(Kh,o,n)}}},CL={kernelName:ja,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>V.runKernel(Zh,s)}}},TL={kernelName:Au,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(Ls(Lt(bt(n))),2/Math.sqrt(Math.PI));return{x:()=>L(e,s)}}},NL={kernelName:qa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,n)}}},EL={kernelName:ki,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>H(e,n.shape)}}},RL={kernelName:Ii,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Ls(n))}}},_L={kernelName:Xa,gradFunc:e=>({x:()=>at(e)})},DL={kernelName:Ka,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=xt(n.shape,s.shape);return{a:()=>{let i=de(e,ge(s,"float32")),l=Zt(n.shape,r);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Zt(s.shape,r);l.length>0&&(i=H(we(i,l),s.shape));let c=bt(s);return Lt(de(i,ge(c,"float32")))}}}},PL={kernelName:Za,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i==null?Te(1):i,c=Zt(a.shape,r.shape),u=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)u.push(r.shape[b]);u.push(1)}let d=pe(r,a),p=L(e,l),h=Py(ue(o,Te(s))),f=L(L(L(h,h),h),Te(-.5));return{x:()=>a.rank===1?H(L(L(e,Qs(H(h,[1,1,1,a.shape[0]]),u)),l),r.shape):H(L(L(e,h),l),r.shape),mean:()=>{let b=L(L(h,Te(-1)),p);return a.rank===1&&(b=we(b,c)),H(b,a.shape)},variance:()=>{let b=L(L(f,d),p);return a.rank===1&&(b=we(b,c)),H(b,a.shape)},scale:()=>{let b=L(d,h),v=L(e,b);return a.rank===1&&(v=we(v,c)),H(v,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=we(b,c)),H(b,a.shape)}}}},$L={kernelName:Ci,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=Ys(a,s.shape)[0];return{x:()=>{let l=s.shape,c=r.size,u=l.slice(0,o),d=u.length,p=l.slice(a,l.length).slice(1),h=p.length,f=Dw(0,d),m=Dw(d+1,d+1+h),g=Pw([u,[c],p]),y=H(e,g),x=H(r,[c]),A=Pw([[d],f,m]),b=rt(y,A),v=iw(b,x,s.shape[o]),C=Sy(A);return v=rt(v,C),v},indices:()=>r}}};function Dw(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Pw(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var FL={kernelName:Ya,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>at(n),b:()=>at(s)}}},OL={kernelName:Ja,gradFunc:e=>({x:()=>ge(e,"float32")})},ML={kernelName:bu,gradFunc:e=>({x:()=>at(e)})},zL={kernelName:vu,gradFunc:e=>({x:()=>at(e)})},LL={kernelName:wu,gradFunc:e=>({x:()=>at(e)})},BL={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=vs(s,0);return{x:()=>Gn(a,e,L(e,r))}}},WL={kernelName:ku,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ue(n,1))}}},VL={kernelName:eo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ge(n,"float32"))}}},UL={kernelName:c3,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let a=!0,o=Ls(s);return pe(e,L(we(e,r,a),o))}}}};function GL(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return V.runKernel(ef,i,l)}var HL=U({localResponseNormalizationBackprop_:GL}),jL={kernelName:wd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>HL(s,r,e,a,o,i,l)}}};function $w(e,t,n,s){return t.rank<n.rank&&(t=H(t,fl(t.shape,s))),e.rank<n.rank&&(e=H(e,fl(e.shape,s))),{x:()=>L(e,ge(zs(n,t),e.dtype))}}var Fw={kernelName:to,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=Ys(r,a.shape),l=$w(e,o,a,i);return{x:()=>l.x()}}},qL={kernelName:no,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,ge(pl(n,s),"float32")),b:()=>L(e,ge(wy(n,s),"float32"))}}};function XL(e,t,n,s,r,a,o){let i=$(e,"dy","maxPool3dGrad"),l=$(t,"input","maxPool3dGrad"),c=$(n,"output","maxPool3dGrad"),u=i,d=l,p=c,h=!1;l.rank===4&&(h=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=H(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=H(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),M(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),M(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),M(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),Un("maxPool3dGrad",a,o);let f={dy:u,input:d,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=V.runKernel(nf,f,m);return h?H(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var KL=U({maxPool3dGrad_:XL}),ZL={kernelName:kd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>KL(e,s,r,a,o,i,l)}}};function YL(e,t,n,s,r,a,o){let i=$(e,"dy","maxPoolGrad"),l=$(t,"input","maxPoolGrad"),c=$(n,"output","maxPoolGrad");M(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),M(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),M(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Un("maxPoolGrad",a,o);let u={dy:i,input:l,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return V.runKernel(tf,u,d)}var JL=U({maxPoolGrad_:YL}),QL={kernelName:so,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>JL(e,s,r,a,o,i)}}},eB={kernelName:ro,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=Ys(r,s.shape),i=qv(s.shape,a)[1],l=Ct(i);return{x:()=>{let u=s.shape.slice();a.forEach(h=>{u[h]=1});let d=H(e,u);return de(L(d,ws(s.shape,"float32")),l)}}}},tB={kernelName:ao,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=Ys(r,a.shape),l=$w(e,o,a,i);return{x:()=>l.x()}}},nB={kernelName:oo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,ge(hl(n,s),"float32")),b:()=>L(e,ge(vs(n,s),"float32"))}}},sB={kernelName:io,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Fe(e,a,s.shape)}}},rB={kernelName:Su,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=xt(n.shape,s.shape);return{a:()=>{let i=Zt(n.shape,r);return i.length>0?H(we(e,i),n.shape):e},b:()=>{let i=L(e,Lt(Kd(de(n,s)))),l=Zt(s.shape,r);return l.length>0?H(we(i,l),s.shape):i}}}},aB={kernelName:lo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=xt(n.shape,s.shape);return{a:()=>{let i=L(e,ge(s,"float32")),l=Zt(n.shape,r);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Zt(s.shape,r);return l.length>0?H(we(i,l),s.shape):i}}}},oB={kernelName:Di,gradFunc:e=>({x:()=>Lt(e)})},iB={kernelName:Mi,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Ht(n.shape,"float32")}}},lB={kernelName:Oi,gradFunc:e=>({x:()=>at(e)})},uB={kernelName:zi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return is(e,s).map(a=>()=>a)}},Ow={kernelName:uo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Fe(e,a,s.shape)}}},cB={kernelName:co,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=xt(a.shape,o.shape);return{a:()=>{let u=ge(o,"float32"),d=L(e,L(u,Lo(a,pe(u,Te(1))))),p=Zt(a.shape,i);return p.length>0&&(d=we(d,p)),H(d,a.shape)},b:()=>{let u=vs(a,0),d=Gn(u,Bs(a),at(a)),p=L(e,L(r,d)),h=Zt(o.shape,i);return h.length>0&&(p=we(p,h)),H(p,o.shape)}}}},dB={kernelName:po,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=vs(n,0);return{x:()=>Gn(r,e,L(e,s)),alpha:()=>{let a=Gn(r,at(e),L(e,n)),o=Zt(s.shape,e.shape);return o.length>0&&(a=we(a,o)),H(a,s.shape)}}}},pB={kernelName:Ha,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=xt(n.shape,s.shape);return{a:()=>{let i=de(e,ge(s,"float32")),l=Zt(n.shape,r);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Zt(s.shape,r);l.length>0&&(i=H(we(i,l),s.shape));let c=bt(s);return Lt(de(i,ge(c,"float32")))}}}},hB={kernelName:Nu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,Lt(bt(n)))}}},fB={kernelName:mo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(hl(n,6),Qd(n));return{x:()=>L(e,ge(s,"float32"))}}},mB={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,ge(Qd(n),"float32"))}}},gB={kernelName:Bi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>H(e,n.shape)}}},yB={kernelName:fo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>V.runKernel(of,r,n)}}},AB={kernelName:Eu,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>V.runKernel(af,r,n)}}},xB={kernelName:Wi,gradFunc:(e,t,n)=>{let{dims:s}=n,r=Ys(s,e.shape);return{x:()=>Vs(e,r)}}},bB={kernelName:Vi,gradFunc:e=>({x:()=>at(e)})},vB={kernelName:go,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Lt(de(e,L(Lo(n,1.5),2)))}}},wB={kernelName:Gi,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ge(at(n),"float32"),t:()=>L(e,ge(n,e.dtype)),e:()=>L(e,ge(Rf(n),e.dtype))}}},kB={kernelName:Ru,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=vs(n,Te(0)),r=Te(Cw),a=Te(Tw),o=L(e,a),i=L(L(e,r),Ls(ge(n,"float32")));return Gn(s,o,i)}}}},IB={kernelName:Ao,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(n,pe(Te(1),n)))}}},SB={kernelName:_u,gradFunc:e=>({x:()=>at(e)})},CB={kernelName:yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Sf(ge(n,"float32")),e)}}},TB={kernelName:ji,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(xy(ge(n,"float32")),e)}}},NB={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=lv(s,r,a),c=[];for(let u=0;u<e.rank;u++)c.push([i[u],o[u]-i[u]-l[u]]);return{x:()=>er(e,c)}}},EB={kernelName:vo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=L(e,s);return{logits:()=>pe(o,L(we(o,[r],a),s))}}},RB={kernelName:Du,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Pn(n))}}},Mw={kernelName:qi,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>If(e,s,r)}}},zw={kernelName:Xi,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>St(e,s)}}},_B={kernelName:xo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,L($n(ge(n,"float32")),2))}}},DB={kernelName:$u,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(ge(n,"float32"),2))}}},PB={kernelName:wo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Te(2);return{a:()=>L(e,L(r,pe(n,s))),b:()=>L(e,L(r,pe(s,n)))}}},$B={kernelName:Co,gradFunc:e=>({x:()=>at(e)})},FB={kernelName:ko,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=xt(n.shape,s.shape);return{a:()=>{let i=e,l=Zt(n.shape,r);return l.length>0&&(i=we(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Zt(s.shape,r);return l.length>0&&(i=we(i,l)),H(Lt(i),s.shape)}}}},OB={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;Ys(a,s.shape).forEach(c=>{r[c]=1});let i=H(e,r),l=L(i,ws(s.shape,"float32"));return{x:()=>l}}},MB={kernelName:Zi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,bt(Sf(n)))}}},zB={kernelName:Io,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(pe(Te(1),bt(n)),e)}}},LB={kernelName:Jr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=at(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=ue(o,Fe(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=ue(o,Fe(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)o=ue(o,Fe(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)o=ue(o,Fe(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},BB={kernelName:So,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=Sy(r);return{x:()=>rt(e,a)}}},WB={kernelName:Qi,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>on(e,r)}}},VB={kernelName:Rd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>UB(e,n)}}};function UB(e,t){let n=ea(t,at(t)),s=ju(e,n),r=pl(t,Te(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=Yt(r,i+1);r=yr(r,ws(s.shape,"bool"));let o=at(s);return Gn(r,s,o)}var GB={kernelName:el,gradFunc:e=>({x:()=>at(e)})},HB=[_w,Hz,jz,qz,Xz,Kz,Zz,Yz,Jz,Qz,eL,tL,rL,iL,lL,uL,cL,dL,pL,hL,fL,mL,yL,gL,bL,vL,wL,kL,IL,SL,pB,CL,TL,NL,EL,RL,DL,_L,PL,$L,FL,OL,ML,zL,LL,BL,WL,VL,UL,jL,Fw,Fw,qL,ZL,QL,eB,tB,nB,sB,rB,aB,oB,iB,lB,uB,Ow,Ow,cB,dB,hB,fB,mB,gB,yB,AB,xB,bB,vB,wB,kB,IB,SB,CB,TB,NB,EB,RB,Mw,Mw,zw,zw,_B,PB,DB,$B,FB,OB,MB,zB,LB,BB,WB,VB,GB];for(let e of HB)d3(e);var Lw={};Me(Lw,{maxNorm:()=>KB,minMaxNorm:()=>JB,nonNeg:()=>YB,unitNorm:()=>ZB});var Ky;function ln(){return Ky==null&&(Ky=gr().epsilon()),Ky}function xr(){return"channelsLast"}var sa=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,sa.prototype)}},br=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,br.prototype)}},q=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,q.prototype)}},Be=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Be.prototype)}},Bw=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Bw.prototype)}};function Al(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Mr(e,t){if(!e)throw new Bw(t)}function Ww(e,t){let n=0;for(let s of e)s===t&&n++;return n}function us(e){return e.length===1?e[0]:e}function Nt(e){return Array.isArray(e)?e:[e]}function ra(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function xl(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var nr={};function Zy(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Yy(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>Yy(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:Yy(s))}}}function np(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in nr)o=nr[a];else if(o=t[a],o==null)throw new q(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new q(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in nr?[i,l]=nr.className:o in t&&([i,l]=t[o]),i==null)throw new q(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let h of Object.keys(nr))c[h]=nr[h];for(let h of Object.keys(n))c[h]=n[h];let u=a.config;u.customObjects=c;let d={...nr};for(let h of Object.keys(n))nr[h]=n[h];Yy(a.config);let p=l(i,a.config,n,r);return nr={...d},p}else{let c={...nr};for(let d of Object.keys(n))nr[d]=n[d];let u=new i(a.config);return nr={...c},u}}}function jB(e,t){return e<t?-1:e>t?1:0}function Zf(e,t){return-1*jB(e,t)}function Vo(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function qB(e){if(e==null)throw new q(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function bl(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new q(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Jy(e,t,n=0,s=1/0){return Mr(n>=0),Mr(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function bn(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>bn(n,`element ${s+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Vw(e)}.`)}function Vw(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>Vw(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function XB(e,t,n){let s=n!=null?n():w.now(),r;return(...o)=>{let i=n!=null?n():w.now();return i-s<t||(s=i,r=e(...o)),r}}function Uw(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function Qy(e,t){return X(()=>$n(we(L(e,e),t,!0)))}var sp=class extends ce.Serializable{getConfig(){return{}}},e1=class extends sp{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>{let t=Qy(e,this.axis),n=bs(t,0,this.maxValue);return L(e,de(n,ue(ln(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};e1.className="MaxNorm";ce.registerClass(e1);var t1=class extends sp{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>de(e,ue(ln(),Qy(e,this.axis))))}getConfig(){return{axis:this.axis}}};t1.className="UnitNorm";ce.registerClass(t1);var n1=class extends sp{apply(e){return Or(e)}};n1.className="NonNeg";ce.registerClass(n1);var s1=class extends sp{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>{let t=Qy(e,this.axis),n=ue(L(this.rate,bs(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,de(n,ue(ln(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};s1.className="MinMaxNorm";ce.registerClass(s1);var Gw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function un(e){return Zy(e)}function Hw(e,t={}){return np(e,ce.SerializationMap.getMap().classNameMap,t,"constraint")}function cn(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Gw?Gw[e]:e,config:{}};return Hw(n)}else return e instanceof sp?e:Hw(e)}function KB(e){return new e1(e)}function ZB(e){return new t1(e)}function YB(){return new n1}function JB(e){return new s1(e)}var jw={};Me(jw,{constant:()=>vW,glorotNormal:()=>NW,glorotUniform:()=>TW,heNormal:()=>EW,heUniform:()=>RW,identity:()=>SW,leCunNormal:()=>_W,leCunUniform:()=>DW,ones:()=>bW,orthogonal:()=>PW,randomNormal:()=>kW,randomUniform:()=>wW,truncatedNormal:()=>IW,varianceScaling:()=>CW,zeros:()=>xW});var QB=["channelsFirst","channelsLast"],eW=["nearest","bilinear"],tW=["valid","same","causal"],nW=["max","avg"],sW=["sum","mul","concat","ave"],ec=new Map;function jt(e){bl(QB,"DataFormat",e)}function rW(e){bl(eW,"InterpolationFormat",e)}function Us(e){bl(tW,"PaddingMode",e)}function qw(e){bl(nW,"PoolMode",e)}var rp=[],Xw="/";function vl(e,t){rp.push(e);try{let n=t();return rp.pop(),n}catch(n){throw rp.pop(),n}}function aW(){return rp.length===0?"":rp.join(Xw)+Xw}function Kw(e){if(!Yw(e))throw new Error("Not a valid tensor name: '"+e+"'");return aW()+e}function Zw(e){if(!Yw(e))throw new Error("Not a valid tensor name: '"+e+"'");ec.has(e)||ec.set(e,0);let t=ec.get(e);if(ec.set(e,ec.get(e)+1),t>0){let n=`${e}_${t}`;return ec.set(n,1),n}else return e}var oW=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Yw(e){return!!e.match(oW)}function iW(e){return e===parseInt(e.toString(),10)}function Uo(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function tc(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function Go(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function vr(e,t){if(t<e)throw new q(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Yf(e,t){return ge(e,t)}function ap(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),H(e,n)}function lW(e,t){return X(()=>{if(e.shape.length!==2)throw new q(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=ap(e,1);return o1(n,[1,t,1])})}function uW(e){let t=[Uo(e.shape)];return H(e,t)}function cW(e){if(e.rank<=1)throw new q(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Uo(e.shape,1)];return H(e,t)}function wl(e,t,n){return X(()=>{switch(e.rank){case 1:return Ff(e,t,n);case 2:return My(e,[t,0],[n,e.shape[1]]);case 3:return ml(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return gl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Fe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Fe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new q(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function r1(e,t,n){return X(()=>{switch(e.rank){case 1:return Ff(e,t,n);case 2:return My(e,[0,t],[e.shape[0],n]);case 3:return ml(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return gl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Jf(e,t,n,s){return X(()=>{switch(e.rank){case 1:return Ff(e,t,n);case 2:switch(s){case 1:return wl(e,t,n);case 2:return r1(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return wl(e,t,n);case 2:return ml(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return r1(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return wl(e,t,n);case 2:return gl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return gl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return r1(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function a1(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),St(e,t)}function Jw(e,t){switch(e.rank){case 1:return Rv([e,t]);case 2:return Gu([e,t],0);case 3:return _v([e,t],0);case 4:return Dv([e,t],0);default:throw new q(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function o1(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new q(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Qs(e,t)}function Qf(e,t=0,n=1,s,r){return Qv(e,t,n,s,r)}function zr(e,t,n,s){if(e.rank<2||t.rank<2)throw new Be(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Be(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let r=!1,a=!1;return Bo.matMul({a:e,b:t,transposeA:r,transposeB:a,bias:s?i1(e.rank,s,xr()):null,activation:n})}else{let r=e.shape.slice(),a=r.pop();e=H(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),c=[...o,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=H(rt(t,u),[l,-1]);let d=[...r,...c],p=!1,h=!1;return H(Bo.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:s?i1(e.rank,s,xr()):null,activation:n}),d)}}function Qw(e,t,n){return X(()=>(Array.isArray(t)?t=Tt(t,"int32"):t=ge(t,"int32"),ju(e,t,n)))}function op(e){return L(e,e)}function i1(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new q(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1,1]):H(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1]):H(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1]):H(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,s[0]]):H(t,[1].concat(s))}else if(e<3)return t;throw new q(`Unsupported input rank by biasAdd: ${t.rank}`)}function wr(e,t,n){return X(()=>(n==null&&(n=xr()),jt(n),ue(e,i1(e.rank,t,n))))}function dW(e,t=1){if(t!==1)throw new Be(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Xd(e)}function pW(e){return X(()=>de(e,ue(an(e),1)))}function ek(e,t,n,s){return X(()=>hw(e,t,n,s))}function hW(e){return X(()=>{let t=ue(.5,L(.2,e));return bs(t,0,1)})}function ip(e,t,n=!1){return n?e():t()}var fW=["fanIn","fanOut","fanAvg"],mW=["normal","uniform","truncatedNormal"];function gW(e){bl(fW,"FanMode",e)}function yW(e){bl(mW,"Distribution",e)}var sr=class extends ce.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},l1=class extends sr{apply(e,t){return Ht(e,t)}};l1.className="Zeros";ce.registerClass(l1);var em=class extends sr{apply(e,t){return ws(e,t)}};em.className="Ones";ce.registerClass(em);var u1=class extends sr{constructor(e){super();if(typeof e!="object")throw new q(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new q(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return X(()=>L(Te(this.value),ws(e,t)))}getConfig(){return{value:this.value}}};u1.className="Constant";ce.registerClass(u1);var c1=class extends sr{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Zu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};c1.className="RandomUniform";ce.registerClass(c1);var d1=class extends sr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`randomNormal does not support dType ${t}.`);return Qf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};d1.className="RandomNormal";ce.registerClass(d1);var p1=class extends sr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`truncatedNormal does not support dType ${t}.`);return zf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};p1.className="TruncatedNormal";ce.registerClass(p1);var h1=class extends sr{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return X(()=>{if(e.length!==2||e[0]!==e[1])throw new q("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,vy(e[0]))})}getConfig(){return{gain:this.gain}}};h1.className="Identity";ce.registerClass(h1);function AW(e,t="channelsLast"){let n,s;if(jt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=Uo(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=Uo(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=Uo(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var cs=class extends sr{constructor(e){super();if(e.scale<0)throw new q(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,gW(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,yW(this.distribution),this.seed=e.seed}apply(e,t){let n=AW(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`${this.getClassName()} does not support dType ${t}.`);return zf(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return Zu(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};cs.className="VarianceScaling";ce.registerClass(cs);var tm=class extends cs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return cs.className}};tm.className="GlorotUniform";ce.registerClass(tm);var nm=class extends cs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return cs.className}};nm.className="GlorotNormal";ce.registerClass(nm);var sm=class extends cs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return cs.className}};sm.className="HeNormal";ce.registerClass(sm);var rm=class extends cs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return cs.className}};rm.className="HeUniform";ce.registerClass(rm);var am=class extends cs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return cs.className}};am.className="LeCunNormal";ce.registerClass(am);var om=class extends cs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return cs.className}};om.className="LeCunNormal";ce.registerClass(om);var f1=class extends sr{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Be("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return X(()=>{if(e.length<2)throw new Be("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=Qf(n,0,1,"float32"),r=Iw.gramSchmidt(s);return e[0]>e[1]&&(r=rt(r)),L(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};f1.className="Orthogonal";ce.registerClass(f1);var tk={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function nk(e,t={}){return np(e,ce.SerializationMap.getMap().classNameMap,t,"initializer")}function Bt(e){return Zy(e)}function $t(e){if(typeof e=="string"){let t=e in tk?tk[e]:e;if(t==="GlorotNormal")return new nm;if(t==="GlorotUniform")return new tm;if(t==="HeNormal")return new sm;if(t==="HeUniform")return new rm;if(t==="LeCunNormal")return new am;if(t==="LeCunUniform")return new om;{let n={};return n.className=t,n.config={},nk(n)}}else return e instanceof sr?e:nk(e)}function xW(){return new l1}function bW(){return new em}function vW(e){return new u1(e)}function wW(e){return new c1(e)}function kW(e){return new d1(e)}function IW(e){return new p1(e)}function SW(e){return new h1(e)}function CW(e){return new cs(e)}function TW(e){return new tm(e)}function NW(e){return new nm(e)}function EW(e){return new sm(e)}function RW(e){return new rm(e)}function _W(e){return new am(e)}function DW(e){return new om(e)}function PW(e){return new f1(e)}var sk={};Me(sk,{Layer:()=>ot,RNN:()=>oa,RNNCell:()=>fp,activation:()=>fU,add:()=>kU,alphaDropout:()=>oG,average:()=>IU,averagePooling1d:()=>FA,averagePooling2d:()=>OA,averagePooling3d:()=>MA,avgPool1d:()=>PU,avgPool2d:()=>FU,avgPool3d:()=>MU,avgPooling1d:()=>$U,avgPooling2d:()=>OU,avgPooling3d:()=>zU,batchNormalization:()=>RU,bidirectional:()=>JU,concatenate:()=>SU,conv1d:()=>aU,conv2d:()=>oU,conv2dTranspose:()=>iU,conv3d:()=>lU,conv3dTranspose:()=>uU,convLstm2d:()=>XU,convLstm2dCell:()=>KU,cropping2D:()=>dU,dense:()=>mU,depthwiseConv2d:()=>hU,dot:()=>EU,dropout:()=>gU,elu:()=>QV,embedding:()=>wU,flatten:()=>AU,gaussianDropout:()=>aG,gaussianNoise:()=>rG,globalAveragePooling1d:()=>LU,globalAveragePooling2d:()=>BU,globalMaxPool1d:()=>eG,globalMaxPool2d:()=>tG,globalMaxPooling1d:()=>mI,globalMaxPooling2d:()=>gI,gru:()=>VU,gruCell:()=>UU,input:()=>Fk,inputLayer:()=>JV,layerNormalization:()=>_U,leakyReLU:()=>tU,lstm:()=>GU,lstmCell:()=>HU,masking:()=>iG,maxPool1d:()=>nG,maxPool2d:()=>sG,maxPooling1d:()=>yI,maxPooling2d:()=>AI,maxPooling3d:()=>WU,maximum:()=>CU,minimum:()=>TU,multiply:()=>NU,permute:()=>vU,prelu:()=>nU,reLU:()=>eU,repeatVector:()=>xU,reshape:()=>bU,rnn:()=>ZU,separableConv2d:()=>cU,simpleRNN:()=>jU,simpleRNNCell:()=>qU,softmax:()=>sU,spatialDropout1d:()=>yU,stackedRNNCells:()=>YU,thresholdedReLU:()=>rU,timeDistributed:()=>QU,upSampling2d:()=>pU,zeroPadding2d:()=>DU});var $W=0;function rk(){return $W++}var im={};function lm(e=""){return e in im||(im[e]=0),im[e]+=1,e+im[e].toString()}function m1(e){return Array.isArray(e)&&Array.isArray(e[0])}function um(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ge(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new q(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function mt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new q(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function cm(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var ak="Variable",ok=class{constructor(e,t="float32",n=ak,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=rk(),n=n==null?ak:n,this.originalName=Kw(n),this.name=Zw(this.originalName),this.trainable_=s,this.constraint=r,this.val=lw(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),FW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function FW(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function g1(e){return e.map(t=>t.read())}function y1(e){e.forEach(t=>{t[0].write(t[1])})}var Qt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},kr=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=rk(),a!=null&&(this.originalName=Kw(a),this.name=Zw(this.originalName)),this.rank=t.length}},OW=0,dm=class{constructor(e,t){this.callArgs=t,this.id=OW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},MW=0,ot=class extends ce.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=MW++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ra(n)+"_"+lm(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new br(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new q(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return us(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return us(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new sa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new sa(`Layer ${this.name} is not connected, no input to return.`);return us(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new sa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new sa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return us(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Nt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=Nt(this.inputSpec);if(e.length!==t.length)throw new q(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new q(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),c=r.axes[i],u=l>=0?o[l]:o[o.length+l];if(c!=null&&[c,null].indexOf(u)===-1)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=Nt(e),s=!0;for(let a of n)if(!(a instanceof kr)){s=!1;break}let r=!0;for(let a of n)if(a instanceof kr){r=!1;break}if(s===r)throw new q("Arguments to apply() must be all SymbolicTensors or all Tensors");return vl(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of Nt(e))a.push(o.shape);this.build(us(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=Nt(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=us(i),this.activityRegularizer!=null)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=zW(e),o=this.computeOutputShape(a),i,l=LW(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((c,u)=>new kr(l,c,this,Nt(e),t,this.name,u)):i=new kr(l,o,this,Nt(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new sa(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new sa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new br(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return cm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return g1(e?this.trainableWeights:this.weights)}setWeights(e){X(()=>{let t=this.weights;if(t.length!==e.length)throw new q(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=g1(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!w.arraysEqual(a.shape,i.shape))throw new q(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}y1(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new q(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():$t("zeros"));let l=s.apply(t,n),c=new ok(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Nt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=Nt(e);t=Nt(t),n=Nt(n),s=Nt(s),r=um(r),a=um(a);let l=[],c=[],u=[];for(let d of i)l.push(d.sourceLayer),c.push(d.nodeIndex),u.push(d.tensorIndex);new dm({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function zW(e){e=Nt(e);let t=[];for(let n of e)t.push(n.shape);return us(t)}function LW(e){return"float32"}function ik(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],c=ik(o,i,l);for(let u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}var nc=class extends ot{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:lm("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new q("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new q("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new q("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new kr(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new q(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};nc.className="InputLayer";ce.registerClass(nc);function lk(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new q("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new nc({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Ho(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];te(s)}}function uk(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var BW=125,sc=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},ck=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},WW=class extends sc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=X(()=>ue(this.totals[s],L(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:X(()=>{let s=L(de(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),An(t[n])}))}},dk=class extends sc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},pk=class extends sc{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Sw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=BW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=XB(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Ho(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ho(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ho(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ho(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ho(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ho(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ho(e),await this.trainEnd(e))}};function hk(e,t){return e==null&&(e={}),e instanceof sc?[e]:Array.isArray(e)&&e[0]instanceof sc?e:Nt(e).map(s=>new pk(s,t))}var Lr=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Lr.checkForDuplicate(t),Lr.constructors[e]==null&&(Lr.constructors[e]=[]),Lr.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Lr.constructors)Lr.constructors[+t].forEach(s=>{if(s===e)throw new q("Duplicate callback constructor.")})}static clear(){Lr.constructors={}}static createCallbacks(e){let t=[];for(let n in Lr.constructors){let s=+n;e>=s&&t.push(...Lr.constructors[s])}return t.map(n=>new n)}},A1=Lr;A1.constructors={};function fk(e,t,n,s,r,a,o,i,l){let c=new dk,u=[new WW,...A1.createCallbacks(t)];e!=null&&u.push(...e),u.push(c);let d=new ck(u);return d.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:d,history:c}}function Ir(e,t={},n=!1){return np(e,ce.SerializationMap.getMap().classNameMap,t,"layer",n)}function pm(e,t){return X(()=>{e.dtype!=="float32"&&(e=ge(e,"float32"));let n=we(op(e),t,!0),s=Hu(n.shape,ln()),r=$n(ea(n,s));return de(e,r)})}function kl(e,t){return X(()=>Gt(op(pe(t,e)),-1))}function hm(e,t){return X(()=>Gt(an(pe(t,e)),-1))}function rc(e,t){return X(()=>{let n=pe(e,t),s=bs(an(e),ln(),Number.MAX_VALUE),r=an(de(n,s));return L(100,Gt(r,-1))})}function VW(e,t){return X(()=>{let n=bs(t,ln(),Number.MAX_VALUE),s=Bs(ue(1,n)),r=bs(e,ln(),Number.MAX_VALUE),a=Bs(ue(1,r));return Gt(op(pe(s,a)),-1)})}function UW(e,t){return X(()=>{let n=ea(0,pe(1,L(e,t)));return Gt(op(n),-1)})}function GW(e,t){return X(()=>{let n=ea(0,pe(1,L(e,t)));return Gt(n,-1)})}function HW(e,t){return X(()=>{let n=we(L(e,t),-1),s=xn(L(pe(1,e),t),-1);return ea(0,ue(1,pe(s,n)))})}function jW(e,t){return X(()=>{let n=Math.log(2),s=pe(t,e),r=pe(ue(s,qu(L(-2,s))),n);return Gt(r,-1)})}function lp(e,t,n=!1){return X(()=>{if(n)t=Ju(t);else{let s=we(t,t.shape.length-1,!0);t=de(t,s)}return t=bs(t,ln(),1-ln()),Lt(we(L(ge(e,"float32"),Bs(t)),t.shape.length-1))})}function fm(e,t,n=!1){return X(()=>{let s=ge(Kd(uW(e)),"int32");t=bs(t,ln(),1-ln());let r=t.shape,a=H(Ud(s,r[r.length-1]),r);return lp(a,t,n)})}function qW(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new q(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return X(()=>{let n=Or(t),s=Lt(an(t));return ue(pe(n,L(t,e)),Nf(Ls(s)))})}function mm(e,t){return X(()=>{let n;return n=bs(t,ln(),1-ln()),n=Bs(de(n,pe(1,n))),Gt(qW(e,n),-1)})}function XW(e,t){return X(()=>{let n=bs(e,ln(),1),s=bs(t,ln(),1);return we(L(e,Bs(de(n,s))),-1)})}function KW(e,t){return X(()=>{let n=Bs(ue(ln(),t));return Gt(pe(t,L(e,n)),-1)})}function x1(e,t){return X(()=>{let n=pm(e,-1),s=pm(t,-1),r=L(n,s);return Lt(we(r,-1))})}var gm={meanSquaredError:kl,meanAbsoluteError:hm,meanAbsolutePercentageError:rc,meanSquaredLogarithmicError:VW,squaredHinge:UW,hinge:GW,categoricalHinge:HW,logcosh:jW,categoricalCrossentropy:lp,sparseCategoricalCrossentropy:fm,binaryCrossentropy:mm,kullbackLeiblerDivergence:XW,poisson:KW,cosineProximity:x1};function b1(e){if(typeof e=="string"){if(e in gm)return gm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new q(t)}else return e}function v1(e,t){return X(()=>{let n=L(.5,Ws(t)),s=Yf(vs(t,n),e.dtype);return Gt(zs(e,s),-1)})}function w1(e,t){return X(()=>Yf(zs(Ms(e,-1),Ms(t,-1)),"float32"))}function mk(e,t){return X(()=>ge(we(yr(zs(e,1),zs(t,1))),"float32"))}function ZW(e,t){return X(()=>ge(we(yr(zs(e,1),zs(t,0))),"float32"))}function YW(e,t){return X(()=>ge(we(yr(zs(e,0),zs(t,1))),"float32"))}function gk(e,t){return X(()=>{let n=mk(e,t),s=YW(e,t),r=ue(n,s);return ge(Gn(vs(r,0),de(n,r),0),"float32")})}function JW(e,t){return X(()=>{let n=mk(e,t),s=ZW(e,t),r=ue(n,s);return ge(Gn(vs(r,0),de(n,r),0),"float32")})}function yk(e,t){return mm(e,t)}function Ak(e,t){return e.rank===t.rank&&(e=Ye(e,[e.rank-1])),t=Ms(t,-1),t.dtype!==e.dtype&&(t=ge(t,e.dtype)),ge(zs(e,t),"float32")}var QW=kl,eV=kl,tV=hm,nV=hm,sV=rc,rV=rc,k1=lp,aV=x1,xk=fm,ym={binaryAccuracy:v1,categoricalAccuracy:w1,precision:gk,categoricalCrossentropy:k1,sparseCategoricalCrossentropy:xk,mse:QW,MSE:eV,mae:tV,MAE:nV,mape:sV,MAPE:rV,cosine:aV};function oV(e){if(typeof e=="string"&&e in ym)return ym[e];if(typeof e!="string"&&e!=null)return e;throw new q(`Unknown metric ${e}`)}function Am(e){if(Mr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(gm))if(gm[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(ym))if(ym[n]===e){t=n;break}return t!==void 0?t:e.name}}function iV(e){let t={Adagrad:()=>yl.adagrad(.01),Adadelta:()=>yl.adadelta(1,.95,ln()),Adam:()=>yl.adam(.001,.9,.999,ln()),Adamax:()=>yl.adamax(.002,.9,.999,ln(),0),RMSProp:()=>yl.rmsprop(.001,.9,0,ln()),SGD:()=>yl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new q(`Unknown Optimizer ${e}`)}var bk=1*1024*1024;function vk(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!I1(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>bk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${bk}.`)}}function I1(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!I1(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!I1(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function lV(e,t,n,s=console.log){let r=cV(e),a=["Layer (type)","Output shape","Param #"];r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let o;if(!r){a.push("Receives inputs"),o=[];for(let u in e.nodesByDepth)o.push(...e.nodesByDepth[u])}s("_".repeat(t)),xm(a,n,s),s("=".repeat(t));let i=e.layers;for(let u=0;u<i.length;++u)r?dV(i[u],n,s):pV(i[u],n,o,s),s((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=uV(e),c=cm(e.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function uV(e){let t;return e.collectedTrainableWeights!=null?t=cm(e.collectedTrainableWeights):t=cm(e.trainableWeights),t}function cV(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function xm(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function dV(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(i){s="multiple"}let r=e.name,a=e.getClassName(),o=[`${r} (${a})`,s,e.countParams().toString()];xm(o,t,n)}function pV(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}let a=[];for(let u of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(u)===-1))for(let d=0;d<u.inboundLayers.length;++d){let p=u.inboundLayers[d].name,h=u.nodeIndices[d],f=u.tensorIndices[d];a.push(`${p}[${h}][${f}]`)}let o=e.name,i=e.getClassName(),l=a.length===0?"":a[0],c=[`${o} (${i})`,r,e.countParams().toString(),l];xm(c,t,s);for(let u=1;u<a.length;++u)xm(["","","",a[u]],t,s)}function wk(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function up(e,t){if(e===null)return null;if(typeof e=="string")return xl(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];wk(t,r,a)?n.push(a):n.push(up(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=xl(s);n[a]=up(r,a)}}return n}}function S1(e,t){if(e==null)return null;if(typeof e=="string")return ra(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];wk(t,r,a)?n.push(a):n.push(S1(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=ra(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=S1(r,s)}return n}}var C1="0.0.0";function hV(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ge(t,e.dtype)}catch(n){throw new q(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Il=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Il)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=hV(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new q(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof kr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof kr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&te(this.id2Mask)}},T1={},kk={};function cp(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],c=t.names();for(let f of i)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let u=i.join(",")+"|"+t.names().join(","),d,p;if(T1[u]==null){let f=fV(o,t);d=f.sorted,p=f.recipientCounts,T1[u]=d,kk[u]=p}d=T1[u],p={},r||Object.assign(p,kk[u]);let h=new Il(t);for(let f=0;f<d.length;++f){if(s!=null){let R=xf().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}let m=d[f],g=m.sourceLayer;if(g instanceof nc)continue;let y=[],x=[],A=[],b=!1;for(let R of m.inputs){let F=h.getValue(R),_=h.getMask(R);y.push(F),x.push(_),_!=null&&(b=!0),r||(p[R.name]--,p[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!F.isDisposed&&R.sourceLayer.stateful!==!0&&A.push(F))}b&&(n=n||{},n.mask=x[0]);let v=Nt(g.apply(y,n)),C=null;g.supportsMasking&&(C=g.computeMask(y,x));let I=gV(m),E=Array.isArray(I)?I:[I];for(let R=0;R<E.length;++R){h.hasKey(E[R])||h.add(E[R],v[R],Array.isArray(C)?C[0]:C);let F=i.indexOf(E[R].name);F!==-1&&(l[F]=v[R])}r||te(A)}return h.disposeMasks(),a?l:l[0]}function fV(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=Ik(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=Ik(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(c=>s[l].add(c))}}return{sorted:n,recipientCounts:mV(s)}}function mV(e){let t={};for(let n in e)t[n]=e[n].size;return t}function Ik(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!n.has(c.name)&&a.push(c)}}return{sorted:s,recipientMap:r}}function gV(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var Br=class extends ot{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=lm(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Vo(this.inputs).length!==this.inputs.length)throw new q(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Vo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(A),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;Mr(A===0,"input layer has >1 nodes"),Mr(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(A),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let x=this.inputLayers[y];if(!(x instanceof nc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},s={},r={},a={},o=[],i=(y,x,A,b,v,C)=>{(b==null||v==null||C==null)&&(b=y.sourceLayer,v=y.nodeIndex,C=y.tensorIndex);let I=b.inboundNodes[v];if(A.indexOf(I)!==-1)throw new br(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(I)!==-1)return;this.containerNodes.add(Br.nodeKey(b,v)),b.id in a||(a[b.id]=Object.keys(a).length),A.indexOf(I)===-1&&A.push(I);let E=I.inboundLayers.length;for(let R=0;R<E;R++){let F=I.inputTensors[R],_=I.inboundLayers[R],P=I.nodeIndices[R],T=I.tensorIndices[R];i(F,x,A,_,P,T)}for(x.push(I);A.indexOf(I)>=0;)A.splice(A.indexOf(I),1);o.push(I)},l=[],c=[];for(let y of this.outputs)i(y,l,c);let u=o.slice().reverse();for(let y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let x=t[y.id],A=s[y.outboundLayer.id]==null?0:s[y.outboundLayer.id];x=Math.max(x,A),s[y.outboundLayer.id]=x,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=x;for(let b=0;b<y.inboundLayers.length;b++){let v=y.inboundLayers[b],C=y.nodeIndices[b],I=v.inboundNodes[C],E=t[I.id]==null?0:t[I.id];t[I.id]=Math.max(x+1,E),n[I.id]=I}}let d={};for(let y in t){let x=t[y];x in d||(d[x]=[]),d[x].push(n[y])}let p={};for(let y in s){let x=s[y];x in p||(p[x]=[]),p[x].push(r[y])}let h=Object.keys(p).map(y=>parseInt(y,10)).sort(Zf);this.layers=[];for(let y of h){let x=p[y];x.sort((A,b)=>{let v=a[A.id],C=a[b.id];return v<C?-1:v>C?1:0});for(let A of x)A instanceof Br&&this.internalContainerRefs.push(A),this.layers.push(A)}this.layersByDepth=p,h=Object.keys(d).map(y=>parseInt(y,10)).sort(Zf);let f=this.inputs.slice(),m=[];for(let y of h)for(let x of d[y]){let A=x.outboundLayer;if(A!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new br(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${A.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(A.name)}}this.nodesByDepth=d;let g=this.layers.map(y=>y.name);for(let y of g){let x=g.filter(A=>A===y).length;if(x!==1)throw new br(`The name "${y}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new q("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new q(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new q(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new q(`${a.length} of ${s} weights are not set: ${a}`)}y1(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${C1}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=S1(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return X(()=>{e=Nt(e);let n=new Il;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return cp(this.outputs,n,t)})}computeMask(e,t){return X(()=>{e=Nt(e);let n;return t==null?n=Al(null,e.length):n=Nt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=um(e);if(t.length!==this.inputLayers.length)throw new q(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],c=i.name+"_0_0";n[c]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Zf);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let c=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;let u=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],x=`${m.name}_${g}_${y}`,A=n[x];u.push(A)}let d=c.computeOutputShape(us(u)),p=um(d),h=c.inboundNodes.indexOf(l);for(let f=0;f<p.length;f++){let m=`${c.name}_${h}_${f}`;n[m]=p[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],u=`${i.name}_${l}_${c}`;a.push(u)}for(let o=0;o<a.length;o++){let i=a[o];Mr(i in n),r.push(n[i])}return us(r)}runInternalGraph(e,t){t==null&&(t=Al(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],c=e[i],u=t[i];n[l.id]=[c,u]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Zf);for(let i of s){let l=this.nodesByDepth[i];for(let c of l){let u=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,h=new Array;for(let f of d)f.id in n&&h.push(n[f.id]);if(h.length===d.length){let f={},m,g,y,x;if(c.callArgs!=null&&(f=c.callArgs),h.length===1){let[A,b]=h[0];f.mask==null&&(f.mask=b),y=Nt(u.call(A,f)),x=Nt(u.computeMask(A,b)),m=[A],g=[b]}else m=h.map(A=>A[0]),g=h.map(A=>A[1]),f.mask==null&&(f.mask=g),y=Nt(u.call(m,f)),x=Nt(u.computeMask(m,g));if(u.activityRegularizer)throw new Be("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let A=0;A<p.length;++A){let b=p[A],v=y[A],C=x[A];n[b.id]=[v,C]}}}}let r=[],a=[],o=[];for(let i of this.outputs){Mr(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,c]=n[i.id];o.push(l.shape),r.push(l),a.push(c)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Br?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Br.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new q(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new q("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new q(`No such layer: ${e}`)}calculateLosses(){return X(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Br.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let u=0;u<a.inboundNodes.length;u++){let d=a.inboundNodes[u],p=Br.nodeKey(a,u),h={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],y=d.nodeIndices[m],x=d.tensorIndices[m],A=Br.nodeKey(g,y),b=t[A];b==null&&(b=0),f.push([g.name,b,x,h])}l.push(f)}}}let c={};c.name=a.name,c.className=o,c.config=i,c.inboundNodes=l,n.push(c)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=Br.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.inputLayersTensorIndices[a];s.push([o.name,c,u])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=Br.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.outputLayersTensorIndices[a];r.push([o.name,c,u])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let y=[],x;for(let A of g){let b=A[0],v=A[1],C=A[2];if(x=A[3]==null?{}:A[3],!(b in r)){o(m,g);return}let I=r[b];if(I.inboundNodes.length<=v){o(m,g);return}let E=I.inboundNodes[v];y.push(E.outputTensors[C])}y.length>0&&m.apply(us(y),x)}function l(m){let g=m.name,y=Ir(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(s),r[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new q(`Corrupted configuration, expected array for nodeData: ${A}`);o(y,A)})}let c=t.name,u=t.layers;for(let m of u)l(m);for(;!qB(a);)for(let m of u){let g=r[m.name];if(g.name in a){let y=a[g.name];delete a[g.name];for(let x of y)i(g,x)}}let d=[],p=[],h=t.inputLayers;for(let m of h){let g=m[0],y=m[1],x=m[2];Mr(g in r);let b=r[g].inboundNodes[y].outputTensors;d.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],x=m[2];Mr(g in r);let b=r[g].inboundNodes[y].outputTensors;p.push(b[x])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new q("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){X(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function yV(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Sk(e,t){return yV(e,t,"classWeight")}async function Ck(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=X(()=>{if(e.shape.length===1)return Vn(e);if(e.shape.length===2){if(e.shape[1]>1)return Ms(e,1);if(e.shape[1]===1)return H(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());te(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),Tt(o,"float32")}else return null}function AV(e,t){return L(e,t)}var xV=32;function Tk(e,t){let n,s,r=t;n=r.xs,s=r.ys,w.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=Nk("input",e.inputNames,n),o=Nk("output",e.outputNames,s),i=a[0].shape[0];w.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)w.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)w.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function Nk(e,t,n){if(n instanceof nt)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new q(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function bV(e){if(e.length===3)throw new Be("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function vV(e,t,n){let s=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(Ek(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=bV(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=hk(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:h}=fk(u,d,n.epochs,null,null,wV(t,n),null,r,c);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await p.onEpochBegin(f);let y=0,x=0;for(s||(m=await t.iterator());s?y<n.batchesPerEpoch:!0;){let A=await m.next();if(s&&A.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(A.value!=null){let{xs:b,ys:v}=Tk(e,A.value),C={};C.batch=x,C.size=b[0].shape[0],await p.onBatchBegin(x,C);let I=[];if(n.classWeight!=null){let F=Sk(n.classWeight,e.outputNames);for(let _=0;_<F.length;++_)I.push(await Ck(v[_],null,F[_]))}let E=b.concat(v).concat(I),R=i(E);te(E);for(let F=0;F<l.length;++F){let _=l[F],P=R[F];C[_]=P,An(P)}await p.onBatchEnd(x,C),uk(C),x++,y++}if(s?y>=n.batchesPerEpoch:A.done){if(r){let b;Ek(n.validationData)?b=Nt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=Nt(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?xV:n.validationBatchSize,verbose:0}));for(let v=0;v<e.metricsNames.length;++v)g[`val_${e.metricsNames[v]}`]=b[v]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function wV(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Ek(e){return typeof e.iterator=="function"}function kV(e){return typeof e.next=="function"}async function IV(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Be("Verbose mode is not implemented yet.");w.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=kV(t)?t:await t.iterator(),i=0,l=0;for(;s?l<n.batches:!0;){let c=await o.next();if(a=X(()=>{if(c.value){let{xs:u,ys:d}=Tk(e,c.value),p=u.concat(d),h=X(()=>r(p));if(te(p),l===0)for(let m=0;m<h.length;++m)a.push(Te(0));let f=p[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],y=a[m];a[m]=X(()=>ue(a[m],L(f,g))),l>0&&te(y)}te(h),i+=f,++l}return a}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){let u=a[c];a[c]=de(a[c],i),te(u)}return us(a)}function N1(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function dp(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>wl(s,t,n-t)):wl(e,t,n-t)}function E1(e,t){return X(()=>e==null?null:Array.isArray(e)?e.map(n=>E1(n,t)):Qw(e,t.dtype==="int32"?t:ge(t,"int32")))}function R1(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function SV(e,t,n,s,r,a,o,i,l,c,u,d,p,h,f){r==null&&(r=32),a==null&&(a=1),u==null&&(u=!0),p==null&&(p=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new q("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),y;g!=null&&(y=vr(0,g)),o==null&&(o=1);let{callbackList:x,history:A}=fk(i,o,a,p,g,h,r,m,d);x.setModel(e),e.history=A,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=p;b<a;++b){await x.onEpochBegin(b);let v={};if(h!=null)throw new Be("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Be("batch shuffling is not implemneted yet");u&&w.shuffle(y);let C=Tt(y),I=R1(g,r);for(let E=0;E<I.length;++E){let R={};if(await x.onBatchBegin(E,R),X(()=>{let F=I[E][0],_=I[E][1],P=wl(C,F,_-F);R.batch=E,R.size=_-F;let T=E1(n,P),O=t(T);for(let G=0;G<s.length;++G){let K=s[G],z=O[G];R[K]=z,An(z)}if(E===I.length-1&&m){let G=e.testLoop(l,c,r);for(let K=0;K<s.length;++K){let z=s[K],j=G[K];An(j),v["val_"+z]=j}}}),await x.onBatchEnd(E,R),uk(R),e.stopTraining_)break}C.dispose()}if(await x.onEpochEnd(b,v),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function CV(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,c,u,d,p;try{let h=s.batchSize==null?32:s.batchSize;N1(h);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,h);r=m[0],a=m[1],p=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new Be("validationData including sample weights is not supported yet."):new q(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let R=!0,F=await e.standardizeUserData(l,c,null,null,R,h);u=F[0],d=F[1],y=u.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let R=Math.floor(r[0].shape[0]*(1-s.validationSplit)),F=r[0].shape[0];u=dp(r,R,F),o=r,r=dp(r,0,R),d=dp(a,R,F),i=a,a=dp(a,0,R),y=u.concat(d)}else s.validationSteps!=null&&(g=!0);let x=r.concat(a).concat(p);e.checkTrainableWeightsConsistency();let A=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),v,C;g?(e.makeTestFunction(),v=e.testFunction,C=b.slice().concat(b.map(R=>"val_"+R))):(v=null,y=[],C=b.slice());let I=hk(s.callbacks,s.yieldEvery);return await SV(e,A,x,b,h,s.epochs,s.verbose,I,v,y,s.shuffle,C,s.initialEpoch,null,null)}finally{e.isTraining=!1,Sr(r,t),Sr(a,n),Sr(o,t),Sr(i,n),Sr(u,l),Sr(d,c),p!=null&&te(p)}}function Rk(e){let t=[];e instanceof nt&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(ap(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Sr(e,t){if(e==null)return;let n=[];if(t instanceof nt)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof nt)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function TV(e){return e instanceof nt}function _1(e){return Array.isArray(e)}function _k(e){return!TV(e)&&!_1(e)}function Dk(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(_1(e)&&e.length>0)o=!0;else if(_k(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new q(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(_k(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new q(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(_1(e)){if(e=e,e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new q(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Rk(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u>=0&&c!==u)throw new q(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function NV(e,t,n){let s=Vo(e.map(a=>a.shape[0]));s.sort();let r=Vo(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new q(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new q(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!w.arraysEqual(s,r))throw new q(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function EV(e,t,n){let s=[kl,mm,lp];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===lp&&a.shape[a.shape.length-1]===1)throw new q(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),c=i.slice(1);for(let u=0;u<l.length;++u){let d=l[u],p=c[u];if(p!=null&&d!==p)throw new q(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Pk(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new q(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u!==c)throw new q(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function RV(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var _V="layers-model",aa=class extends Br{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new q("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");lV(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=iV(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof na))throw new q("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new q(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(b1(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new q(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>b1(o))}else{let a=b1(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],vl("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=RV(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};vl("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let c="",u,d,p;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===mm?["accuracy","acc"].indexOf(h)!==-1?d=v1:["crossentropy","ce"].indexOf(h)!==-1&&(d=yk):this.lossFunctions[a]===fm?["accuracy","acc"].indexOf(h)!==-1?d=Ak:["crossentropy","ce"].indexOf(h)!==-1&&(d=xk):["accuracy","acc"].indexOf(h)!==-1?d=w1:["crossentropy","ce"].indexOf(h)!==-1&&(d=k1);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),p=d,u=c+g}else p=oV(h),u=c+Am(h);let f;vl(u,()=>{f=p}),r(a,u,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;N1(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return us(l)}finally{Sr(a[0],e),Sr(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),IV(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new q(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new q(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new q("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Il;if(e instanceof nt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new q(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new q(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=cp(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=Al(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new q(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return X(()=>{let s=this.checkNumSamples(e);if(n)throw new Be("Verbose predictLoop() is not implemented yet.");let r=R1(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)X(()=>{let l=r[o][0],c=r[o][1],u=dp(e,l,c),d=[];if(Array.isArray(u))for(let h=0;h<u.length;++h)d.push({key:this.inputs[h],value:u[h]});else d.push({key:this.inputs[0],value:u});let p=new Il(d);return cp(this.outputs,p)}).forEach((l,c)=>a[c].push(l));return us(a.map(o=>St(o,0)))})}predict(e,t={}){let n=Rk(e);Pk(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return N1(s),this.predictLoop(n,s)}finally{Sr(n,e)}}predictOnBatch(e){Pk(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new br("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===fm?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=Dk(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Dk(t,this.feedOutputNames,r,!1,"target"),NV(e,t,null),EV(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new q(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let c=Sk(s,this.outputNames);l=[];for(let u=0;u<c.length;++u)l.push(await Ck(i[u],null,c[u]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return X(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new Be("Verbose mode is not implemented yet.");if(r!=null)throw new Be("steps mode in testLoop() is not implemented yet");{let i=R1(a,n),l=Tt(vr(0,a));for(let c=0;c<i.length;++c){let u=i[c][0],d=i[c][1],p=wl(l,u,d-u),h=E1(t,p),f=e(h);if(c===0)for(let m=0;m<f.length;++m)o.push(Te(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=ue(o[m],L(d-u,g))}}for(let c=0;c<o.length;++c)o[c]=de(o[c],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;Ww(e,s)>1&&(r+=`_${Ww(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let u=[];for(let f=0;f<this.inputs.length;++f)u.push({key:this.inputs[f],value:n[f]});let d=new Il(u),p=cp(this.outputs,d,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],p[f]);r[f]!=null&&(g=AV(g,r[f]));let y=Gt(g);t.push(y),f===0?h=g:h=ue(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],y=this.metricsTensors[f][1];m=Gt(g(s[y],p[y]))}An(m),a.push(m)}return h=Gt(h),this.calculateLosses().forEach(f=>{h=ue(h,f)}),h},i=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>X(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new Il(a),i=cp(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],u=Gt(c(r[l],i[l]));l===0?n=u:n=ue(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],u=this.metricsTensors[l][1],d=Gt(c(r[u],i[u]));t.push(d)}return t})}async fit(e,t,n={}){return CV(this,e,t,n)}async fitDataset(e,t){return vV(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let c=await l.data();i.push(c[0])}return te(o),Sr(n[0],e),Sr(n[1],t),us(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=xf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-xf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ra(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ra(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=ra(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ra(Am(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ra(Am(e)));{let e={};for(let t in this.metrics)e[t]=ra(Am(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=up(e.optimizer_config),n=Ir(t),s;if(typeof e.loss=="string")s=xl(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>xl(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=xl(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>xl(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=xl(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=os.getSaveHandlers(e);if(l.length===0)throw new q(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new q(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new q("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await os.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:_V,generatedBy:`TensorFlow.js tfjs-layers v${C1}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:c,specs:u}=await os.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...u),n.data=os.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let l=!0;vk(this.userDefinedMetadata,this.name,l),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){vk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};aa.className="Model";ce.registerClass(aa);var $k=class extends aa{};$k.className="Functional";ce.registerClass($k);async function DV(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=up(n),r=Ir(s,t);if(e.weightsManifest!=null){let a=await os.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),te(a)}return r}async function PV(e,t){if(t==null&&(t={}),typeof e=="string"){let n=os.getLoadHandlers(e,t);if(n.length===0)n.push(os.browserHTTPRequest(e,t));else if(n.length>1)throw new q(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return $V(e,void 0,t)}async function $V(e,t,n){if(n==null&&(n={}),e.load==null)throw new q("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=Ir(up(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new q("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:u}=FV(s.weightData,s.weightSpecs);i.loadWeights(c,a),i.optimizer!=null&&u.length>0&&await i.optimizer.setWeights(u),te(c),te(u.map(d=>d.tensor))}return i}function FV(e,t){let n=os.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var D1=class extends aa{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:lm("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new q(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof D1||e instanceof aa,n;if(t){if(n=e,n.outputs.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new q("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new q("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=lk({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new q(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ik(this.outputs[0])}this.inboundNodes=[],new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Al(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(mt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new aa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new br("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new br("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new br("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new br("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new q("Legacy serialization format not supported yet.");r=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof D1))throw new Be(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let c=Ir(i,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new q("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new q("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},bm=D1;bm.className="Sequential";ce.registerClass(bm);function OV(e){return new aa(e)}function MV(e){return new bm(e)}function zV(e,t){return t==null&&(t={}),PV(e,t)}function Fk(e){return lk(e)}function LV(e,t){A1.registerCallbackConstructor(e,t)}var ds=class extends ce.Serializable{getConfig(){return{}}},Ok=class extends ds{apply(e,t=1){return dW(e,t)}};Ok.className="elu";ce.registerClass(Ok);var Mk=class extends ds{apply(e){return $y(e)}};Mk.className="selu";ce.registerClass(Mk);var zk=class extends ds{apply(e){return Or(e)}};zk.className="relu";ce.registerClass(zk);var Lk=class extends ds{apply(e){return X(()=>Zd(6,Or(e)))}};Lk.className="relu6";ce.registerClass(Lk);var Bk=class extends ds{apply(e){return e}};Bk.className="linear";ce.registerClass(Bk);var Wk=class extends ds{apply(e){return Pn(e)}};Wk.className="sigmoid";ce.registerClass(Wk);var Vk=class extends ds{apply(e){return hW(e)}};Vk.className="hardSigmoid";ce.registerClass(Vk);var Uk=class extends ds{apply(e){return qu(e)}};Uk.className="softplus";ce.registerClass(Uk);var Gk=class extends ds{apply(e){return pW(e)}};Gk.className="softsign";ce.registerClass(Gk);var Hk=class extends ds{apply(e){return Vu(e)}};Hk.className="tanh";ce.registerClass(Hk);var P1=class extends ds{apply(e,t=-1){return Ju(e,t)}};P1.className="softmax";ce.registerClass(P1);var jk=class extends ds{apply(e,t=-1){return ky(e,t)}};jk.className="logSoftmax";ce.registerClass(jk);var qk=class extends ds{apply(e,t=1){return X(()=>L(Pn(L(e,t)),e))}};qk.className="swish";ce.registerClass(qk);var Xk=class extends ds{apply(e){return X(()=>L(e,Vu(qu(e))))}};Xk.className="mish";ce.registerClass(Xk);function jo(e){return e.getClassName()}function $1(e,t={}){return np(e,ce.SerializationMap.getMap().classNameMap,t,"activation")}function qo(e){if(e==null){let t={};return t.className="linear",t.config={},$1(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},$1(t)}else return e instanceof ds?e:$1(e)}function F1(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var Kk=class extends ce.Serializable{},pp=class extends Kk{constructor(e){super();F1(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return X(()=>{let t=Ht([1]);return this.hasL1&&(t=ue(t,we(L(this.l1,an(e))))),this.hasL2&&(t=ue(t,we(L(this.l2,op(e))))),H(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};pp.className="L1L2";ce.registerClass(pp);function BV(e){return F1(e),new pp({l1:e!=null?e.l1:null,l2:0})}function WV(e){return F1(e),new pp({l2:e!=null?e.l2:null,l1:0})}var Zk={l1l2:"L1L2"};function vt(e){return Zy(e)}function Yk(e,t={}){return np(e,ce.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ft(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Zk?Zk[e]:e,config:{}};return Yk(n)}else return e instanceof Kk?e:Yk(e)}var O1=class extends ot{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ge(e);let n=Or(e);return this.maxValue!=null&&(n=bs(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};O1.className="ReLU";ce.registerClass(O1);var M1=class extends ot{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ge(e);return Tf(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};M1.className="LeakyReLU";ce.registerClass(M1);var z1=class extends ot{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=$t(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ft(e.alphaRegularizer),this.alphaConstraint=cn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new q(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=mt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Qt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ge(e),$f(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Bt(this.alphaInitializer),alphaRegularizer:vt(this.alphaRegularizer),alphaConstraint:un(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};z1.className="PReLU";ce.registerClass(z1);var L1=class extends ot{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Be(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ge(e);return Xd(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};L1.className="ELU";ce.registerClass(L1);var B1=class extends ot{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ge(e);return L(n,ge(vs(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};B1.className="ThresholdedReLU";ce.registerClass(B1);var W1=class extends ot{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new P1().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ge(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};W1.className="Softmax";ce.registerClass(W1);function ac(e,t,n){if(typeof e=="number")return Al(e,t);if(e.length!==t)throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!iW(r))throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function Cr(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function Wr(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+Go([n-t,0]);else if(s==="same")e=e*t;else throw new q(`Unsupport padding mode: ${s}.`);return e}function V1(e,t){return X(()=>(jt(t),t==="channelsFirst"?rt(e,[0,2,3,1]):e))}function Jk(e,t){return X(()=>(jt(t),t==="channelsFirst"?rt(e,[0,2,3,4,1]):e))}function VV(e,t,n,s=1,r="valid",a,o=1){return X(()=>{if(a==null&&(a=xr()),jt(a),e.shape.length!==3)throw new q(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new q(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new q(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=rt(e,[0,2,1])),r==="causal")throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=my(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=wr(i,n)),i})}function Qk(e,t,n,s=[1,1],r="valid",a,o,i=null){return X(()=>{if(a==null&&(a=xr()),jt(a),e.rank!==3&&e.rank!==4)throw new q(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new q(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=V1(e,a);if(r==="causal")throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Bo.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=rt(l,[0,3,1,2])),l})}function UV(e,t,n,s=[1,1,1],r="valid",a,o){return X(()=>{if(a==null&&(a=xr()),jt(a),e.rank!==4&&e.rank!==5)throw new q(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new q(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=Jk(e,a);if(r==="causal")throw new Be("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Ay(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=wr(i,n)),a==="channelsFirst"&&(i=rt(i,[0,4,1,2,3])),i})}var U1=class extends ot{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",U1.verifyArgs(t),this.rank=e,bn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Be(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ac(t.kernelSize,e,"kernelSize"),this.strides=ac(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Us(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,jt(this.dataFormat),this.activation=qo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=$t(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cn(t.biasConstraint),this.biasRegularizer=Ft(t.biasRegularizer),this.activityRegularizer=Ft(t.activityRegularizer),this.dilationRate=ac(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new q(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new q(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new q(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Mr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Jy(e.kernelSize,"number",1,3))throw new q(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:jo(this.activation),useBias:this.useBias,biasInitializer:Bt(this.biasInitializer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},hp=class extends U1{constructor(e,t){super(e,t);this.kernel=null,hp.verifyArgs(t),this.filters=t.filters,bn(this.filters,"filters"),this.kernelInitializer=$t(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cn(t.kernelConstraint),this.kernelRegularizer=Ft(t.kernelRegularizer)}build(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return X(()=>{e=Ge(e);let n,s=this.bias==null?null:this.bias.read(),r=Uw(this.activation.getClassName());if(r!=null&&this.rank===2)n=Qk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=VV(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=Qk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=UV(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Be("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=mt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=Cr(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Bt(this.kernelInitializer),kernelRegularizer:vt(this.kernelRegularizer),kernelConstraint:un(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new q(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},eI=class extends hp{constructor(e){super(2,e);eI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Jy(e.kernelSize,"number",1,2))throw new q(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},vm=eI;vm.className="Conv2D";ce.registerClass(vm);var tI=class extends hp{constructor(e){super(3,e);tI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new q(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},wm=tI;wm.className="Conv3D";ce.registerClass(wm);var G1=class extends vm{constructor(e){super(e);if(this.inputSpec=[new Qt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=mt(e),e.length!==4)throw new q("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{let n=Ge(e);if(n.shape.length!==4)throw new q(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],c=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=Wr(i,d,c,this.padding),f=Wr(l,p,u,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=rt(n,[0,2,3,1]));let g=yy(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=rt(g,[0,3,1,2])),this.bias!=null&&(g=wr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=mt(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Wr(t[s],i,a,this.padding),t[r]=Wr(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};G1.className="Conv2DTranspose";ce.registerClass(G1);var H1=class extends wm{constructor(e){super(e);if(this.inputSpec=[new Qt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=mt(e),e.length!==5)throw new q("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{let n=Ge(e);if(n.shape.length!==5)throw new q(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],c=s[a],u=s[o],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=Wr(l,f,d,this.padding),x=Wr(c,m,p,this.padding),A=Wr(u,g,h,this.padding),b=[r,y,x,A,this.filters];this.dataFormat!=="channelsLast"&&(n=rt(n,[0,2,3,4,1]));let v=$v(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=rt(v,[0,4,1,2,3])),this.bias!==null&&(v=wr(v,this.bias.read(),this.dataFormat)),this.activation!==null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=mt(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[s]=Wr(t[s],c,o,this.padding),t[r]=Wr(t[r],u,i,this.padding),t[a]=Wr(t[a],d,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};H1.className="Conv3DTranspose";ce.registerClass(H1);var nI=class extends hp{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new q("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new q("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new q(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=$t(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ft(t.depthwiseRegularizer),this.depthwiseConstraint=cn(t.depthwiseConstraint),this.pointwiseInitializer=$t(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ft(t.pointwiseRegularizer),this.pointwiseConstraint=cn(t.pointwiseConstraint)}build(e){if(e=mt(e),e.length<this.rank+2)throw new q(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Qt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{e=Ge(e);let n;if(this.rank===1)throw new Be("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=rt(e,[0,2,3,1])),n=tw(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=wr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=rt(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Bt(this.depthwiseInitializer),e.pointwiseInitializer=Bt(this.pointwiseInitializer),e.depthwiseRegularizer=vt(this.depthwiseRegularizer),e.pointwiseRegularizer=vt(this.pointwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseConstraint),e.pointwiseConstraint=un(this.pointwiseConstraint),e}};nI.className="SeparableConv";var j1=class extends nI{constructor(e){super(2,e)}};j1.className="SeparableConv2D";ce.registerClass(j1);var sI=class extends hp{constructor(e){super(1,e);sI.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Jy(e.kernelSize,"number",1,1))throw new q(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},q1=sI;q1.className="Conv1D";ce.registerClass(q1);var X1=class extends ot{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return X(()=>{if(e=Ge(e),this.dataFormat==="channelsLast"){let n=Jf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Jf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Jf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Jf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};X1.className="Cropping2D";ce.registerClass(X1);var K1=class extends ot{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,rW(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return X(()=>{let n=Ge(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=rt(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?Ie.resizeNearestNeighbor(n,[r,a]):Ie.resizeBilinear(n,[r,a]);return rt(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Ie.resizeNearestNeighbor(n,[r,a]):Ie.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};K1.className="UpSampling2D";ce.registerClass(K1);function GV(e,t,n=[1,1],s="valid",r,a){return X(()=>{r==null&&(r=xr()),jt(r);let o=V1(e,r);if(e.rank!==4)throw new q(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new q(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=qd(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=rt(o,[0,3,1,2])),o})}var Z1=class extends U1{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=$t(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cn(e.depthwiseConstraint),this.depthwiseRegularizer=Ft(e.depthwiseRegularizer)}build(e){if(e=mt(e),e.length<4)throw new q(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{e=Ge(e);let n=GV(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=wr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Cr(t,this.kernelSize[0],this.padding,this.strides[0]),a=Cr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Bt(this.depthwiseInitializer),e.depthwiseRegularizer=vt(this.depthwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseRegularizer),e}};Z1.className="DepthwiseConv2D";ce.registerClass(Z1);function rI(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new q("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function aI(e,t,n,s=!1,r,a,o=!1,i=!1){return X(()=>{let l=t.shape.length;if(l<3)throw new q(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(vr(2,l));if(t=rt(t,c),a!=null)throw new Be("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=ge(ge(r,"bool"),"float32"),r.rank===l-1&&(r=Yt(r,-1)),r=rt(r,c)),s&&(t=Vs(t,0),r!=null&&(r=Vs(r,0)));let u=[],d,p=n,h=t.shape[0],f=is(t),m;r!=null&&(m=is(r));for(let y=0;y<h;++y){let x=f[y],A=X(()=>e(x,p));if(r==null)d=A[0],p=A[1];else{let b=X(()=>{let v=m[y],C=pe(Ws(v),v),I=ue(L(A[0],v),L(p[0],C)),E=p.map((R,F)=>ue(L(A[1][F],v),L(R,C)));return{output:I,newStates:E}});d=b.output,p=b.newStates}i&&u.push(d)}let g;return i&&(g=on(u,1)),[d,g,p]})}var oI=class extends ot{constructor(e){super(e);let t;if(e.cell==null)throw new q("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Sm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new q("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Qt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return vr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){m1(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return X(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Be("Constants support is not implemented in RNN yet.");m1(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Qt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));if(t!=null)throw new Be("Constants support is not implemented in RNN yet.");this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new q(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new Qt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){X(()=>{if(!this.stateful)throw new sa("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ht([n,s])):this.states_=[Ht([n,this.cell.stateSize])];else if(e==null)te(this.states_),this.keptStates!=null&&(te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ht([n,s])):this.states_[0]=Ht([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):te(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!w.arraysEqual(r.shape,o))throw new q(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>An(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=rI(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Qt({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof kr){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return X(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=Ge(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new q(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=aI((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=l[0],u=l[1],d=l[2];this.stateful&&this.resetStates(d,s);let p=this.returnSequences?u:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return X(()=>{let t=Ht(e.shape);return t=we(t,[1,2]),t=ap(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?o1(t,[1,n]):t):this.cell.stateSize>1?[o1(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===oI.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=Ir(s,n);return new e(Object.assign(t,{cell:r}))}},oa=oI;oa.className="RNN";ce.registerClass(oa);var fp=class extends ot{},km=class extends fp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,bn(this.units,"units"),this.activation=qo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ft(e.kernelRegularizer),this.recurrentRegularizer=Ft(e.recurrentRegularizer),this.biasRegularizer=Ft(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=tc([1,Go([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=tc([1,Go([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{if(e=e,e.length!==2)throw new q(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xo({ones:()=>Ws(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xo({ones:()=>Ws(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=zr(L(e,a),this.kernel.read()):r=zr(e,this.kernel.read()),this.bias!=null&&(r=wr(r,this.bias.read())),o!=null&&(n=L(n,o));let i=ue(r,zr(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:jo(this.activation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:vt(this.kernelRegularizer),recurrentRegularizer:vt(this.recurrentRegularizer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};km.className="SimpleRNNCell";ce.registerClass(km);var Y1=class extends oa{constructor(e){e.cell=new km(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};Y1.className="SimpleRNN";ce.registerClass(Y1);var Im=class extends fp{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new q("GRUCell does not support reset_after parameter set to true.");this.units=e.units,bn(this.units,"units"),this.activation=qo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ft(e.kernelRegularizer),this.recurrentRegularizer=Ft(e.recurrentRegularizer),this.biasRegularizer=Ft(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=tc([1,Go([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=tc([1,Go([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{if(e=e,e.length!==2)throw new q(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xo({ones:()=>Ws(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xo({ones:()=>Ws(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=L(e,r[0]));let c=zr(e,this.kernel.read());this.useBias&&(c=wr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,a[0]));let u=this.recurrentKernel.read(),[d,p]=Jt(u,[2*this.units,this.units],u.rank-1),h=zr(s,d),[f,m,g]=Jt(c,3,c.rank-1),[y,x]=Jt(h,2,h.rank-1);o=this.recurrentActivation.apply(ue(f,y)),i=this.recurrentActivation.apply(ue(m,x));let A=zr(L(i,s),p);l=this.activation.apply(ue(g,A));let b=ue(L(o,s),L(ue(1,Lt(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:jo(this.activation),recurrentActivation:jo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:vt(this.kernelRegularizer),recurrentRegularizer:vt(this.recurrentRegularizer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Im.className="GRUCell";ce.registerClass(Im);var J1=class extends oa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Im(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};J1.className="GRU";ce.registerClass(J1);var mp=class extends fp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,bn(this.units,"units"),this.activation=qo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ft(e.kernelRegularizer),this.recurrentRegularizer=Ft(e.recurrentRegularizer),this.biasRegularizer=Ft(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=tc([1,Go([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=tc([1,Go([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=mt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends sr{apply(o,i){let l=r.apply([a]),c=new em().apply([a]),u=r.apply([a*2]);return Jw(Jw(l,c),u)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return X(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new q(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xo({ones:()=>Ws(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xo({ones:()=>Ws(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,c,u;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let d=zr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,o[0])),d=ue(d,zr(s,this.recurrentKernel.read())),this.useBias&&(d=wr(d,this.bias.read()));let[p,h,f,m]=Jt(d,4,d.rank-1);i=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(h),c=ue(L(l,r),L(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=L(u,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:jo(this.activation),recurrentActivation:jo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:vt(this.kernelRegularizer),recurrentRegularizer:vt(this.recurrentRegularizer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};mp.className="LSTMCell";ce.registerClass(mp);var Q1=class extends oa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mp(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Q1.className="LSTM";ce.registerClass(Q1);var Sm=class extends fp{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return X(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){m1(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{vl(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(Ir(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return g1(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}y1(t)}};Sm.className="StackedRNNCells";ce.registerClass(Sm);function Xo(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):ek(t(),n),i=()=>ip(o,t,s);return!r||r<=1?An(i().clone()):Array(r).fill(void 0).map(i).map(c=>An(c.clone()))}var iI=class extends oa{constructor(e){if(e.unroll)throw new Be("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Be("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Qt({ndim:5})]}call(e,t){return X(()=>{if(this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new q("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return X(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Ht(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){X(()=>{if(!this.stateful)throw new sa("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_=[Ht(r)];else if(e==null)te(this.states_),this.keptStates!=null&&(te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_[0]=Ht(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):te(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!w.arraysEqual(i.shape,l))throw new q(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>An(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],c=e[i?4:3],u=Cr(l,s[0],r,a[0],o[0]),d=Cr(c,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}};iI.className="ConvRNN2D";var Cm=class extends mp{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super({...e,units:t});this.filters=t,bn(this.filters,"filters"),this.kernelSize=ac(n,2,"kernelSize"),this.kernelSize.forEach(i=>bn(i,"kernelSize")),this.strides=ac(s||1,2,"strides"),this.strides.forEach(i=>bn(i,"strides")),this.padding=r||"valid",Us(this.padding),this.dataFormat=a||"channelsLast",jt(this.dataFormat),this.dilationRate=ac(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>bn(i,"dilationRate"))}build(e){var t;e=mt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;i=new(t=class extends sr{apply(u,d){let p=l.apply([c]),h=ws([c]),f=l.apply([c*2]);return a1([p,h,f])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return X(()=>{if(e.length!==3)throw new q(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xo({ones:()=>Ws(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(W,Q,ne)=>!Q||!Q[ne]?W:L(Q[ne],W),c=l(s,i,0),u=l(s,i,1),d=l(s,i,2),p=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xo({ones:()=>Ws(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=l(r,h,0),m=l(r,h,1),g=l(r,h,2),y=l(r,h,3),x=3,[A,b,v,C]=Jt(this.kernel.read(),o,x),[I,E,R,F]=this.useBias?Jt(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,A,I,this.padding),u=this.inputConv(u,b,E,this.padding),d=this.inputConv(d,v,R,this.padding),p=this.inputConv(p,C,F,this.padding);let[_,P,T,O]=Jt(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,_),m=this.recurrentConv(m,P),g=this.recurrentConv(g,T),y=this.recurrentConv(y,O);let G=this.recurrentActivation.apply(ue(c,f)),K=this.recurrentActivation.apply(ue(u,m)),z=ue(L(K,a),L(G,this.activation.apply(ue(d,g)))),j=L(this.recurrentActivation.apply(ue(p,y)),this.activation.apply(z));return[j,j,z]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=Mo(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?wr(r,n,this.dataFormat):r}recurrentConv(e,t){return Mo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Cm.className="ConvLSTM2DCell";ce.registerClass(Cm);var eA=class extends iI{constructor(e){let t=new Cm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};eA.className="ConvLSTM2D";ce.registerClass(eA);var Tm=class extends ot{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ge(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return ip(()=>ek(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Tm.className="Dropout";ce.registerClass(Tm);var tA=class extends Tm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};tA.className="SpatialDropout1D";ce.registerClass(tA);var nA=class extends ot{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,bn(this.units,"units"),this.activation=qo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cn(e.kernelConstraint),this.biasConstraint=cn(e.biasConstraint),this.kernelRegularizer=Ft(e.kernelRegularizer),this.biasRegularizer=Ft(e.biasRegularizer),this.activityRegularizer=Ft(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=mt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=mt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ge(e),s=Uw(this.activation.getClassName()),r;return s!=null?r=zr(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=zr(n,this.kernel.read()),this.bias!=null&&(r=wr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:jo(this.activation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:vt(this.kernelRegularizer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};nA.className="Dense";ce.registerClass(nA);var sA=class extends ot{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=mt(e);for(let t of e.slice(1))if(t==null)throw new q(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Uo(e,1)]}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ge(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=rt(n,s)}return cW(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};sA.className="Flatten";ce.registerClass(sA);var rA=class extends ot{constructor(e){super(e);this.supportsMasking=!0,this.activation=qo(e.activation)}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ge(e);return this.activation.apply(n)})}getConfig(){let e={activation:jo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};rA.className="Activation";ce.registerClass(rA);var aA=class extends ot{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return X(()=>(e=Ge(e),lW(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};aA.className="RepeatVector";ce.registerClass(aA);var oA=class extends ot{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new q("Can only specifiy one unknown dimension.");else r*=l}let o=Uo(e);if(a!==null){if(r===0||o%r!==0)throw new q(n);s[a]=o/r}else if(o!==r)throw new q(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ge(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return H(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};oA.className="Reshape";ce.registerClass(oA);var iA=class extends ot{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=vr(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qt({ndim:this.dims.length+1})]}computeOutputShape(e){e=mt(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return rt(Ge(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};iA.className="Permute";ce.registerClass(iA);var lA=class extends ot{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ge(e),s=-1;return vf(Ku(n,this.maskValue),s)}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ge(e),s=-1,r=!0,a=vf(Ku(n,this.maskValue),s,r);return L(n,ge(a,n.dtype))})}};lA.className="Masking";ce.registerClass(lA);var uA=class extends ot{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Nt(e.inputLength))}this.inputDim=e.inputDim,bn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,bn(this.outputDim,"outputDim"),this.embeddingsInitializer=$t(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ft(e.embeddingsRegularizer),this.activityRegularizer=Ft(e.activityRegularizer),this.embeddingsConstraint=cn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return X(()=>this.maskZero?(e=Ge(e),Ku(e,at(e))):null)}computeOutputShape(e){if(e=mt(e),this.inputLength==null)return[...e,this.outputDim];let t=Nt(this.inputLength);if(t.length!==e.length-1)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ge(e);n.dtype!=="int32"&&(n=Yf(n,"int32"));let s=Qw(this.embeddings.read(),H(n,[n.size]));return H(s,mt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Bt(this.embeddingsInitializer),embeddingsRegularizer:vt(this.embeddingsRegularizer),activityRegularizer:vt(this.activityRegularizer),embeddingsConstraint:un(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};uA.className="Embedding";ce.registerClass(uA);var Sl=class extends ot{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Be}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new q("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[mt(e)]),e=e,e.length<2)throw new q(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Vo(t),t.length>1)throw new q(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&Vo(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return X(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=Go(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=ap(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let c=i.shape,u=c[0],d=c.slice(1).concat([u]),p=H(i,[u].concat(Uo(c.slice(1))));p=rt(p,[1,0]),p=H(p,d),n.push(p),r=!0}else if(l>1){let c=vr(1,l).concat([0]);n.push(rt(i,c)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,c=i[l-1],u=[c].concat(i.slice(0,i.length-1));a=H(rt(H(a,[-1,c]),[1,0]),u)}else if(o>1){let i=[o-1].concat(vr(0,o-1));a=rt(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=Vo(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return X(()=>{if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an Array");if(!Array.isArray(e))throw new q("`inputs` should be an Array");if(t.length!==e.length)throw new q(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Yt(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=yr(n,t[s]);return n})}},cA=class extends Sl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return t})}};cA.className="Add";ce.registerClass(cA);var dA=class extends Sl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};dA.className="Multiply";ce.registerClass(dA);var pA=class extends Sl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return L(1/e.length,t)})}};pA.className="Average";ce.registerClass(pA);var hA=class extends Sl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ea(t,e[n]);return t})}};hA.className="Maximum";ce.registerClass(hA);var fA=class extends Sl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zd(t,e[n]);return t})}};fA.className="Minimum";ce.registerClass(fA);var mA=class extends Sl{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new q("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(w.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new q("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return X(()=>a1(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new q("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new q("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new q(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return X(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(ge(Ws(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Yt(t[a],-1)):s.push(t[a]);let r=St(s,this.axis);return cy(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};mA.className="Concatenate";ce.registerClass(mA);function gp(e,t){for(;e<0;)e+=t;return e}function HV(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Be("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Be("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return X(()=>{let o;if(s>r){o=s-r;let l=[];for(let c=0;c<o;++c)l.push(1);t=H(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let c=0;c<o;++c)l.push(1);e=H(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=we(L(e,t),a[0]):i=we(L(rt(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,c=a[1]===t.shape.length-1;i=qe(e,t,l,c)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let c=[];for(let u=l;u<l+o;++u)c.push(u);i=Ye(i,c)}return i.shape.length===1&&(i=Yt(i,1)),i})}var gA=class extends Sl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new q(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new q(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>gp(r,e[a].shape.length)):s=[gp(this.axes,t.shape.length),gp(this.axes,n.shape.length)],this.normalize&&(t=pm(t,s[0]),n=pm(n,s[1])),HV(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[gp(this.axes,e.length),gp(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};gA.className="Dot";ce.registerClass(gA);var yA=class extends ot{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ge(e);return ip(()=>ue(Qf(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};yA.className="GaussianNoise";ce.registerClass(yA);var AA=class extends ot{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ge(e);return this.rate>0&&this.rate<1?ip(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return L(n,Qf(n.shape,1,r))},()=>n,t.training||!1):n})}};AA.className="GaussianDropout";ce.registerClass(AA);var xA=class extends ot{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ge(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return X(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return ip(()=>{let r=Ge(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=pl(Zu(n),this.rate);l=Yf(l,"float32");let c=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-c*i*this.rate,d=ue(L(r,l),L(ue(l,-1),i));return ue(L(d,c),u)},()=>Ge(e),t.training||!1)}return e})}};xA.className="AlphaDropout";ce.registerClass(xA);function yp(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=Sv(e,t,n,s,r,a);else if(e.rank===3)o=Cv(e,t,n,s,r,a);else if(e.rank===4)o=Tv(e,t,n,s,r,a);else throw new Be(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function jV(e,t,n,s,r=.001){return X(()=>{let a=Df(e,s),o=a.mean,i=a.variance;return[yp(e,o,i,n,t,r),o,i]})}function qV(e,t,n,s,r=.001){return X(()=>{let a=Df(e,s),o=a.mean,i=a.variance,l=[];for(let f of vr(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let c=H(o,l),u=H(i,l),d=t==null?null:H(t,l),p=n==null?null:H(n,l);return[yp(e,c,u,p,d,r),o,i]})}function XV(e,t,n,s,r=.001){return w.arraysEqual(s.slice().sort(),vr(0,e.rank-1))?jV(e,t,n,s,r):qV(e,t,n,s,r)}var bA=class extends ot{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=$t(e.betaInitializer||"zeros"),this.gammaInitializer=$t(e.gammaInitializer||"ones"),this.movingMeanInitializer=$t(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=$t(e.movingVarianceInitializer||"ones"),this.betaConstraint=cn(e.betaConstraint),this.gammaConstraint=cn(e.gammaConstraint),this.betaRegularizer=Ft(e.betaRegularizer),this.gammaRegularizer=Ft(e.gammaRegularizer)}build(e){e=mt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new q(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Qt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return X(()=>{let n=t.training==null?!1:t.training,s=Ge(e),r=s.shape,a=r.length,o=vr(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=Al(1,a);l[i]=r[i];let c=o.slice();c.sort();let u=!w.arraysEqual(c,vr(0,a).slice(0,a-1)),d=()=>{if(u){let y=H(this.movingMean.read(),l),x=H(this.movingVariance.read(),l),A=this.center?H(this.beta.read(),l):null,b=this.scale?H(this.gamma.read(),l):null;return yp(s,y,x,A,b,this.epsilon)}else return yp(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[p,h,f]=XV(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(y,x,A)=>{X(()=>{let b=1-A,v=y.read(),C=L(pe(v,x),b);y.write(pe(v,C))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bt(this.betaInitializer),gammaInitializer:Bt(this.gammaInitializer),movingMeanInitializer:Bt(this.movingMeanInitializer),movingVarianceInitializer:Bt(this.movingVarianceInitializer),betaRegularizer:vt(this.betaRegularizer),gammaRegularizer:vt(this.gammaRegularizer),betaConstraint:un(this.betaConstraint),gammaConstraint:un(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};bA.className="BatchNormalization";ce.registerClass(bA);var vA=class extends ot{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=$t(e.betaInitializer||"zeros"),this.gammaInitializer=$t(e.gammaInitializer||"ones"),this.betaRegularizer=Ft(e.betaRegularizer),this.gammaRegularizer=Ft(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=mt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Vo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=Ge(e),s=n.shape,r=s.length;return X(()=>{let a=!0,{mean:o,variance:i}=Df(n,this.axis,a),l=Al(1,r);for(let f of this.axis)l[f]=s[f];let c=f=>f!=null&&f.shape.length!==r?H(f,l):f,u=c(this.gamma.read()),d=c(this.beta.read()),p=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(p.push(s[f]),h.push(1)):(p.push(1),h.push(s[f]));return o=Qs(o,p),i=Qs(i,p),u=Qs(u,h),d=Qs(d,h),yp(n,o,i,d,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bt(this.betaInitializer),gammaInitializer:Bt(this.gammaInitializer),betaRegularizer:vt(this.betaRegularizer),gammaRegularizer:vt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};vA.className="LayerNormalization";ce.registerClass(vA);function KV(e,t,n){return X(()=>{if(e.rank!==4)throw new q(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new q("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=xr()),n!=="channelsLast"&&n!=="channelsFirst")throw new q(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],er(e,s)})}var wA=class extends ot{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?xr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new q(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new q(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new q(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){e=mt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return X(()=>KV(Ge(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};wA.className="ZeroPadding2D";ce.registerClass(wA);function Nm(e,t,n,s,r,a){return X(()=>{jt(r),qw(a),Us(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=xr()),a==null&&(a="max"),e=V1(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=_f(e,t,n,i):o=kf(e,t,n,i),r==="channelsFirst"&&(o=rt(o,[0,3,1,2])),o})}function lI(e,t,n,s,r,a){return X(()=>{jt(r),qw(a),Us(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=xr()),a==null&&(a="max"),e=Jk(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=Ty(e,t,n,i):o=hy(e,t,n,i),r==="channelsFirst"&&(o=rt(o,[0,4,1,2,3])),o})}var uI=class extends ot{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new q(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(bn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new q(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);bn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Us(this.padding),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(e){e=mt(e);let t=Cr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return X(()=>{this.invokeCallHook(e,t),e=ap(Ge(e),2);let n=this.poolingFunction(Ge(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ye(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},kA=class extends uI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),Us(s),Nm(e,t,n,s,r,"max")}};kA.className="MaxPooling1D";ce.registerClass(kA);var IA=class extends uI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),Us(s),Nm(e,t,n,s,r,"avg")}};IA.className="AveragePooling1D";ce.registerClass(IA);var cI=class extends ot{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new q(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];bn(this.poolSize,"poolSize"),bn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),Us(this.padding),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Cr(t,this.poolSize[0],this.padding,this.strides[0]),n=Cr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return X(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ge(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},SA=class extends cI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),Us(s),Nm(e,t,n,s,r,"max")}};SA.className="MaxPooling2D";ce.registerClass(SA);var CA=class extends cI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),Us(s),Nm(e,t,n,s,r,"avg")}};CA.className="AveragePooling2D";ce.registerClass(CA);var dI=class extends ot{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new q(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];bn(this.poolSize,"poolSize"),bn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),Us(this.padding),this.inputSpec=[new Qt({ndim:5})]}computeOutputShape(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Cr(t,this.poolSize[0],this.padding,this.strides[0]),n=Cr(n,this.poolSize[1],this.padding,this.strides[1]),s=Cr(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return X(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ge(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},TA=class extends dI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),Us(s),lI(e,t,n,s,r,"max")}};TA.className="MaxPooling3D";ce.registerClass(TA);var NA=class extends dI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),Us(s),lI(e,t,n,s,r,"avg")}};NA.className="AveragePooling3D";ce.registerClass(NA);var pI=class extends ot{constructor(e){super(e);this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Be}},EA=class extends pI{constructor(e){super(e||{})}call(e,t){return X(()=>{let n=Ge(e);return Gt(n,1)})}};EA.className="GlobalAveragePooling1D";ce.registerClass(EA);var RA=class extends pI{constructor(e){super(e||{})}call(e,t){return X(()=>{let n=Ge(e);return xn(n,1)})}};RA.className="GlobalMaxPooling1D";ce.registerClass(RA);var hI=class extends ot{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Be}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},_A=class extends hI{call(e,t){return X(()=>{let n=Ge(e);return this.dataFormat==="channelsLast"?Gt(n,[1,2]):Gt(n,[2,3])})}};_A.className="GlobalAveragePooling2D";ce.registerClass(_A);var DA=class extends hI{call(e,t){return X(()=>{let n=Ge(e);return this.dataFormat==="channelsLast"?xn(n,[1,2]):xn(n,[2,3])})}};DA.className="GlobalMaxPooling2D";ce.registerClass(DA);var fI=class extends ot{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=Ir(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},PA=class extends fI{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=mt(e),e.length<3)throw new q(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=mt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return X(()=>(e=Ge(e),aI((a,o)=>[Ge(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};PA.className="TimeDistributed";ce.registerClass(PA);function ZV(e){bl(sW,"BidirectionalMergeMode",e)}var YV="concat",$A=class extends fI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ir(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Ir(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?YV:e.mergeMode,ZV(this.mergeMode),e.weights)throw new Be("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):us(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=rI(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new q("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(u=>new Qt({shape:u.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),o.push(...c)}if(s!=null)throw new Be("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof kr;for(let l of a)if(l instanceof kr!==i)throw new q("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return X(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Vs(r,1));let o;return this.mergeMode==="concat"?o=a1([s,r]):this.mergeMode==="sum"?o=ue(s,r):this.mergeMode==="ave"?o=L(.5,ue(s,r)):this.mergeMode==="mul"?o=L(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){vl(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),vl(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Ir(t.layer);if(delete t.layer,t.numConstants!=null)throw new Be("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};$A.className="Bidirectional";ce.registerClass($A);function JV(e){return new nc(e)}function QV(e){return new L1(e)}function eU(e){return new O1(e)}function tU(e){return new M1(e)}function nU(e){return new z1(e)}function sU(e){return new W1(e)}function rU(e){return new B1(e)}function aU(e){return new q1(e)}function oU(e){return new vm(e)}function iU(e){return new G1(e)}function lU(e){return new wm(e)}function uU(e){return new H1(e)}function cU(e){return new j1(e)}function dU(e){return new X1(e)}function pU(e){return new K1(e)}function hU(e){return new Z1(e)}function fU(e){return new rA(e)}function mU(e){return new nA(e)}function gU(e){return new Tm(e)}function yU(e){return new tA(e)}function AU(e){return new sA(e)}function xU(e){return new aA(e)}function bU(e){return new oA(e)}function vU(e){return new iA(e)}function wU(e){return new uA(e)}function kU(e){return new cA(e)}function IU(e){return new pA(e)}function SU(e){return new mA(e)}function CU(e){return new hA(e)}function TU(e){return new fA(e)}function NU(e){return new dA(e)}function EU(e){return new gA(e)}function RU(e){return new bA(e)}function _U(e){return new vA(e)}function DU(e){return new wA(e)}function FA(e){return new IA(e)}function PU(e){return FA(e)}function $U(e){return FA(e)}function OA(e){return new CA(e)}function FU(e){return OA(e)}function OU(e){return OA(e)}function MA(e){return new NA(e)}function MU(e){return MA(e)}function zU(e){return MA(e)}function LU(e){return new EA(e)}function BU(e){return new _A(e)}function mI(e){return new RA(e)}function gI(e){return new DA(e)}function yI(e){return new kA(e)}function AI(e){return new SA(e)}function WU(e){return new TA(e)}function VU(e){return new J1(e)}function UU(e){return new Im(e)}function GU(e){return new Q1(e)}function HU(e){return new mp(e)}function jU(e){return new Y1(e)}function qU(e){return new km(e)}function XU(e){return new eA(e)}function KU(e){return new Cm(e)}function ZU(e){return new oa(e)}function YU(e){return new Sm(e)}function JU(e){return new $A(e)}function QU(e){return new PA(e)}var eG=mI,tG=gI,nG=yI,sG=AI;function rG(e){return new yA(e)}function aG(e){return new AA(e)}function oG(e){return new xA(e)}function iG(e){return new lA(e)}var xI={};Me(xI,{MAPE:()=>AG,MSE:()=>vG,binaryAccuracy:()=>lG,binaryCrossentropy:()=>uG,categoricalAccuracy:()=>dG,categoricalCrossentropy:()=>pG,cosineProximity:()=>mG,mape:()=>xG,meanAbsoluteError:()=>gG,meanAbsolutePercentageError:()=>yG,meanSquaredError:()=>bG,mse:()=>wG,precision:()=>hG,recall:()=>fG,sparseCategoricalAccuracy:()=>cG});function lG(e,t){return v1(e,t)}function uG(e,t){return yk(e,t)}function cG(e,t){return Ak(e,t)}function dG(e,t){return w1(e,t)}function pG(e,t){return k1(e,t)}function hG(e,t){return gk(e,t)}function fG(e,t){return JW(e,t)}function mG(e,t){return x1(e,t)}function gG(e,t){return hm(e,t)}function yG(e,t){return rc(e,t)}function AG(e,t){return rc(e,t)}function xG(e,t){return rc(e,t)}function bG(e,t){return kl(e,t)}function vG(e,t){return kl(e,t)}function wG(e,t){return kl(e,t)}var bI={};Me(bI,{modelFromJSON:()=>DV});var vI={};Me(vI,{l1:()=>IG,l1l2:()=>kG,l2:()=>SG});function kG(e){return new pp(e)}function IG(e){return BV(e)}function SG(e){return WV(e)}var wI=class extends sc{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof aa))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Em(e,t){return e<t}function kI(e,t){return e>t}var II=class extends wI{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Be("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Em:this.mode==="max"?this.monitorFunc=kI:this.monitor.indexOf("acc")!==-1?this.monitorFunc=kI:this.monitorFunc=Em,this.monitorFunc===Em&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Em?1/0:-1/0}async onEpochEnd(e,t){await Ho(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function CG(e){return new II(e)}var TG={earlyStopping:CG},NG=Y();NG.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Tr=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(Tr||{}),SI;(e=>{let t;(n=>{n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(SI||(SI={}));var zA={};function EG(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};zA[e]=n}function CI(e){return zA[e]}function RG(e){delete zA[e]}function k(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return Hn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(p=>Hn(p,n,s,r));let c=Hn(t.inputNames.slice(i)[0],n,s,r),u=c.dataSync();return a.type==="number"?u[0]:w.toNestedArray(c.shape,u)}let o=t.attrParams[e];return o&&o.value}function Hn(e,t,n,s){let[r,a]=ks(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[Rm(r,i)]);return o!==void 0?t[Rm(r,o)][a]:void 0}function _G(e,t,n){return t[Rm(e,n.currentContextId)]}function Vr(e,t){let[n,s,r]=ks(e);return[Rm(n,t&&t.currentContextId),s,r]}function Rm(e,t){return t?`${e}-${t}`:e}function ks(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function _m(e,t,n){let s=k("pad",e,t,n);if(s==="explicit"){s=k("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function ia(e){return e.kept?e:Vn(e)}var TI={};Me(TI,{json:()=>DG});var DG=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],NI={};Me(NI,{json:()=>PG});var PG=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],EI={};Me(EI,{json:()=>$G});var $G=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],RI={};Me(RI,{json:()=>FG});var FG=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],_I={};Me(_I,{json:()=>OG});var OG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],DI={};Me(DI,{json:()=>MG});var MG=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],PI={};Me(PI,{json:()=>zG});var zG=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],$I={};Me($I,{json:()=>LG});var LG=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],FI={};Me(FI,{json:()=>BG});var BG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],OI={};Me(OI,{json:()=>WG});var WG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],MI={};Me(MI,{json:()=>VG});var VG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],zI={};Me(zI,{json:()=>UG});var UG=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],LI={};Me(LI,{json:()=>GG});var GG=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],BI={};Me(BI,{json:()=>HG});var HG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],WI={};Me(WI,{json:()=>jG});var jG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],VI={};Me(VI,{json:()=>qG});var qG=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],UI={};Me(UI,{json:()=>XG});var XG=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],GI={};Me(GI,{json:()=>KG});var KG=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],HI={};Me(HI,{json:()=>ZG});var ZG=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],jI=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[TI,NI,EI,RI,_I,DI,PI,$I,FI,OI,MI,zI,LI,BI,WI,VI,UI,GI,HI],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],c={},u={};t!=null&&(c=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let d=Object.keys(o);d.forEach(f=>{let m=o[f];m.inputNames.forEach((g,y)=>{let[x,,A]=Vr(g),b=o[x];if(b.outputs!=null){let v=b.outputs.indexOf(A);if(v!==-1){let C=`${x}:${v}`;m.inputNames[y]=C}}m.inputs.push(b),b.children.push(m)})}),Object.keys(u).length===0?d.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(u).forEach(f=>{let[m]=Vr(f),g=o[m];g!=null&&(g.signatureKey=u[f],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(f=>{let[m]=Vr(f),g=o[m];g&&(g.signatureKey=c[f],i.push(g))}):i=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=CI(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.substr(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=LA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=LA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=qA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=qA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=WA(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=WA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=jA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=jA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=BA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=BA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=KA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=KA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=HA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=HA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=XA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=XA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=UA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=UA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=GA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=GA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=XI(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=XI(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&s.push(u[d.name]),u),{}));let a=[],o=[];e.signature.inputArg.forEach(u=>{let[d]=Vr(u.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:VA(u.type),type:"dtype"}},children:[]};p.signatureKey=u.name,a.push(p),r[d]=p}),Object.keys(r).forEach(u=>{let d=r[u];d.inputNames.forEach((p,h)=>{let[f,,m]=Vr(p),g=r[f];if(g.outputs!=null){let y=g.outputs.indexOf(m);if(y!==-1){let x=`${f}:${y}`;d.inputNames[h]=x}}d.inputs.push(g),g.children.push(d)})});let l=e.ret;e.signature.outputArg.forEach(u=>{let[d,p]=Vr(l[u.name]),h=r[d];h!=null&&(h.defaultOutput=p,o.push(h))});let c=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function YG(e){let t=Y().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function qI(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):YG(e);return t?n:n.toLowerCase()}function LA(e,t,n,s=!1){let r=e[t];return r!=null?qI(r.s,s):n}function BA(e,t,n){let s=e[t];return s?s.b:n}function WA(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function VA(e){switch(typeof e=="string"&&(e=Tr[e]),e){case Tr.DT_FLOAT:case Tr.DT_HALF:return"float32";case Tr.DT_INT32:case Tr.DT_INT64:case Tr.DT_INT8:case Tr.DT_UINT8:return"int32";case Tr.DT_BOOL:return"bool";case Tr.DT_DOUBLE:return"float32";case Tr.DT_STRING:return"string";default:return null}}function XI(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function UA(e,t,n){let s=e[t];return s&&s.type?VA(s.type):n}function GA(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>VA(r)):n}function KI(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function HA(e,t,n){let s=e[t];return s&&s.shape?KI(s.shape):n}function jA(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function qA(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>qI(a,s)):n}function XA(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>KI(r)):n}function KA(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var JG=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return Hn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Hn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return WA(this.node.rawAttrs,e,t);if(n.s!=null)return LA(this.node.rawAttrs,e,t);if(n.b!=null)return BA(this.node.rawAttrs,e,t);if(n.shape!=null)return HA(this.node.rawAttrs,e,t);if(n.type!=null)return UA(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return jA(this.node.rawAttrs,e,t);if(n.list.s!=null)return qA(this.node.rawAttrs,e,t);if(n.list.shape!=null)return XA(this.node.rawAttrs,e,t);if(n.list.b!=null)return KA(this.node.rawAttrs,e,t);if(n.list.type!=null)return GA(this.node.rawAttrs,e,t)}return t}},QG=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ue(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[bf(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[Xu(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[L(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[de(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[zv(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[Gd(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[pe(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[Zd(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[ea(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[Lo(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[Ly(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eH=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[an(k("x",e,t,n))];case"Acos":return[fv(k("x",e,t,n))];case"Acosh":return[mv(k("x",e,t,n))];case"Asin":return[yv(k("x",e,t,n))];case"Asinh":return[Av(k("x",e,t,n))];case"Atan":return[xv(k("x",e,t,n))];case"Atan2":return[bv(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[vv(k("x",e,t,n))];case"Ceil":return[Ev(k("x",e,t,n))];case"Complex":return[Do(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[Sf(k("x",e,t,n))];case"Cosh":return[xy(k("x",e,t,n))];case"Elu":return[Xd(k("x",e,t,n))];case"Erf":return[Bv(k("x",e,t,n))];case"Exp":return[Ls(k("x",e,t,n))];case"Expm1":return[Wv(k("x",e,t,n))];case"Floor":return[Kd(k("x",e,t,n))];case"Log":return[Bs(k("x",e,t,n))];case"Log1p":return[Nf(k("x",e,t,n))];case"Imag":return[Cf(k("x",e,t,n))];case"Neg":return[Lt(k("x",e,t,n))];case"Reciprocal":return[ew(k("x",e,t,n))];case"Real":return[Yd(k("x",e,t,n))];case"Relu":return[Or(k("x",e,t,n))];case"Round":return[Dy(k("x",e,t,n))];case"Selu":return[$y(k("x",e,t,n))];case"Sigmoid":return[Pn(k("x",e,t,n))];case"Sin":return[Fy(k("x",e,t,n))];case"Sign":return[sw(k("x",e,t,n))];case"Sinh":return[Oy(k("x",e,t,n))];case"Softplus":return[qu(k("x",e,t,n))];case"Sqrt":return[$n(k("x",e,t,n))];case"Square":return[bt(k("x",e,t,n))];case"Tanh":return[Vu(k("x",e,t,n))];case"Tan":return[aw(k("x",e,t,n))];case"ClipByValue":return[bs(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[_y(k("x",e,t,n))];case"Rsqrt":return[Py(Hn(e.inputNames[0],t,n))];case"Prod":return[Ny(k("x",e,t,n),k("axes",e,t,n))];case"LeakyRelu":return[Tf(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[$f(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[Vv(Hn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function rr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];w.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function ZI(e){return!(typeof e=="number"||e.some(t=>t<0))}function Ap(e,t,n){let s=ZA(e,n),r=!ZI(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=ZA(a.shape,s)}),!ZI(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function ZA(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var tH=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Te(0),An(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),rr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,An(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return ht([],[0].concat(this.elementShape));let n=this.readMany(e);return rr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),on(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return ht([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return rr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),St(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,is(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];X(()=>{t=H(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],c=[0,l,0],u=[1,e[i],r];a[i]=H(Fe(t,c,u),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},xp=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);rr(t,r.shape,"TensorList shape mismatch: "),An(r)}),this.idTensor=Te(0),this.maxNumElements=s,An(this.idTensor)}get id(){return this.idTensor.id}copy(){return new xp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);rr(e,this.elementShape,"TensorList shape mismatch: ");let s=Ap(this.elementShape,this.tensors,e);return X(()=>{let r=this.tensors.map(a=>H(a,s));return on(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Ap(this.elementShape,this.tensors,e),s=this.tensors.pop();return rr(s.shape,e,"TensorList shape mismatch: "),H(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(rr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");An(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);rr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=Ap(this.elementShape,this.tensors,t);return H(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);rr(this.elementShape,t.shape,"TensorList shape mismatch: "),An(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);rr(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=Ap(this.elementShape,this.tensors,n);return e.length===0?ht([],[0].concat(s)):X(()=>{let r=e.map(a=>H(this.tensors[a],s));return on(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);rr(this.elementShape,t,"TensorList shape mismatch: ");let n=Ap(this.elementShape,this.tensors,t);return this.size()===0?ht([],[0].concat(n)):X(()=>{let s=this.tensors.map(r=>H(r,n));return St(s,0)})}};function nH(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);rr(r,t,"TensorList shape mismatch: ");let a=is(e);return new xp(a,t,s)}function sH(e,t,n){return new xp([],e,t,n)}function rH(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new xp([],n,e.dtype,s),o=is(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function aH(e,t,n){let s=0,r=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=ZA(a,n),i=s===0?0:e.size/s,l=X(()=>{let u=[];e=H(e,[1,s,i]);for(let d=0;d<t.length;++d){let p=d===0?0:r[d-1],h=[0,p,0],f=[1,t[d],i];u[d]=H(Fe(e,h,f),o)}return e.dispose(),u}),c=new xp([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}var oH=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=k("thenBranch",e,t,n),r=k("elseBranch",e,t,n),a=k("cond",e,t,n),o=k("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=k("body",e,t,n),r=k("cond",e,t,n),a=k("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(u=>u.id),l=await o[0].data();o.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let c=a;for(;l[0];){let u=c;c=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let d=c.map(h=>h.id);u.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});let p=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await p[0].data(),p.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{let s=k("pred",e,t,n);return[ia(s)]}case"Switch":{let s=k("pred",e,t,n),r=k("data",e,t,n);return r.kept||(r=ia(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>Hn(r,t,n)!==void 0);if(s){let r=Hn(s,t,n);return[ia(r)]}return}case"Enter":{let s=k("frameName",e,t,n),r=k("tensor",e,t,n);return n.enterFrame(s),[ia(r)]}case"Exit":{let s=k("tensor",e,t,n);return n.exitFrame(),[ia(s)]}case"NextIteration":{let s=k("tensor",e,t,n);return n.nextIteration(),[ia(s)]}case"TensorArrayV3":{let s=k("size",e,t,n),r=k("dtype",e,t,n),a=k("elementShape",e,t,n),o=k("dynamicSize",e,t,n),i=k("clearAfterRead",e,t,n),l=k("identicalElementShapes",e,t,n),c=k("name",e,t,n),u=new tH(c,r,s,a,l,o,i);return n.addTensorArray(u),[u.idTensor,Te(1)]}case"TensorArrayWriteV3":{let s=k("tensorArrayId",e,t,n),r=k("index",e,t,n),a=k("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=k("tensorArrayId",e,t,n),r=k("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=k("tensorArrayId",e,t,n),r=k("indices",e,t,n),a=k("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=k("tensorArrayId",e,t,n),r=k("indices",e,t,n),a=k("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=k("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=k("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=k("tensorArrayId",e,t,n),r=k("tensor",e,t,n),a=k("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=k("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Te(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=k("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=k("tensorListId",e,t,n),r=k("index",e,t,n),a=k("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=k("tensorListId",e,t,n),r=k("index",e,t,n),a=k("elementShape",e,t,n),o=k("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=k("indices",e,t,n),r=k("tensor",e,t,n),a=k("elementShape",e,t,n),o=k("numElements",e,t,n),i=rH(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=k("elementShape",e,t,n),r=k("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=k(a,e,t,n),i=sH(s,r,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let s=k("tensorListId",e,t,n),r=k("indices",e,t,n),a=k("elementShape",e,t,n),o=k("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=k("tensorListId",e,t,n),r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),o=k("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=k("tensor",e,t,n),r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),o=nH(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let s=k("tensorListId",e,t,n),r=n.getTensorList(s.id),a=k("dtype",e,t,n),o=k("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=k("tensorListId",e,t,n),r=k("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=k("tensorListId",e,t,n),r=k("elementShape",e,t,n),a=k("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=k("tensor",e,t,n),r=k("elementShape",e,t,n),a=k("lengths",e,t,n),o=aH(s,a,r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function YI(e,t,n){let[s,r]=k("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",c=k("numArgs",e,t,n);if(a){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=k("strides",e,t,n),d=_m(e,t,n),p=k("dataFormat",e,t,n).toUpperCase(),h=k("dilations",e,t,n),[f,m]=k("args",e,t,n);o&&(m=f,f=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:u,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var iH=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=k("stride",e,t,n),r=k("pad",e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[my(k("x",e,t,n),k("filter",e,t,n),s,r,a,o)]}case"Conv2D":{let s=k("strides",e,t,n),r=_m(e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[Mo(k("x",e,t,n),k("filter",e,t,n),[s[1],s[2]],r,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=YI(e,t,n);return[Bo.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=YI(e,t,n);return[Bo.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=k("outputShape",e,t,n),r=k("strides",e,t,n),a=_m(e,t,n);return[yy(k("x",e,t,n),k("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=k("strides",e,t,n),r=_m(e,t,n),a=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[qd(k("input",e,t,n),k("filter",e,t,n),[s[1],s[2]],r,o,[a[1],a[2]])]}case"Conv3D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[Ay(k("x",e,t,n),k("filter",e,t,n),[s[1],s[2],s[3]],r,a,[o[1],o[2],o[3]])]}case"AvgPool":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[kf(k("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[_f(k("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:i,indexes:l}=Zv(k("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,o);return[i,l]}case"AvgPool3D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[hy(k("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[Ty(k("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("dilations",e,t,n),o=s[1],i=s[2],l=a[1],c=a[2];return[Mv(k("x",e,t,n),k("filter",e,t,n),[o,i],r,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},lH=(e,t,n)=>{switch(e.op){case"Fill":{let s=k("shape",e,t,n),r=k("dtype",e,t,n),a=k("value",e,t,n);return[Hu(s,a,r)]}case"LinSpace":{let s=k("start",e,t,n),r=k("stop",e,t,n),a=k("num",e,t,n);return[Uv(s,r,a)]}case"Multinomial":{let s=k("logits",e,t,n),r=k("numSamples",e,t,n),a=k("seed",e,t,n);return[Jv(s,r,a)]}case"OneHot":{let s=k("indices",e,t,n),r=k("depth",e,t,n),a=k("onValue",e,t,n),o=k("offValue",e,t,n);return[Ud(s,r,a,o)]}case"Ones":return[ws(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[Ws(k("x",e,t,n))];case"RandomUniform":return[Zu(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"Range":{let s=k("start",e,t,n),r=k("stop",e,t,n),a=k("step",e,t,n);return[Yu(s,r,a,k("dtype",e,t,n))]}case"TruncatedNormal":{let s=k("shape",e,t,n),r=k("mean",e,t,n),a=k("stdDev",e,t,n),o=k("seed",e,t,n);return[zf(s,r,a,k("dtype",e,t,n),o)]}case"Zeros":return[Ht(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[at(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function YA(e,t,n){let s=k("boxes",e,t,n),r=k("scores",e,t,n),a=k("maxOutputSize",e,t,n),o=k("iouThreshold",e,t,n),i=k("scoreThreshold",e,t,n),l=k("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var uH=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=YA(e,t,n),c=await Ie.nonMaxSuppressionWithScoreAsync(s,r,a,o,i,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=YA(e,t,n),l=k("padToMaxOutputSize",e,t,n),c=await Ie.nonMaxSuppressionPaddedAsync(s,r,a,o,i,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=YA(e,t,n);return[await Ie.nonMaxSuppressionAsync(s,r,a,o,i)]}case"Where":{let s=ge(k("condition",e,t,n),"bool"),r=[await Wy(s)];return s.dispose(),r}case"ListDiff":return nw(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},cH=(e,t,n)=>{switch(e.op){case"TopKV2":{let s=k("x",e,t,n),r=k("k",e,t,n),a=k("sorted",e,t,n),o=ow(s,r,a);return[o.values,o.indices]}case"Unique":{let s=k("x",e,t,n),r=By(s);return[r.values,r.indices]}case"UniqueV2":{let s=k("x",e,t,n),r=k("axis",e,t,n),a=By(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},dH=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=k("default",e,t,n);return[Hn(e.name,t,n)||s];case"Placeholder":return[Hn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=k("x",e,t,n);return[ia(c)]}case"IdentityN":return k("x",e,t,n).map(c=>ia(c));case"Snapshot":let r=k("x",e,t,n);return[ia(r)];case"Shape":return[Tt(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(c=>Tt(c.shape));case"Size":return[Te(k("x",e,t,n).size,"int32")];case"Rank":return[Te(k("x",e,t,n).rank,"int32")];case"NoOp":return[Te(1)];case"Print":let a=k("x",e,t,n),o=k("data",e,t,n),i=k("message",e,t,n),l=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},pH=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Te(0),this.tensorMap=new Map,An(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Te(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),X(()=>{let s=is(t),r=n.length,a=s.length;w.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];An(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return X(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return on(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},hH=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=k("keyDType",e,t,n),a=k("valueDType",e,t,n),o=new pH(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=k("tableHandle",e,t,n,s),a=k("keys",e,t,n),o=k("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=k("tableHandle",e,t,n,s),a=k("keys",e,t,n),o=k("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=k("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},fH=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=k("images",e,t,n),r=k("size",e,t,n),a=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[Ie.resizeBilinear(s,[r[0],r[1]],a,o)]}case"ResizeNearestNeighbor":{let s=k("images",e,t,n),r=k("size",e,t,n),a=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[Ie.resizeNearestNeighbor(s,[r[0],r[1]],a,o)]}case"CropAndResize":{let s=k("image",e,t,n),r=k("boxes",e,t,n),a=k("boxInd",e,t,n),o=k("cropSize",e,t,n),i=k("method",e,t,n),l=k("extrapolationValue",e,t,n);return[Ie.cropAndResize(s,r,a,o,i,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},mH=(e,t,n)=>{switch(e.op){case"Equal":return[zs(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[Ku(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[vs(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[pl(k("a",e,t,n),k("b",e,t,n))];case"Less":return[wy(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[hl(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[yr(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[Rf(k("a",e,t,n))];case"LogicalOr":return[Cy(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[Gn(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},gH=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[qe(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[Lv(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[rt(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[s,r]=k("fusedOps",e,t,n),a=s==="biasadd",o=r==="prelu",i=k("numArgs",e,t,n),l=k("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,u]=k("args",e,t,n);return[Bo.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},yH=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Uu(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[Uu(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[Gv(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[Ju(k("x",e,t,n))];case"LogSoftmax":return[ky(k("x",e,t,n))];case"SparseToDense":return[Uy(k("sparseIndices",e,t,n),k("outputShape",e,t,n),k("sparseValues",e,t,n),k("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},AH=(e,t,n)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[xn(k("x",e,t,n),o,i)]}case"Mean":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Gt(k("x",e,t,n),o,i)]}case"Min":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[zo(k("x",e,t,n),o,i)]}case"Sum":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[we(k("x",e,t,n),o,i)]}case"All":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[cy(k("x",e,t,n),o,i)]}case"Any":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[vf(k("x",e,t,n),o,i)]}case"ArgMax":{let o=k("axis",e,t,n);return[Ms(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[gv(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Ny(k("x",e,t,n),o,i)]}case"Cumsum":{let o=k("axis",e,t,n),i=k("exclusive",e,t,n),l=k("reverse",e,t,n);return[by(k("x",e,t,n),o,i,l)]}case"Bincount":let s=k("x",e,t,n),r=k("weights",e,t,n),a=k("size",e,t,n);return[fy(s,r,a)];case"DenseBincount":{let o=k("x",e,t,n),i=k("weights",e,t,n),l=k("size",e,t,n),c=k("binaryOutput",e,t,n);return[Fv(o,i,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},xH=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=k("n",e,t,n),r=k("axis",e,t,n),a=k("tensors",e,t,n);return a=a.slice(0,s),[St(a,r)]}case"Gather":{let s=k("x",e,t,n),r=k("indices",e,t,n);return[ju(s,ge(r,"int32"),0)]}case"GatherV2":{let s=k("axis",e,t,n),r=k("batchDims",e,t,n),a=k("x",e,t,n),o=k("indices",e,t,n);return[ju(a,ge(o,"int32"),s,r)]}case"Reverse":{let s=k("dims",e,t,n),r=[];for(let o=0;o<s.length;o++)s[o]&&r.push(o);let a=k("x",e,t,n);return[Vs(a,r)]}case"ReverseV2":{let s=k("axis",e,t,n),r=k("x",e,t,n);return[Vs(r,s)]}case"Slice":{let s=k("begin",e,t,n),r=k("size",e,t,n);return[Fe(k("x",e,t,n),s,r)]}case"StridedSlice":{let s=k("begin",e,t,n),r=k("end",e,t,n),a=k("strides",e,t,n),o=k("beginMask",e,t,n),i=k("endMask",e,t,n),l=k("ellipsisMask",e,t,n),c=k("newAxisMask",e,t,n),u=k("shrinkAxisMask",e,t,n),d=k("x",e,t,n);return[rw(d,s,r,a,o,i,l,c,u)]}case"Pack":return X(()=>{let s=k("axis",e,t,n),r=k("tensors",e,t,n),a=r[0].shape,o=Ye(r[0]).shape,i=r.map(l=>{let c=w.arraysEqual(l.shape,a);if(!c&&!w.arraysEqual(Ye(l).shape,o))throw new Error("the input tensors shape does not match");return c?l:H(l,a)});return[on(i,s)]});case"Unpack":{let s=k("axis",e,t,n),r=k("tensor",e,t,n);return is(r,s)}case"Tile":{let s=k("reps",e,t,n);return[Qs(k("x",e,t,n),s)]}case"Split":case"SplitV":{let s=k("axis",e,t,n),r=k("numOrSizeSplits",e,t,n),a=k("x",e,t,n);return Jt(a,r,s)}case"ScatterNd":{let s=k("indices",e,t,n),r=k("values",e,t,n),a=k("shape",e,t,n);return[dw(s,r,a)]}case"GatherNd":{let s=k("x",e,t,n),r=k("indices",e,t,n);return[pw(s,r)]}case"SparseToDense":{let s=k("sparseIndices",e,t,n),r=k("outputShape",e,t,n),a=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[Uy(s,a,r,a.dtype===o.dtype?o:ge(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},bH=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:o}=ep.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[s,r,a,o]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=ep.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[ep.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[ep.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vH=(e,t,n)=>{switch(e.op){case"FFT":return[Of(k("x",e,t,n))];case"IFFT":return[Jd(k("x",e,t,n))];case"RFFT":return[Mf(k("x",e,t,n))];case"IRFFT":return[zy(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wH=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=Uf.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=Uf.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[Uf.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},kH=(e,t,n)=>{switch(e.op){case"Cast":return[ge(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let s=k("axis",e,t,n);return[Yt(k("x",e,t,n),s)]}case"Squeeze":{let s=k("axis",e,t,n);return[Ye(k("x",e,t,n),s)]}case"Reshape":return[H(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[Yv(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[er(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let s=k("blockShape",e,t,n),r=k("paddings",e,t,n);return[Pf(k("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=k("blockShape",e,t,n),r=k("crops",e,t,n);return[If(k("x",e,t,n),s,r)]}case"DepthToSpace":{let s=k("blockSize",e,t,n),r=k("dataFormat",e,t,n).toUpperCase();return[Ov(k("x",e,t,n),s,r)]}case"BroadcastTo":return[jd(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[Nv(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function JI(e,t,n,s){let r=((a,o,i)=>{switch(a.category){case"arithmetic":return X(()=>QG(a,o,i));case"basic_math":return X(()=>eH(a,o,i));case"control":return oH(a,o,i);case"convolution":return X(()=>iH(a,o,i));case"creation":return X(()=>lH(a,o,i));case"dynamic":return uH(a,o,i);case"evaluation":return X(()=>cH(a,o,i));case"image":return X(()=>fH(a,o,i));case"graph":return X(()=>dH(a,o,i));case"logical":return X(()=>mH(a,o,i));case"matrices":return X(()=>gH(a,o,i));case"normalization":return X(()=>yH(a,o,i));case"reduction":return X(()=>AH(a,o,i));case"slice_join":return X(()=>xH(a,o,i));case"sparse":return X(()=>bH(a,o,i));case"spectral":return X(()=>vH(a,o,i));case"string":return X(()=>wH(a,o,i));case"transformation":return X(()=>kH(a,o,i));case"hash_table":return hH(a,o,i,s);case"custom":let l=CI(a.op);if(l&&l.customExecutor)return l.customExecutor(new JG(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var QI=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function eS(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,c=Object.keys(e).map(p=>ks(p)[0]),u=[];s!=null&&(u=s.map(p=>ks(p.name)[0]));let d=[...t];for(;d.length>0;){let p=d.pop();if((tS(p)||NH(p)||EH(p))&&o==null&&(o=p,i=o.children.map(h=>h.name).filter(h=>r.has(h))),r.add(p.name),n[p.name]==null&&c.indexOf(p.name)===-1&&u.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),d.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function IH(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(u=>ks(u)[0]).map(u=>e.nodes[u]),i=e.initNodes;o.forEach(u=>{s.has(u.name)&&a.push(u)}),e.weights.forEach(u=>{s.has(u.name)&&a.push(u)}),i!=null&&i.forEach(u=>{s.has(u.name)&&a.push(u)});let l=new Set,c=[];for(;a.length>0;){let u=a.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(d=>{!l.has(d.name)&&s.has(d.name)&&d.inputs.every(p=>l.has(p.name))&&a.push(d)})}return c}var SH=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],CH=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],TH=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function tS(e){return SH.indexOf(e.op)>=0}function NH(e){return CH.indexOf(e.op)>=0}function EH(e){return TH.indexOf(e.op)>=0}var JA=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new JA(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=eS(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return IH(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(u=>this.graph.nodes[ks(u)[0]]),r=t.map(u=>ks(u)[0]),a=r.map(u=>this.graph.nodes[u]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},c={};return X(()=>{let u=new QI(this.weightMap,l,c,this.functionExecutorMap),d={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=ks(f),y=[];y[g]=e[f],d[m]=y});let p=this.getFrozenTensorIds(d),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!d[m.name]){let g=JI(m,d,u,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,u,p,r,h)}}return this.parent==null&&u.dispose(p),t.map(f=>Hn(f,d,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=_G(i.name,n,s);l!=null&&l.forEach(c=>{if(c&&!c.kept&&!r.has(c.id)){let u=o[c.id];if(u===1){if(!this.keepTensorForDebug)c.dispose();else{let[d,p]=Vr(t.name,s);this.intermediateTensors[d]?this.intermediateTensors[d][p]=c:(this.intermediateTensors[d]=[],this.intermediateTensors[d][p]=c)}delete o[c.id]}else u!=null&&o[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){console.warn(c.message)}this.resetIntermediateTensors();let a=new QI(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(c=>Hn(c,this.tensorsMap,a)),i=o.map(c=>c.id),l=Object.keys(e).map(c=>e[c].id);return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(x=>this.graph.nodes[ks(x)[0]]),o=n.map(x=>ks(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:u,syncInputs:d}=eS(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(x=>{let[A,b]=ks(x),v=[];v[b]=e[x],h[A]=v});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let x=this.processStack(a,p,t,h,g,m,o,f,l);await Promise.all(x)}u==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=i.filter(x=>!tS(x)&&!Hn(x.name,h,t)).map(x=>x.name);if(y.length>0){let x="";throw u!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${x}`)}return h}processStack(e,t,n,s,r,a,o,i,l){let c=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let d="";if(u.node.op==="Enter"&&k("isConstant",u.node,s,n)&&([d]=Vr(u.node.name,n)),s[u.node.name]==null){let p=JI(u.node,s,n,this._resourceManager);d||([d]=Vr(u.node.name,n));let h=n.currentContext;w.isPromise(p)?c.push(p.then(f=>(s[d]=f,n.currentContext=h,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l),f))):(s[d]=p,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l))}else this.processChildNodes(u.node,t,n,s,r,l)}return c}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=Vr(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Hn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!Hn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=ks(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);w.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&w.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=ks(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=ks(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},RH=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},_H="?tfjs-format=file",DH="model.json",nS=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new RH}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=os.browserHTTPRequest(e,this.loadOptions);else{let t=os.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(os.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=os.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new JA(jI.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=jI.Instance.transformGraph(e.modelInitializer);this.initializer=new JA(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=os.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof nt)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function We(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${DH}${_H}`);let n=new nS(e,t);return await n.load(),n}var PH="0.0.0",sS={};Me(sS,{CSVDataset:()=>yS,Dataset:()=>ic,FileDataSource:()=>IS,TextLineDataset:()=>fS,URLDataSource:()=>SS,array:()=>nj,csv:()=>hj,func:()=>fj,generator:()=>mj,microphone:()=>yj,version_data:()=>Aj,webcam:()=>gj,zip:()=>sj});var $H=hi(_h()),FH=hi(_h());function OH(e,t){return Dm(e,t)}function Dm(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(oc(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=Dm(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function MH(e,t=aS){return rS(e,t)}function rS(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(oc(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(c=>c[o]),l=rS(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function aS(e){return e===null?null:oc(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function oS(e,t){let n=new Map;Dm(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let o=await a;n.set(r,o)}}return Dm(e,t,n)}function oc(e){let t=!1;if(Y().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=K5();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof nt)&&!(e instanceof Promise)&&!t)}function zH(e){return e==null||LH(e)||Array.isArray(e)||typeof e=="object"&&e instanceof nt||w.isTypedArray(e)}function LH(e){return e===null||typeof e!="object"&&typeof e!="function"}function BH(e){return OH(e,WH)}function WH(e){return e instanceof nt?{value:e.clone(),recurse:!1}:oc(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var iS=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},lS=class extends iS{constructor(){super(lS.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},uS=lS;uS.INITIAL_CAPACITY=32;function cS(e){return new GH(e)}function QA(e){return new HH(e)}function VH(e,t){return new pS(e,t)}function UH(e,t=tx.FAIL){return new ej(e,t)}var vn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new JH(this,e)}filter(e){return new ZH(this,e)}map(e){return new YH(this,e)}mapAsync(e){return new dS(this,e)}serialMapAsync(e){return new dS(this,e).serial()}flatmap(e){return new QH(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new KH(this,e,t)}columnMajorBatch(e,t=!0,n=aS){return this.rowMajorBatch(e,t).map(r=>MH(r,n))}concatenate(e,t){return new pS(cS([this,e]),t)}take(e){return e<0||e==null?this:new XH(this,e)}skip(e){return e<0||e==null?this:new qH(this,e)}prefetch(e){return new hS(this,e)}shuffle(e,t){return new tj(this,e,t)}serial(){return new jH(this)}},GH=class extends vn{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:BH(e),done:!1}}},HH=class extends vn{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},jH=class extends vn{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},qH=class extends vn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;te(e.value)}return this.upstream.next()}},XH=class extends vn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},KH=class extends vn{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},ZH=class extends vn{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;te(e.value)}}},YH=class extends vn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=fr.getTensorsInContainer(e.value),n=this.transform(e.value),s=fr.getTensorsInContainer(n);for(let r of t)fr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},JH=class extends vn{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},dS=class extends vn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=fr.getTensorsInContainer(e.value),n=await this.transform(e.value),s=fr.getTensorsInContainer(n);for(let r of t)fr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},ex=class extends vn{constructor(){super();this.outputQueue=new uS,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},QH=class extends ex{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=fr.getTensorsInContainer(e.value),n=this.transform(e.value),s=fr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)fr.isTensorInList(r,s)||r.dispose();return!0}},pS=class extends vn{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},tx=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(tx||{}),ej=class extends vn{constructor(e,t=0){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof vn?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await oS(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},hS=class extends vn{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new iS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},tj=class extends hS{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=FH.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},ic=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),Is(async()=>(await n.iterator()).columnMajorBatch(e,t,rj),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Is(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Is(async()=>(await t.iterator()).filter(s=>X(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Is(async()=>(await t.iterator()).map(n=>X(()=>e(n))),this.size)}mapAsync(e){let t=this;return Is(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Is(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Is(async()=>{let s=QA(async()=>({value:await t.iterator(),done:!1}));return VH(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Is(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=$H.alea(t||w.now().toString());return Is(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Is(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};ic.MAX_BUFFER_SIZE=1e4;function Is(e,t=null){return new class extends ic{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function nj(e){return Is(async()=>cS(e),e.length)}function sj(e){if(!oc(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Is(async()=>{let n=await oS(e,s=>{if(s instanceof ic)return{value:s.iterator(),recurse:!1};if(oc(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return UH(n,tx.SHORTEST)},t)}function rj(e){if(e===null)return null;let t=e[0];return zH(t)?{value:aj(e),recurse:!1}:{value:null,recurse:!0}}function aj(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof nt?on(e):ht(e)}var fS=class extends ic{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Pm='"',bp=Symbol("out"),mS=Symbol("field"),$m=Symbol("quote"),nx=Symbol("quoteafterquote"),gS=Symbol("quoteinquote"),yS=class extends ic{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new fS(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let c=Number(i);if(isNaN(c))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=c;else switch(o.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(i);break;default:l=c}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=bp;for(let o=0;o<r;o++)switch(a){case bp:switch(e.charAt(o)){case Pm:s=o+1,a=$m;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=bp;break;default:a=mS,s=o;break}break;case mS:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=bp,s=o+1;break;default:}break;case $m:switch(e.charAt(o)){case Pm:a=nx;break;default:}break;case nx:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=bp,s=o+1;break;case Pm:a=$m;break;default:a=gS;break}break;case gS:switch(e.charAt(o)){case Pm:a=$m;break;default:}break;default:}if(a===nx?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},AS=class extends vn{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Y().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new AS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),ht(n,t)}},xS=class extends vn{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Tt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=Ar([a,r,i,o],[1,4])}else this.cropBox=Ar([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Y().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new xS(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Os.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return X(()=>{let t=Yt(ge(e,"float32"),0),n;n=Ie.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return H(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},bS=class{},vS=class extends vn{split(e){return new oj(this,e)}},oj=class extends vS{constructor(e,t){super();this.upstream=e,this.impl=new ij(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},ij=class extends ex{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},lj=class extends vn{decodeUTF8(){return new uj(this)}},uj=class extends vS{constructor(e){super();this.upstream=e,this.impl=new cj(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},cj=class extends ex{constructor(e){super();if(this.upstream=e,Y().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=K5();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Y().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},wS=class extends lj{constructor(e,t={}){super();this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(Y().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function dj(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=pj(e));let a=await(n||w.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new wS(o,t)}else throw new Error(a.statusText)}var pj=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function kS(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var IS=class extends bS{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(kS(this.input)&&Y().get("IS_NODE")){let e=Dh();this.input=e.readFileSync(this.input.substr(7))}return new wS(this.input,this.options)}},SS=class extends bS{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return kS(this.url)?new IS(this.url,this.fileOptions).iterator():dj(this.url,this.fileOptions)}};function hj(e,t={}){return new yS(new SS(e),t)}function fj(e){let t=QA(e);return Is(async()=>t)}function mj(e){return Is(async()=>{let t=await e();return QA(()=>t.next())})}async function gj(e,t){return xS.create(e,t)}async function yj(e){return AS.create(e)}var Aj="0.0.0";function Re(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var xj=tr.whereImpl,CS=class extends ru{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new dd(this,Dn())}nextDataId(){return CS.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}makeOutput(e,t,n){let s=this.write(e,t,n);return Dn().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Re([e],"where");let t=this.readSync(e.dataId);return xj(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},sx=CS;sx.nextDataId=0;var Fm={};Me(Fm,{addImpl:()=>NS,bincountImpl:()=>ax,bincountReduceImpl:()=>ES,ceilImpl:()=>RS,concatImpl:()=>ox,equalImpl:()=>_S,expImpl:()=>PS,expm1Impl:()=>FS,floorImpl:()=>OS,gatherNdImpl:()=>MS,gatherV2Impl:()=>zS,greaterEqualImpl:()=>BS,greaterImpl:()=>LS,lessEqualImpl:()=>VS,lessImpl:()=>WS,linSpaceImpl:()=>US,logImpl:()=>GS,maxImpl:()=>HS,maximumImpl:()=>jS,minimumImpl:()=>qS,multiplyImpl:()=>ix,negImpl:()=>XS,notEqualImpl:()=>KS,prodImpl:()=>ZS,rangeImpl:()=>ux,rsqrtImpl:()=>YS,sigmoidImpl:()=>iq,simpleAbsImpl:()=>TS,sliceImpl:()=>zm,sparseFillEmptyRowsImpl:()=>QS,sparseReshapeImpl:()=>e7,sparseSegmentReductionImpl:()=>cx,sqrtImpl:()=>cq,squaredDifferenceImpl:()=>t7,stridedSliceImpl:()=>n7,stringNGramsImpl:()=>s7,stringSplitImpl:()=>r7,stringToHashBucketFastImpl:()=>a7,subImpl:()=>o7,tileImpl:()=>i7,topKImpl:()=>u7,transposeImpl:()=>lx,uniqueImpl:()=>c7});function TS(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var bj=e=>{let{x:t}=e.inputs,n=e.backend;Re(t,"abs");let s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=TS(r),n.makeOutput(s,t.shape,t.dtype)},vj={kernelName:gi,backendName:"cpu",kernelFunc:bj};function en(e){return(t,n,s,r,a)=>{let o=N.assertAndGetBroadcastShape(t,n),i=o.length,l=w.computeStrides(o),c=w.sizeFromShape(o),u=w.getTypedArrayFromDType(a,c),d=t.length,p=n.length,h=w.computeStrides(t),f=w.computeStrides(n),m=N.getBroadcastDims(t,o),g=N.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(s[y%s.length],r[y%r.length]);else for(let y=0;y<u.length;++y){let x=w.indexToLoc(y,i,l),A=x.slice(-d);m.forEach(I=>A[I]=0);let b=w.locToIndex(A,d,h),v=x.slice(-p);g.forEach(I=>v[I]=0);let C=w.locToIndex(v,p,f);u[y]=e(s[b],r[C])}return[u,o]}}function Ss(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var wj={kernelName:md,backendName:"cpu",kernelFunc:Ss};function Om(e,t,n="float32"){if(n==="complex64"){let r=Om(e,t,"float32"),a=Om(e,t,"float32");return Ss({inputs:{real:r,imag:a},backend:e})}let s=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Ur(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var kj={kernelName:Ja,backendName:"cpu",kernelFunc:Ur};function Cl(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var Ij={kernelName:Id,backendName:"cpu",kernelFunc:Cl};function Ko(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Ur({inputs:{x:r},backend:n});let o=Om(n,r.shape,r.dtype),i=Ko({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Ss({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Cl({inputs:{input:r},backend:n}),i=Ko({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(r.dtype,a)){let o=Ur({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=w.toTypedArray([0],r.dtype),[l,c]=en((u,d)=>u!==d?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Sj={kernelName:za,backendName:"cpu",kernelFunc:Ko};function wn(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Re([o,i],e);let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=o.dtype==="string"?N.fromUint8ToStringArray(c):c,p=o.dtype==="string"?N.fromUint8ToStringArray(u):u,h=s||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let c=Ko({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,h=l.data.get(d.dataId).values,f=l.data.get(p.dataId).values,m=Ko({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,A=l.data.get(y.dataId).values,b=l.data.get(x.dataId).values,[v,C,I]=n(o.shape,i.shape,h,f,A,b),E=l.makeTensorInfo(I,"float32",v),R=l.makeTensorInfo(I,"float32",C),F=Ss({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),F}else{let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=s||o.dtype,[p,h]=t(o.shape,i.shape,c,u,d);return l.makeTensorInfo(h,d,p)}}}function rx(e){return(t,n,s,r,a,o)=>{let i=N.assertAndGetBroadcastShape(t,n),l=w.sizeFromShape(i),c=i.length,u=w.computeStrides(i),d=w.getTypedArrayFromDType("float32",l),p=w.getTypedArrayFromDType("float32",l),h=N.getBroadcastDims(t,i),f=N.getBroadcastDims(n,i),m=N.mergeRealAndImagArrays(s,r),g=N.mergeRealAndImagArrays(a,o),y=t.length,x=w.computeStrides(t),A=n.length,b=w.computeStrides(n);if(h.length+f.length===0)for(let v=0;v<d.length;v++){let C=v%m.length,I=v%g.length,E=e(m[C*2],m[C*2+1],g[I*2],g[I*2+1]);d[v]=E.real,p[v]=E.imag}else for(let v=0;v<d.length;v++){let C=w.indexToLoc(v,c,u),I=C.slice(-y);h.forEach(P=>I[P]=0);let E=w.locToIndex(I,y,x),R=C.slice(-A);f.forEach(P=>R[P]=0);let F=w.locToIndex(R,A,b),_=e(m[E*2],m[E*2+1],g[F*2],g[F*2+1]);d[v]=_.real,p[v]=_.imag}return[d,p,i]}}var NS=en((e,t)=>e+t),Cj=rx((e,t,n,s)=>({real:e+n,imag:t+s})),vp=wn(Zr,NS,Cj),Tj={kernelName:Zr,backendName:"cpu",kernelFunc:vp};function ax(e,t,n,s,r){let a=w.sizeFromShape(s),o=w.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function ES(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=Le([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let c=e.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?o.set(1,i,c):t.size>0?o.set(o.get(i,c)+t.get(i,l),i,c):o.set(o.get(i,c)+1,i,c))}return o}function Zo(e){return(t,n,s)=>{let r=w.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function gt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Re(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=w.sizeFromShape(o.shape),u=n||o.dtype,d=w.getArrayFromDType(u,c);for(let p=0;p<c;++p)d[p]=t(l[p],r);return i.makeTensorInfo(o.shape,u,d)}}function lc(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Re(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=n||o.dtype,u=t(l,c,r);return i.makeTensorInfo(o.shape,c,u)}}var RS=Zo(e=>Math.ceil(e)),Nj=lc(La,RS),Ej={kernelName:La,backendName:"cpu",kernelFunc:Nj};function ox(e,t,n,s){let r=w.getArrayFromDType(n,w.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=w.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?N.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let c=0;c<o.shape[0];++c){let u=c*t[1]+a;for(let d=0;d<o.shape[1];++d)r[u+d]=i[l++]}a+=o.shape[1]})}return r}var _S=en((e,t)=>e===t?1:0),DS=wn(wi,_S,null,"bool"),Rj={kernelName:wi,backendName:"cpu",kernelFunc:DS},PS=Zo(e=>Math.exp(e)),$S=lc(qa,PS,"float32"),_j={kernelName:qa,backendName:"cpu",kernelFunc:$S},FS=Zo(e=>Math.expm1(e)),Dj=lc(Ii,FS),Pj={kernelName:Ii,backendName:"cpu",kernelFunc:Dj},OS=Zo(e=>Math.floor(e)),$j=lc(Xa,OS),Fj={kernelName:Xa,backendName:"cpu",kernelFunc:$j};function MS(e,t,n,s,r,a,o,i,l){let c=Le([s,a],n);for(let u=0;u<s;u++){let d=[],p=0;for(let h=0;h<r;h++){let f=e[u*r+h];p+=f*o[h],d.push(f)}if(p<0||p>=l/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<a;h++)c.values[u*a+h]=t.get(...t.indexToLoc(p*a+h))}return c}function zS(e,t,n){let s=Le(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],c=t.locToIndex([i,l]);o[2]=t.values[c];let u=e.locToIndex(o);0<=u&&u<e.values.length&&(s.values[r]=e.values[u])}return s}var LS=en((e,t)=>e>t?1:0),Oj=wn(Ni,LS,null,"bool"),Mj={kernelName:Ni,backendName:"cpu",kernelFunc:Oj},BS=en((e,t)=>e>=t?1:0),zj=wn(Ya,BS,null,"bool"),Lj={kernelName:Ya,backendName:"cpu",kernelFunc:zj},WS=en((e,t)=>e<t?1:0),Bj=wn(Ei,WS,null,"bool"),Wj={kernelName:Ei,backendName:"cpu",kernelFunc:Bj},VS=en((e,t)=>e<=t?1:0),Vj=wn(Ri,VS,null,"bool"),Uj={kernelName:Ri,backendName:"cpu",kernelFunc:Vj};function US(e,t,n){let s=(t-e)/(n-1),r=w.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var GS=Zo(e=>Math.log(e)),Gj=lc(eo,GS),Hj={kernelName:eo,backendName:"cpu",kernelFunc:Gj};function HS(e,t,n,s){let r=w.getTypedArrayFromDType(s,w.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let c=e[o+l];(Number.isNaN(c)||c>i)&&(i=c)}r[a]=i}return r}var jS=en((e,t)=>Math.max(e,t)),jj=wn(no,jS),qj={kernelName:no,backendName:"cpu",kernelFunc:jj},qS=en((e,t)=>Math.min(e,t)),Xj=wn(oo,qS),Kj={kernelName:oo,backendName:"cpu",kernelFunc:Xj},ix=en((e,t)=>e*t),Zj=rx((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Mm=wn(lo,ix,Zj),Yj={kernelName:lo,backendName:"cpu",kernelFunc:Mm};function XS(e,t,n){let s=w.createScalarValue(-1,n);return ix([],t,s,e,n)}function Jj(e){let{inputs:t,backend:n}=e,{x:s}=t;Re(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=XS(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var Qj={kernelName:Di,backendName:"cpu",kernelFunc:Jj},KS=en((e,t)=>e!==t?1:0),eq=wn(Pi,KS,null,"bool"),tq={kernelName:Pi,backendName:"cpu",kernelFunc:eq};function lx(e,t,n,s,r){let a=t.length,o=w.sizeFromShape(t),i=w.computeStrides(t),l=w.computeStrides(r),c=w.getTypedArrayFromDType(n,w.sizeFromShape(r));for(let u=0;u<o;++u){let d=w.indexToLoc(u,a,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[s[f]];let h=w.locToIndex(p,a,l);c[h]=e[u]}return c}function Gs(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Re(r,"transpose");let o=r.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=r.shape[a[d]];let l=s.data.get(r.dataId).values,c=lx(l,r.shape,r.dtype,a,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}var nq={kernelName:So,backendName:"cpu",kernelFunc:Gs};function ZS(e,t,n,s){let[r,a]=N.computeOutAndReduceShapes(e,s),o=Wn(t,"int32"),i=w.makeZerosTypedArray(w.sizeFromShape(r),o),l=w.sizeFromShape(a);for(let c=0;c<i.length;++c){let u=c*l,d=1;for(let p=0;p<l;++p)d*=n[u+p];i[c]=d}return{outVals:i,outShape:r,outDtype:o}}function sq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"prod");let i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=N.getAxesPermutation(l,i),u=l,d=r,p=[];c!=null&&(d=Gs({inputs:{x:r},backend:n,attrs:{perm:c}}),p.push(d),u=N.getInnerMostAxes(u.length,i));let h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=ZS(d.shape,d.dtype,h,u),y=m;return o&&(y=N.expandShapeToKeepDim(m,l)),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(y,g,f)}var rq={kernelName:Li,backendName:"cpu",kernelFunc:sq};function ux(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return w.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var YS=Zo(e=>1/Math.sqrt(e)),aq=lc(go,YS),oq={kernelName:go,backendName:"cpu",kernelFunc:aq},iq=Zo(e=>1/(1+Math.exp(-e))),JS=gt(Ao,e=>1/(1+Math.exp(-e))),lq={kernelName:Ao,backendName:"cpu",kernelFunc:JS};function zm(e,t,n,s,r){let a=zt.isSliceContinous(s,t,n),o=w.sizeFromShape(n),i=w.computeStrides(s);if(a){let d=zt.computeFlatOffset(t,i);return r==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let l=r==="string"?N.fromUint8ToStringArray(e):e,c=Le(s,r,l),u=Le(n,r);for(let d=0;d<u.size;++d){let p=u.indexToLoc(d),h=p.map((f,m)=>f+t[m]);u.set(c.get(...h),...p)}return r==="string"?N.fromStringArrayToUint8(u.values):u.values}function Tl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Re(r,"slice");let[i,l]=zt.parseSliceParams(r,a,o);zt.assertParamsValid(r,i,l);let c=n.data.get(r.dataId).values,u=zm(c,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var uq={kernelName:Hi,backendName:"cpu",kernelFunc:Tl};function QS(e,t,n,s,r,a,o){let i=t[0],l=a[0],c=new Array(l),u=new Array(i),d=t[1];if(l===0){if(i!==0)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=w.getArrayFromDType(n,0),y=w.getArrayFromDType(r,0);return[g,[0,d],y,c,u]}let p=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let y=e[g*d];if(y<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],p=p&&y>=h,h=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,y=s;for(let x=0;x<i;++x)u[x]=x;return[g,[i,d],y,c,u]}else{let g=f[l-1],y=w.getArrayFromDType(n,g*d),x=w.getArrayFromDType(r,g),A=new Array(l).fill(0);for(let b=0;b<i;++b){let v=e[b*d],C=A[v],I=(v===0?0:f[v-1])+C;A[v]++;for(let E=0;E<d;++E)y[I*d+E]=e[b*d+E];x[I]=s[b],u[b]=I}for(let b=0;b<l;++b)if(A[b]===0){let C=b===0?0:f[b-1];y[C*d+0]=b;for(let I=1;I<d;++I)y[C*d+I]=0;x[C]=o}return[y,[g,d],x,c,u]}}function e7(e,t,n,s,r){let a=w.sizeFromShape(s),o=t[0],i=r.length,l=[],c=1,u=-1;for(let g=0;g<i;++g){let y=r[g];if(y===-1){if(u!==-1)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,g));u=g,l.push(1)}else{if(y<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(g,y));c*=y,l.push(y)}}if(u!==-1){if(c<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/c);if(c*g!==a)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[u]=g}if(w.sizeFromShape(l)!==a)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(s,l));let p=s.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=w.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let y=0;for(let x=0;x<p;++x)y+=e[g*p+x]*h[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(y/f[x]),y%=f[x]}return[m,[o,i],l]}function cx(e,t,n,s,r,a=!1,o=0){let i=s.length,l=[t[0],e.length/t[0]],c=l[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=d;let h=p.reduce((A,b)=>A*b,1),f=w.getArrayFromDType(n,h);if(i===0)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=r[m];for(;;){let A=0;if(g<i){if(A=r[g],x===A){++g;continue}if(x>=A)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=d)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,d));x>y&&f.fill(o,y*c,x*c);for(let b=m;b<g;++b){let v=s[b];if(v<0||v>=l[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b,s[b],l[0]));for(let C=0;C<c;C++)f[x*c+C]+=e[v*c+C]}if(a)for(let b=0;b<c;b++)f[x*c+b]/=g-m;if(m=g,++g,y=x+1,x=A,g>i)break}return y<d&&f.fill(o,y*c,d*c),[f,p]}var cq=Zo(e=>Math.sqrt(e)),dq=gt(xo,e=>Math.sqrt(e)),pq={kernelName:xo,backendName:"cpu",kernelFunc:dq},t7=en((e,t)=>{let n=e-t;return n*n}),hq=wn(wo,t7),fq={kernelName:wo,backendName:"cpu",kernelFunc:hq};function n7(e,t,n,s){let r=Le(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var mq=class{constructor(e,t,n,s,r,a){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),u=a-(l+c),d=t+(l>0?0:o-i),p=0;p+=l*this.leftPad.length;for(let y=0;y<u;++y)p+=e[d+y].length;p+=c*this.rightPad.length,p+=(l+c+u-1)*this.separator.length,n[s+o]=new Uint8Array(p);let f=n[s+o],m=0,g=y=>y.forEach(x=>f[m++]=x);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<u-1;++y)g(e[d+y]),g(this.separator);if(u>0){g(e[d+u-1]);for(let y=0;y<c;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<c-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let c=t[l]>=i;if(c=c&&t[l]<=n,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=w.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],c=0;this.nGramWidths.forEach(u=>{c+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&c===0&&(c=1),a[i]=a[i-1]+c}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],c=a[i];if(this.nGramWidths.forEach(u=>{let d=t[i+1]-t[i],p=this.getNumNGrams(d,u);this.createNGrams(e,l,o,c,p,u),c+=p}),this.preserveShort&&c===a[i]){let u=t[i+1]-t[i];if(u===0)continue;let d=u+2*this.padWidth,p=1;this.createNGrams(e,l,o,c,p,d)}}return[o,a]}};function s7(e,t,n,s,r,a,o,i){return new mq(n,s,r,a,o,i).compute(e,t)}function gq(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function r7(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let p=0;p<s;++p){let h=r.length;gq(e[p],t,n,r);let f=r.length-h;i[p]=f,a+=f,o=Math.max(o,f)}let l=w.getArrayFromDType("int32",a*2),c=new Array(a),u=[s,o],d=0;for(let p=0;p<s;++p)for(let h=0;h<i[p];++h)l[d*2]=p,l[d*2+1]=h,c[d]=r[d],++d;return[l,c,u]}function a7(e,t){let n=w.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=w.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var o7=en((e,t)=>e-t),yq=rx((e,t,n,s)=>({real:e-n,imag:t-s})),dx=wn(ko,o7,yq),Aq={kernelName:ko,backendName:"cpu",kernelFunc:dx};function i7(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=Le(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var wp=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function l7(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,c=Math.log(i),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(i-u)/i)*Math.sign(l-i/2),p=Math.max(n,Math.floor(t-l*u/i+d)),h=Math.min(s,Math.floor(t+(i-l)*u/i+d));l7(e,t,p,h)}let r=e[t],a=n,o=s;for(w.swap(e,n,t),wp(e[s],r)>0&&w.swap(e,n,s);a<o;){for(w.swap(e,a,o),a++,o--;wp(e[a],r)<0;)a=a+1;for(;wp(e[o],r)>0;)o=o-1}wp(e[n],r)===0?w.swap(e,n,o):(o=o+1,w.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function u7(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=w.getTypedArrayFromDType(n,o*s),c=w.getTypedArrayFromDType("int32",o*s);for(let d=0;d<o;d++){let p=d*i,h=e.subarray(p,p+i),f=new Array(h.length);h.forEach((x,A)=>f[A]={value:x,index:A}),s<f.length&&(l7(f,s),f=f.slice(0,s)),r&&f.sort(wp);let m=d*s,g=l.subarray(m,m+s),y=c.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,y[x]=f[x].index}let u=t.slice();return u[u.length-1]=s,[Le(u,n,l),Le(u,"int32",c)]}function c7(e,t,n,s){let r=w.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new rn(a,s,e),c=[],u=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let x=0;x<a[2];x++)g.push(l.get(y,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let p=new rn(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)p.set(l.get(g,f,y),g,m,y)});let h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:i}}var xq="0.0.0";cl("cpu",()=>new sx,1);var d7=gt(ja,e=>e>=0?e:Math.exp(e)-1),bq={kernelName:ja,backendName:"cpu",kernelFunc:d7};function p7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Re([r],"leakyRelu");let o=w.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=w.getTypedArrayFromDType("float32",o);for(let c=0;c<i.length;c++)l[c]=i[c]<0?a*i[c]:i[c];return n.makeTensorInfo(r.shape,"float32",l)}var vq={kernelName:Qa,backendName:"cpu",kernelFunc:p7},wq=en((e,t)=>e<0?t*e:e);function h7(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Re([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=wq(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var kq={kernelName:po,backendName:"cpu",kernelFunc:h7},f7=gt(ho,e=>Math.max(0,e)),Iq={kernelName:ho,backendName:"cpu",kernelFunc:f7},m7=gt(mo,e=>Math.min(Math.max(0,e),6)),Sq={kernelName:mo,backendName:"cpu",kernelFunc:m7};function px(e,t,n,s,r){if(n==="linear")return Ur({inputs:{x:t},backend:e});if(n==="relu")return f7({inputs:{x:t},backend:e});if(n==="elu")return d7({inputs:{x:t},backend:e});if(n==="relu6")return m7({inputs:{x:t},backend:e});if(n==="prelu")return h7({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return p7({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return JS({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Ot(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(a,o),l=w.sizeFromShape(i);w.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var Cq={kernelName:Bi,backendName:"cpu",kernelFunc:Ot};function g7(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Re([r,a],"matMul");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=il.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);w.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],v=i?[y,h,d]:[y,d,h],C=Ot({inputs:{x:r},backend:n,attrs:{shape:b}}),I=Ot({inputs:{x:a},backend:n,attrs:{shape:v}}),E=o?C.shape[1]:C.shape[2],R=o?C.shape[2]:C.shape[1],F=i?I.shape[1]:I.shape[2],_=Math.max(g,y),P=n.data.get(C.dataId).values,T=n.data.get(I.dataId).values,O=w.computeStrides(C.shape),G=w.computeStrides(I.shape),[K,z,j]=o?[O[0],1,O[1]]:[O[0],O[1],1],[W,Q,ne]=i?[1,G[1],G[0]]:[G[1],1,G[0]],oe=R*F,Z=Le([_,R,F],C.dtype),ae=Z.values,re=n.blockSize;for(let me=0;me<_;me++)for(let be=0;be<R;be+=re)for(let Ne=0;Ne<F;Ne+=re)for(let Se=0;Se<E;Se+=re){let Pe=Math.min(be+re,R),ze=Math.min(Ne+re,F),Qe=Math.min(Se+re,E);for(let Ze=be;Ze<Pe;Ze++)for(let et=Ne;et<ze;et++){let yt=0;for(let lt=Se;lt<Qe;lt++){let At=Math.min(me,g-1)*K,Dt=Math.min(me,y-1)*ne,ts=P[At+Ze*z+lt*j],ut=T[lt*W+et*Q+Dt];yt+=ts*ut}ae[me*oe+(Ze*F+et)]+=yt}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(A,Z.dtype,Z.values)}var Tq={kernelName:Ma,backendName:"cpu",kernelFunc:g7};function Nq(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p,h,f,m=[];p=g7({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:c},backend:n}),o&&(h=vp({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),u&&(f=px(n,p,u,i,d),m.push(p),p=f);for(let y of m)n.disposeIntermediateTensorInfo(y);return p}var Eq={kernelName:To,backendName:"cpu",kernelFunc:Nq},Rq=gt(lu,e=>Math.acos(e)),_q={kernelName:lu,backendName:"cpu",kernelFunc:Rq},Dq=gt(uu,e=>Math.acosh(e)),Pq={kernelName:uu,backendName:"cpu",kernelFunc:Dq};function $q(e){let{inputs:t,backend:n}=e,s=t;Re(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=Le(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let c=0;c<o.length;c++)o[c]+=l[c]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var Fq={kernelName:$a,backendName:"cpu",kernelFunc:$q};function Oq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"all");let i=w.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Gs({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("all",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let v=m[x+b];A=A&&v}f[y]=A}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),x=Ot({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var Mq={kernelName:cu,backendName:"cpu",kernelFunc:Oq};function zq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"any");let i=w.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Gs({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("any",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let v=m[x+b];A=A||v}f[y]=A}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),x=Ot({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var Lq={kernelName:du,backendName:"cpu",kernelFunc:zq};function Bq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Re(r,"argMax");let o=w.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Gs({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=w.sizeFromShape(u),h=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let v=m[y+b];v>x&&(x=v,A=b)}h[g]=A}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var Wq={kernelName:Fa,backendName:"cpu",kernelFunc:Bq};function Vq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Re(r,"argMin");let o=w.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Gs({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=w.sizeFromShape(u),h=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let v=m[y+b];v<x&&(x=v,A=b)}h[g]=A}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var Uq={kernelName:pu,backendName:"cpu",kernelFunc:Vq},Gq=gt(hu,e=>Math.asin(e)),Hq={kernelName:hu,backendName:"cpu",kernelFunc:Gq},jq=gt(fu,e=>Math.asinh(e)),qq={kernelName:fu,backendName:"cpu",kernelFunc:jq},Xq=gt(mu,e=>Math.atan(e)),Kq={kernelName:mu,backendName:"cpu",kernelFunc:Xq},Zq=en((e,t)=>Math.atan2(e,t)),Yq=wn(yu,Zq),Jq={kernelName:yu,backendName:"cpu",kernelFunc:Yq},Qq=gt(gu,e=>Math.atanh(e)),eX={kernelName:gu,backendName:"cpu",kernelFunc:Qq};function hx(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Le(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],A=r.outShape[3];for(let b=0;b<r.batchSize;++b){let v=b*y,C=b*s[0];for(let I=0;I<r.inChannels;++I)for(let E=0;E<r.outHeight;++E){let R=E*o-p,F=Math.max(0,R),_=Math.min(r.inHeight,u+R),P=v+E*x;for(let T=0;T<r.outWidth;++T){let O=T*i-h,G=Math.max(0,O),K=Math.min(r.inWidth,d+O),z=f,j=0,W=0;for(let ne=F;ne<_;ne+=l){let oe=C+ne*s[1];for(let Z=G;Z<K;Z+=c){let ae=oe+Z*s[2],re=e[ae+I];a==="max"&&re>z?z=re:a==="avg"&&(j+=re,W++)}if(isNaN(z))break}let Q=P+T*A+I;g[Q]=a==="avg"?j/W:z}}}return m}function y7(e,t,n,s,r=!1,a=!1){let o=Le(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=Le(t,n,e);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){let A=x*i-h,b=A;for(;b<0;)b+=c;let v=Math.min(s.inHeight,d+A);for(let C=0;C<s.outWidth;++C){let I=C*l-f,E=I;for(;E<0;)E+=u;let R=Math.min(s.inWidth,p+I),F=Number.NEGATIVE_INFINITY,_=-1;for(let P=b;P<v;P+=c){let T=P-A;for(let O=E;O<R;O+=u){let G=O-I,K=m.get(g,P,O,y);K>F&&(F=K,r?_=a?((g*s.inHeight+P)*s.inWidth+O)*s.inChannels+y:(P*s.inWidth+O)*s.inChannels+y:_=T*p+G)}}o.set(_,g,x,C,y)}}return o}function A7(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=Le(r.outShape,n),b=A.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){let F=R*v,_=R*s[0];for(let P=0;P<r.inChannels;++P)for(let T=0;T<r.outDepth;++T){let O=T*o-m,G=O;for(;G<0;)G+=c;let K=Math.min(r.inDepth,p+O),z=F+T*C;for(let j=0;j<r.outHeight;++j){let W=j*i-g,Q=W;for(;Q<0;)Q+=u;let ne=Math.min(r.inHeight,h+W),oe=z+j*I;for(let Z=0;Z<r.outWidth;++Z){let ae=Z*l-y,re=ae;for(;re<0;)re+=d;let me=Math.min(r.inWidth,f+ae),be=oe+Z*E,Ne=x,Se=0,Pe=0;for(let Qe=G;Qe<K;Qe+=c){let Ze=_+Qe*s[1];for(let et=Q;et<ne;et+=u){let yt=Ze+et*s[2];for(let lt=re;lt<me;lt+=d){let At=yt+lt*s[3],Dt=e[At+P];if(a==="max"&&Dt>Ne?Ne=Dt:a==="avg"&&(Se+=Dt,Pe++),isNaN(Ne))break}if(isNaN(Ne))break}if(isNaN(Ne))break}let ze=be+P;b[ze]=a==="avg"?Se/Pe:Ne}}}}return A}function tX(e,t){let n=Le(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let x=y*s-p,A=x;for(;A<0;)A+=o;let b=Math.min(t.inDepth,c+x);for(let v=0;v<t.outHeight;++v){let C=v*r-h,I=C;for(;I<0;)I+=i;let E=Math.min(t.inHeight,u+C);for(let R=0;R<t.outWidth;++R){let F=R*a-f,_=F;for(;_<0;)_+=l;let P=Math.min(t.inWidth,d+F),T=Number.NEGATIVE_INFINITY,O=-1;for(let G=A;G<b;G+=o){let K=G-x;for(let z=I;z<E;z+=i){let j=z-C;for(let W=_;W<P;W+=l){let Q=W-F,ne=e.get(m,G,z,W,g);ne>=T&&(T=ne,O=K*u*d+j*u+Q)}}}n.set(O,m,y,v,R,g)}}}return n}function nX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Re(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;w.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))d=Ur({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=hx(p,r.shape,r.dtype,h,u,"avg");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var sX={kernelName:Oa,backendName:"cpu",kernelFunc:nX};function rX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Re(r,"avgPool3d");let u=N.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=A7(d,r.shape,r.dtype,w.computeStrides(r.shape),u,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var aX={kernelName:fd,backendName:"cpu",kernelFunc:rX};function oX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Re([r,a],"avgPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=u.strideDepth,p=u.strideHeight,h=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,x=u.dilationHeight,A=u.dilationWidth,b=u.effectiveFilterDepth,v=u.effectiveFilterHeight,C=u.effectiveFilterWidth,I=b-1-u.padInfo.front,E=C-1-u.padInfo.left,R=v-1-u.padInfo.top,F=Le(a.shape,"float32"),_=1/(f*m*g),P=n.bufferSync(r);for(let T=0;T<u.batchSize;++T)for(let O=0;O<u.inChannels;++O)for(let G=0;G<u.inDepth;++G)for(let K=0;K<u.inHeight;++K)for(let z=0;z<u.inWidth;++z){let j=G-I,W=K-R,Q=z-E,ne=0;for(let oe=0;oe<b;oe+=y){let Z=(j+oe)/d;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let ae=0;ae<v;ae+=x){let re=(W+ae)/p;if(!(re<0||re>=u.outHeight||Math.floor(re)!==re))for(let me=0;me<C;me+=A){let be=(Q+me)/h;if(be<0||be>=u.outWidth||Math.floor(be)!==be)continue;ne+=P.get(T,Z,re,be,O)}}}F.set(ne*_,T,G,K,z,O)}return n.makeTensorInfo(F.shape,F.dtype,F.values)}var iX={kernelName:zh,backendName:"cpu",kernelFunc:oX};function lX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Re([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=N.computePool2DInfo(o.shape,i,l,1,c),d=u.strideHeight,p=u.strideWidth,h=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,x=u.effectiveFilterWidth,A=x-1-u.padInfo.left,b=y-1-u.padInfo.top,v=Le(o.shape,"float32"),C=1/(h*f),I=n.data.get(r.dataId).values,E=Le(r.shape,"float32",I);for(let R=0;R<u.batchSize;++R)for(let F=0;F<u.inChannels;++F)for(let _=0;_<u.inHeight;++_)for(let P=0;P<u.inWidth;++P){let T=_-b,O=P-A,G=0;for(let K=0;K<y;K+=m){let z=(T+K)/d;if(!(z<0||z>=u.outHeight||Math.floor(z)!==z))for(let j=0;j<x;j+=g){let W=(O+j)/p;if(W<0||W>=u.outWidth||Math.floor(W)!==W)continue;G+=E.get(R,z,W,F)}}v.set(G*C,R,_,P,F)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var uX={kernelName:Mh,backendName:"cpu",kernelFunc:lX};function cX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;w.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Re([r,i,l,a,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);let u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(l.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=h.length,x=p.length,A=d.length,b=0,v=0,C=0,I=0;for(let E=0;E<u.length;++E)m[E]=f[b++]+(u[E]-d[v++])*h[C++]/Math.sqrt(p[I++]+c),b>=g&&(b=0),v>=A&&(v=0),C>=y&&(C=0),I>=x&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var dX={kernelName:Za,backendName:"cpu",kernelFunc:cX};function pX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Re([r],"batchToSpaceND");let i=a.reduce((y,x)=>y*x),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=Ot({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Gs({inputs:{x:h},backend:n,attrs:{perm:c}}),m=Ot({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Tl({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var hX={kernelName:yi,backendName:"cpu",kernelFunc:pX};function fX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=ax(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var mX={kernelName:Lh,backendName:"cpu",kernelFunc:fX};function gX(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var yX={kernelName:Bh,backendName:"cpu",kernelFunc:gX},AX=gt(Yr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),xX={kernelName:Yr,backendName:"cpu",kernelFunc:AX},bX=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){let u=i[c],d=l[c];s[c]=Math.hypot(u,d)}return n.makeOutput(s,t.shape,"float32")},vX={kernelName:gd,backendName:"cpu",kernelFunc:bX};function uc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var wX={kernelName:bd,backendName:"cpu",kernelFunc:uc};function cc(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(m=>m.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>w.sizeFromShape(m.shape)>0);if(i.length===1)return Ur({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(N.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>Cl({inputs:{input:b},backend:n})),g=i.map(b=>uc({inputs:{input:b},backend:n})),y=cc({inputs:m,backend:n,attrs:{axis:a}}),x=cc({inputs:g,backend:n,attrs:{axis:a}}),A=Ss({inputs:{real:y,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),A}let c=i.map(m=>{let g=w.sizeFromShape(m.shape.slice(a));return Ot({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=N.computeOutShape(c.map(m=>m.shape),1);let d=c[0].shape[0]===1,p=ox(u,o,t[0].dtype,d),h=N.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,p);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var kX={kernelName:Ai,backendName:"cpu",kernelFunc:cc};function x7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s;Re([r,a],"conv2d");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,x=p.padInfo.top,A=p.dataFormat==="channelsLast",b=new rn(p.outShape,r.dtype),v=w.computeStrides(r.shape),C=w.computeStrides(a.shape),I=v[0],E=A?v[1]:v[2],R=A?v[2]:1,F=A?1:v[1],_=b.strides[0],P=A?b.strides[1]:b.strides[2],T=A?b.strides[2]:1,O=A?1:b.strides[1],G=n.data.get(r.dataId).values,K=n.data.get(a.dataId).values,z=b.values;for(let j=0;j<p.batchSize;++j){let W=j*I,Q=j*_;for(let ne=0;ne<p.outHeight;++ne){let oe=Q+ne*P,Z=ne*p.strideHeight-x;for(let ae=0;ae<h;++ae){let re=Z+ae*m;if(re<0||re>=p.inHeight)continue;let me=ae*C[0],be=W+re*E;for(let Ne=0;Ne<p.outWidth;++Ne){let Se=oe+Ne*T,Pe=Ne*p.strideWidth-y;for(let ze=0;ze<f;++ze){let Qe=Pe+ze*g;if(Qe<0||Qe>=p.inWidth)continue;let Ze=me+ze*C[1],et=be+Qe*R,yt=Ze;for(let lt=0;lt<p.inChannels;++lt){let At=G[et+lt*F];for(let Dt=0;Dt<p.outChannels;++Dt)z[Se+Dt*O]+=At*K[yt+Dt];yt+=p.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,z)}var IX={kernelName:Ba,backendName:"cpu",kernelFunc:x7};function SX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;Re([r,a],"conv2dBackpropFilter");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=p.dataFormat==="channelsLast",x=new rn(p.filterShape,"float32"),A=p.padInfo.left,b=p.padInfo.top,v=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,I=new rn(r.shape,r.dtype,v),E=new rn(a.shape,a.dtype,C);for(let R=0;R<m;++R){let F=Math.max(0,Math.ceil((b-R)/h)),_=Math.min(p.outHeight,(p.inHeight+b-R)/h);for(let P=0;P<g;++P){let T=Math.max(0,Math.ceil((A-P)/f)),O=Math.min(p.outWidth,(p.inWidth+A-P)/f);for(let G=0;G<p.inChannels;++G)for(let K=0;K<p.outChannels;++K){let z=0;for(let j=0;j<p.batchSize;++j)for(let W=F;W<_;++W){let Q=R+W*h-b;for(let ne=T;ne<O;++ne){let oe=P+ne*f-A;y?z+=I.get(j,Q,oe,G)*E.get(j,W,ne,K):z+=I.get(j,G,Q,oe)*E.get(j,K,W,ne)}}x.set(z,R,P,G,K)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var CX={kernelName:Wh,backendName:"cpu",kernelFunc:SX};function TX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s;Re([r,a],"conv2dBackpropInput");let d=w.computeStrides(a.shape),p=w.computeStrides(r.shape),h=N.convertConv2DDataFormat(c),f=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,h),m=new rn(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[A,b,v]=d,{batchSize:C,filterHeight:I,filterWidth:E,inChannels:R,inHeight:F,inWidth:_,outChannels:P,outHeight:T,outWidth:O,strideHeight:G,strideWidth:K}=f;h=f.dataFormat;let z=I-1-f.padInfo.top,j=E-1-f.padInfo.left,W=h==="channelsLast",Q=m.strides[0],ne=W?m.strides[1]:m.strides[2],oe=W?m.strides[2]:1,Z=W?1:m.strides[1],ae=p[0],re=W?p[1]:p[2],me=W?p[2]:1,be=W?1:p[1];for(let Ne=0;Ne<C;++Ne)for(let Se=0;Se<R;++Se)for(let Pe=0;Pe<F;++Pe){let ze=Pe-z,Qe=Math.max(0,Math.ceil(ze/G)),Ze=Math.min(T,(I+ze)/G);for(let et=0;et<_;++et){let yt=et-j,lt=Math.max(0,Math.ceil(yt/K)),At=Math.min(O,(E+yt)/K),Dt=0;for(let ut=Qe;ut<Ze;++ut){let gs=ut*G-ze;for(let In=lt;In<At;++In){let Xs=In*K-yt,ns=ae*Ne+re*ut+me*In,ys=A*(I-1-gs)+b*(E-1-Xs)+v*Se;for(let _s=0;_s<P;++_s){let Ks=y[ns+be*_s],Ds=x[ys+_s];Dt+=Ks*Ds}}}let ts=Q*Ne+ne*Pe+oe*et+Z*Se;g[ts]=Dt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var NX={kernelName:Wa,backendName:"cpu",kernelFunc:TX};function EX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Re([r,a],"conv3d");let c=N.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:u,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,x=g.left,A=g.top,b=new rn(c.outShape,r.dtype),v=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,I=b.values,E=w.computeStrides(r.shape),R=w.computeStrides(a.shape);for(let F=0;F<c.batchSize;++F){let _=F*E[0],P=F*b.strides[0];for(let T=0;T<c.outDepth;++T){let O=P+T*b.strides[1],G=T*c.strideDepth-y;for(let K=0;K<u;++K){let z=G+K*h;if(z<0||z>=c.inDepth)continue;let j=K*R[0],W=_+z*E[1];for(let Q=0;Q<c.outHeight;++Q){let ne=O+Q*b.strides[2],oe=Q*c.strideHeight-A;for(let Z=0;Z<d;++Z){let ae=oe+Z*f;if(ae<0||ae>=c.inHeight)continue;let re=j+Z*R[1],me=W+ae*E[2];for(let be=0;be<c.outWidth;++be){let Ne=ne+be*c.outChannels,Se=be*c.strideWidth-x;for(let Pe=0;Pe<p;++Pe){let ze=Se+Pe*m;if(ze<0||ze>=c.inWidth)continue;let Qe=re+Pe*R[2],Ze=me+ze*c.inChannels,et=Qe;for(let yt=0;yt<c.inChannels;++yt){let lt=v[Ze+yt];for(let At=0;At<c.outChannels;++At)I[Ne+At]+=lt*C[et+At];et+=c.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var RX={kernelName:yd,backendName:"cpu",kernelFunc:EX};function _X(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Re([r,a],"conv3dBackpropFilterV2");let c=w.computeStrides(r.shape),u=w.computeStrides(a.shape),d=N.computeConv3DInfo(r.shape,l,o,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,x=new rn(d.filterShape,"float32"),A=x.values,[b,v,C,I]=x.strides,E=n.data.get(a.dataId).values,[R,F,_,P]=u,T=n.data.get(r.dataId).values,[O,G,K,z]=c,j=d.padInfo.front,W=d.padInfo.left,Q=d.padInfo.top;for(let ne=0;ne<m;++ne){let oe=Math.max(0,Math.ceil((j-ne)/p)),Z=Math.min(d.outDepth,(d.inDepth+j-ne)/p),ae=ne*b;for(let re=0;re<g;++re){let me=Math.max(0,Math.ceil((Q-re)/h)),be=Math.min(d.outHeight,(d.inHeight+Q-re)/h),Ne=re*v+ae;for(let Se=0;Se<y;++Se){let Pe=Math.max(0,Math.ceil((W-Se)/f)),ze=Math.min(d.outWidth,(d.inWidth+W-Se)/f),Qe=Se*C+Ne;for(let Ze=0;Ze<d.inChannels;++Ze){let et=Ze*I+Qe;for(let yt=0;yt<d.outChannels;++yt){let lt=0;for(let At=0;At<d.batchSize;++At){let Dt=At*O,ts=At*R;for(let ut=oe;ut<Z;++ut){let In=(ne+ut*p-j)*G+Dt,Xs=ut*F+ts;for(let ns=me;ns<be;++ns){let _s=(re+ns*h-Q)*K+In,Ks=ns*_+Xs;for(let Ds=Pe;Ds<ze;++Ds){let wa=(Se+Ds*f-W)*z+_s,En=Ds*P+Ks;lt+=T[wa+Ze]*E[En+yt]}}}}A[et+yt]=lt}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var DX={kernelName:Vh,backendName:"cpu",kernelFunc:_X};function PX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Re([r],"conv3dBackpropInputV2");let c=w.computeStrides(r.shape),u=w.computeStrides(a.shape),d=N.computeConv3DInfo(l,a.shape,i,1,o),p=new rn(d.inShape,"float32"),h=p.values,[f,m,g,y]=p.strides,x=n.data.get(r.dataId).values,[A,b,v,C]=c,I=n.data.get(a.dataId).values,[E,R,F,_]=u,{batchSize:P,filterDepth:T,filterHeight:O,filterWidth:G,inChannels:K,inDepth:z,inHeight:j,inWidth:W,outChannels:Q,outDepth:ne,outHeight:oe,outWidth:Z,strideDepth:ae,strideHeight:re,strideWidth:me}=d,be=T-1-d.padInfo.front,Ne=O-1-d.padInfo.top,Se=G-1-d.padInfo.left;for(let Pe=0;Pe<P;++Pe)for(let ze=0;ze<K;++ze)for(let Qe=0;Qe<z;++Qe){let Ze=Qe-be,et=Math.max(0,Math.ceil(Ze/ae)),yt=Math.min(ne,(T+Ze)/ae);for(let lt=0;lt<j;++lt){let At=lt-Ne,Dt=Math.max(0,Math.ceil(At/re)),ts=Math.min(oe,(O+At)/re);for(let ut=0;ut<W;++ut){let gs=ut-Se,In=Math.max(0,Math.ceil(gs/me)),Xs=Math.min(Z,(G+gs)/me),ns=0;for(let ys=et;ys<yt;++ys){let _s=ys*ae-Ze;for(let Ks=Dt;Ks<ts;++Ks){let Ds=Ks*re-At;for(let ss=In;ss<Xs;++ss){let wa=ss*me-gs,En=A*Pe+b*ys+v*Ks+C*ss,ka=E*(T-1-_s)+R*(O-1-Ds)+F*(G-1-wa)+_*ze;for(let Ps=0;Ps<Q;++Ps){let qc=x[En+Ps],Xc=I[ka+Ps];ns+=qc*Xc}}}}h[f*Pe+m*Qe+g*lt+y*ut+ze]=ns}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var $X={kernelName:Uh,backendName:"cpu",kernelFunc:PX},FX=gt(Va,e=>Math.cos(e)),OX={kernelName:Va,backendName:"cpu",kernelFunc:FX},MX=gt(Ua,e=>Math.cosh(e)),zX={kernelName:Ua,backendName:"cpu",kernelFunc:MX};function LX(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,[u,d,p,h]=r.shape,f=a.shape[0],[m,g]=i,y=Le([f,m,g,h],"float32"),x=n.data.get(a.dataId).values,A=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,v=w.computeStrides(r.shape),C=w.computeStrides(y.shape);for(let I=0;I<f;I++){let E=I*4,R=x[E],F=x[E+1],_=x[E+2],P=x[E+3],T=A[I];if(T>=u)continue;let O=m>1?(_-R)*(d-1)/(m-1):0,G=g>1?(P-F)*(p-1)/(g-1):0;for(let K=0;K<m;K++){let z=m>1?R*(d-1)+K*O:.5*(R+_)*(d-1);if(z<0||z>d-1){for(let j=0;j<g;j++)for(let W=0;W<h;W++){let Q=W+j*C[2]+K*C[1]+I*C[0];y.values[Q]=c}continue}if(l==="bilinear"){let j=Math.floor(z),W=Math.ceil(z),Q=z-j;for(let ne=0;ne<g;ne++){let oe=g>1?F*(p-1)+ne*G:.5*(F+P)*(p-1);if(oe<0||oe>p-1){for(let me=0;me<h;me++){let be=me+ne*C[2]+K*C[1]+I*C[0];y.values[be]=c}continue}let Z=Math.floor(oe),ae=Math.ceil(oe),re=oe-Z;for(let me=0;me<h;me++){let be=me+Z*v[2]+j*v[1]+T*v[0],Ne=b[be];be=me+ae*v[2]+j*v[1]+T*v[0];let Se=b[be];be=me+Z*v[2]+W*v[1]+T*v[0];let Pe=b[be];be=me+ae*v[2]+W*v[1]+T*v[0];let ze=b[be],Qe=Ne+(Se-Ne)*re,Ze=Pe+(ze-Pe)*re;be=me+ne*C[2]+K*C[1]+I*C[0],y.values[be]=Qe+(Ze-Qe)*Q}}}else for(let j=0;j<g;++j){let W=g>1?F*(p-1)+j*G:.5*(F+P)*(p-1);if(W<0||W>p-1){for(let oe=0;oe<h;oe++){let Z=oe+j*C[2]+K*C[1]+I*C[0];y.values[Z]=c}continue}let Q=Math.round(W),ne=Math.round(z);for(let oe=0;oe<h;oe++){let Z=oe+Q*v[2]+ne*v[1]+T*v[0],ae=oe+j*C[2]+K*C[1]+I*C[0];y.values[ae]=b[Z]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var BX={kernelName:bi,backendName:"cpu",kernelFunc:LX};function WX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Re(r,"cumsum");let l=N.getAxesPermutation([a],r.shape.length),c=r;l!=null&&(c=Gs({inputs:{x:r},backend:n,attrs:{perm:l}}));let u=N.getInnerMostAxes(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let d=Wn(c.dtype,"int32"),p=w.makeZerosTypedArray(w.sizeFromShape(c.shape),d),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)p[A]=o?0:h[A];else{let b=m(y,x-1);p[A]=o?h[b]+p[b]:h[A]+p[b]}}let g=n.makeTensorInfo(c.shape,d,p);if(l!=null){let y=N.getUndoAxesPermutation(l),x=Gs({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),x}return g}var VX={kernelName:xi,backendName:"cpu",kernelFunc:WX};function UX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=ax(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=ES(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var GX={kernelName:Gh,backendName:"cpu",kernelFunc:UX};function HX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;w.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],d=l*a,p=c*a,h=u/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*d*p*h),g=0;for(let y=0;y<i;++y)for(let x=0;x<d;++x){let A=Math.floor(x/a),b=x%a;for(let v=0;v<p;++v){let C=Math.floor(v/a),I=v%a,E=(b*a+I)*h;for(let R=0;R<h;++R){let _=R+E+u*(C+c*(A+l*y));m[g++]=f[_]}}}return n.makeTensorInfo([i,d,p,h],r.dtype,m)}var jX={kernelName:vi,backendName:"cpu",kernelFunc:HX};function b7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s;Re([r,a],"depthwiseConv2DNative");let u=w.computeStrides(r.shape),d=w.computeStrides(a.shape),p=l;p==null&&(p=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let h=N.computeConv2DInfo(r.shape,a.shape,o,p,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=h,A=x.left,b=x.top,v=h.outChannels/h.inChannels,C=new rn(h.outShape,r.dtype),I=n.data.get(r.dataId).values,E=n.data.get(a.dataId).values,R=C.values;for(let F=0;F<h.batchSize;++F){let _=F*u[0],P=F*C.strides[0];for(let T=0;T<h.outHeight;++T){let O=P+T*C.strides[1],G=T*h.strideHeight-b;for(let K=0;K<f;++K){let z=G+K*g;if(z<0||z>=h.inHeight)continue;let j=K*d[0],W=_+z*u[1];for(let Q=0;Q<h.outWidth;++Q){let ne=O+Q*C.strides[2],oe=Q*h.strideWidth-A;for(let Z=0;Z<m;++Z){let ae=oe+Z*y;if(ae<0||ae>=h.inWidth)continue;let re=j+Z*d[1],me=W+ae*h.inChannels,be=ne,Ne=re;for(let Se=0;Se<h.inChannels;++Se){let Pe=I[me+Se];for(let ze=0;ze<v;++ze)R[be+ze]+=Pe*E[Ne+ze];be+=v,Ne+=v}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var qX={kernelName:Ga,backendName:"cpu",kernelFunc:b7};function XX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s;Re([r,a],"depthwiseConv2dNativeBackpropFilter");let d=N.computeConv2DInfo(r.shape,u,o,i,l,c,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new rn(d.filterShape,"float32"),y=d.padInfo.left,x=d.padInfo.top,A=d.outChannels/d.inChannels,b=n.data.get(r.dataId).values,v=new rn(r.shape,r.dtype,b),C=n.data.get(a.dataId).values,I=new rn(a.shape,a.dtype,C);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((x-E)/p)),F=Math.min(d.outHeight,(d.inHeight+x-E)/p);for(let _=0;_<m;++_){let P=Math.max(0,Math.ceil((y-_)/h)),T=Math.min(d.outWidth,(d.inWidth+y-_)/h);for(let O=0;O<d.outChannels;++O){let G=Math.trunc(O/A),K=O%A,z=0;for(let j=0;j<d.batchSize;++j)for(let W=R;W<F;++W){let Q=E+W*p-x;for(let ne=P;ne<T;++ne){let oe=_+ne*h-y;z+=v.get(j,Q,oe,G)*I.get(j,W,ne,O)}}g.set(z,E,_,G,K)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var KX={kernelName:Hh,backendName:"cpu",kernelFunc:XX};function ZX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s;Re([r,a],"depthwiseConv2DNativeBackpropInput");let d=w.computeStrides(r.shape),p=w.computeStrides(a.shape),h=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),f=new rn(h.inShape,"float32"),m=f.values,[g,y,x]=f.strides,A=n.data.get(r.dataId).values,[b,v,C]=d,I=n.data.get(a.dataId).values,[E,R,F]=p,{batchSize:_,filterHeight:P,filterWidth:T,inChannels:O,inHeight:G,inWidth:K,outChannels:z,outHeight:j,outWidth:W,strideHeight:Q,strideWidth:ne}=h,oe=P-1-h.padInfo.top,Z=T-1-h.padInfo.left,ae=z/O;for(let re=0;re<_;++re)for(let me=0;me<O;++me)for(let be=0;be<G;++be){let Ne=be-oe,Se=Math.max(0,Math.ceil(Ne/Q)),Pe=Math.min(j,(P+Ne)/Q);for(let ze=0;ze<K;++ze){let Qe=ze-Z,Ze=Math.max(0,Math.ceil(Qe/ne)),et=Math.min(W,(T+Qe)/ne),yt=0;for(let lt=Se;lt<Pe;++lt){let At=lt*Q-Ne;for(let Dt=Ze;Dt<et;++Dt){let ts=Dt*ne-Qe,ut=b*re+v*lt+C*Dt,gs=E*(P-1-At)+R*(T-1-ts)+F*me;for(let In=0;In<ae;++In){let Xs=me*ae+In,ns=A[ut+Xs],ys=I[gs+In];yt+=ns*ys}}}m[g*re+y*be+x*ze+me]=yt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var YX={kernelName:jh,backendName:"cpu",kernelFunc:ZX};function JX(e){let{inputs:t,backend:n}=e,{x:s}=t,r=w.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=Le([r,r],s.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*r+c]=a[c];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var QX={kernelName:qh,backendName:"cpu",kernelFunc:JX},eK={kernelName:Ad,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,d=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:A,strideHeight:b,strideWidth:v,filterHeight:C,filterWidth:I,dilationHeight:E,dilationWidth:R,outShape:F}=N.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),_=w.sizeFromShape(F),P=F.length,T=w.getArrayFromDType(s.dtype,_);for(let G=0;G<h;++G)for(let K=0;K<y;++K){let z=K*b-A.top;for(let j=0;j<x;++j){let W=j*v-A.left;for(let Q=0;Q<g;++Q){let ne=Number.MIN_SAFE_INTEGER;for(let Z=0;Z<C;++Z){let ae=z+Z*E;if(ae>=0&&ae<f)for(let re=0;re<I;++re){let me=W+re*R;if(me>=0&&me<m){let be=w.locToIndex([G,ae,me,Q],u,w.computeStrides(s.shape)),Ne=w.locToIndex([Z,re,Q],p,w.computeStrides(r.shape)),Se=c[be]+d[Ne];Se>ne&&(ne=Se)}}}let oe=w.locToIndex([G,K,j,Q],P,w.computeStrides(F));T[oe]=ne}}}return{dataId:l.write(w.toTypedArray(T,s.dtype),F,s.dtype),shape:F,dtype:s.dtype}}},tK={kernelName:Kh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=w.toNestedArray(s.shape,c.data.get(s.dataId).values),d=w.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:v,filterWidth:C,dilationHeight:I,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);w.assert(a.rank===R.length,()=>`Error in ${Kh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let F=w.toNestedArray(R,c.data.get(a.dataId).values),_=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<p;++T)for(let O=0;O<g;++O){let G=O*A-x.top;for(let K=0;K<y;++K){let z=K*b-x.left;for(let j=0;j<m;++j){let W=Number.MIN_SAFE_INTEGER,Q=0,ne=0;for(let oe=0;oe<v;++oe){let Z=G+oe*I;if(Z>=0&&Z<h)for(let ae=0;ae<C;++ae){let re=z+ae*E;if(re>=0&&re<f){let me=u[T][Z][re][j]+d[oe][ae][j];me>W&&(W=me,Q=oe,ne=ae)}}}_[Q][ne][j]+=F[T][O][K][j]}}}return{dataId:c.write(w.toTypedArray(_,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},nK={kernelName:Xh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=w.toNestedArray(s.shape,c.data.get(s.dataId).values),d=w.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:v,filterWidth:C,dilationHeight:I,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);w.assert(a.rank===R.length,()=>`Error in ${Xh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let F=w.toNestedArray(R,c.data.get(a.dataId).values),_=w.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<p;++T)for(let O=0;O<g;++O){let G=O*A-x.top;for(let K=0;K<y;++K){let z=K*b-x.left;for(let j=0;j<m;++j){let W=Number.MIN_SAFE_INTEGER,Q=G<0?0:G,ne=z<0?0:z;for(let oe=0;oe<v;++oe){let Z=G+oe*I;if(Z>=0&&Z<h)for(let ae=0;ae<C;++ae){let re=z+ae*E;if(re>=0&&re<f){let me=u[T][Z][re][j]+d[oe][ae][j];me>W&&(W=me,Q=Z,ne=re)}}}_[T][Q][ne][j]+=F[T][O][K][j]}}}return{dataId:c.write(w.toTypedArray(_,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function kp(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"sum");let i;r.dtype==="bool"?i=Ko({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Ur({inputs:{x:r},backend:n});let l=i.shape.length,c=w.parseAxisParam(a,i.shape),u=N.getAxesPermutation(c,l),d=c,p=i;u!=null&&(p=Gs({inputs:{x:i},backend:n,attrs:{perm:u}}),d=N.getInnerMostAxes(d.length,l)),N.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=N.computeOutAndReduceShapes(p.shape,d),m=N.upcastType(p.dtype,"int32"),g=Om(n,h,m),y=w.sizeFromShape(f),x=n.data.get(g.dataId).values,A=n.data.get(p.dataId).values;for(let b=0;b<x.length;++b){let v=b*y,C=0;for(let I=0;I<y;++I)C+=A[v+I];x[b]=C}if(o){let b=N.expandShapeToKeepDim(g.shape,c),v=g;g=Ot({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(i),u!=null&&n.disposeIntermediateTensorInfo(p),g}var sK={kernelName:bo,backendName:"cpu",kernelFunc:kp};function rK(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:x}=N.getEinsumPermutation(h,l[g]),A;N.isIdentityPermutation(y)?A=a[g]:(A=Gs({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(A.shape,b)||(A=Ot({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),p===null?p=A:(p=Mm({inputs:{a:A,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=kp({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var aK={kernelName:xd,backendName:"cpu",kernelFunc:rK};function oK(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Re([s,r],"eluGrad");let a=new Float32Array(w.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let c=o[l];c>=1?a[l]=i[l]:a[l]=i[l]*(c+1)}return n.makeTensorInfo(r.shape,"float32",a)}var iK={kernelName:Zh,backendName:"cpu",kernelFunc:oK},lK=N.ERF_P,uK=N.ERF_A1,cK=N.ERF_A2,dK=N.ERF_A3,pK=N.ERF_A4,hK=N.ERF_A5,fK=gt(Au,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+lK*n);return t*(1-((((hK*s+pK)*s+dK)*s+cK)*s+uK)*s*Math.exp(-n*n))}),mK={kernelName:Au,backendName:"cpu",kernelFunc:fK};function Lm(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),Ot({inputs:{x:r},backend:n,attrs:{shape:i}})}var gK={kernelName:ki,backendName:"cpu",kernelFunc:Lm},yK=en((e,t)=>e/t),fx=wn(Ha,yK),mx={kernelName:Ha,backendName:"cpu",kernelFunc:fx};function v7(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[r,a],u=w.sizeFromShape(c),d=w.getTypedArrayFromDType("float32",u),p=w.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){let y=Tl({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=Tl({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),A=Ss({inputs:{real:y,imag:x},backend:n}),{real:b,imag:v}=AK(A,t,n),C=N.mergeRealAndImagArrays(b,v);for(let I=0;I<a;I++){let E=N.getComplexWithIndex(C,I);d[g*a+I]=E.real,p[g*a+I]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(A)}let h=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",p),m=Ss({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function AK(e,t,n){let s=w.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(xK(s)){let i=gx(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(l,"float32",i.real),u=n.makeTensorInfo(l,"float32",i.imag),d=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),p=Ur({inputs:{x:d},backend:n}),h=mx.kernelFunc({inputs:{a:c,b:d},backend:n}),f=mx.kernelFunc({inputs:{a:u,b:p},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=N.mergeRealAndImagArrays(a,o),l=bK(i,s,t);return N.splitRealAndImagArrays(l)}}function xK(e){return(e&e-1)===0}function gx(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=N.mergeRealAndImagArrays(e,t),o=n/2,i=N.complexWithEvenIndex(a),l=i.real,c=i.imag,u=[l.length],d=r.makeTensorInfo(u,"float32",l),p=r.makeTensorInfo(u,"float32",c),h=Ss({inputs:{real:d,imag:p},backend:r}),f=N.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),A=r.makeTensorInfo(y,"float32",g),b=Ss({inputs:{real:x,imag:A},backend:r}),v=gx(l,c,o,s,r),C=v.real,I=v.imag,E=[C.length],R=r.makeTensorInfo(E,"float32",C),F=r.makeTensorInfo(E,"float32",I),_=Ss({inputs:{real:R,imag:F},backend:r}),P=gx(m,g,o,s,r),T=P.real,O=P.imag,G=[T.length],K=r.makeTensorInfo(G,"float32",T),z=r.makeTensorInfo(G,"float32",O),j=Ss({inputs:{real:K,imag:z},backend:r}),W=N.exponents(n,s),Q=[W.real.length],ne=r.makeTensorInfo(Q,"float32",W.real),oe=r.makeTensorInfo(Q,"float32",W.imag),Z=Ss({inputs:{real:ne,imag:oe},backend:r}),ae=Mm({inputs:{a:Z,b:j},backend:r}),re=vp({inputs:{a:_,b:ae},backend:r}),me=dx({inputs:{a:_,b:ae},backend:r}),be=Cl({inputs:{input:re},backend:r}),Ne=Cl({inputs:{input:me},backend:r}),Se=uc({inputs:{input:re},backend:r}),Pe=uc({inputs:{input:me},backend:r}),ze=cc({inputs:[be,Ne],backend:r,attrs:{axis:0}}),Qe=cc({inputs:[Se,Pe],backend:r,attrs:{axis:0}}),Ze=r.data.get(ze.dataId).values,et=r.data.get(Qe.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(Se),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Pe),r.disposeIntermediateTensorInfo(ze),r.disposeIntermediateTensorInfo(Qe),{real:Ze,imag:et}}function bK(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=N.exponent(r*i,t,n),c=N.getComplexWithIndex(e,i);a+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}n&&(a/=t,o/=t),N.assignToTypedArray(s,a,o,r)}return s}function vK(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Ot({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=v7(i,!1,n),c=Ot({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var wK={kernelName:Yh,backendName:"cpu",kernelFunc:vK};function yx(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||w.inferDtype(r),i=w.getArrayFromDType(o,w.sizeFromShape(s));return IK(i,r,o),t.makeTensorInfo(s,o,i)}var kK={kernelName:xu,backendName:"cpu",kernelFunc:yx};function IK(e,t,n){e.fill(t)}var SK={kernelName:Si,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[o,i,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let p=0;p<o;p++){let h=p*l*i*c;for(let f=0;f<i;f++){let m=f*(l*c);for(let g=0;g<l;g++){let y=g*c;for(let x=0;x<c;x++){let A=Math.round(l-g-1),b=h+m+y+x,v=u[b];if(A>=0&&A<l){let C=A*c,I=h+m+C+x;v=u[I]}a[b]=v}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},CK=en((e,t)=>Math.floor(e/t)),TK=wn(Ka,CK,null,"int32"),NK={kernelName:Ka,backendName:"cpu",kernelFunc:TK};function EK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=x7({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=vp({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=px(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var RK={kernelName:No,backendName:"cpu",kernelFunc:EK};function _K(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=b7({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=vp({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=px(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var DK={kernelName:Eo,backendName:"cpu",kernelFunc:_K};function PK(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=w.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,c,u,d]=N.prepareAndValidate(s,r);if(c===0)return n.makeTensorInfo(l,s.dtype,[]);let p=n.data.get(r.dataId).values,h=n.bufferSync(s),f=MS(p,h,s.dtype,c,i,u,d,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var $K={kernelName:Ti,backendName:"cpu",kernelFunc:PK};function FK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Re([r,a],"gatherV2");let l=w.parseAxisParam(o,r.shape)[0],c=n.data.get(a.dataId).values,u=r.shape[l];for(let b=0;b<c.length;++b){let v=c[b];w.assert(v<=u-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);let p=w.sizeFromShape(a.shape),h=N.segment_util.collectGatherOpShapeInfo(r,a,l,d),f=Ot({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Ot({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],y=n.bufferSync(m),x=n.bufferSync(f),A=zS(x,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,A.dtype,A.values)}var OK={kernelName:Ci,backendName:"cpu",kernelFunc:FK};function MK(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Ot({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=v7(i,!0,n),c=Ot({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var zK={kernelName:Jh,backendName:"cpu",kernelFunc:MK},LK=gt(bu,e=>Number.isFinite(e)?1:0,"bool"),BK={kernelName:bu,backendName:"cpu",kernelFunc:LK},WK=gt(vu,e=>Math.abs(e)===1/0?1:0,"bool"),VK={kernelName:vu,backendName:"cpu",kernelFunc:WK},UK=gt(wu,e=>Number.isNaN(e)?1:0,"bool"),GK={kernelName:wu,backendName:"cpu",kernelFunc:UK};function HK(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=US(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var jK={kernelName:Qh,backendName:"cpu",kernelFunc:HK},qK=gt(ku,e=>Math.log1p(e)),XK={kernelName:ku,backendName:"cpu",kernelFunc:qK},KK=en((e,t)=>e&&t),ZK=wn(_i,KK,null,"bool"),YK={kernelName:_i,backendName:"cpu",kernelFunc:ZK},JK=gt(Iu,e=>e?0:1,"bool"),QK={kernelName:Iu,backendName:"cpu",kernelFunc:JK},eZ=en((e,t)=>e||t),tZ=wn(vd,eZ,null,"bool"),nZ={kernelName:vd,backendName:"cpu",kernelFunc:tZ};function sZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Re(r,"LRN");let c=r.shape[3],u=c-1,d=n.data.get(r.dataId).values,p=w.sizeFromShape(r.shape),h=new Float32Array(p);function f(m){let g=m%c,y=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,u),A=0;for(;y<=x;y++){let b=d[y];A+=b*b}return A}for(let m=0;m<p;m++){let g=f(m),y=d[m]*Math.pow(o+i*g,-l);h[m]=y}return n.makeTensorInfo(r.shape,r.dtype,h)}var rZ={kernelName:wd,backendName:"cpu",kernelFunc:sZ};function aZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s;Re(o,"LRNGrad");let d=w.sizeFromShape(o.shape),p=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),y=d;for(let x=0;x<y;x++){let A=x%p,b=x-A+Math.max(0,A-i),v=x-A+Math.min(p,A+i+1),C=0;for(let I=b;I<v;I++)C+=Math.pow(f[I],2);C=c*C+l;for(let I=b;I<v;I++){let E=-2*c*u*f[I]*m[x]/C;x===I&&(E+=Math.pow(C,-u)),E*=h[x],g[I]+=E}}return n.makeTensorInfo(o.shape,r.dtype,g)}var oZ={kernelName:ef,backendName:"cpu",kernelFunc:aZ};function w7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,c=l.length,u=w.parseAxisParam(a,l),d=u,p=N.getAxesPermutation(d,c),h=i.data.get(r.dataId).values;if(p!=null){let b=new Array(c);for(let v=0;v<b.length;v++)b[v]=l[p[v]];h=lx(h,l,r.dtype,p,b),d=N.getInnerMostAxes(d.length,c),l=b}Re(r,"max"),N.assertAxesAreInnerMostDims("max",d,c);let[f,m]=N.computeOutAndReduceShapes(l,d),g=w.sizeFromShape(m),y=HS(h,g,f,r.dtype),x=i.write(y,f,r.dtype),A=f;return o&&(A=N.expandShapeToKeepDim(f,u)),{dataId:x,shape:A,dtype:r.dtype}}var iZ={kernelName:to,backendName:"cpu",kernelFunc:w7};function lZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Re(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;w.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))d=Ur({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=hx(p,r.shape,r.dtype,h,u,"max");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var uZ={kernelName:so,backendName:"cpu",kernelFunc:lZ};function cZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Re(r,"maxPool3d");let u=N.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=A7(d,r.shape,r.dtype,w.computeStrides(r.shape),u,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var dZ={kernelName:kd,backendName:"cpu",kernelFunc:cZ};function pZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Re([r,a],"maxPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=n.bufferSync(a),p=tX(d,u),h=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,x=u.dilationWidth,A=u.effectiveFilterDepth,b=u.effectiveFilterHeight,v=u.effectiveFilterWidth,C=A-1-u.padInfo.front,I=v-1-u.padInfo.left,E=b-1-u.padInfo.top,R=Le(a.shape,"float32"),F=n.bufferSync(r);for(let _=0;_<u.batchSize;++_)for(let P=0;P<u.inChannels;++P)for(let T=0;T<u.inDepth;++T)for(let O=0;O<u.inHeight;++O)for(let G=0;G<u.inWidth;++G){let K=T-C,z=O-E,j=G-I,W=0;for(let Q=0;Q<A;Q+=g){let ne=(K+Q)/h;if(!(ne<0||ne>=u.outDepth||Math.floor(ne)!==ne))for(let oe=0;oe<b;oe+=y){let Z=(z+oe)/f;if(!(Z<0||Z>=u.outHeight||Math.floor(Z)!==Z))for(let ae=0;ae<v;ae+=x){let re=(j+ae)/m;if(re<0||re>=u.outWidth||Math.floor(re)!==re)continue;let me=A*b*v-1-p.get(_,ne,Z,re,P),be=Q*b*v+oe*v+ae,Ne=me===be?1:0;if(Ne===0)continue;W+=F.get(_,ne,Z,re,P)*Ne}}}R.set(W,_,T,O,G,P)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var hZ={kernelName:nf,backendName:"cpu",kernelFunc:pZ};function fZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Re([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=n.data.get(i.dataId).values,f=Le(p.outShape,i.dtype,y7(h,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,x=p.dilationWidth,A=p.effectiveFilterHeight,b=p.effectiveFilterWidth,v=b-1-p.padInfo.left,C=A-1-p.padInfo.top,I=Le(i.shape,"float32"),E=n.data.get(r.dataId).values,R=Le(r.shape,"float32",E);for(let F=0;F<p.batchSize;++F)for(let _=0;_<p.inChannels;++_)for(let P=0;P<p.inHeight;++P)for(let T=0;T<p.inWidth;++T){let O=P-C,G=T-v,K=0;for(let z=0;z<A;z+=y){let j=(O+z)/m;if(!(j<0||j>=p.outHeight||Math.floor(j)!==j))for(let W=0;W<b;W+=x){let Q=(G+W)/g;if(Q<0||Q>=p.outWidth||Math.floor(Q)!==Q)continue;let ne=A*b-1-f.get(F,j,Q,_),oe=z*b+W,Z=ne===oe?1:0;if(Z===0)continue;K+=R.get(F,j,Q,_)*Z}}I.set(K,F,P,T,_)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var mZ={kernelName:tf,backendName:"cpu",kernelFunc:fZ};function gZ(e,t,n,s,r){let a=w.computeStrides(t),o=hx(e,t,n,a,r,"max"),i=y7(e,t,n,r,!0,s);return[o.values,i.values]}var yZ={kernelName:sf,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Re(s,"MaxPoolWithArgmax");let c=l.data.get(s.dataId).values,u=N.computePool2DInfo(s.shape,r,a,[1,1],o),[d,p]=gZ(c,s.shape,s.dtype,i,u),h=l.write(d,u.outShape,s.dtype),f=l.write(p,u.outShape,s.dtype);return[{dataId:h,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function AZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=w.parseAxisParam(a,r.shape),c=N.computeOutAndReduceShapes(r.shape,i)[1],u=w.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=Ko({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(h);let f=fx({inputs:{a:h,b:p},backend:n});d.push(f);let m=kp({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var xZ={kernelName:ro,backendName:"cpu",kernelFunc:AZ};function bZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Re(r,"min");let i=w.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Gs({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let v=m[x+b];(Number.isNaN(v)||v<A)&&(A=v)}f[y]=A}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),x=Ot({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var vZ={kernelName:ao,backendName:"cpu",kernelFunc:bZ};function wZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Re(r,"mirrorPad");let i=a.map((A,b)=>A[0]+r.shape[b]+A[1]),l=a.map(A=>A[0]),c=a.map((A,b)=>A[0]+r.shape[b]),u=o==="reflect"?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,h=w.computeStrides(r.shape),f=w.sizeFromShape(i),m=i.length,g=w.computeStrides(i),y=w.getTypedArrayFromDType(r.dtype,f);for(let A=0;A<f;A++){let b=w.indexToLoc(A,m,g);for(let C=0;C<m;C++)b[C]<l[C]?b[C]=l[C]*2-b[C]-u:b[C]>=c[C]&&(b[C]=(c[C]-1)*2-b[C]+u);b=b.map((C,I)=>C-l[I]);let v=w.locToIndex(b,p,h);y[A]=d[v]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}var kZ={kernelName:io,backendName:"cpu",kernelFunc:wZ},IZ=en((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),SZ=wn(Su,IZ),CZ={kernelName:Su,backendName:"cpu",kernelFunc:SZ},TZ=hi(_h());function k7(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=w.parseAxisParam([i],r.shape),c=w7({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=N.expandShapeToKeepDim(c.shape,l),d=Ot({inputs:{x:c},backend:n,attrs:{shape:u}}),p=dx({inputs:{a:r,b:d},backend:n}),h=$S({inputs:{x:p},backend:n}),f=kp({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=Ot({inputs:{x:f},backend:n,attrs:{shape:u}}),g=fx({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var NZ={kernelName:vo,backendName:"cpu",kernelFunc:k7};function EZ(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Re(r,"multinomial");let l=i?r:k7({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],d=n.data.get(l.dataId).values,p=[c,a],h=w.makeZerosTypedArray(w.sizeFromShape(p),"int32");for(let f=0;f<c;++f){let m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let A=1;A<g.length;++A)g[A]=g[A-1]+d[m+A];let y=TZ.alea(o.toString()),x=f*a;for(let A=0;A<a;++A){let b=y();h[x+A]=g.length;for(let v=0;v<g.length;v++)if(b<g[v]){h[x+A]=v;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",h)}var RZ={kernelName:rf,backendName:"cpu",kernelFunc:EZ},_Z=tr.nonMaxSuppressionV3Impl;function DZ(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Re(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,{selectedIndices:d}=_Z(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var PZ={kernelName:$i,backendName:"cpu",kernelFunc:DZ},$Z=tr.nonMaxSuppressionV4Impl;function FZ(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s;Re(r,"NonMaxSuppressionPadded");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:h}=$Z(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var OZ={kernelName:Cu,backendName:"cpu",kernelFunc:FZ},MZ=tr.nonMaxSuppressionV5Impl;function zZ(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s;Re(r,"NonMaxSuppressionWithScore");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=MZ(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var LZ={kernelName:Fi,backendName:"cpu",kernelFunc:zZ};function BZ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;Re(r,"oneHot");let l=w.sizeFromShape(r.shape),c=new Float32Array(l*a);c.fill(i);let u=n.data.get(r.dataId).values;for(let d=0;d<l;++d)u[d]>=0&&u[d]<a&&(c[d*a+u[d]]=o);return n.makeTensorInfo([...r.shape,a],"int32",c)}var WZ={kernelName:Mi,backendName:"cpu",kernelFunc:BZ};function Bm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Cl({inputs:{input:s},backend:n}),a=Bm({inputs:{x:r},backend:n}),o=uc({inputs:{input:s},backend:n}),i=Bm({inputs:{x:o},backend:n}),l=Ss({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return yx({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var VZ={kernelName:el,backendName:"cpu",kernelFunc:Bm};function I7(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Cl({inputs:{input:s},backend:n}),a=I7({inputs:{x:r},backend:n}),o=uc({inputs:{input:s},backend:n}),i=Bm({inputs:{x:o},backend:n}),l=Ss({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return yx({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var UZ={kernelName:Oi,backendName:"cpu",kernelFunc:I7};function S7(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Lm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Lm({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=cc({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var GZ={kernelName:zi,backendName:"cpu",kernelFunc:S7};function HZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Re(r,"pad");let i=a.map((x,A)=>x[0]+r.shape[A]+x[1]),l=a.map(x=>x[0]),c=n.data.get(r.dataId).values,u=w.sizeFromShape(r.shape),d=r.shape.length,p=w.computeStrides(r.shape),h=w.sizeFromShape(i),f=i.length,m=w.computeStrides(i),g=w.getTypedArrayFromDType(r.dtype,h);o!==0&&g.fill(o);for(let x=0;x<u;x++){let b=w.indexToLoc(x,d,p).map((C,I)=>C+l[I]),v=w.locToIndex(b,f,m);g[v]=c[x]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var C7={kernelName:uo,backendName:"cpu",kernelFunc:HZ},jZ=en((e,t)=>Math.pow(e,t)),qZ=wn(co,jZ),XZ={kernelName:co,backendName:"cpu",kernelFunc:qZ};function KZ(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=ux(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var ZZ={kernelName:Tu,backendName:"cpu",kernelFunc:KZ},YZ=gt(Nu,e=>1/e),JZ={kernelName:Nu,backendName:"cpu",kernelFunc:YZ};function QZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Re(r,"resizeBilinear");let l=w.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(w.sizeFromShape([d,c,u,f])),y=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],A=0,b=y[0]/x[0],v=y[1]/x[1];for(let C=0;C<d;C++)for(let I=0;I<c;I++){let E;o?E=b*(I+.5)-.5:E=b*I;let R=Math.max(0,Math.floor(E)),F=E-R,_=Math.min(p-1,Math.ceil(E)),P=C*l[0]+R*l[1],T=C*l[0]+_*l[1];for(let O=0;O<u;O++){let G;o?G=v*(O+.5)-.5:G=v*O;let K=Math.max(0,Math.floor(G)),z=G-K,j=Math.min(h-1,Math.ceil(G)),W=P+K*l[2],Q=T+K*l[2],ne=P+j*l[2],oe=T+j*l[2];for(let Z=0;Z<f;Z++){let ae=m[W+Z],re=m[Q+Z],me=m[ne+Z],be=m[oe+Z],Ne=ae+(me-ae)*z,Se=re+(be-re)*z,Pe=Ne+(Se-Ne)*F;g[A++]=Pe}}}return n.makeTensorInfo([d,c,u,f],"float32",g)}var eY={kernelName:fo,backendName:"cpu",kernelFunc:QZ};function tY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Re([a,r],"resizeBilinearGrad");let i=w.computeStrides(r.shape),[l,c,u,d]=r.shape,[,p,h]=a.shape,f=new Float32Array(l*c*u*d),m=[o&&p>1?c-1:c,o&&h>1?u-1:u],g=[o&&p>1?p-1:p,o&&h>1?h-1:h],y=m[0]/g[0],x=m[1]/g[1],A=n.data.get(a.dataId).values,b=0;for(let v=0;v<l;v++){let C=v*i[0];for(let I=0;I<p;I++){let E=I*y,R=Math.floor(E),F=Math.min(Math.ceil(E),c-1),_=C+R*i[1],P=C+F*i[1],T=E-R,O=1-T;for(let G=0;G<h;G++){let K=G*x,z=Math.floor(K),j=Math.min(Math.ceil(K),u-1),W=K-z,Q=1-W,ne=_+z*i[2],oe=_+j*i[2],Z=P+z*i[2],ae=P+j*i[2],re=O*Q,me=O*W,be=T*Q,Ne=T*W;for(let Se=0;Se<d;Se++){let Pe=A[b++];f[ne+Se]+=Pe*re,f[oe+Se]+=Pe*me,f[Z+Se]+=Pe*be,f[ae+Se]+=Pe*Ne}}}}return n.makeTensorInfo([l,u,c,d],"float32",f)}var nY={kernelName:of,backendName:"cpu",kernelFunc:tY};function sY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Re(r,"resizeNearestNeighbor");let l=w.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*c*u*f),y=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],A=y[0]/x[0],b=y[1]/x[1],v=0;for(let C=0;C<d;C++){let I=C*l[0];for(let E=0;E<c;E++){let R=o?A*(E+.5):A*E,F=Math.min(p-1,a?Math.round(R):Math.floor(R));o&&(F=Math.max(0,F));let _=I+F*l[1];for(let P=0;P<u;P++){let T=o?b*(P+.5):b*P,O=Math.min(h-1,a?Math.round(T):Math.floor(T));o&&(O=Math.max(0,O));let G=_+O*l[2];for(let K=0;K<f;K++){let z=m[G+K];g[v++]=z}}}}return n.makeTensorInfo([d,c,u,f],r.dtype,g)}var rY={kernelName:Eu,backendName:"cpu",kernelFunc:sY};function aY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Re([a,r],"resizeNearestNeighborGrad");let i=w.computeStrides(r.shape),l=w.computeStrides(a.shape),[c,u,d,p]=r.shape,[,h,f]=a.shape,m=new Float32Array(c*u*d*p),g=n.data.get(a.dataId).values,y=[o&&h>1?u-1:u,o&&f>1?d-1:d],x=[o&&h>1?h-1:h,o&&f>1?f-1:f],A=y[0]/x[0],b=y[1]/x[1],v=1/A,C=1/b,I=Math.ceil(v)*2+2,E=Math.ceil(C)*2+2;for(let R=0;R<c;R++){let F=R*i[0];for(let _=0;_<u;_++){let P=F+_*i[1],T=Math.floor(_*v),O=Math.floor(T-I/2);for(let G=0;G<d;G++){let K=P+G*i[2],z=Math.floor(G*C),j=Math.floor(z-E/2);for(let W=0;W<p;W++){let Q=0;for(let ne=0;ne<I;ne++){let oe=ne+O;if(oe<0||oe>=h)continue;let Z=F+oe*l[1],ae=oe*A,re=Math.min(u-1,o?Math.round(ae):Math.floor(ae));if(_===re)for(let me=0;me<E;me++){let be=me+j;if(be<0||be>=f)continue;let Ne=Z+be*l[2],Se=be*b,Pe=Math.min(d-1,o?Math.round(Se):Math.floor(Se));G===Pe&&(Q+=g[Ne+W])}}m[K+W]=Q}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var oY={kernelName:af,backendName:"cpu",kernelFunc:aY};function iY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Re(r,"reverse");let o=r.shape.length,i=w.parseAxisParam(a,r.shape);if(o===0)return Ur({inputs:{x:r},backend:n});let l=new rn(r.shape,r.dtype),c=n.bufferSync(r);for(let u=0;u<l.size;u++){let d=l.indexToLoc(u),p=d.slice();i.forEach(h=>p[h]=r.shape[h]-1-p[h]),l.set(c.get(...p),...d)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var lY={kernelName:Wi,backendName:"cpu",kernelFunc:iY},uY={kernelName:tl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[c,u,d,p]=s.shape,[h,f]=N.getImageCenter(o,u,d),m=255,g=Math.sin(r),y=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<c;b++){let v=b*d*u*p;for(let C=0;C<u;C++){let I=C*(d*p);for(let E=0;E<d;E++){let R=E*p;for(let F=0;F<p;F++){let _=[c,C,E,F],P=_[2],T=_[1],O=(P-h)*y-(T-f)*g,G=(P-h)*g+(T-f)*y;O=Math.round(O+h),G=Math.round(G+f);let K=a;if(typeof a!="number"&&(F===3?K=m:K=a[F]),O>=0&&O<d&&G>=0&&G<u){let j=G*(d*p),W=O*p,Q=v+j+W+F;K=x[Q]}let z=v+I+R+F;l[z]=K}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},cY=gt(Vi,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),dY={kernelName:Vi,backendName:"cpu",kernelFunc:cY};function T7(e,t,n,s,r,a,o,i,l,c){let u=[s/r,r],d=e.values,p=t.values;if(s===0)return Le(n,t.dtype);let h=Le(u,t.dtype);h.values.fill(l);for(let f=0;f<a;f++){let m=[],g=0;for(let y=0;y<o;y++){let x=d[f*o+y];m.push(x),g+=x*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<r;y++)c?h.values[g*r+y]+=p[f*r+y]:h.values[g*r+y]=t.rank===0?p[0]:p[f*r+y]}return h}function pY(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=T7(h,f,o,d,c,l,i,u,0,p);return n.makeTensorInfo(o,m.dtype,m.values)}var hY={kernelName:Ui,backendName:"cpu",kernelFunc:pY};function fY(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Re([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=Wn(r.dtype,a.dtype),d=w.makeZerosTypedArray(w.sizeFromShape(r.shape),u),p=0,h=o===0||o>1||r.shape.length===1?1:w.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?d[p++]=l[f]:d[p++]=c[f];return n.makeTensorInfo(r.shape,u,d)}var mY={kernelName:Gi,backendName:"cpu",kernelFunc:fY},gY=N.SELU_SCALEALPHA,yY=N.SELU_SCALE,AY=gt(Ru,e=>e>=0?yY*e:gY*(Math.exp(e)-1)),xY={kernelName:Ru,backendName:"cpu",kernelFunc:AY},bY=gt(_u,e=>e<0?-1:e>0?1:0),vY={kernelName:_u,backendName:"cpu",kernelFunc:bY},wY=gt(yo,e=>Math.sin(e)),kY={kernelName:yo,backendName:"cpu",kernelFunc:wY},IY=gt(ji,e=>Math.sinh(e)),SY={kernelName:ji,backendName:"cpu",kernelFunc:IY},CY=11920928955078125e-23,N7=Math.log(CY)+2,TY=gt(Du,e=>{let t=e>-N7,n=e<N7,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),NY={kernelName:Du,backendName:"cpu",kernelFunc:TY};function EY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Re([r],"spaceToBatchND");let i=w.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<r.shape.length;++C)l.push([0,0]);let c=C7.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=Ot({inputs:{x:c},backend:n,attrs:{shape:u}}),x=Gs({inputs:{x:m},backend:n,attrs:{perm:d}}),v=Ot({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),v}var RY={kernelName:qi,backendName:"cpu",kernelFunc:EY};function _Y(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[d,p,h,f,m]=QS(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var DY={kernelName:Sd,backendName:"cpu",kernelFunc:_Y};function PY(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[c,u,d]=e7(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var $Y={kernelName:Pu,backendName:"cpu",kernelFunc:PY};function FY(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=cx(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var OY={kernelName:Cd,backendName:"cpu",kernelFunc:FY};function MY(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=cx(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var zY={kernelName:Td,backendName:"cpu",kernelFunc:MY};function LY(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=N.calculateShapes(a,r,i),h=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],y=T7(f,m,i,p,u,c,l,d,g,h);return n.makeTensorInfo(i,y.dtype,y.values)}var BY={kernelName:Nd,backendName:"cpu",kernelFunc:LY};function WY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=w.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=Tl({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[i]+=d,h})}var VY={kernelName:Xi,backendName:"cpu",kernelFunc:WY},UY={kernelName:$u,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Re(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},GY=gt(Co,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),HY={kernelName:Co,backendName:"cpu",kernelFunc:GY};function jY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s;Re(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),v;if(m)v=Ot({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=zt.computeOutShape(x,A,b),I=Tl({inputs:{x:r},backend:n,attrs:{begin:x,size:C}});v=Ot({inputs:{x:I},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(I)}else{let C=n.bufferSync(r),I=n7(h,C,b,x);v=n.makeTensorInfo(f,I.dtype,I.values)}return v}var qY={kernelName:Ki,backendName:"cpu",kernelFunc:jY};function XY(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.data.get(u.dataId).values,h=n.data.get(d.dataId).values,[f,m]=s7(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var KY={kernelName:Ed,backendName:"cpu",kernelFunc:XY};function ZY(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[c,u,d]=r7(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var YY={kernelName:lf,backendName:"cpu",kernelFunc:ZY};function JY(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=a7(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var QY={kernelName:uf,backendName:"cpu",kernelFunc:JY},eJ=gt(Zi,e=>Math.tan(e)),tJ={kernelName:Zi,backendName:"cpu",kernelFunc:eJ},nJ=gt(Io,e=>Math.tanh(e)),sJ={kernelName:Io,backendName:"cpu",kernelFunc:nJ};function rJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Re(r,"tile");let o=i7(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var aJ={kernelName:Jr,backendName:"cpu",kernelFunc:rJ};function oJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Re(r,"topk");let i=n.data.get(r.dataId).values,[l,c]=u7(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var iJ={kernelName:Yi,backendName:"cpu",kernelFunc:oJ};function lJ(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=n,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=w.computeStrides(r.shape),x=y[0],A=y[1],b=y[2],v=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(g));v.fill(l);let C=s.data.get(r.dataId).values,I=s.data.get(a.dataId).values;for(let R=0;R<u;++R){let F=a.shape[0]===1?I:I.subarray(R*8,R*8+8);for(let _=0;_<f;++_)for(let P=0;P<m;++P)for(let T=0;T<h;++T){let O,G=F[6]*P+F[7]*_+1;if(G===0)continue;let K=(F[0]*P+F[1]*_+F[2])/G,z=(F[3]*P+F[4]*_+F[5])/G,j=E7(K,p,i),W=E7(z,d,i);switch(o){case"nearest":O=fJ(C,d,p,x,A,b,R,W,j,T,l);break;case"bilinear":O=mJ(C,d,p,x,A,b,R,W,j,T,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let Q=R*x+_*A+P*b+T;v[Q]=O}return s.makeTensorInfo(g,r.dtype,v)}return{dataId:s.write(v,g,r.dtype),shape:r.shape,dtype:r.dtype}}var uJ={kernelName:Ji,backendName:"cpu",kernelFunc:lJ};function E7(e,t,n){switch(n){case"reflect":return cJ(e,t);case"wrap":return dJ(e,t);case"nearest":return hJ(e,t);case"constant":default:return pJ(e,t)}}function cJ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return w.clamp(0,n,t-1)}function dJ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return w.clamp(0,n,t-1)}function pJ(e,t){return e}function hJ(e,t){return w.clamp(0,e,t-1)}function Ip(e,t,n,s,r,a,o,i,l,c,u){let d=o*s+i*r+l*a+c;return 0<=i&&i<t&&0<=l&&l<n?e[d]:u}function fJ(e,t,n,s,r,a,o,i,l,c,u){let d=Math.round(i),p=Math.round(l);return Ip(e,t,n,s,r,a,o,d,p,c,u)}function mJ(e,t,n,s,r,a,o,i,l,c,u){let d=Math.floor(i),p=Math.floor(l),h=d+1,f=p+1,m=(f-l)*Ip(e,t,n,s,r,a,o,d,p,c,u)+(l-p)*Ip(e,t,n,s,r,a,o,d,f,c,u),g=(f-l)*Ip(e,t,n,s,r,a,o,h,p,c,u)+(l-p)*Ip(e,t,n,s,r,a,o,h,f,c,u);return(h-i)*m+(i-d)*g}function gJ(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Re(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:c}=c7(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var yJ={kernelName:cf,backendName:"cpu",kernelFunc:gJ};function AJ(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),c=0;for(let h=0;h<o;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o).fill(0),d=r.shape.slice();d[a]=1;let p=new Array(i);for(let h=0;h<p.length;h++){u[a]=h;let f=Tl({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});p[h]=Ot({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return p}var xJ={kernelName:Qi,backendName:"cpu",kernelFunc:AJ};function bJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Re(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,c=[],u=[],d=i-l,p=a;for(let f=0;f<d;++f){let m=Lm({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,u.push(m)}for(let f=0;f<o;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=DS({inputs:{a:g,b:p},backend:n}),x=Ko({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),A=Mm({inputs:{a:x,b:r},backend:n}),b=kp({inputs:{x:A},backend:n,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(g),u.push(y),u.push(x),u.push(A),u.push(b)}let h=S7({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var vJ={kernelName:Rd,backendName:"cpu",kernelFunc:bJ},wJ=[Eq,vj,_q,Pq,Tj,Fq,Mq,Lq,Wq,Uq,Hq,qq,Kq,Jq,eX,sX,aX,iX,uX,Tq,dX,hX,mX,yX,Sj,Ej,xX,wj,vX,kX,IX,CX,NX,RX,DX,$X,OX,zX,BX,VX,GX,jX,qX,KX,YX,QX,eK,tK,nK,aK,bq,iK,Rj,mK,_j,gK,Pj,wK,kK,SK,Fj,NK,RK,DK,$K,OK,Mj,Lj,kj,zK,wX,BK,VK,GK,vq,Wj,Uj,jK,Hj,XK,YK,QK,nZ,rZ,oZ,iZ,qj,uZ,dZ,hZ,mZ,yZ,xZ,vZ,Kj,kZ,CZ,RZ,Yj,Qj,PZ,OZ,LZ,tq,WZ,UZ,GZ,C7,XZ,kq,rq,ZZ,Ij,mx,JZ,Iq,Sq,Cq,eY,nY,rY,oY,lY,uY,dY,oq,hY,mY,xY,lq,vY,kY,SY,uq,NZ,NY,RY,DY,$Y,OY,zY,BY,VY,pq,UY,fq,HY,qY,KY,YY,QY,Aq,sK,tJ,sJ,aJ,iJ,uJ,nq,yJ,xJ,vJ,VZ];for(let e of wJ)Js(e);var R7={};Me(R7,{assertNotComplex:()=>pc,bindCanvasToFramebuffer:()=>$J,bindColorTextureToFramebuffer:()=>Hm,bindTextureToProgramUniformSampler:()=>H7,bindTextureUnit:()=>V7,bindVertexBufferToProgramAttribute:()=>bx,callAndCheck:()=>ke,canBeRepresented:()=>_7,createFragmentShader:()=>$7,createFramebuffer:()=>W7,createProgram:()=>F7,createStaticIndexBuffer:()=>z7,createStaticVertexBuffer:()=>M7,createTexture:()=>L7,createVertexShader:()=>P7,getBatchDim:()=>El,getExtensionOrThrow:()=>Cp,getFramebufferErrorMessage:()=>j7,getMaxTexturesInShader:()=>Z7,getNumChannels:()=>DJ,getProgramUniformLocation:()=>G7,getProgramUniformLocationOrThrow:()=>U7,getRowsCols:()=>Rl,getShapeAs3D:()=>jm,getTextureShapeFromLogicalShape:()=>X7,getWebGLDisjointQueryTimerVersion:()=>Y7,getWebGLErrorMessage:()=>D7,getWebGLMaxTextureSize:()=>K7,hasExtension:()=>Hs,isCapableOfRenderingToFloatTexture:()=>J7,isDownloadFloatTextureEnabled:()=>Q7,isReshapeFree:()=>Np,isWebGLFenceEnabled:()=>eC,isWebGLVersionEnabled:()=>wx,linkProgram:()=>O7,resetMaxTextureSize:()=>FJ,resetMaxTexturesInShader:()=>OJ,unbindColorTextureFromFramebuffer:()=>vx,unbindTextureUnit:()=>PJ,validateFramebuffer:()=>Tp,validateProgram:()=>Gm,validateTextureSize:()=>B7});var Nl={},Ax={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Wm(e,t){Nl[e]=t}function Nr(e,t){if(!(e in Nl)){let s=IJ(e,t);if(s!==null)Nl[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=Nl[e];return n==null||n.isContextLost()?(delete Nl[e],Nr(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Nl[e])}function kJ(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function IJ(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?kJ(e):t;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Nl[e]},!1),e===1?n.getContext("webgl",Ax)||n.getContext("experimental-webgl",Ax):n.getContext("webgl2",Ax)}var Vm=(e=>(e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH",e))(Vm||{}),ar=(e=>(e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD",e))(ar||{}),Fn=(e=>(e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",e))(Fn||{});function Sp(e,t){return[t,e]}function SJ(e,t){return e*t}function Um(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function dc(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function CJ(e,t){let[n,s]=dc(e,t);return n*s*4}function xx(e,t){let n=e,s,r,a,o,i,l,c,u,d,p;return Y().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,u=1,d=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function ke(e,t){let n=t();return Y().getBool("DEBUG")&&TJ(e),n}function TJ(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+D7(e,t))}var NJ=596e-10,EJ=65504;function _7(e){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||NJ<Math.abs(e)&&Math.abs(e)<EJ)}function D7(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Cp(e,t){return la(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function P7(e,t){let n=la(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ke(e,()=>e.shaderSource(n,t)),ke(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function $7(e,t){let n=la(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ke(e,()=>e.shaderSource(n,t)),ke(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw _J(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var RJ=/ERROR: [0-9]+:([0-9]+):/g;function _J(e,t){let n=RJ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((d,p)=>w.rightPad((p+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let l=o.slice(0,s-1),c=o.slice(s-1,s),u=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function F7(e){return la(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function O7(e,t){if(ke(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Gm(e,t){if(ke(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function M7(e,t){let n=la(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),ke(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function z7(e,t){let n=la(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),ke(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function DJ(){return Y().getNumber("WEBGL_VERSION")===2?1:4}function L7(e){return la(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function B7(e,t){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function W7(e){return la(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function bx(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),ke(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),ke(e,()=>e.enableVertexAttribArray(i)),!0)}function V7(e,t,n){q7(e,n),ke(e,()=>e.activeTexture(e.TEXTURE0+n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function PJ(e,t){q7(e,t),ke(e,()=>e.activeTexture(e.TEXTURE0+t)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function U7(e,t,n){return la(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function G7(e,t,n){return e.getUniformLocation(t,n)}function H7(e,t,n,s){ke(e,()=>V7(e,t,s)),ke(e,()=>e.uniform1i(n,s))}function $J(e){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ke(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Hm(e,t,n){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),ke(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function vx(e,t){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ke(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Tp(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+j7(e,t))}function j7(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function la(e,t,n){let s=ke(e,()=>t());if(s==null)throw new Error(n);return s}function q7(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function El(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function Rl(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function jm(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[El(e),...Rl(e)]),t}function X7(e,t=!1){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?w.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let s=w.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=El(e),a=2,o=2;return e.length&&([a,o]=Rl(e)),s=r*(a/2)*(o/2),w.sizeToSquarishShape(s).map(i=>i*2)}return w.sizeToSquarishShape(s)}function qm(e){return e%2===0}function Np(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||qm(n)&&qm(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&qm(e[0])&&qm(t[0])}var Xm,Km;function K7(e){if(Xm==null){let t=Nr(e);Xm=t.getParameter(t.MAX_TEXTURE_SIZE)}return Xm}function FJ(){Xm=null}function OJ(){Km=null}function Z7(e){if(Km==null){let t=Nr(e);Km=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Km)}function Y7(e){if(e===0)return 0;let t,n=Nr(e);return Hs(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Hs(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Hs(e,t){return e.getExtension(t)!=null}function wx(e){try{if(Nr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function J7(e){if(e===0)return!1;let t=Nr(e);if(e===1){if(!Hs(t,"OES_texture_float"))return!1}else if(!Hs(t,"EXT_color_buffer_float"))return!1;return kx(t)}function Q7(e){if(e===0)return!1;let t=Nr(e);if(e===1){if(!Hs(t,"OES_texture_float")||!Hs(t,"WEBGL_color_buffer_float"))return!1}else{if(Hs(t,"EXT_color_buffer_float"))return kx(t);let s="EXT_color_buffer_half_float";if(Hs(t,s)){let r=t.getExtension(s);return MJ(t,r)}return!1}return kx(t)}function kx(e){let t=xx(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function MJ(e,t){let n=xx(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function eC(e){return e!==2?!1:Nr(e).fenceSync!=null}function pc(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var $e=Y();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>wx(2)?2:wx(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>K7($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Z7($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=$e.getNumber("WEBGL_VERSION");return e===0?0:Y7(e)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Mu.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>J7($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Q7($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>eC($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Mu.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function jn(){let e,t,n,s,r,a,o,i,l,c;return Y().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}function _l(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function Zm(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function zJ(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function LJ(e,t,n="index"){let s=e.map((a,o)=>o),r=zJ(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function Ix(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Sx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var tC=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:nC}=N;function BJ(e,t,n){let s=[];if(e.forEach(h=>{let f=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Cx(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>WJ(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=jn(),l=GJ(i),c,u,d=qJ(i);return t.isPacked?(c=VJ(t.logicalShape,o,n.enableShapeUniforms),u=jJ(i)):(c=UJ(t.logicalShape,o,n.enableShapeUniforms),u=HJ(i)),n.packedInputs&&(d+=YJ),[d,l,u,r,c,a,n.userCode].join(`
`)}function hc(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return uQ(e,t);case 1:return dQ(e,t);case 2:return hQ(e,t);case 3:return mQ(e,t);case 4:return yQ(e,t);case 5:return AQ(e);case 6:return xQ(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function sC(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return lQ(e);case 1:return cQ(e,t);case 2:return pQ(e,t);case 3:return fQ(e,t);default:return gQ(e,t)}}function WJ(e,t,n=!1,s){let r="";n?r+=sC(e,s):r+=hc(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=bQ(e,t):r+=vQ(e,t)),r}function VJ(e,t,n){switch(e.length){case 0:return rC();case 1:return JJ(e,t,n);case 2:return oQ(e,t,n);case 3:return eQ(e,t,n);default:return nQ(e,t,n)}}function UJ(e,t,n){switch(e.length){case 0:return rC();case 1:return QJ(e,t,n);case 2:return iQ(e,t,n);case 3:return tQ(e,t,n);case 4:return sQ(e,t,n);case 5:return rQ(e,t);case 6:return aQ(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function GJ(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function HJ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function jJ(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function qJ(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${XJ}
    ${KJ}
    ${ZJ}
  `}var XJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,KJ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ZJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,YJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function rC(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function JJ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function QJ(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function eQ(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function tQ(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Zm(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=_l(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function nQ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+i,l=`b${c}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function sQ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Zm(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=_l(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function rQ(e,t){let n=_l(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function aQ(e,t){let n=_l(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function oQ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function iQ(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Dl(e){return`offset${e}`}function lQ(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=jn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function uQ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Dl(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function cQ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=jn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function dQ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${fc(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Dl(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function pQ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=jn();if(a!=null&&w.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function hQ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&w.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let p=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=w.squeezeShape(n),l=o;if(l.length<n.length){let p=mc(e,l),h=["row","col"];return`
      ${hc(p,t)}
      float ${r}(int row, int col) {
        return ${r}(${gc(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${fc(e)}
      }
    `;let c=a[0],u=a[1],d=Dl(s);return u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function fQ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let p=n.slice(1),h=[1,2],f=mc(e,p),m=["b","row","col"];return`
        ${sC(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${gc(m,h)});
        }
      `}let i=jn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],c=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function mQ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=w.squeezeShape(n),c=i;if(c.length<n.length){let m=mc(e,c),g=["row","col","depth"];return`
        ${hc(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${gc(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${fc(e)}
      }
    `;let u=e.shapeInfo.texShape,d=u[0],p=u[1],h=e.shapeInfo.flatOffset;if(p===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(p===o&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=Dl(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${s}, uv);
      }
  `}function gQ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=jn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=l[0],u=l[1],d=Math.ceil(a[o-1]/2),p=d*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${n}, uv);
    }
  `}function yQ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:c}=w.squeezeShape(n);if(l.length<n.length){let x=mc(e,l),A=["row","col","depth","depth2"];return`
      ${hc(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${gc(A,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${fc(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===i&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;let y=Dl(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function AQ(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:c}=w.squeezeShape(t);if(l.length<t.length){let m=mc(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${hc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${gc(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${fc(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Dl(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function xQ(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=w.squeezeShape(t);if(r.length<t.length){let g=mc(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${hc(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${gc(y,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${fc(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Dl(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function fc(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function bQ(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=nC(e.shapeInfo.logicalShape,t.logicalShape),l=wt(o),c=o-a,u,d=["x","y","z","w","u","v"];a===0?u="":o<2&&i.length>=1?u="coords = 0;":u=i.map(x=>`coords.${d[x+c]} = 0;`).join(`
`);let p="";o<2&&a>0?p="coords":p=e.shapeInfo.logicalShape.map((x,A)=>`coords.${d[A+c]}`).join(", ");let h="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,y=w.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!y)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,A=a-1;i.indexOf(x)>-1&&i.indexOf(A)>-1?h="return vec4(outputValue.x);":i.indexOf(x)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(A)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${p});
      ${h}
    }
  `}function vQ(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=wt(l),u=nC(e.shapeInfo.logicalShape,t.logicalShape),d=l-i,p,h=["x","y","z","w","u","v"];i===0?p="":l<2&&u.length>=1?p="coords = 0;":p=u.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${p}
      return get${s}(${f});
    }
  `}function wt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Cx(e,t,n){let{newShape:s,keptDims:r}=w.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!w.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function mc(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function gc(e,t){return t.map(n=>e[n]).join(", ")}function wQ(e,t,n,s){let r=n.map((b,v)=>{let C={logicalShape:b.shape,texShape:b.isUniform?null:b.texData.texShape,isUniform:b.isUniform,isPacked:b.isUniform?!1:b.texData.isPacked,flatOffset:null};return b.texData!=null&&b.texData.slice!=null&&b.texData.slice.flatOffset>0&&(C.flatOffset=b.texData.slice.flatOffset),{name:t.variableNames[v],shapeInfo:C}}),a=r.map(b=>b.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=BJ(r,o,t),l=$7(e.gl,i),c=e.createProgram(l),u=null,d=e.getUniformLocation(c,"NAN",!1);Y().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(c,"INFINITY",!1));let p=!1,h={},f={},m={};for(let b=0;b<t.variableNames.length;b++){let v=t.variableNames[b];h[v]=e.getUniformLocation(c,v,p),h[`offset${v}`]=e.getUniformLocation(c,`offset${v}`,p),t.enableShapeUniforms&&(f[`${v}Shape`]=e.getUniformLocation(c,`${v}Shape`,p),m[`${v}TexShape`]=e.getUniformLocation(c,`${v}TexShape`,p))}let g,y,x;t.enableShapeUniforms&&(g=e.getUniformLocation(c,"outShape",p),x=e.getUniformLocation(c,"outShapeStrides",p),y=e.getUniformLocation(c,"outTexShape",p));let A=[];return t.customUniforms&&t.customUniforms.forEach((b,v)=>{A[v]=e.getUniformLocation(c,b.name,p)}),{program:t,fragmentShader:l,source:i,webGLProgram:c,uniformLocations:h,customUniformLocations:A,inShapeInfos:a,outShapeInfo:o,infLoc:u,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:y}}function aC(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!w.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!w.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function kQ(e,t,n,s,r){t.program.enableShapeUniforms||(aC(t.inShapeInfos,n),aC([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),Y().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,c)=>{let u=t.program.variableNames[c],d=t.uniformLocations[u],p=t.uniformLocations[`offset${u}`],h=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(h){let{uniformShape:m}=Cx(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),d!=null){if(l.isUniform){if(w.sizeFromShape(l.shape)<2)e.gl.uniform1f(d,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}l.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,d,c)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=w.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,c)=>{let u=t.customUniformLocations[c],d=r[c];if(l.type==="float")e.gl.uniform1fv(u,d);else if(l.type==="vec2")e.gl.uniform2fv(u,d);else if(l.type==="vec3")e.gl.uniform3fv(u,d);else if(l.type==="vec4")e.gl.uniform4fv(u,d);else if(l.type==="int")e.gl.uniform1iv(u,d);else if(l.type==="ivec2")e.gl.uniform2iv(u,d);else if(l.type==="ivec3")e.gl.uniform3iv(u,d);else if(l.type==="ivec4")e.gl.uniform4iv(u,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function IQ(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:d}=Cx(e.packedInputs,o.shape,l),p="",h="",f="";if(u.length===1&&e.packedInputs){let v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${v[0]>1}_${v[1]>1}`}else if(u.length===2&&!e.packedInputs)h=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let v=w.computeStrides(u);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}let m=o.shape.length,g=u.length===2&&w.arraysEqual(o.shape,l),y=w.sizeFromShape(o.shape)===1,x=N.getBroadcastDims(o.shape,n.shape),A=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(l,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${A}_${c?d:""}_${u.length}_${y}_${x}_${g}_${p}_${h}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${Y().getNumber("WEBGL_VERSION")}`,a}function ps(e){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var SQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Vm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=jn();this.outputShape=e,this.enableShapeUniforms=ps(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Zm(["r","c","d"],e):_l(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},CQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Vm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=jn();this.outputShape=e,this.enableShapeUniforms=ps(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Zm(["r","c","d"],e):_l(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},TQ=class{constructor(e){this.variableNames=["A"],this.outTexUsage=ar.DOWNLOAD;let t=jn();this.outputShape=e,this.userCode=`
      ${tC}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},NQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ar.DOWNLOAD;let t=jn();this.outputShape=e,this.userCode=`
      ${tC}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},EQ=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=jn();this.outputShape=e,this.enableShapeUniforms=ps(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Sx():Ix(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},RQ=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=jn();this.outputShape=e,this.enableShapeUniforms=ps(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Sx():Ix(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},oC={};Me(oC,{bindVertexProgramAttributeStreams:()=>mC,createBufferFromOutputTexture:()=>AC,createFloat16MatrixTexture:()=>dC,createFloat16PackedMatrixTexture:()=>fC,createFloat32MatrixTexture:()=>cC,createIndexBuffer:()=>uC,createPackedMatrixTexture:()=>hC,createUnsignedBytesMatrixTexture:()=>pC,createVertexBuffer:()=>lC,createVertexShader:()=>iC,downloadByteEncodedFloatMatrixFromOutputTexture:()=>bC,downloadFloat32MatrixFromBuffer:()=>xC,downloadMatrixFromPackedOutputTexture:()=>wC,downloadPackedMatrixFromBuffer:()=>vC,getInternalFormatForFloat16MatrixTexture:()=>Nx,getInternalFormatForFloat16PackedMatrixTexture:()=>_x,getInternalFormatForFloat32MatrixTexture:()=>Tx,getInternalFormatForPackedMatrixTexture:()=>Rx,getInternalFormatForUnsignedBytesMatrixTexture:()=>Ex,uploadDenseMatrixToTexture:()=>gC,uploadPixelDataToTexture:()=>yC});function iC(e){let t=jn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return P7(e,n)}function lC(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return M7(e,t)}function uC(e){let t=new Uint16Array([0,1,2,2,1,3]);return z7(e,t)}function Ep(e,t,n,s,r,a){B7(t,n);let o=L7(e),i=e.TEXTURE_2D;return ke(e,()=>e.bindTexture(i,o)),ke(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ke(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ke(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),ke(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Y().getNumber("WEBGL_VERSION")===1?ke(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)):ke(e,()=>e.texStorage2D(i,1,s,t,n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function Tx(e){return e.internalFormatFloat}function cC(e,t,n,s){let[r,a]=Sp(t,n);return Ep(e,r,a,Tx(s),s.textureFormatFloat,e.FLOAT)}function Nx(e){return e.internalFormatHalfFloat}function dC(e,t,n,s){let[r,a]=Sp(t,n);return Ep(e,r,a,Nx(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Ex(e){return e.downloadTextureFormat}function pC(e,t,n,s){let[r,a]=Sp(t,n);return Ep(e,r,a,Ex(s),e.RGBA,e.UNSIGNED_BYTE)}function Rx(e){return e.internalFormatPackedFloat}function hC(e,t,n,s){let[r,a]=dc(t,n);return Ep(e,r,a,Rx(s),e.RGBA,e.FLOAT)}function _x(e){return e.internalFormatPackedHalfFloat}function fC(e,t,n,s){let[r,a]=dc(t,n);return Ep(e,r,a,_x(s),e.RGBA,s.textureTypeHalfFloat)}function mC(e,t,n){let s=0,r=3*4,a=3*4+2*4;return ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),bx(e,t,"clipSpacePos",n,3,a,s)&&bx(e,t,"uv",n,2,a,r)}function gC(e,t,n,s,r,a){ke(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),Y().getNumber("WEBGL_VERSION")===2?ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,i,o)):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function yC(e,t,n){ke(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Y().getNumber("WEBGL_VERSION")===2?ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Y().getNumber("WEBGL_VERSION")===2?ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function AC(e,t,n,s){let r=e.createBuffer();ke(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return ke(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),ke(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),ke(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function xC(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function bC(e,t,n,s){let[r,a]=Sp(t,n),o=4,i=new Uint8Array(SJ(t*n,o));return ke(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function vC(e,t,n,s,r,a,o,i){let l=e,c=new Float32Array(CJ(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function wC(e,t,n){let s=new Float32Array(t*n*4);return ke(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var yc=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Y().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Wm(t,e)):this.gl=Nr(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(Y().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Cp(this.gl,r),Hs(this.gl,a))this.textureHalfFloatExtension=Cp(this.gl,a);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Hs(this.gl,s))this.colorBufferHalfFloatExtension=Cp(this.gl,s);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Hs(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Hs(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=lC(this.gl),this.indexBuffer=uC(this.gl),this.framebuffer=W7(this.gl),this.textureConfig=xx(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ke(e,()=>e.finish()),ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.deleteFramebuffer(this.framebuffer)),ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ke(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),cC(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),dC(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),pC(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),yC(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),gC(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),fC(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),hC(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(vx(this.gl,this.framebuffer),this.outputTexture=null),ke(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>bC(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return vC(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return xC(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=AC(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>wC(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=iC(t));let n=F7(t);return ke(t,()=>t.attachShader(n,this.vertexShader)),ke(t,()=>t.attachShader(n,e)),O7(t,n),this.debug&&Gm(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=mC(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ke(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Gm(this.gl,this.program),ke(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?U7(this.gl,e,t):G7(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ke(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),H7(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=dc(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Gm(this.gl,this.program),Tp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ke(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ke(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Cp(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=_Q(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Hm(this.gl,e,this.framebuffer),this.debug&&Tp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Hm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Tp(this.gl)):vx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;Hm(s,e,this.framebuffer),this.debug&&Tp(s),this.outputTexture=e,ke(s,()=>s.viewport(0,0,t,n)),ke(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),ke(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function _Q(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:DQ,bincountImpl:kC,bincountReduceImpl:PQ,ceilImpl:$Q,concatImpl:FQ,equalImpl:OQ,expImpl:MQ,expm1Impl:zQ,floorImpl:LQ,gatherNdImpl:BQ,gatherV2Impl:WQ,greaterImpl:VQ,greaterEqualImpl:UQ,lessImpl:GQ,lessEqualImpl:HQ,linSpaceImpl:jQ,logImpl:qQ,maxImpl:XQ,maximumImpl:KQ,minimumImpl:ZQ,multiplyImpl:YQ,negImpl:JQ,notEqualImpl:QQ,prodImpl:eee,rangeImpl:tee,rsqrtImpl:nee,sigmoidImpl:see,simpleAbsImpl:IC,sliceImpl:ree,sparseFillEmptyRowsImpl:aee,sparseReshapeImpl:oee,sparseSegmentReductionImpl:SC,sqrtImpl:iee,stridedSliceImpl:lee,stringNGramsImpl:uee,stringSplitImpl:cee,stringToHashBucketFastImpl:dee,subImpl:pee,tileImpl:hee,topKImpl:fee,transposeImpl:Dx,uniqueImpl:mee}=Fm;function CC(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function qn(e,t){return t===1?[e]:CC(e,t)}function gee(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var yee=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ps(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=qn("rc",this.rank),n=wt(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},TC=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ps(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${Aee(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Sx():Ix(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Aee(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?LJ(["r","c","d"],"inputShape"):_l(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var xee=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=EC(t,n),r=RC(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=NC(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===Fn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Fn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Fn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Fn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Fn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=EC(n,s),a=RC(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=NC(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function bee(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function NC(e,t,n,s,r){let a=vee(t,s),o;if(r){let[l,c]=dc(e[0],e[1]);o=l*c}else{let[l,c]=Sp(e[0],e[1]);o=l*c}let i=bee(n,a);return o*i}function vee(e,t){switch(e){case Fn.PACKED_2X2_FLOAT32:return Rx(t);case Fn.PACKED_2X2_FLOAT16:return _x(t);case Fn.UNPACKED_FLOAT32:return Tx(t);case Fn.UNPACKED_FLOAT16:return Nx(t);case Fn.PACKED_4X1_UNSIGNED_BYTE:return Ex(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function wee(e){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Fn.PACKED_2X2_FLOAT32:Fn.UNPACKED_FLOAT32:e?Fn.PACKED_2X2_FLOAT16:Fn.UNPACKED_FLOAT16}function EC(e,t){if(e===ar.UPLOAD)return Fn.PACKED_2X2_FLOAT32;if(e===ar.RENDER||e==null)return wee(t);if(e===ar.DOWNLOAD||e===ar.PIXELS)return Fn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function RC(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var ua=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ps(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},or="if (isnan(x)) return x;",kee="return x;",_C="return abs(x);",Iee="return (x >= 0.0) ? x : (exp(x) - 1.0);",See=or+`
  return (x < 0.0) ? 0.0 : x;
`,Cee=or+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ac="return x;",Tee="return 1.0 / (1.0 + exp(-1.0 * x));",Nee="return x;",Eee=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Ree=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_ee=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Dee="return 1.0 / (1.0 + exp(-1.0 * x));",Pl=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ps(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},Pee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ps(this.outputShape.length);let t=e.length,n=qn("rc",t),s=wt(t),r=gee(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},$ee=tr.whereImpl,Fee=1e-7,Oee=1e-4,Ym={};function Mee(e){return e in Ym||(Ym[e]={}),Ym[e]}var zee=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Lee=600;function Bee(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*Lee/1024/1024}var DC=class extends ru{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof yc)t=e;else{let n=Nr(Y().getNumber("WEBGL_VERSION"),e);t=new yc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Nr(Y().getNumber("WEBGL_VERSION"));t=new yc(n),this.binaryCache=Mee(Y().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xee(this.gpgpu),this.numMBBeforeWarning=Bee(),this.texData=new dd(this,Dn())}nextDataId(){return DC.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:ar.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:ar.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new Pl(o,Ac):d=new ua(o,Ac);let p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:s}],s),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,c;l&&(c=w.now());let u;if(s==="complex64"){let d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);u=N.mergeRealAndImagArrays(d,p)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=w.now()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let h;i?h=new Pl(s,Ac):h=new ua(s,Ac);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(Y().getBool("DEBUG")&&!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(a!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let h=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(h.texture.texture,...Um(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];u=N.mergeRealAndImagArrays(f,m)}else if(l==null)u=this.getValuesFromTexture(e);else{let h=w.sizeFromShape(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){let h=this.gpgpu.gl;ke(h,()=>h.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Dn().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:o,isPacked:i,texture:l}=n;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;i?p=new Pl(r,Ac):p=new ua(r,Ac);let h=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:o}],o),f=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),f}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let c=this.decode(e,t.customTexShape),u=Dn().makeTensorFromDataId(c.dataId,c.shape,c.dtype),d=this.texData.get(c.dataId);return{tensorRef:u,...d.texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!_7(n))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=w.sizeFromShape(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),p=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Um(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),h}let a=Y().getBool("WEBGL_PACK")&&s===!0,o=a?jm(t):t,i=a?new NQ(o):new TQ(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=w.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=w.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=zee){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return $ee(e.shape,t)}packedUnaryOp(e,t,n){let s=new Pl(e.shape,t),r=this.compileAndRun(s,[e],n);return Dn().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=IC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,_C,e.dtype);let t=new ua(e.shape,_C),n=this.compileAndRun(t,[e]);return Dn().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:s}=this.makeTensorInfo(e,t,n);return Dn().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){let t=new Pee(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new yee(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[El(e.shape),...Rl(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[El(t),...Rl(t)],a=new TC(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let d=w.sizeFromShape(r),p=t[0]*t[1]*4;w.assert(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=jm(r),i;s?i=new CQ(o):i=new SQ(o);let l=!0,c=[t!=null?t:Um(o)],u=this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,c,l,t);return{dtype:a,shape:r,dataId:u.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Vm.DENSE){let g=a!=null?a:Um(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),w.sizeFromShape(o.shape)===0)return i.values=w.getTypedArrayFromDType(o.dtype,0),o;let l=[],c=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!Np(y.shape,g.shape)){let x=g,A=g.shape;g.shape=y.shape,g=this.packedReshape(g,A),l.push(g),y=this.texData.get(g.dataId),x.shape=A}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(o.dataId);let u={shape:o.shape,texData:i,isUniform:!1},d=IQ(e,c,u),p=this.getAndSaveBinary(d,()=>wQ(this.gpgpu,e,c,u)),h=this.activeTimers!=null,f;h&&(f=this.startTimer()),kQ(this.gpgpu,p,c,u,s),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=Y().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&r===!1){let g=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),g}return o}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=X(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Y().getBool("DEBUG");Y().set("DEBUG",!1);let t=this.abs(Te(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Fee:Oee}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,c;l&&(c=w.now());let u=t.texShape;if(u==null&&(u=X7(n,i),t.texShape=u),r!=null){let d=jm(n),p,h=u[1],f=u[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(i||!m)&&([h,f]=dc(u[0],u[1])),i?p=new RQ(d,m):p=new EQ(d,m);let g=m?[f,h]:u,y=this.makeTensorInfo(g,s),x=this.texData.get(y.dataId);m?x.usage=ar.PIXELS:x.usage=ar.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),h,f,r);let A=[[f,h]],b=!0,v=this.runWebGLProgram(p,[y],s,A,b),C=this.texData.get(v.dataId);t.texture=C.texture,t.texShape=C.texShape,t.isPacked=C.isPacked,t.usage=C.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(v.dataId),t.values=null,l&&(this.uploadWaitMs+=w.now()-c)}else{let d=this.acquireTexture(u,o,s,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=Wee(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}},Rp=DC;Rp.nextDataId=0;function Wee(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var Vee="0.0.0";function PC(){Y().set("WEBGL_FORCE_F16_TEXTURES",!0)}Mu.isBrowser()&&cl("webgl",()=>new Rp,2);var Uee={forceHalfFloat:PC},$C=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,xc=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ps(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Jm=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,_p=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=ps(r);let a="";if(s)if(r===0||w.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${wt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=qn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Cs(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var Gee={kernelName:Ja,backendName:"webgl",kernelFunc:Cs};function Yo(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=Cs({inputs:{x:s},backend:n}),l=Cs({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var Hee={kernelName:md,backendName:"webgl",kernelFunc:Yo},FC="return (a < 0.) ? b * a : a;",OC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function jee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _p(OC,r.shape,o.shape):new xc(FC,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var qee={kernelName:Qa,backendName:"webgl",kernelFunc:jee},MC="return (a < 0.) ? b * a : a;",zC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Xee(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _p(zC,s.shape,r.shape):new xc(MC,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var Kee={kernelName:po,backendName:"webgl",kernelFunc:Xee},bc="if (isnan(x)) return x;",Zee=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Yee=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function it({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),p=n(d.values,l);return i.makeTensorInfo(o.shape,l,p)}let c=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new Pl(o.shape,t):u=new ua(o.shape,e),i.runWebGLProgram(u,[o],l)}}function Cn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:c}=o,u=i;if(s&&l.dtype==="complex64"){let f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(A=>{let[b,v]=A,C={dataId:b.dataId,dtype:b.dtype,shape:l.shape},I={dataId:v.dataId,dtype:v.dtype,shape:c.shape},E=new xc(e,l.shape,c.shape);return u.runWebGLProgram(E,[C,I],Wn(b.dtype,v.dtype))}),x=Yo({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),x}let d=a||Wn(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){let f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?N.fromUint8ToStringArray(f):f,y=l.dtype==="string"?N.fromUint8ToStringArray(m):m,[x,A]=r(l.shape,c.shape,g,y,d),b=u.makeTensorInfo(A,d),v=u.texData.get(b.dataId);return v.values=x,b}let p=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new _p(t,l.shape,c.shape,n):h=new xc(e,l.shape,c.shape),u.runWebGLProgram(h,[l,c],d)}}function Qm(e,t=!1){if(e==="linear")return t?Nee:kee;if(e==="relu")return t?Ree:See;if(e==="elu")return t?Eee:Iee;if(e==="relu6")return t?_ee:Cee;if(e==="prelu")return t?zC:MC;if(e==="leakyrelu")return t?OC:FC;if(e==="sigmoid")return t?Dee:Tee;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var LC=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ps(this.outputShape.length);let c=s?e[1]:e[2],u=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",A="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(A=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${x};
          int batchB = ${A};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},BC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},WC=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},VC="return a * b;";function Px(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=N.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),c=new WC(BC.REAL,s.shape,r.shape),u=new WC(BC.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Yo({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[c,u]=YQ(s.shape,r.shape,i.values,l.values,a),d=n.makeTensorInfo(u,a),p=n.texData.get(d.dataId);return p.values=c,d}let o;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new _p(VC,s.shape,r.shape):o=new xc(VC,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var Jee={kernelName:lo,backendName:"webgl",kernelFunc:Px};function Qee(e,t,n){let s=[El(e.shape),...Rl(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[El(t),...Rl(t)],o=new TC(a,s),i=!0,l=[s],c=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function ve(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=w.sizeFromShape(r.shape),l=w.inferFromImplicitShape(a,i),c=w.sizeFromShape(l);w.assert(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=o.texData.get(r.dataId);return u.isPacked&&!Np(r.shape,l)&&!(u.texture!==null&&Np(u.shape,l))?Qee(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var ete={kernelName:Bi,backendName:"webgl",kernelFunc:ve},UC=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${w.isInt(u)?u.toPrecision(2):u}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},tte=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,u=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function nte(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=N.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function $l(e,t,n,s){let r=nte(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:c}=r[o],u,d;n==="mean"?u=o===0?new UC({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},i):new UC({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c}):u=new tte({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},n),d=a,a=s.runWebGLProgram(u,[a],t),d.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(d)}return a}var ste=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=wt(this.rank),r=rte(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function rte(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var ate=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=wt(this.rank),r=CC("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=r[c];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function e0(e,t,n){let s=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ate(e.shape,t):new ste(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function ote(e,t,n,s){let r=t,a=e.shape.length,o=w.parseAxisParam(r,e.shape),i=o,l=N.getAxesPermutation(i,a),c=l!=null,u=e;c&&(u=e0(e,l,s),i=N.getInnerMostAxes(i.length,a)),N.assertAxesAreInnerMostDims("sum",i,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,i),h=d;n&&(h=N.expandShapeToKeepDim(d,o));let f=w.sizeFromShape(p),g=w.sizeFromShape(e.shape)/f,y=ve({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),x=Bd(e.dtype),A=$l(y,x,"sum",s),b=ve({inputs:{x:A},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(A),c&&s.disposeIntermediateTensorInfo(u),b}function t0(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return ote(r,a,o,n)}var ite={kernelName:bo,backendName:"webgl",kernelFunc:t0};function Xn(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];let c;if(o.shouldExecuteOnCPU([r])){let d=o.texData.get(r.dataId).values,p=Dx(d,r.shape,r.dtype,a,l);c=o.makeTensorInfo(l,r.dtype);let h=o.texData.get(c.dataId);h.values=p}else c=e0(r,a,o);return c}var lte={kernelName:So,backendName:"webgl",kernelFunc:Xn},GC=1e3;function n0({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),x=w.sizeFromShape(g),b=il.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=n?[y,d,h]:[y,h,d],C=s?[x,f,p]:[x,p,f],I=ve({inputs:{x:e},backend:r,attrs:{shape:v}}),E=ve({inputs:{x:t},backend:r,attrs:{shape:C}}),R=[I,E],F=Math.max(y,x),_=n?I.shape[1]:I.shape[2],P=a!=null,T=o!=null,O=l==="leakyrelu",G=l!=null?Qm(l,!0):null,K=P||T||O||G!=null,z;if((h===1||f===1)&&_>GC&&K===!1){let W=I,Q=E;n&&(W=Xn({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),R.push(W)),s&&(Q=Xn({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(Q));let ne=f!==1,oe=f===1,Z=W;ne&&(Z=ve({inputs:{x:W},backend:r,attrs:{shape:[F,_,1]}}),R.push(Z));let ae=f===1?2:1,re=Q;oe&&(re=ve({inputs:{x:Q},backend:r,attrs:{shape:[F,1,_]}}),R.push(re));let me=Px({inputs:{a:Z,b:re},backend:r});z=t0({inputs:{x:me},backend:r,attrs:{axis:ae,keepDims:!0}}),R.push(me)}else{let W=Wn(e.dtype,t.dtype),Q=new LC(v,C,[F,h,f],n,s,P,G,T,O),ne=[I,E];if(a!=null&&ne.push(a),T&&ne.push(o),O){let oe=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));ne.push(oe),R.push(oe)}z=r.runWebGLProgram(Q,ne,W)}let j=ve({inputs:{x:z},backend:r,attrs:{shape:b}});R.push(z);for(let W of R)r.disposeIntermediateTensorInfo(W);return j}function ute(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return n0({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var cte={kernelName:To,backendName:"webgl",kernelFunc:ute},HC="return abs(x);";function dte(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=IC(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Pl(s.shape,HC):r=new ua(s.shape,HC),n.runWebGLProgram(r,[s],s.dtype)}var pte={kernelName:gi,backendName:"webgl",kernelFunc:dte},hte=or+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,fte=it({opSnippet:hte}),mte={kernelName:lu,backendName:"webgl",kernelFunc:fte},gte=or+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,yte=it({opSnippet:gte}),Ate={kernelName:uu,backendName:"webgl",kernelFunc:yte},jC="return a + b;",xte=Cn({opSnippet:jC,packedOpSnippet:jC,supportsComplex:!0,cpuKernelImpl:DQ}),bte={kernelName:Zr,backendName:"webgl",kernelFunc:xte},vte=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},wte=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function s0(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Cs({inputs:{x:s[0]},backend:n});if(s.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),c=s0({inputs:s.slice(0,l),backend:n}),u=s0({inputs:s.slice(l),backend:n});return s0({inputs:[c,u],backend:n})}let r=s.map(l=>l.dtype).reduce((l,c)=>Wn(l,c)),a=s.map(l=>l.shape),i=Y().getBool("WEBGL_PACK")?new wte(s[0].shape,a):new vte(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var kte={kernelName:$a,backendName:"webgl",kernelFunc:s0};function Ite(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=Xn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("all",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=$l(m,m.dtype,"all",n),y;if(o){let x=N.expandShapeToKeepDim(p,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var Ste={kernelName:cu,backendName:"webgl",kernelFunc:Ite};function Cte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=Xn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("any",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=$l(m,m.dtype,"any",n),y;if(o){let x=N.expandShapeToKeepDim(p,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var Tte={kernelName:du,backendName:"webgl",kernelFunc:Cte},Nte=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},Ete=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=wt(i),c=qn("coords",i),u,d;if(a===1){d=i+1;let I=wt(d);u=`
        ${I} sourceLocR = ${I}(${c.join()}, 0);
        ++${c[i-1]};
        ${I} sourceLocG = ${I}(${c.join()}, 0);
        ++${c[i-2]};
        ${I} sourceLocA = ${I}(${c.join()}, 0);
        --${c[i-1]};
        ${I} sourceLocB = ${I}(${c.join()}, 0);
        --${c[i-2]};`}else d=i,u=`
        ${l} sourceLocR = coords;
        ++${c[i-1]};
        ${l} sourceLocG = coords;
        ++${c[i-2]};
        ${l} sourceLocA = coords;
        --${c[i-1]};
        ${l} sourceLocB = coords;
        --${c[i-2]};`;let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(I=>"int "+I),m=qn("sourceLocR",d-1).concat("inIdx.r"),g=qn("sourceLocG",d-1).concat("inIdx.g"),y=qn("sourceLocB",d-1).concat("inIdx.b"),x=qn("sourceLocA",d-1).concat("inIdx.a"),A=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()})));`,v=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,C=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function qC(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=N.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new Nte(i,n,s==null),c=[t];s!=null&&c.push(s);let u=e.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let d=qC(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function XC(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=N.computeOptimalWindowSize(a),i=new Ete(r,o,n,s==null),l=s==null?[t]:[t,s],c=e.runWebGLProgram(i,l,"int32");if(c.shape.length===t.shape.length){let u=XC(e,t,n,c);return e.disposeIntermediateTensorInfo(c),u}return c}function KC(e,t,n,s){let r=[n];if(N.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[c,u]=N.computeOutAndReduceShapes(l.shape,r),d=w.sizeFromShape(u),p=ve({inputs:{x:l},backend:e,attrs:{shape:[-1,d]}});a.push(p);let h=qC(e,p,s);a.push(h);let f=ve({inputs:{x:h},backend:e,attrs:{shape:c}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return XC(e,t,s)}function Rte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Xn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=KC(n,l,o[0],"max");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var _te={kernelName:Fa,backendName:"webgl",kernelFunc:Rte};function Dte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Xn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=KC(n,l,o[0],"min");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var Pte={kernelName:pu,backendName:"webgl",kernelFunc:Dte},$te=or+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Fte=it({opSnippet:$te}),Ote={kernelName:hu,backendName:"webgl",kernelFunc:Fte},Mte=or+"return log(x + sqrt(x * x + 1.0));",zte=it({opSnippet:Mte}),Lte={kernelName:fu,backendName:"webgl",kernelFunc:zte},Bte=or+`
  return atan(x);
`,Wte=it({opSnippet:Bte}),Vte={kernelName:mu,backendName:"webgl",kernelFunc:Wte},Ute=Zee+`
  return atan(a, b);
`,Gte=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Yee+`
  return result;
`,Hte=Cn({opSnippet:Ute,packedOpSnippet:Gte}),jte={kernelName:yu,backendName:"webgl",kernelFunc:Hte},qte=or+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Xte=it({opSnippet:qte}),Kte={kernelName:gu,backendName:"webgl",kernelFunc:Xte},Dp=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let I=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${I} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");let b=Math.floor(a/4)*4,v=a%4,C=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${b};
          if (${v===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${v===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${v===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${A});
      }
    `}},$x=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",A="0.0";if(x||(A="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let C=Math.floor(a/4)*4,I=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${C};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${v});
        }
      }
    `}};function Zte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;pc(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;w.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Cs({inputs:{x:r},backend:n});let d=new Dp(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var Yte={kernelName:Oa,backendName:"webgl",kernelFunc:Zte};function Jte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],d=N.computePool3DInfo(r.shape,a,o,u,i,l,c),p=new $x(d,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var Qte={kernelName:fd,backendName:"webgl",kernelFunc:Jte},ene=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.top,u=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},tne=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function nne(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new tne(p);return n.runWebGLProgram(h,[r],o.dtype)}var sne={kernelName:zh,backendName:"webgl",kernelFunc:nne};function rne(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;pc([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=N.computePool2DInfo(o.shape,i,l,1,c),d=new ene(u);return n.runWebGLProgram(d,[r],o.dtype)}var ane={kernelName:Mh,backendName:"webgl",kernelFunc:rne};function one(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return n0({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var ine={kernelName:Ma,backendName:"webgl",kernelFunc:one},lne=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},une=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},cne=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;w.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=[s,r,a],u=null;o!=null&&(u=o.shape,c.push(o));let d=null;i!=null&&(d=i.shape,c.push(i));let p=Y().getBool("WEBGL_PACK_NORMALIZATION")?new une(s.shape,r.shape,a.shape,u,d,l):new lne(s.shape,r.shape,a.shape,u,d,l);return t.runWebGLProgram(p,c,c[0].dtype)},dne={kernelName:Za,backendName:"webgl",kernelFunc:cne},pne=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=wt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=hne(this.rank),s,r=e.map((a,o)=>`sourceLoc.${Fx[o]} = start[${o}] + coords.${Fx[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Fx=["x","y","z","w","u","v"];function hne(e){if(e===1)return"sourceLoc";if(e<=6)return Fx.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var fne=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=wt(this.rank),n=qn("coords",this.rank),s=qn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,u)=>`start[${u}]`).join()});`:e.map((c,u)=>`${s[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function mne(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=zt.computeFlatOffset(t,w.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function vc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=zt.parseSliceParams(r,a,o);if(zt.assertParamsValid(r,i,l),w.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.texData.get(r.dataId),p=ree(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}let{isPacked:c}=n.texData.get(r.dataId),u=zt.isSliceContinous(r.shape,i,l);if(c||!u){let d=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fne(l):new pne(l),p=[i];return n.runWebGLProgram(d,[r],r.dtype,p)}return n.uploadToGPU(r.dataId),mne(r,i,l,n)}var gne={kernelName:Hi,backendName:"webgl",kernelFunc:vc},yne=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:l}}),m=Xn({inputs:{x:f},backend:n,attrs:{perm:c}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:u}}),y=vc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),y},Ane={kernelName:yi,backendName:"webgl",kernelFunc:yne};function xne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),c=kC(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var bne={kernelName:Lh,backendName:"webgl",kernelFunc:xne};function vne(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var wne={kernelName:Bh,backendName:"webgl",kernelFunc:vne},kne="return float(a != b);",ZC=Cn({opSnippet:kne,cpuKernelImpl:QQ,dtype:"bool"}),Ine={kernelName:Pi,backendName:"webgl",kernelFunc:ZC};function Pp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Cs({inputs:{x:r.complexTensorInfos.real},backend:n})}var Sne={kernelName:Id,backendName:"webgl",kernelFunc:Pp},Cne="return float(int(x));";function Tne(e,t){let n=new ua(e.shape,Cne),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Ox(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Cs({inputs:{x:r},backend:n});let o=Ht(r.shape),i=Ox({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Yo({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Pp({inputs:{input:r},backend:n}),i=Ox({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(r.dtype,a)){let o=Cs({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Tne(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),l=ZC({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Nne={kernelName:za,backendName:"webgl",kernelFunc:Ox},YC="return ceil(x);",Ene=it({opSnippet:YC,packedOpSnippet:YC,cpuKernelImpl:$Q}),Rne={kernelName:La,backendName:"webgl",kernelFunc:Ene},_ne=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},Dne=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Pne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;Y().getBool("WEBGL_PACK_CLIP")?i=new Dne(r.shape):i=new _ne(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var $ne={kernelName:Yr,backendName:"webgl",kernelFunc:Pne},Fne=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function JC(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function One(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new Fne(s.shape),o=[JC(s,r.complexTensorInfos.real),JC(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var Mne={kernelName:gd,backendName:"webgl",kernelFunc:One},zne=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},Lne=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=wt(s),a=qn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],c=o.slice(-2),u=o.join(),d=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${u}), vec2(${c.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${r0(o,l,m)}),
            vec2(${r0(c,l,m)}));
        }`}let p=i.length,h=i[i.length-1];d+=`
        return getChannel(
          getT${p}(${r0(o,l,h)}),
          vec2(${r0(c,l,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function r0(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function a0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Cs({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Bne={kernelName:bd,backendName:"webgl",kernelFunc:a0};function wc(e,t,n){let s=e[0].dtype;if(s==="complex64"){let u=e.map(m=>Pp({inputs:{input:m},backend:n})),d=e.map(m=>a0({inputs:{input:m},backend:n})),p=wc(u,t,n),h=wc(d,t,n),f=Yo({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let u=e.map(y=>{let x=w.sizeFromShape(y.shape.slice(t));return ve({inputs:{x:y},backend:n,attrs:{shape:[-1,x]}})}),d=u.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),p=N.computeOutShape(u.map(y=>y.shape),1),h=u[0].shape[0]===1,f=FQ(d,p,s,h),m=N.computeOutShape(e.map(y=>y.shape),t),g=n.makeTensorInfo(m,s,f);return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g}if(e.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),d=wc(e.slice(0,u),t,n),p=wc(e.slice(u),t,n),h=wc([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new Lne(e.map(d=>d.shape),t);return n.runWebGLProgram(u,e,s)}let{tensors2D:a,outShape:o}=Wne(e,t,n),i=new zne(a.map(u=>u.shape)),l=n.runWebGLProgram(i,a,s);a.forEach(u=>n.disposeIntermediateTensorInfo(u));let c=ve({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function Wne(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ve({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function QC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return Cs({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),wc(i,a,n)}var Vne={kernelName:Ai,backendName:"webgl",kernelFunc:QC},e4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,x=m?3:1,A="",b="";n&&(s?A=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?A=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:A=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${A}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${v}
        ${b}
        setOutput(result);
      }
    `}},Une=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Gne=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ps(this.outputShape.length);let{dataFormat:n}=t,s=jn(),r=n==="channelsLast",a=r?0:1,o=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.y + ${u};
          pos = rc.x + ${c};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+u}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+u}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function t4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=s.texData.get(e.dataId),u=n.inChannels,d=l[0]*l[1]*l[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(!((d===1||p===1)&&u>GC)&&c.isPacked&&h&&c.texture!=null&&l[2]%2!==0&&w.arraysEqual(c.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),v={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,w.assert(Np(c.shape,v.shape),()=>`packed reshape ${c.shape} to ${v.shape} isn't free`);let I=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let E=n0({a:v,b:I,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=s.texData.get(E.dataId);w.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,R.shape=n.outShape,g=Cs({inputs:{x:E},backend:s}),g.shape=n.outShape,y.push(E)}else{let b=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],v=ve({inputs:{x:e},backend:s,attrs:{shape:[1,b,n.inChannels]}}),C=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=n0({a:v,b:C,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=ve({inputs:{x:I},backend:s,attrs:{shape:n.outShape}}),y.push(v),y.push(C),y.push(I)}for(let b of y)s.disposeIntermediateTensorInfo(b);return g}function n4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=l*c*u,g=p*d,y=[m,g],x=!0,A=!1,b=[],v=ve({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),C=ve({inputs:{x:t},backend:s,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});b.push(v),b.push(C);let I=new Gne(y,n),E=[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=s.runWebGLProgram(I,[v],"float32",E),F=ve({inputs:{x:R},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(R),b.push(F);let _=r!=null,P=a!=null,T=i==="leakyrelu",O=i?Qm(i,!0):null,G=new LC(F.shape,C.shape,[1,g,n.outChannels],x,A,_,O,P,T),K=[F,C];if(r&&K.push(r),P&&K.push(a),T){let Q=s.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));K.push(Q),b.push(Q)}let z=s.runWebGLProgram(G,K,"float32"),j=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],W=ve({inputs:{x:z},backend:s,attrs:{shape:j}});b.push(z);for(let Q of b)s.disposeIntermediateTensorInfo(Q);return W}function Hne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=t4({x:r,filter:a,convInfo:p,backend:n});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=n4({x:r,filter:a,convInfo:p,backend:n});else{let m=new e4(p);h=n.runWebGLProgram(m,[r,a],"float32")}let f=ve({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}var jne={kernelName:Ba,backendName:"webgl",kernelFunc:Hne},qne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Xne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,c=a?2:3,u=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Kne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Zne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Yne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),h=new qne(p);return n.runWebGLProgram(h,[r,a],"float32")}var Jne={kernelName:Wh,backendName:"webgl",kernelFunc:Yne};function Qne(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=new Xne(p);return n.runWebGLProgram(h,[r,a],"float32")}var ese={kernelName:Wa,backendName:"webgl",kernelFunc:Qne};function tse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=N.computeConv3DInfo(r.shape,a.shape,o,l,i),u=new Une(c);return n.runWebGLProgram(u,[r,a],"float32")}var nse={kernelName:yd,backendName:"webgl",kernelFunc:tse};function sse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,c=N.computeConv3DInfo(r.shape,l,o,1,i),u=new Kne(c);return n.runWebGLProgram(u,[r,a],"float32")}var rse={kernelName:Vh,backendName:"webgl",kernelFunc:sse};function ase(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,c=N.computeConv3DInfo(l,a.shape,i,1,o),u=new Zne(c);return n.runWebGLProgram(u,[r,a],"float32")}var ose={kernelName:Uh,backendName:"webgl",kernelFunc:ase},ise=bc+`
  return cos(x);
`,lse=it({opSnippet:ise}),use={kernelName:Va,backendName:"webgl",kernelFunc:lse},cse=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,dse=it({opSnippet:cse}),pse={kernelName:Ua,backendName:"webgl",kernelFunc:dse},hse=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[c]=t,[u,d]=n;this.outputShape=[c,u,d,l];let p=s==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,y]=u>1?[`${(o-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,A,b]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${A};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},fse=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new hse(r.shape,a.shape,i,l,c);return n.runWebGLProgram(u,[r,a,o],"float32")},mse={kernelName:bi,backendName:"webgl",kernelFunc:fse},s4=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let s=e.length,r=t?"0.0":`getX(${r4(s,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${wt(s)} coords = getOutputCoords();
        int end = ${a4(s,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${a4(s,"coords")} = idx;
          val += getX(${r4(s,"coords")});
        }
        setOutput(val);
      }
    `}};function r4(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function a4(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function gse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length,c=N.getAxesPermutation([a],l),u=r;c!=null&&(u=Xn({inputs:{x:r},backend:n,attrs:{perm:c}}));let d=N.getInnerMostAxes(1,l)[0];if(d!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);let p=u.shape[d],h=Cs({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new s4(u.shape,!1,i),g=[[f]],y=h;h=n.runWebGLProgram(m,[h],h.dtype,g),n.disposeIntermediateTensorInfo(y)}if(o){let f=new s4(u.shape,o,i),m=h;h=n.runWebGLProgram(f,[h],h.dtype),n.disposeIntermediateTensorInfo(m)}if(c!=null){let f=N.getUndoAxesPermutation(c),m=Xn({inputs:{x:h},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),m}return h}var yse={kernelName:xi,backendName:"webgl",kernelFunc:gse};function Ase(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=kC(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=PQ(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var xse={kernelName:Gh,backendName:"webgl",kernelFunc:Ase},bse=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function vse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=new bse(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var wse={kernelName:vi,backendName:"webgl",kernelFunc:vse},o4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ps(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",c="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${c}
        setOutput(result);
      }
    `}},i4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ps(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,d=u,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<u;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let y=g*2;if(p+=`
          xC = xCCorner + ${y*l};
          `,i===1){if(y<u&&(o%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<u)){let x=o%2===0?w.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):x===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<u&&(o%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<u&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<u&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<u&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<u&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function kse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let d=N.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p;Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?p=new i4(d):p=new o4(d);let h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",h)}var Ise={kernelName:Ga,backendName:"webgl",kernelFunc:kse},Sse=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Cse=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Tse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s,d=N.computeConv2DInfo(r.shape,u,o,i,l,c,!0),p=new Sse(d);return n.runWebGLProgram(p,[r,a],"float32")}var Nse={kernelName:Hh,backendName:"webgl",kernelFunc:Tse};function Ese(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s,d=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),p=new Cse(d);return n.runWebGLProgram(p,[r,a],"float32")}var Rse={kernelName:jh,backendName:"webgl",kernelFunc:Ese},_se=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Dse(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=w.sizeFromShape(s.shape),o=ve({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new _se(a),l=n.runWebGLProgram(i,[o],o.dtype),c=ve({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var Pse={kernelName:qh,backendName:"webgl",kernelFunc:Dse},$se=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:c}=e,{top:u,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${u}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Fse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=N.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),u,d=new $se(c);u=n.runWebGLProgram(d,[r,a],"float32");let p=ve({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),p}var Ose={kernelName:Ad,backendName:"webgl",kernelFunc:Fse};function Mse(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:x}=N.getEinsumPermutation(h,l[g]),A;N.isIdentityPermutation(y)?A=a[g]:(A=Xn({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(A.shape,b)||(A=ve({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),p===null?p=A:(p=Px({inputs:{a:A,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=t0({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var zse={kernelName:xd,backendName:"webgl",kernelFunc:Mse},Lse="return (x >= 0.0) ? x : (exp(x) - 1.0);",Bse=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Wse=it({opSnippet:Lse,packedOpSnippet:Bse}),Vse={kernelName:ja,backendName:"webgl",kernelFunc:Wse},Use="return (b >= 1.0) ? a : a * (b + 1.0);",Gse=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Hse=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _p(Gse,s.shape,r.shape):new xc(Use,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},jse={kernelName:Zh,backendName:"webgl",kernelFunc:Hse},qse=`
  return vec4(equal(a, b));
`,Xse="return float(a == b);",Kse=Cn({opSnippet:Xse,packedOpSnippet:qse,dtype:"bool",cpuKernelImpl:OQ}),Zse={kernelName:wi,backendName:"webgl",kernelFunc:Kse},Yse=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Jse=it({opSnippet:Yse}),Qse={kernelName:Au,backendName:"webgl",kernelFunc:Jse},ere=bc+`
  return exp(x);
`,tre=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,l4=it({opSnippet:ere,packedOpSnippet:tre,cpuKernelImpl:MQ,dtype:"float32"}),nre={kernelName:qa,backendName:"webgl",kernelFunc:l4};function Mx(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(w.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),ve({inputs:{x:a},backend:s,attrs:{shape:i}})}var sre={kernelName:ki,backendName:"webgl",kernelFunc:Mx},u4="return exp(x) - 1.0;",rre=it({opSnippet:u4,packedOpSnippet:u4,cpuKernelImpl:zQ}),are={kernelName:Ii,backendName:"webgl",kernelFunc:rre},c4=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function d4(e,t,n){let s=n.texData.get(e.dataId),r=w.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=ve({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,c=new c4("real",l,t),u=new c4("imag",l,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Yo({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let m=ve({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function ore(e){let{inputs:t,backend:n}=e,{input:s}=t;return d4(s,!1,n)}var ire={kernelName:Yh,backendName:"webgl",kernelFunc:ore},lre=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function $p(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let o=w.getArrayFromDType(a,w.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new lre(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var ure={kernelName:xu,backendName:"webgl",kernelFunc:$p},cre=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},dre={kernelName:Si,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new cre(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},p4="return floor(x);",pre=it({opSnippet:p4,packedOpSnippet:p4,cpuKernelImpl:LQ}),hre={kernelName:Xa,backendName:"webgl",kernelFunc:pre},fre=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,mre=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,gre=Cn({opSnippet:fre,packedOpSnippet:mre,dtype:"int32"}),yre={kernelName:Ka,backendName:"webgl",kernelFunc:gre},Are=class{constructor(e){this.variableNames=["A"];let t=jn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},xre=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=jn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},bre={kernelName:_d,backendName:"webgl",kernelFunc:vre},kc;function vre(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],d=[c,l,a];(i||o)&&(kc==null&&(kc=document.createElement("canvas").getContext("2d")),kc.canvas.width=l,kc.canvas.height=c,kc.drawImage(r,0,0,l,c),r=kc.canvas);let p=n.makeTensorInfo(u,"int32");n.texData.get(p.dataId).usage=ar.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);let h=Y().getBool("WEBGL_PACK")?new xre(d):new Are(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}function wre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),y,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=t4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=n4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,v=i!=null,C=h==="leakyrelu",I=h?Qm(h,!1):null,E=new e4(g,b,I,v,C),R=[r,a];if(o&&R.push(o),i&&R.push(i),C){let F=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));R.push(F),x.push(F)}y=n.runWebGLProgram(E,R,"float32")}let A=ve({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var kre={kernelName:No,backendName:"webgl",kernelFunc:wre};function Ire(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=s,f=[],m=u;m==null&&(m=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=N.computeConv2DInfo(r.shape,a.shape,l,m,c,d,!0),y=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=p?Qm(p,y):null,A=[r,a],b=o!=null,v=i!=null,C=p==="leakyrelu";if(b&&A.push(o),v&&A.push(i),C){let F=n.makeTensorInfo([],"float32",w.createScalarValue(h,"float32"));A.push(F),f.push(F)}let I;y?I=new i4(g,b,x,v,C):I=new o4(g,b,x,v,C);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(I,A,"float32",E);return f.forEach(F=>n.disposeIntermediateTensorInfo(F)),R}var Sre={kernelName:Eo,backendName:"webgl",kernelFunc:Ire},Cre=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=wt(t.length),r=wt(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Tre(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=w.sizeFromShape(s.shape),[l,c,u,d]=N.prepareAndValidate(s,r),p=ve({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=ve({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),x=n.bufferSync(s),A=BQ(y,x,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,A.values)}let f=new Cre(o,d,[c,u]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var Nre={kernelName:Ti,backendName:"webgl",kernelFunc:Tre},Ere=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=wt(this.rank),s=Rre(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function Rre(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function h4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=w.parseAxisParam(o,r.shape)[0];if(Y().get("DEBUG")){let x=n.readSync(a.dataId),A=r.shape[l];for(let b=0;b<x.length;++b){let v=x[b];w.assert(v<=A-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${A-1}]`)}}let c=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),u=w.sizeFromShape(a.shape),d=[],p=ve({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=ve({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(p),d.push(h);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let x=n.bufferSync(h),A=n.bufferSync(p),b=WQ(A,x,f);return d.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}let m=new Ere(p.shape,f),g=n.runWebGLProgram(m,[p,h],p.dtype);d.push(g);let y=ve({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(x=>n.disposeIntermediateTensorInfo(x)),y}var _re={kernelName:Ci,backendName:"webgl",kernelFunc:h4},Dre="return float(a > b);",Pre=`
  return vec4(greaterThan(a, b));
`,$re=Cn({opSnippet:Dre,packedOpSnippet:Pre,cpuKernelImpl:VQ,dtype:"bool"}),Fre={kernelName:Ni,backendName:"webgl",kernelFunc:$re},Ore="return float(a >= b);",Mre=`
  return vec4(greaterThanEqual(a, b));
`,zre=Cn({opSnippet:Ore,packedOpSnippet:Mre,dtype:"bool",cpuKernelImpl:UQ}),Lre={kernelName:Ya,backendName:"webgl",kernelFunc:zre};function Bre(e){let{inputs:t,backend:n}=e,{input:s}=t;return d4(s,!0,n)}var Wre={kernelName:Jh,backendName:"webgl",kernelFunc:Bre},Vre="return float(!isnan(x) && !isinf(x));",Ure=it({opSnippet:Vre,dtype:"bool"}),Gre={kernelName:bu,backendName:"webgl",kernelFunc:Ure},Hre="return float(isinf(x));",jre=it({opSnippet:Hre,dtype:"bool"}),qre={kernelName:vu,backendName:"webgl",kernelFunc:jre},Xre="return float(isnan(x));",Kre=it({opSnippet:Xre,dtype:"bool"}),Zre={kernelName:wu,backendName:"webgl",kernelFunc:Kre},Yre="return float(a < b);",Jre=`
  return vec4(lessThan(a, b));
`,Qre=Cn({opSnippet:Yre,packedOpSnippet:Jre,cpuKernelImpl:GQ,dtype:"bool"}),eae={kernelName:Ei,backendName:"webgl",kernelFunc:Qre},tae="return float(a <= b);",nae=`
  return vec4(lessThanEqual(a, b));
`,sae=Cn({opSnippet:tae,packedOpSnippet:nae,cpuKernelImpl:HQ,dtype:"bool"}),rae={kernelName:Ri,backendName:"webgl",kernelFunc:sae};function aae(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=jQ(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var oae={kernelName:Qh,backendName:"webgl",kernelFunc:aae},iae=bc+`
  return x < 0.0 ? 0./0. : log(x);
`,lae=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,uae=it({opSnippet:iae,packedOpSnippet:lae,cpuKernelImpl:qQ}),cae={kernelName:eo,backendName:"webgl",kernelFunc:uae},dae=bc+`
  return log(1.0 + x);
`,pae=it({opSnippet:dae}),hae={kernelName:ku,backendName:"webgl",kernelFunc:pae},fae="return float(a >= 1.0 && b >= 1.0);",mae=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,gae=Cn({opSnippet:fae,packedOpSnippet:mae,dtype:"bool"}),yae={kernelName:_i,backendName:"webgl",kernelFunc:gae},Aae="return float(!(x >= 1.0));",xae=it({opSnippet:Aae}),bae={kernelName:Iu,backendName:"webgl",kernelFunc:xae},vae="return float(a >= 1.0 || b >= 1.0);",wae=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,kae=Cn({opSnippet:vae,packedOpSnippet:wae,dtype:"bool"}),Iae={kernelName:vd,backendName:"webgl",kernelFunc:kae},Sae=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Cae=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},Tae=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,c=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Cae(r.shape,a,o,i,l):new Sae(r.shape,a,o,i,l);return n.runWebGLProgram(c,[r],r.dtype)},Nae={kernelName:wd,backendName:"webgl",kernelFunc:Tae},Eae=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},Rae=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s,d=new Eae(r.shape,i,l,c,u);return n.runWebGLProgram(d,[r,a,o],r.dtype)},_ae={kernelName:ef,backendName:"webgl",kernelFunc:Rae};function Dae(e,t,n,s){let r=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=$l(i,e.dtype,"max",s),c=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}function f4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=n.shouldExecuteOnCPU([r]),h=r;if(d){if(p){let A=n.texData.get(h.dataId).values,b=new Array(i);for(let I=0;I<b.length;I++)b[I]=r.shape[u[I]];let v=Dx(A,r.shape,r.dtype,u,b);h=n.makeTensorInfo(b,r.dtype);let C=n.texData.get(h.dataId);C.values=v}else h=e0(r,u,n);c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("max",c,i);let[f,m]=N.computeOutAndReduceShapes(h.shape,c),g=f;o&&(g=N.expandShapeToKeepDim(f,l));let y;if(p){let A=n.texData.get(h.dataId).values,b=XQ(A,w.sizeFromShape(m),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let v=n.texData.get(y.dataId);v.values=b}else y=Dae(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),y}var Pae={kernelName:to,backendName:"webgl",kernelFunc:f4},$ae=$C+`
  return max(a, b);
`,Fae=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Jm+`
  return result;
`,Oae=Cn({opSnippet:$ae,packedOpSnippet:Fae,cpuKernelImpl:KQ}),Mae={kernelName:no,backendName:"webgl",kernelFunc:Oae};function zae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;pc(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;w.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Cs({inputs:{x:r},backend:n});let d=new Dp(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var Lae={kernelName:so,backendName:"webgl",kernelFunc:zae};function Bae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],d=N.computePool3DInfo(r.shape,a,o,u,i,c,l),p=new $x(d,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var Wae={kernelName:kd,backendName:"webgl",kernelFunc:Bae},Vae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Uae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=l-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Gae(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new $x(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new Uae(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var Hae={kernelName:nf,backendName:"webgl",kernelFunc:Gae};function jae(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;pc([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=!0,f=new Dp(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new Vae(p),y=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}var qae={kernelName:tf,backendName:"webgl",kernelFunc:jae};function Xae(e,t,n,s){let r=new Dp(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new Dp(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var Kae={kernelName:sf,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;w.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let c=[1,1];w.assert(N.eitherStridesOrDilationsAreOne(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let u=N.computePool2DInfo(s.shape,r,a,c,o),[d,p]=Xae(s,i,u,l);return[d,p]}};function Zae(e,t,n,s){let r=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=$l(i,"float32","mean",s),c=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}var Yae={kernelName:ro,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=w.parseAxisParam(a,s.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=o.shouldExecuteOnCPU([s]),h=[],f=s;if(d){if(p){let b=o.texData.get(f.dataId).values,v=new Array(i);for(let E=0;E<v.length;E++)v[E]=s.shape[u[E]];let C=Dx(b,s.shape,s.dtype,u,v);f=o.makeTensorInfo(v,s.dtype);let I=o.texData.get(f.dataId);I.values=C}else f=e0(s,u,o);h.push(f),c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("sum",c,i);let[m,g]=N.computeOutAndReduceShapes(f.shape,c),y=m;r&&(y=N.expandShapeToKeepDim(m,l));let x=Zae(f,g,y,o);for(let A of h)o.disposeIntermediateTensorInfo(A);return x}};function Jae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=Xn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=$l(m,m.dtype,"min",n),y;if(o){let x=N.expandShapeToKeepDim(p,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var Qae={kernelName:ao,backendName:"webgl",kernelFunc:Jae},eoe=$C+`
  return min(a, b);
`,toe=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Jm+`
  return result;
`,noe=Cn({opSnippet:eoe,packedOpSnippet:toe,cpuKernelImpl:ZQ}),soe={kernelName:oo,backendName:"webgl",kernelFunc:noe},roe=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let s=e.length,r=wt(s),a=t.map(c=>c[0]).join(","),o=t.map((c,u)=>c[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},aoe=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=wt(s),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=qn("rc",s),l=qn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=n==="reflect"?0:1,p="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${i[s-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},ooe=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aoe(s.shape,r,a):new roe(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},ioe={kernelName:io,backendName:"webgl",kernelFunc:ooe},loe=`if (b == 0.0) return NAN;
  return mod(a, b);`,uoe=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Jm+`
  return result;
`,coe=Cn({opSnippet:loe,packedOpSnippet:uoe}),doe={kernelName:Su,backendName:"webgl",kernelFunc:coe},poe=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},hoe=`
if (a == b) {
  return 1.0;
};
return a / b;`,foe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,m4=Cn({opSnippet:hoe,packedOpSnippet:foe,checkOutOfBounds:!0}),moe={kernelName:Ha,backendName:"webgl",kernelFunc:m4},g4="return a - b;",y4=Cn({opSnippet:g4,packedOpSnippet:g4,supportsComplex:!0,cpuKernelImpl:pee}),goe={kernelName:ko,backendName:"webgl",kernelFunc:y4};function A4(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=w.parseAxisParam([a],r.shape),i=f4({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=ve({inputs:{x:i},backend:n,attrs:{shape:l}}),u=y4({inputs:{a:r,b:c},backend:n}),d=l4({inputs:{x:u},backend:n}),p=t0({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=ve({inputs:{x:p},backend:n,attrs:{shape:l}}),f=m4({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var yoe={kernelName:vo,backendName:"webgl",kernelFunc:A4};function Aoe(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:A4({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],d=new poe(c,u,a),p=[[o]],h=n.runWebGLProgram(d,[l],"int32",p);return i||n.disposeIntermediateTensorInfo(l),h}var xoe={kernelName:rf,backendName:"webgl",kernelFunc:Aoe},boe=or+`
  return -x;
`,voe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function woe(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=JQ(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Pl(s.shape,voe):r=new ua(s.shape,boe),n.runWebGLProgram(r,[s],s.dtype)}var koe={kernelName:Di,backendName:"webgl",kernelFunc:woe},Ioe=tr.nonMaxSuppressionV3Impl;function Soe(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=Ioe(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Coe={kernelName:$i,backendName:"webgl",kernelFunc:Soe},Toe=tr.nonMaxSuppressionV4Impl;function Noe(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:h}=Toe(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Eoe={kernelName:Cu,backendName:"webgl",kernelFunc:Noe},Roe=tr.nonMaxSuppressionV5Impl;function _oe(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=Roe(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Doe={kernelName:Fi,backendName:"webgl",kernelFunc:_oe},Poe=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},$oe=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=w.sizeFromShape(r.shape),c=new Poe(l,a,o,i),u=ve({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[u],r.dtype);n.disposeIntermediateTensorInfo(u);let p=[...r.shape,a],h=ve({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},Foe={kernelName:Mi,backendName:"webgl",kernelFunc:$oe};function o0(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Pp({inputs:{input:s},backend:n}),a=o0({inputs:{x:r},backend:n}),o=a0({inputs:{input:s},backend:n}),i=o0({inputs:{x:o},backend:n}),l=Yo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return $p({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Ooe={kernelName:el,backendName:"webgl",kernelFunc:o0};function x4(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Pp({inputs:{input:s},backend:n}),a=x4({inputs:{x:r},backend:n}),o=a0({inputs:{input:s},backend:n}),i=o0({inputs:{x:o},backend:n}),l=Yo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return $p({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Moe={kernelName:Oi,backendName:"webgl",kernelFunc:x4};function zoe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Mx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Mx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=QC({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var Loe={kernelName:zi,backendName:"webgl",kernelFunc:zoe},Boe=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let s=e.length,r=wt(s),a=t.map(l=>l[0]).join(","),o=t.map((l,c)=>l[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Woe=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=wt(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=qn("rc",s),l=qn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${c}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${d[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${u});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},b4=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(w.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return $p({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Woe(r.shape,a,o):new Boe(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},Voe={kernelName:uo,backendName:"webgl",kernelFunc:b4},Uoe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Goe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Jm+`
  return result;
`,Hoe=Cn({opSnippet:Uoe,packedOpSnippet:Goe}),joe={kernelName:co,backendName:"webgl",kernelFunc:Hoe};function qoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],c=w.parseAxisParam(a,r.shape),u=c,d=N.getAxesPermutation(u,i),p=r;d!=null&&(p=Xn({inputs:{x:r},backend:n,attrs:{perm:d}}),u=N.getInnerMostAxes(u.length,i),l.push(p)),N.assertAxesAreInnerMostDims("prod",u,i);let h;if(n.shouldExecuteOnCPU([p])){let f=n.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:y}=eee(p.shape,p.dtype,f,u);h=n.makeTensorInfo(g,y,m)}else{let[f,m]=N.computeOutAndReduceShapes(p.shape,u),g=w.sizeFromShape(m),y=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),x=Bd(r.dtype),A=$l(y,x,"prod",n);h=ve({inputs:{x:A},backend:n,attrs:{shape:f}}),l.push(y),l.push(A)}if(o){l.push(h);let f=N.expandShapeToKeepDim(h.shape,c);h=ve({inputs:{x:h},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var Xoe={kernelName:Li,backendName:"webgl",kernelFunc:qoe},v4=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=tee(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Koe={kernelName:Tu,backendName:"webgl",kernelFunc:v4},Zoe="return 1.0 / x;",Yoe=it({opSnippet:Zoe}),Joe={kernelName:Nu,backendName:"webgl",kernelFunc:Yoe},Qoe=or+`
  return (x < 0.0) ? 0.0 : x;
`,eie=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,tie=it({opSnippet:Qoe,packedOpSnippet:eie}),nie={kernelName:ho,backendName:"webgl",kernelFunc:tie},sie=or+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,rie=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,aie=it({opSnippet:sie,packedOpSnippet:rie}),oie={kernelName:mo,backendName:"webgl",kernelFunc:aie},iie=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},lie=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function uie(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lie(r.shape,l,c,a,o):new iie(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],"float32")}var cie={kernelName:fo,backendName:"webgl",kernelFunc:uie},die=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function pie(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new die(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var hie={kernelName:of,backendName:"webgl",kernelFunc:pie},fie=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},mie=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function gie(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mie(r.shape,l,c,a,o):new fie(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],r.dtype)}var yie={kernelName:Eu,backendName:"webgl",kernelFunc:gie},Aie=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function xie(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Aie(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var bie={kernelName:af,backendName:"webgl",kernelFunc:xie},vie=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=wt(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},wie=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=qn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=wt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${r}) {
              result.a = ${u(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return d(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",d(h)}function c(h){return h[n-2]="("+h[n-2]+" + 1)",d(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",d(h)}function d(h){let f=e.map((y,x)=>p(x,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function kie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=w.parseAxisParam(a,r.shape);if(o===0)return Cs({inputs:{x:r},backend:n});let l=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wie(r.shape,i):new vie(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var Iie={kernelName:Wi,backendName:"webgl",kernelFunc:kie},Sie=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Cie={kernelName:tl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Sie(s.shape,a),[c,u]=N.getImageCenter(o,s.shape[1],s.shape[2]),d=[[c,u,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,d)}},Tie=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Nie=it({opSnippet:Tie}),Eie={kernelName:Vi,backendName:"webgl",kernelFunc:Nie},Rie="return inversesqrt(x);",_ie=it({opSnippet:Rie,cpuKernelImpl:nee}),Die={kernelName:go,backendName:"webgl",kernelFunc:_ie},w4=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=wt(r.length),l=wt(a.length),c="";n===1?c="i":n===2&&(c="i, j");let u=`getIndices(${c})`,d="";s===1?d="i":s===2&&(d="i, coords[1]");let p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Pie(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=ve({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=ve({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new w4(l,i,h.shape.length,f.shape.length,u,p),y=n.runWebGLProgram(g,[f,h,m],f.dtype),x=ve({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}var $ie={kernelName:Ui,backendName:"webgl",kernelFunc:Pie},Fie=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let c=0;c<t.length;c++)l.push(`${o[c]}`),c<e&&i.push(`${o[c]}`);s=i.join(),r=l.join()}let a=wt(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Oie(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new Fie(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],Wn(r.dtype,a.dtype))}var Mie={kernelName:Gi,backendName:"webgl",kernelFunc:Oie},zie=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Lie=it({opSnippet:zie}),Bie={kernelName:Ru,backendName:"webgl",kernelFunc:Lie},Wie=bc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Vie=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Uie=it({opSnippet:Wie,packedOpSnippet:Vie,cpuKernelImpl:see}),Gie={kernelName:Ao,backendName:"webgl",kernelFunc:Uie},Hie=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,jie=it({opSnippet:Hie}),qie={kernelName:_u,backendName:"webgl",kernelFunc:jie},Xie=bc+`
  return sin(x);
`,Kie=it({opSnippet:Xie}),Zie={kernelName:yo,backendName:"webgl",kernelFunc:Kie},Yie=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Jie=it({opSnippet:Yie}),Qie={kernelName:ji,backendName:"webgl",kernelFunc:Jie},ele=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,tle=it({opSnippet:ele}),nle={kernelName:Du,backendName:"webgl",kernelFunc:tle},sle=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let c=[],u=b4({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=ve({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Xn({inputs:{x:f},backend:n,attrs:{perm:p}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},rle={kernelName:qi,backendName:"webgl",kernelFunc:sle};function ale(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[d,p,h,f,m]=aee(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var ole={kernelName:Sd,backendName:"webgl",kernelFunc:ale};function ile(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[c,u,d]=oee(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var lle={kernelName:Pu,backendName:"webgl",kernelFunc:ile};function ule(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=SC(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var cle={kernelName:Cd,backendName:"webgl",kernelFunc:ule};function dle(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=SC(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var ple={kernelName:Td,backendName:"webgl",kernelFunc:dle};function hle(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,r,i),p=!1,h=new w4(c,l,r.shape.length,a.shape.length,u,[d,1],p),f=n.runWebGLProgram(h,[a,r,o],a.dtype),m=ve({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var fle={kernelName:Nd,backendName:"webgl",kernelFunc:hle};function mle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=w.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=vc({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var gle={kernelName:Xi,backendName:"webgl",kernelFunc:mle},k4="return sqrt(x);",yle=it({opSnippet:k4,packedOpSnippet:k4,cpuKernelImpl:iee}),Ale={kernelName:xo,backendName:"webgl",kernelFunc:yle},xle="return x * x;",ble=it({opSnippet:xle}),vle={kernelName:$u,backendName:"webgl",kernelFunc:ble},I4="return (a - b) * (a - b);",wle=Cn({opSnippet:I4,packedOpSnippet:I4}),kle={kernelName:wo,backendName:"webgl",kernelFunc:wle};function Ile({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=or+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new ua(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var Sle={kernelName:Co,backendName:"webgl",kernelFunc:Ile},Cle=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=wt(n.length),a=wt(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,c)=>(i++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${i-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function Tle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),v;if(m)v=ve({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let I=zt.computeOutShape(x,A,b),E=vc({inputs:{x:r},backend:n,attrs:{begin:x,size:I}});v=ve({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([r])){let E=n.readSync(r.dataId),R=Le(r.shape,r.dtype,E),F=lee(h,R,b,x);v=n.makeTensorInfo(f,r.dtype,F.values)}else{let E=new Cle(x,b,h);v=n.runWebGLProgram(E,[r],r.dtype)}let C=ve({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),C}var Nle={kernelName:Ki,backendName:"webgl",kernelFunc:Tle};function Ele(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=uee(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Rle={kernelName:Ed,backendName:"webgl",kernelFunc:Ele};function _le(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[c,u,d]=cee(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var Dle={kernelName:lf,backendName:"webgl",kernelFunc:_le};function Ple(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=dee(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var $le={kernelName:uf,backendName:"webgl",kernelFunc:Ple},Fle="return tan(x);",Ole=it({opSnippet:Fle}),Mle={kernelName:Zi,backendName:"webgl",kernelFunc:Ole},zle=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Lle=it({opSnippet:zle}),Ble={kernelName:Io,backendName:"webgl",kernelFunc:Lle},Wle=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=wt(this.rank),r=Vle(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Vle(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function S4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>w.decodeString(p)):l,u=Le(r.shape,r.dtype,c),d=hee(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Wle(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var Ule={kernelName:Jr,backendName:"webgl",kernelFunc:S4},Gle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Hle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Fl(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function C4(e){let t=1;for(;t<e;)t*=2;return t}function jle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(n.shouldExecuteOnCPU([r])||u<i||a>l){let F=n.readSync(r.dataId),[_,P]=fee(F,c,r.dtype,a,o);return[n.makeTensorInfo(_.shape,_.dtype,_.values),n.makeTensorInfo(P.shape,P.dtype,P.values)]}if(a===0)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(u===1)return[r,$p({attrs:{shape:c,dtype:"int32",value:0},backend:n})];let d=n.texData.get(r.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(r):r,m=w.sizeFromShape(c)/u,g=ve({inputs:{x:h},attrs:{shape:[m,u]},backend:n});p&&Fl(n,h);let y=C4(a),x=C4(u),A=null,b=()=>A===null?[g,g]:[g,A],v=(F,_,P)=>{let T=b(),O=new Gle(P),K=[[u],[A===null?1:0],[Number.NEGATIVE_INFINITY],[F],[_]],z=A;A=n.runWebGLProgram(O,T,"int32",K),Fl(n,z)};for(let F=1;F<y;F*=2){let _=F*2;for(let P=F;P>=1;P/=2)v(_,P,[m,x])}for(let F=x;F>y;F/=2){let _=b(),P=new Hle([m,F/2]),O=[[u],[A===null?1:0],[y]],G=A;A=n.runWebGLProgram(P,_,"int32",O),Fl(n,G);let K=y/2,z=K*2;for(let j=K;j>=1;j/=2)v(z,j,A.shape)}let C=A;A=vc({inputs:{x:A},backend:n,attrs:{begin:0,size:[m,a]}}),Fl(n,C);let I=h4({inputs:{x:g,indices:A},backend:n,attrs:{axis:1,batchDims:1}});Fl(n,g);let E=c.slice(0,-1);E.push(a),C=A,A=ve({inputs:{x:A},attrs:{shape:E},backend:n}),Fl(n,C);let R=I;return I=ve({inputs:{x:I},attrs:{shape:E},backend:n}),Fl(n,R),[I,A]}var qle={kernelName:Yi,backendName:"webgl",kernelFunc:jle},Xle=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Kle(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new Xle(d,p,o,i,l,g);return n.runWebGLProgram(y,[r,a],"float32")}var Zle={kernelName:Ji,backendName:"webgl",kernelFunc:Kle};function Yle(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;pc(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:c}=mee(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var Jle={kernelName:cf,backendName:"webgl",kernelFunc:Yle};function Qle(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=vc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),y=ve({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var eue={kernelName:Qi,backendName:"webgl",kernelFunc:Qle},tue=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",c=Math.floor(n/4)*4,u=n%4,d=`
        sumValue += dot(values, segFilter);
    `,p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function nue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],c=0,u=N.getAxesPermutation([c],i),d=r;u!=null&&(d=Xn({inputs:{x:r},backend:n,attrs:{perm:u}}),l.push(d),c=N.getInnerMostAxes(1,i)[0]);let p=N.segment_util.computeOutShape(d.shape,c,o),h=w.sizeFromShape([d.shape[c]]),f=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=Bd(r.dtype),g=(b,v,C,I,E)=>{let R=b.shape[0],F=b.shape[1],_=N.segment_util.segOpComputeOptimalWindowSize(F,E),P={windowSize:_,inSize:F,batchSize:R,numSegments:E},T=new tue(P,v),O=n.compileAndRun(T,[b,C],I);if(l.push(O),O.shape[1]===E)return O;let G=v4({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),K=S4({inputs:{x:G},backend:n,attrs:{reps:[F/_]}});return l.push(G),l.push(K),g(O,v,K,I,E)},y=g(f,"unsortedSegmentSum",a,m,o),x=ve({inputs:{x:y},backend:n,attrs:{shape:p}}),A=x;if(u!=null){l.push(x);let b=N.getUndoAxesPermutation(u);A=Xn({inputs:{x:A},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var sue={kernelName:Rd,backendName:"webgl",kernelFunc:nue},rue=[cte,pte,mte,Ate,bte,kte,Ste,Tte,_te,Pte,Ote,Lte,Vte,jte,Kte,Yte,Qte,sne,ane,ine,dne,Ane,bne,wne,Nne,Rne,$ne,Hee,Mne,Vne,jne,Jne,ese,nse,rse,ose,use,pse,mse,yse,xse,wse,Ise,Nse,Rse,Pse,Ose,zse,Vse,jse,Zse,Qse,nre,sre,are,ire,ure,dre,hre,yre,bre,kre,Sre,Nre,_re,Fre,Lre,Gee,Wre,Bne,Gre,qre,Zre,qee,eae,rae,oae,cae,hae,yae,bae,Iae,Nae,_ae,Pae,Mae,Lae,Wae,Hae,qae,Kae,Yae,Qae,soe,ioe,doe,xoe,Jee,koe,Coe,Eoe,Doe,Ine,Foe,Moe,Loe,Voe,joe,Kee,Xoe,Koe,Sne,moe,Joe,nie,oie,ete,cie,hie,yie,bie,Iie,Cie,Eie,Die,$ie,Mie,Bie,Gie,qie,Zie,Qie,gne,yoe,nle,rle,ole,lle,cle,ple,fle,gle,Ale,vle,kle,Sle,Nle,Rle,Dle,$le,goe,ite,Mle,Ble,Ule,qle,Zle,lte,Jle,eue,sue,Ooe];for(let e of rue)Js(e);var Gr=Y();Gr.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Gr.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Gr.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Gr.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Gr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Gr.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Gr.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Gr.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Gr.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Gr.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function aue(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function kn(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function i0(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function zx(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
`}function ca(){return`
  ${zx()}
  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,
          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,
          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Je(){return`
    ${ca()}
      let index = getGlobalIndex();
`}function oue(e,t,n,s=!1){let r=[];if(r.push(`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),s===!0)return r.push(`
      struct Matrix0 {
        numbers: array<${i0(t.dtype,n.isVec4)}>;
      };
      struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `),[T4,r.join(`
`),N4(t.shape),n.getUserCode()].join(`
`);let a="struct Uniforms { NAN : f32; ";n.variableNames.forEach((d,p)=>{a+=`${d.charAt(0).toLowerCase()+d.slice(1)}Shape : ${kn(e[p].shape.length)}; `}),a+=`outShape : ${kn(t.shape.length)} ; `;let o=t.shape.length-1;a+=`
       outShapeStrides: ${kn(o)}; `,n.size&&(a+="size : i32; "),n.uniforms&&(a+=n.uniforms),a+="};",r.push(a),n.atomic?r.push(`
    struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):r.push(`
    struct Matrix0 {
        numbers: array<${i0(t.dtype,n.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),n.variableNames.forEach((d,p)=>{r.push(`
    struct Matrix${1+p} {
      numbers: array<${i0(e[p].dtype,n.isVec4)}>;
    };
    [[group(0), binding(${1+p})]] var<storage, read> ${d} : Matrix${1+p};
    `)}),a!==""&&r.push(`
    [[group(0), binding(${1+n.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `);let[i,l]=pue(t.shape,n.dispatchLayout),c=[T4,r.join(`
`),N4(t.shape),i,iue(t.shape.length)];if(n.atomic||c.push(lue(t.shape,t.dtype,n.isVec4)),l===t.shape.length){let d=e.map(p=>uue(p,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);c.push(d)}return c.push(n.getUserCode()),c.join(`
`)}var T4=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }
  fn isNanCustomVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isNanCustom(val[0]), isNanCustom(val[1]), isNanCustom(val[2]), isNanCustom(val[3]));
  }
`;function iue(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function lue(e,t,n){let s=e.length,r=i0(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3"].slice(0,s),i=kn(s);n?a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}function uue(e,t,n,s){let r=cue(e,n);return e.shape.length<=t.length&&(r+=due(e,t,n,s)),r}function cue(e,t){let n=e.name,s=e.shape.length,r=kn(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3"].slice(0,s),i=o.map(u=>`${u} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}.numbers[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}.numbers[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,c=`${s}D`;return s===0&&(c="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}.numbers[getIndexFromCoords${c}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}.numbers[getIndexFromCoords${c}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function due(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"ByOutput",i=e.shape.length,l=t.length,c=kn(l);if(w.arraysEqual(e.shape,t)&&s)return n?`
        fn ${o}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[globalIndex]);
        }

        fn ${o}Coords(coords : ${c}) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}Index(globalIndex : i32) -> f32 {
        return f32(${r}.numbers[globalIndex]);
      }

      fn ${o}Coords(coords : ${c}) -> f32 {
        return f32(${r}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let u=N.getBroadcastDims(e.shape,t),d=l-i,p="";if(i===0)return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}Coords(coords : ${c}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}Index(globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}Coords(coords : ${c}) -> f32{
        return get${a}();
      }
    `;l<2&&u.length>=1?p="coords = 0;":p=u.map(g=>`coords[${g+d}] = 0;`).join(`
`);let h="";if(l<2&&i>0)h="coords";else if(l>1){let g=kn(i),y=e.shape.map((x,A)=>`coords[${A+d}]`).join(", ");h=`${g}(${y})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${p}
        return ${r}.numbers[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }

      fn ${o}Coords(coordsIn : ${c}) -> vec4<f32> {
        var coords = coordsIn;
        ${p}
        return ${r}.numbers[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${o}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${p}
      return f32(${r}.numbers[getIndexFromCoords${m}(${h}, ${f})]);
    }

    fn ${o}Coords(coordsIn : ${c}) -> f32 {
      var coords = coordsIn;
      ${p}
      return f32(${r}.numbers[getIndexFromCoords${m}(${h}, ${f})]);
    }
  `}function pue(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords() -> ${kn(a)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,a];let o="",i=[n,s,r],l=0;for(let p=0;p<i.length;p++){let h=i[p];if(h.length!==0)if(l+=h.length,h.length===1)o+=`let d${h[0]} = i32(globalId[${p}]);`;else{let f=aue(h,"uniforms.outShape");o+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${p} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${p} - d${h[m]} * ${f[m]};`:o+=`index${p} = index${p} - d${h[m]} * ${f[m]};`}}let c=[];for(let p=0;p<l;p++)c.push(`d${p}`);let u=kn(l),d=`fn getOutputCoords() -> ${u} {
    ${o}
  `;return c.length===0?d+=`return ${u}(0); }`:d+=`return ${u}(${c.join(",")}); }`,[d,l]}function N4(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=w.computeStrides(e),s=kn(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides[${i}]`,c=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`;return`${l}; ${c};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var E4={};Me(E4,{ArrayBufferToTypedArray:()=>R4,GPUBytesPerElement:()=>Vx,computeDispatch:()=>Oe,computeWorkGroupSizeForConv2d:()=>Lx,computeWorkGroupSizeForMatMul:()=>Bx,computeWorkPerThreadForConv2d:()=>Wx,flatDispatchLayout:()=>je,isWebGPUSupported:()=>Ux,tilesFitEvenlyIntoShape:()=>da});var Ic=65535,Ol=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function da(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function Oe(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(Ol(e.x.map(l=>t[l]))/(n[0]*s[0])),e.y?Math.ceil(Ol(e.y.map(l=>t[l]))/(n[1]*s[1])):1,e.z?Math.ceil(Ol(e.z.map(l=>t[l]))/(n[2]*s[2])):1];if(r<=Ic&&a<=Ic&&o<=Ic)return[r,a,o];w.assert(r>Ic&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r));return i>Ic?(i=Math.ceil(Math.cbrt(r)),w.assert(i<=Ic,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function Lx(e,t){let n=Ol(e.x.map(r=>t[r])),s=Ol(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function Bx(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function Wx(e,t){let n=Ol(e.x.map(r=>t[r])),s=Ol(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function je(e){return{x:e.map((t,n)=>n)}}function Vx(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function R4(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Ux(){return!!navigator.gpu}var qt=(e=>(e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG",e))(qt||{}),hue="return a + b;",fue="return areal * breal - aimag * bimag;",mue="return areal * bimag + aimag * breal;",gue="return a / b;",yue="return a * b;",Aue="return (a - b) * (a - b);",xue="return a - b;",bue="return f32(a == b);",vue="return vec4<f32>(a == b);",wue="return f32(a > b);",kue="return vec4<f32>(a > b);",Iue="return f32(a >= b);",Sue="return vec4<f32>(a >= b);",Cue="return f32(a < b);",Tue="return vec4<f32>(a < b);",Nue="return f32(a <= b);",Eue="return vec4<f32>(a <= b);",Rue="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",_ue=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Due=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,_4=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Pue=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,$ue=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Fue="return f32(a != b);",Oue="return vec4<f32>(a != b);",Mue=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,zue=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${_4}
  return resultTemp;
  `,Lue="if (a < 0.0) { return b * a; }  return a;",Bue=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function D4(e,t){let n=t?_4:Due;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isNanCustomVec4(a) | isNanCustomVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function Fp(e,t){switch(e){case 0:return yue;case 1:return hue;case 2:return xue;case 3:return gue;case 4:return t?vue:bue;case 5:return t?kue:wue;case 6:return t?Sue:Iue;case 7:return t?Tue:Cue;case 8:return t?Eue:Nue;case 9:return t?_ue:Rue;case 10:return t?Oue:Fue;case 11:return Aue;case 12:return t?$ue:Pue;case 14:return t?Bue:Lue;case 15:return D4("max",t);case 16:return D4("min",t);case 13:return t?zue:Mue;case 17:return fue;case 18:return mue;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var kt=(e=>(e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.PRELU=12]="PRELU",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.LEAKYRELU=15]="LEAKYRELU",e[e.RSQRT=16]="RSQRT",e[e.SIN=17]="SIN",e[e.SINH=18]="SINH",e[e.SIGMOID=19]="SIGMOID",e[e.SQRT=20]="SQRT",e[e.SQUARE=21]="SQUARE",e[e.TANH=22]="TANH",e[e.TO_INT=23]="TO_INT",e))(kt||{}),Wue="return abs(a);",Vue="return ceil(a);",Uue="return cos(a);",Gue=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Hue="return exp(a) - 1.0;",jue="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",que=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Xue="return exp(a);",Kue="return floor(a);",Zue="return a;",Yue=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Jue="return f32(!(a >= 1.0));",Que="return -a;",ece="return (a < 0.0) ? b * a : a;",tce="if (a < 0.0) { return uniforms.alpha * a; } return a;",nce="if(a < 0.0) { return 0.0; } return a;",sce="return clamp(a, 0.0, 6.0);",rce="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",ace=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNanCustomVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,oce="return 1.0/sqrt(a);",ice="return 1.0 / (1.0 + exp(-1.0 * a));",lce="return sin(a);",uce=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,cce="return sqrt(a);",dce="return a * a;",pce=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,hce="return f32(i32((a)));";function Sc(e,t){switch(e){case 0:return Wue;case 2:return Uue;case 3:return Gue;case 1:return Vue;case 4:return t?que:jue;case 5:return Xue;case 6:return Hue;case 7:return Kue;case 8:return Zue;case 9:return Yue;case 10:return Jue;case 11:return Que;case 12:return ece;case 15:return tce;case 13:return t?ace:nce;case 14:return t?rce:sce;case 16:return oce;case 19:return ice;case 17:return lce;case 18:return uce;case 20:return cce;case 21:return dce;case 22:return pce;case 23:return hce;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function pa(e,t=!1){if(e===null)return null;if(e==="linear")return Sc(kt.LINEAR);if(e==="relu")return Sc(kt.RELU,t);if(e==="elu")return Sc(kt.ELU,t);if(e==="relu6")return Sc(kt.RELU6,t);if(e==="prelu")return Fp(qt.PRELU,t);if(e==="sigmoid")return Sc(kt.SIGMOID);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function P4(e,t){let n={RowPerThread:e[1],ColPerThread:e[0],TileAOuter:t[1]*e[1],TileBOuter:t[0]*e[0],TileInner:t[0]*e[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${n.TileInner/n.ColPerThread}>, ${n.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n.TileBOuter/n.ColPerThread}>, ${n.TileInner}>;

  let RowPerThread = ${n.RowPerThread};
  let ColPerThread = ${n.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${n.TileAOuter};
  let TileBOuter = ${n.TileBOuter};
  let TileInner = ${n.TileInner};

  ${ca()}

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${n.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${t[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}function fce(e){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;
  let tileSize = ${e[0]*4};
  ${ca()}
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var mce=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.isVec4=!0,this.vecSize=4,this.outputShape=t,this.workGroupSize=Bx(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.vecSize,a=r,o=[s,a],i=[a,r];return[da(o,this.aShape.slice(1)),da(i,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let o=pa(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?P4([this.vecSize,this.workPerThread,1],this.workGroupSize):fce(this.workGroupSize)}

    `}};function Gx(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${ca()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function gce(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${ca()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var $4=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=s?e[1]:e[2];this.workGroupSize=Bx(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=a!=null,u=i!=null;c&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=u;let d=this.outputShape[2],p=this.transposeB?[this.outputShape[0],d,l]:[this.outputShape[0],l,d];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${s}_${r}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),w.assert(s%this.workGroupSize[0]===0&&s%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[da(r,this.aShape.slice(1)),da(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let o=pa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?Gx([this.workPerThread,this.workPerThread,1],this.workGroupSize):gce(this.workGroupSize)}
    `}};function yce(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${ca()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var Ace=class{constructor(e,t=!1,n=!1,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",s="";if(this.activation){let o=pa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${yce()}
    `}};function xce(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${ca()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var bce=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],w.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=s!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let o=pa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${xce(this.workGroupSize)}
    `}};function Xe(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),o=w.inferFromImplicitShape(r,a),i=w.sizeFromShape(o);return w.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var vce={kernelName:Bi,backendName:"webgpu",kernelFunc:Xe};function Hx({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),x=w.sizeFromShape(g),b=il.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=n?[y,d,h]:[y,h,d],C=s?[x,f,p]:[x,p,f],I=Xe({inputs:{x:e},backend:r,attrs:{shape:v}}),E=Xe({inputs:{x:t},backend:r,attrs:{shape:C}}),R=[I,E],F=Math.max(y,x),_=d%4===0&&f%4===0&&!n&&!s&&f>=32,P;h*f<=32?P=new Ace([F,h,f],n,s,a,l,o):!n&&!s&&(h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||d>=2*h))?P=new bce(v,C,[F,h,f],a,l,o):_?P=new mce(v,[F,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,l,o):P=new $4(v,[F,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,s,a,l,o);let T=[I,E];a&&T.push(a),o&&T.push(o);let O=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[d]}],G=r.runWebGPUProgram(P,T,e.dtype,O),K=Xe({inputs:{x:G},backend:r,attrs:{shape:b}});R.push(G);for(let z of R)r.disposeData(z.dataId);return K}function wce(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return Hx({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var kce={kernelName:To,backendName:"webgpu",kernelFunc:wce},F4=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Fp(this.op,!1)}
      }

      ${Je()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Ice=class{constructor(e,t,n,s){this.variableNames=["A","B"],this.size=!0;let r=256;this.workGroupSize=[r,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=je(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Fp(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Je()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},Sce=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Fp(this.op,this.isVec4)}
      }
      ${Je()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},O4=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Fp(this.op,!1)}
      }
      ${Je()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function M4(e,t,n){if(w.arraysEqual(t,n)&&w.sizeFromShape(t)%4===0)return new Sce(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new Ice(e,t,n,a):new O4(e,t,n)}function ir(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Cce={kernelName:Ja,backendName:"webgpu",kernelFunc:ir};function Cc(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=ir({inputs:{x:s},backend:n}),l=ir({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var Tce={kernelName:md,backendName:"webgpu",kernelFunc:Cc},Op=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Sc(this.op,!1)}
      }
      ${Je()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function Tn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let c=o.tensorMap.get(a.dataId),u=t(c.values,i);return o.makeTensorInfo(a.shape,i,u)}let l=new Op(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function Kn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let d=l.tensorMap.get(o.dataId),p=l.tensorMap.get(i.dataId),h,f;if(e!==qt.MUL)[h,f]=[[d.complexTensorInfos.real,p.complexTensorInfos.real],[d.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(g=>{let[y,x]=g,A={dataId:y.dataId,dtype:y.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},v=M4(e,o.shape,i.shape);return l.runWebGPUProgram(v,[A,b],Wn(y.dtype,x.dtype))});else{let g=new F4(qt.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),y=new F4(qt.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),x=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape}];h=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(y,x,"float32")}let m=Cc({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let c=s||Wn(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let d=l.tensorMap.get(o.dataId).values,p=l.tensorMap.get(i.dataId).values,h=o.dtype==="string"?N.fromUint8ToStringArray(d):d,f=o.dtype==="string"?N.fromUint8ToStringArray(p):p,[m,g]=t(o.shape,i.shape,h,f,c);return l.makeTensorInfo(g,c,m)}let u=M4(e,o.shape,i.shape);return l.runWebGPUProgram(u,[o,i],c)}}var{addImpl:Nce,ceilImpl:Ece,concatImpl:Rce,equalImpl:_ce,expImpl:Dce,expm1Impl:Pce,floorImpl:$ce,gatherNdImpl:Fce,gatherV2Impl:Oce,greaterEqualImpl:Mce,greaterImpl:zce,lessEqualImpl:Lce,lessImpl:Bce,logImpl:Wce,maxImpl:Vce,maximumImpl:Uce,minimumImpl:Gce,multiplyImpl:Hce,negImpl:jce,notEqualImpl:qce,prodImpl:Xce,rangeImpl:Kce,rsqrtImpl:Zce,simpleAbsImpl:Yce,sliceImpl:Jce,stridedSliceImpl:Qce,stringNGramsImpl:ede,subImpl:tde,tileImpl:nde,topKImpl:sde,transposeImpl:rde,uniqueImpl:tAe}=Fm,ade=Tn({opType:kt.ABS,cpuKernelImpl:Yce}),ode={kernelName:gi,backendName:"webgpu",kernelFunc:ade},ide=Kn({opSnippet:qt.ADD,cpuKernelImpl:Nce,supportsComplex:!0}),lde={kernelName:Zr,backendName:"webgpu",kernelFunc:ide},ude=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Je()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function cde(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return ir({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>Wn(i,l)),a=s.map(i=>i.shape),o=new ude(a);return n.runWebGPUProgram(o,s,r)}var dde={kernelName:$a,backendName:"webgpu",kernelFunc:cde},z4=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32; infinityValue : f32;",this.size=!0;let s=[t];N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=N.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(r,a)=>this.outputShape.length===1?r:`${r}[${a}]`,n=r=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${r}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Je()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},pde=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${zx()}
      fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
              [[builtin(workgroup_id)]] workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},hde=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=kn(this.outputShape.length),t=fde(this.newDim);return`
      ${Je()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A.numbers[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function fde(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC[${s}]`;return n.join()}function Ml(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];if(n.shouldExecuteOnCPU([r])){let d=o.tensorMap.get(r.dataId).values,p=rde(d,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,p)}if(r.shape.length===2&&w.arraysEqual(a,[1,0])){let u=new pde(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}let c=new hde(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}var mde={kernelName:So,backendName:"webgpu",kernelFunc:Ml};function gde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ml({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=new z4(l.shape,o[0],"max"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var yde={kernelName:Fa,backendName:"webgpu",kernelFunc:gde};function Ade(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ml({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=new z4(l.shape,o[0],"min"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var xde={kernelName:pu,backendName:"webgpu",kernelFunc:Ade},L4=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Je()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},B4=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function bde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return ir({inputs:{x:r},backend:n});let d,p=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return u.filterHeight===1&&u.filterWidth===1?d=new B4(u):(d=new L4(u,"avg"),p.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[r],r.dtype,p)}var vde={kernelName:Oa,backendName:"webgpu",kernelFunc:bde};function wde(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Hx({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var kde={kernelName:Ma,backendName:"webgpu",kernelFunc:wde},Ide=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${kn(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=kn(this.rank),t=Sde(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${jx[a]} = uniforms.start[${a}] + coords.${jx[a]};`),`
      ${Je()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},jx=["x","y","z","w","u","v"];function Sde(e){if(e===1)return"sourceLoc";if(e<=6)return jx.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function Tc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=zt.parseSliceParams(r,a,o);if(zt.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.tensorMap.get(r.dataId),p=Jce(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}if(w.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let c=new Ide(i,l),u=[{type:"int32",data:i}];return n.runWebGPUProgram(c,[r],r.dtype,u)}var Cde={kernelName:Hi,backendName:"webgpu",kernelFunc:Tc},Tde=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=Xe({inputs:{x:r},backend:n,attrs:{shape:l}}),m=Ml({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Xe({inputs:{x:m},backend:n,attrs:{shape:u}}),y=Tc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeData(x.dataId)),y},Nde={kernelName:yi,backendName:"webgpu",kernelFunc:Tde},W4=Kn({opSnippet:qt.NOT_EQUAL,dtype:"bool",cpuKernelImpl:qce}),Ede={kernelName:Pi,backendName:"webgpu",kernelFunc:W4};function Mp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return ir({inputs:{x:r.complexTensorInfos.real},backend:n})}var Rde={kernelName:Id,backendName:"webgpu",kernelFunc:Mp};function _de(e,t){let n=new Op(e.shape,kt.TO_INT),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function qx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return ir({inputs:{x:r},backend:n});let o=Ht(r.shape),i=qx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Cc({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=Mp({inputs:{input:r},backend:n}),i=qx({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!w.hasEncodingLoss(r.dtype,a)){let o=ir({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return _de(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),l=W4({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Dde={kernelName:za,backendName:"webgpu",kernelFunc:qx},Pde=Tn({opType:kt.CEIL,cpuKernelImpl:Ece}),$de={kernelName:La,backendName:"webgpu",kernelFunc:Pde},Fde=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Je()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},Ode=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Je()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isNanCustom(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Mde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return w.sizeFromShape(r.shape)%4===0?i=new Fde(r.shape):i=new Ode(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var zde={kernelName:Yr,backendName:"webgpu",kernelFunc:Mde},Lde=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Je()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function l0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return ir({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Bde={kernelName:bd,backendName:"webgpu",kernelFunc:l0};function Xx(e,t,n){let s=e[0].dtype;if(s==="complex64"){let h=e.map(x=>Mp({inputs:{input:x},backend:n})),f=e.map(x=>l0({inputs:{input:x},backend:n})),m=Xx(h,t,n),g=Xx(f,t,n),y=Cc({inputs:{real:m,imag:g},backend:n});return h.forEach(x=>n.disposeData(x.dataId)),f.forEach(x=>n.disposeData(x.dataId)),n.disposeData(m.dataId),n.disposeData(g.dataId),y}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let h=e.map(b=>{let v=w.sizeFromShape(b.shape.slice(t));return Xe({inputs:{x:b},backend:n,attrs:{shape:[-1,v]}})}),f=h.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),m=N.computeOutShape(h.map(b=>b.shape),1),g=h[0].shape[0]===1,y=Rce(f,m,s,g),x=N.computeOutShape(e.map(b=>b.shape),t),A=n.makeTensorInfo(x,s,y);return h.forEach(b=>n.disposeData(b.dataId)),A}let{tensors2D:a,outShape:o}=Wde(e,t,n),i=a.map(h=>h.shape),l=new Lde(i),c=[],u=new Array(i.length-1);if(u.length>0){u[0]=i[0][1],c.push({type:"int32",data:[u[0]]});for(let h=1;h<u.length;h++)u[h]=u[h-1]+i[h][1],c.push({type:"int32",data:[u[h]]})}let d=n.runWebGPUProgram(l,a,a[0].dtype,c);a.forEach(h=>n.disposeData(h.dataId));let p=Xe({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeData(d.dataId),p}function Wde(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>Xe({inputs:{x:a},backend:n,attrs:{shape:[w.sizeFromShape(a.shape.slice(0,t)),w.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function V4(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return ir({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),Xx(i,a,n)}var Vde={kernelName:Ai,backendName:"webgpu",kernelFunc:V4},Ude=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Je()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}};function U4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=n.dataFormat==="channelsLast",u=!1,d=!1,p=c?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],h=Xe({inputs:{x:e},backend:s,attrs:{shape:[1,p,n.inChannels]}}),f=Xe({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),m=Hx({a:h,b:f,transposeA:u,transposeB:d,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=Xe({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});return s.disposeData(h.dataId),s.disposeData(f.dataId),s.disposeData(m.dataId),g}function Gde({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,strideWidth:d,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=n,A=x==="channelsLast",b=l*c*u,v=m*f,C=[v,b],I=!1,E=!1,R=[],F=Xe({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),_=Xe({inputs:{x:t},backend:s,attrs:{shape:[1,b,-1]}});R.push(F),R.push(_);let P=new Ude(C,A),T=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[d,p]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[u*l]},{type:"int32",data:[u]}],O=s.runWebGPUProgram(P,[F],F.dtype,T),G=Xe({inputs:{x:O},backend:s,attrs:{shape:[1,C[0],C[1]]}});R.push(O),R.push(G);let K=[1,C[0],C[1]],z=new $4(K,[1,v,n.outChannels],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),I,E),j=K[1],W=K[2],Q=n.outChannels,ne=[{type:"int32",data:[j]},{type:"int32",data:[Q]},{type:"int32",data:[W]}],oe=s.runWebGPUProgram(z,[G,_],G.dtype,ne),Z=A?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],ae=Xe({inputs:{x:oe},backend:s,attrs:{shape:Z}});R.push(oe);for(let re of R)s.disposeData(re.dataId);return ae}var G4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.isVec4=!0,this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let a=[4,4,1];this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,a),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(a),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],s=n,r=[t,s],a=[s,n],o=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[da(r,[o,l]),da(a,[l,i])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=P4([4,4,1],this.workGroupSize),r=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${r}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${r}
         }
         return vec4<f32>(0.0);
        `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,i="",l="";if(this.activation){let d=pa(this.activation,this.isVec4);if(this.hasPreluActivationWeights)i=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${d}
        }`;else{if(this.hasLeakyreluAlpha)throw i=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${d}
        }`,new Error("Leakyrelu is not supported.");i=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${d}
        }`}l="value = activation(value, outCoord);"}let c=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${i}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${o}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${c}
            ${l}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}},H4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Lx(this.dispatchLayout,this.outputShape),this.elementsPerThread=Wx(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;w.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[da(s,[a,i]),da(r,[i,o])]}getUserCode(){let e=Gx(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,s=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,r="",a="";if(this.activation){let l=pa(this.activation,!1);this.hasPreluActivationWeights?r=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${l}
                }`:r=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,a="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${r}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${s}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${o}
      ${a}
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},j4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=pa(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${ca()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function Hde(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=n,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d);if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))return U4({x:r,filter:a,convInfo:p,backend:s});if(Y().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&r.shape[0]===1)return Gde({x:r,filter:a,convInfo:p,backend:s});let h,f=[p.padInfo.top,p.padInfo.left],m=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]}],g=Y().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?h=new j4(p):(p.inChannels%4===0||p.inChannels===3&&p.padInfo.type==="VALID")&&p.outChannels%4===0&&p.outChannels>=64?h=new G4(p):h=new H4(p),!g){let y=p.outShape[1]*p.outShape[2],x=p.outShape[3],A=p.filterHeight*p.filterWidth*p.inShape[3];m.push({type:"int32",data:[y]},{type:"int32",data:[x]},{type:"int32",data:[A]})}return s.runWebGPUProgram(h,[r,a],r.dtype,m)}var jde={kernelName:Ba,backendName:"webgpu",kernelFunc:Hde},qde=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Lx(this.dispatchLayout,this.outputShape),this.elementsPerThread=Wx(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${Gx(this.elementsPerThread,this.workGroupSize)}
  `}},Xde=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Je()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Kde(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}],f;if(Y().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new Xde(p);else{f=new qde(p);let m=p.inShape[1]*p.inShape[2],g=p.inShape[3],y=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var Zde={kernelName:Wa,backendName:"webgpu",kernelFunc:Kde},Yde=Tn({opType:kt.COS}),Jde={kernelName:Va,backendName:"webgpu",kernelFunc:Yde},Qde=Tn({opType:kt.COSH}),epe={kernelName:Ua,backendName:"webgpu",kernelFunc:Qde},tpe=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Je()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},npe=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new tpe(r.shape[3],a.shape,i,l),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(u,[r,a,o],"float32",d)},spe={kernelName:bi,backendName:"webgpu",kernelFunc:npe},rpe=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function ape(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=[{type:"int32",data:[a]}],g=new rpe(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var ope={kernelName:vi,backendName:"webgpu",kernelFunc:ape},q4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=pa(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${zx()}
      fn main([[builtin(global_invocation_id)]] globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},X4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;
      channelMul : i32;`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=pa(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${r}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${ca()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function ipe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]);let d=N.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}],h;return d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4===0?h=new q4(d):(h=new X4(d),p.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.outChannels/d.inChannels]})),n.runWebGPUProgram(h,[r,a],r.dtype,p)}var lpe={kernelName:Ga,backendName:"webgpu",kernelFunc:ipe},K4=Kn({opSnippet:qt.MUL,cpuKernelImpl:Hce,supportsComplex:!0}),upe={kernelName:lo,backendName:"webgpu",kernelFunc:K4},cpe=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=N.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Je()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function zp(e,t,n,s,r){let a=e.shape.length,o=[],i=w.parseAxisParam(t,e.shape),l=i,c=N.getAxesPermutation(l,a),u=e;c!=null&&(u=Ml({inputs:{x:e},attrs:{perm:c},backend:r}),l=N.getInnerMostAxes(l.length,a),o.push(u)),N.assertAxesAreInnerMostDims(s,l,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=d;n&&(h=N.expandShapeToKeepDim(d,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([u])){let m=r.tensorMap.get(u.dataId).values;switch(s){case"max":let g=Vce(m,w.sizeFromShape(p),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:A}=Xce(u.shape,u.dtype,m,l);f=r.makeTensorInfo(x,A,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(p),y=w.sizeFromShape(u.shape)/m,x={windowSize:m,inSize:m,batchSize:y,outSize:1},A=s==="mean"?"float32":Bd(e.dtype),b=[{type:"int32",data:[m]}],v=new cpe(x,s),C=r.runWebGPUProgram(v,[u],A,b);o.push(C),f=Xe({inputs:{x:C},attrs:{shape:h},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function Kx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return zp(r,a,o,"sum",n)}var dpe={kernelName:bo,backendName:"webgpu",kernelFunc:Kx};function ppe(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:x}=N.getEinsumPermutation(h,l[g]),A;N.isIdentityPermutation(y)?A=a[g]:(A=Ml({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(A.shape,b)||(A=Xe({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),p===null?p=A:(p=K4({inputs:{a:A,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Kx({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeData(m.dataId);return p}var hpe={kernelName:xd,backendName:"webgpu",kernelFunc:ppe},fpe=Tn({opType:kt.ELU}),mpe={kernelName:ja,backendName:"webgpu",kernelFunc:fpe},gpe=Kn({opSnippet:qt.EQUAL,dtype:"bool",cpuKernelImpl:_ce}),ype={kernelName:wi,backendName:"webgpu",kernelFunc:gpe},Z4=Tn({opType:kt.EXP,cpuKernelImpl:Dce,dtype:"float32"}),Ape={kernelName:qa,backendName:"webgpu",kernelFunc:Z4};function Zx(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(w.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),Xe({inputs:{x:a},backend:s,attrs:{shape:i}})}var xpe={kernelName:ki,backendName:"webgpu",kernelFunc:Zx},bpe=Tn({opType:kt.EXPM1,cpuKernelImpl:Pce}),vpe={kernelName:Ii,backendName:"webgpu",kernelFunc:bpe},wpe=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Je()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Nc(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let o=w.getArrayFromDType(a,w.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new wpe(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var kpe={kernelName:xu,backendName:"webgpu",kernelFunc:Nc},Ipe=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},Spe={kernelName:Si,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Ipe(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},Cpe=Tn({opType:kt.FLOOR,cpuKernelImpl:$ce}),Tpe={kernelName:Xa,backendName:"webgpu",kernelFunc:Cpe},Npe=Kn({opSnippet:qt.INT_DIV,dtype:"int32"}),Epe={kernelName:Ka,backendName:"webgpu",kernelFunc:Npe},Rpe=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},Y4=(e,t,n,s,r,a=!1)=>{let o={dtype:r.dtype,shape:r.shape},i=oue(s,o,t,a),l=e.createShaderModule({code:i,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function J4(e,t,n,s="",r=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r}function Q4(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:o}=s,i=w.sizeFromShape(r),l=w.computeStrides(r),c=n.makeTensorInfo(r,"int32"),u=n.getFromPixelsProgram(a?"import":"copyExternal");u.updateOutputShape(r);let d=[c.shape],p=[c.dtype,a?"import":"copyExternal"],h=J4(u,d,p),f=u.getLayout(n.device),m=n.getAndSavePipeline(h,()=>Y4(n.device,u,f.pipelineLayout,[],c,!0));u.setPipeline(m),a||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:u.makeInputTexture(n.device,r[1],r[0])},[r[1],r[0]]);let g=n.tensorMap.get(c.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let y=[i,o,...l,...u.dispatch];u.setUniform(n.device,y);let x;if(a){let A={source:t};x=n.device.importExternalTexture(A)}else x=u.inputTexture.createView();return n.runFromPixelsProgram(u,g.bufferInfo.buffer,f,x,c.dataId),c}var _pe={kernelName:_d,backendName:"webgpu",kernelFunc:Dpe},Ec;function Dpe(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,c=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[u,d]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[d,u,a];if(Y().getBool("WEBGPU_USE_IMPORT")&&o)return Q4({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!0});if((o||i)&&(Ec==null&&(Ec=document.createElement("canvas").getContext("2d")),Ec.canvas.width=u,Ec.canvas.height=d,Ec.drawImage(r,0,0,u,d),r=Ec.canvas),c||l||o||i)return Q4({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!1});let h=r.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let y=h.length,x=0;for(let A=0;A<y;A++)A%4<a&&(f[x++]=h[A])}let m=n.makeTensorInfo(p,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}var Ppe=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Je()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},$pe={kernelName:Za,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,c=n,u=[s,o,i],d=null;a!=null&&(d=a.shape,u.push(a));let p=null;r!=null&&(p=r.shape,u.push(r));let h=new Ppe(s.shape,o.shape,i.shape,d,p),f=[{type:"float32",data:[l]}];return c.runWebGPUProgram(h,u,s.dtype,f)}};function Fpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),y=o!=null,x=i!=null,A;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return U4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});let b=Y().getBool("WEBGPU_USE_NAIVE_CONV2D"),v=g.inChannels%4===0&&g.outChannels%4===0,C=[g.padInfo.top,g.padInfo.left],I=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...C]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(b)A=new j4(g,y,h,x);else{v?A=new G4(g,y,h,x):A=new H4(g,y,h,x);let R=g.outShape[1]*g.outShape[2],F=g.outShape[3],_=g.filterHeight*g.filterWidth*g.inShape[3];I.push({type:"int32",data:[R]},{type:"int32",data:[F]},{type:"int32",data:[_]})}let E=[r,a];return y&&E.push(o),x&&E.push(i),n.runWebGPUProgram(A,E,r.dtype,I)}var Ope={kernelName:No,backendName:"webgpu",kernelFunc:Fpe};function Mpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p}=s,h=u;h==null&&(h=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let f=N.computeConv2DInfo(r.shape,a.shape,l,h,c,d,!0),m=[r,a],g=o!=null,y=i!=null;g&&m.push(o),y&&m.push(i);let x=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}],A;return f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4===0?A=new q4(f,g,p,y):(A=new X4(f,g,p,y),x.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.outChannels/f.inChannels]})),n.runWebGPUProgram(A,m,"float32",x)}var zpe={kernelName:Eo,backendName:"webgpu",kernelFunc:Mpe},Lpe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${kn(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Bpe(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=w.sizeFromShape(s.shape),[l,c,u,d]=N.prepareAndValidate(s,r),p=Xe({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=Xe({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let x=n.readSync(r.dataId),A=n.bufferSync(s),b=Fce(x,A,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new Lpe(o,[c,u]),m=[{type:"int32",data:[o]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),y=Xe({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}var Wpe={kernelName:Ti,backendName:"webgpu",kernelFunc:Bpe},Vpe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Upe(this.aShape,"i32");return`
      ${Je()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Upe(e,t="int"){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push(`${t}(getIndices(resRC.x, resRC.z))`):s.push(`${n[r]}`);return s.join()}function e6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=w.parseAxisParam(o,r.shape)[0],c=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),u=w.sizeFromShape(a.shape),d=[],p=Xe({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=Xe({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(p),d.push(h);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let A=n.tensorMap.get(h.dataId).values,b=Le(h.shape,h.dtype,A),C=n.tensorMap.get(p.dataId).values,I=Le(p.shape,p.dtype,C),E=Oce(I,b,f);return d.forEach(R=>n.disposeData(R.dataId)),n.makeTensorInfo(c.outputShape,E.dtype,E.values)}let m=new Vpe(p.shape,f),g=n.runWebGPUProgram(m,[p,h],p.dtype);d.push(g);let y=Xe({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(x=>n.disposeData(x.dataId)),y}var Gpe={kernelName:Ci,backendName:"webgpu",kernelFunc:e6},Hpe=Kn({opSnippet:qt.GREATER,cpuKernelImpl:zce,dtype:"bool"}),jpe={kernelName:Ni,backendName:"webgpu",kernelFunc:Hpe},qpe=Kn({opSnippet:qt.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:Mce}),Xpe={kernelName:Ya,backendName:"webgpu",kernelFunc:qpe};function Kpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=[{type:"float32",data:[a]}],i=new Op(r.shape,kt.LEAKYRELU);return i.uniforms="alpha : f32;",n.runWebGPUProgram(i,[r],"float32",o)}var Zpe={kernelName:Qa,backendName:"webgpu",kernelFunc:Kpe},Ype=Kn({opSnippet:qt.LESS,dtype:"bool",cpuKernelImpl:Bce}),Jpe={kernelName:Ei,backendName:"webgpu",kernelFunc:Ype},Qpe=Kn({opSnippet:qt.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Lce}),ehe={kernelName:Ri,backendName:"webgpu",kernelFunc:Qpe},the=Tn({opType:kt.LOG,cpuKernelImpl:Wce}),nhe={kernelName:eo,backendName:"webgpu",kernelFunc:the},she=Kn({opSnippet:qt.LOGICAL_AND,dtype:"bool"}),rhe={kernelName:_i,backendName:"webgpu",kernelFunc:she},ahe=Tn({opType:kt.LOGICAL_NOT}),ohe={kernelName:Iu,backendName:"webgpu",kernelFunc:ahe};function t6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return zp(r,a,o,"max",n)}var ihe={kernelName:to,backendName:"webgpu",kernelFunc:t6},lhe=Kn({opSnippet:qt.MAX,cpuKernelImpl:Uce}),uhe={kernelName:no,backendName:"webgpu",kernelFunc:lhe};function che(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=N.computePool2DInfo(r.shape,a,o,c,i,l),d,p=[];if(u.filterHeight===1&&u.filterWidth===1){if(w.arraysEqual(u.inShape,u.outShape))return ir({inputs:{x:r},backend:n});d=new B4(u),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else d=new L4(u,"max"),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return n.runWebGPUProgram(d,[r],r.dtype,p)}var dhe={kernelName:so,backendName:"webgpu",kernelFunc:che};function phe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return zp(r,o,a,"mean",n)}var hhe={kernelName:ro,backendName:"webgpu",kernelFunc:phe};function fhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return zp(r,a,o,"min",n)}var mhe={kernelName:ao,backendName:"webgpu",kernelFunc:fhe},ghe=Kn({opSnippet:qt.MIN,cpuKernelImpl:Gce}),yhe={kernelName:oo,backendName:"webgpu",kernelFunc:ghe},Ahe=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((l,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=kn(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Je()}
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${i}));
        }
      }
    `}},xhe={kernelName:io,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new Ahe(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function bhe(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=jce(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new Op(s.shape,kt.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}var vhe={kernelName:Di,backendName:"webgpu",kernelFunc:bhe};function whe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=tr.nonMaxSuppressionV3Impl(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var khe={kernelName:$i,backendName:"webgpu",kernelFunc:whe};function Ihe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=tr.nonMaxSuppressionV5Impl(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var She={kernelName:Fi,backendName:"webgpu",kernelFunc:Ihe};function u0(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Mp({inputs:{input:s},backend:n}),a=u0({inputs:{x:r},backend:n}),o=l0({inputs:{input:s},backend:n}),i=u0({inputs:{x:o},backend:n}),l=Cc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return Nc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Che={kernelName:el,backendName:"webgpu",kernelFunc:u0};function n6(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Mp({inputs:{input:s},backend:n}),a=n6({inputs:{x:r},backend:n}),o=l0({inputs:{input:s},backend:n}),i=u0({inputs:{x:o},backend:n}),l=Cc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return Nc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var The={kernelName:Oi,backendName:"webgpu",kernelFunc:n6};function Nhe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Zx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Zx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=V4({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var Ehe={kernelName:zi,backendName:"webgpu",kernelFunc:Nhe},Rhe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=kn(e),n=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Je()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${o} || ${i}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},s6=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(c=>w.arraysEqual(c,[0,0])))return ir({inputs:{x:r},backend:n});if(w.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return Nc({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(c=>i.push({type:"int32",data:[c[0],c[1]]}));let l=new Rhe(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},_he={kernelName:uo,backendName:"webgpu",kernelFunc:s6},Dhe=Kn({opSnippet:qt.POW}),Phe={kernelName:co,backendName:"webgpu",kernelFunc:Dhe};function $he(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new O4(qt.PRELU,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var Fhe={kernelName:po,backendName:"webgpu",kernelFunc:$he};function Ohe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return zp(r,a,o,"prod",n)}var Mhe={kernelName:Li,backendName:"webgpu",kernelFunc:Ohe},zhe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Kce(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Lhe={kernelName:Tu,backendName:"webgpu",kernelFunc:zhe},r6=Kn({opSnippet:qt.DIV}),Bhe={kernelName:Ha,backendName:"webgpu",kernelFunc:r6},Whe=Tn({opType:kt.RELU}),Vhe={kernelName:ho,backendName:"webgpu",kernelFunc:Whe},Uhe=Tn({opType:kt.RELU6}),Ghe={kernelName:mo,backendName:"webgpu",kernelFunc:Uhe},Hhe=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Je()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function jhe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,c]=o,u=a&&l>1?1:0,d=a&&c>1?1:0,h=[{type:"float32",data:[u,d]},{type:"float32",data:[i?.5:0]}],f=new Hhe(r.shape,l,c);return n.runWebGPUProgram(f,[r],"float32",h)}var qhe={kernelName:fo,backendName:"webgpu",kernelFunc:jhe},Xhe=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Khe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=a&&l>1?1:0,d=a&&c>1?1:0,h=[{type:"float32",data:[u,d]},{type:"float32",data:[a?.5:0]}],f=new Xhe(r.shape,l,c,o);return n.runWebGPUProgram(f,[r],r.dtype,h)}var Zhe={kernelName:Eu,backendName:"webgpu",kernelFunc:Khe},Yhe=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Je()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},Jhe={kernelName:tl,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Yhe(s.shape,a),[c,u]=N.getImageCenter(o,s.shape[1],s.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[u]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,d)}},Qhe=Tn({opType:kt.RSQRT,cpuKernelImpl:Zce}),efe={kernelName:go,backendName:"webgpu",kernelFunc:Qhe},tfe=class{constructor(e,t,n,s,r,a,o){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.dispatchLayout=je(e),this.dispatch=Oe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}`;let i=kn(r.length);this.uniforms=`sliceDim : i32; strides: ${i}; size: i32;`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${s})`,i=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${Je()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${o};
          let flatIndex = getOutputIndexFromCoords(${r});

         ${i}
        }
      }`}};function nfe(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=Xe({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=Xe({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=f.dtype,g=Nc({backend:n,attrs:{shape:p,value:0,dtype:m}}),y=w.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:u},{type:"int32",data:[y]}],A=new tfe(f.shape,i,h.shape.length,f.shape.length,u,p,m),b=n.runWebGPUProgram(A,[f,h],m,x,g),v=Xe({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),v}var sfe={kernelName:Ui,backendName:"webgpu",kernelFunc:nfe},rfe=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${Je()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function afe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new rfe(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],Wn(r.dtype,a.dtype))}var ofe={kernelName:Gi,backendName:"webgpu",kernelFunc:afe},ife=Tn({opType:kt.SIGMOID}),lfe={kernelName:Ao,backendName:"webgpu",kernelFunc:ife},ufe=Tn({opType:kt.SIN}),cfe={kernelName:yo,backendName:"webgpu",kernelFunc:ufe},dfe=Tn({opType:kt.SINH}),pfe={kernelName:ji,backendName:"webgpu",kernelFunc:dfe},a6=Kn({opSnippet:qt.SUB,cpuKernelImpl:tde,supportsComplex:!0}),hfe={kernelName:ko,backendName:"webgpu",kernelFunc:a6};function ffe(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=w.parseAxisParam([a],r.shape),i=t6({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=Xe({inputs:{x:i},backend:n,attrs:{shape:l}}),u=a6({inputs:{a:r,b:c},backend:n}),d=Z4({inputs:{x:u},backend:n}),p=Kx({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=Xe({inputs:{x:p},backend:n,attrs:{shape:l}}),f=r6({inputs:{a:d,b:h},backend:n});return n.disposeData(i.dataId),n.disposeData(c.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),f}var mfe={kernelName:vo,backendName:"webgpu",kernelFunc:ffe},gfe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let c=[],u=s6({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=Xe({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Ml({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Xe({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>n.disposeData(y.dataId)),g},yfe={kernelName:qi,backendName:"webgpu",kernelFunc:gfe},Afe=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=a,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${s}_${i}`;let l=kn(r.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let c="";n===1?c="i":n===2&&(c="i, j"),this.indicesSnippet=`getIndices(${c})`;let u="";s===1?u="i":s===2&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Je()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function xfe(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,r,i),p=!1,h=[{type:"int32",data:[c]},{type:"int32",data:[l]},{type:"int32",data:u}],f=new Afe(c,l,r.shape.length,a.shape.length,u,[d,1],p),m=n.runWebGPUProgram(f,[a,r,o],a.dtype,h),g=Xe({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),g}var bfe={kernelName:Nd,backendName:"webgpu",kernelFunc:xfe};function vfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=w.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=Tc({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var wfe={kernelName:Xi,backendName:"webgpu",kernelFunc:vfe},kfe=Tn({opType:kt.SQRT}),Ife={kernelName:xo,backendName:"webgpu",kernelFunc:kfe},Sfe={kernelName:$u,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new Op(n.shape,kt.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}},Cfe=Kn({opSnippet:qt.SQUARED_DIFFERENCE}),Tfe={kernelName:wo,backendName:"webgpu",kernelFunc:Cfe},Nfe=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=kn(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Je()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Efe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),v;if(m)v=Xe({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=zt.computeOutShape(x,A,b),I=Tc({inputs:{x:r},backend:n,attrs:{begin:x,size:C}});v=Xe({inputs:{x:I},backend:n,attrs:{shape:f}}),n.disposeData(I.dataId)}else if(n.shouldExecuteOnCPU([r])){let I=n.readSync(r.dataId),E=Le(r.shape,r.dtype,I),R=Qce(h,E,b,x);v=n.makeTensorInfo(f,r.dtype,R.values)}else{let I=new Nfe(h),E=[{type:"int32",data:x},{type:"int32",data:b}],R=n.runWebGPUProgram(I,[r],r.dtype,E);v=Xe({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}return v}var Rfe={kernelName:Ki,backendName:"webgpu",kernelFunc:Efe};function _fe(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=ede(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Dfe={kernelName:Ed,backendName:"webgpu",kernelFunc:_fe},Pfe=Tn({opType:kt.TANH}),$fe={kernelName:Io,backendName:"webgpu",kernelFunc:Pfe},Ffe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Ofe(this.rank,"uniforms.");return`
      ${Je()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Ofe(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function Mfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>w.decodeString(p)):l,u=Le(r.shape,r.dtype,c),d=nde(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Ffe(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var zfe={kernelName:Jr,backendName:"webgpu",kernelFunc:Mfe},Lfe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${Je()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Bfe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${Je()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Rc(e,t){t!==null&&e.disposeData(t.dataId)}function o6(e){let t=1;for(;t<e;)t*=2;return t}function Wfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let v=n.readSync(r.dataId),[C,I]=sde(v,i,r.dtype,a,o);return[n.makeTensorInfo(C.shape,C.dtype,C.values),n.makeTensorInfo(I.shape,I.dtype,I.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[r,Nc({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let u=w.sizeFromShape(i)/l,d=Xe({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),p=o6(a),h=o6(l),f=null,m=()=>f===null?[d,d]:[d,f],g=(v,C,I)=>{let E=m(),R=new Lfe(I),_=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[v]},{type:"int32",data:[C]}],P=f;f=n.runWebGPUProgram(R,E,"int32",_),Rc(n,P)};for(let v=1;v<p;v*=2){let C=v*2;for(let I=v;I>=1;I/=2)g(C,I,[u,h])}for(let v=h;v>p;v/=2){let C=m(),I=new Bfe([u,v/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[p]}],F=f;f=n.runWebGPUProgram(I,C,"int32",R),Rc(n,F);let _=p/2,P=_*2;for(let T=_;T>=1;T/=2)g(P,T,f.shape)}let y=f;f=Tc({inputs:{x:f},backend:n,attrs:{begin:0,size:[u,a]}}),Rc(n,y);let x=e6({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});Rc(n,d);let A=i.slice(0,-1);A.push(a),y=f,f=Xe({inputs:{x:f},attrs:{shape:A},backend:n}),Rc(n,y);let b=x;return x=Xe({inputs:{x},attrs:{shape:A},backend:n}),Rc(n,b),[x,f]}var Vfe={kernelName:Yi,backendName:"webgpu",kernelFunc:Wfe},Ufe=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Je()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Gfe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new Ufe(g),x=o==="nearest"?1:2,A;switch(i){case"constant":A=1;break;case"reflect":A=2;break;case"wrap":A=3;break;case"nearest":A=4;break;default:A=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[A]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[r,a],"float32",b)}var Hfe={kernelName:Ji,backendName:"webgpu",kernelFunc:Gfe};function jfe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=Tc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),y=Xe({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>n.disposeData(m.dataId)),f}var qfe={kernelName:Qi,backendName:"webgpu",kernelFunc:jfe},Xfe=[kce,ode,lde,dde,yde,xde,vde,kde,Nde,Dde,$de,zde,Tce,Vde,jde,Zde,Jde,epe,spe,ope,lpe,hpe,mpe,ype,Ape,xpe,vpe,kpe,Spe,_pe,Tpe,Epe,$pe,Ope,zpe,Wpe,Gpe,jpe,Xpe,Cce,Bde,Zpe,Jpe,ehe,nhe,rhe,ohe,ihe,uhe,dhe,hhe,mhe,yhe,xhe,upe,vhe,khe,She,Ede,The,Ehe,_he,Phe,Fhe,Mhe,Lhe,Rde,Bhe,Vhe,Ghe,vce,qhe,Zhe,Jhe,efe,sfe,ofe,lfe,cfe,pfe,Cde,Rfe,Dfe,mfe,yfe,bfe,wfe,Ife,Sfe,Tfe,hfe,dpe,$fe,zfe,Vfe,Hfe,mde,qfe,Che];for(let e of Xfe)Js(e);var Kfe=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=i6(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=i6(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function i6(e,t){return`${e}_${t}`}var l6=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){w.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=je(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Je()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,s)=>n===this.lastUniformData[s])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Zfe=class extends l6{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Yfe=Y().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),u6=class extends ru{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!Ux())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new Kfe(this.device),this.tensorMap=new dd(this,Dn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return u6.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=w.sizeFromShape(t)*Vx(n);return this.tensorMap.set(s,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=w.sizeFromShape(n)*Vx(s);this.tensorMap.set(e,{dtype:s,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new l6),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new Zfe),this.fromPixelImportProgram;default:w.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=N.mergeRealAndImagArrays(a,o)}else{let r=await this.getBufferData(t);s=R4(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=w.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=w.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),s=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0,n=[];e.forEach(a=>{a.data.length===0&&(a.data=[1]);let o;switch(a.data.length){case 1:o=4;break;case 2:o=8;break;case 3:o=16;break;case 4:o=16;break;default:w.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}t=Math.ceil(t/o)*o,n.push(t),t+=a.data.length*4});let s=new ArrayBuffer(t);e.forEach((a,o)=>{let i=n[o];a.type==="int32"?new Int32Array(s,i,a.data.length).set(a.data):a.type==="uint32"?new Uint32Array(s,i,a.data.length).set(a.data):new Float32Array(s,i,a.data.length).set(a.data)});let r=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(r,0,s,0,t),{offset:0,size:t,buffer:r}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),w.sizeFromShape(r.shape)===0){let I=this.tensorMap.get(r.dataId);return I.values=w.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}let a=[{type:"float32",data:[NaN]}],o=t.concat(r).map(I=>I.shape),i="int32";o.map(I=>{a.push({type:i,data:I})});let l=w.computeStrides(r.shape);if(a.push({type:i,data:l}),e.size){let I=w.sizeFromShape(e.outputShape);a.push({type:i,data:[e.isVec4?I/4:I]})}s&&(a=[...a,...s]);let c=this.makeUniforms(a),u=t.map((I,E)=>{if(I.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(I.dataId),{dtype:this.tensorMap.get(I.dataId).dtype,shape:I.shape,name:e.variableNames[E]}}),d=u.map(I=>I.dtype).concat(r.dtype),p=u.map(I=>N.getBroadcastDims(I.shape,r.shape)),h=u.map(I=>w.arraysEqual(I.shape,r.shape)).join("_"),f=p.map(I=>I.join("_")).join(";"),m=J4(e,o,d,f,h),{bindGroupLayout:g,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),x=this.getAndSavePipeline(m,()=>Y4(this.device,e,y,u,r)),A=this.activeTimers!=null,b=Rpe(this.device,g,t.map(I=>this.tensorToBinding(I)),this.tensorToBinding(r),c);this.ensureCommandEncoderReady();let v=this.getComputePass();A&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,0),v.setPipeline(x),v.setBindGroup(0,b),v.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),A&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(I=>{this.commandQueueOwnedIds.add(I.dataId)}),this.commandQueueOwnedIds.add(r.dataId);let C={byteSize:c.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:c.buffer};return this.uniformDisposalQueue.push(C),Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),A&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}runFromPixelsProgram(e,t,n,s,r){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:s},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let o=this.getComputePass(),i=this.activeTimers!=null;i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,0),o.setPipeline(e.pipeline),o.setBindGroup(0,a),o.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(r),this.submitQueue(),i&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=Yfe){return Y().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&w.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Yx=u6;Yx.nextDataId=0;var c6={};Me(c6,{WebGPUBackend:()=>Yx,webgpu_util:()=>E4});Mu.isBrowser()&&Ux()&&cl("webgpu",async()=>{Y().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Y().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},s=t.features.has("timestamp-query");s?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let r=await t.requestDevice(n);return new Yx(r,s)},3);var Xt=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(Xt||{}),c0=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(c0||{}),d6;function Jfe(e){d6=e.wasm.cwrap(To,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Qfe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let E=n.dataIdMap.get(o.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=c0[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],x=c?a.shape[1]:a.shape[2],A=il.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...A,y,x],r.dtype),v=n.dataIdMap.get(b.dataId).id,C=new Uint8Array(new Int32Array(r.shape).buffer),I=new Uint8Array(new Int32Array(a.shape).buffer);return d6(p,C,r.shape.length,h,I,a.shape.length,l,c,g,f,m,d||0,v),b}var eme={kernelName:To,backendName:"wasm",setupFunc:Jfe,kernelFunc:Qfe};function Nn(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,c=o.makeOutput(i.shape,t||i.dtype),u=o.dataIdMap.get(c.dataId).id;return w.sizeFromShape(c.shape)===0||n(l,Xt[i.dtype],u),c}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var tme=Nn(gi);function Zn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:c,b:u}=l,d=i.dataIdMap.get(c.dataId).id,p=i.dataIdMap.get(u.dataId).id,h=n!=null?n:c.dtype,f=N.assertAndGetBroadcastShape(c.shape,u.shape),m=i.makeOutput(f,h);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(c.shape).buffer),y=new Uint8Array(new Int32Array(u.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>s(d,g,c.shape.length,p,y,u.shape.length,Xt[c.dtype],x))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var nme=!0,sme=Zn(Zr,nme),p6;function rme(e){p6=e.wasm.cwrap($a,null,["array","number","number","number"])}function ame(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return p6(a,r.length,Xt[s.dtype],o),s}var ome={kernelName:$a,backendName:"wasm",setupFunc:rme,kernelFunc:ame};function d0(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var ime={kernelName:Ja,backendName:"wasm",kernelFunc:d0},h6;function lme(e){h6=e.wasm.cwrap(So,null,["number","array","number","number","number","array","number"])}function _c(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=cme(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=ume(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=d0({inputs:t,backend:n});return f.shape=i,f}let c=n.makeOutput(i,l.dtype),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(c.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return h6(u,h,l.shape.length,Xt[l.dtype],d,p,a.length),c}function ume(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function cme(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var dme={kernelName:So,backendName:"wasm",kernelFunc:_c,setupFunc:lme};function Jo(e,t,n){let s=e.shape,r=e.shape.length,a=w.parseAxisParam(t,s),o=a,i=N.getAxesPermutation(o,r),l=null,c=!1;if(i!=null){let u=new Array(r);for(let h=0;h<u.length;h++)u[h]=s[i[h]];o=N.getInnerMostAxes(o.length,r),l=_c({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==d&&(c=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:c}}var f6;function pme(e){f6=e.wasm.cwrap(cu,null,["number, number, number"])}function hme(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Jo(o,r,t);if(h){let A=t.dataIdMap.get(u.dataId).id;c=u,l=A}let f=c.shape.length;N.assertAxesAreInnerMostDims("all",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;f6(l,y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var fme={kernelName:cu,backendName:"wasm",setupFunc:pme,kernelFunc:hme},m6;function mme(e){m6=e.wasm.cwrap(du,null,["number, number, number"])}function gme(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Jo(o,r,t);if(h){let A=t.dataIdMap.get(u.dataId).id;c=u,l=A}let f=c.shape.length;N.assertAxesAreInnerMostDims("any",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;m6(l,y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var yme={kernelName:du,backendName:"wasm",setupFunc:mme,kernelFunc:gme},g6;function Ame(e){g6=e.wasm.cwrap(Fa,null,["number","number","number","number","number"])}function xme(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:c,axes:u,inputWasTransposed:d}=Jo(a,r,t);if(d){let y=t.dataIdMap.get(c.dataId).id;y!==o&&(l=c,i=y)}let p=l.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=w.sizeFromShape(h.shape),g=l.shape[u[0]];return g6(i,Xt[l.dtype],m,g,f),d&&t.disposeData(c.dataId),h}var bme={kernelName:Fa,backendName:"wasm",kernelFunc:xme,setupFunc:Ame},y6;function vme(e){y6=e.wasm.cwrap(Oa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wme(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.strideHeight,x=u.strideWidth,A=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let b=s.makeOutput(u.outShape,"float32"),v=s.dataIdMap.get(b.dataId).id;return y6(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,x,A,v),b}var kme={kernelName:Oa,backendName:"wasm",setupFunc:vme,kernelFunc:wme};function hs(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),o=w.inferFromImplicitShape(r,a);return w.assert(a===w.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var Ime={kernelName:Bi,backendName:"wasm",kernelFunc:hs},A6;function Sme(e){A6=e.wasm.cwrap(Ma,null,["number","array","number","number","array","number","number","number","number"])}function Cme(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=il.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);w.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],v=i?[y,h,d]:[y,d,h],C=hs({inputs:{x:r},backend:n,attrs:{shape:b}}),I=hs({inputs:{x:a},backend:n,attrs:{shape:v}}),E=n.dataIdMap.get(C.dataId).id,R=n.dataIdMap.get(I.dataId).id,F=o?C.shape[2]:C.shape[1],_=i?I.shape[1]:I.shape[2],P=Math.max(g,y),T=n.makeOutput([P,F,_],C.dtype),O=n.dataIdMap.get(T.dataId).id,G=new Uint8Array(new Int32Array(C.shape).buffer),K=new Uint8Array(new Int32Array(I.shape).buffer);return A6(E,G,C.shape.length,R,K,I.shape.length,o,i,O),n.disposeData(C.dataId),n.disposeData(I.dataId),T.shape=A,T}var Tme={kernelName:Ma,backendName:"wasm",setupFunc:Sme,kernelFunc:Cme};function zl(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=zt.parseSliceParams(t,n,s),i=zt.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),c=r.makeOutput(o,t.dtype),u=w.computeStrides(t.shape),d=r.dataIdMap.get(c.dataId);if(i){let f=zt.computeFlatOffset(a,u);return t.dtype==="string"?d.stringBytes=l.slice(f,f+w.sizeFromShape(o)):r.typedArrayFromHeap(c).set(l.subarray(f,f+w.sizeFromShape(o))),c}if(t.dtype==="string"){let f=zm(l,a,o,t.shape,t.dtype);return d.stringBytes=f,c}let p=r.typedArrayFromHeap(c),h=t.shape.length;if(h===2)Nme(l,u[0],p,a,o);else if(h===3)Eme(l,u[0],u[1],p,a,o);else if(h===4)Rme(l,u[0],u[1],u[2],p,a,o);else{let f=zm(l,a,o,t.shape,t.dtype);p.set(f)}return c}function Nme(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let c=o;c<l;c++){let u=c*t+i;n.set(e.subarray(u,u+r[1]),a),a+=r[1]}}function Eme(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],c=r[2],u=i+a[0],d=l+a[1];for(let p=i;p<u;p++)for(let h=l;h<d;h++){let f=p*t+h*n+c;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function Rme(e,t,n,s,r,a,o){let i=0,l=a[0],c=a[1],u=a[2],d=l+o[0],p=c+o[1],h=u+o[2],f=a[3];for(let m=l;m<d;m++)for(let g=c;g<p;g++)for(let y=u;y<h;y++){let x=m*t+g*n+y*s+f;r.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var _me={kernelName:Hi,backendName:"wasm",kernelFunc:zl};function Dme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((y,x)=>y*x),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=hs({inputs:{x:r},backend:n,attrs:{shape:l}}),f=_c({inputs:{x:h},backend:n,attrs:{perm:c}}),m=hs({inputs:{x:f},backend:n,attrs:{shape:u}}),g=zl({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var Pme={kernelName:yi,backendName:"wasm",kernelFunc:Dme};function Lp(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var $me={kernelName:za,backendName:"wasm",kernelFunc:Lp},Fme=Nn(La),x6;function Ome(e){x6=e.wasm.cwrap(Yr,null,["number","number","number","number"])}function Mme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id;return x6(i,a,o,c),l}var zme={kernelName:Yr,backendName:"wasm",setupFunc:Ome,kernelFunc:Mme};function b6(e){let{inputs:t,backend:n}=e,s=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=N.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>w.sizeFromShape(h.shape)>0);if(a.length===1)return d0({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(w.sizeFromShape(r)===0)return o;let i=a.map(h=>h.shape);if(N.assertParamsConsistent(i,s),a[0].dtype==="string"){let h=a.map(A=>{let b=w.sizeFromShape(A.shape.slice(s));return hs({inputs:{x:A},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(A=>({vals:n.readSync(A.dataId),shape:A.shape}));r=N.computeOutShape(h.map(A=>A.shape),1);let m=h[0].shape[0]===1,g=ox(f,r,t[0].dtype,m),y=N.computeOutShape(a.map(A=>A.shape),s);o.shape=y;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=N.fromStringArrayToUint8(g),h.forEach(A=>n.disposeData(A.dataId)),o}let l=w.sizeFromShape(a[0].shape.slice(0,s)),c=0,u=a.map(h=>{let f=w.sizeFromShape(h.shape.slice(s));return c+=f,f}),d=a.map(h=>n.typedArrayFromHeap(h)),p=n.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*c;for(let m=0;m<d.length;m++){let g=u[m],y=h*g,x=d[m].subarray(y,y+g);p.set(x,f),f+=g}}return o}var Lme={kernelName:Ai,backendName:"wasm",kernelFunc:b6},v6;function Bme(e){v6=e.wasm.cwrap(Ba,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wme(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d,dataFormat:p}=n,h=N.convertConv2DDataFormat(p),f=N.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,A=f.padInfo.bottom,b=f.padInfo.left,v=f.dilationHeight,C=f.dilationWidth,I=f.strideHeight,E=f.strideWidth,R=f.inChannels,F=f.outChannels,_=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let P=s.makeOutput(f.outShape,"float32"),T=s.dataIdMap.get(P.dataId).id;return v6(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,x,A,b,_,v,C,I,E,R,F,T),P}var Vme={kernelName:Ba,backendName:"wasm",setupFunc:Bme,kernelFunc:Wme},w6;function Ume(e){w6=e.wasm.cwrap(Wa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Gme(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,inputShape:u}=s,d=1,p=N.convertConv2DDataFormat(l),h=N.computeConv2DInfo(u,a.shape,o,d,i,c,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:x,inWidth:A,outChannels:b,outHeight:v,outWidth:C,strideHeight:I,strideWidth:E}=h,R=m-1-h.padInfo.top,F=g-1-h.padInfo.left,_=h.dataFormat==="channelsLast",P=w.computeStrides(h.inShape),T=w.computeStrides(r.shape),[O,G,K]=w.computeStrides(a.shape),z=P[0],j=_?P[1]:P[2],W=_?P[2]:1,Q=_?1:P[1],ne=T[0],oe=_?T[1]:T[2],Z=_?T[2]:1,ae=_?1:T[1],re=t.makeOutput(h.inShape,"float32"),me=t.dataIdMap.get(re.dataId).id,be=t.dataIdMap.get(r.dataId).id,Ne=t.dataIdMap.get(a.dataId).id;return w6(be,Ne,f,m,g,x,A,y,v,C,b,I,E,R,F,O,G,K,z,j,W,Q,ne,oe,Z,ae,me),re}var Hme={kernelName:Wa,backendName:"wasm",setupFunc:Ume,kernelFunc:Gme},jme=Nn(Va),qme=Nn(Ua),k6=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(k6||{}),I6;function Xme(e){I6=e.wasm.cwrap(bi,null,["number","number","number","number","array","number","number","number","number","number"])}function Kme(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:c}=n,u=l.shape[0],[d,p]=o,h=[u,d,p,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Lp({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(c.dataId).id,A=t.makeOutput(h,"float32"),b=t.dataIdMap.get(A.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return I6(g,y,x,u,v,d,p,k6[r],a,b),m!=null&&t.disposeData(m.dataId),A}var Zme={kernelName:bi,backendName:"wasm",setupFunc:Xme,kernelFunc:Kme},S6;function Yme(e){S6=e.wasm.cwrap(xi,null,["number","number","number","number","number","number"])}function Jme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=N.getAxesPermutation([a],l),u=r;c!==null&&(u=_c({inputs:{x:r},attrs:{perm:c},backend:n}));let d=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[d],l);let p=n.makeOutput(u.shape,u.dtype),h=u.shape[d],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(p.dataId).id;S6(f,o?1:0,i?1:0,h,m,Xt[r.dtype]);let g=p;if(c!==null){let y=N.getUndoAxesPermutation(c);g=_c({inputs:{x:p},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(p.dataId)}return g}var Qme={kernelName:xi,backendName:"wasm",setupFunc:Yme,kernelFunc:Jme},C6;function e0e(e){C6=e.wasm.cwrap(vi,null,["number","number","number","array","number","array","array","number","number"])}function t0e(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=t.makeOutput(f,"float32"),y=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return C6(y,a,o==="NHWC"?1:0,x,r.shape.length-1,A,b,f.length,v),m}var n0e={kernelName:vi,backendName:"wasm",setupFunc:e0e,kernelFunc:t0e},T6;function s0e(e){T6=e.wasm.cwrap(Ga,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function r0e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d}=n,p=c==null?[1,1]:c,h=N.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,x=h.padInfo.bottom,A=h.padInfo.left,b=h.dilationHeight,v=h.dilationWidth,C=h.strideHeight,I=h.strideWidth,E=h.inChannels,R=h.outChannels,F=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let _=s.makeOutput(h.outShape,"float32"),P=s.dataIdMap.get(_.dataId).id;return T6(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,x,A,F,b,v,C,I,E,R,P),_}var a0e={kernelName:Ga,backendName:"wasm",setupFunc:s0e,kernelFunc:r0e},o0e=Nn(ja),i0e=!1,l0e=Zn(wi,i0e,"bool"),u0e=Nn(qa,"float32");function Jx(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),hs({inputs:{x:r},backend:s,attrs:{shape:i}})}var c0e={kernelName:ki,backendName:"wasm",kernelFunc:Jx};function N6(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var d0e={kernelName:xu,backendName:"wasm",kernelFunc:N6},E6;function p0e(e){E6=e.wasm.cwrap(Si,null,["number","number","number","number","number","number"])}function h0e(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,c,u]=s.shape;return E6(a,i,l,c,u,o),r}var f0e={kernelName:Si,backendName:"wasm",kernelFunc:h0e,setupFunc:p0e},m0e=Nn(Xa),g0e=!1,y0e=Zn(Ka,g0e),R6;function A0e(e){R6=e.wasm.cwrap(Za,null,["number","number","number","number","number","number","number"])}function x0e(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:c}=n,u=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return R6(u,d,p,h,f,r,g),m}var b0e={kernelName:Za,backendName:"wasm",setupFunc:A0e,kernelFunc:x0e},_6;function v0e(e){_6=e.wasm.cwrap(No,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function w0e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,l,u,c,p),g=c0[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let Z=s.dataIdMap.get(o.dataId);if(Z.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${Z.shape.length}.`);if(Z.shape[0]!==A)throw new Error(`FusedConv2D bias shape (${Z.shape}) does not match the number of output channels (${A})`);b=Z.id}let v=m.filterHeight,C=m.filterWidth,I=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,_=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,O=m.strideWidth,G=m.inChannels,K=m.padInfo.type==="SAME"?1:0,z=m.batchSize,j=m.inHeight,W=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Q=s.makeOutput(m.outShape,"float32"),ne=s.dataIdMap.get(Q.dataId).id,oe=i==null?0:s.dataIdMap.get(i.dataId).id;return _6(y,z,j,W,x,v,C,b,I,E,R,F,K,_,P,T,O,G,A,g,oe,f||0,ne),Q}var k0e={kernelName:No,backendName:"wasm",setupFunc:v0e,kernelFunc:w0e},D6;function I0e(e){D6=e.wasm.cwrap(Eo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function S0e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,l,u,c,p,!0),g=c0[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let Z=s.dataIdMap.get(o.dataId);if(Z.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${Z.shape.length}.`);if(Z.shape[0]!==A)throw new Error(`FusedDepthwiseConv2D bias shape (${Z.shape}) does not match the number of output channels (${A})`);b=Z.id}let v=m.filterHeight,C=m.filterWidth,I=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,_=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,O=m.strideWidth,G=m.inChannels,K=m.padInfo.type==="SAME"?1:0,z=m.batchSize,j=m.inHeight,W=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Q=s.makeOutput(m.outShape,"float32"),ne=s.dataIdMap.get(Q.dataId).id,oe=i==null?0:s.dataIdMap.get(i.dataId).id;return D6(y,z,j,W,x,v,C,b,I,E,R,F,K,_,P,T,O,G,A,g,oe,f||0,ne),Q}var C0e={kernelName:Eo,backendName:"wasm",setupFunc:I0e,kernelFunc:S0e},P6;function T0e(e){P6=e.wasm.cwrap(Ti,null,["number","number","number","number","number","number","array","number"])}function N0e(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=Y2.prepareAndValidate(s,r),c=t.makeOutput(a,s.dtype);if(o===0)return c;let u=r.shape,d=u[u.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=t.dataIdMap.get(c.dataId).id;return P6(h,Xt[s.dtype],m,o,d,i,g,y),c}var E0e={kernelName:Ti,backendName:"wasm",setupFunc:T0e,kernelFunc:N0e},$6;function R0e(e){$6=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function _0e(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=w.parseAxisParam(o,r.shape)[0],c=t.readSync(a.dataId),u=r.shape[l];for(let R=0;R<c.length;++R){let F=c[R];w.assert(F<=u-1&&F>=0,()=>`GatherV2: the index value ${F} is not in [0, ${u-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=hs({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=w.sizeFromShape(a.shape),f=hs({inputs:{x:a},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(w.sizeFromShape(r.shape)===0)return g;let y=p.shape.length-1,A=t.dataIdMap.get(p.dataId).id,v=t.dataIdMap.get(f.dataId).id,C=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(w.computeStrides(p.shape)).buffer),E=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return $6(A,Xt[r.dtype],I,y,v,d.batchSize,E,C),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var D0e={kernelName:Ci,backendName:"wasm",setupFunc:R0e,kernelFunc:_0e},P0e=!1,$0e=Zn(Ni,P0e,"bool"),F0e=!1,O0e=Zn(Ya,F0e,"bool"),F6;function M0e(e){F6=e.wasm.cwrap(Qa,null,["number","number","number","number"])}function z0e(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;F6(r,Xt[t.dtype],n,o)}return a}var L0e={kernelName:Qa,backendName:"wasm",setupFunc:M0e,kernelFunc:z0e},B0e=!1,W0e=Zn(Ei,B0e,"bool"),V0e=!1,U0e=Zn(Ri,V0e,"bool"),G0e=Nn(eo),H0e=!1,j0e=Zn(_i,H0e,"bool"),O6;function q0e(e){O6=e.wasm.cwrap(to,null,["number","number","number","number"])}function X0e(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Jo(o,r,t);if(h){let A=t.dataIdMap.get(u.dataId).id;c=u,l=A}let f=c.shape.length;N.assertAxesAreInnerMostDims("max",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;O6(l,Xt[o.dtype],y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var K0e={kernelName:to,backendName:"wasm",setupFunc:q0e,kernelFunc:X0e},Z0e=!1,Y0e=Zn(no,Z0e),M6;function J0e(e){M6=e.wasm.cwrap(so,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Q0e(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;w.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.dilationHeight,x=u.dilationWidth,A=u.strideHeight,b=u.strideWidth,v=u.inChannels,C=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let I=s.makeOutput(u.outShape,"float32"),E=s.dataIdMap.get(I.dataId).id;return M6(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,x,A,b,v,C,E),I}var ege={kernelName:so,backendName:"wasm",setupFunc:J0e,kernelFunc:Q0e},z6;function tge(e){z6=e.wasm.cwrap(ro,null,["number, number, number"])}function nge(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Jo(o,r,t),f=d;if(h){let b=t.dataIdMap.get(u.dataId).id;b!==i&&(c=u,l=b,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("mean",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=w.sizeFromShape(g),x=c;c.dtype!=="float32"&&(x=Lp({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let A=t.makeOutput(m,"float32");if(w.sizeFromShape(c.shape)!==0){let b=t.dataIdMap.get(A.dataId).id;z6(l,y,b)}if(h&&t.disposeData(u.dataId),a){let b=N.expandShapeToKeepDim(A.shape,p);A.shape=b}return c.dtype!=="float32"&&t.disposeData(x.dataId),A}var sge={kernelName:ro,backendName:"wasm",setupFunc:tge,kernelFunc:nge},L6;function rge(e){L6=e.wasm.cwrap(ao,null,["number","number","number","number"])}function age(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Jo(o,r,t);if(h){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(c=u,l=A)}let f=c.shape.length;N.assertAxesAreInnerMostDims("min",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=w.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;L6(l,Xt[o.dtype],y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var oge={kernelName:ao,backendName:"wasm",setupFunc:rge,kernelFunc:age},ige=!1,lge=Zn(oo,ige),B6=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(B6||{}),W6;function uge(e){W6=e.wasm.cwrap(io,null,["number","array","number","number","array","array","number","number"])}function cge(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=s.map(f=>f[0]),d=s.map(f=>f[1]),p=new Uint8Array(new Int32Array(u).buffer),h=new Uint8Array(new Int32Array(d).buffer);return W6(o,c,t.shape.length,Xt[t.dtype],p,h,B6[r],l),i}var dge={kernelName:io,backendName:"wasm",kernelFunc:cge,setupFunc:uge},pge=!0,hge=Zn(lo,pge),fge=Nn(Di);function Qx(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var V6;function mge(e){V6=e.wasm.cwrap($i,"number",["number","number","number","number","number"])}function gge(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,c=t.dataIdMap.get(i.dataId).id,u=t.dataIdMap.get(l.dataId).id,d=V6(c,u,a,r,o),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=Qx(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var yge={kernelName:$i,backendName:"wasm",setupFunc:mge,kernelFunc:gge},U6;function Age(e){U6=e.wasm.cwrap(Cu,"number",["number","number","number","number","number","bool"])}function xge(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=U6(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Qx(t,p);t.wasm._free(m);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([],"int32",g);return[y,x]}var bge={kernelName:Cu,backendName:"wasm",setupFunc:Age,kernelFunc:xge},G6;function vge(e){G6=e.wasm.cwrap(Fi,"number",["number","number","number","number","number","number"])}function wge(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=G6(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Qx(t,p);t.wasm._free(g);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([f],"float32",m);return[y,x]}var kge={kernelName:Fi,backendName:"wasm",setupFunc:vge,kernelFunc:wge},Ige=!1,Sge=Zn(Pi,Ige,"bool"),H6;function Cge(e){H6=e.wasm.cwrap(Mi,null,["number","number","number","number","number"])}function Tge(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=n.makeOutput([...r.shape,a],"int32"),c=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(r.dataId).id;return H6(d,a,o,i,c),l}var Nge={kernelName:Mi,backendName:"wasm",setupFunc:Cge,kernelFunc:Tge};function Ege(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var Rge={kernelName:Oi,backendName:"wasm",kernelFunc:Ege};function _ge(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Jx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Jx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=b6({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var Dge={kernelName:zi,backendName:"wasm",kernelFunc:_ge},j6;function Pge(e){j6=e.wasm.cwrap(uo,null,["number","array","number","number","array","array","number","number"])}function $ge(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(w.sizeFromShape(t.shape)===0)return N6({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),p=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return j6(o,u,t.shape.length,Xt[t.dtype],h,f,r,c),i}var q6={kernelName:uo,backendName:"wasm",kernelFunc:$ge,setupFunc:Pge},Fge=!1,Oge=Zn(co,Fge),X6;function Mge(e){X6=e.wasm.cwrap(po,null,["number","number","number"])}function zge(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,c=l;l.dtype!=="float32"&&(c=Lp({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(c.dataId).id);let u=n.makeOutput(s.shape,"float32"),d=n.dataIdMap.get(u.dataId).id;return X6(i,o,d),l.dtype!=="float32"&&n.disposeData(c.dataId),u}var Lge={kernelName:po,backendName:"wasm",setupFunc:Mge,kernelFunc:zge},K6;function Bge(e){K6=e.wasm.cwrap(Li,null,["number","number","number","number"])}function Wge(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Jo(o,r,t),f=d;if(h){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(c=u,l=A,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("prod",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=w.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;K6(l,y,Xt[x.dtype],A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var Vge={kernelName:Li,backendName:"wasm",setupFunc:Bge,kernelFunc:Wge},Uge=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=ux(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},Gge={kernelName:Tu,backendName:"wasm",kernelFunc:Uge},Hge=!0,jge=Zn(Ha,Hge),qge=Nn(ho),Xge=Nn(mo),Z6;function Kge(e){Z6=e.wasm.cwrap(fo,null,["number","number","number","number","number","number","number","number","number","number"])}function Zge(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,[u,d,p,h]=r.shape,f=[u,l,c,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Lp({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,x=t.makeOutput(f,"float32");if(w.sizeFromShape(r.shape)===0)return x;let A=t.dataIdMap.get(x.dataId).id;return Z6(y,u,d,p,h,l,c,a?1:0,o?1:0,A),g!=null&&t.disposeData(g.dataId),x}var Yge={kernelName:fo,backendName:"wasm",setupFunc:Kge,kernelFunc:Zge},Y6;function Jge(e){Y6=e.wasm.cwrap(Wi,null,["number","array","number","array","number","number"])}function Qge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=w.parseAxisParam(a,r.shape);if(r.shape.length===0)return d0({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);Y6(l,u,o.length,d,r.shape.length,c);let p=hs({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),p}var e2e={kernelName:Wi,backendName:"wasm",kernelFunc:Qge,setupFunc:Jge},J6;function t2e(e){J6=e.wasm.cwrap(tl,null,["number","number","number","number","number","number","number","number","array","number","number"])}function n2e(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(l.dataId).id,[d,p,h,f]=r.shape,[m,g]=N.getImageCenter(i,p,h),y=o===0,x=255,A=typeof o=="number"?[o,o,o,y?0:x]:[...o,x],b=new Uint8Array(new Int32Array(A).buffer);return J6(c,d,p,h,f,a,m,g,b,A.length,u),l}var s2e={kernelName:tl,backendName:"wasm",kernelFunc:n2e,setupFunc:t2e},r2e=Nn(Vi),a2e=Nn(go),Q6;function o2e(e){Q6=e.wasm.cwrap(Ui,null,["number","number","number","number","number","number","array","number","number"])}function i2e(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(w.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=J2.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),x=t.dataIdMap.get(i.dataId).id;return Q6(f,g,Xt[a.dtype],l,c,u,y,p,x),i}var l2e={kernelName:Ui,backendName:"wasm",setupFunc:o2e,kernelFunc:i2e},eT;function u2e(e){eT=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function c2e(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(c.dataId).id,d=s.shape.length,p=r.shape.length,h=d===0||d>1||p===1?1:w.sizeFromShape(r.shape.slice(1));return eT(o,i,l,h,u),c}var d2e={kernelName:Gi,backendName:"wasm",kernelFunc:c2e,setupFunc:u2e},tT;function p2e(e){tT=e.wasm.cwrap(Ao,null,["number","number"])}function h2e(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return w.sizeFromShape(r.shape)===0||tT(s,a),r}var f2e={kernelName:"Sigmoid",backendName:"wasm",setupFunc:p2e,kernelFunc:h2e},m2e=Nn(yo),nT;function g2e(e){nT=e.wasm.cwrap(vo,null,["number","number","number","number"])}function y2e(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=w.sizeFromShape(n.shape)/i;return w.sizeFromShape(a.shape)===0||nT(r,o,i,l),a}var A2e={kernelName:vo,backendName:"wasm",setupFunc:g2e,kernelFunc:y2e};function x2e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=w.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<r.shape.length;++C)l.push([0,0]);let c=q6.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=hs({inputs:{x:c},backend:n,attrs:{shape:u}}),x=_c({inputs:{x:m},backend:n,attrs:{perm:d}}),v=hs({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),v}var b2e={kernelName:qi,backendName:"wasm",kernelFunc:x2e},sT;function v2e(e){sT=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function w2e(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=n,i=s.shape[0],l=s.shape[1],c=t.readSync(a.dataId)[0],u=[i+c,l],d=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(o.dataId).id,f=t.makeOutput(u,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(u.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([c],"bool"),A=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([i],s.dtype),v=t.dataIdMap.get(b.dataId).id,C=t.makeOutput([4],"int32"),I=t.dataIdMap.get(C.dataId).id,E=sT(d,p,Xt[r.dtype],i,c,l,h,m,y,A,v,I),R=t.readSync(C.dataId),F;switch(R[0]){case 1:{F=N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{F=N.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:F=N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:F=""}if(t.disposeData(C.dataId),F)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error(F);let _=f,P=g;return E!==u[0]&&(_=zl({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),P=zl({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[_,P,x,b]}var k2e={kernelName:Sd,backendName:"wasm",setupFunc:v2e,kernelFunc:w2e},rT;function I2e(e){rT=e.wasm.cwrap(Pu,null,["number","number","number","number","number","number","number"])}function S2e(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(a.dataId).id,c=s.shape[0],u=w.sizeFromShape(a.shape),d=t.makeOutput([c,u],s.dtype),p=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([u],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;rT(o,i,l,c,p,f,g);let y=t.readSync(m.dataId),x;switch(y[0]){case 0:{x=N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{x=N.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:x=N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=N.getSparseReshapeInputOutputMultipleErrorMessage(A,b);break}case 4:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=N.getSparseReshapeInputOutputMismatchErrorMessage(A,b);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(d.dataId),t.disposeData(h.dataId),new Error(x);return[d,h]}var C2e={kernelName:Pu,backendName:"wasm",setupFunc:I2e,kernelFunc:S2e},aT;function oT(e){aT=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function iT(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:o}=s,i=a.shape[0],l=n.readSync(o.dataId,i-1,i)[0],u=i>0?l+1:0;if(u<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=r.shape.slice();d[0]=u;let p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(d,r.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput([4],"int32"),x=n.dataIdMap.get(y.dataId).id;aT(p,Xt[r.dtype],r.shape[0],h,f,g,x,t,0);let A=n.readSync(y.dataId),b;switch(A[0]){case 0:{b=N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{b=N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:b=N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:b=N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(y.dataId),b)throw n.disposeData(m.dataId),new Error(b);return m}function T2e(e){return iT(e,!0)}var N2e={kernelName:Cd,backendName:"wasm",setupFunc:oT,kernelFunc:T2e};function E2e(e){return iT(e,!1)}var R2e={kernelName:Td,backendName:"wasm",setupFunc:oT,kernelFunc:E2e};function _2e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=w.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=zl({inputs:{x:r},attrs:{begin:c,size:p},backend:s});return c[i]+=d,h})}var D2e={kernelName:Xi,backendName:"wasm",kernelFunc:_2e},P2e=Nn(xo),$2e=Nn($u),F2e=!0,O2e=Zn(wo,F2e),lT;function M2e(e){lT=e.wasm.cwrap(Co,null,["number","number","number","number"])}function z2e(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return lT(o,r,Xt[a.dtype],l),i}var L2e={kernelName:Co,backendName:"wasm",setupFunc:M2e,kernelFunc:z2e},uT;function B2e(e){uT=e.wasm.cwrap(Ki,null,["number","array","number","array","array","array","array","array","number","number"])}function W2e(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),v;if(m)v=hs({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=zt.computeOutShape(x,A,b),I=zl({inputs:{x:r},backend:t,attrs:{begin:x,size:C}});v=hs({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeData(I.dataId)}else{let C=t.makeOutput(h,"float32"),I=t.dataIdMap.get(r.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(A).buffer),_=new Uint8Array(new Int32Array(b).buffer),P=new Uint8Array(new Int32Array(h).buffer),T=new Uint8Array(new Int32Array(w.computeStrides(h)).buffer),O=t.dataIdMap.get(C.dataId).id;uT(I,E,r.shape.length,R,F,_,P,T,h.length,O),v=hs({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}return v}var V2e={kernelName:Ki,backendName:"wasm",setupFunc:B2e,kernelFunc:W2e},U2e=!0,G2e=Zn(ko,U2e),cT;function H2e(e){cT=e.wasm.cwrap(bo,null,["number","number","number","number"])}function j2e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Jo(o,r,t),f=d;if(h){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(c=u,l=A,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("sum",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=w.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;cT(l,y,Xt[x.dtype],A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var q2e={kernelName:bo,backendName:"wasm",setupFunc:H2e,kernelFunc:j2e},X2e=Nn(Zi),K2e=Nn(Io),dT;function Z2e(e){dT=e.wasm.cwrap(Jr,null,["number","array","number","array","number","number"])}function Y2e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let p=0;p<i.length;p++)i[p]=r.shape[p]*o[p];let l=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),u=n.makeOutput(i,r.dtype),d=n.dataIdMap.get(u.dataId).id;return dT(a,l,r.shape.length,c,i.length,Xt[u.dtype],d),u}var J2e={kernelName:Jr,backendName:"wasm",setupFunc:Z2e,kernelFunc:Y2e},pT;function Q2e(e){pT=e.wasm.cwrap(Yi,null,["number","array","number","number","number","bool","number","number"])}var eye=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let c=t.makeOutput(l,s.dtype),u=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(l,"int32"),p=t.dataIdMap.get(d.dataId).id;return pT(o,i,s.shape.length,Xt[s.dtype],r,a,u,p),[c,d]},tye={kernelName:Yi,backendName:"wasm",setupFunc:Q2e,kernelFunc:eye},hT;function nye(e){hT=e.wasm.cwrap(Ji,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function sye(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),x=t.makeOutput(g,r.dtype),A=t.dataIdMap.get(x.dataId).id,v=t.dataIdMap.get(r.dataId).id,I=t.dataIdMap.get(a.dataId).id,E=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return hT(v,I,a.shape[0]>1,u,f,m,h,p,d,y,r.shape.length-1,E,R,l,A),x}var rye={kernelName:Ji,backendName:"wasm",setupFunc:nye,kernelFunc:sye};function aye(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o),d=new Array(i).fill(0),p=r.shape.slice();p[a]=1;for(let h=0;h<u.length;h++)d[a]=h,u[h]=zl({inputs:{x:r},attrs:{begin:d,size:p},backend:n});return u.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var oye={kernelName:Qi,backendName:"wasm",kernelFunc:aye};function iye(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var lye={kernelName:el,backendName:"wasm",kernelFunc:iye},uye=[eme,tme,sme,ome,fme,yme,bme,kme,Tme,Pme,$me,Fme,zme,Lme,Vme,Hme,jme,qme,Zme,Qme,n0e,a0e,o0e,l0e,u0e,c0e,d0e,f0e,m0e,y0e,b0e,k0e,C0e,E0e,D0e,$0e,O0e,ime,L0e,W0e,U0e,G0e,j0e,K0e,Y0e,ege,sge,oge,lge,dge,hge,fge,yge,bge,kge,Sge,Nge,Rge,Dge,q6,Oge,Lge,Vge,Gge,jge,qge,Xge,Ime,Yge,e2e,s2e,r2e,a2e,l2e,d2e,f2e,m2e,_me,A2e,b2e,k2e,C2e,N2e,R2e,D2e,P2e,$2e,O2e,L2e,V2e,G2e,q2e,X2e,K2e,J2e,tye,rye,dme,oye,lye];for(let e of uye)Js(e);var eb=Y();eb.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));eb.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(eb.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var fT=hi(_R()),cye='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',dye=hi(DR()),mT=class extends ru{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(yT),sb=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new dd(this,Dn())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=w.sizeFromShape(n),i=o*w.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:o}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=o.length)?o:o.slice(t,n);t=t||0,n=n||w.sizeFromShape(a);let i=w.bytesPerElement(r),l=this.wasm.HEAPU8.slice(s+t*i,s+n*i);return fye(l.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function pye(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function gT(e,t,n){if(p0!=null)return p0;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),Wp!=null&&Wp[s]!=null?Wp[s]:n+s}async function hye(){let[e,t]=await Promise.all([Y().getAsync("WASM_HAS_SIMD_SUPPORT"),Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let c=cye,u=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(u)}return i.endsWith(".wasm")?gT(e,t,Bp!=null?Bp:l):l+i},tb&&(r.instantiateWasm=pye(gT(e,t,Bp!=null?Bp:"")));let a=!1;r.onAbort=()=>{if(a||Vp)return;Vp=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&p0==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+fT.default.toString()],{type:"text/javascript"}),o=(0,fT.default)(r)):o=(0,dye.default)(r),o.then(i=>{a=!0,Vp=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})})})}function fye(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var mye=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],p0=null,Bp=null,Wp={},Vp=!1,tb=!1;function gye(e,t=!1){if(iy("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Vp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");p0=e,tb=t}function nb(e,t=!1){if(Vp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Bp=e;else{Wp=e;let n=mye.filter(s=>Wp[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}tb=t}var yT=-1,sb=-1;function yye(e){yT=e}function Aye(){if(sb===-1)throw new Error("WASM backend not initialized.");return sb}var xye="0.0.0",bye=2;cl("wasm",async()=>{let{wasm:e}=await hye();return new mT(e)},bye);var Qo="3.13.0-20220114",Up={tfjs:Qo,"tfjs-core":Qo,"tfjs-data":Qo,"tfjs-layers":Qo,"tfjs-converter":Qo,"tfjs-backend-cpu":Qo,"tfjs-backend-webgl":Qo,"tfjs-backend-wasm":Qo};var AT=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var xT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,bT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,vT=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,wT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,kT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var rb=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},IT=class{constructor(t,n,s){fe(this,"uniform",{});fe(this,"attribute",{});fe(this,"gl");fe(this,"id");fe(this,"compile",(t,n)=>{let s=this.gl.createShader(n);return s?(this.gl.shaderSource(s,t),this.gl.compileShader(s),this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS)?s:(J(`filter: gl compile failed: ${this.gl.getShaderInfoLog(s)}`),null)):(J("filter: could not create shader"),null)});this.gl=t;let r=this.compile(n,this.gl.VERTEX_SHADER),a=this.compile(s,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!r||!a)){if(!this.id){J("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){J(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),rb(n,"attribute",this.attribute);for(let o in this.attribute)this.attribute[o]=this.gl.getAttribLocation(this.id,o);rb(n,"uniform",this.uniform),rb(s,"uniform",this.uniform);for(let o in this.uniform)this.uniform[o]=this.gl.getUniformLocation(this.id,o)}}};function ST(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=Yn(100,100),c={},u={INTERMEDIATE:1},d=l.getContext("webgl");if(this.gl=d,!d){J("filter: cannot get webgl context");return}function p(x,A){if(!(x===l.width&&A===l.height)){if(l.width=x,l.height=A,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,o),d.bufferData(d.ARRAY_BUFFER,b,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),r=[null,null]}}function h(x,A){let b=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,b);let v=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,v);let C=d.createTexture();return d.bindTexture(d.TEXTURE_2D,C),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,x,A,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,C,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:b,texture:C}}function f(x){return r[x]=r[x]||h(l.width,l.height),r[x]}function m(x=0){if(!i)return;let A=null,b=null,v=!1;e===0?A=t:A=f(s).texture||null,e++,n&&!(x&u.INTERMEDIATE)?(b=null,v=e%2===0):(s=(s+1)%2,b=f(s).fbo||null),d.bindTexture(d.TEXTURE_2D,A),d.bindFramebuffer(d.FRAMEBUFFER,b),d.uniform1f(i.uniform.flipY,v?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function g(x){if(c[x])return i=c[x],d.useProgram((i?i.id:null)||null),i;if(i=new IT(d,AT,x),!i)return J("filter: could not get webgl program"),null;let A=Float32Array.BYTES_PER_ELEMENT,b=4*A;return d.enableVertexAttribArray(i.attribute.pos),d.vertexAttribPointer(i.attribute.pos,2,d.FLOAT,!1,b,0*A),d.enableVertexAttribArray(i.attribute.uv),d.vertexAttribPointer(i.attribute.uv,2,d.FLOAT,!1,b,2*A),c[x]=i,i}let y={colorMatrix:x=>{let A=new Float32Array(x);A[4]/=255,A[9]/=255,A[14]/=255,A[19]/=255;let b=A[18]===1&&A[3]===0&&A[8]===0&&A[13]===0&&A[15]===0&&A[16]===0&&A[17]===0&&A[19]===0?bT:xT,v=g(b);!v||(d.uniform1fv(v.uniform.m,A),m())},brightness:x=>{let A=(x||0)+1;y.colorMatrix([A,0,0,0,0,0,A,0,0,0,0,0,A,0,0,0,0,0,1,0])},saturation:x=>{let A=(x||0)*2/3+1,b=(A-1)*-.5;y.colorMatrix([A,b,b,0,0,b,A,b,0,0,b,b,A,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:x=>{let A=(x||0)+1,b=-128*(A-1);y.colorMatrix([A,0,0,0,b,0,A,0,0,b,0,0,A,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let A=Math.cos(x),b=Math.sin(x),v=.213,C=.715,I=.072;y.colorMatrix([v+A*(1-v)+b*-v,C+A*-C+b*-C,I+A*-I+b*(1-I),0,0,v+A*-v+b*.143,C+A*(1-C)+b*.14,I+A*-I+b*-.283,0,0,v+A*-v+b*-(1-v),C+A*-C+b*C,I+A*(1-I)+b*I,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let A=new Float32Array(x),b=1/l.width,v=1/l.height,C=g(kT);!C||(d.uniform1fv(C.uniform.m,A),d.uniform2f(C.uniform.px,b,v),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let A=x||1;y.convolution.call(this,[0,-1*A,0,-1*A,1+4*A,-1*A,0,-1*A,0])},emboss:x=>{let A=x||1;y.convolution.call(this,[-2*A,-1*A,0,-1*A,1,1*A,0,1*A,2*A])},blur:x=>{let A=x/7/l.width,b=x/7/l.height,v=g(wT);!v||(d.uniform2f(v.uniform.px,0,b),m(u.INTERMEDIATE),d.uniform2f(v.uniform.px,A,0),m())},pixelate:x=>{let A=x/l.width,b=x/l.height,v=g(vT);!v||(d.uniform2f(v.uniform.size,A,b),m())}};this.add=function(x){let A=Array.prototype.slice.call(arguments,1),b=y[x];a.push({func:b,args:A})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){p(x.width,x.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,x);for(let A=0;A<a.length;A++){n=A===a.length-1;let b=a[A];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function h0(e){let t=e.shape.length===4?Ye(e):e,n=Jt(t,3,2),s=[zo(n[0]),zo(n[1]),zo(n[2])],r=[xn(n[0]),xn(n[1]),xn(n[2])],a=await Promise.all(r.map(h=>h.data())),o=.99*Math.max(a[0][0],a[1][0],a[2][0]),i=[pe(n[0],s[0]),pe(n[1],s[1]),pe(n[2],s[2])],l=[pe(r[0],s[0]),pe(r[1],s[1]),pe(r[2],s[2])],c=[de(o,l[0]),de(o,l[1]),de(o,l[2])],u=[L(i[0],c[0]),L(i[1],c[1]),L(i[2],c[2])],d=on([u[0],u[1],u[2]],2),p=H(d,[1,t.shape[0],t.shape[1],3]);return te([...n,...s,...r,...i,...l,...c,...u,d,t]),p}var f0=2048,dt=null,dn=null,Dc=null,Et,ha={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function Yn(e,t){let n;if(he.browser)if(he.worker){if(typeof OffscreenCanvas=="undefined")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if(typeof document=="undefined")throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof he.Canvas!="undefined"?n=new he.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(n=new globalThis.Canvas(e,t));return n}function ab(e,t){let n=t||Yn(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function Pc(e,t,n=!0){if(!e)return t.debug&&J("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof nt)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof he.Canvas!="undefined"&&e instanceof he.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof nt){let s=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)s=Yt(e,0);else if(e.shape[2]===4){let r=ml(e,[0,0,0],[-1,-1,3]);s=Yt(r,0),te(r)}}else e.shape.length===4&&(e.shape[3]===3?s=Vn(e):e.shape[3]===4&&(s=gl(e,[0,0,0,0],[-1,-1,-1,3])));if(s==null||s.shape.length!==4||s.shape[0]!==1||s.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(s.dtype==="int32"){let r=ge(s,"float32");te(s),s=r}return{tensor:s,canvas:t.filter.return?dn:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&J("input stream is not ready"),{tensor:null,canvas:dt};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!r)return t.debug&&J("cannot determine input dimensions"),{tensor:null,canvas:dt};let a=s,o=r;if(a>f0&&(a=f0,o=Math.trunc(a*r/s)),o>f0&&(o=f0,a=Math.trunc(o*s/r)),(t.filter.width||0)>0?a=t.filter.width:(t.filter.height||0)>0&&(a=s*((t.filter.height||0)/r)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=r*((t.filter.width||0)/s)),!a||!o)throw new Error("input error: cannot determine dimension");(!dt||(dt==null?void 0:dt.width)!==a||(dt==null?void 0:dt.height)!==o)&&(dt=Yn(a,o));let i=dt.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate!="undefined"?(i.translate(s,0),i.scale(-1,1),i.drawImage(e,0,0,s,r,0,0,dt==null?void 0:dt.width,dt==null?void 0:dt.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,s,r,0,0,dt==null?void 0:dt.width,dt==null?void 0:dt.height),(!dn||dt.width!==dn.width||(dt==null?void 0:dt.height)!==(dn==null?void 0:dn.height))&&(dn=Yn(dt.width,dt.height)),t.filter.enabled&&he.webgl.supported){if(Et||(Et=he.browser?new ST:null),he.filter=!!Et,!Et||!Et.add)return t.debug&&J("input process error: cannot initialize filters"),{tensor:null,canvas:dt};Et.reset(),t.filter.brightness!==0&&Et.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Et.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Et.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Et.add("blur",t.filter.blur),t.filter.saturation!==0&&Et.add("saturation",t.filter.saturation),t.filter.hue!==0&&Et.add("hue",t.filter.hue),t.filter.negative&&Et.add("negative"),t.filter.sepia&&Et.add("sepia"),t.filter.vintage&&Et.add("brownie"),t.filter.sepia&&Et.add("sepia"),t.filter.kodachrome&&Et.add("kodachrome"),t.filter.technicolor&&Et.add("technicolor"),t.filter.polaroid&&Et.add("polaroid"),t.filter.pixelate!==0&&Et.add("pixelate",t.filter.pixelate),Et.get()>0?dn=Et.apply(dt):dn=Et.draw(dt)}else ab(dt,dn),Et&&(Et=null),he.filter=!!Et;if(!n)return{tensor:null,canvas:dn};if(!dn)throw new Error("canvas error: cannot create output");let l,c=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(he.browser&&Os)l=Os?Os.fromPixels(e):null;else{c=e.data.length/e.height/e.width;let p=new Uint8Array(e.data.buffer);l=ht(p,[e.height,e.width,c],"int32")}else if((!Dc||dn.width!==Dc.width||dn.height!==Dc.height)&&(Dc=Yn(dn.width,dn.height)),Os&&he.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=Os.fromPixels(dn):(Dc=ab(dn),l=Os.fromPixels(Dc));else{let f=ab(dn).getContext("2d").getImageData(0,0,a,o);c=f.data.length/a/o;let m=new Uint8Array(f.data.buffer);l=ht(m,[a,o,c])}if(c===4){let p=ml(l,[0,0,0],[-1,-1,3]);te(l),l=p}if(!l)throw new Error("input error: cannot create tensor");let u=ge(l,"float32"),d=t.filter.equalization?await h0(u):Yt(u,0);return te([l,u]),{tensor:d,canvas:t.filter.return?dn:null}}}async function CT(e,t){let n=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return n;if(!ha.inputTensor)ha.inputTensor=Vn(t);else if(ha.inputTensor.shape[1]!==t.shape[1]||ha.inputTensor.shape[2]!==t.shape[2])te(ha.inputTensor),ha.inputTensor=Vn(t);else{let s={};s.diff=pe(t,ha.inputTensor),s.squared=L(s.diff,s.diff),s.sum=we(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;te([ha.inputTensor,s.diff,s.squared,s.sum]),ha.inputTensor=Vn(t),n=a<=(e.cacheSensitivity||0)}return n}async function TT(e,t,n){let s={};if(!t||!n||t.shape.length!==4||t.shape.length!==n.shape.length)return e.debug||J("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(t.shape[0]!==1||n.shape[0]!==1||t.shape[3]!==3||n.shape[3]!==3)return e.debug||J("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;s.input1=Vn(t),s.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Ie.resizeBilinear(n,[t.shape[1],t.shape[2]]):Vn(n),s.diff=pe(s.input1,s.input2),s.squared=L(s.diff,s.diff),s.sum=we(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return te([s.input1,s.input2,s.diff,s.squared,s.sum]),a}var NT=class{constructor(){fe(this,"browser");fe(this,"node");fe(this,"worker");fe(this,"platform","");fe(this,"agent","");fe(this,"backends",[]);fe(this,"initial");fe(this,"filter");fe(this,"tfjs");fe(this,"offscreen");fe(this,"perfadd",!1);fe(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});fe(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});fe(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});fe(this,"cpu",{model:void 0,flags:[]});fe(this,"kernels",[]);fe(this,"Canvas");fe(this,"Image");fe(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined",this.tfjs={version:Up["tfjs-core"]},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t&&t[0]){let n=t[0].match(/\(([^()]+)\)/g);this.platform=n&&n[0]?n[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(Dn().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&xs()==="wasm"&&(this.wasm.simd=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let t=Yn(100,100),n=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof n!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(xs()==="webgl"||xs()==="humangl")){let s=gr().gpgpu!=="undefined"?await gr().getGPGPUContext().gl:null;s&&(this.webgl.version=s.getParameter(s.VERSION),this.webgl.renderer=s.getParameter(s.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(s){this.webgpu.supported=!1}try{this.kernels=Dr(xs()).map(s=>s.kernelName.toLowerCase())}catch(s){}}async updateCPU(){let t={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},he=new NT;var ob="2.5.8";var fs,ib=[],Cye=["white","black","asian","indian","other"],Tye=[15,23,28,35.5,45.5,55.5,65],ET=0,RT=0,lb=Number.MAX_SAFE_INTEGER;async function _T(e){return he.initial&&(fs=null),fs?e.debug&&J("cached model:",fs.modelUrl):(fs=await We(Ue(e.modelBasePath,e.face.gear.modelPath)),!fs||!fs.modelUrl?J("load model failed:",e.face.gear.modelPath):e.debug&&J("load model:",fs.modelUrl)),fs}async function ub(e,t,n,s){var o,i;if(!fs)return{age:0,gender:"unknown",genderScore:0,race:[]};let r=lb<(((o=t.face.gear)==null?void 0:o.skipFrames)||0),a=(((i=t.face.gear)==null?void 0:i.skipTime)||0)>ie()-RT;return t.skipAllowed&&a&&r&&ET===s&&ib[n]?(lb++,ib[n]):(lb=0,new Promise(async l=>{var y,x;if(!(fs==null?void 0:fs.inputs[0].shape))return;let c={},u=[[0,.1,.9,.9]];c.resize=Ie.cropAndResize(e,u,[0],[fs.inputs[0].shape[2],fs.inputs[0].shape[1]]);let d={age:0,gender:"unknown",genderScore:0,race:[]};((y=t.face.gear)==null?void 0:y.enabled)&&([c.age,c.gender,c.race]=fs.execute(c.resize,["age_output","gender_output","race_output"]));let p=await c.gender.data();d.gender=p[0]>p[1]?"male":"female",d.genderScore=Math.round(100*(p[0]>p[1]?p[0]:p[1]))/100;let h=await c.race.data();for(let A=0;A<h.length;A++)h[A]>(((x=t.face.gear)==null?void 0:x.minConfidence)||.2)&&d.race.push({score:Math.round(100*h[A])/100,race:Cye[A]});d.race.sort((A,b)=>b.score-A.score);let m=Array.from(await c.age.data()).map((A,b)=>[Tye[b],A]).sort((A,b)=>b[1]-A[1]),g=m[0][0];for(let A=1;A<m.length;A++)g+=m[A][1]*(m[A][0]-g);d.age=Math.round(10*g)/10,Object.keys(c).forEach(A=>te(c[A])),ib[n]=d,ET=s,RT=ie(),l(d)}))}var Ke={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function PT(){Ke.tf255=Te(255,"float32"),Ke.tf1=Te(1,"float32"),Ke.tf2=Te(2,"float32"),Ke.tf05=Te(.5,"float32"),Ke.tf127=Te(127.5,"float32"),Ke.rgb=Tt([.2989,.587,.114],"float32")}var On,m0=[],$T=0,FT=0,cb=Number.MAX_SAFE_INTEGER;async function OT(e){return he.initial&&(On=null),On?e.debug&&J("cached model:",On.modelUrl):(On=await We(Ue(e.modelBasePath,e.face.ssrnet.modelPathAge)),!On||!On.modelUrl?J("load model failed:",e.face.ssrnet.modelPathAge):e.debug&&J("load model:",On.modelUrl)),On}async function db(e,t,n,s){var o,i,l,c;if(!On)return{age:0};let r=cb<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-FT;return t.skipAllowed&&r&&a&&$T===s&&((l=m0[n])==null?void 0:l.age)&&((c=m0[n])==null?void 0:c.age)>0?(cb++,m0[n]):(cb=0,new Promise(async u=>{if(!(On==null?void 0:On.inputs)||!On.inputs[0]||!On.inputs[0].shape)return;let d={};d.resize=Ie.resizeBilinear(e,[On.inputs[0].shape[2],On.inputs[0].shape[1]],!1),d.enhance=L(d.resize,Ke.tf255);let p={age:0};if(t.face.ssrnet.enabled&&(d.age=On.execute(d.enhance)),d.age){let h=await d.age.data();p.age=Math.trunc(10*h[0])/10}Object.keys(d).forEach(h=>te(d[h])),m0[n]=p,$T=s,FT=ie(),u(p)}))}var ms,g0=[],zT=0,LT=0,pb=Number.MAX_SAFE_INTEGER,hb=[.2989,.587,.114];async function BT(e){return he.initial&&(ms=null),ms?e.debug&&J("cached model:",ms.modelUrl):(ms=await We(Ue(e.modelBasePath,e.face.ssrnet.modelPathGender)),!ms||!ms.modelUrl?J("load model failed:",e.face.ssrnet.modelPathGender):e.debug&&J("load model:",ms.modelUrl)),ms}async function fb(e,t,n,s){var o,i,l,c;if(!ms)return{gender:"unknown",genderScore:0};let r=pb<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-LT;return t.skipAllowed&&r&&a&&zT===s&&((l=g0[n])==null?void 0:l.gender)&&((c=g0[n])==null?void 0:c.genderScore)>0?(pb++,g0[n]):(pb=0,new Promise(async u=>{if(!(ms==null?void 0:ms.inputs[0].shape))return;let d={};d.resize=Ie.resizeBilinear(e,[ms.inputs[0].shape[2],ms.inputs[0].shape[1]],!1),d.enhance=X(()=>{let[f,m,g]=Jt(d.resize,3,3),y=L(f,hb[0]),x=L(m,hb[1]),A=L(g,hb[2]),b=bf([y,x,A]);return L(pe(b,Ke.tf05),2)});let p={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(d.gender=ms.execute(d.enhance));let h=await d.gender.data();p.gender=h[0]>h[1]?"female":"male",p.genderScore=h[0]>h[1]?Math.trunc(100*h[0])/100:Math.trunc(100*h[1])/100,Object.keys(d).forEach(f=>te(d[f])),g0[n]=p,zT=s,LT=ie(),u(p)}))}var pn,y0=[],mb=Number.MAX_SAFE_INTEGER,VT=0,UT=0;async function GT(e){var t,n;return he.initial&&(pn=null),pn?e.debug&&J("cached model:",pn.modelUrl):(pn=await We(Ue(e.modelBasePath,((t=e.face.antispoof)==null?void 0:t.modelPath)||"")),!pn||!pn.modelUrl?J("load model failed:",(n=e.face.antispoof)==null?void 0:n.modelPath):e.debug&&J("load model:",pn.modelUrl)),pn}async function gb(e,t,n,s){var o,i;if(!pn)return 0;let r=(((o=t.face.antispoof)==null?void 0:o.skipTime)||0)>ie()-UT,a=mb<(((i=t.face.antispoof)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&VT===s&&y0[n]?(mb++,y0[n]):(mb=0,new Promise(async l=>{let c=Ie.resizeBilinear(e,[(pn==null?void 0:pn.inputs[0].shape)?pn.inputs[0].shape[2]:0,(pn==null?void 0:pn.inputs[0].shape)?pn.inputs[0].shape[1]:0],!1),u=pn==null?void 0:pn.execute(c),d=(await u.data())[0];y0[n]=Math.round(100*d)/100,VT=s,UT=ie(),te([c,u]),l(y0[n])}))}var lr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},yb={count:468,mouth:13,symmetryLine:[13,lr.midwayBetweenEyes[0]]},Hp={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Ab=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],jp=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],Ll=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var Eye=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],Rye=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],_ye=[33,133,362,263,1,78,308],yAe=Eye.map(e=>jp[e]),AAe=Rye.map(e=>jp[e]),xAe=_ye.map(e=>jp[e]);var $c=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],A0=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],bb=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],vb=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],jT=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s,landmarks:e.landmarks,confidence:e.confidence}},wb=(e,t,n)=>{let s=t.shape[1],r=t.shape[2],a=[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r],o=Ie.cropAndResize(t,[a],[0],n),i=de(o,Ke.tf255);return te(o),i},x0=(e,t)=>{let n=A0(e),s=$c(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},b0=e=>{let t=A0(e),n=$c(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks,confidence:e.confidence}},qT=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},kb=[[1,0,0],[0,1,0],[0,0,1]],Dye=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),Pye=(e,t)=>Dye(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var XT=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Bl=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},$ye=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},KT=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Bl(e[r],$ye(t,a)))}return n},ZT=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=XT(t[0],t[1]),o=KT(a,r),i=XT(-t[0],-t[1]);return KT(o,i)},Fye=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Bl(t[0],n),-Bl(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},Oye=(e,t)=>[Bl(e,t[0]),Bl(e,t[1])];function YT(e){let t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let c=r*(l+.5);for(let u=0;u<o;u++){let d=r*(u+.5);for(let p=0;p<i;p++)n.push([d,c])}}}return n}function JT(e,t,n,s,r){let a=$c(t),o=e.map(h=>[a[0]/r*(h[0]-r/2),a[1]/r*(h[1]-r/2),h[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?ZT(n,[0,0]):kb,c=i?o.map(h=>[...Oye(h,l),h[2]]):o,u=i?Fye(s):kb,d=A0(t),p=[Bl(d,u[0]),Bl(d,u[1])];return c.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2]||0)])}function QT(e,t,n,s){let r=t.landmarks.length>=yb.count?yb.symmetryLine:Hp.symmetryLine,a=0,o=kb,i;if(e&&he.kernels.includes("rotatewithoffset"))if(a=Pye(t.landmarks[r[0]],t.landmarks[r[1]]),a&&a!==0&&Math.abs(a)>.2){let c=A0(t),u=[c[0]/n.shape[2],c[1]/n.shape[1]],d=Ie.rotateWithOffset(n,a,0,u);o=ZT(-a,c),i=wb(t,d,[s,s]),te(d)}else i=wb(t,n,[s,s]);else i=wb(t,n,[s,s]);return[a,o,i]}var Mye=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]},e8=(e,t)=>{let n=Mye(e),s=$c(t);return{startPoint:[n[0]-s[0]/2,n[1]-s[1]/2],endPoint:[n[0]+s[0]/2,n[1]+s[1]/2]}};var t8=6,zye=1.2,js,n8=null,ei=0,qp=null,v0=()=>ei;async function s8(e){var t,n;return he.initial&&(js=null),js?e.debug&&J("cached model:",js.modelUrl):(js=await We(Ue(e.modelBasePath,((t=e.face.detector)==null?void 0:t.modelPath)||"")),!js||!js.modelUrl?J("load model failed:",(n=e.face.detector)==null?void 0:n.modelPath):e.debug&&J("load model:",js.modelUrl)),ei=js.inputs[0].shape?js.inputs[0].shape[2]:0,qp=Te(ei,"int32"),n8=Ar(YT(ei)),js}function Lye(e){let t={};t.boxStarts=Fe(e,[0,1],[-1,2]),t.centers=ue(t.boxStarts,n8),t.boxSizes=Fe(e,[0,3],[-1,2]),t.boxSizesNormalized=de(t.boxSizes,qp),t.centersNormalized=de(t.centers,qp),t.halfBoxSize=de(t.boxSizesNormalized,Ke.tf2),t.starts=pe(t.centersNormalized,t.halfBoxSize),t.ends=ue(t.centersNormalized,t.halfBoxSize),t.startNormalized=L(t.starts,qp),t.endNormalized=L(t.ends,qp);let n=Gu([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(s=>te(t[s])),n}async function r8(e,t){var i,l,c,u;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let n={};n.resized=Ie.resizeBilinear(e,[ei,ei]),n.div=de(n.resized,Ke.tf127),n.normalized=pe(n.div,Ke.tf05);let s=js==null?void 0:js.execute(n.normalized);if(Array.isArray(s)){let d=s.sort((p,h)=>p.size-h.size);n.concat384=St([d[0],d[2]],2),n.concat512=St([d[1],d[3]],2),n.concat=St([n.concat512,n.concat384],1),n.batch=Ye(n.concat,0)}else n.batch=Ye(s);te(s),n.boxes=Lye(n.batch),n.logits=Fe(n.batch,[0,0],[-1,1]),n.sigmoid=Pn(n.logits),n.scores=Ye(n.sigmoid),n.nms=await Ie.nonMaxSuppressionAsync(n.boxes,n.scores,((i=t.face.detector)==null?void 0:i.maxDetected)||0,((l=t.face.detector)==null?void 0:l.iouThreshold)||0,((c=t.face.detector)==null?void 0:c.minConfidence)||0);let r=await n.nms.array(),a=[],o=await n.scores.data();for(let d=0;d<r.length;d++){let p=o[r[d]];if(p>(((u=t.face.detector)==null?void 0:u.minConfidence)||0)){let h={};h.bbox=Fe(n.boxes,[r[d],0],[1,-1]),h.slice=Fe(n.batch,[r[d],t8-1],[1,-1]),h.squeeze=Ye(h.slice),h.landmarks=H(h.squeeze,[t8,-1]);let f=await h.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await h.landmarks.array(),confidence:p},g=jT(m,[(e.shape[2]||0)/ei,(e.shape[1]||0)/ei]),y=x0(g,t.face.scale||zye),x=b0(y);a.push(x),Object.keys(h).forEach(A=>te(h[A]))}}return Object.keys(n).forEach(d=>te(n[d])),a}var w0={};od(w0,{connected:()=>Cb,kpt:()=>Sb});var Sb=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],Cb={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]};var o8=224,Bye,Wye=5,k0=[8,16,32,32,32];async function i8(){let e=[],t=0;for(;t<Wye;){let n=0,s=t;for(;s<k0.length&&k0[s]===k0[t];)n+=2,s++;let r=k0[t],a=Math.ceil(o8/r),o=Math.ceil(o8/r);for(let i=0;i<a;++i)for(let l=0;l<o;++l)for(let c=0;c<n;++c)e.push({x:(l+.5)/o,y:(i+.5)/a});t=s}Bye={x:Tt(e.map(n=>n.x)),y:Tt(e.map(n=>n.y))}}function fa(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function l8(e,t=[1,1]){let n=[e.map(c=>c[0]),e.map(c=>c[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function I0(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var u8={initial:!0},hn={detector:null,landmarks:null},Fc={detector:[224,224],landmarks:[256,256]},Tb=Number.MAX_SAFE_INTEGER,Uye={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},C0=null,Xp,ti=[[0,0],[0,0],[0,0],[0,0]],c8=0,d8=e=>1-1/(1+Math.exp(e));async function p8(e){if(u8.initial&&(hn.detector=null),!hn.detector&&e.body.detector&&e.body.detector.modelPath){hn.detector=await We(Ue(e.modelBasePath,e.body.detector.modelPath||""));let t=Object.values(hn.detector.modelSignature.inputs);Fc.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Fc.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!hn.detector||!hn.detector.modelUrl?J("load model failed:",e.body.detector.modelPath):e.debug&&J("load model:",hn.detector.modelUrl)}else e.debug&&hn.detector&&J("cached model:",hn.detector.modelUrl);return await i8(),hn.detector}async function h8(e){if(u8.initial&&(hn.landmarks=null),hn.landmarks)e.debug&&J("cached model:",hn.landmarks.modelUrl);else{hn.landmarks=await We(Ue(e.modelBasePath,e.body.modelPath||""));let t=Object.values(hn.landmarks.modelSignature.inputs);Fc.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Fc.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!hn.landmarks||!hn.landmarks.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",hn.landmarks.modelUrl)}return hn.landmarks}async function Gye(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let s;if(Xp&&(n.cropped=Ie.cropAndResize(e,[Xp],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let r=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];ti=[[0,0],r,a,[0,0]],n.pad=er(n.cropped||e,ti),n.resize=Ie.resizeBilinear(n.pad,[t,t]),s=de(n.resize,Ke.tf255)}else e.shape[1]!==t?(n.resize=Ie.resizeBilinear(n.cropped||e,[t,t]),s=de(n.resize,Ke.tf255)):s=de(n.cropped||e,Ke.tf255);return Object.keys(n).forEach(r=>te(n[r])),s}function Hye(e,t){for(let n of e)n.position=[Math.trunc(n.position[0]*(t[0]+ti[2][0]+ti[2][1])/t[0]-ti[2][0]),Math.trunc(n.position[1]*(t[1]+ti[1][0]+ti[1][1])/t[1]-ti[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];if(Xp)for(let n of e)n.positionRaw=[n.positionRaw[0]+Xp[1],n.positionRaw[1]+Xp[0],n.positionRaw[2]],n.position=[Math.trunc(n.positionRaw[0]*t[0]),Math.trunc(n.positionRaw[1]*t[1]),n.positionRaw[2]];return e}async function jye(e){let t=e.find(i=>i.part==="leftPalm"),n=e.find(i=>i.part==="leftWrist"),s=e.find(i=>i.part==="leftIndex");t.position[2]=((n.position[2]||0)+(s.position[2]||0))/2;let r=e.find(i=>i.part==="rightPalm"),a=e.find(i=>i.part==="rightWrist"),o=e.find(i=>i.part==="rightIndex");r.position[2]=((a.position[2]||0)+(o.position[2]||0))/2}async function qye(e,t,n){var f;let s={};[s.ld,s.segmentation,s.heatmap,s.world,s.poseflag]=(f=hn.landmarks)==null?void 0:f.execute(e,Uye.landmarks);let r=(await s.poseflag.data())[0],a=await s.ld.data(),o=await s.world.data();Object.keys(s).forEach(m=>te(s[m]));let i=[],l=5;for(let m=0;m<a.length/l;m++){let g=d8(a[l*m+3]),y=d8(a[l*m+4]),x=Math.trunc(100*g*y*r)/100,A=[a[l*m+0]/Fc.landmarks[0],a[l*m+1]/Fc.landmarks[1],a[l*m+2]+0],b=[Math.trunc(n[0]*A[0]),Math.trunc(n[1]*A[1]),A[2]],v=[o[l*m+0],o[l*m+1],o[l*m+2]+0];i.push({part:Sb[m],positionRaw:A,position:b,distance:v,score:x})}if(r<(t.body.minConfidence||0))return null;jye(i);let c=Hye(i,n),u=c.map(m=>m.position),d=fa(u,[n[0],n[1]]),p={};for(let[m,g]of Object.entries(Cb)){let y=[];for(let x=0;x<g.length-1;x++){let A=c.find(v=>v.part===g[x]),b=c.find(v=>v.part===g[x+1]);A&&b&&y.push([A.position,b.position])}p[m]=y}return{id:0,score:Math.trunc(100*r)/100,box:d.box,boxRaw:d.boxRaw,keypoints:c,annotations:p}}async function Nb(e,t){let n=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>ie()-c8,r=Tb<(t.body.skipFrames||0);if(t.skipAllowed&&s&&r&&C0!==null)Tb++;else{let a={};a.landmarks=await Gye(e,256),C0=await qye(a.landmarks,t,n),Object.keys(a).forEach(o=>te(a[o])),c8=ie(),Tb=0}return C0?[C0]:[]}var Oc=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var ur,Wl=0,Eb=[],m8=0,Rb=Number.MAX_SAFE_INTEGER;async function g8(e){if(he.initial&&(ur=null),ur)e.debug&&J("cached model:",ur.modelUrl);else{ur=await We(Ue(e.modelBasePath,e.object.modelPath||""));let t=Object.values(ur.modelSignature.inputs);Wl=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!ur||!ur.modelUrl?J("load model failed:",e.object.modelPath):e.debug&&J("load model:",ur.modelUrl)}return ur}async function Xye(e,t,n){if(!e)return[];let s={},r=[],a=await e.array();s.squeeze=Ye(e);let o=Jt(s.squeeze,6,1);s.stack=on([o[1],o[0],o[3],o[2]],1),s.boxes=Ye(s.stack),s.scores=Ye(o[4]),s.classes=Ye(o[5]),te([e,...o]),s.nms=await Ie.nonMaxSuppressionAsync(s.boxes,s.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);let i=await s.nms.data(),l=0;for(let c of Array.from(i)){let u=Math.trunc(100*a[0][c][4])/100,d=a[0][c][5],p=Oc[d].label,[h,f]=[a[0][c][0]/Wl,a[0][c][1]/Wl],m=[h,f,a[0][c][2]/Wl-h,a[0][c][3]/Wl-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:l++,score:u,class:d,label:p,box:g,boxRaw:m})}return Object.keys(s).forEach(c=>te(s[c])),r}async function _b(e,t){let n=(t.object.skipTime||0)>ie()-m8,s=Rb<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&Eb.length>0?(Rb++,Eb):(Rb=0,new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Ie.resizeBilinear(e,[Wl,Wl]),i=t.object.enabled?ur==null?void 0:ur.execute(o,["tower_0/detections"]):null;m8=ie(),te(o);let l=await Xye(i,a,t);Eb=l,r(l)}))}var T0={};od(T0,{connected:()=>Pb,kpt:()=>Db});var Db=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],Pb={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var fn,A8=0,Jn={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},$b=Number.MAX_SAFE_INTEGER;async function x8(e){return he.initial&&(fn=null),fn?e.debug&&J("cached model:",fn.modelUrl):(fn=await We(Ue(e.modelBasePath,e.body.modelPath||"")),!fn||!fn.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",fn.modelUrl)),fn}async function Kye(e,t){let[n,s]=e.shape,r=H(e,[s*n]),a=xn(r,0),o=(await a.data())[0];if(te([r,a]),o>t){let i=Ms(r,0),l=Xu(i,n),c=(await l.data())[0],u=de(i,Te(n,"int32")),d=(await u.data())[0];return te([l,u]),[c,d,o]}return[0,0,o]}async function Fb(e,t){let n=(t.body.skipTime||0)>ie()-A8,s=$b<(t.body.skipFrames||0);return t.skipAllowed&&n&&s&&Object.keys(Jn.keypoints).length>0?($b++,[Jn]):($b=0,new Promise(async r=>{var d;let a=X(()=>{if(!(fn==null?void 0:fn.inputs[0].shape))return null;let p=Ie.resizeBilinear(e,[fn.inputs[0].shape[2],fn.inputs[0].shape[1]],!1),h=L(p,Ke.tf2);return pe(h,Ke.tf1)}),o;if(t.body.enabled&&(o=fn==null?void 0:fn.execute(a)),A8=ie(),te(a),o){Jn.keypoints.length=0;let p=o.squeeze();te(o);let h=p.unstack(2);te(p);for(let f=0;f<h.length;f++){let[m,g,y]=await Kye(h[f],t.body.minConfidence);y>(((d=t.body)==null?void 0:d.minConfidence)||0)&&Jn.keypoints.push({score:Math.round(100*y)/100,part:Db[f],positionRaw:[m/fn.inputs[0].shape[2],g/fn.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/fn.inputs[0].shape[2]),Math.round(e.shape[1]*g/fn.inputs[0].shape[1])]})}h.forEach(f=>te(f))}Jn.score=Jn.keypoints.reduce((p,h)=>h.score>p?h.score:p,0);let i=Jn.keypoints.map(p=>p.position[0]),l=Jn.keypoints.map(p=>p.position[1]);Jn.box=[Math.min(...i),Math.min(...l),Math.max(...i)-Math.min(...i),Math.max(...l)-Math.min(...l)];let c=Jn.keypoints.map(p=>p.positionRaw[0]),u=Jn.keypoints.map(p=>p.positionRaw[1]);Jn.boxRaw=[Math.min(...c),Math.min(...u),Math.max(...c)-Math.min(...c),Math.max(...u)-Math.min(...u)];for(let[p,h]of Object.entries(Pb)){let f=[];for(let m=0;m<h.length-1;m++){let g=Jn.keypoints.find(x=>x.part===h[m]),y=Jn.keypoints.find(x=>x.part===h[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}Jn.annotations[p]=f}r([Jn])}))}var Zye=["angry","disgust","fear","happy","sad","surprise","neutral"],Qn,N0=[],v8=0,w8=0,Ob=Number.MAX_SAFE_INTEGER;async function k8(e){var t,n;return he.initial&&(Qn=null),Qn?e.debug&&J("cached model:",Qn.modelUrl):(Qn=await We(Ue(e.modelBasePath,((t=e.face.emotion)==null?void 0:t.modelPath)||"")),!Qn||!Qn.modelUrl?J("load model failed:",(n=e.face.emotion)==null?void 0:n.modelPath):e.debug&&J("load model:",Qn.modelUrl)),Qn}async function Mb(e,t,n,s){var o,i;if(!Qn)return[];let r=Ob<(((o=t.face.emotion)==null?void 0:o.skipFrames)||0),a=(((i=t.face.emotion)==null?void 0:i.skipTime)||0)>ie()-w8;return t.skipAllowed&&a&&r&&v8===s&&N0[n]&&N0[n].length>0?(Ob++,N0[n]):(Ob=0,new Promise(async l=>{var u,d;let c=[];if((u=t.face.emotion)==null?void 0:u.enabled){let p={},h=(Qn==null?void 0:Qn.inputs[0].shape)?Qn.inputs[0].shape[2]:0;p.resize=Ie.resizeBilinear(e,[h,h],!1),p.channels=L(p.resize,Ke.rgb),p.grayscale=we(p.channels,3,!0),p.grayscaleSub=pe(p.grayscale,Ke.tf05),p.grayscaleMul=L(p.grayscaleSub,Ke.tf2),p.emotion=Qn==null?void 0:Qn.execute(p.grayscaleMul),w8=ie();let f=await p.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((d=t.face.emotion)==null?void 0:d.minConfidence)||0)&&c.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:Zye[m]});c.sort((m,g)=>g.score-m.score),Object.keys(p).forEach(m=>te(p[m]))}N0[n]=c,v8=s,l(c)}))}var Ts,zb=[],S8=0,C8=0,T8=Number.MAX_SAFE_INTEGER;async function N8(e){let t=Ue(e.modelBasePath,e.face.mobilefacenet.modelPath);return he.initial&&(Ts=null),Ts?e.debug&&J("cached model:",t):(Ts=await We(t),Ts?e.debug&&J("load model:",t):J("load model failed:",e.face.mobilefacenet.modelPath)),Ts}async function Lb(e,t,n,s){var o,i;if(!Ts)return[];let r=T8<(((o=t.face.embedding)==null?void 0:o.skipFrames)||0),a=(((i=t.face.embedding)==null?void 0:i.skipTime)||0)>ie()-C8;return t.skipAllowed&&a&&r&&S8===s&&zb[n]?(T8++,zb[n]):new Promise(async l=>{var u;let c=[];if(((u=t.face.embedding)==null?void 0:u.enabled)&&(Ts==null?void 0:Ts.inputs[0].shape)){let d={};d.crop=Ie.resizeBilinear(e,[Ts.inputs[0].shape[2],Ts.inputs[0].shape[1]],!1),d.data=Ts==null?void 0:Ts.execute(d.crop);let p=await d.data.data();c=Array.from(p)}zb[n]=c,S8=s,C8=ie(),l(c)})}var cr,ni=0,Yye=2.3,Bb=lr.leftEyeLower0,Wb=lr.rightEyeLower0,Mc={leftBounds:[Bb[0],Bb[Bb.length-1]],rightBounds:[Wb[0],Wb[Wb.length-1]]},zc={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function R8(e){var t,n;return he.initial&&(cr=null),cr?e.debug&&J("cached model:",cr.modelUrl):(cr=await We(Ue(e.modelBasePath,((t=e.face.iris)==null?void 0:t.modelPath)||"")),!cr||!cr.modelUrl?J("load model failed:",(n=e.face.iris)==null?void 0:n.modelPath):e.debug&&J("load model:",cr.modelUrl)),ni=cr.inputs[0].shape?cr.inputs[0].shape[2]:0,ni===-1&&(ni=64),cr}function E0(e,t,n,s){for(let r=0;r<Ab.length;r++){let{key:a,indices:o}=Ab[r],i=lr[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let c=o[l];e[i[l]]=[t[c][0],t[c][1],(t[c][2]+e[i[l]][2])/2]}}}var Jye=e=>{let t=e[Mc.leftBounds[0]][2],n=e[Mc.rightBounds[0]][2];return t-n},_8=(e,t,n,s,r,a=!1)=>{let o=b0(x0(qT([e[n],e[s]]),Yye)),i=$c(o),l=Ie.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[ni,ni]);if(a&&he.kernels.includes("flipleftright")){let c=Ie.flipLeftRight(l);te(l),l=c}return{box:o,boxSize:i,crop:l}},D8=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<zc.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/ni:o/ni)*n[0]+t.startPoint[0],i/ni*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(zc.index)}},P8=(e,t,n)=>{let s=e[lr[`${n}EyeUpper0`][zc.upperCenter]][2],r=e[lr[`${n}EyeLower0`][zc.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function $8(e,t,n,s){if(!cr)return n.debug&&J("face mesh iris detection requested, but model is not loaded"),e;let{box:r,boxSize:a,crop:o}=_8(e,t,Mc.leftBounds[0],Mc.leftBounds[1],s,!0),{box:i,boxSize:l,crop:c}=_8(e,t,Mc.rightBounds[0],Mc.rightBounds[1],s,!0),u=St([o,c]);te(o),te(c);let d=cr.execute(u);te(u);let p=await d.data();te(d);let h=p.slice(0,zc.numCoordinates*3),{rawCoords:f,iris:m}=D8(h,r,a,!0),g=p.slice(zc.numCoordinates*3),{rawCoords:y,iris:x}=D8(g,i,l),A=Jye(e);Math.abs(A)<30?(E0(e,f,"left",null),E0(e,y,"right",null)):A<1?E0(e,f,"left",["EyeUpper0","EyeLower0"]):E0(e,y,"right",["EyeUpper0","EyeLower0"]);let b=P8(e,m,"left"),v=P8(e,x,"right");return e.concat(b).concat(v)}var Hr={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},dr=null,Lc=0;async function O8(e,t){var i,l,c,u,d,p,h,f,m;let n=(((i=t.face.detector)==null?void 0:i.skipTime)||0)>ie()-Hr.timestamp,s=Hr.skipped<(((l=t.face.detector)==null?void 0:l.skipFrames)||0);!t.skipAllowed||!n||!s||Hr.boxes.length===0?(Hr.boxes=await r8(e,t),Hr.timestamp=ie(),Hr.skipped=0):Hr.skipped++;let r=[],a=[],o=0;for(let g=0;g<Hr.boxes.length;g++){let y=Hr.boxes[g],x=0,A,b={id:o++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([x,A,b.tensor]=QT((c=t.face.detector)==null?void 0:c.rotation,y,e,((u=t.face.mesh)==null?void 0:u.enabled)?Lc:v0()),(d=t==null?void 0:t.filter)==null?void 0:d.equalization){let v=await h0(b.tensor);te(b.tensor),b.tensor=v}if(b.boxScore=Math.round(100*y.confidence)/100,(p=t.face.mesh)==null?void 0:p.enabled)if(!dr)t.debug&&J("face mesh detection requested, but model is not loaded");else{let[v,C,I]=dr.execute(b.tensor),E=await C.data();b.faceScore=Math.round(100*E[0])/100;let R=H(I,[-1,3]),F=await R.array();if(te([I,R,C,v]),b.faceScore<(((h=t.face.detector)==null?void 0:h.minConfidence)||1))y.confidence=b.faceScore;else{((f=t.face.iris)==null?void 0:f.enabled)&&(F=await $8(F,b.tensor,t,Lc)),b.mesh=JT(F,y,x,A,Lc),b.meshRaw=b.mesh.map(P=>[P[0]/(e.shape[2]||0),P[1]/(e.shape[1]||0),(P[2]||0)/Lc]);for(let P of Object.keys(lr))b.annotations[P]=lr[P].map(T=>b.mesh[T]);b.score=b.faceScore;let _={...e8(b.mesh,y),confidence:y.confidence,landmarks:y.landmarks};b.box=bb(_,e),b.boxRaw=vb(_,e),a.push(_)}}else{b.box=bb(y,e),b.boxRaw=vb(y,e),b.score=b.boxScore,b.mesh=y.landmarks.map(v=>[(y.startPoint[0]+y.endPoint[0])/2+(y.endPoint[0]+y.startPoint[0])*v[0]/v0(),(y.startPoint[1]+y.endPoint[1])/2+(y.endPoint[1]+y.startPoint[1])*v[1]/v0()]),b.meshRaw=b.mesh.map(v=>[v[0]/(e.shape[2]||0),v[1]/(e.shape[1]||0),(v[2]||0)/Lc]);for(let v of Object.keys(Hp))b.annotations[v]=[b.mesh[Hp[v]]]}b.score>(((m=t.face.detector)==null?void 0:m.minConfidence)||1)?r.push(b):te(b.tensor)}return Hr.boxes=a,r}async function M8(e){var t,n;return he.initial&&(dr=null),dr?e.debug&&J("cached model:",dr.modelUrl):(dr=await We(Ue(e.modelBasePath,((t=e.face.mesh)==null?void 0:t.modelPath)||"")),!dr||!dr.modelUrl?J("load model failed:",(n=e.face.mesh)==null?void 0:n.modelPath):e.debug&&J("load model:",dr.modelUrl)),Lc=dr.inputs[0].shape?dr.inputs[0].shape[2]:0,dr}var z8=Ll,L8=jp;var Ns,R0=[],B8=0,W8=0,Ub=Number.MAX_SAFE_INTEGER;async function V8(e){var n,s;let t=Ue(e.modelBasePath,((n=e.face.description)==null?void 0:n.modelPath)||"");return he.initial&&(Ns=null),Ns?e.debug&&J("cached model:",t):(Ns=await We(t),Ns?e.debug&&J("load model:",t):J("load model failed:",((s=e.face.description)==null?void 0:s.modelPath)||"")),Ns}function Gb(e){let t=e.image||e.tensor||e;if(!(Ns==null?void 0:Ns.inputs[0].shape))return t;let n=Ie.resizeBilinear(t,[Ns.inputs[0].shape[2],Ns.inputs[0].shape[1]],!1),s=L(n,Ke.tf255);return te(n),s}async function Hb(e,t,n,s){var o,i,l,c;if(!Ns)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let r=Ub<(((o=t.face.description)==null?void 0:o.skipFrames)||0),a=(((i=t.face.description)==null?void 0:i.skipTime)||0)>ie()-B8;return t.skipAllowed&&r&&a&&W8===s&&((l=R0[n])==null?void 0:l.age)&&((c=R0[n])==null?void 0:c.age)>0?(Ub++,R0[n]):(Ub=0,new Promise(async u=>{var p,h;let d={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((p=t.face.description)==null?void 0:p.enabled){let f=Gb(e),m=Ns==null?void 0:Ns.execute(f);B8=ie(),te(f);let y=await(await m.find(R=>R.shape[1]===1)).data(),x=Math.trunc(200*Math.abs(y[0]-.5))/100;x>(((h=t.face.description)==null?void 0:h.minConfidence)||0)&&(d.gender=y[0]<=.5?"female":"male",d.genderScore=Math.min(.99,x));let A=Ms(m.find(R=>R.shape[1]===100),1),b=(await A.data())[0];te(A);let C=await m.find(R=>R.shape[1]===100).data();d.age=Math.round(C[b-1]>C[b+1]?10*b-100*C[b-1]:10*b+100*C[b+1])/10;let I=m.find(R=>R.shape[1]===1024),E=I?await I.data():[];d.descriptor=Array.from(E),m.forEach(R=>te(R))}R0[n]=d,W8=s,u(d)}))}function _0(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Kp(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function U8(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return Ie.cropAndResize(t,a,[0],n)}function G8(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function D0(e,t=1.5){let n=Kp(e),s=_0(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function P0(e){let t=Kp(e),n=_0(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function Qye(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function H8(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return Qye(n)}var j8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function si(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function e1e(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function q8(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(si(e[r],e1e(t,a)))}return n}function qb(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=j8(t[0],t[1]),o=q8(a,r),i=j8(-t[0],-t[1]);return q8(o,i)}function X8(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-si(t[0],n),-si(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function Xb(e,t){return[si(e,t[0]),si(e,t[1])]}var Z8=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var Kb=class{constructor(t){fe(this,"model");fe(this,"anchors");fe(this,"anchorsTensor");fe(this,"inputSize");fe(this,"inputSizeTensor");fe(this,"doubleInputSizeTensor");this.model=t,this.anchors=Z8.map(n=>[n.x,n.y]),this.anchorsTensor=Ar(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Tt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Tt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){let n={};n.boxOffsets=Fe(t,[0,0],[-1,2]),n.boxSizes=Fe(t,[0,2],[-1,2]),n.div=de(n.boxOffsets,this.inputSizeTensor),n.boxCenterPoints=ue(n.div,this.anchorsTensor),n.halfBoxSizes=de(n.boxSizes,this.doubleInputSizeTensor),n.sub=pe(n.boxCenterPoints,n.halfBoxSizes),n.startPoints=L(n.sub,this.inputSizeTensor),n.add=ue(n.boxCenterPoints,n.halfBoxSizes),n.endPoints=L(n.add,this.inputSizeTensor);let s=Gu([n.startPoints,n.endPoints],1);return Object.keys(n).forEach(r=>te(n[r])),s}normalizeLandmarks(t,n){let s={};s.reshape=H(t,[-1,7,2]),s.div=de(s.reshape,this.inputSizeTensor),s.landmarks=ue(s.div,this.anchors[n]);let r=L(s.landmarks,this.inputSizeTensor);return Object.keys(s).forEach(a=>te(s[a])),r}async predict(t,n){let s={};s.resize=Ie.resizeBilinear(t,[this.inputSize,this.inputSize]),s.div=de(s.resize,Ke.tf127),s.image=pe(s.div,Ke.tf1),s.batched=this.model.execute(s.image),s.predictions=Ye(s.batched),s.slice=Fe(s.predictions,[0,0],[-1,1]),s.sigmoid=Pn(s.slice),s.scores=Ye(s.sigmoid);let r=await s.scores.data();s.boxes=Fe(s.predictions,[0,1],[-1,4]),s.norm=this.normalizeBoxes(s.boxes),s.nms=await Ie.nonMaxSuppressionAsync(s.norm,s.scores,3*n.hand.maxDetected,n.hand.iouThreshold,n.hand.minConfidence);let a=await s.nms.array(),o=[];for(let i of a){let l={};l.box=Fe(s.norm,[i,0],[1,-1]),l.slice=Fe(s.predictions,[i,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,i),l.palmLandmarks=H(l.norm,[-1,2]);let c=await l.box.data(),u=c.slice(0,2),d=c.slice(2,4),p=await l.palmLandmarks.array(),h={startPoint:u,endPoint:d,palmLandmarks:p,confidence:r[i]},f=G8(h,[t.shape[2]/this.inputSize,t.shape[1]/this.inputSize]);o.push(f),Object.keys(l).forEach(m=>te(l[m]))}return Object.keys(s).forEach(i=>te(s[i])),o}};var s1e=5,Y8=1.65,J8=[0,5,9,13,17,1,2],r1e=0,a1e=2,Q8=0,Zb=class{constructor(t,n){fe(this,"handDetector");fe(this,"handPoseModel");fe(this,"inputSize");fe(this,"storedBoxes");fe(this,"skipped");fe(this,"detectedHands");this.handDetector=t,this.handPoseModel=n,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(t){let n=t.map(o=>o[0]),s=t.map(o=>o[1]),r=[Math.min(...n),Math.min(...s)],a=[Math.max(...n),Math.max(...s)];return{startPoint:r,endPoint:a}}getBoxForPalmLandmarks(t,n){let s=t.map(a=>Xb([...a,1],n)),r=this.calculateLandmarksBoundingBox(s);return D0(P0(r),s1e)}getBoxForHandLandmarks(t){let n=this.calculateLandmarksBoundingBox(t),s=D0(P0(n),Y8);s.palmLandmarks=[];for(let r=0;r<J8.length;r++)s.palmLandmarks.push(t[J8[r]].slice(0,2));return s}transformRawCoords(t,n,s,r){let a=_0(n),o=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=t.map(h=>[o[0]*(h[0]-this.inputSize/2),o[1]*(h[1]-this.inputSize/2),o[2]*h[2]]),l=qb(s,[0,0]),c=i.map(h=>[...Xb(h,l),h[2]]),u=X8(r),d=[...Kp(n),1],p=[si(d,u[0]),si(d,u[1])];return c.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2])])}async estimateHands(t,n){let s=!1,r,a=(n.hand.skipTime||0)>ie()-Q8,o=this.skipped<(n.hand.skipFrames||0);n.skipAllowed&&a&&o&&(r=await this.handDetector.predict(t,n),this.skipped=0),n.skipAllowed&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==n.hand.maxDetected||!n.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(s=!0));let i=[];for(let l=0;l<this.storedBoxes.length;l++){let c=this.storedBoxes[l];if(!!c)if(n.hand.landmarks){let u=n.hand.rotation?H8(c.palmLandmarks[r1e],c.palmLandmarks[a1e]):0,d=Kp(c),p=[d[0]/t.shape[2],d[1]/t.shape[1]],h=n.hand.rotation&&he.kernels.includes("rotatewithoffset")?Ie.rotateWithOffset(t,u,0,p):t.clone(),f=qb(-u,d),m=s?this.getBoxForPalmLandmarks(c.palmLandmarks,f):c,g=U8(m,h,[this.inputSize,this.inputSize]),y=de(g,Ke.tf255);te(g),te(h);let[x,A]=this.handPoseModel.execute(y);Q8=ie(),te(y);let b=(await x.data())[0];if(te(x),b>=n.hand.minConfidence/4){let v=H(A,[-1,3]),C=await v.array();te(A),te(v);let I=this.transformRawCoords(C,m,u,f),E=this.getBoxForHandLandmarks(I);this.storedBoxes[l]={...E,confidence:b};let R={landmarks:I,confidence:b,boxConfidence:c.confidence,fingerConfidence:b,box:{topLeft:E.startPoint,bottomRight:E.endPoint}};i.push(R)}else this.storedBoxes[l]=null;te(A)}else{let u=D0(P0(c),Y8),d={confidence:c.confidence,boxConfidence:c.confidence,fingerConfidence:0,box:{topLeft:u.startPoint,bottomRight:u.endPoint},landmarks:[]};i.push(d)}}return this.storedBoxes=this.storedBoxes.filter(l=>l!==null),this.detectedHands=i.length,i.length>n.hand.maxDetected&&(i.length=n.hand.maxDetected),i}};var es={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>es.nameMapping[e],getPoints:e=>es.pointsMapping[e]},ri={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>ri.nameMapping[e]},Wt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Wt.nameMapping[e]},Vl=class{constructor(t){fe(this,"name");fe(this,"curls");fe(this,"directions");fe(this,"weights");fe(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(t,n,s){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([n,s])}direction(t,n,s){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([n,s])}weight(t,n){this.weights[t]=n;let s=this.weights.reduce((r,a)=>r+a,0);this.weightsRelative=this.weights.map(r=>r*5/s)}matchAgainst(t,n){let s=0;for(let r in t){let a=t[r],o=this.curls[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}for(let r in n){let a=n[r],o=this.directions[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}return s/10}};var{thumb:Er,index:ma,middle:ga,ring:Ul,pinky:Gl}=es,{none:Rr,half:i1e,full:_r}=ri,{verticalUp:Bc,verticalDown:QAe,horizontalLeft:Yb,horizontalRight:l1e,diagonalUpRight:u1e,diagonalUpLeft:Wc,diagonalDownRight:exe,diagonalDownLeft:txe}=Wt,ai=new Vl("thumbs up");ai.curl(Er,Rr,1);ai.direction(Er,Bc,1);ai.direction(Er,Wc,.25);ai.direction(Er,u1e,.25);for(let e of[es.index,es.middle,es.ring,es.pinky])ai.curl(e,_r,1),ai.direction(e,Yb,1),ai.direction(e,l1e,1);var tn=new Vl("victory");tn.curl(Er,i1e,.5);tn.curl(Er,Rr,.5);tn.direction(Er,Bc,1);tn.direction(Er,Wc,1);tn.curl(ma,Rr,1);tn.direction(ma,Bc,.75);tn.direction(ma,Wc,1);tn.curl(ga,Rr,1);tn.direction(ga,Bc,1);tn.direction(ga,Wc,.75);tn.curl(Ul,_r,1);tn.direction(Ul,Bc,.2);tn.direction(Ul,Wc,1);tn.direction(Ul,Yb,.2);tn.curl(Gl,_r,1);tn.direction(Gl,Bc,.2);tn.direction(Gl,Wc,1);tn.direction(Gl,Yb,.2);tn.weight(ma,2);tn.weight(ga,2);var oi=new Vl("point");oi.curl(Er,_r,1);oi.curl(ma,Rr,.5);oi.curl(ga,_r,.5);oi.curl(Ul,_r,.5);oi.curl(Gl,_r,.5);oi.weight(ma,2);oi.weight(ga,2);var ii=new Vl("middle finger");ii.curl(Er,Rr,1);ii.curl(ma,_r,.5);ii.curl(ga,_r,.5);ii.curl(Ul,_r,.5);ii.curl(Gl,_r,.5);ii.weight(ma,2);ii.weight(ga,2);var Vc=new Vl("open palm");Vc.curl(Er,Rr,.75);Vc.curl(ma,Rr,.75);Vc.curl(ga,Rr,.75);Vc.curl(Ul,Rr,.75);Vc.curl(Gl,Rr,.75);var eN=[ai,tn,oi,ii,Vc];var c1e=.7,Hl={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function tN(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function nN(e,t){if(!e||!t)return[0,0];let n=tN(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=tN(e[1],e[2],t[1],t[2]);return[n,s]}function sN(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function d1e(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],c=e[2]-t[2],u=e[2]-n[2],d=t[2]-n[2],p=Math.sqrt(s*s+o*o+c*c),h=Math.sqrt(r*r+i*i+u*u),f=Math.sqrt(a*a+l*l+d*d),m=(f*f+p*p-h*h)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>Hl.NO_CURL_START_LIMIT?y=ri.none:g>Hl.HALF_CURL_START_LIMIT?y=ri.half:y=ri.full,y}function rN(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=Wt.horizontalLeft:r=Wt.horizontalRight:s===Math.abs(t)?t>0?r=Wt.horizontalLeft:r=Wt.horizontalRight:n>0?r=Wt.horizontalLeft:r=Wt.horizontalRight,r}function aN(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=Wt.verticalDown:r=Wt.verticalUp:s===Math.abs(t)?t<0?r=Wt.verticalDown:r=Wt.verticalUp:n<0?r=Wt.verticalDown:r=Wt.verticalUp,r}function p1e(e,t,n,s,r,a,o,i){let l,c=aN(e,t,n,s),u=rN(r,a,o,i);return c===Wt.verticalUp?u===Wt.horizontalLeft?l=Wt.diagonalUpLeft:l=Wt.diagonalUpRight:u===Wt.horizontalLeft?l=Wt.diagonalDownLeft:l=Wt.diagonalDownRight,l}function h1e(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],c=t[1]-n[1],u=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),d=Math.max(Math.abs(i),Math.abs(l),Math.abs(c)),p=0,h=0,f=0,m=d/(u+1e-5);m>1.5?p+=Hl.DISTANCE_VOTE_POWER:m>.66?h+=Hl.DISTANCE_VOTE_POWER:f+=Hl.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),y=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+c*c),A=Math.max(g,y,x),b=e[0],v=e[1],C=n[0],I=n[1];A===g?(C=n[0],I=n[1]):A===x&&(b=t[0],v=t[1]);let F=nN([b,v],[C,I]),_=sN(F,Hl.TOTAL_ANGLE_VOTE_POWER);p+=_[0],h+=_[1],f+=_[2];for(let T of s){let O=sN(T,Hl.SINGLE_ANGLE_VOTE_POWER);p+=O[0],h+=O[1],f+=O[2]}let P;return p===Math.max(p,h,f)?P=aN(l,i,c,d):f===Math.max(h,f)?P=rN(a,r,o,u):P=p1e(l,i,c,d,a,r,o,u),P}function oN(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of es.all){let o=es.getPoints(a),i=[],l=[];for(let c of o){let u=e[c[0]],d=e[c[1]],p=nN(u,d),h=p[0],f=p[1];i.push(h),l.push(f)}t.push(i),n.push(l)}for(let a of es.all){let o=a===es.thumb?1:0,i=es.getPoints(a),l=e[i[o][0]],c=e[i[o+1][1]],u=e[i[3][1]],d=d1e(l,c,u),p=h1e(l,c,u,t[a].slice(o));s[a]=d,r[a]=p}return{curls:s,directions:r}}function $0(e){if(!e||e.length===0)return null;let t=oN(e),n={};for(let s of es.all)n[es.getName(s)]={curl:ri.getName(t.curls[s]),direction:Wt.getName(t.directions[s])};return n}function iN(e){let t=[];if(!e||e.length===0)return t;let n=oN(e);for(let s of eN){let r=s.matchAgainst(n.curls,n.directions);r>=c1e&&t.push({name:s.name,confidence:r})}return t}var lN={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},ya,Aa,uN;async function Qb(e,t){let n=await uN.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let u of Object.keys(lN))a[u]=lN[u].map(d=>n[r].landmarks[d]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let u of o)u[0]<i[0]&&(i[0]=u[0]),u[1]<i[1]&&(i[1]=u[1]),u[0]>i[2]&&(i[2]=u[0]),u[1]>i[3]&&(i[3]=u[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let c=$0(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:c})}return s}async function e5(e){var n,s,r,a,o,i;he.initial&&(ya=null,Aa=null),!ya||!Aa?([ya,Aa]=await Promise.all([e.hand.enabled?We(Ue(e.modelBasePath,((n=e.hand.detector)==null?void 0:n.modelPath)||""),{fromTFHub:(((s=e.hand.detector)==null?void 0:s.modelPath)||"").includes("tfhub.dev")}):null,e.hand.landmarks?We(Ue(e.modelBasePath,((r=e.hand.skeleton)==null?void 0:r.modelPath)||""),{fromTFHub:(((a=e.hand.skeleton)==null?void 0:a.modelPath)||"").includes("tfhub.dev")}):null]),e.hand.enabled&&(!ya||!ya.modelUrl?J("load model failed:",((o=e.hand.detector)==null?void 0:o.modelPath)||""):e.debug&&J("load model:",ya.modelUrl),!Aa||!Aa.modelUrl?J("load model failed:",((i=e.hand.skeleton)==null?void 0:i.modelPath)||""):e.debug&&J("load model:",Aa.modelUrl))):(e.debug&&J("cached model:",ya.modelUrl),e.debug&&J("cached model:",Aa.modelUrl));let t=new Kb(ya);return uN=new Zb(t,Aa),[ya,Aa]}var Rt=[null,null],f1e=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],li=[[0,0],[0,0]],m1e=["hand","fist","pinch","point","face","tip","pinchtip"],dN=4,pN=1.6,g1e=512,y1e=1.4,F0=Number.MAX_SAFE_INTEGER,t5=0,xa=[0,0],Kt={boxes:[],hands:[]},hN={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function fN(e){var t,n;if(he.initial&&(Rt[0]=null),Rt[0])e.debug&&J("cached model:",Rt[0].modelUrl);else{O0(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Rt[0]=await We(Ue(e.modelBasePath,((t=e.hand.detector)==null?void 0:t.modelPath)||""));let s=Object.values(Rt[0].modelSignature.inputs);li[0][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,li[0][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Rt[0]||!Rt[0].modelUrl?J("load model failed:",(n=e.hand.detector)==null?void 0:n.modelPath):e.debug&&J("load model:",Rt[0].modelUrl)}return Rt[0]}async function mN(e){var t,n;if(he.initial&&(Rt[1]=null),Rt[1])e.debug&&J("cached model:",Rt[1].modelUrl);else{Rt[1]=await We(Ue(e.modelBasePath,((t=e.hand.skeleton)==null?void 0:t.modelPath)||""));let s=Object.values(Rt[1].modelSignature.inputs);li[1][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,li[1][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Rt[1]||!Rt[1].modelUrl?J("load model failed:",(n=e.hand.skeleton)==null?void 0:n.modelPath):e.debug&&J("load model:",Rt[1].modelUrl)}return Rt[1]}async function A1e(e,t){let n=[];if(!e||!Rt[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,g1e),o=Math.round(a*r/8)*8;s.resize=Ie.resizeBilinear(e,[a,o]),s.cast=ge(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await Rt[0].executeAsync(s.cast,f1e),s.boxes=Ye(s.rawBoxes,[0,2]),s.scores=Ye(s.rawScores,[0]);let i=is(s.scores,1);te(i[dN]),i.splice(dN,1),s.filtered=on(i,1),te(i),s.max=xn(s.filtered,1),s.argmax=Ms(s.filtered,1);let l=0;s.nms=await Ie.nonMaxSuppressionAsync(s.boxes,s.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let c=await s.nms.data(),u=await s.max.data(),d=await s.argmax.data();for(let p of Array.from(c)){let h=Fe(s.boxes,p,1),f=await h.data();te(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=I0(m,y1e),y=[Math.trunc(m[0]*xa[0]),Math.trunc(m[1]*xa[1]),Math.trunc(m[2]*xa[0]),Math.trunc(m[3]*xa[1])],x=u[p],A=m1e[d[p]],b={id:l++,score:x,box:y,boxRaw:g,label:A};n.push(b)}return Object.keys(s).forEach(p=>te(s[p])),n.sort((p,h)=>h.score-p.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function n5(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Rt[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={},a=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=Ie.cropAndResize(e,[a],[0],[li[1][0],li[1][1]],"bilinear"),r.div=de(r.crop,Ke.tf255),[r.score,r.keypoints]=Rt[1].execute(r.div,["Identity_1","Identity"]);let o=(await r.score.data())[0],i=(100-Math.trunc(100/(1+Math.exp(o))))/100;if(i>=(n.hand.minConfidence||0)){s.fingerScore=i,r.reshaped=H(r.keypoints,[-1,3]);let u=(await r.reshaped.array()).map(d=>[d[0]/li[1][1],d[1]/li[1][0],d[2]||0]).map(d=>[d[0]*t.boxRaw[2],d[1]*t.boxRaw[3],d[2]||0]);s.keypoints=u.map(d=>[xa[0]*(d[0]+t.boxRaw[0]),xa[1]*(d[1]+t.boxRaw[1]),d[2]||0]),s.landmarks=$0(s.keypoints);for(let d of Object.keys(hN))s.annotations[d]=hN[d].map(p=>s.landmarks&&s.keypoints[p]?s.keypoints[p]:null)}Object.keys(r).forEach(l=>te(r[l]))}return s}async function s5(e,t){var r,a;if(!Rt[0]||!Rt[1]||!((r=Rt[0])==null?void 0:r.inputs[0].shape)||!((a=Rt[1])==null?void 0:a.inputs[0].shape))return[];xa=[e.shape[2]||0,e.shape[1]||0],F0++;let n=(t.hand.skipTime||0)>ie()-t5,s=F0<(t.hand.skipFrames||0);return t.skipAllowed&&n&&s?Kt.hands:new Promise(async o=>{let i=3*(t.hand.skipTime||0)>ie()-t5,l=F0<3*(t.hand.skipFrames||0);t.skipAllowed&&Kt.hands.length===t.hand.maxDetected?Kt.hands=await Promise.all(Kt.boxes.map(u=>n5(e,u,t))):t.skipAllowed&&i&&l&&Kt.hands.length>0?Kt.hands=await Promise.all(Kt.boxes.map(u=>n5(e,u,t))):(Kt.boxes=await A1e(e,t),t5=ie(),Kt.hands=await Promise.all(Kt.boxes.map(u=>n5(e,u,t))),F0=0);let c=[...Kt.boxes];if(Kt.boxes.length=0,t.cacheSensitivity>0)for(let u=0;u<Kt.hands.length;u++){let d=l8(Kt.hands[u].keypoints,xa);if(d.box[2]/(e.shape[2]||1)>.05&&d.box[3]/(e.shape[1]||1)>.05&&Kt.hands[u].fingerScore&&Kt.hands[u].fingerScore>(t.hand.minConfidence||0)){let p=I0(d.box,pN),h=I0(d.boxRaw,pN);Kt.boxes.push({...c[u],box:p,boxRaw:h})}}for(let u=0;u<Kt.hands.length;u++){let d=fa(Kt.hands[u].keypoints,xa);Kt.hands[u].box=d.box,Kt.hands[u].boxRaw=d.boxRaw}o(Kt.hands)})}var mn,M0=[],r5=Number.MAX_SAFE_INTEGER,yN=0,AN=0;async function xN(e){var t,n;return he.initial&&(mn=null),mn?e.debug&&J("cached model:",mn.modelUrl):(mn=await We(Ue(e.modelBasePath,((t=e.face.liveness)==null?void 0:t.modelPath)||"")),!mn||!mn.modelUrl?J("load model failed:",(n=e.face.liveness)==null?void 0:n.modelPath):e.debug&&J("load model:",mn.modelUrl)),mn}async function a5(e,t,n,s){var o,i;if(!mn)return 0;let r=(((o=t.face.liveness)==null?void 0:o.skipTime)||0)>ie()-AN,a=r5<(((i=t.face.liveness)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&yN===s&&M0[n]?(r5++,M0[n]):(r5=0,new Promise(async l=>{let c=Ie.resizeBilinear(e,[(mn==null?void 0:mn.inputs[0].shape)?mn.inputs[0].shape[2]:0,(mn==null?void 0:mn.inputs[0].shape)?mn.inputs[0].shape[1]:0],!1),u=mn==null?void 0:mn.execute(c),d=(await u.data())[0];M0[n]=Math.round(100*d)/100,yN=s,AN=ie(),te([c,u]),l(M0[n])}))}var Zp={};od(Zp,{connected:()=>L0,horizontal:()=>o5,kpt:()=>z0,relative:()=>l5,vertical:()=>i5});var z0=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],o5=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],i5=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],l5=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],L0={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var vN=.005,Es={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function u5(e){for(let t of o5){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of i5){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of l5){let s=e.keypoints.findIndex(c=>c&&c.part===t[0]),r=e.keypoints.findIndex(c=>c&&c.part===t[1]),a=e.keypoints.findIndex(c=>c&&c.part===n[0]),o=e.keypoints.findIndex(c=>c&&c.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let c=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=c}}}function wN(e){for(let t=0;t<e.length;t++)if(e[t]&&Es.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-Es.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Es.keypoints[t].positionRaw[1])];n[0]<vN&&n[1]<vN?e[t]=Es.keypoints[t]:Es.keypoints[t]=e[t]}else Es.keypoints[t]=e[t];return e}function kN(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Es.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=er(e,Es.padding),n.resize=Ie.resizeBilinear(n.pad,[t,t]);let s=ge(n.resize,"int32");return Object.keys(n).forEach(r=>te(n[r])),s}function IN(e,t){e.keypoints=e.keypoints.filter(s=>s&&s.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+Es.padding[2][0]+Es.padding[2][1])/t[0]-Es.padding[2][0],s.position[1]*(t[1]+Es.padding[1][0]+Es.padding[1][1])/t[1]-Es.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=fa(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Mn,B0=0,c5=Number.MAX_SAFE_INTEGER,jl={boxes:[],bodies:[],last:0};async function SN(e){return he.initial&&(Mn=null),Mn?e.debug&&J("cached model:",Mn.modelUrl):(O0(["size"],e),Mn=await We(Ue(e.modelBasePath,e.body.modelPath||"")),!Mn||!Mn.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",Mn.modelUrl)),B0=Mn.inputs[0].shape?Mn.inputs[0].shape[2]:0,B0<64&&(B0=256),Mn}async function b1e(e,t,n){let s=e[0][0],r=[],a=0;for(let u=0;u<s.length;u++)if(a=s[u][2],a>t.body.minConfidence){let d=[s[u][1],s[u][0]];r.push({score:Math.round(100*a)/100,part:z0[u],positionRaw:d,position:[Math.round((n.shape[2]||0)*d[0]),Math.round((n.shape[1]||0)*d[1])]})}a=r.reduce((u,d)=>d.score>u?d.score:u,0);let o=[],i=fa(r.map(u=>u.position),[n.shape[2],n.shape[1]]),l={};for(let[u,d]of Object.entries(L0)){let p=[];for(let h=0;h<d.length-1;h++){let f=r.find(g=>g.part===d[h]),m=r.find(g=>g.part===d[h+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&p.push([f.position,m.position])}l[u]=p}let c={id:0,score:a,box:i.box,boxRaw:i.boxRaw,keypoints:r,annotations:l};return u5(c),o.push(c),o}async function v1e(e,t,n){let s=[];for(let r=0;r<e[0].length;r++){let a=e[0][r],o=Math.round(100*a[51+4])/100;if(o>t.body.minConfidence){let i=[];for(let d=0;d<17;d++){let p=a[3*d+2];if(p>t.body.minConfidence){let h=[a[3*d+1],a[3*d+0]];i.push({part:z0[d],score:Math.round(100*p)/100,positionRaw:h,position:[Math.round((n.shape[2]||0)*h[0]),Math.round((n.shape[1]||0)*h[1])]})}}let l=fa(i.map(d=>d.position),[n.shape[2],n.shape[1]]),c={};for(let[d,p]of Object.entries(L0)){let h=[];for(let f=0;f<p.length-1;f++){let m=i.find(y=>y.part===p[f]),g=i.find(y=>y.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}c[d]=h}let u={id:r,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:[...i],annotations:c};u5(u),s.push(u)}}return s.sort((r,a)=>a.score-r.score),s.length>t.body.maxDetected&&(s.length=t.body.maxDetected),s}async function d5(e,t){if(!Mn||!(Mn==null?void 0:Mn.inputs[0].shape))return[];t.skipAllowed||(jl.boxes.length=0),c5++;let n=(t.body.skipTime||0)>ie()-jl.last,s=c5<(t.body.skipFrames||0);return t.skipAllowed&&n&&s?jl.bodies:new Promise(async r=>{let a={};c5=0,a.input=kN(e,B0),a.res=Mn==null?void 0:Mn.execute(a.input),jl.last=ie();let o=await a.res.array();jl.bodies=a.res.shape[2]===17?await b1e(o,t,e):await v1e(o,t,e);for(let i of jl.bodies)IN(i,[e.shape[2]||1,e.shape[1]||1]),wN(i.keypoints);Object.keys(a).forEach(i=>te(a[i])),r(jl.bodies)})}var ba,W0=[],TN=0,p5=Number.MAX_SAFE_INTEGER,V0=0,U0=2.5;async function NN(e){if(!ba||he.initial){ba=await We(Ue(e.modelBasePath,e.object.modelPath||""));let t=Object.values(ba.modelSignature.inputs);V0=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!ba||!ba.modelUrl?J("load model failed:",e.object.modelPath):e.debug&&J("load model:",ba.modelUrl)}else e.debug&&J("cached model:",ba.modelUrl);return ba}async function w1e(e,t,n){let s=0,r=[];for(let l of[1,2,4])X(async()=>{let c=l*13,u=Ye(e.find(m=>m.shape[1]===c**2&&(m.shape[2]||0)===Oc.length)),d=Ye(e.find(m=>m.shape[1]===c**2&&(m.shape[2]||0)<Oc.length)),h=await d.reshape([-1,4,d.shape[1]/4]).argMax(2).array(),f=await u.array();for(let m=0;m<u.shape[0];m++)for(let g=0;g<u.shape[1];g++){let y=f[m][g];if(y>(n.object.minConfidence||0)&&g!==61){let x=(.5+Math.trunc(m%c))/c,A=(.5+Math.trunc(m/c))/c,b=h[m].map(P=>P*(c/l/V0)),[v,C]=[x-U0/l*b[0],A-U0/l*b[1]],[I,E]=[x+U0/l*b[2]-v,A+U0/l*b[3]-C],R=[v,C,I,E];R=R.map(P=>Math.max(0,Math.min(P,1)));let F=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],_={id:s++,score:Math.round(100*y)/100,class:g+1,label:Oc[g].label,box:F.map(P=>Math.trunc(P)),boxRaw:R};r.push(_)}}});e.forEach(l=>te(l));let a=r.map(l=>[l.boxRaw[1],l.boxRaw[0],l.boxRaw[3],l.boxRaw[2]]),o=r.map(l=>l.score),i=[];if(a&&a.length>0){let l=await Ie.nonMaxSuppressionAsync(a,o,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);i=await l.data(),te(l)}return r=r.filter((l,c)=>i.includes(c)).sort((l,c)=>c.score-l.score),r}async function h5(e,t){let n=(t.object.skipTime||0)>ie()-TN,s=p5<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&W0.length>0?(p5++,W0):(p5=0,!he.kernels.includes("mod")||!he.kernels.includes("sparsetodense")?W0:new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Ie.resizeBilinear(e,[V0,V0],!1),i=de(o,Ke.tf255),l=i.transpose([0,3,1,2]);te(i),te(o);let c;t.object.enabled&&(c=ba.execute(l)),TN=ie(),te(l);let u=await w1e(c,a,t);W0=u,r(u)}))}var Yp=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],k1e=Yp.length,Jp=Yp.reduce((e,t,n)=>(e[t]=n,e),{}),I1e=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],bxe=I1e.map(([e,t])=>[Jp[e],Jp[t]]),RN=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function _N(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function DN(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(c,u)=>({id:u,score:c.score,boxRaw:[c.box[0]/r,c.box[1]/s,c.box[2]/r,c.box[3]/s],box:[Math.trunc(c.box[0]*o),Math.trunc(c.box[1]*a),Math.trunc(c.box[2]*o),Math.trunc(c.box[3]*a)],keypoints:c.keypoints.map(({score:d,part:p,position:h})=>({score:d,part:p,position:[Math.trunc(h.x*o),Math.trunc(h.y*a)],positionRaw:[h.x/s,h.y/s]})),annotations:{}});return e.map((c,u)=>i(c,u))}var f5=class{constructor(t,n){fe(this,"priorityQueue");fe(this,"numberOfElements");fe(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=n}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let n=2*t;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(t,n))break;this.exchange(t,n),t=n}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,n){return this.getValueAt(t)<this.getValueAt(n)}exchange(t,n){let s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[n],this.priorityQueue[n]=s}};function m5(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+k1e)}}function g5(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=m5(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function y5(e,t,n){return e<t?t:e>n?n:e}function PN(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function A5(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Rs,C1e=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],G0=1,Uc=16,T1e=50**2;function $N(e,t,n,s,r,a,o=2){let i=y=>({y:a.get(y.y,y.x,e),x:a.get(y.y,y.x,a.shape[2]/2+e)}),l=(y,x,A)=>({y:y5(Math.round(y.y/Uc),0,x-1),x:y5(Math.round(y.x/Uc),0,A-1)}),[c,u]=s.shape,d=l(t.position,c,u),p=i(d),f=A5(t.position,p);for(let y=0;y<o;y++){let x=l(f,c,u),A=m5(x.y,x.x,n,r);f=A5({x:x.x*Uc,y:x.y*Uc},{x:A.x,y:A.y})}let m=l(f,c,u),g=s.get(m.y,m.x,n);return{position:f,part:Yp[n],score:g}}function N1e(e,t,n,s,r){let a=RN.map(([p,h])=>[Jp[p],Jp[h]]),o=a.map(([,p])=>p),i=a.map(([p])=>p),l=t.shape[2],c=o.length,u=new Array(l),d=g5(e.part,Uc,n);u[e.part.id]={score:e.score,part:Yp[e.part.id],position:d};for(let p=c-1;p>=0;--p){let h=o[p],f=i[p];u[h]&&!u[f]&&(u[f]=$N(p,u[h],f,t,n,r))}for(let p=0;p<c;++p){let h=i[p],f=o[p];u[h]&&!u[f]&&(u[f]=$N(p,u[h],f,t,n,s))}return u}function E1e(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-G0,0),c=Math.min(n+G0+1,a);for(let u=l;u<c;++u){let d=Math.max(s-G0,0),p=Math.min(s+G0+1,o);for(let h=d;h<p;++h)if(r.get(u,h,e)>t){i=!1;break}if(!i)break}return i}function R1e(e,t){let[n,s,r]=t.shape,a=new f5(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let c=t.get(o,i,l);c<e||E1e(l,c,o,i,t)&&a.enqueue({score:c,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function FN(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var o;let a=(o=r[s])==null?void 0:o.position;return a?PN(n,t,a.y,a.x)<=T1e:!1})}function _1e(e,t){return t.reduce((s,{position:r,score:a},o)=>(FN(e,r,o)||(s+=a),s),0)/t.length}function D1e(e,t,n,s,r,a){let o=[],i=R1e(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),c=g5(l.part,Uc,e);if(FN(o,c,l.part.id))continue;let u=N1e(l,t,e,n,s);u=u.filter(h=>h.score>a);let d=_1e(o,u),p=_N(u);d>a&&o.push({keypoints:u,box:p,score:Math.round(100*d)/100})}return o}async function x5(e,t){let n=X(()=>{if(!Rs.inputs[0].shape)return[];let o=Ie.resizeBilinear(e,[Rs.inputs[0].shape[2],Rs.inputs[0].shape[1]]),i=pe(de(ge(o,"float32"),127.5),1),c=Rs.execute(i,C1e).map(u=>Ye(u,[0]));return c[1]=Pn(c[1]),c}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)te(o);let r=await D1e(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return Rs.inputs[0].shape?DN(r,[e.shape[1],e.shape[2]],[Rs.inputs[0].shape[2],Rs.inputs[0].shape[1]]):[]}async function ON(e){return!Rs||he.initial?(Rs=await We(Ue(e.modelBasePath,e.body.modelPath||"")),!Rs||!Rs.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",Rs.modelUrl)):e.debug&&J("cached model:",Rs.modelUrl),Rs}var qs,b5=!1;async function v5(e){return!qs||he.initial?(qs=await We(Ue(e.modelBasePath,e.segmentation.modelPath||"")),!qs||!qs.modelUrl?J("load model failed:",e.segmentation.modelPath):e.debug&&J("load model:",qs.modelUrl)):e.debug&&J("cached model:",qs.modelUrl),qs}async function zN(e,t,n){var m,g;if(b5)return{data:[],canvas:null,alpha:null};b5=!0,qs||await v5(n);let s=await Pc(e,n),r=((m=s.tensor)==null?void 0:m.shape[2])||0,a=((g=s.tensor)==null?void 0:g.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};let o={};o.resize=Ie.resizeBilinear(s.tensor,[qs.inputs[0].shape?qs.inputs[0].shape[1]:0,qs.inputs[0].shape?qs.inputs[0].shape[2]:0],!1),te(s.tensor),o.norm=de(o.resize,Ke.tf255),o.res=qs.execute(o.norm),o.squeeze=Ye(o.res,0),o.squeeze.shape[2]===2?(o.softmax=Ju(o.squeeze),[o.bg,o.fg]=is(o.softmax,2),o.expand=Yt(o.fg,2),o.pad=Yt(o.expand,0),o.crop=Ie.cropAndResize(o.pad,[[0,0,.5,.5]],[0],[r,a]),o.data=Ye(o.crop,0)):o.data=Ie.resizeBilinear(o.squeeze,[a,r]);let i=Array.from(await o.data.data());if(he.node&&!he.Canvas&&typeof ImageData=="undefined")return n.debug&&J("canvas support missing"),Object.keys(o).forEach(y=>te(o[y])),{data:i,canvas:null,alpha:null};let l=Yn(r,a);Os&&await Os.toPixels(o.data,l);let c=l.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(c.filter=`blur(${n.segmentation.blur}px)`);let u=c.getImageData(0,0,r,a),d=Yn(r,a),p=d.getContext("2d");s.canvas&&p.drawImage(s.canvas,0,0),p.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(p.filter=`blur(${n.segmentation.blur}px)`),p.drawImage(l,0,0),p.globalCompositeOperation="source-over",p.filter="none";let h=p.getImageData(0,0,r,a);for(let y=0;y<r*a;y++)h.data[4*y+3]=u.data[4*y+0];p.putImageData(h,0,0);let f=null;if(t&&d){f=Yn(r,a);let y=await Pc(t,n);te(y.tensor);let x=f.getContext("2d");x.drawImage(y.canvas,0,0,f.width,f.height),x.drawImage(d,0,0)}return Object.keys(o).forEach(y=>te(o[y])),b5=!1,{data:i,canvas:d,alpha:l}}var w5=class{constructor(){fe(this,"ssrnetage",null);fe(this,"gear",null);fe(this,"blazeposedetect",null);fe(this,"blazepose",null);fe(this,"centernet",null);fe(this,"efficientpose",null);fe(this,"mobilefacenet",null);fe(this,"emotion",null);fe(this,"facedetect",null);fe(this,"faceiris",null);fe(this,"facemesh",null);fe(this,"faceres",null);fe(this,"ssrnetgender",null);fe(this,"handpose",null);fe(this,"handskeleton",null);fe(this,"handtrack",null);fe(this,"liveness",null);fe(this,"movenet",null);fe(this,"nanodet",null);fe(this,"posenet",null);fe(this,"segmentation",null);fe(this,"antispoof",null)}};function k5(e){for(let t of Object.keys(e.models))e.models[t]=null}async function BN(e){var t,n,s,r,a,o,i,l,c,u,d,p,h,f,m,g,y,x,A,b,v,C,I,E,R,F,_,P,T,O;he.initial&&k5(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await e5(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await e5(e.config))),e.config.body.enabled&&!e.models.blazepose&&((o=(a=e.config.body)==null?void 0:a.modelPath)==null?void 0:o.includes("blazepose"))&&(e.models.blazepose=h8(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=p8(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(i=e.config.body)==null?void 0:i.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=x8(e.config)),e.config.body.enabled&&!e.models.movenet&&((u=(c=e.config.body)==null?void 0:c.modelPath)==null?void 0:u.includes("movenet"))&&(e.models.movenet=SN(e.config)),e.config.body.enabled&&!e.models.posenet&&((p=(d=e.config.body)==null?void 0:d.modelPath)==null?void 0:p.includes("posenet"))&&(e.models.posenet=ON(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=s8(e.config)),e.config.face.enabled&&((h=e.config.face.antispoof)==null?void 0:h.enabled)&&!e.models.antispoof&&(e.models.antispoof=GT(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=xN(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=V8(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=k8(e.config)),e.config.face.enabled&&((y=e.config.face.iris)==null?void 0:y.enabled)&&!e.models.faceiris&&(e.models.faceiris=R8(e.config)),e.config.face.enabled&&((x=e.config.face.mesh)==null?void 0:x.enabled)&&!e.models.facemesh&&(e.models.facemesh=M8(e.config)),e.config.face.enabled&&((A=e.config.face.gear)==null?void 0:A.enabled)&&!e.models.gear&&(e.models.gear=_T(e.config)),e.config.face.enabled&&((b=e.config.face.ssrnet)==null?void 0:b.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=OT(e.config)),e.config.face.enabled&&((v=e.config.face.ssrnet)==null?void 0:v.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=BT(e.config)),e.config.face.enabled&&((C=e.config.face.mobilefacenet)==null?void 0:C.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=N8(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((E=(I=e.config.hand.detector)==null?void 0:I.modelPath)==null?void 0:E.includes("handtrack"))&&(e.models.handtrack=fN(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((F=(R=e.config.hand.detector)==null?void 0:R.modelPath)==null?void 0:F.includes("handtrack"))&&(e.models.handskeleton=mN(e.config)),e.config.object.enabled&&!e.models.centernet&&((P=(_=e.config.object)==null?void 0:_.modelPath)==null?void 0:P.includes("centernet"))&&(e.models.centernet=g8(e.config)),e.config.object.enabled&&!e.models.nanodet&&((O=(T=e.config.object)==null?void 0:T.modelPath)==null?void 0:O.includes("nanodet"))&&(e.models.nanodet=NN(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=v5(e.config));for await(let G of Object.keys(e.models))e.models[G]&&typeof e.models[G]!="undefined"&&(e.models[G]=await e.models[G])}async function WN(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let n of Object.keys(e.models)){let s=e.models[n];if(!s)continue;let r=[],a=s==null?void 0:s.executor;if(a&&a.graph.nodes)for(let i of Object.values(a.graph.nodes)){let l=i.op.toLowerCase();r.includes(l)||r.push(l)}else!a&&e.config.debug&&J("model signature not determined:",n);let o=[];for(let i of r)!t.includes(i)&&!e.env.kernels.includes(i)&&!e.env.kernels.includes(i.replace("_",""))&&!e.env.kernels.includes(i.replace("native",""))&&!e.env.kernels.includes(i.replace("v2",""))&&o.push(i);e.config.debug&&o.length>0&&J("model validation failed:",n,o)}}var _t={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function P1e(){let e=_t.gl;!e||(_t.extensions=e.getSupportedExtensions())}async function UN(e){var t;if(e.config.backend==="humangl"&&(_t.name in Dn().registry&&(!_t.gl||!_t.gl.getParameter(_t.gl.VERSION))&&(J("error: humangl backend invalid context"),k5(e)),!uy(_t.name))){try{_t.canvas=await Yn(100,100)}catch(s){J("error: cannot create canvas:",s);return}try{if(_t.gl=(t=_t.canvas)==null?void 0:t.getContext("webgl2",_t.webGLattr),!_t.gl.getParameter(_t.gl.VERSION).includes("2.0")){J("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}_t.canvas&&(_t.canvas.addEventListener("webglcontextlost",async r=>{throw J("error: humangl:",r.type),J("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),_t.canvas.addEventListener("webglcontextrestored",r=>{J("error: humangl context restored:",r)}),_t.canvas.addEventListener("webglcontextcreationerror",r=>{J("error: humangl context create:",r)}))}catch(s){J("error: cannot get WebGL context:",s);return}try{Wm(2,_t.gl)}catch(s){J("error: cannot set WebGL context:",s);return}try{let s=new yc(_t.gl);cl(_t.name,()=>new Rp(s),_t.priority)}catch(s){J("error: cannot register WebGL backend:",s);return}try{Dr("webgl").forEach(r=>{let a={...r,backendName:_t.name};Js(a)})}catch(s){J("error: cannot update WebGL backend registration:",s);return}let n=gr().getGPGPUContext?gr().getGPGPUContext().gl:null;if(n)J(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);else{J("error: no current gl context:",n,_t.gl);return}try{pr.set("WEBGL_VERSION",2)}catch(s){J("error: cannot set WebGL backend flags:",s);return}P1e(),J("backend registered:",_t.name)}}function $1e(){if(!he.kernels.includes("mod")){let e={kernelName:"Mod",backendName:xs(),kernelFunc:t=>X(()=>pe(t.inputs.a,L(de(t.inputs.a,t.inputs.b),t.inputs.b)))};Js(e),he.kernels.push("mod")}if(!he.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:xs(),kernelFunc:t=>X(()=>Gd(t.inputs.a/t.inputs.b)*t.inputs.b+Xu(t.inputs.a,t.inputs.b))};Js(e),he.kernels.push("floormod")}}async function H0(e,t=!1){if(e.state="backend",t||he.initial||e.config.backend&&e.config.backend.length>0&&xs()!==e.config.backend){let n=ie();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&J("running inside web worker"),he.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&J("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),he.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&J(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),he.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")J("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let r=await navigator.gpu.requestAdapter();e.config.debug&&J("enumerated webgpu adapter:",r)}e.config.backend==="humangl"&&await UN(e);let s=Object.keys(Dn().registryFactory);if(e.config.debug&&J("available backends:",s),s.includes(e.config.backend)||(J(`error: backend ${e.config.backend} not found in registry`),e.config.backend=he.node?"tensorflow":"webgl",e.config.debug&&J(`override: setting backend ${e.config.backend}`)),e.config.debug&&J("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&J("wasm path:",e.config.wasmPath),typeof(Ve==null?void 0:Ve.setWasmPaths)!="undefined")await nb(e.config.wasmPath);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let r=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),a=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&J(`wasm execution: ${r?"SIMD":"no SIMD"} ${a?"multithreaded":"singlethreaded"}`),e.config.debug&&!r&&J("warning: wasm simd support is not enabled")}try{await ly(e.config.backend),await Bu(),PT()}catch(r){return J("error: cannot set backend:",e.config.backend,r),!1}}if(xs()==="humangl"&&(pr.set("CHECK_COMPUTATION_FOR_ERRORS",!1),pr.set("WEBGL_CPU_FORWARD",!0),pr.set("WEBGL_USE_SHAPES_UNIFORMS",!0),pr.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(J("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),pr.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),gr().getGPGPUContext)){let s=await gr().getGPGPUContext().gl;e.config.debug&&J(`gl version:${s.getParameter(s.VERSION)} renderer:${s.getParameter(s.RENDERER)}`)}xs()==="webgpu",oy(),await Bu(),e.performance.initBackend=Math.trunc(ie()-n),e.config.backend=xs(),await he.updateBackend(),$1e()}return!0}function O0(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&J("kernelFunc",n,t.backend)}};Js(s)}he.kernels=Dr(xs()).map(n=>n.kernelName.toLowerCase())}var va={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},I5=0,ql=e=>{if(!e)J("draw error: invalid canvas");else if(!e.getContext)J("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)J("draw error: cannot get canvas context");else return t}return null},Gc=e=>Math.round(e*180/Math.PI);function S5(e,t,n,s,r){s=s||0,e.fillStyle=r.useDepth&&s?`rgba(${127.5+2*s}, ${127.5-2*s}, 255, 0.3)`:r.color,e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function Qp(e,t,n,s,r,a){if(e.beginPath(),e.lineWidth=a.lineWidth,a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function HN(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t){let r=s[2]||0;e.strokeStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.lineTo(s[0],Math.round(s[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function O1e(e,t,n){if(!(t.length<2)){if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2){HN(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function jN(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}async function C5(e,t,n){let s=Rn(va,n);if(!(!t||!e)&&s.drawGestures){let r=ql(e);if(!r)return;r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let c=i[1]>0?`#${i[1]}`:"",u=`${i[0]} ${c}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(u,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(u,6,0+a*s.lineHeight),a+=1}}}}async function T5(e,t,n){var a,o,i,l,c;let s=Rn(va,n);if(!t||!e)return;let r=ql(e);if(!!r)for(let u of t){if(r.font=s.font,r.strokeStyle=s.color,r.fillStyle=s.color,s.drawBoxes&&Qp(r,u.box[0],u.box[1],u.box[2],u.box[3],s),s.drawLabels){let d=[];if(d.push(`face: ${Math.trunc(100*u.score)}%`),u.genderScore&&d.push(`${u.gender||""} ${Math.trunc(100*u.genderScore)}%`),u.age&&d.push(`age: ${u.age||""}`),u.iris&&d.push(`distance: ${u.iris}`),u.real&&d.push(`real: ${Math.trunc(100*u.real)}%`),u.live&&d.push(`live: ${Math.trunc(100*u.live)}%`),u.emotion&&u.emotion.length>0){let p=u.emotion.map(h=>`${Math.trunc(100*h.score)}% ${h.emotion}`);p.length>3&&(p.length=3),d.push(p.join(" "))}u.rotation&&u.rotation.angle&&u.rotation.gaze&&(u.rotation.angle.roll&&d.push(`roll: ${Gc(u.rotation.angle.roll)}\xB0 yaw:${Gc(u.rotation.angle.yaw)}\xB0 pitch:${Gc(u.rotation.angle.pitch)}\xB0`),u.rotation.gaze.bearing&&d.push(`gaze: ${Gc(u.rotation.gaze.bearing)}\xB0`)),d.length===0&&d.push("face"),r.fillStyle=s.color;for(let p=d.length-1;p>=0;p--){let h=Math.max(u.box[0],0),f=p*s.lineHeight+u.box[1];s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(d[p],h+5,f+16)),r.fillStyle=s.labelColor,r.fillText(d[p],h+4,f+15)}}if(r.lineWidth=2,u.mesh&&u.mesh.length>0){if(s.drawPoints)for(let d of u.mesh)S5(r,d[0],d[1],d[2],s);if(s.drawPolygons){if(u.mesh.length>450)for(let d=0;d<Ll.length/3;d++){let p=[Ll[d*3+0],Ll[d*3+1],Ll[d*3+2]].map(h=>u.mesh[h]);HN(r,p,s)}if(u.annotations&&u.annotations.leftEyeIris&&u.annotations.leftEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.leftEyeIris[3][0]-u.annotations.leftEyeIris[1][0])/2,p=Math.abs(u.annotations.leftEyeIris[4][1]-u.annotations.leftEyeIris[2][1])/2;r.ellipse(u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(u.annotations&&u.annotations.rightEyeIris&&u.annotations.rightEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.rightEyeIris[3][0]-u.annotations.rightEyeIris[1][0])/2,p=Math.abs(u.annotations.rightEyeIris[4][1]-u.annotations.rightEyeIris[2][1])/2;r.ellipse(u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(s.drawGaze&&((a=u.rotation)==null?void 0:a.angle)&&typeof Path2D!="undefined"){r.strokeStyle="pink";let d=u.box[0]+u.box[2]/2-u.box[3]*Gc(u.rotation.angle.yaw)/90,p=u.box[1]+u.box[3]/2+u.box[2]*Gc(u.rotation.angle.pitch)/90,h=new Path2D(`
            M ${u.box[0]+u.box[2]/2} ${u.box[1]}
            C
              ${d} ${u.box[1]},
              ${d} ${u.box[1]+u.box[3]},
              ${u.box[0]+u.box[2]/2} ${u.box[1]+u.box[3]}
          `),f=new Path2D(`
            M ${u.box[0]} ${u.box[1]+u.box[3]/2}
            C 
              ${u.box[0]} ${p},
              ${u.box[0]+u.box[2]} ${p},
              ${u.box[0]+u.box[2]} ${u.box[1]+u.box[3]/2}
          `);r.stroke(f),r.stroke(h)}if(s.drawGaze&&((i=(o=u.rotation)==null?void 0:o.gaze)==null?void 0:i.strength)&&((c=(l=u.rotation)==null?void 0:l.gaze)==null?void 0:c.bearing)&&u.annotations.leftEyeIris&&u.annotations.rightEyeIris&&u.annotations.leftEyeIris[0]&&u.annotations.rightEyeIris[0]){r.strokeStyle="pink",r.fillStyle="pink";let d=[u.annotations.leftEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.leftEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];jN(r,[u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1]],[d[0],d[1]],4);let p=[u.annotations.rightEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.rightEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];jN(r,[u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1]],[p[0],p[1]],4)}}}}}async function N5(e,t,n){var a;let s=Rn(va,n);if(!t||!e)return;let r=ql(e);if(!!r){r.lineJoin="round";for(let o=0;o<t.length;o++){if(r.strokeStyle=s.color,r.fillStyle=s.color,r.lineWidth=s.lineWidth,r.font=s.font,s.drawBoxes&&t[o].box&&((a=t[o].box)==null?void 0:a.length)===4&&(Qp(r,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+3,1+t[o].box[1]+s.lineHeight,t[o].box[2])),r.fillStyle=s.labelColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+2,0+t[o].box[1]+s.lineHeight,t[o].box[2]))),s.drawPoints&&t[o].keypoints)for(let i=0;i<t[o].keypoints.length;i++)!t[o].keypoints[i].score||t[o].keypoints[i].score===0||(r.fillStyle=s.useDepth&&t[o].keypoints[i].position[2]?`rgba(${127.5+2*(t[o].keypoints[i].position[2]||0)}, ${127.5-2*(t[o].keypoints[i].position[2]||0)}, 255, 0.5)`:s.color,S5(r,t[o].keypoints[i].position[0],t[o].keypoints[i].position[1],0,s));if(s.drawLabels&&t[o].keypoints){r.font=s.font;for(let i of t[o].keypoints)!i.score||i.score===0||(r.fillStyle=s.useDepth&&i.position[2]?`rgba(${127.5+2*i.position[2]}, ${127.5-2*i.position[2]}, 255, 0.5)`:s.color,r.fillText(`${i.part} ${Math.trunc(100*i.score)}%`,i.position[0]+4,i.position[1]+4))}if(s.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let i of Object.values(t[o].annotations))for(let l of i)O1e(r,l,s)}}}async function E5(e,t,n){let s=Rn(va,n);if(!t||!e)return;let r=ql(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,Qp(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=s.useDepth?`rgba(${127.5+2*(o[2]||0)}, ${127.5-2*(o[2]||0)}, 255, 0.5)`:s.color,S5(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{if(!i||i.length===0||!i[0])return;let c=i[i.length-1][2]||0;r.fillStyle=s.useDepth?`rgba(${127.5+2*c}, ${127.5-2*c}, 255, 0.5)`:s.color,r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4)};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++){r.beginPath();let c=i[l][2]||0;r.strokeStyle=s.useDepth?`rgba(${127.5+l*c}, ${127.5-l*c}, 255, 0.5)`:s.color,r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()}};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}}async function R5(e,t,n){let s=Rn(va,n);if(!t||!e)return;let r=ql(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Qp(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}}async function qN(e,t,n){let s=Rn(va,n);if(!t||!e)return;let r=ql(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Qp(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}}async function XN(e,t){if(!e||!t)return;let n=ql(t);!n||n.drawImage(e,0,0)}async function KN(e,t,n){if(!t||!t.performance||!t||!e)return null;let s=ie(),r=Rn(va,n),a=Promise.all([T5(e,t.face,r),N5(e,t.body,r),E5(e,t.hand,r),R5(e,t.object,r),C5(e,t.gesture,r)]);return I5=he.perfadd?I5+Math.round(ie()-s):Math.round(ie()-s),t.performance.draw=I5,a}var Hc=.1,_5=.5;function z1e(e,t,n){let s=!1,r=n.length-1;for(let a=0;a<n.length;r=a++)n[a].y>t!=n[r].y>t&&e<(n[r].x-n[a].x)*(t-n[a].y)/(n[r].y-n[a].y)+n[a].x&&(s=!s);return s}async function ZN(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,s=await e.tensor.buffer(),r=[];for(let o of lr.silhouette)r.push({x:(e.mesh[o][0]-e.box[0])/e.box[2],y:(e.mesh[o][1]-e.box[1])/e.box[3]});Hc&&Hc>0&&(r=r.map(o=>({x:o.x>.5?o.x+Hc:o.x-Hc,y:o.y>.5?o.y+Hc:o.y-Hc})));for(let o=0;o<t;o++)for(let i=0;i<n;i++)z1e(o/t,i/t,r)||(s.set(_5*s.get(0,i,o,0),0,i,o,0),s.set(_5*s.get(0,i,o,1),0,i,o,1),s.set(_5*s.get(0,i,o,2),0,i,o,2));let a=s.toTensor();return te(s),a}var B1e=e=>{let t=(d,p)=>Math.atan2(d[1]-p[1],d[0]-p[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],c=Math.sqrt(l[0]**2+l[1]**2);return c=Math.min(c,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:c}},YN=(e,t)=>{let n=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},s=(m,g)=>{let y=m[0]-g[0],x=m[1]-g[1],A=m[2]-g[2];return[y,x,A]},r=(m,g)=>{let y=m[1]*g[2]-m[2]*g[1],x=m[2]*g[0]-m[0]*g[2],A=m[0]*g[1]-m[1]*g[0];return[y,x,A]},a=m=>{let[g,y,x,A,b,v,C,I,E]=m,R,F,_;return A<1?A>-1?(_=Math.asin(A),F=Math.atan2(-C,g),R=Math.atan2(-v,b)):(_=-Math.PI/2,F=-Math.atan2(I,E),R=0):(_=Math.PI/2,F=Math.atan2(I,E),R=0),isNaN(R)&&(R=0),isNaN(F)&&(F=0),isNaN(_)&&(_=0),{pitch:2*-R,yaw:2*-F,roll:2*-_}},o=e.meshRaw;if(!o||o.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[o[10],o[152],o[234],o[454]].map(m=>[m[0]*t[0]/i,m[1]*t[1]/i,m[2]]),c=n(s(l[1],l[0])),u=n(s(l[3],l[2])),d=n(r(u,c));u=r(c,d);let p=[u[0],u[1],u[2],c[0],c[1],c[2],d[0],d[1],d[2]],h=a(p),f=o.length===478?B1e(e):{bearing:0,strength:0};return{angle:h,matrix:p,gaze:f}};var D5=async(e,t)=>{var h,f,m,g,y,x,A,b,v,C,I,E,R,F,_,P,T,O,G,K,z,j;let n=ie(),s,r,a,o,i,l,c,u,d=[];e.state="run:face";let p=await O8(t,e.config);if(e.performance.face=he.perfadd?(e.performance.face||0)+Math.trunc(ie()-n):Math.trunc(ie()-n),!t.shape||t.shape.length!==4)return[];if(!p)return[];for(let W=0;W<p.length;W++){if(e.analyze("Get Face"),!p[W].tensor||p[W].tensor.isDisposedInternal){J("Face object is disposed:",p[W].tensor);continue}if((h=e.config.face.detector)==null?void 0:h.mask){let ae=await ZN(p[W]);te(p[W].tensor),p[W].tensor=ae}let Q=p[W].mesh&&p[W].mesh.length>200?YN(p[W],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?o=((f=e.config.face.emotion)==null?void 0:f.enabled)?Mb(p[W].tensor||ht([]),e.config,W,p.length):[]:(e.state="run:emotion",n=ie(),o=((m=e.config.face.emotion)==null?void 0:m.enabled)?await Mb(p[W].tensor||ht([]),e.config,W,p.length):[],e.performance.emotion=he.perfadd?(e.performance.emotion||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?l=((g=e.config.face.antispoof)==null?void 0:g.enabled)?gb(p[W].tensor||ht([]),e.config,W,p.length):0:(e.state="run:antispoof",n=ie(),l=((y=e.config.face.antispoof)==null?void 0:y.enabled)?await gb(p[W].tensor||ht([]),e.config,W,p.length):0,e.performance.antispoof=he.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?c=((x=e.config.face.liveness)==null?void 0:x.enabled)?a5(p[W].tensor||ht([]),e.config,W,p.length):0:(e.state="run:liveness",n=ie(),c=((A=e.config.face.liveness)==null?void 0:A.enabled)?await a5(p[W].tensor||ht([]),e.config,W,p.length):0,e.performance.liveness=he.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?r=((b=e.config.face.gear)==null?void 0:b.enabled)?ub(p[W].tensor||ht([]),e.config,W,p.length):null:(e.state="run:gear",n=ie(),r=((v=e.config.face.gear)==null?void 0:v.enabled)?await ub(p[W].tensor||ht([]),e.config,W,p.length):null,e.performance.gear=Math.trunc(ie()-n)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(s=((C=e.config.face.ssrnet)==null?void 0:C.enabled)?db(p[W].tensor||ht([]),e.config,W,p.length):null,a=((I=e.config.face.ssrnet)==null?void 0:I.enabled)?fb(p[W].tensor||ht([]),e.config,W,p.length):null):(e.state="run:ssrnet",n=ie(),s=((E=e.config.face.ssrnet)==null?void 0:E.enabled)?await db(p[W].tensor||ht([]),e.config,W,p.length):null,a=((R=e.config.face.ssrnet)==null?void 0:R.enabled)?await fb(p[W].tensor||ht([]),e.config,W,p.length):null,e.performance.ssrnet=Math.trunc(ie()-n)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?i=((F=e.config.face.mobilefacenet)==null?void 0:F.enabled)?Lb(p[W].tensor||ht([]),e.config,W,p.length):null:(e.state="run:mobilefacenet",n=ie(),i=((_=e.config.face.mobilefacenet)==null?void 0:_.enabled)?await Lb(p[W].tensor||ht([]),e.config,W,p.length):null,e.performance.mobilefacenet=Math.trunc(ie()-n)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?u=((P=e.config.face.description)==null?void 0:P.enabled)?Hb(p[W].tensor||ht([]),e.config,W,p.length):null:(e.state="run:description",n=ie(),u=((T=e.config.face.description)==null?void 0:T.enabled)?await Hb(p[W].tensor||ht([]),e.config,W,p.length):null,e.performance.description=he.perfadd?(e.performance.description||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Description:"),e.config.async&&([s,a,o,i,u,r,l,c]=await Promise.all([s,a,o,i,u,r,l,c])),e.analyze("Finish Face:"),((O=e.config.face.ssrnet)==null?void 0:O.enabled)&&s&&a&&(u={...u,age:s.age,gender:a.gender,genderScore:a.genderScore}),((G=e.config.face.gear)==null?void 0:G.enabled)&&r&&(u={...u,age:r.age,gender:r.gender,genderScore:r.genderScore,race:r.race}),((K=e.config.face.mobilefacenet)==null?void 0:K.enabled)&&i&&(u.descriptor=i),!((z=e.config.face.iris)==null?void 0:z.enabled);let ne=p[W].annotations&&p[W].annotations.leftEyeIris&&p[W].annotations.leftEyeIris[0]&&p[W].annotations.rightEyeIris&&p[W].annotations.rightEyeIris[0]&&p[W].annotations.leftEyeIris.length>0&&p[W].annotations.rightEyeIris.length>0&&p[W].annotations.leftEyeIris[0]!==null&&p[W].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(p[W].annotations.leftEyeIris[3][0]-p[W].annotations.leftEyeIris[1][0]),Math.abs(p[W].annotations.rightEyeIris[4][1]-p[W].annotations.rightEyeIris[2][1]))/t.shape[2]:0,oe=((j=e.config.face.detector)==null?void 0:j.return)?Ye(p[W].tensor):null;te(p[W].tensor),p[W].tensor&&delete p[W].tensor;let Z={...p[W],id:W};(u==null?void 0:u.age)&&(Z.age=u.age),(u==null?void 0:u.gender)&&(Z.gender=u.gender),(u==null?void 0:u.genderScore)&&(Z.genderScore=u==null?void 0:u.genderScore),(u==null?void 0:u.descriptor)&&(Z.embedding=u==null?void 0:u.descriptor),(u==null?void 0:u.race)&&(Z.race=u==null?void 0:u.race),o&&(Z.emotion=o),l&&(Z.real=l),c&&(Z.live=c),ne&&ne!==0&&(Z.iris=Math.trunc(500/ne/11.7)/100),Q&&(Z.rotation=Q),oe&&(Z.tensor=oe),d.push(Z),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),d};var JN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&Math.abs(o.positionRaw[1]-i.positionRaw[1])>.1&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},QN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(s/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});let l=e[n].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:n,gesture:`head ${l<0?"up":"down"}`})}return t},eE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let s=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(s*r),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),c=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(c=!0,t.push({iris:n,gesture:"facing center"}));let d=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],p=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(d>.06||p>.06)&&(c=!1),d>p?d>.05&&t.push({iris:n,gesture:"looking right"}):p>.05&&t.push({iris:n,gesture:"looking left"});let h=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||h<.01||f>.022||h>.022)&&(c=!1),(f<.01||h<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||h>.022)&&t.push({iris:n,gesture:"looking up"}),c&&t.push({iris:n,gesture:"looking center"})}return t},tE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>(o.position[2]||0)<(i.position[2]||0)?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=iN(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t};var _e={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},P5=0;function nE(e,t){var o,i,l,c,u,d,p,h,f,m,g,y,x,A,b,v,C,I,E,R,F,_,P,T,O,G,K;let n=ie();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let s=Date.now()-e.timestamp,r=s<1e3?8-Math.log(s+1):1;if(e.canvas&&(_e.canvas=e.canvas),e.error&&(_e.error=e.error),!_e.body||e.body.length!==_e.body.length)_e.body=JSON.parse(JSON.stringify(e.body));else for(let z=0;z<e.body.length;z++){let j=e.body[z].box.map((Z,ae)=>((r-1)*_e.body[z].box[ae]+Z)/r),W=e.body[z].boxRaw.map((Z,ae)=>((r-1)*_e.body[z].boxRaw[ae]+Z)/r),Q=e.body[z].keypoints.map((Z,ae)=>{var re,me,be,Ne,Se,Pe,ze,Qe,Ze;return{score:Z.score,part:Z.part,position:[_e.body[z].keypoints[ae]?((r-1)*(_e.body[z].keypoints[ae].position[0]||0)+(Z.position[0]||0))/r:Z.position[0],_e.body[z].keypoints[ae]?((r-1)*(_e.body[z].keypoints[ae].position[1]||0)+(Z.position[1]||0))/r:Z.position[1],_e.body[z].keypoints[ae]?((r-1)*(_e.body[z].keypoints[ae].position[2]||0)+(Z.position[2]||0))/r:Z.position[2]],positionRaw:[_e.body[z].keypoints[ae]?((r-1)*(_e.body[z].keypoints[ae].positionRaw[0]||0)+(Z.positionRaw[0]||0))/r:Z.positionRaw[0],_e.body[z].keypoints[ae]?((r-1)*(_e.body[z].keypoints[ae].positionRaw[1]||0)+(Z.positionRaw[1]||0))/r:Z.positionRaw[1],_e.body[z].keypoints[ae]?((r-1)*(_e.body[z].keypoints[ae].positionRaw[2]||0)+(Z.positionRaw[2]||0))/r:Z.positionRaw[2]],distance:[_e.body[z].keypoints[ae]?((r-1)*(((re=_e.body[z].keypoints[ae].distance)==null?void 0:re[0])||0)+(((me=Z.distance)==null?void 0:me[0])||0))/r:(be=Z.distance)==null?void 0:be[0],_e.body[z].keypoints[ae]?((r-1)*(((Ne=_e.body[z].keypoints[ae].distance)==null?void 0:Ne[1])||0)+(((Se=Z.distance)==null?void 0:Se[1])||0))/r:(Pe=Z.distance)==null?void 0:Pe[1],_e.body[z].keypoints[ae]?((r-1)*(((ze=_e.body[z].keypoints[ae].distance)==null?void 0:ze[2])||0)+(((Qe=Z.distance)==null?void 0:Qe[2])||0))/r:(Ze=Z.distance)==null?void 0:Ze[2]]}}),ne={},oe={connected:{}};((i=(o=t.body)==null?void 0:o.modelPath)==null?void 0:i.includes("efficientpose"))?oe=T0:((c=(l=t.body)==null?void 0:l.modelPath)==null?void 0:c.includes("blazepose"))?oe=w0:((d=(u=t.body)==null?void 0:u.modelPath)==null?void 0:d.includes("movenet"))&&(oe=Zp);for(let[Z,ae]of Object.entries(oe.connected)){let re=[];for(let me=0;me<ae.length-1;me++){let be=Q.find(Se=>Se.part===ae[me]),Ne=Q.find(Se=>Se.part===ae[me+1]);be&&Ne&&re.push([be.position,Ne.position])}ne[Z]=re}_e.body[z]={...e.body[z],box:j,boxRaw:W,keypoints:Q,annotations:ne}}if(!_e.hand||e.hand.length!==_e.hand.length)_e.hand=JSON.parse(JSON.stringify(e.hand));else for(let z=0;z<e.hand.length;z++){let j=e.hand[z].box.map((oe,Z)=>((r-1)*_e.hand[z].box[Z]+oe)/r),W=e.hand[z].boxRaw.map((oe,Z)=>((r-1)*_e.hand[z].boxRaw[Z]+oe)/r);_e.hand[z].keypoints.length!==e.hand[z].keypoints.length&&(_e.hand[z].keypoints=e.hand[z].keypoints);let Q=e.hand[z].keypoints&&e.hand[z].keypoints.length>0?e.hand[z].keypoints.map((oe,Z)=>oe.map((ae,re)=>((r-1)*(_e.hand[z].keypoints[Z][re]||1)+(ae||0))/r)):[],ne={};if(Object.keys(_e.hand[z].annotations).length!==Object.keys(e.hand[z].annotations).length)_e.hand[z].annotations=e.hand[z].annotations,ne=_e.hand[z].annotations;else if(e.hand[z].annotations)for(let oe of Object.keys(e.hand[z].annotations))ne[oe]=e.hand[z].annotations[oe]&&e.hand[z].annotations[oe][0]?e.hand[z].annotations[oe].map((Z,ae)=>Z.map((re,me)=>((r-1)*_e.hand[z].annotations[oe][ae][me]+re)/r)):null;_e.hand[z]={...e.hand[z],box:j,boxRaw:W,keypoints:Q,annotations:ne}}if(!_e.face||e.face.length!==_e.face.length)_e.face=JSON.parse(JSON.stringify(e.face));else for(let z=0;z<e.face.length;z++){let j=e.face[z].box.map((Q,ne)=>((r-1)*_e.face[z].box[ne]+Q)/r),W=e.face[z].boxRaw.map((Q,ne)=>((r-1)*_e.face[z].boxRaw[ne]+Q)/r);if(e.face[z].rotation){let Q={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};Q.matrix=(p=e.face[z].rotation)==null?void 0:p.matrix,Q.angle={roll:((r-1)*(((f=(h=_e.face[z].rotation)==null?void 0:h.angle)==null?void 0:f.roll)||0)+(((g=(m=e.face[z].rotation)==null?void 0:m.angle)==null?void 0:g.roll)||0))/r,yaw:((r-1)*(((x=(y=_e.face[z].rotation)==null?void 0:y.angle)==null?void 0:x.yaw)||0)+(((b=(A=e.face[z].rotation)==null?void 0:A.angle)==null?void 0:b.yaw)||0))/r,pitch:((r-1)*(((C=(v=_e.face[z].rotation)==null?void 0:v.angle)==null?void 0:C.pitch)||0)+(((E=(I=e.face[z].rotation)==null?void 0:I.angle)==null?void 0:E.pitch)||0))/r},Q.gaze={bearing:((r-1)*(((F=(R=_e.face[z].rotation)==null?void 0:R.gaze)==null?void 0:F.bearing)||0)+(((P=(_=e.face[z].rotation)==null?void 0:_.gaze)==null?void 0:P.bearing)||0))/r,strength:((r-1)*(((O=(T=_e.face[z].rotation)==null?void 0:T.gaze)==null?void 0:O.strength)||0)+(((K=(G=e.face[z].rotation)==null?void 0:G.gaze)==null?void 0:K.strength)||0))/r},_e.face[z]={...e.face[z],rotation:Q,box:j,boxRaw:W}}_e.face[z]={...e.face[z],box:j,boxRaw:W}}if(!_e.object||e.object.length!==_e.object.length)_e.object=JSON.parse(JSON.stringify(e.object));else for(let z=0;z<e.object.length;z++){let j=e.object[z].box.map((Q,ne)=>((r-1)*_e.object[z].box[ne]+Q)/r),W=e.object[z].boxRaw.map((Q,ne)=>((r-1)*_e.object[z].boxRaw[ne]+Q)/r);_e.object[z]={...e.object[z],box:j,boxRaw:W}}if(e.persons){let z=e.persons;if(!_e.persons||z.length!==_e.persons.length)_e.persons=JSON.parse(JSON.stringify(z));else for(let j=0;j<z.length;j++)_e.persons[j].box=z[j].box.map((W,Q)=>((r-1)*_e.persons[j].box[Q]+W)/r)}e.gesture&&(_e.gesture=e.gesture);let a=ie();return P5=he.perfadd?P5+Math.round(a-n):Math.round(a-n),e.performance&&(_e.performance={...e.performance,interpolate:P5}),_e}function j0(e,t,n={order:2,multiplier:25}){let s=0;for(let r=0;r<e.length;r++){let a=!n.order||n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*s}var sE=(e,t,n,s)=>{if(e===0)return 1;let r=t===2?Math.sqrt(e):e**(1/t),a=(1-r/100-n)/(s-n);return Math.max(Math.min(a,1),0)};function rE(e,t,n={order:2,multiplier:25,min:.2,max:.8}){let s=j0(e,t,n);return sE(s,n.order||2,n.min||0,n.max||1)}function aE(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let o=0;o<t.length;o++){let i=j0(e,t[o],n);if(i<s&&(s=i,r=o),s<(n.threshold||0))break}let a=sE(s,n.order||2,n.min||0,n.max||1);return{index:r,distance:s,similarity:a}}function oE(e,t,n,s,r){var i,l,c,u,d,p,h,f,m,g,y,x,A,b,v,C;let a=0,o=[];for(let I of e){let E={id:a++,face:I,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let O of t)I.box[0]>O.box[0]&&I.box[0]<O.box[0]+O.box[2]&&I.box[1]+I.box[3]>O.box[1]&&I.box[1]+I.box[3]<O.box[1]+O.box[3]&&(E.body=O);if(E.body)for(let O of n)O.box[0]+O.box[2]>E.body.box[0]&&O.box[0]+O.box[2]<E.body.box[0]+E.body.box[2]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=O),O.box[0]<E.body.box[0]+E.body.box[2]&&O.box[0]>E.body.box[0]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=O);for(let O of s)O.face!==void 0&&O.face===I.id?(i=E.gestures)==null||i.push(O):O.iris!==void 0&&O.iris===I.id?(l=E.gestures)==null||l.push(O):O.body!==void 0&&O.body===((c=E.body)==null?void 0:c.id)?(u=E.gestures)==null||u.push(O):O.hand!==void 0&&O.hand===((p=(d=E.hands)==null?void 0:d.left)==null?void 0:p.id)?(h=E.gestures)==null||h.push(O):O.hand!==void 0&&O.hand===((m=(f=E.hands)==null?void 0:f.right)==null?void 0:m.id)&&((g=E.gestures)==null||g.push(O));let R=[],F=[],_=O=>{O&&O.length===4&&(R.push(O[0],O[0]+O[2]),F.push(O[1],O[1]+O[3]))};_((y=E.face)==null?void 0:y.box),_((x=E.body)==null?void 0:x.box),_((b=(A=E.hands)==null?void 0:A.left)==null?void 0:b.box),_((C=(v=E.hands)==null?void 0:v.right)==null?void 0:C.box);let P=Math.min(...R),T=Math.min(...F);E.box=[P,T,Math.max(...R)-P,Math.max(...F)-T],r&&r[1]&&r[2]&&(E.boxRaw=[E.box[0]/r[2],E.box[1]/r[1],E.box[2]/r[2],E.box[3]/r[1]]),o.push(E)}return o}var q0=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,X0=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function q1e(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(q0);break;case"body":case"full":n=await t(X0);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function X1e(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+q0;break;case"full":case"body":n="data:image/jpeg;base64,"+X0;break;default:n=null}let s;if(typeof Image!="undefined")s=new Image;else if(he.Image)s=new he.Image;else return;s.onload=async()=>{let r=Yn(s.naturalWidth,s.naturalHeight);if(!r)J("Warmup: Canvas not found"),t(void 0);else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=await e.detect(o.tensor,e.config);t(i)}},n?s.src=n:t(void 0)})}async function K1e(e){let t=r=>Buffer.from(r,"base64"),n;e.config.warmup==="face"?n=t(q0):n=t(X0);let s;if("node"in Ve){let r=(void 0).decodeJpeg(n),a=r.expandDims(0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&J("Warmup tfjs-node not loaded");return s}async function iE(e,t){let n=ie();if(e.state="warmup",t&&(e.config=Rn(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none")return{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:ie(),persons:[],error:null};let s;return new Promise(async r=>{typeof createImageBitmap=="function"?s=await q1e(e):typeof Image!="undefined"||he.Canvas!==void 0?s=await X1e(e):s=await K1e(e);let a=ie();e.config.debug&&J("Warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),r(s)})}var jc,eh,th,K0,lE=class{constructor(t){fe(this,"version");fe(this,"config");fe(this,"result");fe(this,"state");fe(this,"process");fe(this,"tf");fe(this,"env");fe(this,"draw");fe(this,"models");fe(this,"events");fe(this,"faceTriangulation");fe(this,"faceUVMap");fe(this,"performance");ld(this,jc,void 0);ld(this,eh,void 0);ld(this,th,void 0);fe(this,"gl");fe(this,"analyze",(...t)=>{if(!id(this,eh))return;let n=this.tf.engine().state.numTensors,s=id(this,jc);ud(this,jc,n);let r=n-s;r!==0&&J(...t,r)});ld(this,K0,t=>{if(!id(this,th))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof nt))return"input must be a tensor";try{this.tf.getBackend()}catch(n){return"backend not loaded"}return null});fe(this,"similarity",rE);fe(this,"distance",j0);fe(this,"match",aE);fe(this,"emit",t=>{var n;this.events&&this.events.dispatchEvent&&((n=this.events)==null||n.dispatchEvent(new Event(t)))});this.env=he,Ra.wasmPath=Up["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${ay}/dist/`,Ra.modelBasePath=he.browser?"../models/":"file://models/",Ra.backend=he.browser?"humangl":"tensorflow",this.version=ob,Object.defineProperty(this,"version",{value:ob}),this.config=JSON.parse(JSON.stringify(Ra)),Object.seal(this.config),t&&(this.config=Rn(this.config,t)),this.tf=Ve,this.state="idle",ud(this,jc,0),ud(this,eh,!1),ud(this,th,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new w5,this.draw={options:va,canvas:(n,s)=>XN(n,s),face:(n,s,r)=>T5(n,s,r),body:(n,s,r)=>N5(n,s,r),hand:(n,s,r)=>E5(n,s,r),gesture:(n,s,r)=>C5(n,s,r),object:(n,s,r)=>R5(n,s,r),person:(n,s,r)=>qN(n,s,r),all:(n,s,r)=>KN(n,s,r)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=z8,this.faceUVMap=L8,this.gl=_t,this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(Ra)),this.config.backend=t}validate(t){return w2(Ra,t||this.config)}now(){return ie()}image(t,n=!0){return Pc(t,this.config,n)}async segmentation(t,n){return zN(t,n,this.config)}enhance(t){return Gb(t)}compare(t,n){return TT(this.config,t,n)}async init(){await H0(this,!0),await this.tf.ready()}async load(t){this.state="load";let n=ie(),s=Object.values(this.models).filter(o=>o).length;t&&(this.config=Rn(this.config,t)),this.env.initial&&(this.config.debug&&J(`version: ${this.version}`),this.config.debug&&J(`tfjs version: ${this.tf.version["tfjs-core"]}`),await H0(this)||J("error: backend check failed"),await Bu(),this.env.browser&&(this.config.debug&&J("configuration:",this.config),this.config.debug&&J("environment:",this.env),this.config.debug&&J("tf flags:",this.tf.ENV.flags))),await BN(this),this.env.initial&&this.config.debug&&J("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(o=>o).length!==s&&(await WN(this),this.emit("load"));let a=Math.trunc(ie()-n);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(t=this.result){return nE(t,this.config)}async warmup(t){let n=ie(),s=await iE(this,t),r=ie();return this.performance.warmup=Math.trunc(r-n),s}async profile(t,n){let s=await this.tf.profile(()=>this.detect(t,n)),r={};for(let i of s.kernels)r[i.name]?r[i.name]+=i.kernelTimeMs:r[i.name]=i.kernelTimeMs;let a=[];Object.entries(r).forEach(i=>a.push({name:i[0],ms:i[1]})),a.sort((i,l)=>l.ms-i.ms),a.length=20;let o={};for(let i of a)o[i.name]=i.ms;return o}async detect(t,n){return this.state="detect",new Promise(async s=>{var g,y,x,A,b,v,C,I,E,R,F,_,P,T,O,G,K,z,j,W,Q,ne;this.state="config";let r;this.config=Rn(this.config,n),this.state="check";let a=id(this,K0).call(this,t);a&&(J(a,t),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:a}));let o=ie();await H0(this),await this.load(),r=ie(),this.state="image";let i=await Pc(t,this.config);if(this.process=i,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ie()-r):Math.trunc(ie()-r),this.analyze("Get Image:"),!i.tensor){this.config.debug&&J("could not convert input to tensor"),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),r=ie(),this.config.skipAllowed=await CT(this.config,i.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ie()-r):Math.trunc(ie()-r),this.analyze("Check Changed:");let l=[],c=[],u=[],d=[];this.state="detect:face",this.config.async?(l=this.config.face.enabled?D5(this,i.tensor):[],this.performance.face&&delete this.performance.face):(r=ie(),l=this.config.face.enabled?await D5(this,i.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(l=await l),this.analyze("Start Body:"),this.state="detect:body";let p=this.config.body.maxDetected===-1?Rn(this.config,{body:{maxDetected:this.config.face.enabled?1*l.length:1}}):this.config;this.config.async?(((g=this.config.body.modelPath)==null?void 0:g.includes("posenet"))?c=this.config.body.enabled?x5(i.tensor,p):[]:((y=this.config.body.modelPath)==null?void 0:y.includes("blazepose"))?c=this.config.body.enabled?Nb(i.tensor,p):[]:((x=this.config.body.modelPath)==null?void 0:x.includes("efficientpose"))?c=this.config.body.enabled?Fb(i.tensor,p):[]:((A=this.config.body.modelPath)==null?void 0:A.includes("movenet"))&&(c=this.config.body.enabled?d5(i.tensor,p):[]),this.performance.body&&delete this.performance.body):(r=ie(),((b=this.config.body.modelPath)==null?void 0:b.includes("posenet"))?c=this.config.body.enabled?await x5(i.tensor,p):[]:((v=this.config.body.modelPath)==null?void 0:v.includes("blazepose"))?c=this.config.body.enabled?await Nb(i.tensor,p):[]:((C=this.config.body.modelPath)==null?void 0:C.includes("efficientpose"))?c=this.config.body.enabled?await Fb(i.tensor,p):[]:((I=this.config.body.modelPath)==null?void 0:I.includes("movenet"))&&(c=this.config.body.enabled?await d5(i.tensor,p):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let h=this.config.hand.maxDetected===-1?Rn(this.config,{hand:{maxDetected:this.config.face.enabled?2*l.length:1}}):this.config;this.config.async?(((R=(E=this.config.hand.detector)==null?void 0:E.modelPath)==null?void 0:R.includes("handdetect"))?u=this.config.hand.enabled?Qb(i.tensor,h):[]:((_=(F=this.config.hand.detector)==null?void 0:F.modelPath)==null?void 0:_.includes("handtrack"))&&(u=this.config.hand.enabled?s5(i.tensor,h):[]),this.performance.hand&&delete this.performance.hand):(r=ie(),((T=(P=this.config.hand.detector)==null?void 0:P.modelPath)==null?void 0:T.includes("handdetect"))?u=this.config.hand.enabled?await Qb(i.tensor,h):[]:((G=(O=this.config.hand.detector)==null?void 0:O.modelPath)==null?void 0:G.includes("handtrack"))&&(u=this.config.hand.enabled?await s5(i.tensor,h):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?(((K=this.config.object.modelPath)==null?void 0:K.includes("nanodet"))?d=this.config.object.enabled?h5(i.tensor,this.config):[]:((z=this.config.object.modelPath)==null?void 0:z.includes("centernet"))&&(d=this.config.object.enabled?_b(i.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(r=ie(),((j=this.config.object.modelPath)==null?void 0:j.includes("nanodet"))?d=this.config.object.enabled?await h5(i.tensor,this.config):[]:((W=this.config.object.modelPath)==null?void 0:W.includes("centernet"))&&(d=this.config.object.enabled?await _b(i.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([l,c,u,d]=await Promise.all([l,c,u,d])),this.state="detect:gesture";let f=[];this.config.gesture.enabled&&(r=ie(),f=[...QN(l),...JN(c),...tE(u),...eE(l)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ie()-o):Math.trunc(ie()-o);let m=((ne=(Q=this.process)==null?void 0:Q.tensor)==null?void 0:ne.shape)||[];this.result={face:l,body:c,hand:u,gesture:f,object:d,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return oE(l,c,u,f,m)}},te(i.tensor),this.emit("detect"),this.state="idle",s(this.result)})}};jc=new WeakMap,eh=new WeakMap,th=new WeakMap,K0=new WeakMap;return cR(Y1e);})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
