/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var Human=(()=>{var h2=Object.defineProperty;var LN=(e,t,n)=>t in e?h2(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var BN=e=>h2(e,"__esModule",{value:!0});var Oa=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof require!="undefined"?require:t)[n]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var Bc=(e,t)=>{BN(e);for(var n in t)h2(e,n,{get:t[n],enumerable:!0})};var he=(e,t,n)=>(LN(e,typeof t!="symbol"?t+"":t,n),n),_5=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var Wc=(e,t,n)=>(_5(e,t,"read from private field"),n?n.call(e):t.get(e)),Vc=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},Uc=(e,t,n,s)=>(_5(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);var U2e={};Bc(U2e,{Env:()=>f0,Human:()=>HT,Models:()=>Vp,default:()=>HT,defaults:()=>Ma,env:()=>xe});function lt(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: ${r} expecting json file`);return r}function oe(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}var We=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function f2(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")f2(e[r],t[r],r,s);else{let a=e&&typeof e[r]!="undefined";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&oe("invalid configuration",s),s}function Pn(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=Pn(a,o):n[r]=o}),n),{})}var Ma={backend:"",modelBasePath:"",wasmPath:"",debug:!0,async:!0,warmup:"full",cacheSensitivity:.75,skipFrame:!1,filter:{enabled:!0,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:11,minConfidence:.2,iouThreshold:.1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:12,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:13,minConfidence:.1},antispoof:{enabled:!1,skipFrames:14,modelPath:"antispoof.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",detector:{modelPath:""},maxDetected:-1,minConfidence:.3,skipFrames:1},hand:{enabled:!0,rotation:!0,skipFrames:2,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handskeleton.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:15},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var Rl={};Bc(Rl,{Abs:()=>hi,Acos:()=>Kl,Acosh:()=>Zl,AdadeltaOptimizer:()=>Uf,AdagradOptimizer:()=>Gf,AdamOptimizer:()=>Hf,AdamaxOptimizer:()=>jf,Add:()=>Er,AddN:()=>Ba,All:()=>Yl,Any:()=>Jl,ArgMax:()=>Wa,ArgMin:()=>Ql,Asin:()=>eu,Asinh:()=>tu,Atan:()=>nu,Atan2:()=>ru,Atanh:()=>su,AvgPool:()=>Va,AvgPool3D:()=>Xc,AvgPool3DGrad:()=>Ih,AvgPoolGrad:()=>kh,BackendWasm:()=>HC,BatchMatMul:()=>Ua,BatchToSpaceND:()=>fi,Bincount:()=>Sh,BroadcastArgs:()=>Ch,BroadcastTo:()=>J5,Callback:()=>Vk,CallbackList:()=>Fw,Cast:()=>Ga,Ceil:()=>Zr,ClipByValue:()=>Yr,Complex:()=>Kc,ComplexAbs:()=>Zc,Concat:()=>mi,Conv2D:()=>Ha,Conv2DBackpropFilter:()=>Th,Conv2DBackpropInput:()=>ja,Conv3D:()=>Yc,Conv3DBackpropFilterV2:()=>Nh,Conv3DBackpropInputV2:()=>Eh,Cos:()=>qa,Cosh:()=>Xa,CropAndResize:()=>yi,Cumsum:()=>gi,CustomCallback:()=>Ow,DataStorage:()=>Hc,DenseBincount:()=>Rh,DepthToSpace:()=>Ai,DepthwiseConv2dNative:()=>Ka,DepthwiseConv2dNativeBackpropFilter:()=>$h,DepthwiseConv2dNativeBackpropInput:()=>Dh,Diag:()=>_h,Dilation2D:()=>Jc,Dilation2DBackpropFilter:()=>Ph,Dilation2DBackpropInput:()=>Fh,ENV:()=>Nr,EarlyStopping:()=>Gk,Einsum:()=>Qc,Elu:()=>Ya,EluGrad:()=>Oh,Environment:()=>Z5,Equal:()=>Ja,Erf:()=>au,Exp:()=>Jr,ExpandDims:()=>xi,Expm1:()=>Qa,FFT:()=>Mh,Fill:()=>ou,FlipLeftRight:()=>bi,Floor:()=>Qr,FloorDiv:()=>eo,FromPixels:()=>ld,FusedBatchNorm:()=>to,FusedConv2D:()=>Co,FusedDepthwiseConv2D:()=>To,GPGPUContext:()=>jm,GatherNd:()=>wi,GatherV2:()=>vi,GraphModel:()=>wI,Greater:()=>no,GreaterEqual:()=>ea,History:()=>Pw,IFFT:()=>zh,Identity:()=>so,Imag:()=>ed,InputSpec:()=>nn,IsFinite:()=>iu,IsInf:()=>lu,IsNan:()=>uu,KernelBackend:()=>jl,LRN:()=>nd,LRNGrad:()=>Bh,LayerVariable:()=>Ew,LayersModel:()=>ba,LeakyRelu:()=>ki,Less:()=>ro,LessEqual:()=>ao,LinSpace:()=>Lh,Log:()=>ta,Log1p:()=>cu,LogSoftmax:()=>Q5,LogicalAnd:()=>Ii,LogicalNot:()=>du,LogicalOr:()=>td,MathBackendWebGL:()=>uc,Max:()=>oo,MaxPool:()=>io,MaxPool3D:()=>sd,MaxPool3DGrad:()=>Vh,MaxPoolGrad:()=>Wh,MaxPoolWithArgmax:()=>Uh,Maximum:()=>na,Mean:()=>lo,Min:()=>uo,Minimum:()=>sa,MirrorPad:()=>co,Mod:()=>pu,MomentumOptimizer:()=>qf,Multinomial:()=>Gh,Multiply:()=>ra,Neg:()=>Si,NonMaxSuppressionV3:()=>Ci,NonMaxSuppressionV4:()=>hu,NonMaxSuppressionV5:()=>Ti,NotEqual:()=>po,OP_SCOPE_SUFFIX:()=>f3,OneHot:()=>Ei,OnesLike:()=>Ni,Optimizer:()=>ya,Pack:()=>Ri,PadV2:()=>ho,Pool:()=>OE,Pow:()=>fo,Prelu:()=>mo,Prod:()=>$i,RMSPropOptimizer:()=>Xf,RNN:()=>Br,Range:()=>fu,Rank:()=>S2,Real:()=>rd,RealDiv:()=>Za,Reciprocal:()=>mu,Reduction:()=>jn,Relu:()=>go,Relu6:()=>Ao,Reshape:()=>Di,ResizeBilinear:()=>yo,ResizeBilinearGrad:()=>jh,ResizeNearestNeighbor:()=>gu,ResizeNearestNeighborGrad:()=>Hh,Reverse:()=>_i,RotateWithOffset:()=>ji,Round:()=>Fi,Rsqrt:()=>aa,SGDOptimizer:()=>Ld,ScatterNd:()=>Pi,Select:()=>Oi,Selu:()=>yu,Sequential:()=>Ku,Sigmoid:()=>oa,Sign:()=>Au,Sin:()=>xo,Sinh:()=>zi,Slice:()=>Mi,Softmax:()=>vo,Softplus:()=>xu,SpaceToBatchND:()=>Li,SparseFillEmptyRows:()=>qh,SparseReshape:()=>Xh,SparseSegmentMean:()=>Kh,SparseSegmentSum:()=>Zh,SparseToDense:()=>ad,SplitV:()=>Bi,Sqrt:()=>ia,Square:()=>bu,SquaredDifference:()=>la,Step:()=>Io,StridedSlice:()=>Wi,StringNGrams:()=>od,StringSplit:()=>Yh,StringToHashBucketFast:()=>Jh,Sub:()=>ua,Sum:()=>bo,SymbolicTensor:()=>Ar,Tan:()=>Vi,Tanh:()=>wo,Tensor:()=>Ze,TensorBuffer:()=>jt,Tile:()=>ca,TopK:()=>vu,Transform:()=>Ui,Transpose:()=>ko,Unique:()=>Qh,Unpack:()=>Gi,UnsortedSegmentSum:()=>id,Variable:()=>gd,ZerosLike:()=>Hi,_FusedMatMul:()=>So,abs:()=>en,acos:()=>e1,acosh:()=>t1,add:()=>le,addN:()=>pf,all:()=>hf,any:()=>wd,argMax:()=>Ds,argMin:()=>n1,asin:()=>s1,asinh:()=>r1,atan:()=>a1,atan2:()=>o1,atanh:()=>i1,avgPool:()=>Id,avgPool3d:()=>c1,backend:()=>Dr,backend_util:()=>N,basicLSTMCell:()=>g$,batchNorm:()=>nl,batchNorm2d:()=>sv,batchNorm3d:()=>rv,batchNorm4d:()=>av,batchToSpaceND:()=>Sd,bincount:()=>d1,booleanMaskAsync:()=>kF,broadcastArgs:()=>ov,broadcastTo:()=>$u,browser:()=>Xs,buffer:()=>Fe,callbacks:()=>MV,cast:()=>de,ceil:()=>p1,clipByValue:()=>ls,clone:()=>cr,complex:()=>Eo,concat:()=>kt,concat1d:()=>iv,concat2d:()=>Du,concat3d:()=>lv,concat4d:()=>uv,constraints:()=>lw,conv1d:()=>mf,conv2d:()=>fa,conv2dTranspose:()=>gf,conv3d:()=>f1,conv3dTranspose:()=>dv,copyRegisteredKernels:()=>LE,cos:()=>Cd,cosh:()=>yf,cosineWindow:()=>W1,cumsum:()=>Af,customGrad:()=>Fr,data:()=>kI,denseBincount:()=>pv,deprecationWarn:()=>J2,depthToSpace:()=>m1,depthwiseConv2d:()=>_u,deregisterOp:()=>LV,device_util:()=>Iu,diag:()=>j$,dilation2d:()=>g1,disableDeprecationWarnings:()=>DR,dispose:()=>Q,disposeVariables:()=>_R,div:()=>fe,divNoNan:()=>y1,dot:()=>hv,dropout:()=>Fv,einsum:()=>fv,elu:()=>Fu,enableDebugMode:()=>$R,enableProdMode:()=>J3,enclosingPowerOfTwo:()=>Pv,engine:()=>os,env:()=>K,equal:()=>ys,erf:()=>A1,exp:()=>As,expandDims:()=>Xt,expm1:()=>x1,eye:()=>b1,fft:()=>Od,fill:()=>Pu,findBackend:()=>Q2,findBackendFactory:()=>MR,floor:()=>Ou,floorDiv:()=>df,forceHalfFloat:()=>ZS,fused:()=>Oo,gather:()=>sl,gatherND:()=>_v,gather_util:()=>H2,getBackend:()=>dr,getGradient:()=>v2,getKernel:()=>ef,getKernelsForBackend:()=>da,getThreadsCount:()=>vde,gpgpu_util:()=>IS,grad:()=>wD,grads:()=>kD,greater:()=>us,greaterEqual:()=>Fo,ifft:()=>Wu,imag:()=>xf,image:()=>$e,inTopKAsync:()=>FF,initializers:()=>mw,input:()=>ak,io:()=>as,irfft:()=>_f,isFinite:()=>mv,isInf:()=>gv,isNaN:()=>v1,keep:()=>bn,kernel_impls:()=>Zs,layers:()=>Cw,leakyRelu:()=>Td,less:()=>bf,lessEqual:()=>Po,linalg:()=>qv,linspace:()=>yv,loadGraphModel:()=>at,loadLayersModel:()=>qB,localResponseNormalization:()=>w1,log:()=>xs,log1p:()=>Nd,logSigmoid:()=>xv,logSoftmax:()=>wf,logSumExp:()=>S1,logicalAnd:()=>Ks,logicalNot:()=>Ed,logicalOr:()=>kf,logicalXor:()=>kv,losses:()=>gO,matMul:()=>Xe,math:()=>D3,max:()=>Gn,maxPool:()=>Rd,maxPool3d:()=>C1,maxPoolWithArgmax:()=>Iv,maximum:()=>Pr,mean:()=>Bt,memory:()=>uf,meshgrid:()=>HD,metrics:()=>Lk,min:()=>$d,minimum:()=>Mu,mirrorPad:()=>T1,mod:()=>N1,model:()=>HB,models:()=>Bk,moments:()=>If,movingAverage:()=>CF,mul:()=>B,multiRNNCell:()=>QD,multinomial:()=>Sv,neg:()=>Ft,nextFrame:()=>Xv,norm:()=>Mf,notEqual:()=>ol,oneHot:()=>Nu,ones:()=>bs,onesLike:()=>vs,op:()=>U,outerProduct:()=>r_,pad:()=>Fs,pad1d:()=>i_,pad2d:()=>u_,pad3d:()=>d_,pad4d:()=>h_,pool:()=>Cv,pow:()=>ma,prelu:()=>_d,print:()=>C3,prod:()=>Sf,profile:()=>FR,rand:()=>w_,randomGamma:()=>C_,randomNormal:()=>Tv,randomUniform:()=>zu,range:()=>Lu,ready:()=>cf,real:()=>Fd,reciprocal:()=>$1,registerBackend:()=>Qi,registerCallbackConstructor:()=>XB,registerGradient:()=>e3,registerKernel:()=>pa,registerOp:()=>zV,regularizers:()=>Wk,relu:()=>pr,relu6:()=>Cf,removeBackend:()=>OR,reshape:()=>G,reverse:()=>ws,reverse1d:()=>P_,reverse2d:()=>M_,reverse3d:()=>L_,reverse4d:()=>W_,rfft:()=>Md,round:()=>Tf,rsqrt:()=>Nf,scalar:()=>Ee,scatterND:()=>Dv,scatter_util:()=>j2,selu:()=>Ef,separableConv2d:()=>D1,sequential:()=>jB,serialization:()=>ue,setBackend:()=>Q3,setPlatform:()=>zR,setThreadsCount:()=>bde,setWasmPath:()=>xde,setWasmPaths:()=>qC,setWebGLContext:()=>Mm,setdiff1dAsync:()=>Nv,sigmoid:()=>is,sign:()=>_1,signal:()=>mO,sin:()=>Rf,sinh:()=>$f,slice:()=>De,slice1d:()=>Df,slice2d:()=>F1,slice3d:()=>Bu,slice4d:()=>Pd,slice_util:()=>Qt,softmax:()=>il,softplus:()=>rl,spaceToBatchND:()=>Dd,sparse:()=>zd,sparseToDense:()=>B1,spectral:()=>fO,split:()=>vn,sqrt:()=>Nn,square:()=>vt,squaredDifference:()=>Ff,squeeze:()=>dt,stack:()=>En,step:()=>Vu,stridedSlice:()=>P1,string:()=>Vf,sub:()=>Ae,sum:()=>Ie,sumOutType:()=>yd,tan:()=>O1,tanh:()=>tl,tensor:()=>qt,tensor1d:()=>tn,tensor2d:()=>hr,tensor3d:()=>_3,tensor4d:()=>hF,tensor5d:()=>fF,tensor6d:()=>mF,tensor_util:()=>lr,test_util:()=>K3,tidy:()=>j,tile:()=>_s,time:()=>PR,topk:()=>M1,train:()=>ul,transpose:()=>et,truncatedNormal:()=>Pf,unique:()=>Of,unregisterGradient:()=>zE,unregisterKernel:()=>ME,unsortedSegmentSum:()=>z1,unstack:()=>Hn,upcastType:()=>Mn,util:()=>v,valueAndGrad:()=>ID,valueAndGrads:()=>SD,variable:()=>Ev,variableGrads:()=>Av,version:()=>Gge,version_converter:()=>VU,version_core:()=>vd,version_layers:()=>wy,version_wasm:()=>wde,version_webgl:()=>eQ,webgl:()=>tQ,webgl_util:()=>X7,webgpu:()=>J6,where:()=>zn,whereAsync:()=>L1,zeros:()=>Kt,zerosLike:()=>tt});var WN=Object.create,Ah=Object.defineProperty,VN=Object.getOwnPropertyDescriptor,UN=Object.getOwnPropertyNames,GN=Object.getPrototypeOf,HN=Object.prototype.hasOwnProperty,F5=e=>Ah(e,"__esModule",{value:!0}),Hl=(e=>typeof Oa!="undefined"?Oa:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof Oa!="undefined"?Oa:t)[n]}):e)(function(e){if(typeof Oa!="undefined")return Oa.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),_t=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},ze=(e,t)=>{F5(e);for(var n in t)Ah(e,n,{get:t[n],enumerable:!0})},jN=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of UN(t))!HN.call(e,s)&&s!=="default"&&Ah(e,s,{get:()=>t[s],enumerable:!(n=VN(t,s))||n.enumerable});return e},ci=e=>jN(F5(Ah(e!=null?WN(GN(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),qN=_t({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(D){}function s(D,T,O){this.low=D|0,this.high=T|0,this.unsigned=!!O}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(D){return(D&&D.__isLong__)===!0}s.isLong=r;var a={},o={};function i(D,T){var O,V,H;return T?(D>>>=0,(H=0<=D&&D<256)&&(V=o[D],V)?V:(O=c(D,(D|0)<0?-1:0,!0),H&&(o[D]=O),O)):(D|=0,(H=-128<=D&&D<128)&&(V=a[D],V)?V:(O=c(D,D<0?-1:0,!1),H&&(a[D]=O),O))}s.fromInt=i;function l(D,T){if(isNaN(D))return T?b:x;if(T){if(D<0)return b;if(D>=g)return R}else{if(D<=-y)return P;if(D+1>=y)return E}return D<0?l(-D,T).neg():c(D%m|0,D/m|0,T)}s.fromNumber=l;function c(D,T,O){return new s(D,T,O)}s.fromBits=c;var u=Math.pow;function d(D,T,O){if(D.length===0)throw Error("empty string");if(D==="NaN"||D==="Infinity"||D==="+Infinity"||D==="-Infinity")return x;if(typeof T=="number"?(O=T,T=!1):T=!!T,O=O||10,O<2||36<O)throw RangeError("radix");var V;if((V=D.indexOf("-"))>0)throw Error("interior hyphen");if(V===0)return d(D.substring(1),T,O).neg();for(var H=l(u(O,8)),z=x,X=0;X<D.length;X+=8){var ee=Math.min(8,D.length-X),Y=parseInt(D.substring(X,X+ee),O);if(ee<8){var se=l(u(O,ee));z=z.mul(se).add(l(Y))}else z=z.mul(H),z=z.add(l(Y))}return z.unsigned=T,z}s.fromString=d;function p(D,T){return typeof D=="number"?l(D,T):typeof D=="string"?d(D,T):c(D.low,D.high,typeof T=="boolean"?T:D.unsigned)}s.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,y=g/2,A=i(f),x=i(0);s.ZERO=x;var b=i(0,!0);s.UZERO=b;var w=i(1);s.ONE=w;var k=i(1,!0);s.UONE=k;var S=i(-1);s.NEG_ONE=S;var E=c(4294967295|0,2147483647|0,!1);s.MAX_VALUE=E;var R=c(4294967295|0,4294967295|0,!0);s.MAX_UNSIGNED_VALUE=R;var P=c(0,2147483648|0,!1);s.MIN_VALUE=P;var $=s.prototype;$.toInt=function(){return this.unsigned?this.low>>>0:this.low},$.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},$.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(P)){var O=l(T),V=this.div(O),H=V.mul(O).sub(this);return V.toString(T)+H.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var z=l(u(T,6),this.unsigned),X=this,ee="";;){var Y=X.div(z),se=X.sub(Y.mul(z)).toInt()>>>0,ne=se.toString(T);if(X=Y,X.isZero())return ne+ee;for(;ne.length<6;)ne="0"+ne;ee=""+ne+ee}},$.getHighBits=function(){return this.high},$.getHighBitsUnsigned=function(){return this.high>>>0},$.getLowBits=function(){return this.low},$.getLowBitsUnsigned=function(){return this.low>>>0},$.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,O=31;O>0&&(T&1<<O)==0;O--);return this.high!=0?O+33:O+1},$.isZero=function(){return this.high===0&&this.low===0},$.eqz=$.isZero,$.isNegative=function(){return!this.unsigned&&this.high<0},$.isPositive=function(){return this.unsigned||this.high>=0},$.isOdd=function(){return(this.low&1)==1},$.isEven=function(){return(this.low&1)==0},$.equals=function(T){return r(T)||(T=p(T)),this.unsigned!==T.unsigned&&this.high>>>31==1&&T.high>>>31==1?!1:this.high===T.high&&this.low===T.low},$.eq=$.equals,$.notEquals=function(T){return!this.eq(T)},$.neq=$.notEquals,$.ne=$.notEquals,$.lessThan=function(T){return this.comp(T)<0},$.lt=$.lessThan,$.lessThanOrEqual=function(T){return this.comp(T)<=0},$.lte=$.lessThanOrEqual,$.le=$.lessThanOrEqual,$.greaterThan=function(T){return this.comp(T)>0},$.gt=$.greaterThan,$.greaterThanOrEqual=function(T){return this.comp(T)>=0},$.gte=$.greaterThanOrEqual,$.ge=$.greaterThanOrEqual,$.compare=function(T){if(r(T)||(T=p(T)),this.eq(T))return 0;var O=this.isNegative(),V=T.isNegative();return O&&!V?-1:!O&&V?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},$.comp=$.compare,$.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add(w)},$.neg=$.negate,$.add=function(T){r(T)||(T=p(T));var O=this.high>>>16,V=this.high&65535,H=this.low>>>16,z=this.low&65535,X=T.high>>>16,ee=T.high&65535,Y=T.low>>>16,se=T.low&65535,ne=0,J=0,te=0,ce=0;return ce+=z+se,te+=ce>>>16,ce&=65535,te+=H+Y,J+=te>>>16,te&=65535,J+=V+ee,ne+=J>>>16,J&=65535,ne+=O+X,ne&=65535,c(te<<16|ce,ne<<16|J,this.unsigned)},$.subtract=function(T){return r(T)||(T=p(T)),this.add(T.neg())},$.sub=$.subtract,$.multiply=function(T){if(this.isZero())return x;if(r(T)||(T=p(T)),n){var O=n.mul(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}if(T.isZero())return x;if(this.eq(P))return T.isOdd()?P:x;if(T.eq(P))return this.isOdd()?P:x;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(A)&&T.lt(A))return l(this.toNumber()*T.toNumber(),this.unsigned);var V=this.high>>>16,H=this.high&65535,z=this.low>>>16,X=this.low&65535,ee=T.high>>>16,Y=T.high&65535,se=T.low>>>16,ne=T.low&65535,J=0,te=0,ce=0,pe=0;return pe+=X*ne,ce+=pe>>>16,pe&=65535,ce+=z*ne,te+=ce>>>16,ce&=65535,ce+=X*se,te+=ce>>>16,ce&=65535,te+=H*ne,J+=te>>>16,te&=65535,te+=z*se,J+=te>>>16,te&=65535,te+=X*Y,J+=te>>>16,te&=65535,J+=V*ne+H*se+z*Y+X*ee,J&=65535,c(ce<<16|pe,J<<16|te,this.unsigned)},$.mul=$.multiply,$.divide=function(T){if(r(T)||(T=p(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var O=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:x;var V,H,z;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return b;if(T.gt(this.shru(1)))return k;z=b}else{if(this.eq(P)){if(T.eq(w)||T.eq(S))return P;if(T.eq(P))return w;var X=this.shr(1);return V=X.div(T).shl(1),V.eq(x)?T.isNegative()?w:S:(H=this.sub(T.mul(V)),z=V.add(H.div(T)),z)}else if(T.eq(P))return this.unsigned?b:x;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();z=x}for(H=this;H.gte(T);){V=Math.max(1,Math.floor(H.toNumber()/T.toNumber()));for(var ee=Math.ceil(Math.log(V)/Math.LN2),Y=ee<=48?1:u(2,ee-48),se=l(V),ne=se.mul(T);ne.isNegative()||ne.gt(H);)V-=Y,se=l(V,this.unsigned),ne=se.mul(T);se.isZero()&&(se=w),z=z.add(se),H=H.sub(ne)}return z},$.div=$.divide,$.modulo=function(T){if(r(T)||(T=p(T)),n){var O=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},$.mod=$.modulo,$.rem=$.modulo,$.not=function(){return c(~this.low,~this.high,this.unsigned)},$.and=function(T){return r(T)||(T=p(T)),c(this.low&T.low,this.high&T.high,this.unsigned)},$.or=function(T){return r(T)||(T=p(T)),c(this.low|T.low,this.high|T.high,this.unsigned)},$.xor=function(T){return r(T)||(T=p(T)),c(this.low^T.low,this.high^T.high,this.unsigned)},$.shiftLeft=function(T){return r(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?c(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):c(0,this.low<<T-32,this.unsigned)},$.shl=$.shiftLeft,$.shiftRight=function(T){return r(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?c(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):c(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},$.shr=$.shiftRight,$.shiftRightUnsigned=function(T){if(r(T)&&(T=T.toInt()),T&=63,T===0)return this;var O=this.high;if(T<32){var V=this.low;return c(V>>>T|O<<32-T,O>>>T,this.unsigned)}else return T===32?c(O,0,this.unsigned):c(O>>>T-32,0,this.unsigned)},$.shru=$.shiftRightUnsigned,$.shr_u=$.shiftRightUnsigned,$.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},$.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},$.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},$.toBytesLE=function(){var T=this.high,O=this.low;return[O&255,O>>>8&255,O>>>16&255,O>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},$.toBytesBE=function(){var T=this.high,O=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,O>>>24,O>>>16&255,O>>>8&255,O&255]},s.fromBytes=function(T,O,V){return V?s.fromBytesLE(T,O):s.fromBytesBE(T,O)},s.fromBytesLE=function(T,O){return new s(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,O)},s.fromBytesBE=function(T,O){return new s(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],O)}}}),XN=_t({"(disabled):node_modules/.pnpm/node-fetch@2.6.5/node_modules/node-fetch/browser.js"(){}}),KN=_t({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(c){var u=this,d=l();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(c),u.s0<0&&(u.s0+=1),u.s1-=d(c),u.s1<0&&(u.s1+=1),u.s2-=d(c),u.s2<0&&(u.s2+=1),d=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var d=new a(c),p=u&&u.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function l(){var c=4022871197,u=function(d){d=d.toString();for(var p=0;p<d.length;p++){c+=d.charCodeAt(p);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),ZN=_t({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),YN=_t({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,d==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),JN=_t({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.x,p=c.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,c.i=p+1&7,f};function u(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}u(c,l)}function o(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.x&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),QN=_t({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.w,p=c.X,h=c.i,f,m;return c.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,c.i=h,m+(d^d>>>16)|0};function u(d,p){var h,f,m,g,y,A=[],x=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,x=Math.max(x,p.length)),m=0,g=-32;g<x;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=A[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(A[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=A[m+34&127],h=A[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,A[m]=f^h;d.w=y,d.X=A,d.i=m}u(c,l)}function o(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.X&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),eE=_t({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.b,h=c.c,f=c.d,m=c.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,c.b=p=p<<20^p>>>12^h,c.c=h=h-f|0,c.d=f<<16^h>>>16^m,c.a=m-p|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var d=0;d<u.length+20;d++)c.b^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),P5=_t({"(disabled):crypto"(){}}),tE=_t({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s){var r=this,a=256,o=6,i=52,l="random",c=s.pow(a,o),u=s.pow(2,i),d=u*2,p=a-1,h;function f(w,k,S){var E=[];k=k==!0?{entropy:!0}:k||{};var R=A(y(k.entropy?[w,b(n)]:w==null?x():w,3),E),P=new m(E),$=function(){for(var D=P.g(o),T=c,O=0;D<u;)D=(D+O)*a,T*=a,O=P.g(1);for(;D>=d;)D/=2,T/=2,O>>>=1;return(D+O)/T};return $.int32=function(){return P.g(4)|0},$.quick=function(){return P.g(4)/4294967296},$.double=$,A(b(P.S),n),(k.pass||S||function(D,T,O,V){return V&&(V.S&&g(V,P),D.state=function(){return g(P,{})}),O?(s[l]=D,T):D})($,R,"global"in k?k.global:this==s,k.state)}s["seed"+l]=f;function m(w){var k,S=w.length,E=this,R=0,P=E.i=E.j=0,$=E.S=[];for(S||(w=[S++]);R<a;)$[R]=R++;for(R=0;R<a;R++)$[R]=$[P=p&P+w[R%S]+(k=$[R])],$[P]=k;(E.g=function(D){for(var T,O=0,V=E.i,H=E.j,z=E.S;D--;)T=z[V=p&V+1],O=O*a+z[p&(z[V]=z[H=p&H+T])+(z[H]=T)];return E.i=V,E.j=H,O})(a)}function g(w,k){return k.i=w.i,k.j=w.j,k.S=w.S.slice(),k}function y(w,k){var S=[],E=typeof w,R;if(k&&E=="object")for(R in w)try{S.push(y(w[R],k-1))}catch(P){}return S.length?S:E=="string"?w:w+"\0"}function A(w,k){for(var S=w+"",E,R=0;R<S.length;)k[p&R]=p&(E^=k[p&R]*19)+S.charCodeAt(R++);return b(k)}function x(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(r.crypto||r.msCrypto).getRandomValues(w)),b(w)}catch(E){var k=r.navigator,S=k&&k.plugins;return[+new Date,r,S,r.screen,b(n)]}}function b(w){return String.fromCharCode.apply(0,w)}if(A(s.random(),n),typeof t=="object"&&t.exports){t.exports=f;try{h=P5()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return f})})([],Math)}}),O5=_t({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/index.js"(e,t){var n=KN(),s=ZN(),r=YN(),a=JN(),o=QN(),i=eE(),l=tE();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),nE=_t({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(c){var u=this,d=l();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(c),u.s0<0&&(u.s0+=1),u.s1-=d(c),u.s1<0&&(u.s1+=1),u.s2-=d(c),u.s2<0&&(u.s2+=1),d=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var d=new a(c),p=u&&u.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function l(){var c=4022871197,u=function(d){d=String(d);for(var p=0;p<d.length;p++){c+=d.charCodeAt(p);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),sE=_t({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),rE=_t({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,d==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),aE=_t({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.x,p=c.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,c.i=p+1&7,f};function u(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}u(c,l)}function o(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.x&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),oE=_t({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.w,p=c.X,h=c.i,f,m;return c.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,c.i=h,m+(d^d>>>16)|0};function u(d,p){var h,f,m,g,y,A=[],x=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,x=Math.max(x,p.length)),m=0,g=-32;g<x;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=A[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(A[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=A[m+34&127],h=A[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,A[m]=f^h;d.w=y,d.X=A,d.i=m}u(c,l)}function o(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.X&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),iE=_t({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.b,h=c.c,f=c.d,m=c.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,c.b=p=p<<20^p>>>12^h,c.c=h=h-f|0,c.d=f<<16^h>>>16^m,c.a=m-p|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var d=0;d<u.length+20;d++)c.b^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),lE=_t({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",c=r.pow(a,o),u=r.pow(2,i),d=u*2,p=a-1,h;function f(w,k,S){var E=[];k=k==!0?{entropy:!0}:k||{};var R=A(y(k.entropy?[w,b(s)]:w==null?x():w,3),E),P=new m(E),$=function(){for(var D=P.g(o),T=c,O=0;D<u;)D=(D+O)*a,T*=a,O=P.g(1);for(;D>=d;)D/=2,T/=2,O>>>=1;return(D+O)/T};return $.int32=function(){return P.g(4)|0},$.quick=function(){return P.g(4)/4294967296},$.double=$,A(b(P.S),s),(k.pass||S||function(D,T,O,V){return V&&(V.S&&g(V,P),D.state=function(){return g(P,{})}),O?(r[l]=D,T):D})($,R,"global"in k?k.global:this==r,k.state)}function m(w){var k,S=w.length,E=this,R=0,P=E.i=E.j=0,$=E.S=[];for(S||(w=[S++]);R<a;)$[R]=R++;for(R=0;R<a;R++)$[R]=$[P=p&P+w[R%S]+(k=$[R])],$[P]=k;(E.g=function(D){for(var T,O=0,V=E.i,H=E.j,z=E.S;D--;)T=z[V=p&V+1],O=O*a+z[p&(z[V]=z[H=p&H+T])+(z[H]=T)];return E.i=V,E.j=H,O})(a)}function g(w,k){return k.i=w.i,k.j=w.j,k.S=w.S.slice(),k}function y(w,k){var S=[],E=typeof w,R;if(k&&E=="object")for(R in w)try{S.push(y(w[R],k-1))}catch(P){}return S.length?S:E=="string"?w:w+"\0"}function A(w,k){for(var S=w+"",E,R=0;R<S.length;)k[p&R]=p&(E^=k[p&R]*19)+S.charCodeAt(R++);return b(k)}function x(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(w)),b(w)}catch(E){var k=n.navigator,S=k&&k.plugins;return[+new Date,n,S,n.screen,b(s)]}}function b(w){return String.fromCharCode.apply(0,w)}if(A(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=P5()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),M5=_t({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=nE(),s=sE(),r=rE(),a=aE(),o=oE(),i=iE(),l=lE();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),z5=_t({"(disabled):node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js"(){}}),Gc=_t({"(disabled):path"(){}}),uE=_t({"(disabled):worker_threads"(){}}),cE=_t({"(disabled):perf_hooks"(){}}),dE=_t({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.10.0_@tensorflow+tfjs-core@3.10.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return te.buffer!=$t&&Cn(te.buffer),zt}function o(){return te.buffer!=$t&&Cn(te.buffer),ns}function i(){return te.buffer!=$t&&Cn(te.buffer),Bn}function l(){return te.buffer!=$t&&Cn(te.buffer),ms}function c(){return te.buffer!=$t&&Cn(te.buffer),Rs}var u=typeof r!="undefined"?r:{},d,p;u.ready=new Promise(function(C,_){d=C,p=_});var h={},f;for(f in u)u.hasOwnProperty(f)&&(h[f]=u[f]);var m=[],g="./this.program",y=function(C,_){throw _},A=!1,x=!1,b=!1,w=!1;A=typeof window=="object",x=typeof importScripts=="function",b=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",w=!A&&!b&&!x;var k=u.ENVIRONMENT_IS_PTHREAD||!1;k&&($t=u.buffer);var S="";function E(C){return u.locateFile?u.locateFile(C,S):S+C}var R,P,$,D,T,O;if(b){x?S=Gc().dirname(S)+"/":S=__dirname+"/",R=function(_,L){return T||(T=Hl("fs")),O||(O=Gc()),_=O.normalize(_),T.readFileSync(_,L?null:"utf8")},$=function(_){var L=R(_,!0);return L.buffer||(L=new Uint8Array(L)),we(L.buffer),L},process.argv.length>1&&(g=process.argv[1].replace(/\\/g,"/")),m=process.argv.slice(2),process.on("uncaughtException",function(C){if(!(C instanceof Lc))throw C}),process.on("unhandledRejection",jr),y=function(C){process.exit(C)},u.inspect=function(){return"[Emscripten Module object]"};var V;try{V=uE()}catch(C){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),C}global.Worker=V.Worker}else w?(typeof read!="undefined"&&(R=function(_){return read(_)}),$=function(_){var L;return typeof readbuffer=="function"?new Uint8Array(readbuffer(_)):(L=read(_,"binary"),we(typeof L=="object"),L)},typeof scriptArgs!="undefined"?m=scriptArgs:typeof arguments!="undefined"&&(m=arguments),typeof quit=="function"&&(y=function(C){quit(C)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(A||x)&&(x?S=self.location.href:typeof document!="undefined"&&document.currentScript&&(S=document.currentScript.src),typeof s!="undefined"&&s&&(S=s),S.indexOf("blob:")!==0?S=S.substr(0,S.lastIndexOf("/")+1):S="",b?(R=function(_,L){return T||(T=Hl("fs")),O||(O=Gc()),_=O.normalize(_),T.readFileSync(_,L?null:"utf8")},$=function(_){var L=R(_,!0);return L.buffer||(L=new Uint8Array(L)),we(L.buffer),L}):(R=function(C){var _=new XMLHttpRequest;return _.open("GET",C,!1),_.send(null),_.responseText},x&&($=function(C){var _=new XMLHttpRequest;return _.open("GET",C,!1),_.responseType="arraybuffer",_.send(null),new Uint8Array(_.response)}),P=function(C,_,L){var Z=new XMLHttpRequest;Z.open("GET",C,!0),Z.responseType="arraybuffer",Z.onload=function(){if(Z.status==200||Z.status==0&&Z.response){_(Z.response);return}L()},Z.onerror=L,Z.send(null)}),D=function(C){document.title=C});b&&typeof performance=="undefined"&&(global.performance=cE().performance);var H=u.print||console.log.bind(console),z=u.printErr||console.warn.bind(console);for(f in h)h.hasOwnProperty(f)&&(u[f]=h[f]);h=null,u.arguments&&(m=u.arguments),u.thisProgram&&(g=u.thisProgram),u.quit&&(y=u.quit);function X(C){X.shown||(X.shown={}),X.shown[C]||(X.shown[C]=1,z(C))}var ee=Atomics.load,Y=Atomics.store,se=Atomics.compareExchange,ne;u.wasmBinary&&(ne=u.wasmBinary);var J=u.noExitRuntime||!0;typeof WebAssembly!="object"&&jr("no native wasm support detected");var te,ce,pe=!1,be;function we(C,_){C||jr("Assertion failed: "+_)}function Ce(C){var _=u["_"+C];return we(_,"Cannot call unknown function "+C+", make sure it is exported"),_}function Me(C,_,L,Z,ye){var me={string:function(Wn){var Gl=0;if(Wn!=null&&Wn!==0){var D5=(Wn.length<<2)+1;Gl=Wl(D5),ht(Wn,Gl,D5)}return Gl},array:function(Wn){var Gl=Wl(Wn.length);return bt(Wn,Gl),Gl}};function ge(Wn){return _==="string"?it(Wn):_==="boolean"?Boolean(Wn):Wn}var Te=Ce(C),gt=[],yn=0;if(Z)for(var on=0;on<Z.length;on++){var Pa=me[L[on]];Pa?(yn===0&&(yn=zc()),gt[on]=Pa(Z[on])):gt[on]=Z[on]}var Ul=Te.apply(null,gt);return Ul=ge(Ul),yn!==0&&Bl(yn),Ul}function Ge(C,_,L,Z){L=L||[];var ye=L.every(function(ge){return ge==="number"}),me=_!=="string";return me&&ye&&!Z?Ce(C):function(){return Me(C,_,L,arguments,Z)}}function Ke(C,_,L){for(var Z=_+L,ye="";!(_>=Z);){var me=C[_++];if(!me)return ye;if(!(me&128)){ye+=String.fromCharCode(me);continue}var ge=C[_++]&63;if((me&224)==192){ye+=String.fromCharCode((me&31)<<6|ge);continue}var Te=C[_++]&63;if((me&240)==224?me=(me&15)<<12|ge<<6|Te:me=(me&7)<<18|ge<<12|Te<<6|C[_++]&63,me<65536)ye+=String.fromCharCode(me);else{var gt=me-65536;ye+=String.fromCharCode(55296|gt>>10,56320|gt&1023)}}return ye}function it(C,_){return C?Ke(o(),C,_):""}function yt(C,_,L,Z){if(!(Z>0))return 0;for(var ye=L,me=L+Z-1,ge=0;ge<C.length;++ge){var Te=C.charCodeAt(ge);if(Te>=55296&&Te<=57343){var gt=C.charCodeAt(++ge);Te=65536+((Te&1023)<<10)|gt&1023}if(Te<=127){if(L>=me)break;_[L++]=Te}else if(Te<=2047){if(L+1>=me)break;_[L++]=192|Te>>6,_[L++]=128|Te&63}else if(Te<=65535){if(L+2>=me)break;_[L++]=224|Te>>12,_[L++]=128|Te>>6&63,_[L++]=128|Te&63}else{if(L+3>=me)break;_[L++]=240|Te>>18,_[L++]=128|Te>>12&63,_[L++]=128|Te>>6&63,_[L++]=128|Te&63}}return _[L]=0,L-ye}function ht(C,_,L){return yt(C,o(),_,L)}function ft(C){for(var _=0,L=0;L<C.length;++L){var Z=C.charCodeAt(L);Z>=55296&&Z<=57343&&(Z=65536+((Z&1023)<<10)|C.charCodeAt(++L)&1023),Z<=127?++_:Z<=2047?_+=2:Z<=65535?_+=3:_+=4}return _}function bt(C,_){a().set(C,_)}function wt(C,_){return C%_>0&&(C+=_-C%_),C}var $t,zt,ns,Sn,or,Bn,ms,Gs,Rs;function Cn(C){$t=C,u.HEAP8=zt=new Int8Array(C),u.HEAP16=Sn=new Int16Array(C),u.HEAP32=Bn=new Int32Array(C),u.HEAPU8=ns=new Uint8Array(C),u.HEAPU16=or=new Uint16Array(C),u.HEAPU32=ms=new Uint32Array(C),u.HEAPF32=Gs=new Float32Array(C),u.HEAPF64=Rs=new Float64Array(C)}var Ir=u.INITIAL_MEMORY||16777216;if(k)te=u.wasmMemory,$t=u.buffer;else if(u.wasmMemory)te=u.wasmMemory;else if(te=new WebAssembly.Memory({initial:Ir/65536,maximum:2147483648/65536,shared:!0}),!(te.buffer instanceof SharedArrayBuffer))throw z("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");te&&($t=te.buffer),Ir=$t.byteLength,Cn($t);var Fn,Sr=[],Cr=[],Ea=[],Nc=[],ir=[],jp=!1,V0=!1;k||Cr.push({func:function(){ch()}});function qp(){if(!k){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)U0(u.preRun.shift());Ml(Sr)}}function Xp(){jp=!0,!k&&Ml(Cr)}function Kp(){k||Ml(Ea)}function ss(){k||(V0=!0)}function Zp(){if(!k){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)G0(u.postRun.shift());Ml(ir)}}function U0(C){Sr.unshift(C)}function G0(C){ir.unshift(C)}var Hs=0,Ec=null,oi=null;function H0(C){we(!k,"addRunDependency cannot be used in a pthread worker"),Hs++,u.monitorRunDependencies&&u.monitorRunDependencies(Hs)}function j0(C){if(Hs--,u.monitorRunDependencies&&u.monitorRunDependencies(Hs),Hs==0&&(Ec!==null&&(clearInterval(Ec),Ec=null),oi)){var _=oi;oi=null,_()}}u.preloadedImages={},u.preloadedAudios={};function jr(C){u.onAbort&&u.onAbort(C),k&&console.error("Pthread aborting at "+new Error().stack),C+="",z(C),pe=!0,be=1,C="abort("+C+"). Build with -s ASSERTIONS=1 for more info.";var _=new WebAssembly.RuntimeError(C);throw p(_),_}function ii(C,_){return String.prototype.startsWith?C.startsWith(_):C.indexOf(_)===0}var q0="data:application/octet-stream;base64,";function Yp(C){return ii(C,q0)}var X0="file://";function Jp(C){return ii(C,X0)}var rs="tfjs-backend-wasm-threaded-simd.wasm";Yp(rs)||(rs=E(rs));function Qp(C){try{if(C==rs&&ne)return new Uint8Array(ne);if($)return $(C);throw"both async and sync fetching of the wasm failed"}catch(_){jr(_)}}function K0(){if(!ne&&(A||x)){if(typeof fetch=="function"&&!Jp(rs))return fetch(rs,{credentials:"same-origin"}).then(function(C){if(!C.ok)throw"failed to load wasm binary file at '"+rs+"'";return C.arrayBuffer()}).catch(function(){return Qp(rs)});if(P)return new Promise(function(C,_){P(rs,function(L){C(new Uint8Array(L))},_)})}return Promise.resolve().then(function(){return Qp(rs)})}function Z0(){var C={a:Vg};function _(ge,Te){var gt=ge.exports;if(u.asm=gt,Fn=u.asm.I,ce=Te,!k){var yn=Re.unusedWorkers.length;Re.unusedWorkers.forEach(function(on){Re.loadWasmModuleToWorker(on,function(){--yn||j0("wasm-instantiate")})})}}k||H0("wasm-instantiate");function L(ge){_(ge.instance,ge.module)}function Z(ge){return K0().then(function(Te){return WebAssembly.instantiate(Te,C)}).then(ge,function(Te){z("failed to asynchronously prepare wasm: "+Te),jr(Te)})}function ye(){return!ne&&typeof WebAssembly.instantiateStreaming=="function"&&!Yp(rs)&&!Jp(rs)&&typeof fetch=="function"?fetch(rs,{credentials:"same-origin"}).then(function(ge){var Te=WebAssembly.instantiateStreaming(ge,C);return Te.then(L,function(gt){return z("wasm streaming compile failed: "+gt),z("falling back to ArrayBuffer instantiation"),Z(L)})}):Z(L)}if(u.instantiateWasm)try{var me=u.instantiateWasm(C,_);return me}catch(ge){return z("Module.instantiateWasm callback failed with error: "+ge),!1}return ye().catch(p),{}}var Y0={10520:function(){throw"Canceled!"},10538:function(C,_){setTimeout(function(){C5(C,_)},0)}};function eh(){Re.initRuntime()}function Ml(C){for(;C.length>0;){var _=C.shift();if(typeof _=="function"){_(u);continue}var L=_.func;typeof L=="number"?_.arg===void 0?Fn.get(L)():Fn.get(L)(_.arg):L(_.arg===void 0?null:_.arg)}}var Ra={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Rc(C,_){if(C<=0||C>a().length||C&!0||_<0)return-28;if(_==0)return 0;_>=2147483647&&(_=1/0);var L=Atomics.load(i(),Vl>>2),Z=0;if(L==C){var ye=Atomics.compareExchange(i(),Vl>>2,L,0);if(ye==L&&(--_,Z=1,_<=0))return 1}var me=Atomics.notify(i(),C>>2,_);if(me>=0)return me+Z;throw"Atomics.notify returned an unexpected value "+me}u._emscripten_futex_wake=Rc;function J0(C){if(k)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!C)throw"Internal Error! Null pthread_ptr in killThread!";i()[C+12>>2]=0;var _=Re.pthreads[C];_.worker.terminate(),Re.freeThreadData(_),Re.runningWorkers.splice(Re.runningWorkers.indexOf(_.worker),1),_.worker.pthread=void 0}function Q0(C){if(k)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!C)throw"Internal Error! Null pthread_ptr in cancelThread!";var _=Re.pthreads[C];_.worker.postMessage({cmd:"cancel"})}function th(C){if(k)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!C)throw"Internal Error! Null pthread_ptr in cleanupThread!";var _=Re.pthreads[C];if(_){i()[C+12>>2]=0;var L=_.worker;Re.returnWorkerToPool(L)}}var Re={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var C=8,_=0;_<C;++_)Re.allocateUnusedWorker()},initRuntime:function(){for(var C=ui(228),_=0;_<228/4;++_)l()[C/4+_]=0;i()[C+12>>2]=C;var L=C+152;i()[L>>2]=L;for(var Z=ui(512),_=0;_<128;++_)l()[Z/4+_]=0;Atomics.store(l(),C+100>>2,Z),Atomics.store(l(),C+40>>2,C),d2(C,!x,1),I5(C)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Re.threadExitHandlers.length>0;)Re.threadExitHandlers.pop()();k&&Fa()&&k5()},runExitHandlersAndDeinitThread:function(C,_){Atomics.store(l(),C+56>>2,1),Atomics.store(l(),C+60>>2,0),Re.runExitHandlers(),Atomics.store(l(),C+4>>2,_),Atomics.store(l(),C+0>>2,1),Rc(C+0,2147483647),d2(0,0,0)},threadExit:function(C){var _=Fa();_&&(Re.runExitHandlersAndDeinitThread(_,C),k&&postMessage({cmd:"exit"}))},threadCancel:function(){Re.runExitHandlersAndDeinitThread(Fa(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var C in Re.pthreads){var _=Re.pthreads[C];_&&_.worker&&Re.returnWorkerToPool(_.worker)}Re.pthreads={};for(var L=0;L<Re.unusedWorkers.length;++L){var Z=Re.unusedWorkers[L];Z.terminate()}Re.unusedWorkers=[];for(var L=0;L<Re.runningWorkers.length;++L){var Z=Re.runningWorkers[L],_=Z.pthread;Re.freeThreadData(_),Z.terminate()}Re.runningWorkers=[]},freeThreadData:function(C){if(!!C){if(C.threadInfoStruct){var _=i()[C.threadInfoStruct+100>>2];i()[C.threadInfoStruct+100>>2]=0,Mc(_),Mc(C.threadInfoStruct)}C.threadInfoStruct=0,C.allocatedOwnStack&&C.stackBase&&Mc(C.stackBase),C.stackBase=0,C.worker&&(C.worker.pthread=null)}},returnWorkerToPool:function(C){Re.runWithoutMainThreadQueuedCalls(function(){delete Re.pthreads[C.pthread.threadInfoStruct],Re.unusedWorkers.push(C),Re.runningWorkers.splice(Re.runningWorkers.indexOf(C),1),Re.freeThreadData(C.pthread),C.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(C){i()[$5>>2]=0;try{C()}finally{i()[$5>>2]=1}},receiveObjectTransfer:function(C){},loadWasmModuleToWorker:function(C,_){C.onmessage=function(L){var Z=L.data,ye=Z.cmd;if(C.pthread&&(Re.currentProxiedOperationCallerThread=C.pthread.threadInfoStruct),Z.targetThread&&Z.targetThread!=Fa()){var me=Re.pthreads[Z.targetThread];me?me.worker.postMessage(L.data,Z.transferList):console.error('Internal error! Worker sent a message "'+ye+'" to target pthread '+Z.targetThread+", but that thread no longer exists!"),Re.currentProxiedOperationCallerThread=void 0;return}if(ye==="processQueuedMainThreadWork")gh();else if(ye==="spawnThread")lh(L.data);else if(ye==="cleanupThread")th(Z.thread);else if(ye==="killThread")J0(Z.thread);else if(ye==="cancelThread")Q0(Z.thread);else if(ye==="loaded")C.loaded=!0,_&&_(C),C.runPthread&&(C.runPthread(),delete C.runPthread);else if(ye==="print")H("Thread "+Z.threadId+": "+Z.text);else if(ye==="printErr")z("Thread "+Z.threadId+": "+Z.text);else if(ye==="alert")alert("Thread "+Z.threadId+": "+Z.text);else if(ye==="exit"){var ge=C.pthread&&Atomics.load(l(),C.pthread.threadInfoStruct+64>>2);ge&&Re.returnWorkerToPool(C)}else if(ye==="exitProcess")try{zN(Z.returnCode)}catch(Te){if(Te instanceof Lc)return;throw Te}else ye==="cancelDone"?Re.returnWorkerToPool(C):ye==="objectTransfer"?Re.receiveObjectTransfer(L.data):L.data.target==="setimmediate"?C.postMessage(L.data):z("worker sent an unknown command "+ye);Re.currentProxiedOperationCallerThread=void 0},C.onerror=function(L){z("pthread sent an error! "+L.filename+":"+L.lineno+": "+L.message)},b&&(C.on("message",function(L){C.onmessage({data:L})}),C.on("error",function(L){C.onerror(L)}),C.on("exit",function(L){})),C.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||s,wasmMemory:te,wasmModule:ce})},allocateUnusedWorker:function(){var C=E("tfjs-backend-wasm-threaded-simd.worker.js");Re.unusedWorkers.push(new Worker(C))},getNewWorker:function(){return Re.unusedWorkers.length==0&&(Re.allocateUnusedWorker(),Re.loadWasmModuleToWorker(Re.unusedWorkers[0])),Re.unusedWorkers.length>0?Re.unusedWorkers.pop():null},busySpinWait:function(C){for(var _=performance.now()+C;performance.now()<_;);}};function eg(C,_){E5(C,_),Bl(C)}u.establishStackSpace=eg;function tg(){return J}u.getNoExitRuntime=tg;function ng(C,_){return Fn.get(C)(_)}u.invokeEntryPoint=ng;function sg(C,_,L,Z){jr("Assertion failed: "+it(C)+", at: "+[_?it(_):"unknown filename",L,Z?it(Z):"unknown function"])}function rg(C,_){var L=_main(C,_)}var li;b?li=function(){var C=process.hrtime();return C[0]*1e3+C[1]/1e6}:k?li=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?li=dateNow:li=function(){return performance.now()};function ag(C){return i()[v5()>>2]=C,C}function og(C,_){if(k)return $a(1,1,C,_)}function ig(C,_){if(C==_)postMessage({cmd:"processQueuedMainThreadWork"});else if(k)postMessage({targetThread:C,cmd:"processThreadQueue"});else{var L=Re.pthreads[C],Z=L&&L.worker;if(!Z)return;Z.postMessage({cmd:"processThreadQueue"})}return 1}function lg(){jr()}function ug(C,_,L){var Z=hg(_,L);return Y0[C].apply(null,Z)}function cg(C,_){}function nh(C,_,L){if(C<=0||C>a().length||C&!0)return-28;if(A){if(Atomics.load(i(),C>>2)!=_)return-6;for(var ye=performance.now(),me=ye+L,ge=Atomics.exchange(i(),Vl>>2,C);;){if(ye=performance.now(),ye>me)return ge=Atomics.exchange(i(),Vl>>2,0),-73;if(ge=Atomics.exchange(i(),Vl>>2,0),ge==0)break;if(gh(),Atomics.load(i(),C>>2)!=_)return-6;ge=Atomics.exchange(i(),Vl>>2,C)}return 0}else{var Z=Atomics.wait(i(),C>>2,_,L);if(Z==="timed-out")return-73;if(Z==="not-equal")return-6;if(Z==="ok")return 0;throw"Atomics.wait returned an unexpected value "+Z}}function dg(C,_,L){o().copyWithin(C,_,_+L)}function pg(){return b?Hl("os").cpus().length:navigator.hardwareConcurrency}function $a(C,_){for(var L=arguments.length-2,Z=zc(),ye=L,me=Wl(ye*8),ge=me>>3,Te=0;Te<L;Te++){var gt=arguments[2+Te];c()[ge+Te]=gt}var yn=N5(C,ye,me,_);return Bl(Z),yn}var $c=[],Dc=[];function hg(C,_){Dc.length=0;var L;for(_>>=2;L=o()[C++];){var Z=L<105;Z&&_&1&&_++,Dc.push(Z?c()[_++>>1]:i()[_]),++_}return Dc}function fg(C,_,L){$c.length=_;for(var Z=L>>3,ye=0;ye<_;ye++)$c[ye]=c()[Z+ye];var me=C<0,ge=me?Y0[-C-1]:Wg[C];return ge.apply(null,$c)}function mg(){return o().length}function gg(C){try{return te.grow(C-$t.byteLength+65535>>>16),Cn(te.buffer),1}catch(_){}}function yg(C){var _=mg();if(C<=_)return!1;var L=2147483648;if(C>L)return!1;for(var Z=1;Z<=4;Z*=2){var ye=_*(1+.2/Z);ye=Math.min(ye,C+100663296);var me=Math.min(L,wt(Math.max(C,ye),65536)),ge=gg(me);if(ge)return!0}return!1}var qe={inEventHandler:0,removeAllEventListeners:function(){for(var C=qe.eventHandlers.length-1;C>=0;--C)qe._removeHandler(C);qe.eventHandlers=[],qe.deferredCalls=[]},registerRemoveEventListeners:function(){qe.removeEventListenersRegistered||(Nc.push(qe.removeAllEventListeners),qe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(C,_,L){function Z(ge,Te){if(ge.length!=Te.length)return!1;for(var gt in ge)if(ge[gt]!=Te[gt])return!1;return!0}for(var ye in qe.deferredCalls){var me=qe.deferredCalls[ye];if(me.targetFunction==C&&Z(me.argsList,L))return}qe.deferredCalls.push({targetFunction:C,precedence:_,argsList:L}),qe.deferredCalls.sort(function(ge,Te){return ge.precedence<Te.precedence})},removeDeferredCalls:function(C){for(var _=0;_<qe.deferredCalls.length;++_)qe.deferredCalls[_].targetFunction==C&&(qe.deferredCalls.splice(_,1),--_)},canPerformEventHandlerRequests:function(){return qe.inEventHandler&&qe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!qe.canPerformEventHandlerRequests())for(var C=0;C<qe.deferredCalls.length;++C){var _=qe.deferredCalls[C];qe.deferredCalls.splice(C,1),--C,_.targetFunction.apply(null,_.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(C,_){for(var L=0;L<qe.eventHandlers.length;++L)qe.eventHandlers[L].target==C&&(!_||_==qe.eventHandlers[L].eventTypeString)&&qe._removeHandler(L--)},_removeHandler:function(C){var _=qe.eventHandlers[C];_.target.removeEventListener(_.eventTypeString,_.eventListenerFunc,_.useCapture),qe.eventHandlers.splice(C,1)},registerOrRemoveHandler:function(C){var _=function(ye){++qe.inEventHandler,qe.currentEventHandler=C,qe.runDeferredCalls(),C.handlerFunc(ye),qe.runDeferredCalls(),--qe.inEventHandler};if(C.callbackfunc)C.eventListenerFunc=_,C.target.addEventListener(C.eventTypeString,_,C.useCapture),qe.eventHandlers.push(C),qe.registerRemoveEventListeners();else for(var L=0;L<qe.eventHandlers.length;++L)qe.eventHandlers[L].target==C.target&&qe.eventHandlers[L].eventTypeString==C.eventTypeString&&qe._removeHandler(L--)},queueEventHandlerOnThread_iiii:function(C,_,L,Z,ye){var me=zc(),ge=Wl(12);i()[ge>>2]=L,i()[ge+4>>2]=Z,i()[ge+8>>2]=ye,c2(0,C,637534208,_,Z,ge),Bl(me)},getTargetThreadForEventCallback:function(C){switch(C){case 1:return 0;case 2:return Re.currentProxiedOperationCallerThread;default:return C}},getNodeNameForTarget:function(C){return C?C==window?"#window":C==screen?"#screen":C&&C.nodeName?C.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Ag(C){var _=ft(C)+1,L=ui(_);return ht(C,L,_),L}function xg(C,_,L,Z){var ye=zc(),me=Wl(12),ge=0;_&&(ge=Ag(_)),i()[me>>2]=ge,i()[me+4>>2]=L,i()[me+8>>2]=Z,c2(0,C,657457152,0,ge,me),Bl(ye)}function bg(C,_,L,Z){_=_?it(_):"",xg(C,_,L,Z)}function vg(C){return C>2?it(C):C}var wg=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function kg(C){C=vg(C);var _=wg[C]||(typeof document!="undefined"?document.querySelector(C):void 0);return _}function _c(C){return kg(C)}function sh(C,_,L){var Z=_c(C);if(!Z)return-4;if(Z.canvasSharedPtr&&(i()[Z.canvasSharedPtr>>2]=_,i()[Z.canvasSharedPtr+4>>2]=L),Z.offscreenCanvas||!Z.controlTransferredOffscreen){Z.offscreenCanvas&&(Z=Z.offscreenCanvas);var ye=!1;if(Z.GLctxObject&&Z.GLctxObject.GLctx){var me=Z.GLctxObject.GLctx.getParameter(2978);ye=me[0]===0&&me[1]===0&&me[2]===Z.width&&me[3]===Z.height}Z.width=_,Z.height=L,ye&&Z.GLctxObject.GLctx.viewport(0,0,_,L)}else if(Z.canvasSharedPtr){var ge=i()[Z.canvasSharedPtr+8>>2];return bg(ge,C,_,L),1}else return-4;return 0}function rh(C,_,L){return k?$a(2,1,C,_,L):sh(C,_,L)}function Ig(C,_,L){var Z=_c(C);return Z?sh(C,_,L):rh(C,_,L)}function Sg(C){}function Cg(C,_){}function Tg(C){var _=C.getExtension("ANGLE_instanced_arrays");if(_)return C.vertexAttribDivisor=function(L,Z){_.vertexAttribDivisorANGLE(L,Z)},C.drawArraysInstanced=function(L,Z,ye,me){_.drawArraysInstancedANGLE(L,Z,ye,me)},C.drawElementsInstanced=function(L,Z,ye,me,ge){_.drawElementsInstancedANGLE(L,Z,ye,me,ge)},1}function Ng(C){var _=C.getExtension("OES_vertex_array_object");if(_)return C.createVertexArray=function(){return _.createVertexArrayOES()},C.deleteVertexArray=function(L){_.deleteVertexArrayOES(L)},C.bindVertexArray=function(L){_.bindVertexArrayOES(L)},C.isVertexArray=function(L){return _.isVertexArrayOES(L)},1}function Eg(C){var _=C.getExtension("WEBGL_draw_buffers");if(_)return C.drawBuffers=function(L,Z){_.drawBuffersWEBGL(L,Z)},1}function Rg(C){return!!(C.multiDrawWebgl=C.getExtension("WEBGL_multi_draw"))}var mt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(_){mt.lastError||(mt.lastError=_)},getNewId:function(C){for(var _=mt.counter++,L=C.length;L<_;L++)C[L]=null;return _},getSource:function(C,_,L,Z){for(var ye="",me=0;me<_;++me){var ge=Z?i()[Z+me*4>>2]:-1;ye+=it(i()[L+me*4>>2],ge<0?void 0:ge)}return ye},createContext:function(C,_){var L=C.getContext("webgl",_);if(!L)return 0;var Z=mt.registerContext(L,_);return Z},registerContext:function(C,_){var L=ui(8);i()[L+4>>2]=Fa();var Z={handle:L,attributes:_,version:_.majorVersion,GLctx:C};return C.canvas&&(C.canvas.GLctxObject=Z),mt.contexts[L]=Z,(typeof _.enableExtensionsByDefault=="undefined"||_.enableExtensionsByDefault)&&mt.initExtensions(Z),L},makeContextCurrent:function(C){return mt.currentContext=mt.contexts[C],u.ctx=Da=mt.currentContext&&mt.currentContext.GLctx,!(C&&!Da)},getContext:function(C){return mt.contexts[C]},deleteContext:function(C){mt.currentContext===mt.contexts[C]&&(mt.currentContext=null),typeof qe=="object"&&qe.removeAllHandlersOnTarget(mt.contexts[C].GLctx.canvas),mt.contexts[C]&&mt.contexts[C].GLctx.canvas&&(mt.contexts[C].GLctx.canvas.GLctxObject=void 0),Mc(mt.contexts[C].handle),mt.contexts[C]=null},initExtensions:function(C){if(C||(C=mt.currentContext),!C.initExtensionsDone){C.initExtensionsDone=!0;var _=C.GLctx;Tg(_),Ng(_),Eg(_),_.disjointTimerQueryExt=_.getExtension("EXT_disjoint_timer_query"),Rg(_);var L=_.getSupportedExtensions()||[];L.forEach(function(Z){Z.indexOf("lose_context")<0&&Z.indexOf("debug")<0&&_.getExtension(Z)})}},populateUniformTable:function(C){for(var _=mt.programs[C],L=mt.programInfos[C]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},Z=L.uniforms,ye=Da.getProgramParameter(_,35718),me=0;me<ye;++me){var ge=Da.getActiveUniform(_,me),Te=ge.name;L.maxUniformLength=Math.max(L.maxUniformLength,Te.length+1),Te.slice(-1)=="]"&&(Te=Te.slice(0,Te.lastIndexOf("[")));var gt=Da.getUniformLocation(_,Te);if(gt){var yn=mt.getNewId(mt.uniforms);Z[Te]=[ge.size,yn],mt.uniforms[yn]=gt;for(var on=1;on<ge.size;++on){var Pa=Te+"["+on+"]";gt=Da.getUniformLocation(_,Pa),yn=mt.getNewId(mt.uniforms),mt.uniforms[yn]=gt}}}}},$g=["default","low-power","high-performance"];function Dg(C,_){var L=_>>2,Z=i()[L+(24>>2)],ye={alpha:!!i()[L+(0>>2)],depth:!!i()[L+(4>>2)],stencil:!!i()[L+(8>>2)],antialias:!!i()[L+(12>>2)],premultipliedAlpha:!!i()[L+(16>>2)],preserveDrawingBuffer:!!i()[L+(20>>2)],powerPreference:$g[Z],failIfMajorPerformanceCaveat:!!i()[L+(28>>2)],majorVersion:i()[L+(32>>2)],minorVersion:i()[L+(36>>2)],enableExtensionsByDefault:i()[L+(40>>2)],explicitSwapControl:i()[L+(44>>2)],proxyContextToMainThread:i()[L+(48>>2)],renderViaOffscreenBackBuffer:i()[L+(52>>2)]},me=_c(C);if(!me||ye.explicitSwapControl)return 0;var ge=mt.createContext(me,ye);return ge}function _g(C,_){return Dg(C,_)}var zl={mappings:{},buffers:[null,[],[]],printChar:function(C,_){var L=zl.buffers[C];_===0||_===10?((C===1?H:z)(Ke(L,0)),L.length=0):L.push(_)},varargs:void 0,get:function(){zl.varargs+=4;var C=i()[zl.varargs-4>>2];return C},getStr:function(C){var _=it(C);return _},get64:function(C,_){return C}};function ah(C){return k?$a(3,1,C):0}function oh(C,_,L,Z,ye){if(k)return $a(4,1,C,_,L,Z,ye)}function ih(C,_,L,Z){if(k)return $a(5,1,C,_,L,Z);for(var ye=0,me=0;me<L;me++){for(var ge=i()[_+me*8>>2],Te=i()[_+(me*8+4)>>2],gt=0;gt<Te;gt++)zl.printChar(C,o()[ge+gt]);ye+=Te}return i()[Z>>2]=ye,0}function Fg(C){var _=Re.threadExitHandlers.pop();C&&_()}function Pg(C,_){Re.threadExitHandlers.push(function(){Fn.get(C)(_)})}function lh(C){if(k)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var _=Re.getNewWorker();if(_.pthread!==void 0)throw"Internal error!";if(!C.pthread_ptr)throw"Internal error, no pthread ptr!";Re.runningWorkers.push(_);for(var L=ui(128*4),Z=0;Z<128;++Z)i()[L+Z*4>>2]=0;var ye=C.stackBase+C.stackSize,me=Re.pthreads[C.pthread_ptr]={worker:_,stackBase:C.stackBase,stackSize:C.stackSize,allocatedOwnStack:C.allocatedOwnStack,threadInfoStruct:C.pthread_ptr},ge=me.threadInfoStruct>>2;Atomics.store(l(),ge+(64>>2),C.detached),Atomics.store(l(),ge+(100>>2),L),Atomics.store(l(),ge+(40>>2),me.threadInfoStruct),Atomics.store(l(),ge+(80>>2),C.stackSize),Atomics.store(l(),ge+(76>>2),ye),Atomics.store(l(),ge+(104>>2),C.stackSize),Atomics.store(l(),ge+(104+8>>2),ye),Atomics.store(l(),ge+(104+12>>2),C.detached);var Te=w5(),gt=Te+40;Atomics.store(l(),ge+(172>>2),gt),_.pthread=me;var yn={cmd:"run",start_routine:C.startRoutine,arg:C.arg,threadInfoStruct:C.pthread_ptr,stackBase:C.stackBase,stackSize:C.stackSize};_.runPthread=function(){yn.time=performance.now(),_.postMessage(yn,C.transferList)},_.loaded&&(_.runPthread(),delete _.runPthread)}function Og(C,_,L,Z){if(typeof SharedArrayBuffer=="undefined")return z("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!C)return z("pthread_create called with a null thread pointer!"),28;var ye=[],me=0;if(k&&(ye.length===0||me))return T5(687865856,C,_,L,Z);if(me)return me;var ge=0,Te=0,gt=0;_&&_!=-1?(ge=i()[_>>2],ge+=81920,Te=i()[_+8>>2],gt=i()[_+12>>2]!==0):ge=2097152;var yn=Te==0;yn?Te=R5(16,ge):(Te-=ge,we(Te>0));for(var on=ui(228),Pa=0;Pa<228>>2;++Pa)l()[(on>>2)+Pa]=0;i()[C>>2]=on,i()[on+12>>2]=on;var Ul=on+152;i()[Ul>>2]=Ul;var Wn={stackBase:Te,stackSize:ge,allocatedOwnStack:yn,detached:gt,startRoutine:L,pthread_ptr:on,arg:Z,transferList:ye};return k?(Wn.cmd="spawnThread",postMessage(Wn,ye)):lh(Wn),0}function Mg(){if(!!k){var C=Fa();if(!!C){var _=Atomics.load(l(),C+56>>2);if(!_){var L=Atomics.load(l(),C+0>>2);if(L==2)throw"Canceled!"}}}}function zg(){b||x||X("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Lg(C,_,L){if(!C)return z("pthread_join attempted on a null thread pointer!"),Ra.ESRCH;if(k&&Fa()==C)return z("PThread "+C+" is attempting to join to itself!"),Ra.EDEADLK;if(!k&&S5()==C)return z("Main thread "+C+" is attempting to join to itself!"),Ra.EDEADLK;var Z=i()[C+12>>2];if(Z!==C)return z("pthread_join attempted on thread "+C+", which does not point to a valid thread, or does not exist anymore!"),Ra.ESRCH;var ye=Atomics.load(l(),C+64>>2);if(ye)return z("Attempted to join thread "+C+", which was already detached!"),Ra.EINVAL;for(L&&zg();;){var me=Atomics.load(l(),C+0>>2);if(me==1){var ge=Atomics.load(l(),C+4>>2);return _&&(i()[_>>2]=ge),Atomics.store(l(),C+64>>2,1),k?postMessage({cmd:"cleanupThread",thread:C}):th(C),0}if(!L)return Ra.EBUSY;Mg(),k||gh(),nh(C+0,me,k?100:1)}}function Bg(C,_){return Lg(C,_,!0)}function uh(C){if(k)return $a(6,1,C);switch(C){case 30:return 16384;case 85:var _=2147483648;return _/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return ag(28),-1}k||Re.initMainThreadBlock();var Da,Wg=[null,og,rh,ah,oh,ih,uh],Vg={e:sg,r:rg,x:ig,b:lg,y:ug,j:cg,d:nh,c:Rc,f:li,p:dg,A:pg,u:fg,q:yg,v:Ig,i:Sg,s:Cg,w:_g,l:ah,n:oh,g:ih,o:eh,a:te||u.wasmMemory,z:Fg,k:Pg,h:Og,m:Bg,t:uh},b5=Z0(),ch=u.___wasm_call_ctors=function(){return(ch=u.___wasm_call_ctors=u.asm.B).apply(null,arguments)},Ug=u._init=function(){return(Ug=u._init=u.asm.C).apply(null,arguments)},Gg=u._init_with_threads_count=function(){return(Gg=u._init_with_threads_count=u.asm.D).apply(null,arguments)},Hg=u._get_threads_count=function(){return(Hg=u._get_threads_count=u.asm.E).apply(null,arguments)},jg=u._register_tensor=function(){return(jg=u._register_tensor=u.asm.F).apply(null,arguments)},qg=u._dispose_data=function(){return(qg=u._dispose_data=u.asm.G).apply(null,arguments)},Xg=u._dispose=function(){return(Xg=u._dispose=u.asm.H).apply(null,arguments)},Kg=u._Abs=function(){return(Kg=u._Abs=u.asm.J).apply(null,arguments)},Zg=u._Add=function(){return(Zg=u._Add=u.asm.K).apply(null,arguments)},Yg=u._AddN=function(){return(Yg=u._AddN=u.asm.L).apply(null,arguments)},Jg=u._All=function(){return(Jg=u._All=u.asm.M).apply(null,arguments)},Qg=u._Any=function(){return(Qg=u._Any=u.asm.N).apply(null,arguments)},e2=u._ArgMax=function(){return(e2=u._ArgMax=u.asm.O).apply(null,arguments)},t2=u._AvgPool=function(){return(t2=u._AvgPool=u.asm.P).apply(null,arguments)},n2=u._BatchMatMul=function(){return(n2=u._BatchMatMul=u.asm.Q).apply(null,arguments)},s2=u._Ceil=function(){return(s2=u._Ceil=u.asm.R).apply(null,arguments)},r2=u._ClipByValue=function(){return(r2=u._ClipByValue=u.asm.S).apply(null,arguments)},a2=u._Conv2D=function(){return(a2=u._Conv2D=u.asm.T).apply(null,arguments)},o2=u._Conv2DBackpropInput=function(){return(o2=u._Conv2DBackpropInput=u.asm.U).apply(null,arguments)},i2=u._Cos=function(){return(i2=u._Cos=u.asm.V).apply(null,arguments)},l2=u._Cosh=function(){return(l2=u._Cosh=u.asm.W).apply(null,arguments)},dh=u._CropAndResize=function(){return(dh=u._CropAndResize=u.asm.X).apply(null,arguments)},ph=u._Cumsum=function(){return(ph=u._Cumsum=u.asm.Y).apply(null,arguments)},hh=u._DepthToSpace=function(){return(hh=u._DepthToSpace=u.asm.Z).apply(null,arguments)},Fc=u._DepthwiseConv2dNative=function(){return(Fc=u._DepthwiseConv2dNative=u.asm._).apply(null,arguments)},Ll=u._Elu=function(){return(Ll=u._Elu=u.asm.$).apply(null,arguments)},u2=u._Equal=function(){return(u2=u._Equal=u.asm.aa).apply(null,arguments)},Pc=u._Exp=function(){return(Pc=u._Exp=u.asm.ba).apply(null,arguments)},re=u._FlipLeftRight=function(){return(re=u._FlipLeftRight=u.asm.ca).apply(null,arguments)},ie=u._Floor=function(){return(ie=u._Floor=u.asm.da).apply(null,arguments)},ke=u._FloorDiv=function(){return(ke=u._FloorDiv=u.asm.ea).apply(null,arguments)},ct=u._FusedBatchNorm=function(){return(ct=u._FusedBatchNorm=u.asm.fa).apply(null,arguments)},Ut=u._FusedConv2D=function(){return(Ut=u._FusedConv2D=u.asm.ga).apply(null,arguments)},Dt=u._FusedDepthwiseConv2D=function(){return(Dt=u._FusedDepthwiseConv2D=u.asm.ha).apply(null,arguments)},Qe=u._Gather=function(){return(Qe=u._Gather=u.asm.ia).apply(null,arguments)},st=u._GatherNd=function(){return(st=u._GatherNd=u.asm.ja).apply(null,arguments)},Tn=u._Greater=function(){return(Tn=u._Greater=u.asm.ka).apply(null,arguments)},qr=u._GreaterEqual=function(){return(qr=u._GreaterEqual=u.asm.la).apply(null,arguments)},Xr=u._LeakyRelu=function(){return(Xr=u._LeakyRelu=u.asm.ma).apply(null,arguments)},fh=u._Less=function(){return(fh=u._Less=u.asm.na).apply(null,arguments)},Oc=u._LessEqual=function(){return(Oc=u._LessEqual=u.asm.oa).apply(null,arguments)},gs=u._Log=function(){return(gs=u._Log=u.asm.pa).apply(null,arguments)},_a=u._LogicalAnd=function(){return(_a=u._LogicalAnd=u.asm.qa).apply(null,arguments)},mh=u._Max=function(){return(mh=u._Max=u.asm.ra).apply(null,arguments)},jT=u._MaxPool=function(){return(jT=u._MaxPool=u.asm.sa).apply(null,arguments)},qT=u._Maximum=function(){return(qT=u._Maximum=u.asm.ta).apply(null,arguments)},XT=u._Mean=function(){return(XT=u._Mean=u.asm.ua).apply(null,arguments)},KT=u._Min=function(){return(KT=u._Min=u.asm.va).apply(null,arguments)},ZT=u._Minimum=function(){return(ZT=u._Minimum=u.asm.wa).apply(null,arguments)},YT=u._MirrorPad=function(){return(YT=u._MirrorPad=u.asm.xa).apply(null,arguments)},JT=u._Multiply=function(){return(JT=u._Multiply=u.asm.ya).apply(null,arguments)},QT=u._Neg=function(){return(QT=u._Neg=u.asm.za).apply(null,arguments)},eN=u._NonMaxSuppressionV3=function(){return(eN=u._NonMaxSuppressionV3=u.asm.Aa).apply(null,arguments)},tN=u._NonMaxSuppressionV4=function(){return(tN=u._NonMaxSuppressionV4=u.asm.Ba).apply(null,arguments)},nN=u._NonMaxSuppressionV5=function(){return(nN=u._NonMaxSuppressionV5=u.asm.Ca).apply(null,arguments)},sN=u._NotEqual=function(){return(sN=u._NotEqual=u.asm.Da).apply(null,arguments)},rN=u._OneHot=function(){return(rN=u._OneHot=u.asm.Ea).apply(null,arguments)},aN=u._PadV2=function(){return(aN=u._PadV2=u.asm.Fa).apply(null,arguments)},oN=u._Pow=function(){return(oN=u._Pow=u.asm.Ga).apply(null,arguments)},iN=u._Prelu=function(){return(iN=u._Prelu=u.asm.Ha).apply(null,arguments)},lN=u._Prod=function(){return(lN=u._Prod=u.asm.Ia).apply(null,arguments)},uN=u._RealDiv=function(){return(uN=u._RealDiv=u.asm.Ja).apply(null,arguments)},cN=u._Relu=function(){return(cN=u._Relu=u.asm.Ka).apply(null,arguments)},dN=u._Relu6=function(){return(dN=u._Relu6=u.asm.La).apply(null,arguments)},pN=u._ResizeBilinear=function(){return(pN=u._ResizeBilinear=u.asm.Ma).apply(null,arguments)},hN=u._Reverse=function(){return(hN=u._Reverse=u.asm.Na).apply(null,arguments)},fN=u._RotateWithOffset=function(){return(fN=u._RotateWithOffset=u.asm.Oa).apply(null,arguments)},mN=u._Round=function(){return(mN=u._Round=u.asm.Pa).apply(null,arguments)},gN=u._Rsqrt=function(){return(gN=u._Rsqrt=u.asm.Qa).apply(null,arguments)},yN=u._ScatterNd=function(){return(yN=u._ScatterNd=u.asm.Ra).apply(null,arguments)},AN=u._SelectV2=function(){return(AN=u._SelectV2=u.asm.Sa).apply(null,arguments)},xN=u._Sigmoid=function(){return(xN=u._Sigmoid=u.asm.Ta).apply(null,arguments)},bN=u._Sin=function(){return(bN=u._Sin=u.asm.Ua).apply(null,arguments)},vN=u._Softmax=function(){return(vN=u._Softmax=u.asm.Va).apply(null,arguments)},wN=u._Sqrt=function(){return(wN=u._Sqrt=u.asm.Wa).apply(null,arguments)},kN=u._Square=function(){return(kN=u._Square=u.asm.Xa).apply(null,arguments)},IN=u._SquaredDifference=function(){return(IN=u._SquaredDifference=u.asm.Ya).apply(null,arguments)},SN=u._Step=function(){return(SN=u._Step=u.asm.Za).apply(null,arguments)},CN=u._StridedSlice=function(){return(CN=u._StridedSlice=u.asm._a).apply(null,arguments)},TN=u._Sub=function(){return(TN=u._Sub=u.asm.$a).apply(null,arguments)},NN=u._Sum=function(){return(NN=u._Sum=u.asm.ab).apply(null,arguments)},EN=u._Tan=function(){return(EN=u._Tan=u.asm.bb).apply(null,arguments)},RN=u._Tanh=function(){return(RN=u._Tanh=u.asm.cb).apply(null,arguments)},$N=u._Tile=function(){return($N=u._Tile=u.asm.db).apply(null,arguments)},DN=u._TopK=function(){return(DN=u._TopK=u.asm.eb).apply(null,arguments)},_N=u._Transform=function(){return(_N=u._Transform=u.asm.fb).apply(null,arguments)},FN=u._Transpose=function(){return(FN=u._Transpose=u.asm.gb).apply(null,arguments)},PN=u.__FusedMatMul=function(){return(PN=u.__FusedMatMul=u.asm.hb).apply(null,arguments)},ui=u._malloc=function(){return(ui=u._malloc=u.asm.ib).apply(null,arguments)},Mc=u._free=function(){return(Mc=u._free=u.asm.jb).apply(null,arguments)},v5=u.___errno_location=function(){return(v5=u.___errno_location=u.asm.kb).apply(null,arguments)},w5=u._emscripten_get_global_libc=function(){return(w5=u._emscripten_get_global_libc=u.asm.lb).apply(null,arguments)},Fa=u._pthread_self=function(){return(Fa=u._pthread_self=u.asm.mb).apply(null,arguments)},k5=u.___pthread_tsd_run_dtors=function(){return(k5=u.___pthread_tsd_run_dtors=u.asm.nb).apply(null,arguments)},gh=u._emscripten_main_thread_process_queued_calls=function(){return(gh=u._emscripten_main_thread_process_queued_calls=u.asm.ob).apply(null,arguments)},ON=u._emscripten_current_thread_process_queued_calls=function(){return(ON=u._emscripten_current_thread_process_queued_calls=u.asm.pb).apply(null,arguments)},I5=u._emscripten_register_main_browser_thread_id=function(){return(I5=u._emscripten_register_main_browser_thread_id=u.asm.qb).apply(null,arguments)},S5=u._emscripten_main_browser_thread_id=function(){return(S5=u._emscripten_main_browser_thread_id=u.asm.rb).apply(null,arguments)},C5=u.__emscripten_do_dispatch_to_thread=function(){return(C5=u.__emscripten_do_dispatch_to_thread=u.asm.sb).apply(null,arguments)},T5=u._emscripten_sync_run_in_main_thread_4=function(){return(T5=u._emscripten_sync_run_in_main_thread_4=u.asm.tb).apply(null,arguments)},N5=u._emscripten_run_in_main_runtime_thread_js=function(){return(N5=u._emscripten_run_in_main_runtime_thread_js=u.asm.ub).apply(null,arguments)},c2=u.__emscripten_call_on_thread=function(){return(c2=u.__emscripten_call_on_thread=u.asm.vb).apply(null,arguments)},MN=u._emscripten_tls_init=function(){return(MN=u._emscripten_tls_init=u.asm.wb).apply(null,arguments)},d2=u.__emscripten_thread_init=function(){return(d2=u.__emscripten_thread_init=u.asm.xb).apply(null,arguments)},zc=u.stackSave=function(){return(zc=u.stackSave=u.asm.yb).apply(null,arguments)},Bl=u.stackRestore=function(){return(Bl=u.stackRestore=u.asm.zb).apply(null,arguments)},Wl=u.stackAlloc=function(){return(Wl=u.stackAlloc=u.asm.Ab).apply(null,arguments)},E5=u._emscripten_stack_set_limits=function(){return(E5=u._emscripten_stack_set_limits=u.asm.Bb).apply(null,arguments)},R5=u._memalign=function(){return(R5=u._memalign=u.asm.Cb).apply(null,arguments)},$5=u.__emscripten_allow_main_runtime_queued_calls=10512,Vl=u.__emscripten_main_thread_futex=12148;u.cwrap=Ge,u.PThread=Re,u.PThread=Re,u.wasmMemory=te,u.ExitStatus=Lc;var yh;function Lc(C){this.name="ExitStatus",this.message="Program terminated with exit("+C+")",this.status=C}oi=function C(){yh||p2(),yh||(oi=C)};function p2(C){if(C=C||m,Hs>0)return;if(k){d(u),Xp(),postMessage({cmd:"loaded"});return}if(qp(),Hs>0)return;function _(){yh||(yh=!0,u.calledRun=!0,!pe&&(Xp(),Kp(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Zp()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),_()},1)):_()}u.run=p2;function zN(C,_){if(!(_&&J&&C===0)){if(!_&&k)throw postMessage({cmd:"exitProcess",returnCode:C}),new Lc(C);J||(Re.terminateAllThreads(),be=C,ss(),u.onExit&&u.onExit(C),pe=!0),y(C,new Lc(C))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();return k&&(J=!1,Re.initWorker()),p2(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),pE=_t({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.10.0_@tensorflow+tfjs-core@3.10.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},o,i;a.ready=new Promise(function(re,ie){o=re,i=ie});var l={},c;for(c in a)a.hasOwnProperty(c)&&(l[c]=a[c]);var u=[],d="./this.program",p=function(re,ie){throw ie},h=!1,f=!1,m=!1,g=!1;h=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g=!h&&!m&&!f;var y="";function A(re){return a.locateFile?a.locateFile(re,y):y+re}var x,b,w,k,S,E;m?(f?y=Gc().dirname(y)+"/":y=__dirname+"/",x=function(ie,ke){return S||(S=Hl("fs")),E||(E=Gc()),ie=E.normalize(ie),S.readFileSync(ie,ke?null:"utf8")},w=function(ie){var ke=x(ie,!0);return ke.buffer||(ke=new Uint8Array(ke)),H(ke.buffer),ke},process.argv.length>1&&(d=process.argv[1].replace(/\\/g,"/")),u=process.argv.slice(2),process.on("uncaughtException",function(re){if(!(re instanceof u2))throw re}),process.on("unhandledRejection",ir),p=function(re){process.exit(re)},a.inspect=function(){return"[Emscripten Module object]"}):g?(typeof read!="undefined"&&(x=function(ie){return read(ie)}),w=function(ie){var ke;return typeof readbuffer=="function"?new Uint8Array(readbuffer(ie)):(ke=read(ie,"binary"),H(typeof ke=="object"),ke)},typeof scriptArgs!="undefined"?u=scriptArgs:typeof arguments!="undefined"&&(u=arguments),typeof quit=="function"&&(p=function(re){quit(re)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(h||f)&&(f?y=self.location.href:typeof document!="undefined"&&document.currentScript&&(y=document.currentScript.src),s&&(y=s),y.indexOf("blob:")!==0?y=y.substr(0,y.lastIndexOf("/")+1):y="",x=function(re){var ie=new XMLHttpRequest;return ie.open("GET",re,!1),ie.send(null),ie.responseText},f&&(w=function(re){var ie=new XMLHttpRequest;return ie.open("GET",re,!1),ie.responseType="arraybuffer",ie.send(null),new Uint8Array(ie.response)}),b=function(re,ie,ke){var ct=new XMLHttpRequest;ct.open("GET",re,!0),ct.responseType="arraybuffer",ct.onload=function(){if(ct.status==200||ct.status==0&&ct.response){ie(ct.response);return}ke()},ct.onerror=ke,ct.send(null)},k=function(re){document.title=re});var R=a.print||console.log.bind(console),P=a.printErr||console.warn.bind(console);for(c in l)l.hasOwnProperty(c)&&(a[c]=l[c]);l=null,a.arguments&&(u=a.arguments),a.thisProgram&&(d=a.thisProgram),a.quit&&(p=a.quit);var $;a.wasmBinary&&($=a.wasmBinary);var D=a.noExitRuntime||!0;typeof WebAssembly!="object"&&ir("no native wasm support detected");var T,O=!1,V;function H(re,ie){re||ir("Assertion failed: "+ie)}function z(re){var ie=a["_"+re];return H(ie,"Cannot call unknown function "+re+", make sure it is exported"),ie}function X(re,ie,ke,ct,Ut){var Dt={string:function(gs){var _a=0;if(gs!=null&&gs!==0){var mh=(gs.length<<2)+1;_a=Fc(mh),te(gs,_a,mh)}return _a},array:function(gs){var _a=Fc(gs.length);return ce(gs,_a),_a}};function Qe(gs){return ie==="string"?ne(gs):ie==="boolean"?Boolean(gs):gs}var st=z(re),Tn=[],qr=0;if(ct)for(var Xr=0;Xr<ct.length;Xr++){var fh=Dt[ke[Xr]];fh?(qr===0&&(qr=ph()),Tn[Xr]=fh(ct[Xr])):Tn[Xr]=ct[Xr]}var Oc=st.apply(null,Tn);return Oc=Qe(Oc),qr!==0&&hh(qr),Oc}function ee(re,ie,ke,ct){ke=ke||[];var Ut=ke.every(function(Qe){return Qe==="number"}),Dt=ie!=="string";return Dt&&Ut&&!ct?z(re):function(){return X(re,ie,ke,arguments,ct)}}var Y=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function se(re,ie,ke){for(var ct=ie+ke,Ut=ie;re[Ut]&&!(Ut>=ct);)++Ut;if(Ut-ie>16&&re.subarray&&Y)return Y.decode(re.subarray(ie,Ut));for(var Dt="";ie<Ut;){var Qe=re[ie++];if(!(Qe&128)){Dt+=String.fromCharCode(Qe);continue}var st=re[ie++]&63;if((Qe&224)==192){Dt+=String.fromCharCode((Qe&31)<<6|st);continue}var Tn=re[ie++]&63;if((Qe&240)==224?Qe=(Qe&15)<<12|st<<6|Tn:Qe=(Qe&7)<<18|st<<12|Tn<<6|re[ie++]&63,Qe<65536)Dt+=String.fromCharCode(Qe);else{var qr=Qe-65536;Dt+=String.fromCharCode(55296|qr>>10,56320|qr&1023)}}return Dt}function ne(re,ie){return re?se(Ce,re,ie):""}function J(re,ie,ke,ct){if(!(ct>0))return 0;for(var Ut=ke,Dt=ke+ct-1,Qe=0;Qe<re.length;++Qe){var st=re.charCodeAt(Qe);if(st>=55296&&st<=57343){var Tn=re.charCodeAt(++Qe);st=65536+((st&1023)<<10)|Tn&1023}if(st<=127){if(ke>=Dt)break;ie[ke++]=st}else if(st<=2047){if(ke+1>=Dt)break;ie[ke++]=192|st>>6,ie[ke++]=128|st&63}else if(st<=65535){if(ke+2>=Dt)break;ie[ke++]=224|st>>12,ie[ke++]=128|st>>6&63,ie[ke++]=128|st&63}else{if(ke+3>=Dt)break;ie[ke++]=240|st>>18,ie[ke++]=128|st>>12&63,ie[ke++]=128|st>>6&63,ie[ke++]=128|st&63}}return ie[ke]=0,ke-Ut}function te(re,ie,ke){return J(re,Ce,ie,ke)}function ce(re,ie){we.set(re,ie)}function pe(re,ie){return re%ie>0&&(re+=ie-re%ie),re}var be,we,Ce,Me,Ge,Ke,it,yt,ht;function ft(re){be=re,a.HEAP8=we=new Int8Array(re),a.HEAP16=Me=new Int16Array(re),a.HEAP32=Ke=new Int32Array(re),a.HEAPU8=Ce=new Uint8Array(re),a.HEAPU16=Ge=new Uint16Array(re),a.HEAPU32=it=new Uint32Array(re),a.HEAPF32=yt=new Float32Array(re),a.HEAPF64=ht=new Float64Array(re)}var bt=a.INITIAL_MEMORY||16777216,wt,$t=[],zt=[],ns=[],Sn=[],or=!1;zt.push({func:function(){eh()}});function Bn(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Cn(a.preRun.shift());Hs($t)}function ms(){or=!0,Hs(zt)}function Gs(){Hs(ns)}function Rs(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)Ir(a.postRun.shift());Hs(Sn)}function Cn(re){$t.unshift(re)}function Ir(re){Sn.unshift(re)}var Fn=0,Sr=null,Cr=null;function Ea(re){Fn++,a.monitorRunDependencies&&a.monitorRunDependencies(Fn)}function Nc(re){if(Fn--,a.monitorRunDependencies&&a.monitorRunDependencies(Fn),Fn==0&&(Sr!==null&&(clearInterval(Sr),Sr=null),Cr)){var ie=Cr;Cr=null,ie()}}a.preloadedImages={},a.preloadedAudios={};function ir(re){a.onAbort&&a.onAbort(re),re+="",P(re),O=!0,V=1,re="abort("+re+"). Build with -s ASSERTIONS=1 for more info.";var ie=new WebAssembly.RuntimeError(re);throw i(ie),ie}function jp(re,ie){return String.prototype.startsWith?re.startsWith(ie):re.indexOf(ie)===0}var V0="data:application/octet-stream;base64,";function qp(re){return jp(re,V0)}var Xp="file://";function Kp(re){return jp(re,Xp)}var ss="tfjs-backend-wasm.wasm";qp(ss)||(ss=A(ss));function Zp(re){try{if(re==ss&&$)return new Uint8Array($);if(w)return w(re);throw"both async and sync fetching of the wasm failed"}catch(ie){ir(ie)}}function U0(){if(!$&&(h||f)){if(typeof fetch=="function"&&!Kp(ss))return fetch(ss,{credentials:"same-origin"}).then(function(re){if(!re.ok)throw"failed to load wasm binary file at '"+ss+"'";return re.arrayBuffer()}).catch(function(){return Zp(ss)});if(b)return new Promise(function(re,ie){b(ss,function(ke){re(new Uint8Array(ke))},ie)})}return Promise.resolve().then(function(){return Zp(ss)})}function G0(){var re={a:Z0};function ie(Qe,st){var Tn=Qe.exports;a.asm=Tn,T=a.asm.j,ft(T.buffer),wt=a.asm.r,Nc("wasm-instantiate")}Ea("wasm-instantiate");function ke(Qe){ie(Qe.instance)}function ct(Qe){return U0().then(function(st){return WebAssembly.instantiate(st,re)}).then(Qe,function(st){P("failed to asynchronously prepare wasm: "+st),ir(st)})}function Ut(){return!$&&typeof WebAssembly.instantiateStreaming=="function"&&!qp(ss)&&!Kp(ss)&&typeof fetch=="function"?fetch(ss,{credentials:"same-origin"}).then(function(Qe){var st=WebAssembly.instantiateStreaming(Qe,re);return st.then(ke,function(Tn){return P("wasm streaming compile failed: "+Tn),P("falling back to ArrayBuffer instantiation"),ct(ke)})}):ct(ke)}if(a.instantiateWasm)try{var Dt=a.instantiateWasm(re,ie);return Dt}catch(Qe){return P("Module.instantiateWasm callback failed with error: "+Qe),!1}return Ut().catch(i),{}}function Hs(re){for(;re.length>0;){var ie=re.shift();if(typeof ie=="function"){ie(a);continue}var ke=ie.func;typeof ke=="number"?ie.arg===void 0?wt.get(ke)():wt.get(ke)(ie.arg):ke(ie.arg===void 0?null:ie.arg)}}function Ec(){ir()}function oi(re,ie,ke){Ce.copyWithin(re,ie,ie+ke)}function H0(){return Ce.length}function j0(re){try{return T.grow(re-be.byteLength+65535>>>16),ft(T.buffer),1}catch(ie){}}function jr(re){var ie=H0(),ke=2147483648;if(re>ke)return!1;for(var ct=1;ct<=4;ct*=2){var Ut=ie*(1+.2/ct);Ut=Math.min(Ut,re+100663296);var Dt=Math.min(ke,pe(Math.max(re,Ut),65536)),Qe=j0(Dt);if(Qe)return!0}return!1}var ii={mappings:{},buffers:[null,[],[]],printChar:function(re,ie){var ke=ii.buffers[re];ie===0||ie===10?((re===1?R:P)(se(ke,0)),ke.length=0):ke.push(ie)},varargs:void 0,get:function(){ii.varargs+=4;var re=Ke[ii.varargs-4>>2];return re},getStr:function(re){var ie=ne(re);return ie},get64:function(re,ie){return re}};function q0(re){return 0}function Yp(re,ie,ke,ct,Ut){}function X0(re,ie,ke,ct){for(var Ut=0,Dt=0;Dt<ke;Dt++){for(var Qe=Ke[ie+Dt*8>>2],st=Ke[ie+(Dt*8+4)>>2],Tn=0;Tn<st;Tn++)ii.printChar(re,Ce[Qe+Tn]);Ut+=st}return Ke[ct>>2]=Ut,0}function Jp(){return 6}function rs(){return 28}function Qp(re){return Ke[dh()>>2]=re,re}function K0(re){switch(re){case 30:return 16384;case 85:var ie=2147483648;return ie/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return Qp(28),-1}var Z0={a:Ec,d:oi,e:jr,f:q0,c:Yp,b:X0,h:Jp,g:rs,i:K0},Y0=G0(),eh=a.___wasm_call_ctors=function(){return(eh=a.___wasm_call_ctors=a.asm.k).apply(null,arguments)},Ml=a._init=function(){return(Ml=a._init=a.asm.l).apply(null,arguments)},Ra=a._init_with_threads_count=function(){return(Ra=a._init_with_threads_count=a.asm.m).apply(null,arguments)},Rc=a._get_threads_count=function(){return(Rc=a._get_threads_count=a.asm.n).apply(null,arguments)},J0=a._register_tensor=function(){return(J0=a._register_tensor=a.asm.o).apply(null,arguments)},Q0=a._dispose_data=function(){return(Q0=a._dispose_data=a.asm.p).apply(null,arguments)},th=a._dispose=function(){return(th=a._dispose=a.asm.q).apply(null,arguments)},Re=a._Abs=function(){return(Re=a._Abs=a.asm.s).apply(null,arguments)},eg=a._Add=function(){return(eg=a._Add=a.asm.t).apply(null,arguments)},tg=a._AddN=function(){return(tg=a._AddN=a.asm.u).apply(null,arguments)},ng=a._All=function(){return(ng=a._All=a.asm.v).apply(null,arguments)},sg=a._Any=function(){return(sg=a._Any=a.asm.w).apply(null,arguments)},rg=a._ArgMax=function(){return(rg=a._ArgMax=a.asm.x).apply(null,arguments)},li=a._AvgPool=function(){return(li=a._AvgPool=a.asm.y).apply(null,arguments)},ag=a._BatchMatMul=function(){return(ag=a._BatchMatMul=a.asm.z).apply(null,arguments)},og=a._Ceil=function(){return(og=a._Ceil=a.asm.A).apply(null,arguments)},ig=a._ClipByValue=function(){return(ig=a._ClipByValue=a.asm.B).apply(null,arguments)},lg=a._Conv2D=function(){return(lg=a._Conv2D=a.asm.C).apply(null,arguments)},ug=a._Conv2DBackpropInput=function(){return(ug=a._Conv2DBackpropInput=a.asm.D).apply(null,arguments)},cg=a._Cos=function(){return(cg=a._Cos=a.asm.E).apply(null,arguments)},nh=a._Cosh=function(){return(nh=a._Cosh=a.asm.F).apply(null,arguments)},dg=a._CropAndResize=function(){return(dg=a._CropAndResize=a.asm.G).apply(null,arguments)},pg=a._Cumsum=function(){return(pg=a._Cumsum=a.asm.H).apply(null,arguments)},$a=a._DepthToSpace=function(){return($a=a._DepthToSpace=a.asm.I).apply(null,arguments)},$c=a._DepthwiseConv2dNative=function(){return($c=a._DepthwiseConv2dNative=a.asm.J).apply(null,arguments)},Dc=a._Elu=function(){return(Dc=a._Elu=a.asm.K).apply(null,arguments)},hg=a._Equal=function(){return(hg=a._Equal=a.asm.L).apply(null,arguments)},fg=a._Exp=function(){return(fg=a._Exp=a.asm.M).apply(null,arguments)},mg=a._FlipLeftRight=function(){return(mg=a._FlipLeftRight=a.asm.N).apply(null,arguments)},gg=a._Floor=function(){return(gg=a._Floor=a.asm.O).apply(null,arguments)},yg=a._FloorDiv=function(){return(yg=a._FloorDiv=a.asm.P).apply(null,arguments)},qe=a._FusedBatchNorm=function(){return(qe=a._FusedBatchNorm=a.asm.Q).apply(null,arguments)},Ag=a._FusedConv2D=function(){return(Ag=a._FusedConv2D=a.asm.R).apply(null,arguments)},xg=a._FusedDepthwiseConv2D=function(){return(xg=a._FusedDepthwiseConv2D=a.asm.S).apply(null,arguments)},bg=a._Gather=function(){return(bg=a._Gather=a.asm.T).apply(null,arguments)},vg=a._GatherNd=function(){return(vg=a._GatherNd=a.asm.U).apply(null,arguments)},wg=a._Greater=function(){return(wg=a._Greater=a.asm.V).apply(null,arguments)},kg=a._GreaterEqual=function(){return(kg=a._GreaterEqual=a.asm.W).apply(null,arguments)},_c=a._LeakyRelu=function(){return(_c=a._LeakyRelu=a.asm.X).apply(null,arguments)},sh=a._Less=function(){return(sh=a._Less=a.asm.Y).apply(null,arguments)},rh=a._LessEqual=function(){return(rh=a._LessEqual=a.asm.Z).apply(null,arguments)},Ig=a._Log=function(){return(Ig=a._Log=a.asm._).apply(null,arguments)},Sg=a._LogicalAnd=function(){return(Sg=a._LogicalAnd=a.asm.$).apply(null,arguments)},Cg=a._Max=function(){return(Cg=a._Max=a.asm.aa).apply(null,arguments)},Tg=a._MaxPool=function(){return(Tg=a._MaxPool=a.asm.ba).apply(null,arguments)},Ng=a._Maximum=function(){return(Ng=a._Maximum=a.asm.ca).apply(null,arguments)},Eg=a._Mean=function(){return(Eg=a._Mean=a.asm.da).apply(null,arguments)},Rg=a._Min=function(){return(Rg=a._Min=a.asm.ea).apply(null,arguments)},mt=a._Minimum=function(){return(mt=a._Minimum=a.asm.fa).apply(null,arguments)},$g=a._MirrorPad=function(){return($g=a._MirrorPad=a.asm.ga).apply(null,arguments)},Dg=a._Multiply=function(){return(Dg=a._Multiply=a.asm.ha).apply(null,arguments)},_g=a._Neg=function(){return(_g=a._Neg=a.asm.ia).apply(null,arguments)},zl=a._NonMaxSuppressionV3=function(){return(zl=a._NonMaxSuppressionV3=a.asm.ja).apply(null,arguments)},ah=a._NonMaxSuppressionV4=function(){return(ah=a._NonMaxSuppressionV4=a.asm.ka).apply(null,arguments)},oh=a._NonMaxSuppressionV5=function(){return(oh=a._NonMaxSuppressionV5=a.asm.la).apply(null,arguments)},ih=a._NotEqual=function(){return(ih=a._NotEqual=a.asm.ma).apply(null,arguments)},Fg=a._OneHot=function(){return(Fg=a._OneHot=a.asm.na).apply(null,arguments)},Pg=a._PadV2=function(){return(Pg=a._PadV2=a.asm.oa).apply(null,arguments)},lh=a._Pow=function(){return(lh=a._Pow=a.asm.pa).apply(null,arguments)},Og=a._Prelu=function(){return(Og=a._Prelu=a.asm.qa).apply(null,arguments)},Mg=a._Prod=function(){return(Mg=a._Prod=a.asm.ra).apply(null,arguments)},zg=a._RealDiv=function(){return(zg=a._RealDiv=a.asm.sa).apply(null,arguments)},Lg=a._Relu=function(){return(Lg=a._Relu=a.asm.ta).apply(null,arguments)},Bg=a._Relu6=function(){return(Bg=a._Relu6=a.asm.ua).apply(null,arguments)},uh=a._ResizeBilinear=function(){return(uh=a._ResizeBilinear=a.asm.va).apply(null,arguments)},Da=a._Reverse=function(){return(Da=a._Reverse=a.asm.wa).apply(null,arguments)},Wg=a._RotateWithOffset=function(){return(Wg=a._RotateWithOffset=a.asm.xa).apply(null,arguments)},Vg=a._Round=function(){return(Vg=a._Round=a.asm.ya).apply(null,arguments)},b5=a._Rsqrt=function(){return(b5=a._Rsqrt=a.asm.za).apply(null,arguments)},ch=a._ScatterNd=function(){return(ch=a._ScatterNd=a.asm.Aa).apply(null,arguments)},Ug=a._SelectV2=function(){return(Ug=a._SelectV2=a.asm.Ba).apply(null,arguments)},Gg=a._Sigmoid=function(){return(Gg=a._Sigmoid=a.asm.Ca).apply(null,arguments)},Hg=a._Sin=function(){return(Hg=a._Sin=a.asm.Da).apply(null,arguments)},jg=a._Softmax=function(){return(jg=a._Softmax=a.asm.Ea).apply(null,arguments)},qg=a._Sqrt=function(){return(qg=a._Sqrt=a.asm.Fa).apply(null,arguments)},Xg=a._Square=function(){return(Xg=a._Square=a.asm.Ga).apply(null,arguments)},Kg=a._SquaredDifference=function(){return(Kg=a._SquaredDifference=a.asm.Ha).apply(null,arguments)},Zg=a._Step=function(){return(Zg=a._Step=a.asm.Ia).apply(null,arguments)},Yg=a._StridedSlice=function(){return(Yg=a._StridedSlice=a.asm.Ja).apply(null,arguments)},Jg=a._Sub=function(){return(Jg=a._Sub=a.asm.Ka).apply(null,arguments)},Qg=a._Sum=function(){return(Qg=a._Sum=a.asm.La).apply(null,arguments)},e2=a._Tan=function(){return(e2=a._Tan=a.asm.Ma).apply(null,arguments)},t2=a._Tanh=function(){return(t2=a._Tanh=a.asm.Na).apply(null,arguments)},n2=a._Tile=function(){return(n2=a._Tile=a.asm.Oa).apply(null,arguments)},s2=a._TopK=function(){return(s2=a._TopK=a.asm.Pa).apply(null,arguments)},r2=a._Transform=function(){return(r2=a._Transform=a.asm.Qa).apply(null,arguments)},a2=a._Transpose=function(){return(a2=a._Transpose=a.asm.Ra).apply(null,arguments)},o2=a.__FusedMatMul=function(){return(o2=a.__FusedMatMul=a.asm.Sa).apply(null,arguments)},i2=a._malloc=function(){return(i2=a._malloc=a.asm.Ta).apply(null,arguments)},l2=a._free=function(){return(l2=a._free=a.asm.Ua).apply(null,arguments)},dh=a.___errno_location=function(){return(dh=a.___errno_location=a.asm.Va).apply(null,arguments)},ph=a.stackSave=function(){return(ph=a.stackSave=a.asm.Wa).apply(null,arguments)},hh=a.stackRestore=function(){return(hh=a.stackRestore=a.asm.Xa).apply(null,arguments)},Fc=a.stackAlloc=function(){return(Fc=a.stackAlloc=a.asm.Ya).apply(null,arguments)};a.cwrap=ee;var Ll;function u2(re){this.name="ExitStatus",this.message="Program terminated with exit("+re+")",this.status=re}Cr=function re(){Ll||Pc(),Ll||(Cr=re)};function Pc(re){if(re=re||u,Fn>0||(Bn(),Fn>0))return;function ie(){Ll||(Ll=!0,a.calledRun=!0,!O&&(ms(),Gs(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Rs()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),ie()},1)):ie()}if(a.run=Pc,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return Pc(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),hE=1e-7,fE=1e-4,Hc=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},jl=class{refCount(e){return js("refCount")}incRef(e){return js("incRef")}timerAvailable(){return!0}time(e){return js("time")}read(e){return js("read")}readSync(e){return js("readSync")}numDataIds(){return js("numDataIds")}disposeData(e,t){return js("disposeData")}write(e,t,n){return js("write")}move(e,t,n,s,r){return js("move")}memory(){return js("memory")}floatPrecision(){return js("floatPrecision")}epsilon(){return this.floatPrecision()===32?hE:fE}dispose(){return js("dispose")}};function js(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function L5(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,xh(e,t,n)}function mE(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,xh(e,n,s),xh(t,n,s)}function jc(e,t,n){return Math.max(e,Math.min(t,n))}function gE(e){return e%2==0?e:e+1}function xh(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function yE(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function AE(e,t){let n=Math.random();return t*n+(1-n)*e}function xE(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function M(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Vn(e,t,n=""){M(Kr(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function di(e){M(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function pi(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||On(e)&&!n)for(let s=0;s<e.length;++s)pi(e[s],t,n);else t.push(e);return t}function Ht(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function bE(e){return e.length===0}function Kr(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function An(e){return e%1==0}function vE(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function wE(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function kE(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return L5(t),t}function qc(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function IE(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function SE(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function qs(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),M(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),M(e.every(s=>An(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function B5(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:qs(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function W5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function V5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function U5(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function G5(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function CE(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function On(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function m2(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function H5(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function za(e){return typeof e=="string"||e instanceof String}function j5(e){return typeof e=="boolean"}function q5(e){return typeof e=="number"}function bh(e){return Array.isArray(e)?bh(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":q5(e)?"float32":za(e)?"string":j5(e)?"bool":"float32"}function La(e){return!!(e&&e.constructor&&e.call&&e.apply)}function vh(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ql(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function X5(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<a;l++)r[l]=X5(e+l*i,o,n,s)}return r}function Xl(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return X5(0,e,t,n)}function g2(e,t){let n=wh(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function wh(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function TE(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Xl(e,new Float32Array(n));if(t==="int32")return Xl(e,new Int32Array(n));if(t==="bool")return Xl(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function y2(e){e.forEach(t=>{M(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function NE(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function EE(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function A2(e){return e&&e.then&&typeof e.then=="function"}function Tr(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(...e)}function RE(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.log(...e)}var K5="tfjsflags",Z5=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=$E,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&Tr(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];Tr(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(A2(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);K5 in e&&e[K5].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=_E(s,r)})}};function $E(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(DE(t,s[0],s[1]),s.join("="))),t}function DE(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function _E(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function K(){return Nr}var Nr=null;function FE(e){Nr=e}var x2;function Y5(){if(x2==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");x2=e}return x2}function PE(){let e=Y5();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function b2(e,t){let n=PE();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var hi="Abs",Kl="Acos",Zl="Acosh",Er="Add",Ba="AddN",Yl="All",Jl="Any",Wa="ArgMax",Ql="ArgMin",eu="Asin",tu="Asinh",nu="Atan",su="Atanh",ru="Atan2",Va="AvgPool",kh="AvgPoolGrad",Xc="AvgPool3D",Ih="AvgPool3DGrad",Ua="BatchMatMul",fi="BatchToSpaceND",Sh="Bincount",J5="BroadcastTo",Ch="BroadcastArgs",Ga="Cast",Zr="Ceil",Yr="ClipByValue",Kc="Complex",Zc="ComplexAbs",mi="Concat",Ha="Conv2D",Th="Conv2DBackpropFilter",ja="Conv2DBackpropInput",Yc="Conv3D",Nh="Conv3DBackpropFilterV2",Eh="Conv3DBackpropInputV2",qa="Cos",Xa="Cosh",gi="Cumsum",yi="CropAndResize",Rh="DenseBincount",Ai="DepthToSpace",Ka="DepthwiseConv2dNative",$h="DepthwiseConv2dNativeBackpropFilter",Dh="DepthwiseConv2dNativeBackpropInput",_h="Diag",Jc="Dilation2D",Fh="Dilation2DBackpropInput",Ph="Dilation2DBackpropFilter",Za="RealDiv",Qc="Einsum",Ya="Elu",Oh="EluGrad",au="Erf",Ja="Equal",Jr="Exp",xi="ExpandDims",Qa="Expm1",Mh="FFT",ou="Fill",bi="FlipLeftRight",Qr="Floor",eo="FloorDiv",to="FusedBatchNorm",vi="GatherV2",wi="GatherNd",no="Greater",ea="GreaterEqual",so="Identity",zh="IFFT",ed="Imag",iu="IsFinite",lu="IsInf",uu="IsNan",ki="LeakyRelu",ro="Less",ao="LessEqual",Lh="LinSpace",ta="Log",cu="Log1p",Ii="LogicalAnd",du="LogicalNot",td="LogicalOr",Q5="LogSoftmax",nd="LRN",Bh="LRNGrad",oo="Max",na="Maximum",io="MaxPool",Wh="MaxPoolGrad",sd="MaxPool3D",Vh="MaxPool3DGrad",Uh="MaxPoolWithArgmax",lo="Mean",uo="Min",sa="Minimum",co="MirrorPad",pu="Mod",Gh="Multinomial",ra="Multiply",Si="Neg",po="NotEqual",Ci="NonMaxSuppressionV3",hu="NonMaxSuppressionV4",Ti="NonMaxSuppressionV5",Ni="OnesLike",Ei="OneHot",Ri="Pack",ho="PadV2",OE="Pool",fo="Pow",mo="Prelu",$i="Prod",fu="Range",rd="Real",mu="Reciprocal",go="Relu",Di="Reshape",gu="ResizeNearestNeighbor",Hh="ResizeNearestNeighborGrad",yo="ResizeBilinear",jh="ResizeBilinearGrad",Ao="Relu6",_i="Reverse",Fi="Round",aa="Rsqrt",Pi="ScatterNd",Oi="Select",yu="Selu",Mi="Slice",xo="Sin",zi="Sinh",Au="Sign",oa="Sigmoid",xu="Softplus",ia="Sqrt",bo="Sum",Li="SpaceToBatchND",Bi="SplitV",vo="Softmax",qh="SparseFillEmptyRows",Xh="SparseReshape",Kh="SparseSegmentMean",Zh="SparseSegmentSum",ad="SparseToDense",la="SquaredDifference",bu="Square",Wi="StridedSlice",od="StringNGrams",Yh="StringSplit",Jh="StringToHashBucketFast",ua="Sub",Vi="Tan",wo="Tanh",ca="Tile",vu="TopK",Ui="Transform",ko="Transpose",Qh="Unique",Gi="Unpack",id="UnsortedSegmentSum",Hi="ZerosLike",Io="Step",ld="FromPixels",ji="RotateWithOffset",So="_FusedMatMul",Co="FusedConv2D",To="FusedDepthwiseConv2D",wu=b2("kernelRegistry",()=>new Map),ud=b2("gradRegistry",()=>new Map);function ef(e,t){let n=w2(e,t);return wu.get(n)}function v2(e){return ud.get(e)}function da(e){let t=wu.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function pa(e){let{kernelName:t,backendName:n}=e,s=w2(t,n);wu.has(s)&&Tr(`The kernel '${t}' for backend '${n}' is already registered`),wu.set(s,e)}function e3(e){let{kernelName:t}=e;ud.has(t)&&K().getBool("DEBUG")&&Tr(`Overriding the gradient for '${t}'`),ud.set(t,e)}function ME(e,t){let n=w2(e,t);if(!wu.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);wu.delete(n)}function zE(e){if(!ud.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ud.delete(e)}function LE(e,t){da(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});pa(r)})}function w2(e,t){return`${t}_${e}`}var v={};ze(v,{arraysEqual:()=>Kr,assert:()=>M,assertNonNegativeIntegerDimensions:()=>y2,assertNonNull:()=>di,assertShapesMatch:()=>Vn,bytesFromStringArray:()=>H5,bytesPerElement:()=>m2,checkConversionForErrors:()=>U5,clamp:()=>jc,computeStrides:()=>ql,createScalarValue:()=>HE,createShuffledIndices:()=>kE,decodeString:()=>sf,distSquared:()=>xE,encodeString:()=>pd,fetch:()=>qE,fingerPrint64:()=>GE,flatten:()=>pi,getArrayFromDType:()=>V5,getTypedArrayFromDType:()=>W5,hasEncodingLoss:()=>CE,hexToLong:()=>cd,indexToLoc:()=>EE,inferDtype:()=>bh,inferFromImplicitShape:()=>SE,isBoolean:()=>j5,isFunction:()=>La,isInt:()=>An,isNumber:()=>q5,isPromise:()=>A2,isScalarShape:()=>bE,isString:()=>za,isTypedArray:()=>On,isValidDtype:()=>G5,locToIndex:()=>NE,makeOnesTypedArray:()=>g2,makeZerosNestedTypedArray:()=>TE,makeZerosTypedArray:()=>wh,nearestDivisor:()=>vh,nearestLargerEven:()=>gE,now:()=>dd,parseAxisParam:()=>qs,randUniform:()=>AE,repeatedTry:()=>IE,rightPad:()=>qc,shuffle:()=>L5,shuffleCombo:()=>mE,sizeFromShape:()=>Ht,sizeToSquarishShape:()=>wE,squeezeShape:()=>B5,sum:()=>yE,swap:()=>xh,tanh:()=>vE,toNestedArray:()=>Xl,toTypedArray:()=>nf});var t3=ci(qN()),qi=t3.default||t3;function cd(e){return qi.fromString(e,!0,16)}var n3=cd("c3a5c85c97cb3127"),Xi=cd("b492b66fbe98f273"),Un=cd("9ae16a3b2f90404f");function k2(e){return e.xor(e.shru(47))}function s3(e,t,n){let s=e.slice(t,t+n);return qi.fromBytes(Array.from(s),!0,!0)}function Ct(e,t){return s3(e,t,8)}function r3(e,t){return s3(e,t,4)}function xn(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function No(e,t,n=cd("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function BE(e,t,n,s,r,a){r=r.add(e),a=xn(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(xn(r,44)),[r.add(s),a.add(o)]}function tf(e,t,n,s){return BE(Ct(e,t),Ct(e,t+8),Ct(e,t+16),Ct(e,t+24),n,s)}function WE(e,t=e.length){if(t>=8){let n=Un.add(t*2),s=Ct(e,0).add(Un),r=Ct(e,t-8),a=xn(r,37).mul(n).add(s),o=xn(s,25).add(r).mul(n);return No(a,o,n)}if(t>=4){let n=Un.add(t*2),s=r3(e,0);return No(s.shl(3).add(t),r3(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return k2(Un.mul(a).xor(n3.mul(o))).mul(Un)}return Un}function VE(e,t=e.length){let n=Un.add(t*2),s=Ct(e,0).mul(Xi),r=Ct(e,8),a=Ct(e,t-8).mul(n),o=Ct(e,t-16).mul(Un);return No(xn(s.add(r),43).add(xn(a,30)).add(o),s.add(xn(r.add(Un),18)).add(a),n)}function UE(e,t=e.length){let n=Un.add(t*2),s=Ct(e,0).mul(Un),r=Ct(e,8),a=Ct(e,t-8).mul(n),o=Ct(e,t-16).mul(Un),i=xn(s.add(r),43).add(xn(a,30)).add(o),l=No(i,s.add(xn(r.add(Un),18)).add(a),n),c=Ct(e,16).mul(n),u=Ct(e,24),d=i.add(Ct(e,t-32)).mul(n),p=l.add(Ct(e,t-24)).mul(n);return No(xn(c.add(u),43).add(xn(d,30)).add(p),c.add(xn(u.add(s),18)).add(d),n)}function GE(e,t=e.length){let n=qi.fromNumber(81,!0);if(t<=32)return t<=16?WE(e,t):VE(e,t);if(t<=64)return UE(e,t);let s=n,r=n.mul(Xi).add(113),a=k2(r.mul(Un).add(113)).mul(Un),o=[qi.UZERO,qi.UZERO],i=[qi.UZERO,qi.UZERO];s=s.mul(Un).add(Ct(e,0));let l=0,c=(t-1>>6)*64,u=c+(t-1&63)-63;do s=xn(s.add(r).add(o[0]).add(Ct(e,l+8)),37).mul(Xi),r=xn(r.add(o[1]).add(Ct(e,l+48)),42).mul(Xi),s=s.xor(i[1]),r=r.add(o[0]).add(Ct(e,l+40)),a=xn(a.add(i[0]),33).mul(Xi),o=tf(e,l,o[1].mul(Xi),s.add(i[0])),i=tf(e,l+32,a.add(i[1]),r.add(Ct(e,l+16))),[a,s]=[s,a],l+=64;while(l!==c);let d=Xi.add(a.and(255).shl(1));return l=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=xn(s.add(r).add(o[0]).add(Ct(e,l+8)),37).mul(d),r=xn(r.add(o[1]).add(Ct(e,l+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(Ct(e,l+40))),a=xn(a.add(i[0]),33).mul(d),o=tf(e,l,o[1].mul(d),s.add(i[0])),i=tf(e,l+32,a.add(i[1]),r.add(Ct(e,l+16))),[a,s]=[s,a],No(No(o[0],i[0],d).add(k2(r).mul(n3)).add(a),No(o[1],i[1],d).add(s),d)}function HE(e,t){return t==="string"?pd(e):nf([e],t)}function jE(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function nf(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=pi(e)),K().getBool("DEBUG")&&U5(e,t),jE(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function dd(){return K().platform.now()}function qE(e,t){return K().platform.fetch(e,t)}function pd(e,t="utf-8"){return t=t||"utf-8",K().platform.encode(e,t)}function sf(e,t="utf-8"){return t=t||"utf-8",K().platform.decode(e,t)}var XE=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new ZE)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=dd();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:dd()-o})}if(K().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let c=s[l];c.data().then(u=>{KE(u,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function KE(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var ZE=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?qc(`${s}ms`,9):s.error,i=qc(e,25),l=t.rank,c=t.size,u=qc(t.shape.toString(),14),d="";for(let p in r){let h=r[p];if(h!=null){let f=h.shape||t.shape,m=f.length;d+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${u}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function YE(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let c=e[l],u=c.inputs;for(let d in u){let p=u[d],h=!1;for(let f=0;f<t.length;f++)if(s[p.id]){c.outputs.forEach(m=>s[m.id]=!0),h=!0,r[c.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let c=e[l],u=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(let p in u)a[u[p].id]=!0,o[c.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let c=e[l];if(r[c.id]&&o[c.id]){let u={};for(let p in c.inputs){let h=c.inputs[p];s[h.id]&&(u[p]=h)}let d=Object.assign({},c);d.inputs=u,d.outputs=c.outputs,i.push(d)}}return i}function JE(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let c=e[l.id];c!=null?o.push(c):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let c=n(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=a.inputs[l];if(!Kr(c.shape,u.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=c;else{let d=e[u.id];e[u.id]=s(d,c),d.dispose()}}}}var a3=20,hd=3,I2=7;function QE(e,t,n,s){let r=ql(t),a=e9(e,t,n,r),o=t.length,i=rf(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function e9(e,t,n,s){let r=Ht(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?md(e):e;if(i>1)for(let c=0;c<r/a;c++){let u=c*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],fd(l[u+d],0,n).length)}return o}function fd(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(I2))} + ${parseFloat(e[1].toFixed(I2))}j`:za(e)?s=`'${e}'`:n==="bool"?s=o3(e):s=parseFloat(e.toFixed(I2)).toString(),qc(s,t)}function o3(e){return e===0?"false":"true"}function rf(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=md(e);return[fd(m[0],0,n)]}return n==="bool"?[o3(e[0])]:[e[0].toString()]}if(l===1){if(i>a3){let g=hd*o,y=Array.from(e.slice(0,g)),A=Array.from(e.slice((i-hd)*o,i*o));return n==="complex64"&&(y=md(y),A=md(A)),["["+y.map((x,b)=>fd(x,r[b],n)).join(", ")+", ..., "+A.map((x,b)=>fd(x,r[i-hd+b],n)).join(", ")+"]"]}let m=n==="complex64"?md(e):Array.from(e);return["["+m.map((g,y)=>fd(g,r[y],n)).join(", ")+"]"]}let c=t.slice(1),u=s.slice(1),d=s[0]*o,p=[];if(i>a3){for(let m=0;m<hd;m++){let g=m*d,y=g+d;p.push(...rf(e.slice(g,y),c,n,u,r,!1))}p.push("...");for(let m=i-hd;m<i;m++){let g=m*d,y=g+d;p.push(...rf(e.slice(g,y),c,n,u,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,y=g+d;p.push(...rf(e.slice(g,y),c,n,u,r,m===i-1))}let h=l===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function md(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var jt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ht(e),n!=null){let s=n.length;M(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||V5(t,this.size),this.strides=ql(e)}set(e,...t){t.length===0&&(t=[0]),M(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Rr().makeTensor(this.values,this.shape,this.dtype)}},Rr=null,ku=null,t9=null;function n9(e){Rr=e}function s9(e){ku=e}function r9(e){t9=e}var Ze=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ht(e),this.strides=ql(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return ku.buffer(this.shape,this.dtype,e)}bufferSync(){return ku.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Xl(this.shape,e,this.dtype==="complex64")}arraySync(){return Xl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Rr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>sf(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Rr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>sf(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Rr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Rr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ku.print(this,e)}clone(){return this.throwIfDisposed(),ku.clone(this)}toString(e=!1){let t=this.dataSync();return QE(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ku.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Rr().makeVariable(this,e,t,n)}};Object.defineProperty(Ze,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function ae(){return b2("Tensor",()=>Ze)}ae();var gd=class extends Ze{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Kr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Rr().disposeTensor(this),this.dataId=e.dataId,Rr().incRef(this,null)}dispose(){Rr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(gd,Symbol.hasInstance,{value:e=>e instanceof Ze&&e.assign!=null&&e.assign instanceof Function});var lr={};ze(lr,{assertTypesMatch:()=>i3,getTensorsInContainer:()=>R2,isTensorInList:()=>o9,makeTypesMatch:()=>Lt});var S2;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(S2||(S2={}));var C2;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(C2||(C2={}));var T2;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(T2||(T2={}));var N2;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(N2||(N2={}));var E2;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(E2||(E2={}));var a9={float32:N2,int32:C2,bool:T2,complex64:E2};function Mn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return a9[e][t]}function yd(e){return Mn(e,"int32")}function Lt(e,t){if(e.dtype===t.dtype)return[e,t];let n=Mn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i3(e,t){M(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function o9(e,t){return t.some(n=>n.id===e.id)}function R2(e){let t=[],n=new Set;return l3(e,t,n),t}function l3(e,t,n){if(e==null)return;if(e instanceof Ze){t.push(e);return}if(!i9(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),l3(a,t,n))}}function i9(e){return Array.isArray(e)||typeof e=="object"}function $2(e){return e.kernelName!=null}var u3=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Ad=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new u3}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Tr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new XE(this.backendInstance),!0}setupRegisteredKernels(){da(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){da(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof jl)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Tr(`Initialization of backend ${e} failed`),Tr(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Tr(`Initialization of backend ${e} failed`),Tr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Ad.nextTensorId++}nextVariableId(){return Ad.nextVariableId++}clone(e){let t=W.runKernel(so,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return W.runKernel(Ga,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(ef(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=$2(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if($2(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=ef(h,this.backendName);M(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let y=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let A=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,y,A);let x=A.map(b=>{if(b.rank!=null)return b;let{dataId:w,shape:k,dtype:S}=b;return this.makeTensorFromDataId(w,k,S)});if(s){let b=this.getTensorsForGradient(h,f,x);n=this.saveTensorsForBackwardMode(b)}return x}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:c,attrs:u}=e,d=$2(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(l,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(l,c,t,d,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(h=>c[h]!=null?c[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=v2(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(M(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,c)=>a[c]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&za(e[0])&&(r=e.map(i=>pd(i)));let a=s.write(r,t,n),o=new Ze(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=H5(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r=new Ze(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new gd(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*m2(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof gd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*m2(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=v2(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((c,u)=>{if(c==null){let d=n[u],p=wh(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=R2(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(M(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));M(r instanceof Ze,()=>"The result y returned by f() must be a tensor.");let a=YE(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n==null?l9(r.shape):n,JE(o,a,l=>this.tidy(l),u9);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return M(La(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{M(t.every(o=>o instanceof Ze),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),M(n.value instanceof Ze,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M(La(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),c=Array.isArray(l)?l:[l];M(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(c.every(d=>d instanceof Ze),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return c.forEach((d,p)=>{u[p]=()=>d}),u};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=dd(),n=await this.backend.time(e);return n.wallMs=dd()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new u3;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};Ad.nextTensorId=0;Ad.nextVariableId=0;function l9(e){let t=g2(Ht(e),"float32");return W.makeTensor(t,e,"float32")}function c3(){let e=Y5();if(e._tfengine==null){let t=new Z5(e);e._tfengine=new Ad(t)}return FE(e._tfengine.ENV),n9(()=>e._tfengine),e._tfengine}var W=c3();function u9(e,t){let n={a:e,b:t};return W.runKernel(Er,n)}var Iu={};ze(Iu,{isBrowser:()=>d3,isMobile:()=>p9,mockIsMobile:()=>d9});function c9(){return typeof navigator!="undefined"&&navigator!=null}var D2;function d9(e){D2=e}function p9(e){if(D2!==void 0)return D2;if(e||c9()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function d3(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var ur=K();ur.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ur.registerFlag("IS_BROWSER",()=>d3());ur.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");ur.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ur.registerFlag("PROD",()=>!1);ur.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ur.getBool("DEBUG"));ur.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ur.registerFlag("IS_TEST",()=>!1);ur.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);ur.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function $r(e,t){let n=e;if(On(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||On(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&K().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&p3(e,s,[]),s}function p3(e,t,n){if(n=n||[],!Array.isArray(e)&&!On(e)){M(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}M(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),M(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)p3(e[r],s,n.concat(r))}function h3(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function F(e,t,n,s="numeric"){if(e instanceof Ze)return h3(s,e.dtype,t,n),e;let r=bh(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),h3(s,r,t,n),e==null||!On(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=$r(e,r);!On(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?nf(e,r):pi(e,[],!0);return W.makeTensor(i,a,r)}function xd(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>F(a,`${t}[${o}]`,n,s))}var f3="__op";function U(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+f3;let r=(...a)=>{W.startScope(n);try{let o=s(...a);return A2(o)&&console.error("Cannot return a Promise inside of tidy."),W.endScope(o),o}catch(o){throw W.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function h9(e,t){let n=F(e,"real","complex"),s=F(t,"imag","complex");Vn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return W.runKernel(Kc,r)}var Eo=U({complex_:h9});function Ro(e,t,n,s){if(s==null&&(s=bh(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!On(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){y2(t);let r=Ht(t),a=Ht(n);M(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==Ht(t.slice(o)):!0;M(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!On(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?nf(e,s):pi(e,[],!0),W.makeTensor(e,t,s)}function qt(e,t,n){let s=$r(e,n);return Ro(e,t,s,n)}var _2={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},af=4;async function f9(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async d=>{let p=await l.bytes(),h=p.reduce((g,y)=>g+y.length,0)+af*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let y=p[g],A=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(A,m),m+=af,f.set(y,m),m+=y.length}d(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),n.push(c)}let a=await Promise.all(s);return{data:m9(a),specs:n}}function m3(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,c=Ht(l),u;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=_2[d.dtype],h=e.slice(r,r+c*p),f=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=v9()),u=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*p}else if(i==="string"){let d=Ht(a.shape);u=[];for(let p=0;p<d;p++){let h=new Uint32Array(e.slice(r,r+af))[0];r+=af;let f=new Uint8Array(e.slice(r,r+h));u.push(f),r+=h}}else{let d=_2[i],p=e.slice(r,r+c*d);if(i==="float32")u=new Float32Array(p);else if(i==="int32")u=new Int32Array(p);else if(i==="bool")u=new Uint8Array(p);else if(i==="complex64"){u=new Float32Array(p);let h=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<h.length;y++)h[y]=u[y*2],f[y]=u[y*2+1];let m=qt(h,l,"float32"),g=qt(f,l,"float32");n[o]=Eo(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*d}i!=="complex64"&&(n[o]=qt(u,l,i))}return n}function m9(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var F2=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function g3(e){return F2?Buffer.byteLength(e):new Blob([e]).size}function g9(e){if(F2)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function y9(e){if(F2){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function P2(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function y3(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function A3(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function O2(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function bd(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:g3(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:g3(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function A9(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)==0;)r-=8388608,s<<=1;return s&=~8388608,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function x9(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function b9(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function v9(){let e=A9(),t=x9(),n=b9();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var Gt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Gt.instance==null&&(Gt.instance=new Gt),Gt.instance}static registerSaveRouter(e){Gt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Gt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Gt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Gt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?Gt.getInstance().loadRouters:Gt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},w9=e=>Gt.registerSaveRouter(e),k9=e=>Gt.registerLoadRouter(e),I9=e=>Gt.getSaveHandlers(e),S9=(e,t)=>Gt.getLoadHandlers(e,t),M2="tensorflowjs",z2=1,Ki="models_store",$o="model_info_store";function x3(){if(!K().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function L2(e){let t=e.result;t.createObjectStore(Ki,{keyPath:"modelPath"}),t.createObjectStore($o,{keyPath:"modelPath"})}var Zi=class{constructor(e){if(this.indexedDB=x3(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(M2,z2);r.onupgradeneeded=()=>L2(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(Ki,"readonly"),l=o.objectStore(Ki).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=c=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=bd(t),i=a.transaction($o,"readwrite"),l=i.objectStore($o),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),u;c.onsuccess=()=>{u=a.transaction(Ki,"readwrite");let p=u.objectStore(Ki).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});p.onsuccess=()=>n({modelArtifactsInfo:o}),p.onerror=h=>{l=i.objectStore($o);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(p.error)),f.onerror=m=>(a.close(),s(p.error))}},c.onerror=d=>(a.close(),s(c.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};Zi.URL_SCHEME="indexeddb://";var b3=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zi.URL_SCHEME)?C9(e.slice(Zi.URL_SCHEME.length)):null;Gt.registerSaveRouter(b3);Gt.registerLoadRouter(b3);function C9(e){return new Zi(e)}function T9(e){return e.startsWith(Zi.URL_SCHEME)?e.slice(Zi.URL_SCHEME.length):e}var N9=class{constructor(){this.indexedDB=x3()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(M2,z2);n.onupgradeneeded=()=>L2(n),n.onsuccess=()=>{let s=n.result,r=s.transaction($o,"readonly"),o=r.objectStore($o).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=T9(e),new Promise((t,n)=>{let s=this.indexedDB.open(M2,z2);s.onupgradeneeded=()=>L2(s),s.onsuccess=()=>{let r=s.result,a=r.transaction($o,"readwrite"),o=a.objectStore($o),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=o.delete(e),u=()=>{l=r.transaction(Ki,"readwrite");let p=l.objectStore(Ki).delete(e);p.onsuccess=()=>t(i.result.modelArtifactsInfo),p.onerror=h=>n(i.error)};c.onsuccess=u,c.onerror=d=>(u(),r.close(),n(i.error))}},i.onerror=c=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},ha="/",Su="tensorflowjs_models",v3="info",E9="model_topology",R9="weight_specs",$9="weight_data",D9="model_metadata";function w3(e){return{info:[Su,e,v3].join(ha),topology:[Su,e,E9].join(ha),weightSpecs:[Su,e,R9].join(ha),weightData:[Su,e,$9].join(ha),modelMetadata:[Su,e,D9].join(ha)}}function k3(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function _9(e){let t=e.split(ha);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ha)}function F9(e){return e.startsWith(Yi.URL_SCHEME)?e.slice(Yi.URL_SCHEME.length):e}var Yi=class{constructor(e){if(!K().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=w3(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=bd(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,g9(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw k3(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=y9(a),t}};Yi.URL_SCHEME="localstorage://";var I3=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yi.URL_SCHEME)?P9(e.slice(Yi.URL_SCHEME.length)):null;Gt.registerSaveRouter(I3);Gt.registerLoadRouter(I3);function P9(e){return new Yi(e)}var O9=class{constructor(){M(K().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Su+ha,n=ha+v3;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=_9(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=F9(e);let t=w3(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return k3(t),n}},Cu="://",$s=class{constructor(){this.managers={}}static getInstance(){return $s.instance==null&&($s.instance=new $s),$s.instance}static registerManager(e,t){M(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Cu)&&(e=e.slice(0,e.indexOf(Cu))),M(e.length>0,()=>"scheme must not be an empty string.");let n=$s.getInstance();M(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function of(e){if(e.indexOf(Cu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${$s.getSchemes().join(",")}`);return{scheme:e.split(Cu)[0],path:e.split(Cu)[1]}}async function S3(e,t,n=!1){M(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=Gt.getLoadHandlers(e);M(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),M(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=Gt.getSaveHandlers(t);M(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),M(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=of(e).scheme,l=of(e).path,c=i===of(e).scheme,u=await r.load();n&&c&&await $s.getManager(i).removeModel(l);let d=await o.save(u);return n&&!c&&await $s.getManager(i).removeModel(l),d.modelArtifactsInfo}async function M9(){let e=$s.getSchemes(),t={};for(let n of e){let s=await $s.getManager(n).listModels();for(let r in s){let a=n+Cu+r;t[a]=s[r]}}return t}async function z9(e){let t=of(e);return $s.getManager(t.scheme).removeModel(t.path)}async function L9(e,t){return S3(e,t,!1)}async function B9(e,t){return S3(e,t,!0)}var W9=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(K().get("IS_BROWSER")){K().setPlatform("browser",new W9);try{$s.registerManager(Yi.URL_SCHEME,new O9)}catch(e){}try{$s.registerManager(Zi.URL_SCHEME,new N9)}catch(e){}}var V9={importFetch:()=>XN()},B2,U9=class{constructor(){this.util=Hl("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return K().global.fetch!=null?K().global.fetch(e,t):(B2==null&&(B2=V9.importFetch()),B2(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};K().get("IS_NODE")&&K().setPlatform("node",new U9);function Fe(e,t="float32",n){return t=t||"float32",y2(e),new jt(e,t,n)}function G9(e,t){let n=F(e,"x","cast");if(!G5(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return W.runKernel(Ga,s,r)}var de=U({cast_:G9});function H9(e){let n={x:F(e,"x","clone","string_or_numeric")};return W.runKernel(so,n)}var cr=U({clone_:H9});function C3(e,t=!1){console.log(e.toString(t))}c3();var j9={buffer:Fe,cast:de,clone:cr,print:C3};s9(j9);var as={};ze(as,{browserFiles:()=>Q9,browserHTTPRequest:()=>rR,concatenateArrayBuffers:()=>P2,copyModel:()=>L9,decodeWeights:()=>m3,encodeWeights:()=>f9,fromMemory:()=>oR,getLoadHandlers:()=>S9,getModelArtifactsForJSON:()=>O2,getModelArtifactsInfoForJSON:()=>bd,getSaveHandlers:()=>I9,http:()=>U2,isHTTPScheme:()=>V2,listModels:()=>M9,loadWeights:()=>eR,moveModel:()=>B9,registerLoadRouter:()=>k9,registerSaveRouter:()=>w9,removeModel:()=>z9,weightsLoaderFactory:()=>R3,withSaveHandler:()=>iR});var q9="model",X9=".json",K9=".weights.bin";function T3(e){return new Promise(t=>setTimeout(t)).then(e)}var Tu=class{constructor(e){if(!K().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Tu.URL_SCHEME)&&(e=e.slice(Tu.URL_SCHEME.length)),(e==null||e.length===0)&&(e=q9),this.modelJsonFileName=e+X9,this.weightDataFileName=e+K9}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=A3(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await T3(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await T3(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:bd(e)}}}};Tu.URL_SCHEME="downloads://";var Z9=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=O2(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,P2(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>y3(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=y3(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},Y9=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Tu.URL_SCHEME)?J9(e.slice(Tu.URL_SCHEME.length)):null;Gt.registerSaveRouter(Y9);function J9(e="model"){return new Tu(e)}function Q9(e){return new Z9(e)}function N3(e,t,n,s){o(e),n=n==null?0:n,s=s==null?1:s,i(n,s);let r=0,a=l=>(l.then(c=>{let u=n+ ++r/e.length*(s-n);return t(u),c}),l);function o(l){M(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){M(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),M(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),M(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(a))}async function E3(e,t){t==null&&(t={});let n=t.fetchFunc==null?K().platform.fetch:t.fetchFunc,s=e.map(d=>n(d,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await N3(s,t.onProgress,r,a)).map(d=>d.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(i):await N3(i,t.onProgress,l,c)}async function eR(e,t="",n,s){return R3(o=>E3(o,{requestInit:s}))(e,t,n)}function R3(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,A=_2[y]*Ht(g.shape),x=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:A})};s!=null?s.forEach((b,w)=>{b===g.name&&(x(),o[w]=!0)}):x(),i.push(g.name),m+=A})}),!o.every(h=>h)){let h=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),c=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;c.push(m)})});let u=await e(c),d={},p=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let b=0;b<f;b++)m+=u[p+b].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),A=0;for(let b=0;b<f;b++){let w=new Uint8Array(u[p+b]);y.set(w,A),A+=w.byteLength}a[h].forEach(b=>{let w=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),k=m3(w,[b.manifestEntry]);for(let S in k)d[S]=k[S]}),p+=f}),d}}var tR="application/octet-stream",nR="application/json",W2=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(M(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=K().platform.fetch,M(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&M(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=A3(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:nR}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:tR}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:bd(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return O2(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=sR(t),r=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let o=[],i=[];for(let c of e)for(let u of c.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(u)):o.push(r+u+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await E3(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,P2(l)]}};W2.URL_SCHEME_REGEX=/^https?:\/\//;function sR(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function V2(e){return e.match(W2.URL_SCHEME_REGEX)!=null}var $3=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>V2(s)):n=V2(e),n)return U2(e,t)}return null};Gt.registerSaveRouter($3);Gt.registerLoadRouter($3);function U2(e,t){return new W2(e,t)}function rR(e,t){return U2(e,t)}var G2=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},aR=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function oR(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new G2(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new G2({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new G2({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function iR(e){return new aR(e)}var D3={};ze(D3,{confusionMatrix:()=>pR});function lR(e,t,n=!1,s=!1){let r=F(e,"a","matMul"),a=F(t,"b","matMul");[r,a]=Lt(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return W.runKernel(Ua,o,i)}var Xe=U({matMul_:lR});function uR(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:F(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return W.runKernel(Ei,a,o)}var Nu=U({oneHot_:uR});function cR(e,t){let n=F(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{M(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return W.runKernel(ko,s,r)}var et=U({transpose_:cR});function dR(e,t,n){let s=F(e,"labels","confusionMatrix"),r=F(t,"predictions","confusionMatrix");M(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),M(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),M(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),M(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),M(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=Nu(de(s,"int32"),n),o=Nu(de(r,"int32"),n),i=et(a),l=Xe(i,o);return de(l,"int32")}var pR=U({confusionMatrix_:dR}),Xs={};ze(Xs,{fromPixels:()=>xR,fromPixelsAsync:()=>yR,toPixels:()=>AR});function _3(e,t,n){if(di(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=$r(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ro(e,t,s,n)}var Eu;function F3(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r){let f=2;if(r&&e.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(ef(ld,W.backendName)!=null){let f={pixels:e},m={numChannels:t};return W.runKernel(ld,f,m)}let[c,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;o?d=e.getContext("2d").getImageData(0,0,c,u).data:s||n?d=e.data:(a||r||i)&&(Eu==null&&(Eu=document.createElement("canvas").getContext("2d")),Eu.canvas.width=c,Eu.canvas.height=u,Eu.drawImage(e,0,0,c,u),d=Eu.getImageData(0,0,c,u).data);let p;if(t===4)p=new Int32Array(d);else{let f=c*u;p=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)p[m*t+g]=d[m*4+g]}return _3(p,[u,c,t],"int32")}function hR(e){return e!=null&&e.data instanceof Uint8Array}function fR(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function mR(e){return e!=null&&e.width!==0&&e.height!==0}function gR(e){return fR()&&!(e instanceof ImageBitmap)&&mR(e)&&!hR(e)}async function yR(e,t=3){let n=null;if(K().getBool("WRAP_TO_IMAGEBITMAP")&&gR(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return F3(n,t)}async function AR(e,t){let n=F(e,"img","toPixels");if(!(e instanceof Ze)){let c=n;n=de(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){let u=[0,0,0,255];for(let p=0;p<a;p++){let h=o[c*a+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(u[0]=h*i,u[1]=h*i,u[2]=h*i):u[p]=h*i}let d=c*4;l[d+0]=Math.round(u[0]),l[d+1]=Math.round(u[1]),l[d+2]=Math.round(u[2]),l[d+3]=Math.round(u[3])}if(t!=null){t.width=r,t.height=s;let c=t.getContext("2d"),u=new ImageData(l,r,s);c.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var xR=U({fromPixels_:F3}),H2={};ze(H2,{prepareAndValidate:()=>P3});function P3(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(Ht(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let d=0;d<r.length-1;++d)o*=r[d];let i=e.shape,l=r.slice();l.pop();let c=1;for(let d=a;d<n;++d)c*=i[d],l.push(i[d]);let u=[...ql(e.shape).map(d=>d/c),1].slice(0,a);return[l,o,c,u]}var j2={};ze(j2,{calculateShapes:()=>O3,validateInput:()=>X2,validateUpdateShape:()=>q2});function q2(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function X2(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}q2(n,t,e)}function O3(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let d=r;d<a;++d)o*=n[d];let i=r<1?1:r,l=Ht(t.shape)/i,c=[...ql(n.slice(0,r)),1],u=Ht(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}var Qt={};ze(Qt,{assertParamsValid:()=>bR,computeFlatOffset:()=>wR,computeOutShape:()=>M3,getNormalizedAxes:()=>W3,isSliceContinous:()=>vR,maskToAxes:()=>lf,parseSliceParams:()=>q3,sliceInfo:()=>kR,startForAxis:()=>H3,startIndicesWithElidedDims:()=>V3,stopForAxis:()=>j3,stopIndicesWithElidedDims:()=>U3,stridesForAxis:()=>G3,stridesWithElidedDims:()=>z3});function bR(e,t,n){let s=e.shape.length;M(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),M(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)M(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function lf(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function M3(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function z3(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function L3(e,t,n){return n<=e?n:n-(t-1)}function B3(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function W3(e,t,n,s,r,a,o,i,l){let c=e.length,u=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){let h=t[0],f=n+1;u=V3(o,h,f,s,e),d=U3(i,h,f,r,e),p=z3(a,h,f,e)}else for(let h=0;h<c;h++)u[h]=H3(o,s,a,e,h,l),d[h]=j3(i,r,a,e,h,l),p[h]=G3(a,h,l);return{begin:u,end:d,strides:p}}function V3(e,t,n,s,r){let a=[...r],o=B3(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=L3(t,n,i),c=s[l];e&1<<l&&(c=0),a[i]=c}return a}function U3(e,t,n,s,r){let a=[...r],o=B3(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=L3(t,n,i),c=s[l];e&1<<l&&(c=Number.MAX_SAFE_INTEGER),a[i]=c}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=jc(0,a[i],r[i])}return a}function G3(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function H3(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=jc(0,o,l-1),o}function j3(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=jc(0,o,l):o=jc(-1,o,l-1),o}function vR(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function wR(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function q3(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{M(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(M(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function kR(e,t,n,s,r,a,o,i,l){let c=t.slice(),u=n.slice(),d=s;s==null&&(d=new Array(c.length));let p=lf(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(o!==0&&i!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(o!==0&&l!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let h=e.length-c.length,f=lf(i),m=e.slice();f.forEach(S=>{c[S]=0,u[S]=1,m.splice(S,0,1)});let{begin:g,end:y,strides:A}=W3(m,p,h,c,u,d,r,a,o);c=g,u=y,d=A;let x=lf(l);x.forEach(S=>{u[S]=c[S]+1,d[S]=1});let b=M3(c,u,d),w=b.filter((S,E)=>x.indexOf(E)===-1);return{nonStrided:d.every(S=>S===1),$begin:c,$end:u,$strides:d,size:b,newShape:m,outShape:w}}var ue={};ze(ue,{Serializable:()=>X3,SerializationMap:()=>Ji,registerClass:()=>Do});var X3=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Ji=class{constructor(){this.classNameMap={}}static getMap(){return Ji.instance==null&&(Ji.instance=new Ji),Ji.instance}static register(e){Ji.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Do(e){M(e.className!=null,()=>"Class being registered does not have the static className property defined."),M(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),M(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ji.register(e)}var K3={};ze(K3,{TEST_EPSILON_FLOAT16:()=>Z3,encodeStrings:()=>Y3,expectArrayBuffersEqual:()=>RR,expectArraysClose:()=>SR,expectArraysEqual:()=>TR,expectNumbersClose:()=>NR,expectPromiseToFail:()=>CR,expectValuesInRange:()=>ER,testEpsilon:()=>K2});var IR=.001,Z3=.1;function SR(e,t,n){return n==null&&(n=K2()),Z2(e,t,(s,r)=>Y2(s,r,n))}function K2(){return W.backend.floatPrecision()===32?IR:Z3}function Z2(e,t,n){let s=!0;if((On(e)||On(t))&&(s=!1),On(e)&&On(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=$r(e),i=$r(t);if(!Kr(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=On(e)?e:pi(e),a=On(t)?t:pi(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}}function CR(e,t){e().then(()=>t.fail(),()=>t())}function TR(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return za(e)||za(e[0])||za(t)||za(t[0])?Z2(e,n,(s,r)=>s==r):Z2(e,t,(s,r)=>Y2(s,r,0))}function NR(e,t,n){if(n==null&&(n=K2()),!Y2(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Y2(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function ER(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function RR(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Y3(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Y3(n):e[t]=pd(n)}return e}var vd="3.10.0";function J3(){K().set("PROD",!0)}function $R(){K().set("DEBUG",!0)}function DR(){K().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function J2(e){K().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}r9(J2);function _R(){W.disposeVariables()}function os(){return W}function uf(){return W.memory()}function FR(e){return W.profile(e)}function j(e,t){return W.tidy(e,t)}function Q(e){R2(e).forEach(n=>n.dispose())}function bn(e){return W.keep(e)}function PR(e){return W.time(e)}function Q3(e){return W.setBackend(e)}function cf(){return W.ready()}function dr(){return W.backendName}function OR(e){W.removeBackend(e)}function Q2(e){return W.findBackend(e)}function MR(e){return W.findBackendFactory(e)}function Qi(e,t,n=1){return W.registerBackend(e,t,n)}function Dr(){return W.backend}function zR(e,t){K().setPlatform(e,t)}function LR(e,t){let n=F(e,"a","add"),s=F(t,"b","add");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(Er,r)}var le=U({add_:LR});function BR(e,t){let n=F(e,"a","floorDiv"),s=F(t,"b","floorDiv");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(eo,r)}var df=U({floorDiv_:BR});function WR(e,t){let n=F(e,"a","div"),s=F(t,"b","div");if([n,s]=Lt(n,s),n.dtype==="int32"&&s.dtype==="int32")return df(n,s);let r={a:n,b:s},a={};return W.runKernel(Za,r,a)}var fe=U({div_:WR});function VR(e,t){let n=F(e,"a","mul"),s=F(t,"b","mul");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(ra,r)}var B=U({mul_:VR});function UR(e){let t=F(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return W.runKernel(Zc,n)}else{let n={x:t};return W.runKernel(hi,n)}}var en=U({abs_:UR});function GR(e){let n={x:F(e,"x","acos")};return W.runKernel(Kl,n)}var e1=U({acos_:GR});function HR(e){let n={x:F(e,"x","acosh")};return W.runKernel(Zl,n)}var t1=U({acosh_:HR});function jR(e){M(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),M(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>F(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Kr(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return W.runKernel(Ba,s)}var pf=U({addN_:jR});function qR(e,t=null,n=!1){let r={x:F(e,"x","all","bool")},a={axis:t,keepDims:n};return W.runKernel(Yl,r,a)}var hf=U({all_:qR});function XR(e,t=null,n=!1){let r={x:F(e,"x","any","bool")},a={axis:t,keepDims:n};return W.runKernel(Jl,r,a)}var wd=U({any_:XR});function KR(e,t=0){let s={x:F(e,"x","argMax")},r={axis:t};return W.runKernel(Wa,s,r)}var Ds=U({argMax_:KR});function ZR(e,t=0){let s={x:F(e,"x","argMin")},r={axis:t};return W.runKernel(Ql,s,r)}var n1=U({argMin_:ZR});function YR(e){let n={x:F(e,"x","asin")};return W.runKernel(eu,n)}var s1=U({asin_:YR});function JR(e){let n={x:F(e,"x","asinh")};return W.runKernel(tu,n)}var r1=U({asinh_:JR});function QR(e){let n={x:F(e,"x","atan")};return W.runKernel(nu,n)}var a1=U({atan_:QR});function e$(e,t){let n=F(e,"a","atan2"),s=F(t,"b","atan2");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(ru,r)}var o1=U({atan2_:e$});function t$(e){let n={x:F(e,"x","atanh")};return W.runKernel(su,n)}var i1=U({atanh_:t$});function n$(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=nv(r);return kd(e,i,n,a,s,null,null,l)}function ev(e,t,n,s,r,a,o="channelsLast"){let[i,l]=ff(t),c;if(o==="channelsLast")c=[i,l,e[3],e[3]];else if(o==="channelsFirst")c=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return kd(e,c,n,s,r,a,!1,o)}function s$(e,t,n,s,r,a,o="NDHWC"){let[i,l,c]=u1(t),u,d;if(o==="NDHWC")d="channelsLast",u=[i,l,c,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",u=[i,l,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return tv(e,u,n,s,r,!1,d,a)}function kd(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,c,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,d]=e;else if(i==="channelsFirst")[l,d,c,u]=e;else throw new Error(`Unknown dataFormat ${i}`);let[p,h,,f]=t,[m,g]=ff(n),[y,A]=ff(s),x=Ru(p,y),b=Ru(h,A),{padInfo:w,outHeight:k,outWidth:S}=o$(r,c,u,m,g,x,b,a,i),E=o?f*d:f,R;return i==="channelsFirst"?R=[l,E,k,S]:i==="channelsLast"&&(R=[l,k,S,E]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:u,inChannels:d,outHeight:k,outWidth:S,outChannels:E,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:A,inShape:e,outShape:R,filterShape:t}}function tv(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,c,u,d,p]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,d,p]=e;else if(o==="channelsFirst")[l,p,c,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[y,A,x]=u1(n),[b,w,k]=u1(s),S=Ru(h,b),E=Ru(f,w),R=Ru(m,k),{padInfo:P,outDepth:$,outHeight:D,outWidth:T}=i$(r,c,u,d,y,A,x,S,E,R,i),O=a?g*p:g,V;return o==="channelsFirst"?V=[l,O,$,D,T]:o==="channelsLast"&&(V=[l,$,D,T,O]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:d,inChannels:p,outDepth:$,outHeight:D,outWidth:T,outChannels:O,padInfo:P,strideDepth:y,strideHeight:A,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:w,dilationWidth:k,inShape:e,outShape:V,filterShape:t}}function r$(e,t,n,s,r){s==null&&(s=l1(e,t,n));let a=e[0],o=e[1],i=el((a-t+2*s)/n+1,r),l=el((o-t+2*s)/n+1,r);return[i,l]}function a$(e,t,n,s,r,a){r==null&&(r=l1(e,t,s));let o=e[0],i=e[1],l=e[2],c=el((o-t+2*r)/s+1,a),u=el((i-t+2*r)/s+1,a),d=el((l-t+2*r)/s+1,a);return[c,u,d,n]}function l1(e,t,n,s=1){let r=Ru(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function ff(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function u1(e){return typeof e=="number"?[e,e,e]:e}function Ru(e,t){return t<=1?e:e+(e-1)*(t-1)}function o$(e,t,n,s,r,a,o,i,l){let c,u,d;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=r$([t,n],a,s,e,i);u=h[0],d=h[1]}else if(e==="same"){u=Math.ceil(t/s),d=Math.ceil(n/r);let p=Math.max(0,(u-1)*s+a-t),h=Math.max(0,(d-1)*r+o-n),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),y=h-g;c={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-a+1)/s),d=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=el((t-a+p+h)/s+1,i),d=el((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:u,outWidth:d}}function i$(e,t,n,s,r,a,o,i,l,c,u){let d,p,h,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=a$([t,n,s,1],i,1,r,e,u);p=g[0],h=g[1],f=g[2]}else if(e==="same"){p=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/o);let m=(p-1)*r+i-t,g=(h-1)*a+l-n,y=(f-1)*o+c-s,A=Math.floor(m/2),x=m-A,b=Math.floor(g/2),w=g-b,k=Math.floor(y/2),S=y-k;d={top:b,bottom:w,left:k,right:S,front:A,back:x,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/r),h=Math.ceil((n-l+1)/a),f=Math.ceil((s-c+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function el(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function _o(e){let[t,n,s]=ff(e);return t===1&&n===1&&s===1}function _r(e,t){return _o(e)||_o(t)}function nv(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function l$(e,t){let s={x:F(e,"x","reshape","string_or_numeric")},r={shape:t};return W.runKernel(Di,s,r)}var G=U({reshape_:l$});function u$(e,t,n,s,r){let a=F(e,"x","avgPool","float32"),o=1;M(_r(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=G(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),r!=null&&M(An(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=W.runKernel(Va,c,u);return d=de(d,a.dtype),l?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Id=U({avgPool_:u$});function c$(e,t,n,s,r,a="NDHWC"){let o=F(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),r!=null&&M(An(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=W.runKernel(Xc,c,u);return d=de(d,i.dtype),l?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var c1=U({avgPool3d_:c$});function d$(e,t=0){M(e.length>=1,()=>"Pass at least one tensor to concat");let n=xd(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return cr(n[0]);let s=n,r={axis:t};return W.runKernel(mi,s,r)}var kt=U({concat_:d$});function p$(e){let n={x:F(e,"x","sigmoid","float32")};return W.runKernel(oa,n)}var is=U({sigmoid_:p$});function h$(e,t,n){let s=F(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return W.runKernel(Mi,r,a)}var De=U({slice_:h$});function f$(e){let n={x:F(e,"x","tanh","float32")};return W.runKernel(wo,n)}var tl=U({tanh_:f$});function m$(e,t,n,s,r,a){let o=F(e,"forgetBias","basicLSTMCell"),i=F(t,"lstmKernel","basicLSTMCell"),l=F(n,"lstmBias","basicLSTMCell"),c=F(s,"data","basicLSTMCell"),u=F(r,"c","basicLSTMCell"),d=F(a,"h","basicLSTMCell"),p=kt([c,d],1),h=Xe(p,i),f=le(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],A=De(f,[0,0],y),x=De(f,[0,g],y),b=De(f,[0,g*2],y),w=De(f,[0,g*3],y),k=le(B(is(A),tl(x)),B(u,is(le(o,b)))),S=B(tl(k),is(w));return[k,S]}var g$=U({basicLSTMCell_:m$});function y$(e,t,n){let s=F(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);M(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),M(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),M(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return W.runKernel(fi,a,o)}var Sd=U({batchToSpaceND_:y$});function A$(e){let t;return e.rank===0||e.rank===1?t=G(e,[1,1,1,e.size]):e.rank===2?t=G(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function x$(e,t,n,s,r,a){a==null&&(a=.001);let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;s!=null&&(u=F(s,"offset","batchNorm")),M(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:A$(o),scale:c,offset:u,mean:i,variance:l},h={varianceEpsilon:a},f=W.runKernel(to,p,h);return G(f,o.shape)}var nl=U({batchNorm_:x$});function b$(e,t,n,s,r,a){let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;return s!=null&&(u=F(s,"offset","batchNorm")),M(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),M(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),M(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),nl(o,i,l,u,c,a)}var sv=U({batchNorm2d_:b$});function v$(e,t,n,s,r,a){let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;return s!=null&&(u=F(s,"offset","batchNorm")),M(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),M(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),M(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),nl(o,i,l,u,c,a)}var rv=U({batchNorm3d_:v$});function w$(e,t,n,s,r,a){let o=F(e,"x","batchNorm"),i=F(t,"mean","batchNorm"),l=F(n,"variance","batchNorm"),c;r!=null&&(c=F(r,"scale","batchNorm"));let u;return s!=null&&(u=F(s,"offset","batchNorm")),M(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),M(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),M(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),nl(o,i,l,u,c,a)}var av=U({batchNorm4d_:w$});function k$(e,t,n){let s=F(e,"x","bincount"),r=F(t,"weights","bincount");M(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return W.runKernel(Sh,a,o)}var d1=U({bincount_:k$});function I$(e,t){let n=F(e,"s0","broadcastArgs","int32"),s=F(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return W.runKernel(Ch,r)}var ov=U({broadcastArgs_:I$});function S$(e,t){let n=F(e,"broadcastTo","x"),s=n.shape;if(t.some(c=>!(c>0)||c%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let c=n.shape.slice();for(;c.length<t.length;)c.unshift(1);n=G(n,c)}let r=n.shape,a=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])a[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return cr(n);let i={x:n},l={reps:a};return W.runKernel(ca,i,l)}var $u=U({broadcastTo_:S$});function C$(e){let n={x:F(e,"x","ceil","float32")};return W.runKernel(Zr,n)}var p1=U({ceil_:C$});function T$(e,t,n){let s=F(e,"x","clipByValue");M(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return W.runKernel(Yr,r,a)}var ls=U({clipByValue_:T$});function N$(e){return kt(e,0)}var iv=U({concat1d_:N$});function E$(e,t){return kt(e,t)}var Du=U({concat2d_:E$});function R$(e,t){return kt(e,t)}var lv=U({concat3d_:R$});function $$(e,t){return kt(e,t)}var uv=U({concat4d_:$$});function D$(e,t,n,s,r="NHWC",a=[1,1],o){let i=F(e,"x","conv2d","float32"),l=F(t,"filter","conv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),o!=null&&M(An(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let d=r==="NHWC"?c.shape[3]:c.shape[1];M(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),M(_r(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let p={x:c,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=W.runKernel(Ha,p,h);return u?G(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var fa=U({conv2d_:D$});function _$(e,t,n,s,r="NWC",a=1,o){let i=F(e,"x","conv1d"),l=F(t,"filter","conv1d"),c=i,u=!1;i.rank===2&&(u=!0,c=G(i,[1,i.shape[0],i.shape[1]])),M(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),M(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),o!=null&&M(An(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`),M(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),M(_r(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),M(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let d=G(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=G(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=fa(p,d,[1,n],s,"NHWC",[1,a],o);return u?G(g,[g.shape[2],g.shape[3]]):G(g,[g.shape[0],g.shape[2],g.shape[3]])}var mf=U({conv1d_:_$});function F$(e,t,n,s,r,a="NHWC",o){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,c=!1;t.rank===3&&(c=!0,l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),M(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),M(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),M(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?l.shape[3]:l.shape[1];M(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),M(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),o!=null&&M(An(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let p={dy:l,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=W.runKernel(ja,p,h);return c?G(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var h1=U({conv2DBackpropInput_:F$});function P$(e,t,n,s,r,a){let o=F(e,"x","conv2dTranspose"),i=F(t,"filter","conv2dTranspose");return h1(n,o,i,s,r,"NHWC",a)}var gf=U({conv2dTranspose_:P$});function O$(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=F(e,"x","conv3d"),i=F(t,"filter","conv3d"),l=o,c=!1;o.rank===4&&(c=!0,l=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),M(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),M(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),M(_r(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let u={x:l,filter:i},d={strides:n,pad:s,dataFormat:r,dilations:a},p=W.runKernel(Yc,u,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var f1=U({conv3d_:O$});function M$(e,t,n,s,r){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],c=o.shape[4];M(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),M(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),M(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),M(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),M(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let u={dy:o,filter:n},d={pad:r,strides:s,inputShape:a},p=W.runKernel(Eh,u,d);return i?G(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var cv=U({conv3DBackpropInput_:M$});function z$(e,t,n,s,r){let a=F(e,"x","conv3dTranspose"),o=F(t,"filter","conv3dTranspose");return cv(n,a,o,s,r)}var dv=U({conv3dTranspose_:z$});function L$(e){let n={x:F(e,"x","cos","float32")};return W.runKernel(qa,n)}var Cd=U({cos_:L$});function B$(e){let n={x:F(e,"x","cosh","float32")};return W.runKernel(Xa,n)}var yf=U({cosh_:B$});function W$(e,t=0,n=!1,s=!1){let a={x:F(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return W.runKernel(gi,a,o)}var Af=U({cumsum_:W$});function V$(e,t,n,s=!1){let r=F(e,"x","denseBincount"),a=F(t,"weights","denseBincount");M(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),M(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return W.runKernel(Rh,o,i)}var pv=U({denseBincount_:V$});function U$(e,t,n="NHWC"){let s=F(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];M(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),M(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),M(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),M(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return W.runKernel(Ai,i,l)}var m1=U({depthToSpace_:U$});function G$(e,t,n,s,r="NHWC",a=[1,1],o){let i=F(e,"x","depthwiseConv2d","float32"),l=F(t,"filter","depthwiseConv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),o!=null&&M(An(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let d={x:c,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},h=W.runKernel(Ka,d,p);return u?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var _u=U({depthwiseConv2d_:G$});function H$(e){let n={x:F(e,"x","diag")};return W.runKernel(_h,n)}var j$=U({diag_:H$});function q$(e,t,n,s,r=[1,1],a="NHWC"){let o=F(e,"x","dilation2d"),i=F(t,"filter","dilation2d");M(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),M(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),M(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,c=!1;o.rank===3&&(l=G(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);let u={x:l,filter:i},d={strides:n,pad:s,dilations:r},p=W.runKernel(Jc,u,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var g1=U({dilation2d_:q$});function X$(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function ln(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function Tt(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}function K$(e,t){let n=F(e,"a","equal","string_or_numeric"),s=F(t,"b","equal","string_or_numeric");[n,s]=Lt(n,s),Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(Ja,r)}var ys=U({equal_:K$});function Z$(e,t,n){let s=F(t,"a","where"),r=F(n,"b","where"),a=F(e,"condition","where","bool"),o=Tt(Tt(a.shape,s.shape),r.shape),i=$u(a,o),l=$u(s,o),c=$u(r,o),u={condition:i,t:l,e:c};return W.runKernel(Oi,u)}var zn=U({where_:Z$});function Y$(e){let n={x:F(e,"x","zerosLike")};return W.runKernel(Hi,n)}var tt=U({zerosLike_:Y$});function J$(e,t){let n=F(e,"a","div"),s=F(t,"b","div");[n,s]=Lt(n,s);let r=fe(n,s),a=tt(r),o=ys(s,a);return zn(o,a,r)}var y1=U({divNoNan_:J$});function Q$(e,t){let n=F(e,"t1","dot"),s=F(t,"t2","dot");M((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(M(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=G(n,[1,-1]),i=G(s,[-1,1]),l=Xe(o,i);return G(l,[])}else if(n.rank===1&&s.rank===2){let o=G(n,[1,-1]),i=G(s,[s.shape[0],s.shape[1]]),l=Xe(o,i);return G(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=G(s,[-1,1]),i=Xe(n,o);return G(i,[i.size])}else{let o=G(s,[s.shape[0],s.shape[1]]);return Xe(n,o)}}var hv=U({dot_:Q$});function eD(e,...t){let n=t.map((r,a)=>F(r,`tensors${a}`,"einsum")),s={equation:e};return W.runKernel(Qc,n,s)}var fv=U({einsum_:eD});function tD(e){let n={x:F(e,"x","elu","float32")};return W.runKernel(Ya,n)}var Fu=U({elu_:tD});function nD(e){let t=F(e,"x","erf");M(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=de(t,"float32"));let n={x:t};return W.runKernel(au,n)}var A1=U({erf_:nD});function sD(e){let n={x:F(e,"x","exp")};return W.runKernel(Jr,n)}var As=U({exp_:sD});function rD(e,t=0){let n=F(e,"x","expandDims","string_or_numeric");M(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return W.runKernel(xi,s,r)}var Xt=U({expandDims_:rD});function aD(e){let n={x:F(e,"x","expm1")};return W.runKernel(Qa,n)}var x1=U({expm1_:aD});function oD(e,t){let n=F(e,"x","tile","string_or_numeric");M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return W.runKernel(ca,s,r)}var _s=U({tile_:oD});function iD(e,t,n,s="float32"){t==null&&(t=e);let r=Fe([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=G(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return _s(Xt(o,0),[n[0],1,1]);if(n.length===2)return _s(Xt(Xt(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return _s(Xt(Xt(Xt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var b1=U({eye_:iD});function Pu(e,t,n){let s={shape:e,value:t,dtype:n};return W.runKernel(ou,{},s)}function lD(e){let n={x:F(e,"x","floor","float32")};return W.runKernel(Qr,n)}var Ou=U({floor_:lD});function uD(e,t,n=0,s=0){let r=F(e,"x","gather"),a=F(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return W.runKernel(vi,o,i)}var sl=U({gather_:uD});function cD(e,t){let n=F(e,"a","greater","string_or_numeric"),s=F(t,"b","greater","string_or_numeric");[n,s]=Lt(n,s),Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(no,r)}var us=U({greater_:cD});function dD(e,t){let n=F(e,"a","greaterEqual","string_or_numeric"),s=F(t,"b","greaterEqual","string_or_numeric");[n,s]=Lt(n,s),Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(ea,r)}var Fo=U({greaterEqual_:dD});function pD(e){let n={input:F(e,"input","imag")};return W.runKernel(ed,n)}var xf=U({imag_:pD});function hD(e){let n={x:F(e,"x","isFinite")};return W.runKernel(iu,n)}var mv=U({isFinite_:hD});function fD(e){let n={x:F(e,"x","isInf")};return W.runKernel(lu,n)}var gv=U({isInf_:fD});function mD(e){let n={x:F(e,"x","isNaN")};return W.runKernel(uu,n)}var v1=U({isNaN_:mD});function gD(e,t=.2){let s={x:F(e,"x","leakyRelu")},r={alpha:t};return W.runKernel(ki,s,r)}var Td=U({leakyRelu_:gD});function yD(e,t){let n=F(e,"a","less","string_or_numeric"),s=F(t,"b","less","string_or_numeric");[n,s]=Lt(n,s),Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(ro,r)}var bf=U({less_:yD});function AD(e,t){let n=F(e,"a","lessEqual","string_or_numeric"),s=F(t,"b","lessEqual","string_or_numeric");[n,s]=Lt(n,s),Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(ao,r)}var Po=U({lessEqual_:AD});function yv(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return W.runKernel(Lh,{},s)}function xD(e,t=5,n=1,s=1,r=.5){let a=F(e,"x","localResponseNormalization");M(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),M(An(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=G(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},c={depthRadius:t,bias:n,alpha:s,beta:r},u=W.runKernel(nd,l,c);return i?G(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var w1=U({localResponseNormalization_:xD});function bD(e){let n={x:F(e,"x","log","float32")};return W.runKernel(ta,n)}var xs=U({log_:bD});function vD(e){let n={x:F(e,"x","log1p")};return W.runKernel(cu,n)}var Nd=U({log1p_:vD});function wD(e){return M(La(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=F(t,"x","tf.grad","string_or_numeric"),r=n!=null?F(n,"dy","tf.grad"):null;return W.tidy(()=>{let{value:a,grads:o}=W.gradients(()=>e(s),[s],r);return r!=null&&Vn(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),vf(o),o[0]})}}function kD(e){return M(La(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{M(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=xd(t,"args","tf.grads","string_or_numeric"),r=n!=null?F(n,"dy","tf.grads"):null;return W.tidy(()=>{let{value:a,grads:o}=W.gradients(()=>e(...s),s,r);return r!=null&&Vn(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vf(o),o})}}function ID(e){return M(La(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{M(t instanceof Ze,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),M(n==null||n instanceof Ze,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=W.gradients(()=>e(t),[t],n);return vf(s),{grad:s[0],value:r}}}function SD(e){return M(La(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{M(Array.isArray(t)&&t.every(r=>r instanceof Ze),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),M(n==null||n instanceof Ze,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=W.gradients(()=>e(...t),t,n);return n!=null&&Vn(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vf(s.grads),s}}function Av(e,t){M(La(e),()=>"The f passed in variableGrads(f) must be a function"),M(t==null||Array.isArray(t)&&t.every(c=>c instanceof gd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in W.registeredVariables)t.push(W.registeredVariables[c])}let s=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),M(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=W.gradients(e,t,null,a);M(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((c,u)=>{i[u]!=null&&(l[c.name]=i[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Fr(e){return W.customGrad(e)}function vf(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function CD(e){let n={x:F(e,"x","neg")};return W.runKernel(Si,n)}var Ft=U({neg_:CD});function TD(e){let n={x:F(e,"x","softplus")};return W.runKernel(xu,n)}var rl=U({softplus_:TD});function ND(e){let t=F(e,"x","logSigmoid");return Fr(s=>({value:Ft(rl(Ft(s))),gradFunc:o=>B(o,is(Ft(s)))}))(t)}var xv=U({logSigmoid_:ND});function ED(e,t=null,n=!1){let r={x:F(e,"x","max")},a={reductionIndices:t,keepDims:n};return W.runKernel(oo,r,a)}var Gn=U({max_:ED});function RD(e,t){let n=F(e,"a","sub"),s=F(t,"b","sub");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(ua,r)}var Ae=U({sub_:RD});function $D(e,t=null,n=!1){let s=F(e,"x","sum");s.dtype==="bool"&&(s=de(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return W.runKernel(bo,r,a)}var Ie=U({sum_:$D});function DD(e,t=-1){let n=F(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Fr((r,a)=>{let o=!0,i=Gn(r,t,!0),l=Ae(r,i),c=Ae(de(l,"float32"),xs(Ie(As(l),t,o)));return a([c]),{value:c,gradFunc:(d,p)=>{let[h]=p,f=!0,m=As(h);return Ae(d,B(Ie(d,t,f),m))}}})(n)}var wf=U({logSoftmax_:DD});function k1(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function bv(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function vv(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function al(e,t){let n=t.map(s=>1);return bv(e,n,t)}function _D(e,t,n){M(k1(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function wv(e,t){if(k1(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function I1(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function FD(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function PD(e,t=null,n=!1){let s=F(e,"x","logSumExp"),r=qs(t,s.shape),a=Gn(s,r,!0),o=Ae(s,a),i=As(o),l=Ie(i,r),c=xs(l),u=le(G(a,c.shape),c);if(n){let d=al(u.shape,r);return G(u,d)}return u}var S1=U({logSumExp_:PD});function OD(e,t){let n=F(e,"a","logicalAnd","bool"),s=F(t,"b","logicalAnd","bool");Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(Ii,r)}var Ks=U({logicalAnd_:OD});function MD(e){let n={x:F(e,"x","logicalNot","bool")};return W.runKernel(du,n)}var Ed=U({logicalNot_:MD});function zD(e,t){let n=F(e,"a","logicalOr","bool"),s=F(t,"b","logicalOr","bool");Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(td,r)}var kf=U({logicalOr_:zD});function LD(e,t){let n=F(e,"a","logicalXor","bool"),s=F(t,"b","logicalXor","bool");return Tt(n.shape,s.shape),Ks(kf(e,t),Ed(Ks(e,t)))}var kv=U({logicalXor_:LD});function BD(e,t,n,s,r){let a=F(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=G(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),M(_r(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),r!=null&&M(An(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=W.runKernel(io,c,u);return l?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Rd=U({maxPool_:BD});function WD(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=F(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),r!=null&&M(An(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=W.runKernel(sd,c,u);return l?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var C1=U({maxPool3d_:WD});function VD(e,t,n,s,r=!1){let o={x:F(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=W.runKernel(Uh,o,i);return{result:l[0],indexes:l[1]}}var Iv=U({maxPoolWithArgmax_:VD});function UD(e,t){let n=F(e,"a","maximum"),s=F(t,"b","maximum");[n,s]=Lt(n,s),n.dtype==="bool"&&(n=de(n,"int32"),s=de(s,"int32")),Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(na,r)}var Pr=U({maximum_:UD});function GD(e,t=null,n=!1){let r={x:F(e,"x","mean")},a={axis:t,keepDims:n};return W.runKernel(lo,r,a)}var Bt=U({mean_:GD});function Kt(e,t="float32"){if(t==="complex64"){let s=Kt(e,"float32"),r=Kt(e,"float32");return Eo(s,r)}let n=wh(Ht(e),t);return W.makeTensor(n,e,t)}function bs(e,t="float32"){if(t==="complex64"){let s=bs(e,"float32"),r=Kt(e,"float32");return Eo(s,r)}let n=g2(Ht(e),t);return W.makeTensor(n,e,t)}function HD(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=F(e,"x","meshgrid",e instanceof Ze?e.dtype:"float32");if(t===void 0)return[s];let r=F(t,"y","meshgrid",t instanceof Ze?t.dtype:"float32"),a=Ht(s.shape),o=Ht(r.shape);return n==="xy"?(s=G(s,[1,-1]),r=G(r,[-1,1]),[Xe(bs([o,1],s.dtype),s),Xe(r,bs([1,a],r.dtype))]):(s=G(s,[-1,1]),r=G(r,[1,-1]),[Xe(s,bs([1,o],s.dtype)),Xe(bs([a,1],r.dtype),r)])}function jD(e,t=null,n=!1){let r={x:F(e,"x","min")},a={axis:t,keepDims:n};return W.runKernel(uo,r,a)}var $d=U({min_:jD});function qD(e,t){let n=F(e,"a","minimum"),s=F(t,"b","minimum");[n,s]=Lt(n,s),n.dtype==="bool"&&(n=de(n,"int32"),s=de(s,"int32")),Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(sa,r)}var Mu=U({minimum_:qD});function XD(e,t,n){M(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=F(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)M(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),M(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return W.runKernel(co,o,a)}var T1=U({mirrorPad_:XD});function KD(e,t){let n=F(e,"a","mod"),s=F(t,"b","mod");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(pu,r)}var N1=U({mod_:KD});function ZD(e){let t=F(e,"x","square"),n={};return W.runKernel("Square",{x:t},n)}var vt=U({square_:ZD});function YD(e,t=null,n=!1){e=F(e,"x","moments");let s=qs(t,e.shape),r=Bt(e,s,n),a=r.shape;n||(a=al(r.shape,s));let o=vt(Ae(de(e,"float32"),G(r,a))),i=Bt(o,s,n);return{mean:r,variance:i}}var If=U({moments_:YD});function JD(e,t,n,s){let r=F(t,"data","multiRNNCell"),a=xd(n,"c","multiRNNCell"),o=xd(s,"h","multiRNNCell"),i=r,l=[];for(let d=0;d<e.length;d++){let p=e[d](i,a[d],o[d]);l.push(p[0]),l.push(p[1]),i=p[1]}let c=[],u=[];for(let d=0;d<l.length;d+=2)c.push(l[d]),u.push(l[d+1]);return[c,u]}var QD=U({multiRNNCell_:JD});function e_(e,t,n,s=!1){let r=F(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?G(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:s},u=W.runKernel(Gh,l,c);return o===1?G(u,[u.size]):u}var Sv=U({multinomial_:e_});function t_(e,t){let n=F(e,"a","notEqual","string_or_numeric"),s=F(t,"b","notEqual","string_or_numeric");[n,s]=Lt(n,s),Tt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(po,r)}var ol=U({notEqual_:t_});function n_(e){let n={x:F(e,"x","onesLike")};return W.runKernel(Ni,n)}var vs=U({onesLike_:n_});function s_(e,t){let n=F(e,"v1","outerProduct"),s=F(t,"v2","outerProduct");M(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=G(n,[-1,1]),a=G(s,[1,-1]);return Xe(r,a)}var r_=U({outerProduct_:s_});function a_(e,t,n=0){let s=F(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return W.runKernel(ho,a,r)}var Fs=U({pad_:a_});function o_(e,t,n=0){return M(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Fs(e,[t],n)}var i_=U({pad1d_:o_});function l_(e,t,n=0){return M(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Fs(e,t,n)}var u_=U({pad2d_:l_});function c_(e,t,n=0){return M(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Fs(e,t,n)}var d_=U({pad3d_:c_});function p_(e,t,n=0){return M(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Fs(e,t,n)}var h_=U({pad4d_:p_});function f_(e,t,n){let s=F(e,"x","spaceToBatchND");M(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),M(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),M(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]==0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return W.runKernel(Li,r,a)}var Dd=U({spaceToBatchND_:f_});function m_(e,t,n,s,r,a){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let o=F(e,"x","maxPool"),i=o,l=!1;o.rank===3&&(l=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),M(_r(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=ev(i.shape,t,a,r,s),u=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=y_([c.filterHeight,c.filterWidth],u):d=[[0,0],[0,0]];let p=u[0]===1&&u[1]===1,[h,f]=g_([c.inHeight,c.inWidth],u,d),m=p?s:"valid",g=p?i:Dd(i,u,h),A=(n==="avg"?()=>Id(g,t,a,m):()=>Rd(g,t,a,m))(),x=p?A:Sd(A,u,f);return l?G(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function g_(e,t,n){let s=n.map(u=>u[0]),r=n.map(u=>u[1]),a=e.concat(s,r),o=t.map((u,d)=>(u-a[d]%u)%u),i=r.map((u,d)=>u+o[d]),l=t.map((u,d)=>[s[d],i[d]]),c=t.map((u,d)=>[0,o[d]]);return[l,c]}function y_(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var Cv=U({pool_:m_});function A_(e,t){let n=F(e,"base","pow"),s=F(t,"exp","pow");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(fo,r)}var ma=U({pow_:A_});function x_(e,t){let n=F(e,"x","prelu"),s=F(t,"alpha","prelu"),r={x:n,alpha:s};return W.runKernel(mo,r)}var _d=U({prelu_:x_});function b_(e,t=null,n=!1){let s=F(e,"x","prod");s.dtype==="bool"&&(s=de(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return W.runKernel($i,r,a)}var Sf=U({prod_:b_});function v_(e,t,n){let s=Ht(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return W.makeTensor(r,e,n)}var w_=U({rand_:v_}),E1=ci(O5()),R1=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=E1.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},k_=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=E1.alea(r.toString()),this.randn=new R1(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},I_=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=E1.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function S_(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new k_(t,n,s,r),o=Fe(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var C_=U({randomGamma_:S_});function T_(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new R1(t,n,s,!1,r),o=Fe(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var Tv=U({randomNormal_:T_});function N_(e,t=0,n=1,s="float32",r){let a=Fe(e,s),o=new I_(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var zu=U({randomUniform_:N_});function Lu(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return W.runKernel(fu,{},r)}function E_(e){let n={input:F(e,"input","real")};return W.runKernel(rd,n)}var Fd=U({real_:E_});function R_(e){let n={x:F(e,"x","reciprocal")};return W.runKernel(mu,n)}var $1=U({reciprocal_:R_});function $_(e){let n={x:F(e,"x","relu")};return W.runKernel(go,n)}var pr=U({relu_:$_});function D_(e){let n={x:F(e,"x","relu6")};return W.runKernel(Ao,n)}var Cf=U({relu6_:D_});function __(e,t){let s={x:F(e,"x","reverse")},r={dims:t};return W.runKernel(_i,s,r)}var ws=U({reverse_:__});function F_(e){let t=F(e,"x","reverse");return M(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ws(t,0)}var P_=U({reverse1d_:F_});function O_(e,t){let n=F(e,"x","reverse");return M(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),ws(n,t)}var M_=U({reverse2d_:O_});function z_(e,t){let n=F(e,"x","reverse");return M(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),ws(n,t)}var L_=U({reverse3d_:z_});function B_(e,t){let n=F(e,"x","reverse");return M(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),ws(n,t)}var W_=U({reverse4d_:B_});function V_(e){let n={x:F(e,"x","round")};return W.runKernel(Fi,n)}var Tf=U({round_:V_});function U_(e){let n={x:F(e,"x","rsqrt","float32")};return W.runKernel(aa,n)}var Nf=U({rsqrt_:U_});function Ee(e,t){if((On(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&On(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ro(e,[],[],t)}function G_(e){let n={x:F(e,"x","selu")};return W.runKernel(yu,n)}var Ef=U({selu_:G_});function H_(e,t,n,s,r,a=[1,1],o="NHWC"){let i=F(e,"x","separableConv2d"),l=F(t,"depthwiseFilter","separableConv2d"),c=F(n,"pointwiseFilter","separableConv2d"),u=i,d=!1;if(i.rank===3&&(d=!0,u=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),M(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let p=l.shape[2],h=l.shape[3];M(c.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`);let f=_u(u,l,s,r,o,a),g=fa(f,c,1,"valid",o);return d?G(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var D1=U({separableConv2d_:H_});async function j_(e,t){let n=F(e,"x","setdiff1d"),s=F(t,"y","setdiff1d");M(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),M(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),M(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;let l=new jt([i],n.dtype),c=new jt([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(l.values[d]=r[u],c.values[d]=u,d++);return[l.toTensor(),c.toTensor()]}var Nv=j_;function q_(e){let n={x:F(e,"x","sign")};return W.runKernel(Au,n)}var _1=U({sign_:q_});function X_(e){let n={x:F(e,"x","sin","float32")};return W.runKernel(xo,n)}var Rf=U({sin_:X_});function K_(e){let n={x:F(e,"x","sinh")};return W.runKernel(zi,n)}var $f=U({sinh_:K_});function Z_(e,t,n){let s=F(e,"x","slice1d");return M(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),De(s,[t],[n])}var Df=U({slice1d_:Z_});function Y_(e,t,n){let s=F(e,"x","slice2d");return M(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),De(s,t,n)}var F1=U({slice2d_:Y_});function J_(e,t,n){let s=F(e,"x","slice3d");return M(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),De(s,t,n)}var Bu=U({slice3d_:J_});function Q_(e,t,n){let s=F(e,"x","slice4d");return M(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),De(s,t,n)}var Pd=U({slice4d_:Q_});function eF(e,t=-1){let n=F(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return W.runKernel(vo,s,r)}var il=U({softmax_:eF});function tF(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return W.runKernel(Mh,t)}var Od=U({fft_:tF});function nF(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return W.runKernel(zh,t)}var Wu=U({ifft_:nF});function sF(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=G(e,[n,t]);s=Wu(r)}else{let r=[n,2*(t-1)],a=G(Fd(e),[n,t]),o=G(xf(e),[n,t]),i=ws(De(a,[0,1],[n,t-2]),1),l=B(ws(De(o,[0,1],[n,t-2]),1),Ee(-1)),c=kt([a,i],1),u=kt([o,l],1),d=G(Eo(c,u),[r[0],r[1]]);s=Wu(d)}if(s=Fd(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=G(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var _f=U({irfft_:sF});function rF(e,t,n=0){let r={x:F(e,"x","split")},a={numOrSizeSplits:t,axis:n};return W.runKernel(Bi,r,a)}var vn=U({split_:rF});function aF(e,t){M(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=De(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=kt([e,Kt(f)],e.shape.length-1),n=t}else r=e;let a=tt(r),o=G(Eo(r,a),[s,n]),i=Od(o),l=Math.floor(n/2)+1,c=Fd(i),u=xf(i),d=vn(c,[l,n-l],c.shape.length-1),p=vn(u,[l,n-l],u.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,G(Eo(d[0],p[0]),h)}var Md=U({rfft_:aF});function oF(e){let n={x:F(e,"x","sqrt","float32")};return W.runKernel(ia,n)}var Nn=U({sqrt_:oF});function iF(e,t){let n=F(e,"a","squaredDifference"),s=F(t,"b","squaredDifference");[n,s]=Lt(n,s),Tt(n.shape,s.shape);let r={a:n,b:s},a={};return W.runKernel(la,r,a)}var Ff=U({squaredDifference_:iF});function lF(e,t){let n=F(e,"x","squeeze");return G(n,B5(n.shape,t).newShape)}var dt=U({squeeze_:lF});function uF(e,t=0){let n=xd(e,"tensors","stack","string_or_numeric");M(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&M(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return W.runKernel(Ri,s,r)}var En=U({stack_:uF});function cF(e,t=0){let s={x:F(e,"x","step")},r={alpha:t};return W.runKernel(Io,s,r)}var Vu=U({step_:cF});function dF(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let u={x:F(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return W.runKernel(Wi,u,d)}var P1=U({stridedSlice_:dF});function pF(e){let n={x:F(e,"x","tan","float32")};return W.runKernel(Vi,n)}var O1=U({tan_:pF});function tn(e,t){di(e);let n=$r(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ro(e,null,n,t)}function hr(e,t,n){if(di(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=$r(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ro(e,t,s,n)}function hF(e,t,n){if(di(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=$r(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ro(e,t,s,n)}function fF(e,t,n){if(di(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=$r(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ro(e,t,s,n)}function mF(e,t,n){if(di(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=$r(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Ro(e,t,s,n)}function gF(e,t=1,n=!0){let s=F(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=W.runKernel(vu,a,o);return{values:i,indices:l}}var M1=U({topk_:gF});function yF(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new R1(t,n,s,!0,r),o=Fe(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var Pf=U({truncatedNormal_:yF});function AF(e,t=0){let n=F(e,"x","unique","string_or_numeric");M(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=W.runKernel(Qh,s,r);return{values:a,indices:o}}var Of=U({unique_:AF});function xF(e,t,n){let s=F(e,"x","unsortedSegmentSum"),r=F(t,"segmentIds","unsortedSegmentSum","int32");M(An(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return W.runKernel(id,a,o)}var z1=U({unsortedSegmentSum_:xF});function bF(e,t=0){let n=F(e,"x","unstack","string_or_numeric");M(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return W.runKernel(Gi,s,r)}var Hn=U({unstack_:bF});function Ev(e,t=!0,n,s){return W.makeVariable(e,t,n,s)}function Rv(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=Fe(e,"int32"),r=Fe([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function vF(e){let t=F(e,"condition","whereAsync","bool"),n=await t.data(),s=Rv(t.shape,n);return e!==t&&t.dispose(),s}var L1=vF;async function wF(e,t,n){let s=F(e,"tensor","boolMask"),r=F(t,"mask","boolMask","bool"),a=n==null?0:n,o=r.rank,i=s.shape;M(o>0,()=>"mask cannot be scalar"),Vn(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let c=i.slice(0,a).concat([l],i.slice(a+o)),u=G(s,c),d=G(r,[-1]),p=await L1(d),h=dt(p,[1]),f=sl(u,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),u.dispose(),d.dispose(),p.dispose(),f}var kF=wF;function IF(e,t="euclidean",n=null,s=!1){e=F(e,"x","norm");let r=$v(e,t,n),a=r.shape;if(s){let o=qs(n,e.shape);a=al(r.shape,o)}return G(r,a)}function $v(e,t,n=null){if(e.rank===0)return en(e);if(e.rank!==1&&n===null)return $v(G(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return Ie(en(e),n);if(t===1/0)return Gn(en(e),n);if(t===-1/0)return $d(en(e),n);if(t==="euclidean"||t===2)return Nn(Ie(ma(en(e),Ee(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Gn(Ie(en(e),n[0]),n[1]-1);if(t===1/0)return Gn(Ie(en(e),n[1]),n[0]);if(t===-1/0)return $d(Ie(en(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Nn(Ie(vt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Mf=U({norm_:IF});function SF(e,t,n,s,r=!0){let a=F(e,"v","movingAverage"),o=F(t,"x","movingAverage"),i=F(n,"decay","movingAverage");i3(a,o),M(Kr(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Ee(1),c=Ae(l,i),u=B(Ae(o,a),c);if(r){M(s!=null,()=>"When using zeroDebias: true, step is required.");let d=F(s,"step","movingAverage");u=fe(u,Ae(l,ma(i,d)))}return le(a,u)}var CF=U({movingAverage_:SF});function TF(e,t,n){let s=F(e,"indices","scatterND","int32"),r=F(t,"updates","scatterND");X2(r,s,n);let a={indices:s,updates:r},o={shape:n};return W.runKernel(Pi,a,o)}var Dv=U({scatterND_:TF});function NF(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function EF(e,t,n,s=0){let r=F(e,"sparseIndices","sparseToDense","int32"),a=F(t,"sparseValues","sparseToDense"),o=F(s,"defaultValue","sparseToDense",a.dtype);NF(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return W.runKernel(ad,i,l)}var B1=U({sparseToDense_:EF});function RF(e,t){let n=F(t,"indices","gatherND","int32"),r={params:F(e,"x","gatherND","string_or_numeric"),indices:n};return W.runKernel(wi,r)}var _v=U({gatherND_:RF});function $F(e,t){if(t==null)return e.shape.slice();if(Kr(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function DF(e,t,n,s){let r=F(e,"x","dropout");if(M(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),M(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Ze?r.clone():r;let a=$F(r,n),o=1-t,i=fe(Ou(le(zu(a,0,1,"float32",s),o)),o);return B(r,i)}var Fv=U({dropout_:DF});function Pv(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function W1(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return tn(r,"float32")}async function _F(e,t,n=1){let s=F(e,"predictions","inTopK"),r=F(t,"targets","inTopK");M(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),M(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Vn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];M(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,c]=[o.length/a,a],u=W5("bool",l);for(let d=0;d<l;d++){let p=d*c,h=o.subarray(p,p+c),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),u[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){u[d]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),qt(u,r.shape,"bool")}var FF=_F,Oo={};ze(Oo,{conv2d:()=>MF,depthwiseConv2d:()=>WF,matMul:()=>UF});function PF(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]])),M(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),M(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),M(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=a==="NHWC"?i.shape[3]:i.shape[1],u=a==="NHWC"?l.shape[3]:l.shape[1];M(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),M(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),o!=null&&M(An(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let d={x:i,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return W.runKernel(Th,d,p)}var V1=U({conv2DBackpropFilter_:PF});function zf(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return B(e,Vu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Lf(e,t){let n=t,s=ln(e.shape,t.shape);return s.length>0&&(n=Ie(n,s)),G(n,e.shape)}function Bf(e,t,n,s){if(t==="linear")return e;if(t==="relu")return pr(e);if(t==="elu")return Fu(e);if(t==="relu6")return Cf(e);if(t==="prelu")return _d(e,n);if(t==="leakyrelu")return Td(e,s);if(t==="sigmoid")return is(e);throw new Error(`Unknown fused activation ${t}.`)}var Wf=(e,t)=>!(e>0)||t==="linear";function OF({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Wf(W.state.gradientDepth,l)===!1){let w=fa(e,t,n,s,r,a,o);return i!=null&&(w=le(w,i)),Bf(w,l,c,u)}let d=F(e,"x","conv2d","float32"),p=F(t,"filter","conv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=G(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),M(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),o!=null&&M(An(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`),M(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),M(_r(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=kd(h.shape,p.shape,n,a,s,o),g;i!=null&&(g=F(i,"bias","fused conv2d"),[g]=Lt(g,d),Tt(m.outShape,g.shape));let y;c!=null&&(y=F(c,"prelu weights","fused conv2d"));let A=(w,k)=>{let[S,E,R,P]=k,$=zf(w,R,l);M(_o(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let D=h1(E.shape,$,S,n,s),T=V1(E,$,S.shape,n,s),O=[D,T];if(P!=null){let V=Lf(P,$);O.push(V)}return O},x={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Fr((k,S,E)=>{let R=W.runKernel(Co,x,b);return E([S,k,R]),f&&(R=G(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:A}})(h,p):Fr((k,S,E,R)=>{let P=W.runKernel(Co,x,b);return R([S,k,P,E]),f&&(P=G(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:A}})(h,p,g)}var MF=U({fusedConv2d_:OF});function zF(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:i,dy:l},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return W.runKernel($h,c,u)}var Ov=U({depthwiseConv2dNativeBackpropFilter_:zF});function LF(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:i,filter:n},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},d=W.runKernel(Dh,c,u);return l?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Mv=U({depthwiseConv2dNativeBackpropInput_:LF});function BF({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(Wf(W.state.gradientDepth,l)===!1){let w=_u(e,t,n,s,r,a,o);return i!=null&&(w=le(w,i)),Bf(w,l,c,u)}let d=F(e,"x","depthwiseConv2d","float32"),p=F(t,"filter","depthwiseConv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=G(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),M(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),M(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),M(_r(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),o!=null&&M(An(s),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${s}.`);let m=kd(h.shape,p.shape,n,a,s,o,!0),g;i!=null&&(g=F(i,"bias","fused conv2d"),[g]=Lt(g,d),Tt(m.outShape,g.shape));let y;c!=null&&(y=F(c,"prelu weights","fused depthwiseConv2d"));let A=(w,k)=>{M(_o(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[S,E,R,P]=k,$=zf(w,R,l),D=Mv(E.shape,$,S,n,s,a,o),T=Ov(E,$,S.shape,n,s,a,o);if(P!=null){let O=Lf(g,$);return[D,T,O]}return[D,T]},x={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Fr((k,S,E)=>{let R=W.runKernel(To,x,b);return E([S,k,R]),f&&(R=G(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:A}})(h,p):Fr((k,S,E,R)=>{let P=W.runKernel(To,x,b);return R([S,k,P,E]),f&&(P=G(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:A}})(h,p,g)}var WF=U({fusedDepthwiseConv2d_:BF});function VF({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(Wf(W.state.gradientDepth,a)===!1){let P=Xe(e,t,n,s);return r!=null&&(P=le(P,r)),Bf(P,a,o,i)}let l=F(e,"a","fused matMul"),c=F(t,"b","fused matMul");[l,c]=Lt(l,c);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=Ht(f),y=Ht(m);M(l.rank>=2&&c.rank>=2&&l.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${c.rank}.`),M(Kr(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${c.shape} must match.`),M(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);let A=l.shape.slice(0,-2).concat([p,h]),x=n?G(l,[g,u,p]):G(l,[g,p,u]),b=s?G(c,[y,h,d]):G(c,[y,d,h]),w;r!=null&&(w=F(r,"bias","fused matMul"),[w]=Lt(w,l),Tt(A,w.shape));let k;o!=null&&(k=F(o,"prelu weights","fused matMul"));let S=(P,$)=>{let[D,T,O,V]=$,H=zf(G(P,O.shape),O,a),z,X;if(!n&&!s?(z=Xe(H,T,!1,!0),X=Xe(D,H,!0,!1)):!n&&s?(z=Xe(H,T,!1,!1),X=Xe(H,D,!0,!1)):n&&!s?(z=Xe(T,H,!1,!0),X=Xe(D,H,!1,!1)):(z=Xe(T,H,!0,!0),X=Xe(H,D,!0,!0)),r!=null){let ee=Lf(V,H);return[z,X,ee]}else return[z,X]},E={a:x,b,bias:w,preluActivationWeights:k},R={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?Fr(($,D,T)=>{let O=W.runKernel(So,E,R);return T([$,D,O]),{value:G(O,A),gradFunc:S}})(x,b):Fr(($,D,T,O)=>{let V=W.runKernel(So,E,R);return O([$,D,V,T]),{value:G(V,A),gradFunc:S}})(x,b,w)}var UF=U({fusedMatMul_:VF});function GF(e){return W1(e,.54,.46)}var HF=U({hammingWindow_:GF});function jF(e){return W1(e,.5,.5)}var zv=U({hannWindow_:jF});function qF(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(De(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=kt([De(e,a,t-i),Pu([i],r)]);o.push(l),a+=n}return o.length===0?hr([],[0,t]):G(kt(o),[o.length,t])}var Lv=U({frame_:qF});function XF(e,t,n,s,r=zv){s==null&&(s=Pv(t));let a=Lv(e,t,n),o=B(a,r(t));return Md(o,s)}var KF=U({stft_:XF});function ZF(e,t,n,s,r="bilinear",a=0){let o=F(e,"image","cropAndResize"),i=F(t,"boxes","cropAndResize","float32"),l=F(n,"boxInd","cropAndResize","int32"),c=i.shape[0];M(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),M(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),M(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),M(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),M(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let u={image:o,boxes:i,boxInd:l},d={method:r,extrapolationValue:a,cropSize:s};return W.runKernel(yi,u,d)}var YF=U({cropAndResize_:ZF});function JF(e){let t=F(e,"image","flipLeftRight","float32");M(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return W.runKernel(bi,n,{})}var QF=U({flipLeftRight_:JF});function eP(e){let t=F(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];M(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),M(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,_s(t,r)}var tP=U({grayscaleToRGB_:eP});function nP(e,t,n=0,s=.5){let r=F(e,"image","rotateWithOffset","float32");M(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return W.runKernel(ji,a,o)}var sP=U({rotateWithOffset_:nP});function Uu(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),M(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),M(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),M(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),M(t.rank===1,()=>"scores must be a 1D tensor"),M(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),M(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function rP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=F(e,"boxes","nonMaxSuppression","float32"),o=F(t,"scores","nonMaxSuppression","float32"),i=Uu(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return W.runKernel(Ci,{boxes:a,scores:o},l)}var aP=U({nonMaxSuppression_:rP});function oP(e,t,n){let s=iP(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function iP(e,t,n){return uP(e,t,n||lP)}function lP(e,t){return e>t?1:e<t?-1:0}function uP(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function Bv(e,t,n,s,r){return U1(e,t,n,s,r,0)}function Wv(e,t,n,s,r,a){return U1(e,t,n,s,r,0,!1,a,!0)}function Vv(e,t,n,s,r,a){return U1(e,t,n,s,r,a,!0)}function U1(e,t,n,s,r,a,o=!1,i=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Uv);let u=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&c.length>0;){let g=c.pop(),{score:y,boxIndex:A,suppressBeginIndex:x}=g;if(y<r)break;let b=!1;for(let w=d.length-1;w>=x;--w){let k=cP(e,A,d[w]);if(k>=s){b=!0;break}if(g.score=g.score*dP(s,u,k),g.score<=r)break}g.suppressBeginIndex=d.length,b||(g.score===y?(d.push(A),p.push(g.score)):g.score>r&&oP(c,g,Uv))}let h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=p),l&&(m.validOutputs=h),m}function cP(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(i-a)*(l-o),f=(d-c)*(p-u);if(h<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(o,u),y=Math.min(i,d),A=Math.min(l,p),x=Math.max(y-m,0)*Math.max(A-g,0);return x/(h+f-x)}function dP(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function Uv(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function pP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=F(e,"boxes","nonMaxSuppressionAsync"),o=F(t,"scores","nonMaxSuppressionAsync"),i=Uu(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:d}=Bv(c,u,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),tn(d,"int32")}var hP=pP;function fP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=F(e,"boxes","nonMaxSuppression"),i=F(t,"scores","nonMaxSuppression"),l=Uu(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},d=W.runKernel(Ti,c,u);return{selectedIndices:d[0],selectedScores:d[1]}}var mP=U({nonMaxSuppressionWithScore_:fP});async function gP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=F(e,"boxes","nonMaxSuppressionAsync"),i=F(t,"scores","nonMaxSuppressionAsync"),l=Uu(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c=await Promise.all([o.data(),i.data()]),u=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=Vv(u,d,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:tn(p,"int32"),selectedScores:tn(h)}}var yP=gP;function AP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=F(e,"boxes","nonMaxSuppression"),i=F(t,"scores","nonMaxSuppression"),l=Uu(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,p={boxes:o,scores:i},h={maxOutputSize:c,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:a},f=W.runKernel(hu,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var xP=U({nonMaxSuppressionPadded_:AP});async function bP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=F(e,"boxes","nonMaxSuppressionAsync"),i=F(t,"scores","nonMaxSuppressionAsync"),l=Uu(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Wv(p,h,c,u,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:tn(f,"int32"),validOutputs:Ee(m,"int32")}}var vP=bP;function wP(e,t,n=!1,s=!1){let r=F(e,"images","resizeBilinear");M(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),M(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=G(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=W.runKernel(yo,i,l);return o?G(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Gv=U({resizeBilinear_:wP});function kP(e,t,n=!1,s=!1){let r=F(e,"images","resizeNearestNeighbor");M(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),M(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),M(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=G(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=W.runKernel(gu,i,l);return o?G(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Hv=U({resizeNearestNeighbor_:kP});function IP(e,t="binary",n=!1,s=.5){let r=F(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],c=B(tn([s]),255),u,d,p,h;if(M(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),M(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),M(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),M(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[u,d,p]=vn(r,[1,1,1],-1);let g=B(u,a),y=B(d,o),A=B(p,i);h=le(le(g,y),A)}else h=e;if(t==="otsu"){let g=d1(de(Tf(h),"int32"),qt([]),256);c=SP(g,l)}let f=n?Po(h,c):us(h,c);return de(B(f,255),"int32")}function SP(e,t){let n=tn([-1]),s=tn([0]),r=tn([0]),a,o,i,l,c,u;for(let d=0;d<e.size-1;d++){a=De(e,0,d+1),o=De(e,d+1),c=fe(Ie(a),t),u=fe(Ie(o),t);let p=Ie(B(a,Lu(0,a.size)));i=fe(p,Ie(a));let h=Pu(o.shape,a.size),f=le(Lu(0,o.size),h),m=B(o,f);l=fe(Ie(m),Ie(o));let g=Ae(i,l),y=Ae(i,l),A=B(c,u);r=B(B(A,g),y);let x=us(r,s);s=zn(x,r,s),n=zn(x,tn([d]),n)}return n}var CP=U({threshold_:IP});function TP(e,t,n="nearest",s="constant",r=0,a){let o=F(e,"image","transform","float32"),i=F(t,"transforms","transform","float32");M(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),M(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},c={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return W.runKernel(Ui,l,c)}var NP=U({transform_:TP});function EP(e,t,n){M(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),M(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=F(e,"a","bandPart");M(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=G(Lu(0,a,1,"int32"),[-1,1]),l=Lu(0,o,1,"int32"),c=Ae(i,l),u=Ks(Po(c,Ee(+t,"int32")),Fo(c,Ee(-n,"int32"))),d=Kt([a,o],s.dtype);return G(En(Hn(G(s,[-1,a,o])).map(p=>zn(u,p,d))),r)}var RP=U({bandPart_:EP});function $P(e){let t;if(Array.isArray(e)){t=!1,M(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)M(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=vn(e,e.shape[0],0).map(r=>dt(r,[0]));M(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(W.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=B(Ie(B(n[o],a)),n[o]);a=Ae(a,i)}return fe(a,Mf(a,"euclidean"))}));return t?En(n,0):n}var DP=U({gramSchmidt_:$P});function _P(e,t=!1){if(M(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return jv(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c),s=Hn(G(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[c,u]=jv(l,t);r.push(c),a.push(u)});let o=G(En(r,0),e.shape),i=G(En(a,0),e.shape);return[o,i]}}function jv(e,t=!1){return W.tidy(()=>{M(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=b1(n),a=cr(e),o=hr([[1]],[1,1]),i=cr(o),l=n>=s?s:n;for(let c=0;c<l;++c){let u=a,d=i,p=r;[i,a,r]=W.tidy(()=>{let h=De(a,[c,c],[n-c,1]),f=Mf(h),m=De(a,[c,c],[1,1]),g=zn(us(m,0),hr([[-1]]),hr([[1]])),y=Ae(m,B(g,f)),A=fe(h,y);A.shape[0]===1?i=cr(o):i=kt([o,De(A,[1,0],[A.shape[0]-1,A.shape[1]])],0);let x=Ft(fe(Xe(g,y),f)),b=De(a,[c,0],[n-c,s]),w=B(x,i),k=et(i);if(c===0)a=Ae(b,Xe(w,Xe(k,b)));else{let R=Ae(b,Xe(w,Xe(k,b)));a=kt([De(a,[0,0],[c,s]),R],0)}let S=et(w),E=De(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=Ae(E,Xe(Xe(E,i),S));else{let R=Ae(E,Xe(Xe(E,i),S));r=kt([De(r,[0,0],[n,c]),R],1)}return[i,a,r]}),Q([u,d,p])}return!t&&n>s&&(r=De(r,[0,0],[n,s]),a=De(a,[0,0],[s,s])),[r,a]})}var FP=U({qr_:_P}),jn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(jn||(jn={}));function PP(e,t,n=jn.SUM_BY_NONZERO_WEIGHTS){let s=F(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=F(t,"weights","computeWeightedLoss"));let a=r==null?s:B(s,r);if(n===jn.NONE)return a;if(n===jn.SUM)return Ie(a);if(n===jn.MEAN){if(r==null)return Bt(a);{let o=s.size/r.size,i=fe(Ie(a),Ie(r));return o>1?fe(i,Ee(o)):i}}if(n===jn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return fe(Ie(a),Ee(s.size));{let o=B(r,bs(s.shape)),i=de(Ie(ol(o,Ee(0))),"float32");return fe(Ie(a),i)}}throw Error(`Unknown reduction: ${n}`)}var ga=U({computeWeightedLoss_:PP});function OP(e,t,n,s=jn.SUM_BY_NONZERO_WEIGHTS){let r=F(e,"labels","absoluteDifference"),a=F(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=F(n,"weights","absoluteDifference")),Vn(r.shape,a.shape,"Error in absoluteDifference: ");let i=en(Ae(r,a));return ga(i,o,s)}var MP=U({absoluteDifference_:OP});function zP(e,t,n,s,r=jn.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"labels","cosineDistance"),o=F(t,"predictions","cosineDistance"),i=null;s!=null&&(i=F(s,"weights","cosineDistance")),Vn(a.shape,o.shape,"Error in cosineDistance: ");let l=Ee(1),c=Ae(l,Ie(B(a,o),n,!0));return ga(c,i,r)}var LP=U({cosineDistance_:zP});function BP(e,t,n,s=jn.SUM_BY_NONZERO_WEIGHTS){let r=F(e,"labels","hingeLoss"),a=F(t,"predictions","hingeLoss"),o=null;n!=null&&(o=F(n,"weights","hingeLoss")),Vn(r.shape,a.shape,"Error in hingeLoss: ");let i=Ee(1);r=Ae(B(Ee(2),r),i);let l=pr(Ae(i,B(r,a)));return ga(l,o,s)}var WP=U({hingeLoss_:BP});function VP(e,t,n,s=1,r=jn.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"labels","huberLoss"),o=F(t,"predictions","huberLoss"),i=null;n!=null&&(i=F(n,"weights","huberLoss")),Vn(a.shape,o.shape,"Error in huberLoss: ");let l=Ee(s),c=en(Ae(o,a)),u=Mu(c,l),d=Ae(c,u),p=le(B(Ee(.5),vt(u)),B(l,d));return ga(p,i,r)}var UP=U({huberLoss_:VP});function GP(e,t,n,s=1e-7,r=jn.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"labels","logLoss"),o=F(t,"predictions","logLoss"),i=null;n!=null&&(i=F(n,"weights","logLoss")),Vn(a.shape,o.shape,"Error in logLoss: ");let l=Ee(1),c=Ee(s),u=Ft(B(a,xs(le(o,c)))),d=B(Ae(l,a),xs(le(Ae(l,o),c))),p=Ae(u,d);return ga(p,i,r)}var HP=U({logLoss_:GP});function jP(e,t,n,s=jn.SUM_BY_NONZERO_WEIGHTS){let r=F(e,"labels","meanSquaredError"),a=F(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=F(n,"weights","meanSquaredError")),Vn(r.shape,a.shape,"Error in meanSquaredError: ");let i=Ff(r,a);return ga(i,o,s)}var qP=U({meanSquaredError_:jP});function XP(e,t){let n=F(e,"labels","sigmoidCrossEntropyWithLogits"),s=F(t,"logits","sigmoidCrossEntropyWithLogits");Vn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=pr(s),a=B(s,n),o=Nd(As(Ft(en(s))));return le(Ae(r,a),o)}function KP(e,t,n,s=0,r=jn.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"multiClassLabels","sigmoidCrossEntropy"),o=F(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=F(n,"weights","sigmoidCrossEntropy")),Vn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let c=Ee(s),u=Ee(1),d=Ee(.5);a=le(B(a,Ae(u,c)),B(d,c))}let l=XP(a,o);return ga(l,i,r)}var ZP=U({sigmoidCrossEntropy_:KP});function YP(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Fr((r,a,o)=>{let l=S1(a,[n],!0),c=Ae(de(a,"float32"),l);o([r,c]);let u=Ft(B(c,r));return{value:Ie(u,[n]),gradFunc:(h,f)=>{let[m,g]=f,y=al(h.shape,[n]);return[B(G(h,y),Ae(de(m,"float32"),As(g))),B(G(h,y),Ae(As(g),de(m,"float32")))]}}})(e,t)}function JP(e,t,n,s=0,r=jn.SUM_BY_NONZERO_WEIGHTS){let a=F(e,"onehotLabels","softmaxCrossEntropy"),o=F(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=F(n,"weights","softmaxCrossEntropy")),Vn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let c=Ee(s),u=Ee(1),d=Ee(a.shape[1]);a=le(B(a,Ae(u,c)),fe(c,d))}let l=YP(a,o);return ga(l,i,r)}var QP=U({softmaxCrossEntropy_:JP});function eO(e,t,n,s){let r=F(e,"indices","sparseFillEmptyRows"),a=F(t,"values","sparseFillEmptyRows"),o=F(n,"denseShape","sparseFillEmptyRows"),i=F(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},c=W.runKernel(qh,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}var tO=U({sparseFillEmptyRows_:eO});function nO(e,t,n){let s=F(e,"inputIndices","sparseReshape"),r=F(t,"inputShape","sparseReshape"),a=F(n,"newShape","sparseReshape");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=W.runKernel(Xh,o);return{outputIndices:i[0],outputShape:i[1]}}var sO=U({sparseReshape_:nO});function rO(e,t,n){let s=F(e,"data","sparseSegmentMean"),r=F(t,"indices","sparseSegmentMean"),a=F(n,"segmentIds","sparseSegmentMean");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return W.runKernel(Kh,o)}var aO=U({sparseSegmentMean_:rO});function oO(e,t,n){let s=F(e,"data","sparseSegmentSum"),r=F(t,"indices","sparseSegmentSum"),a=F(n,"segmentIds","sparseSegmentSum");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return W.runKernel(Zh,o)}var iO=U({sparseSegmentSum_:oO});function lO(e,t,n,s,r,a,o,i){let l=F(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let c=F(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:l,dataSplits:c},p=W.runKernel(od,d,u);return{nGrams:p[0],nGramsSplits:p[1]}}var uO=U({stringNGrams_:lO});function cO(e,t,n=!0){let s=F(e,"input","stringSplit","string"),r=F(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=W.runKernel(Yh,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var dO=U({stringSplit_:cO});function pO(e,t){let n=F(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return W.runKernel(Jh,r,s)}var hO=U({stringToHashBucketFast_:pO}),fO={fft:Od,ifft:Wu,rfft:Md,irfft:_f},mO={hammingWindow:HF,hannWindow:zv,frame:Lv,stft:KF},$e={flipLeftRight:QF,grayscaleToRGB:tP,resizeNearestNeighbor:Hv,resizeBilinear:Gv,rotateWithOffset:sP,cropAndResize:YF,nonMaxSuppression:aP,nonMaxSuppressionAsync:hP,nonMaxSuppressionWithScore:mP,nonMaxSuppressionWithScoreAsync:yP,nonMaxSuppressionPadded:xP,nonMaxSuppressionPaddedAsync:vP,threshold:CP,transform:NP},qv={bandPart:RP,gramSchmidt:DP,qr:FP},gO={absoluteDifference:MP,computeWeightedLoss:ga,cosineDistance:LP,hingeLoss:WP,huberLoss:UP,logLoss:HP,meanSquaredError:qP,sigmoidCrossEntropy:ZP,softmaxCrossEntropy:QP},zd={sparseFillEmptyRows:tO,sparseReshape:sO,sparseSegmentMean:aO,sparseSegmentSum:iO},Vf={stringNGrams:uO,stringSplit:dO,stringToHashBucketFast:hO},ya=class extends X3{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return Q(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Av(e,t)}dispose(){this.iterations_!=null&&Q(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ee(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ya,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Uf=class extends ya{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=W.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:j(()=>tt(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:j(()=>tt(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;j(()=>{let c=le(B(i,this.rho),B(vt(o),1-this.rho)),u=B(fe(Nn(le(l,this.epsilon)),Nn(le(i,this.epsilon))),o),d=le(B(l,this.rho),B(vt(u),1-this.rho));i.assign(c),l.assign(d);let p=le(B(u,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Q(this.accumulatedGrads.map(e=>e.variable)),Q(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Uf.className="Adadelta";Do(Uf);var Gf=class extends ya{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=W.registeredVariables[n];if(this.accumulatedGrads[s]==null){let i=!1;this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:j(()=>Pu(r.shape,this.initialAccumulatorValue).variable(i))}}let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;j(()=>{let i=le(o,vt(a));o.assign(i);let l=le(B(fe(a,Nn(le(i,W.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Q(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Gf.className="Adagrad";Do(Gf);var Hf=class extends ya{constructor(e,t,n,s=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],j(()=>{this.accBeta1=Ee(t).variable(),this.accBeta2=Ee(n).variable()}),s==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);j(()=>{let n=Ae(1,this.accBeta1),s=Ae(1,this.accBeta2);t.forEach((r,a)=>{let o=W.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:j(()=>tt(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:j(()=>tt(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=le(B(c,this.beta1),B(l,1-this.beta1)),p=le(B(u,this.beta2),B(vt(l),1-this.beta2)),h=fe(d,n),f=fe(p,s);c.assign(d),u.assign(p);let m=le(B(fe(h,le(Nn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(B(this.accBeta1,this.beta1)),this.accBeta2.assign(B(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Q(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Q(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),j(()=>{this.accBeta1.assign(ma(this.beta1,this.iterations_+1)),this.accBeta2.assign(ma(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Hf.className="Adam";Do(Hf);var jf=class extends ya{constructor(e,t,n,s=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],j(()=>{this.iteration=Ee(0).variable(),this.accBeta1=Ee(t).variable()}),s==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);j(()=>{let n=Ae(1,this.accBeta1),s=fe(-this.learningRate,le(B(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=W.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:tt(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:tt(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=le(B(c,this.beta1),B(l,1-this.beta1)),p=B(u,this.beta2),h=en(l),f=Pr(p,h);c.assign(d),u.assign(f);let m=le(B(fe(s,n),fe(d,le(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(le(this.iteration,1)),this.accBeta1.assign(B(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Q(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Q(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};jf.className="Adamax";Do(jf);var Ld=class extends ya{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=W.registeredVariables[n];j(()=>{let o=le(B(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=bn(Ee(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Ld.className="SGD";Do(Ld);var qf=class extends Ld{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ee(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=W.registeredVariables[n];if(this.accumulations[s]==null){let i=!1;this.accumulations[s]={originalName:`${n}/momentum`,variable:j(()=>tt(r).variable(i))}}let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&j(()=>{let i,l=le(B(this.m,a),o);this.useNesterov?i=le(B(this.c,le(o,B(l,this.m))),r):i=le(B(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Q(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};qf.className="Momentum";Do(qf);var Xf=class extends ya{constructor(e,t=.9,n=0,s=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=W.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=W.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:j(()=>tt(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:j(()=>tt(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:j(()=>tt(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;j(()=>{let c=le(B(i,this.decay),B(vt(o),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[s].variable,d=le(B(u,this.decay),B(o,1-this.decay)),p=fe(B(o,this.learningRate),Nn(Ae(c,le(vt(d),this.epsilon)))),h=le(B(l,this.momentum),p);i.assign(c),u.assign(d),l.assign(h);let f=Ae(r,h);r.assign(f)}else{let u=le(B(i,this.decay),B(vt(o),1-this.decay)),d=le(B(l,this.momentum),fe(B(o,this.learningRate),Nn(le(u,this.epsilon))));i.assign(u),l.assign(d);let p=Ae(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Q(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Q(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Q(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Xf.className="RMSProp";Do(Xf);var ll=class{static sgd(e){return new Ld(e)}static momentum(e,t,n=!1){return new qf(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Xf(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Hf(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Uf(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new jf(e,t,n,s,r)}static adagrad(e,t=.1){return new Gf(e,t)}},ul={sgd:ll.sgd,momentum:ll.momentum,adadelta:ll.adadelta,adagrad:ll.adagrad,rmsprop:ll.rmsprop,adamax:ll.adamax,adam:ll.adam},yO=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function Xv(){return new Promise(e=>yO(()=>e()))}var N={};ze(N,{ERF_A1:()=>NO,ERF_A2:()=>EO,ERF_A3:()=>RO,ERF_A4:()=>$O,ERF_A5:()=>DO,ERF_P:()=>TO,PARALLELIZE_THRESHOLD:()=>G1,SELU_SCALE:()=>Zv,SELU_SCALEALPHA:()=>Kv,applyActivation:()=>Bf,assertAndGetBroadcastShape:()=>Tt,assertAxesAreInnerMostDims:()=>_D,assertParamsConsistent:()=>AO,assignToTypedArray:()=>zO,axesAreInnerMostDims:()=>k1,calculateShapes:()=>O3,checkEinsumDimSizes:()=>GO,combineLocations:()=>bv,complexWithEvenIndex:()=>PO,complexWithOddIndex:()=>OO,computeConv2DInfo:()=>kd,computeConv3DInfo:()=>tv,computeDefaultPad:()=>l1,computeDilation2DInfo:()=>n$,computeOptimalWindowSize:()=>bO,computeOutAndReduceShapes:()=>vv,computeOutShape:()=>xO,computePool2DInfo:()=>ev,computePool3DInfo:()=>s$,convertConv2DDataFormat:()=>nv,decodeEinsumEquation:()=>VO,eitherStridesOrDilationsAreOne:()=>_r,expandShapeToKeepDim:()=>al,exponent:()=>BO,exponents:()=>LO,fromStringArrayToUint8:()=>QO,fromUint8ToStringArray:()=>JO,getAxesPermutation:()=>wv,getBroadcastDims:()=>X$,getComplexWithIndex:()=>MO,getEinsumComputePath:()=>HO,getEinsumPermutation:()=>UO,getFusedBiasGradient:()=>Lf,getFusedDyActivation:()=>zf,getImageCenter:()=>vO,getInnerMostAxes:()=>FD,getPermuted:()=>kO,getReductionAxes:()=>ln,getReshaped:()=>wO,getReshapedPermuted:()=>IO,getSliceBeginCoords:()=>SO,getSliceSize:()=>CO,getUndoAxesPermutation:()=>I1,isIdentityPermutation:()=>jO,log:()=>RE,mergeRealAndImagArrays:()=>_O,prepareAndValidate:()=>P3,prepareSplitSize:()=>XO,segment_util:()=>Qv,shouldFuse:()=>Wf,slice_util:()=>Qt,splitRealAndImagArrays:()=>FO,tupleValuesAreOne:()=>_o,upcastType:()=>Mn,validateInput:()=>X2,validateUpdateShape:()=>q2,warn:()=>Tr});function AO(e,t){let n=e[0].length;e.forEach((r,a)=>{M(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),M(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)M(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function xO(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var G1=30;function bO(e){return e<=G1?e:vh(e,Math.floor(Math.sqrt(e)))}function vO(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function wO(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function kO(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2==1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function IO(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function SO(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function CO(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var Kv=1.7580993408473768,Zv=1.0507009873554805,TO=.3275911,NO=.254829592,EO=-.284496736,RO=1.421413741,$O=-1.453152027,DO=1.061405429;function _O(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function FO(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function PO(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function OO(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function MO(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function zO(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function LO(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function BO(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var H1="->",WO=/->/g,Yv=",",Jv="...";function VO(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(WO,"").length)/H1.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${H1}").`);let[s,r]=e.split(H1);M(s.indexOf(Jv)===-1,()=>`The ellipsis notation ("${Jv}") is not supported yet.`);let a=s.split(Yv),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let p=0;p<r.length;++p){let h=r[p];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let p=0;p<s.length;++p){let h=s[p];i.indexOf(h)===-1&&h!==Yv&&i.push(h)}let l=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let h=0;h<a[p].length;++h)l[p].push(i.indexOf(a[p][h]))}let c=i.length,u=r.length,d=[];for(let p=u;p<c;++p)d.push(p);return{allDims:i,summedDims:d,idDims:l}}function UO(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function GO(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:M(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function HO(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=qO(t,i);for(let c of l)a.indexOf(c)===-1&&(s[o].push(c),a.push(c))}return{path:n,steps:s}}function jO(e){return e.every((t,n)=>t===n)}function qO(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function XO(e,t,n=0){let s=[];if(typeof t=="number")M(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);M(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}M(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}var Qv={};ze(Qv,{collectGatherOpShapeInfo:()=>YO,computeOutShape:()=>ZO,segOpComputeOptimalWindowSize:()=>KO});function KO(e,t){let n=!1,s;for(e<=G1?(s=e,n=!0):s=vh(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=vh(e,s+1);return s}function ZO(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function YO(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],l=1,c=1,u=1;for(let d=0;d<s;++d)i.push(e.shape[d]),l*=e.shape[d];for(let d=s;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=s;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:i}}function JO(e){try{return e.map(t=>sf(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function QO(e){return e.map(t=>pd(t))}var Zs={};ze(Zs,{nonMaxSuppressionV3Impl:()=>Bv,nonMaxSuppressionV4Impl:()=>Wv,nonMaxSuppressionV5Impl:()=>Vv,whereImpl:()=>Rv});var ew={kernelName:hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,Vu(de(n,"float32"),-1))}}},eM={kernelName:Kl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=vt(de(n,"float32")),r=Nn(Ae(Ee(1),s));return Ft(fe(e,r))}}}},tM={kernelName:Zl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Nn(Ae(vt(de(n,"float32")),1));return fe(e,s)}}}},nM={kernelName:Er,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Tt(n.shape,s.shape);return{a:()=>{let i=e,l=ln(n.shape,r);return l.length>0&&(i=Ie(i,l)),G(i,n.shape)},b:()=>{let i=e,l=ln(s.shape,r);return l.length>0&&(i=Ie(i,l)),G(i,s.shape)}}}},sM={kernelName:Ba,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},rM={kernelName:Wa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>tt(n)}}},aM={kernelName:Ql,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>tt(n)}}},oM={kernelName:eu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,Nn(Ae(Ee(1),vt(de(n,"float32")))))}}},iM={kernelName:tu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Nn(le(Ee(1),vt(de(n,"float32"))));return fe(e,s)}}}},lM={kernelName:ru,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Tt(n.shape,s.shape);return{a:()=>{let i=le(vt(n),vt(s)),l=B(e,fe(s,i)),c=ln(n.shape,r);return c.length>0&&(l=Ie(l,c)),G(l,n.shape)},b:()=>{let i=le(vt(n),vt(s)),l=Ft(B(e,fe(n,i))),c=ln(s.shape,r);return c.length>0&&(l=Ie(l,c)),G(l,s.shape)}}}},uM={kernelName:nu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,le(vt(de(n,"float32")),1))}}},cM={kernelName:su,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,Ae(Ee(1),vt(de(n,"float32"))))}}};function dM(e,t,n,s,r,a){let o=F(e,"dy","avgPool3dGrad"),i=F(t,"input","avgPool3dGrad"),l=o,c=i,u=!1;i.rank===4&&(u=!0,l=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),a!=null&&M(An(r),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let d={dy:l,input:c},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=W.runKernel(Ih,d,p);return u?G(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var pM=U({avgPool3dGrad_:dM}),hM={kernelName:Xc,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>pM(e,s,r,a,o,i)}}};function fM(e,t,n,s,r){let a=F(e,"dy","avgPoolGrad"),o=F(t,"input","avgPoolGrad");M(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,c=!1;o.rank===3&&(c=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=G(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),M(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let u={dy:l,input:i},d={filterSize:n,strides:s,pad:r},p=W.runKernel(kh,u,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var mM=U({avgPoolGrad_:fM}),gM={kernelName:Va,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>mM(e,s,r,a,o)}}},yM={kernelName:Ua,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>Xe(e,r,!1,!0),b:()=>Xe(s,e,!0,!1)}:!a&&o?{a:()=>Xe(e,r,!1,!1),b:()=>Xe(e,s,!0,!1)}:a&&!o?{a:()=>Xe(r,e,!1,!0),b:()=>Xe(s,e,!1,!1)}:{a:()=>Xe(r,e,!0,!0),b:()=>Xe(e,s,!0,!0)}}},AM={kernelName:fi,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>Dd(e,s,r)}}},xM={kernelName:J5,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>Ie(e,i,!0)}}},bM={kernelName:Ga,gradFunc:e=>({x:()=>e.clone()})},vM={kernelName:Zr,gradFunc:e=>({x:()=>tt(e)})},wM={kernelName:Yr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>zn(Ks(Fo(s,r),Po(s,a)),e,tt(e))}}},kM={kernelName:Zc,inputsToSave:["x"],gradFunc:ew.gradFunc},IM={kernelName:mi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=qs(r,t[0].shape)[0],o=s.map(l=>l[a]);return vn(e,o,a).map(l=>()=>l)}},SM={kernelName:Ha,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return M(_o(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>h1(s.shape,e,r,o,i,l),filter:()=>V1(s,e,r.shape,o,i,l)}}},CM={kernelName:ja,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>fa(e,r,a,o,i,1,l),filter:()=>V1(e,s,r.shape,a,o,i,l)}}};function TM(e,t,n,s,r){let a=e;e.rank===4&&(a=G(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),M(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),M(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),M(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),M(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return W.runKernel(Nh,i,l)}var NM=U({conv3DBackpropFilter_:TM}),EM={kernelName:Yc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;M(_o(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>cv(o.shape,e,i,r,a),filter:()=>NM(o,e,i.shape,r,a)}}},RM={kernelName:qa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(Ft(Rf(de(n,"float32"))),e)}}},$M={kernelName:Xa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B($f(de(n,"float32")),e)}}},DM={kernelName:gi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=wv([r],s.rank),l=Af(e,r,a,!o);return i!=null&&(l=et(l,i)),l}}}},_M={kernelName:Ka,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s==null?[1,1]:s;M(_o(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,c]=t;return M(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),M(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),M(_r(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),o!=null&&M(An(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`),{x:()=>Mv(l.shape,e,c,r,a,i,o),filter:()=>Ov(l,e,c.shape,r,a,i,o)}}},FM={kernelName:Jc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>W.runKernel(Fh,a,n),filter:()=>W.runKernel(Ph,o,n)}}},PM={kernelName:Ya,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>W.runKernel(Oh,s)}}},OM={kernelName:au,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=B(As(Ft(vt(n))),2/Math.sqrt(Math.PI));return{x:()=>B(e,s)}}},MM={kernelName:Jr,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,n)}}},zM={kernelName:xi,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>G(e,n.shape)}}},LM={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,As(n))}}},BM={kernelName:Qr,gradFunc:e=>({x:()=>tt(e)})},WM={kernelName:eo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Tt(n.shape,s.shape);return{a:()=>{let i=fe(e,de(s,"float32")),l=ln(n.shape,r);return l.length>0?G(Ie(i,l),n.shape):i},b:()=>{let i=B(e,de(n,"float32")),l=ln(s.shape,r);l.length>0&&(i=G(Ie(i,l),s.shape));let c=vt(s);return Ft(fe(i,de(c,"float32")))}}}},VM={kernelName:to,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i==null?Ee(1):i,c=ln(a.shape,r.shape),u=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)u.push(r.shape[b]);u.push(1)}let d=Ae(r,a),p=B(e,l),h=Nf(le(o,Ee(s))),f=B(B(B(h,h),h),Ee(-.5));return{x:()=>a.rank===1?G(B(B(e,_s(G(h,[1,1,1,a.shape[0]]),u)),l),r.shape):G(B(B(e,h),l),r.shape),mean:()=>{let b=B(B(h,Ee(-1)),p);return a.rank===1&&(b=Ie(b,c)),G(b,a.shape)},variance:()=>{let b=B(B(f,d),p);return a.rank===1&&(b=Ie(b,c)),G(b,a.shape)},scale:()=>{let b=B(d,h),w=B(e,b);return a.rank===1&&(w=Ie(w,c)),G(w,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=Ie(b,c)),G(b,a.shape)}}}},UM={kernelName:vi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=qs(a,s.shape)[0];return{x:()=>{let l=s.shape,c=r.size,u=l.slice(0,o),d=u.length,p=l.slice(a,l.length).slice(1),h=p.length,f=tw(0,d),m=tw(d+1,d+1+h),g=nw([u,[c],p]),y=G(e,g),A=G(r,[c]),x=nw([[d],f,m]),b=et(y,x),w=z1(b,A,s.shape[o]),k=I1(x);return w=et(w,k),w},indices:()=>r}}};function tw(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function nw(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var GM={kernelName:ea,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>tt(n),b:()=>tt(s)}}},HM={kernelName:so,gradFunc:e=>({x:()=>de(e,"float32")})},jM={kernelName:iu,gradFunc:e=>({x:()=>tt(e)})},qM={kernelName:lu,gradFunc:e=>({x:()=>tt(e)})},XM={kernelName:uu,gradFunc:e=>({x:()=>tt(e)})},KM={kernelName:ki,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=us(s,0);return{x:()=>zn(a,e,B(e,r))}}},ZM={kernelName:cu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,le(n,1))}}},YM={kernelName:ta,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,de(n,"float32"))}}},JM={kernelName:Q5,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let a=!0,o=As(s);return Ae(e,B(Ie(e,r,a),o))}}}};function QM(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return W.runKernel(Bh,i,l)}var ez=U({localResponseNormalizationBackprop_:QM}),tz={kernelName:nd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>ez(s,r,e,a,o,i,l)}}};function sw(e,t,n,s){return t.rank<n.rank&&(t=G(t,al(t.shape,s))),e.rank<n.rank&&(e=G(e,al(e.shape,s))),{x:()=>B(e,de(ys(n,t),e.dtype))}}var rw={kernelName:oo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=qs(r,a.shape),l=sw(e,o,a,i);return{x:()=>l.x()}}},nz={kernelName:na,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>B(e,de(Fo(n,s),"float32")),b:()=>B(e,de(bf(n,s),"float32"))}}};function sz(e,t,n,s,r,a,o){let i=F(e,"dy","maxPool3dGrad"),l=F(t,"input","maxPool3dGrad"),c=F(n,"output","maxPool3dGrad"),u=i,d=l,p=c,h=!1;l.rank===4&&(h=!0,u=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=G(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=G(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),M(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),M(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),M(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),o!=null&&M(An(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let f={dy:u,input:d,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=W.runKernel(Vh,f,m);return h?G(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var rz=U({maxPool3dGrad_:sz}),az={kernelName:sd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>rz(e,s,r,a,o,i,l)}}};function oz(e,t,n,s,r,a,o){let i=F(e,"dy","maxPoolGrad"),l=F(t,"input","maxPoolGrad"),c=F(n,"output","maxPoolGrad");M(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),M(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),M(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),o!=null&&M(An(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let u={dy:i,input:l,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return W.runKernel(Wh,u,d)}var iz=U({maxPoolGrad_:oz}),lz={kernelName:io,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>iz(e,s,r,a,o,i)}}},uz={kernelName:lo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=qs(r,s.shape),i=vv(s.shape,a)[1],l=Ht(i);return{x:()=>{let u=s.shape.slice();a.forEach(h=>{u[h]=1});let d=G(e,u);return fe(B(d,bs(s.shape,"float32")),l)}}}},cz={kernelName:uo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=qs(r,a.shape),l=sw(e,o,a,i);return{x:()=>l.x()}}},dz={kernelName:sa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>B(e,de(Po(n,s),"float32")),b:()=>B(e,de(us(n,s),"float32"))}}},pz={kernelName:co,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>De(e,a,s.shape)}}},hz={kernelName:pu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Tt(n.shape,s.shape);return{a:()=>{let i=ln(n.shape,r);return i.length>0?G(Ie(e,i),n.shape):e},b:()=>{let i=B(e,Ft(Ou(fe(n,s)))),l=ln(s.shape,r);return l.length>0?G(Ie(i,l),s.shape):i}}}},fz={kernelName:ra,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Tt(n.shape,s.shape);return{a:()=>{let i=B(e,de(s,"float32")),l=ln(n.shape,r);return l.length>0?G(Ie(i,l),n.shape):i},b:()=>{let i=B(e,de(n,"float32")),l=ln(s.shape,r);return l.length>0?G(Ie(i,l),s.shape):i}}}},mz={kernelName:Si,gradFunc:e=>({x:()=>Ft(e)})},gz={kernelName:Ei,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Kt(n.shape,"float32")}}},yz={kernelName:Ni,gradFunc:e=>({x:()=>tt(e)})},Az={kernelName:Ri,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return Hn(e,s).map(a=>()=>a)}},aw={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>De(e,a,s.shape)}}},xz={kernelName:fo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=Tt(a.shape,o.shape);return{a:()=>{let u=de(o,"float32"),d=B(e,B(u,ma(a,Ae(u,Ee(1))))),p=ln(a.shape,i);return p.length>0&&(d=Ie(d,p)),G(d,a.shape)},b:()=>{let u=us(a,0),d=zn(u,xs(a),tt(a)),p=B(e,B(r,d)),h=ln(o.shape,i);return h.length>0&&(p=Ie(p,h)),G(p,o.shape)}}}},bz={kernelName:mo,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=us(n,0);return{x:()=>zn(r,e,B(e,s)),alpha:()=>{let a=zn(r,tt(e),B(e,n)),o=ln(s.shape,e.shape);return o.length>0&&(a=Ie(a,o)),G(a,s.shape)}}}},vz={kernelName:Za,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Tt(n.shape,s.shape);return{a:()=>{let i=fe(e,de(s,"float32")),l=ln(n.shape,r);return l.length>0?G(Ie(i,l),n.shape):i},b:()=>{let i=B(e,de(n,"float32")),l=ln(s.shape,r);l.length>0&&(i=G(Ie(i,l),s.shape));let c=vt(s);return Ft(fe(i,de(c,"float32")))}}}},wz={kernelName:mu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,Ft(vt(n)))}}},kz={kernelName:Ao,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=B(Po(n,6),Vu(n));return{x:()=>B(e,de(s,"float32"))}}},Iz={kernelName:go,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,de(Vu(n),"float32"))}}},Sz={kernelName:Di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>G(e,n.shape)}}},Cz={kernelName:yo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>W.runKernel(jh,r,n)}}},Tz={kernelName:gu,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>W.runKernel(Hh,r,n)}}},Nz={kernelName:_i,gradFunc:(e,t,n)=>{let{dims:s}=n,r=qs(s,e.shape);return{x:()=>ws(e,r)}}},Ez={kernelName:Fi,gradFunc:e=>({x:()=>tt(e)})},Rz={kernelName:aa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ft(fe(e,B(ma(n,1.5),2)))}}},$z={kernelName:Oi,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>de(tt(n),"float32"),t:()=>B(e,de(n,e.dtype)),e:()=>B(e,de(Ed(n),e.dtype))}}},Dz={kernelName:yu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=us(n,Ee(0)),r=Ee(Kv),a=Ee(Zv),o=B(e,a),i=B(B(e,r),As(de(n,"float32")));return zn(s,o,i)}}}},_z={kernelName:oa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,B(n,Ae(Ee(1),n)))}}},Fz={kernelName:Au,gradFunc:e=>({x:()=>tt(e)})},Pz={kernelName:xo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(Cd(de(n,"float32")),e)}}},Oz={kernelName:zi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(yf(de(n,"float32")),e)}}},Mz={kernelName:Mi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=q3(s,r,a),c=[];for(let u=0;u<e.rank;u++)c.push([i[u],o[u]-i[u]-l[u]]);return{x:()=>Fs(e,c)}}},zz={kernelName:vo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=B(e,s);return{logits:()=>Ae(o,B(Ie(o,[r],a),s))}}},Lz={kernelName:xu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,is(n))}}},ow={kernelName:Li,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>Sd(e,s,r)}}},iw={kernelName:Bi,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>kt(e,s)}}},Bz={kernelName:ia,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,B(Nn(de(n,"float32")),2))}}},Wz={kernelName:bu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(e,B(de(n,"float32"),2))}}},Vz={kernelName:la,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ee(2);return{a:()=>B(e,B(r,Ae(n,s))),b:()=>B(e,B(r,Ae(s,n)))}}},Uz={kernelName:Io,gradFunc:e=>({x:()=>tt(e)})},Gz={kernelName:ua,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Tt(n.shape,s.shape);return{a:()=>{let i=e,l=ln(n.shape,r);return l.length>0&&(i=Ie(i,l)),G(i,n.shape)},b:()=>{let i=e,l=ln(s.shape,r);return l.length>0&&(i=Ie(i,l)),G(Ft(i),s.shape)}}}},Hz={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;qs(a,s.shape).forEach(c=>{r[c]=1});let i=G(e,r),l=B(i,bs(s.shape,"float32"));return{x:()=>l}}},jz={kernelName:Vi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,vt(Cd(n)))}}},qz={kernelName:wo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>B(Ae(Ee(1),vt(n)),e)}}},Xz={kernelName:ca,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=tt(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=le(o,De(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=le(o,De(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)o=le(o,De(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)o=le(o,De(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},Kz={kernelName:ko,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=I1(r);return{x:()=>et(e,a)}}},Zz={kernelName:Gi,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>En(e,r)}}},Yz={kernelName:id,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Jz(e,n)}}};function Jz(e,t){let n=Pr(t,tt(t)),s=sl(e,n),r=Fo(t,Ee(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=Xt(r,i+1);r=Ks(r,bs(s.shape,"bool"));let o=tt(s);return zn(r,s,o)}var Qz={kernelName:Hi,gradFunc:e=>({x:()=>tt(e)})},eL=[ew,eM,tM,nM,sM,rM,aM,oM,iM,lM,uM,cM,hM,gM,yM,AM,xM,bM,vM,wM,kM,IM,CM,SM,EM,RM,$M,DM,_M,FM,vz,PM,OM,MM,zM,LM,WM,BM,VM,UM,GM,HM,jM,qM,XM,KM,ZM,YM,JM,tz,rw,rw,nz,az,lz,uz,cz,dz,pz,hz,fz,mz,gz,yz,Az,aw,aw,xz,bz,wz,kz,Iz,Sz,Cz,Tz,Nz,Ez,Rz,$z,Dz,_z,Fz,Pz,Oz,Mz,zz,Lz,ow,ow,iw,iw,Bz,Vz,Wz,Uz,Gz,Hz,jz,qz,Xz,Kz,Zz,Yz,Qz];for(let e of eL)e3(e);ae().prototype.abs=function(){return this.throwIfDisposed(),en(this)};ae().prototype.acos=function(){return this.throwIfDisposed(),e1(this)};ae().prototype.acosh=function(){return this.throwIfDisposed(),t1(this)};ae().prototype.add=function(e){return this.throwIfDisposed(),le(this,e)};ae().prototype.all=function(e,t){return this.throwIfDisposed(),hf(this,e,t)};ae().prototype.any=function(e,t){return this.throwIfDisposed(),wd(this,e,t)};ae().prototype.argMax=function(e){return this.throwIfDisposed(),Ds(this,e)};ae().prototype.argMin=function(e){return this.throwIfDisposed(),n1(this,e)};ae().prototype.asScalar=function(){return this.throwIfDisposed(),M(this.size===1,()=>"The array must have only 1 element."),G(this,[])};ae().prototype.asType=function(e){return this.throwIfDisposed(),de(this,e)};ae().prototype.as1D=function(){return this.throwIfDisposed(),G(this,[this.size])};ae().prototype.as2D=function(e,t){return this.throwIfDisposed(),G(this,[e,t])};ae().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),G(this,[e,t,n])};ae().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),G(this,[e,t,n,s])};ae().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),G(this,[e,t,n,s,r])};ae().prototype.asin=function(){return this.throwIfDisposed(),s1(this)};ae().prototype.asinh=function(){return this.throwIfDisposed(),r1(this)};ae().prototype.atan=function(){return this.throwIfDisposed(),a1(this)};ae().prototype.atan2=function(e){return this.throwIfDisposed(),o1(this,e)};ae().prototype.atanh=function(){return this.throwIfDisposed(),i1(this)};ae().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),Id(this,e,t,n,s)};ae().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Sd(this,e,t)};ae().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),nl(this,e,t,n,s,r)};ae().prototype.broadcastTo=function(e){return this.throwIfDisposed(),$u(this,e)};ae().prototype.cast=function(e){return this.throwIfDisposed(),de(this,e)};ae().prototype.ceil=function(){return this.throwIfDisposed(),p1(this)};ae().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ls(this,e,t)};ae().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ze&&(e=[e]),kt([this,...e],t)};ae().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),mf(this,e,t,n,s,r,a)};ae().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),gf(this,e,t,n,s,r)};ae().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),fa(this,e,t,n,s,r,a)};ae().prototype.cos=function(){return this.throwIfDisposed(),Cd(this)};ae().prototype.cosh=function(){return this.throwIfDisposed(),yf(this)};ae().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Af(this,e,t,n)};ae().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),m1(this,e,t)};ae().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),_u(this,e,t,n,s,r,a)};ae().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),g1(this,e,t,n,s,r)};ae().prototype.divNoNan=function(e){return this.throwIfDisposed(),y1(this,e)};ae().prototype.div=function(e){return this.throwIfDisposed(),fe(this,e)};ae().prototype.dot=function(e){return this.throwIfDisposed(),hv(this,e)};ae().prototype.elu=function(){return this.throwIfDisposed(),Fu(this)};ae().prototype.equal=function(e){return this.throwIfDisposed(),ys(this,e)};ae().prototype.erf=function(){return this.throwIfDisposed(),A1(this)};ae().prototype.exp=function(){return this.throwIfDisposed(),As(this)};ae().prototype.expandDims=function(e){return this.throwIfDisposed(),Xt(this,e)};ae().prototype.expm1=function(){return this.throwIfDisposed(),x1(this)};ae().prototype.fft=function(){return this.throwIfDisposed(),Od(this)};ae().prototype.flatten=function(){return this.throwIfDisposed(),G(this,[this.size])};ae().prototype.floor=function(){return this.throwIfDisposed(),Ou(this)};ae().prototype.floorDiv=function(e){return this.throwIfDisposed(),df(this,e)};ae().prototype.gather=function(e,t){return this.throwIfDisposed(),sl(this,e,t)};ae().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Fo(this,e)};ae().prototype.greater=function(e){return this.throwIfDisposed(),us(this,e)};ae().prototype.ifft=function(){return this.throwIfDisposed(),Wu(this)};ae().prototype.irfft=function(){return this.throwIfDisposed(),_f(this)};ae().prototype.isFinite=function(){return this.throwIfDisposed(),mv(this)};ae().prototype.isInf=function(){return this.throwIfDisposed(),gv(this)};ae().prototype.isNaN=function(){return this.throwIfDisposed(),v1(this)};ae().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Td(this,e)};ae().prototype.lessEqual=function(e){return this.throwIfDisposed(),Po(this,e)};ae().prototype.less=function(e){return this.throwIfDisposed(),bf(this,e)};ae().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),w1(this,e,t,n,s)};ae().prototype.logSigmoid=function(){return this.throwIfDisposed(),xv(this)};ae().prototype.logSoftmax=function(e){return this.throwIfDisposed(),wf(this,e)};ae().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),S1(this,e,t)};ae().prototype.log=function(){return this.throwIfDisposed(),xs(this)};ae().prototype.log1p=function(){return this.throwIfDisposed(),Nd(this)};ae().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ks(this,e)};ae().prototype.logicalNot=function(){return this.throwIfDisposed(),Ed(this)};ae().prototype.logicalOr=function(e){return this.throwIfDisposed(),kf(this,e)};ae().prototype.logicalXor=function(e){return this.throwIfDisposed(),kv(this,e)};ae().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Xe(this,e,t,n)};ae().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),Rd(this,e,t,n,s)};ae().prototype.max=function(e,t){return this.throwIfDisposed(),Gn(this,e,t)};ae().prototype.maximum=function(e){return this.throwIfDisposed(),Pr(this,e)};ae().prototype.mean=function(e,t){return this.throwIfDisposed(),Bt(this,e,t)};ae().prototype.min=function(e,t){return this.throwIfDisposed(),$d(this,e,t)};ae().prototype.minimum=function(e){return this.throwIfDisposed(),Mu(this,e)};ae().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),T1(this,e,t)};ae().prototype.mod=function(e){return this.throwIfDisposed(),N1(this,e)};ae().prototype.mul=function(e){return this.throwIfDisposed(),B(this,e)};ae().prototype.neg=function(){return this.throwIfDisposed(),Ft(this)};ae().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Mf(this,e,t,n)};ae().prototype.notEqual=function(e){return this.throwIfDisposed(),ol(this,e)};ae().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Nu(this,e,t,n)};ae().prototype.onesLike=function(){return this.throwIfDisposed(),vs(this)};ae().prototype.pad=function(e,t){return this.throwIfDisposed(),Fs(this,e,t)};ae().prototype.pool=function(e,t,n,s,r){return this.throwIfDisposed(),Cv(this,e,t,n,s,r)};ae().prototype.pow=function(e){return this.throwIfDisposed(),ma(this,e)};ae().prototype.prelu=function(e){return this.throwIfDisposed(),_d(this,e)};ae().prototype.prod=function(e,t){return this.throwIfDisposed(),Sf(this,e,t)};ae().prototype.reciprocal=function(){return this.throwIfDisposed(),$1(this)};ae().prototype.relu=function(){return this.throwIfDisposed(),pr(this)};ae().prototype.relu6=function(){return this.throwIfDisposed(),Cf(this)};ae().prototype.reshapeAs=function(e){return this.throwIfDisposed(),G(this,e.shape)};ae().prototype.reshape=function(e){return this.throwIfDisposed(),G(this,e)};ae().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Gv(this,e,t,n)};ae().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Hv(this,e,t,n)};ae().prototype.reverse=function(e){return this.throwIfDisposed(),ws(this,e)};ae().prototype.rfft=function(){return this.throwIfDisposed(),Md(this)};ae().prototype.round=function(){return this.throwIfDisposed(),Tf(this)};ae().prototype.rsqrt=function(){return this.throwIfDisposed(),Nf(this)};ae().prototype.selu=function(){return this.throwIfDisposed(),Ef(this)};ae().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),D1(this,e,t,n,s,r,a)};ae().prototype.sigmoid=function(){return this.throwIfDisposed(),is(this)};ae().prototype.sign=function(){return this.throwIfDisposed(),_1(this)};ae().prototype.sin=function(){return this.throwIfDisposed(),Rf(this)};ae().prototype.sinh=function(){return this.throwIfDisposed(),$f(this)};ae().prototype.slice=function(e,t){return this.throwIfDisposed(),De(this,e,t)};ae().prototype.softmax=function(e){return this.throwIfDisposed(),il(this,e)};ae().prototype.softplus=function(){return this.throwIfDisposed(),rl(this)};ae().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Dd(this,e,t)};ae().prototype.split=function(e,t){return this.throwIfDisposed(),vn(this,e,t)};ae().prototype.sqrt=function(){return this.throwIfDisposed(),Nn(this)};ae().prototype.square=function(){return this.throwIfDisposed(),vt(this)};ae().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Ff(this,e)};ae().prototype.squeeze=function(e){return this.throwIfDisposed(),dt(this,e)};ae().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ze?[this,e]:[this,...e];return En(n,t)};ae().prototype.step=function(e){return this.throwIfDisposed(),Vu(this,e)};ae().prototype.stridedSlice=function(e,t,n,s,r,a,o,i){return this.throwIfDisposed(),P1(this,e,t,n,s,r,a,o,i)};ae().prototype.sub=function(e){return this.throwIfDisposed(),Ae(this,e)};ae().prototype.sum=function(e,t){return this.throwIfDisposed(),Ie(this,e,t)};ae().prototype.tan=function(){return this.throwIfDisposed(),O1(this)};ae().prototype.tanh=function(){return this.throwIfDisposed(),tl(this)};ae().prototype.tile=function(e){return this.throwIfDisposed(),_s(this,e)};ae().prototype.toBool=function(){return this.throwIfDisposed(),de(this,"bool")};ae().prototype.toFloat=function(){return this.throwIfDisposed(),de(this,"float32")};ae().prototype.toInt=function(){return this.throwIfDisposed(),de(this,"int32")};ae().prototype.topk=function(e,t){return this.throwIfDisposed(),M1(this,e,t)};ae().prototype.transpose=function(e){return this.throwIfDisposed(),et(this,e)};ae().prototype.unique=function(e){return this.throwIfDisposed(),Of(this,e)};ae().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),z1(this,e,t)};ae().prototype.unstack=function(e){return this.throwIfDisposed(),Hn(this,e)};ae().prototype.where=function(e,t){return this.throwIfDisposed(),zn(e,this,t)};ae().prototype.zerosLike=function(){return this.throwIfDisposed(),tt(this)};var lw={};ze(lw,{maxNorm:()=>rL,minMaxNorm:()=>iL,nonNeg:()=>oL,unitNorm:()=>aL});var j1;function un(){return j1==null&&(j1=Dr().epsilon()),j1}function fr(){return"channelsLast"}var Aa=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Aa.prototype)}},mr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,mr.prototype)}},q=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,q.prototype)}},Ve=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Ve.prototype)}},uw=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,uw.prototype)}};function cl(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Or(e,t){if(!e)throw new uw(t)}function cw(e,t){let n=0;for(let s of e)s===t&&n++;return n}function cs(e){return e.length===1?e[0]:e}function Nt(e){return Array.isArray(e)?e:[e]}function xa(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function dl(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Ys={};function q1(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function X1(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>X1(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:X1(s))}}}function Bd(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in Ys)o=Ys[a];else if(o=t[a],o==null)throw new q(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new q(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in Ys?[i,l]=Ys.className:o in t&&([i,l]=t[o]),i==null)throw new q(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let h of Object.keys(Ys))c[h]=Ys[h];for(let h of Object.keys(n))c[h]=n[h];let u=a.config;u.customObjects=c;let d=Object.assign({},Ys);for(let h of Object.keys(n))Ys[h]=n[h];X1(a.config);let p=l(i,a.config,n,r);return Ys=Object.assign({},d),p}else{let c=Object.assign({},Ys);for(let d of Object.keys(n))Ys[d]=n[d];let u=new i(a.config);return Ys=Object.assign({},c),u}}}function tL(e,t){return e<t?-1:e>t?1:0}function Kf(e,t){return-1*tL(e,t)}function Mo(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function nL(e){if(e==null)throw new q(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function pl(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new q(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function K1(e,t,n=0,s=1/0){return Or(n>=0),Or(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function wn(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>wn(n,`element ${s+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${dw(e)}.`)}function dw(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>dw(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function sL(e,t,n){let s=n!=null?n():v.now(),r;return(...o)=>{let i=n!=null?n():v.now();return i-s<t||(s=i,r=e(...o)),r}}function pw(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function Z1(e,t){return j(()=>Nn(Ie(B(e,e),t,!0)))}var Wd=class extends ue.Serializable{getConfig(){return{}}},Y1=class extends Wd{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return j(()=>{let t=Z1(e,this.axis),n=ls(t,0,this.maxValue);return B(e,fe(n,le(un(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Y1.className="MaxNorm";ue.registerClass(Y1);var J1=class extends Wd{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return j(()=>fe(e,le(un(),Z1(e,this.axis))))}getConfig(){return{axis:this.axis}}};J1.className="UnitNorm";ue.registerClass(J1);var Q1=class extends Wd{apply(e){return pr(e)}};Q1.className="NonNeg";ue.registerClass(Q1);var ey=class extends Wd{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return j(()=>{let t=Z1(e,this.axis),n=le(B(this.rate,ls(t,this.minValue,this.maxValue)),B(1-this.rate,t));return B(e,fe(n,le(un(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};ey.className="MinMaxNorm";ue.registerClass(ey);var hw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function cn(e){return q1(e)}function fw(e,t={}){return Bd(e,ue.SerializationMap.getMap().classNameMap,t,"constraint")}function dn(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in hw?hw[e]:e,config:{}};return fw(n)}else return e instanceof Wd?e:fw(e)}function rL(e){return new Y1(e)}function aL(e){return new J1(e)}function oL(){return new Q1}function iL(e){return new ey(e)}var mw={};ze(mw,{constant:()=>RL,glorotNormal:()=>ML,glorotUniform:()=>OL,heNormal:()=>zL,heUniform:()=>LL,identity:()=>FL,leCunNormal:()=>BL,leCunUniform:()=>WL,ones:()=>EL,orthogonal:()=>VL,randomNormal:()=>DL,randomUniform:()=>$L,truncatedNormal:()=>_L,varianceScaling:()=>PL,zeros:()=>NL});var lL=["channelsFirst","channelsLast"],uL=["nearest","bilinear"],cL=["valid","same","causal"],dL=["max","avg"],pL=["sum","mul","concat","ave"],Gu=new Map;function Zt(e){pl(lL,"DataFormat",e)}function hL(e){pl(uL,"InterpolationFormat",e)}function Ps(e){pl(cL,"PaddingMode",e)}function gw(e){pl(dL,"PoolMode",e)}var Vd=[],yw="/";function hl(e,t){Vd.push(e);try{let n=t();return Vd.pop(),n}catch(n){throw Vd.pop(),n}}function fL(){return Vd.length===0?"":Vd.join(yw)+yw}function Aw(e){if(!bw(e))throw new Error("Not a valid tensor name: '"+e+"'");return fL()+e}function xw(e){if(!bw(e))throw new Error("Not a valid tensor name: '"+e+"'");Gu.has(e)||Gu.set(e,0);let t=Gu.get(e);if(Gu.set(e,Gu.get(e)+1),t>0){let n=`${e}_${t}`;return Gu.set(n,1),n}else return e}var mL=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function bw(e){return!!e.match(mL)}function gL(e){return e===parseInt(e.toString(),10)}function zo(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Hu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function Lo(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function gr(e,t){if(t<e)throw new q(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Zf(e,t){return de(e,t)}function Ud(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),G(e,n)}function yL(e,t){return j(()=>{if(e.shape.length!==2)throw new q(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Ud(e,1);return sy(n,[1,t,1])})}function AL(e){let t=[zo(e.shape)];return G(e,t)}function xL(e){if(e.rank<=1)throw new q(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],zo(e.shape,1)];return G(e,t)}function fl(e,t,n){return j(()=>{switch(e.rank){case 1:return Df(e,t,n);case 2:return F1(e,[t,0],[n,e.shape[1]]);case 3:return Bu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Pd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return De(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return De(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new q(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function ty(e,t,n){return j(()=>{switch(e.rank){case 1:return Df(e,t,n);case 2:return F1(e,[0,t],[e.shape[0],n]);case 3:return Bu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Pd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Yf(e,t,n,s){return j(()=>{switch(e.rank){case 1:return Df(e,t,n);case 2:switch(s){case 1:return fl(e,t,n);case 2:return ty(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return fl(e,t,n);case 2:return Bu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ty(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return fl(e,t,n);case 2:return Pd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Pd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ty(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function ny(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),kt(e,t)}function vw(e,t){switch(e.rank){case 1:return iv([e,t]);case 2:return Du([e,t],0);case 3:return lv([e,t],0);case 4:return uv([e,t],0);default:throw new q(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function sy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new q(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return _s(e,t)}function Jf(e,t=0,n=1,s,r){return Tv(e,t,n,s,r)}function Mr(e,t,n,s){if(e.rank<2||t.rank<2)throw new Ve(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Ve(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let r=!1,a=!1;return Oo.matMul({a:e,b:t,transposeA:r,transposeB:a,bias:s?ry(e.rank,s,fr()):null,activation:n})}else{let r=e.shape.slice(),a=r.pop();e=G(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),c=[...o,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=G(et(t,u),[l,-1]);let d=[...r,...c],p=!1,h=!1;return G(Oo.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:s?ry(e.rank,s,fr()):null,activation:n}),d)}}function ww(e,t,n){return j(()=>(Array.isArray(t)?t=tn(t,"int32"):t=de(t,"int32"),sl(e,t,n)))}function Gd(e){return B(e,e)}function ry(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new q(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?G(t,[1,s[0],1,1,1]):G(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?G(t,[1,1,1,1,s[0]]):G(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?G(t,[1,s[0],1,1]):G(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?G(t,[1,1,1,s[0]]):G(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?G(t,[1,s[0],1]):G(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?G(t,[1,1,s[0]]):G(t,[1].concat(s))}else if(e<3)return t;throw new q(`Unsupported input rank by biasAdd: ${t.rank}`)}function yr(e,t,n){return j(()=>(n==null&&(n=fr()),Zt(n),le(e,ry(e.rank,t,n))))}function bL(e,t=1){if(t!==1)throw new Ve(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Fu(e)}function vL(e){return j(()=>fe(e,le(en(e),1)))}function kw(e,t,n,s){return j(()=>Fv(e,t,n,s))}function wL(e){return j(()=>{let t=le(.5,B(.2,e));return ls(t,0,1)})}function Hd(e,t,n=!1){return n?e():t()}var kL=["fanIn","fanOut","fanAvg"],IL=["normal","uniform","truncatedNormal"];function SL(e){pl(kL,"FanMode",e)}function CL(e){pl(IL,"Distribution",e)}var Js=class extends ue.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},ay=class extends Js{apply(e,t){return Kt(e,t)}};ay.className="Zeros";ue.registerClass(ay);var Qf=class extends Js{apply(e,t){return bs(e,t)}};Qf.className="Ones";ue.registerClass(Qf);var oy=class extends Js{constructor(e){super();if(typeof e!="object")throw new q(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new q(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return j(()=>B(Ee(this.value),bs(e,t)))}getConfig(){return{value:this.value}}};oy.className="Constant";ue.registerClass(oy);var iy=class extends Js{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return zu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};iy.className="RandomUniform";ue.registerClass(iy);var ly=class extends Js{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ve(`randomNormal does not support dType ${t}.`);return Jf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};ly.className="RandomNormal";ue.registerClass(ly);var uy=class extends Js{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ve(`truncatedNormal does not support dType ${t}.`);return Pf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};uy.className="TruncatedNormal";ue.registerClass(uy);var cy=class extends Js{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return j(()=>{if(e.length!==2||e[0]!==e[1])throw new q("Identity matrix initializer can only be used for 2D square matrices.");return B(this.gain,b1(e[0]))})}getConfig(){return{gain:this.gain}}};cy.className="Identity";ue.registerClass(cy);function TL(e,t="channelsLast"){let n,s;if(Zt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=zo(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=zo(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=zo(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var ds=class extends Js{constructor(e){super();if(e.scale<0)throw new q(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,SL(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,CL(this.distribution),this.seed=e.seed}apply(e,t){let n=TL(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ve(`${this.getClassName()} does not support dType ${t}.`);return Pf(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return zu(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};ds.className="VarianceScaling";ue.registerClass(ds);var em=class extends ds{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ds.className}};em.className="GlorotUniform";ue.registerClass(em);var tm=class extends ds{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ds.className}};tm.className="GlorotNormal";ue.registerClass(tm);var nm=class extends ds{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ds.className}};nm.className="HeNormal";ue.registerClass(nm);var sm=class extends ds{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ds.className}};sm.className="HeUniform";ue.registerClass(sm);var rm=class extends ds{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ds.className}};rm.className="LeCunNormal";ue.registerClass(rm);var am=class extends ds{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ds.className}};am.className="LeCunNormal";ue.registerClass(am);var dy=class extends Js{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Ve("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return j(()=>{if(e.length<2)throw new Ve("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=Jf(n,0,1,"float32"),r=qv.gramSchmidt(s);return e[0]>e[1]&&(r=et(r)),B(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};dy.className="Orthogonal";ue.registerClass(dy);var Iw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Sw(e,t={}){return Bd(e,ue.SerializationMap.getMap().classNameMap,t,"initializer")}function Wt(e){return q1(e)}function Pt(e){if(typeof e=="string"){let t=e in Iw?Iw[e]:e;if(t==="GlorotNormal")return new tm;if(t==="GlorotUniform")return new em;if(t==="HeNormal")return new nm;if(t==="HeUniform")return new sm;if(t==="LeCunNormal")return new rm;if(t==="LeCunUniform")return new am;{let n={};return n.className=t,n.config={},Sw(n)}}else return e instanceof Js?e:Sw(e)}function NL(){return new ay}function EL(){return new Qf}function RL(e){return new oy(e)}function $L(e){return new iy(e)}function DL(e){return new ly(e)}function _L(e){return new uy(e)}function FL(e){return new cy(e)}function PL(e){return new ds(e)}function OL(e){return new em(e)}function ML(e){return new tm(e)}function zL(e){return new nm(e)}function LL(e){return new sm(e)}function BL(e){return new rm(e)}function WL(e){return new am(e)}function VL(e){return new dy(e)}var Cw={};ze(Cw,{Layer:()=>rt,RNN:()=>Br,RNNCell:()=>ep,activation:()=>IW,add:()=>_W,alphaDropout:()=>gV,average:()=>FW,averagePooling1d:()=>EA,averagePooling2d:()=>RA,averagePooling3d:()=>$A,avgPool1d:()=>UW,avgPool2d:()=>HW,avgPool3d:()=>qW,avgPooling1d:()=>GW,avgPooling2d:()=>jW,avgPooling3d:()=>XW,batchNormalization:()=>BW,bidirectional:()=>lV,concatenate:()=>PW,conv1d:()=>mW,conv2d:()=>gW,conv2dTranspose:()=>yW,conv3d:()=>AW,conv3dTranspose:()=>xW,convLstm2d:()=>rV,convLstm2dCell:()=>aV,cropping2D:()=>vW,dense:()=>SW,depthwiseConv2d:()=>kW,dot:()=>LW,dropout:()=>CW,elu:()=>uW,embedding:()=>DW,flatten:()=>NW,gaussianDropout:()=>mV,gaussianNoise:()=>fV,globalAveragePooling1d:()=>KW,globalAveragePooling2d:()=>ZW,globalMaxPool1d:()=>cV,globalMaxPool2d:()=>dV,globalMaxPooling1d:()=>Pk,globalMaxPooling2d:()=>Ok,gru:()=>JW,gruCell:()=>QW,input:()=>ak,inputLayer:()=>lW,layerNormalization:()=>WW,leakyReLU:()=>dW,lstm:()=>eV,lstmCell:()=>tV,masking:()=>yV,maxPool1d:()=>pV,maxPool2d:()=>hV,maxPooling1d:()=>Mk,maxPooling2d:()=>zk,maxPooling3d:()=>YW,maximum:()=>OW,minimum:()=>MW,multiply:()=>zW,permute:()=>$W,prelu:()=>pW,reLU:()=>cW,repeatVector:()=>EW,reshape:()=>RW,rnn:()=>oV,separableConv2d:()=>bW,simpleRNN:()=>nV,simpleRNNCell:()=>sV,softmax:()=>hW,spatialDropout1d:()=>TW,stackedRNNCells:()=>iV,thresholdedReLU:()=>fW,timeDistributed:()=>uV,upSampling2d:()=>wW,zeroPadding2d:()=>VW});var UL=0;function Tw(){return UL++}var om={};function im(e=""){return e in om||(om[e]=0),om[e]+=1,e+om[e].toString()}function py(e){return Array.isArray(e)&&Array.isArray(e[0])}function lm(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ue(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new q(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function At(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new q(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function um(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var Nw="Variable",Ew=class{constructor(e,t="float32",n=Nw,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=Tw(),n=n==null?Nw:n,this.originalName=Aw(n),this.name=xw(this.originalName),this.trainable_=s,this.constraint=r,this.val=Ev(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),GL(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function GL(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function hy(e){return e.map(t=>t.read())}function fy(e){e.forEach(t=>{t[0].write(t[1])})}var nn=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Ar=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=Tw(),a!=null&&(this.originalName=Aw(a),this.name=xw(this.originalName)),this.rank=t.length}},HL=0,cm=class{constructor(e,t){this.callArgs=t,this.id=HL++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},jL=0,rt=class extends ue.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=jL++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=xa(n)+"_"+im(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new mr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new q(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return cs(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return cs(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Aa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Aa(`Layer ${this.name} is not connected, no input to return.`);return cs(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Aa(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Aa(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return cs(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Nt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=Nt(this.inputSpec);if(e.length!==t.length)throw new q(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new q(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),c=r.axes[i],u=l>=0?o[l]:o[o.length+l];if(c!=null&&[c,null].indexOf(u)===-1)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=Nt(e),s=!0;for(let a of n)if(!(a instanceof Ar)){s=!1;break}let r=!0;for(let a of n)if(a instanceof Ar){r=!1;break}if(s===r)throw new q("Arguments to apply() must be all SymbolicTensors or all Tensors");return hl(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of Nt(e))a.push(o.shape);this.build(cs(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=Nt(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=cs(i),this.activityRegularizer!=null)throw new Ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=qL(e),o=this.computeOutputShape(a),i,l=XL(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((c,u)=>new Ar(l,c,this,Nt(e),t,this.name,u)):i=new Ar(l,o,this,Nt(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Aa(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Aa(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new mr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return um(this.weights)}build(e){this.built=!0}getWeights(e=!1){return hy(e?this.trainableWeights:this.weights)}setWeights(e){j(()=>{let t=this.weights;if(t.length!==e.length)throw new q(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=hy(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!v.arraysEqual(a.shape,i.shape))throw new q(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}fy(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new q(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():Pt("zeros"));let l=s.apply(t,n),c=new Ew(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Nt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=Nt(e);t=Nt(t),n=Nt(n),s=Nt(s),r=lm(r),a=lm(a);let l=[],c=[],u=[];for(let d of i)l.push(d.sourceLayer),c.push(d.nodeIndex),u.push(d.tensorIndex);new cm({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function qL(e){e=Nt(e);let t=[];for(let n of e)t.push(n.shape);return cs(t)}function XL(e){return"float32"}function Rw(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],c=Rw(o,i,l);for(let u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}var ju=class extends rt{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:im("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new q("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new q("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new q("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new Ar(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new q(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};ju.className="InputLayer";ue.registerClass(ju);function $w(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new q("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new ju({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Bo(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];Q(s)}}function Dw(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var _w;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(_w||(_w={}));var KL=125,qu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Fw=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},ZL=class extends qu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=j(()=>le(this.totals[s],B(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:j(()=>{let s=B(fe(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),bn(t[n])}))}},Pw=class extends qu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},Ow=class extends qu{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Xv,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=KL),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=sL(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Bo(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Bo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Bo(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Bo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Bo(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Bo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Bo(e),await this.trainEnd(e))}};function Mw(e,t){return e==null&&(e={}),e instanceof qu?[e]:Array.isArray(e)&&e[0]instanceof qu?e:Nt(e).map(s=>new Ow(s,t))}var Qs=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Qs.checkForDuplicate(t),Qs.constructors[e]==null&&(Qs.constructors[e]=[]),Qs.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Qs.constructors)Qs.constructors[+t].forEach(s=>{if(s===e)throw new q("Duplicate callback constructor.")})}static clear(){Qs.constructors={}}static createCallbacks(e){let t=[];for(let n in Qs.constructors){let s=+n;e>=s&&t.push(...Qs.constructors[s])}return t.map(n=>new n)}};Qs.constructors={};function zw(e,t,n,s,r,a,o,i,l){let c=new Pw,u=[new ZL,...Qs.createCallbacks(t)];e!=null&&u.push(...e),u.push(c);let d=new Fw(u);return d.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:d,history:c}}function xr(e,t={},n=!1){return Bd(e,ue.SerializationMap.getMap().classNameMap,t,"layer",n)}function dm(e,t){return j(()=>{e.dtype!=="float32"&&(e=de(e,"float32"));let n=Ie(Gd(e),t,!0),s=Pu(n.shape,un()),r=Nn(Pr(n,s));return fe(e,r)})}function ml(e,t){return j(()=>Bt(Gd(Ae(t,e)),-1))}function pm(e,t){return j(()=>Bt(en(Ae(t,e)),-1))}function Xu(e,t){return j(()=>{let n=Ae(e,t),s=ls(en(e),un(),Number.MAX_VALUE),r=en(fe(n,s));return B(100,Bt(r,-1))})}function YL(e,t){return j(()=>{let n=ls(t,un(),Number.MAX_VALUE),s=xs(le(1,n)),r=ls(e,un(),Number.MAX_VALUE),a=xs(le(1,r));return Bt(Gd(Ae(s,a)),-1)})}function JL(e,t){return j(()=>{let n=Pr(0,Ae(1,B(e,t)));return Bt(Gd(n),-1)})}function QL(e,t){return j(()=>{let n=Pr(0,Ae(1,B(e,t)));return Bt(n,-1)})}function eB(e,t){return j(()=>{let n=Ie(B(e,t),-1),s=Gn(B(Ae(1,e),t),-1);return Pr(0,le(1,Ae(s,n)))})}function tB(e,t){return j(()=>{let n=Math.log(2),s=Ae(t,e),r=Ae(le(s,rl(B(-2,s))),n);return Bt(r,-1)})}function jd(e,t,n=!1){return j(()=>{if(n)t=il(t);else{let s=Ie(t,t.shape.length-1,!0);t=fe(t,s)}return t=ls(t,un(),1-un()),Ft(Ie(B(de(e,"float32"),xs(t)),t.shape.length-1))})}function hm(e,t,n=!1){return j(()=>{let s=de(Ou(AL(e)),"int32");t=ls(t,un(),1-un());let r=t.shape,a=G(Nu(s,r[r.length-1]),r);return jd(a,t,n)})}function nB(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new q(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return j(()=>{let n=pr(t),s=Ft(en(t));return le(Ae(n,B(t,e)),Nd(As(s)))})}function fm(e,t){return j(()=>{let n;return n=ls(t,un(),1-un()),n=xs(fe(n,Ae(1,n))),Bt(nB(e,n),-1)})}function sB(e,t){return j(()=>{let n=ls(e,un(),1),s=ls(t,un(),1);return Ie(B(e,xs(fe(n,s))),-1)})}function rB(e,t){return j(()=>{let n=xs(le(un(),t));return Bt(Ae(t,B(e,n)),-1)})}function my(e,t){return j(()=>{let n=dm(e,-1),s=dm(t,-1),r=B(n,s);return Ft(Ie(r,-1))})}var mm={meanSquaredError:ml,meanAbsoluteError:pm,meanAbsolutePercentageError:Xu,meanSquaredLogarithmicError:YL,squaredHinge:JL,hinge:QL,categoricalHinge:eB,logcosh:tB,categoricalCrossentropy:jd,sparseCategoricalCrossentropy:hm,binaryCrossentropy:fm,kullbackLeiblerDivergence:sB,poisson:rB,cosineProximity:my};function gy(e){if(typeof e=="string"){if(e in mm)return mm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new q(t)}else return e}function yy(e,t){return j(()=>{let n=B(.5,vs(t)),s=Zf(us(t,n),e.dtype);return Bt(ys(e,s),-1)})}function Ay(e,t){return j(()=>Zf(ys(Ds(e,-1),Ds(t,-1)),"float32"))}function Lw(e,t){return j(()=>de(Ie(Ks(ys(e,1),ys(t,1))),"float32"))}function aB(e,t){return j(()=>de(Ie(Ks(ys(e,1),ys(t,0))),"float32"))}function oB(e,t){return j(()=>de(Ie(Ks(ys(e,0),ys(t,1))),"float32"))}function Bw(e,t){return j(()=>{let n=Lw(e,t),s=oB(e,t),r=le(n,s);return de(zn(us(r,0),fe(n,r),0),"float32")})}function iB(e,t){return j(()=>{let n=Lw(e,t),s=aB(e,t),r=le(n,s);return de(zn(us(r,0),fe(n,r),0),"float32")})}function Ww(e,t){return fm(e,t)}function Vw(e,t){return e.rank===t.rank&&(e=dt(e,[e.rank-1])),t=Ds(t,-1),t.dtype!==e.dtype&&(t=de(t,e.dtype)),de(ys(e,t),"float32")}var lB=ml,uB=ml,cB=pm,dB=pm,pB=Xu,hB=Xu,xy=jd,fB=my,Uw=hm,gm={binaryAccuracy:yy,categoricalAccuracy:Ay,precision:Bw,categoricalCrossentropy:xy,sparseCategoricalCrossentropy:Uw,mse:lB,MSE:uB,mae:cB,MAE:dB,mape:pB,MAPE:hB,cosine:fB};function mB(e){if(typeof e=="string"&&e in gm)return gm[e];if(typeof e!="string"&&e!=null)return e;throw new q(`Unknown metric ${e}`)}function ym(e){if(Or(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(mm))if(mm[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(gm))if(gm[n]===e){t=n;break}return t!==void 0?t:e.name}}function gB(e){let t={Adagrad:()=>ul.adagrad(.01),Adadelta:()=>ul.adadelta(1,.95,un()),Adam:()=>ul.adam(.001,.9,.999,un()),Adamax:()=>ul.adamax(.002,.9,.999,un(),0),RMSProp:()=>ul.rmsprop(.001,.9,0,un()),SGD:()=>ul.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new q(`Unknown Optimizer ${e}`)}var Gw=1*1024*1024;function Hw(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!by(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>Gw&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Gw}.`)}}function by(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!by(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!by(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function yB(e,t,n,s=console.log){let r=xB(e),a=["Layer (type)","Output shape","Param #"];r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let o;if(!r){a.push("Receives inputs"),o=[];for(let u in e.nodesByDepth)o.push(...e.nodesByDepth[u])}s("_".repeat(t)),Am(a,n,s),s("=".repeat(t));let i=e.layers;for(let u=0;u<i.length;++u)r?bB(i[u],n,s):vB(i[u],n,o,s),s((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=AB(e),c=um(e.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function AB(e){let t;return e.collectedTrainableWeights!=null?t=um(e.collectedTrainableWeights):t=um(e.trainableWeights),t}function xB(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Am(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function bB(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(i){s="multiple"}let r=e.name,a=e.getClassName(),o=[`${r} (${a})`,s,e.countParams().toString()];Am(o,t,n)}function vB(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}let a=[];for(let u of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(u)===-1))for(let d=0;d<u.inboundLayers.length;++d){let p=u.inboundLayers[d].name,h=u.nodeIndices[d],f=u.tensorIndices[d];a.push(`${p}[${h}][${f}]`)}let o=e.name,i=e.getClassName(),l=a.length===0?"":a[0],c=[`${o} (${i})`,r,e.countParams().toString(),l];Am(c,t,s);for(let u=1;u<a.length;++u)Am(["","","",a[u]],t,s)}function jw(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function qd(e,t){if(e===null)return null;if(typeof e=="string")return dl(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];jw(t,r,a)?n.push(a):n.push(qd(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=dl(s);n[a]=qd(r,a)}}return n}}function vy(e,t){if(e==null)return null;if(typeof e=="string")return xa(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];jw(t,r,a)?n.push(a):n.push(vy(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=xa(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=vy(r,s)}return n}}var wy="3.10.0";function wB(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return de(t,e.dtype)}catch(n){throw new q(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var gl=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof gl)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=wB(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new q(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ar){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ar){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Q(this.id2Mask)}},ky={},qw={};function Xd(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],c=t.names();for(let f of i)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let u=i.join(",")+"|"+t.names().join(","),d,p;if(ky[u]==null){let f=kB(o,t);d=f.sorted,p=f.recipientCounts,ky[u]=d,qw[u]=p}d=ky[u],p={},r||Object.assign(p,qw[u]);let h=new gl(t);for(let f=0;f<d.length;++f){if(s!=null){let R=uf().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}let m=d[f],g=m.sourceLayer;if(g instanceof ju)continue;let y=[],A=[],x=[],b=!1;for(let R of m.inputs){let P=h.getValue(R),$=h.getMask(R);y.push(P),A.push($),$!=null&&(b=!0),r||(p[R.name]--,p[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!P.isDisposed&&R.sourceLayer.stateful!==!0&&x.push(P))}b&&(n=n||{},n.mask=A[0]);let w=Nt(g.apply(y,n)),k=null;g.supportsMasking&&(k=g.computeMask(y,A));let S=SB(m),E=Array.isArray(S)?S:[S];for(let R=0;R<E.length;++R){h.hasKey(E[R])||h.add(E[R],w[R],Array.isArray(k)?k[0]:k);let P=i.indexOf(E[R].name);P!==-1&&(l[P]=w[R])}r||Q(x)}return h.disposeMasks(),a?l:l[0]}function kB(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=Xw(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=Xw(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(c=>s[l].add(c))}}return{sorted:n,recipientCounts:IB(s)}}function IB(e){let t={};for(let n in e)t[n]=e[n].size;return t}function Xw(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!n.has(c.name)&&a.push(c)}}return{sorted:s,recipientMap:r}}function SB(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var zr=class extends rt{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=im(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Mo(this.inputs).length!==this.inputs.length)throw new q(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Mo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let A=y.sourceLayer,x=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(A),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let A=y.sourceLayer,x=y.nodeIndex,b=y.tensorIndex;Or(x===0,"input layer has >1 nodes"),Or(b===0,"input layer has >1 tensors"),this.inputLayers.push(A),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let A=this.inputLayers[y];if(!(A instanceof ju))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${A.getClassName()}.`);this.inputNames.push(A.name),this.feedInputShapes.push(A.batchInputShape),this.feedInputNames.push(A.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},s={},r={},a={},o=[],i=(y,A,x,b,w,k)=>{(b==null||w==null||k==null)&&(b=y.sourceLayer,w=y.nodeIndex,k=y.tensorIndex);let S=b.inboundNodes[w];if(x.indexOf(S)!==-1)throw new mr(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(A.indexOf(S)!==-1)return;this.containerNodes.add(zr.nodeKey(b,w)),b.id in a||(a[b.id]=Object.keys(a).length),x.indexOf(S)===-1&&x.push(S);let E=S.inboundLayers.length;for(let R=0;R<E;R++){let P=S.inputTensors[R],$=S.inboundLayers[R],D=S.nodeIndices[R],T=S.tensorIndices[R];i(P,A,x,$,D,T)}for(A.push(S);x.indexOf(S)>=0;)x.splice(x.indexOf(S),1);o.push(S)},l=[],c=[];for(let y of this.outputs)i(y,l,c);let u=o.slice().reverse();for(let y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let A=t[y.id],x=s[y.outboundLayer.id]==null?0:s[y.outboundLayer.id];A=Math.max(A,x),s[y.outboundLayer.id]=A,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=A;for(let b=0;b<y.inboundLayers.length;b++){let w=y.inboundLayers[b],k=y.nodeIndices[b],S=w.inboundNodes[k],E=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(A+1,E),n[S.id]=S}}let d={};for(let y in t){let A=t[y];A in d||(d[A]=[]),d[A].push(n[y])}let p={};for(let y in s){let A=s[y];A in p||(p[A]=[]),p[A].push(r[y])}let h=Object.keys(p).map(y=>parseInt(y,10)).sort(Kf);this.layers=[];for(let y of h){let A=p[y];A.sort((x,b)=>{let w=a[x.id],k=a[b.id];return w<k?-1:w>k?1:0});for(let x of A)x instanceof zr&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=p,h=Object.keys(d).map(y=>parseInt(y,10)).sort(Kf);let f=this.inputs.slice(),m=[];for(let y of h)for(let A of d[y]){let x=A.outboundLayer;if(x!=null){for(let b of A.inputTensors)if(f.indexOf(b)===-1)throw new mr(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${x.name}". The following previous layers were accessed without issue: ${m}`);for(let b of A.outputTensors)f.push(b);m.push(x.name)}}this.nodesByDepth=d;let g=this.layers.map(y=>y.name);for(let y of g){let A=g.filter(x=>x===y).length;if(A!==1)throw new mr(`The name "${y}" is used ${A} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new q("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new q(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new q(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new q(`${a.length} of ${s} weights are not set: ${a}`)}fy(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${wy}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=vy(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return j(()=>{e=Nt(e);let n=new gl;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return Xd(this.outputs,n,t)})}computeMask(e,t){return j(()=>{e=Nt(e);let n;return t==null?n=cl(null,e.length):n=Nt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=lm(e);if(t.length!==this.inputLayers.length)throw new q(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],c=i.name+"_0_0";n[c]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Kf);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let c=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;let u=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],A=`${m.name}_${g}_${y}`,x=n[A];u.push(x)}let d=c.computeOutputShape(cs(u)),p=lm(d),h=c.inboundNodes.indexOf(l);for(let f=0;f<p.length;f++){let m=`${c.name}_${h}_${f}`;n[m]=p[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],u=`${i.name}_${l}_${c}`;a.push(u)}for(let o=0;o<a.length;o++){let i=a[o];Or(i in n),r.push(n[i])}return cs(r)}runInternalGraph(e,t){t==null&&(t=cl(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],c=e[i],u=t[i];n[l.id]=[c,u]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Kf);for(let i of s){let l=this.nodesByDepth[i];for(let c of l){let u=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,h=new Array;for(let f of d)f.id in n&&h.push(n[f.id]);if(h.length===d.length){let f={},m,g,y,A;if(c.callArgs!=null&&(f=c.callArgs),h.length===1){let[x,b]=h[0];f.mask==null&&(f.mask=b),y=Nt(u.call(x,f)),A=Nt(u.computeMask(x,b)),m=[x],g=[b]}else m=h.map(x=>x[0]),g=h.map(x=>x[1]),f.mask==null&&(f.mask=g),y=Nt(u.call(m,f)),A=Nt(u.computeMask(m,g));if(u.activityRegularizer)throw new Ve("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<p.length;++x){let b=p[x],w=y[x],k=A[x];n[b.id]=[w,k]}}}}let r=[],a=[],o=[];for(let i of this.outputs){Or(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,c]=n[i.id];o.push(l.shape),r.push(l),a.push(c)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof zr?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=zr.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new q(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new q("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new q(`No such layer: ${e}`)}calculateLosses(){return j(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=zr.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let u=0;u<a.inboundNodes.length;u++){let d=a.inboundNodes[u],p=zr.nodeKey(a,u),h={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],y=d.nodeIndices[m],A=d.tensorIndices[m],x=zr.nodeKey(g,y),b=t[x];b==null&&(b=0),f.push([g.name,b,A,h])}l.push(f)}}}let c={};c.name=a.name,c.className=o,c.config=i,c.inboundNodes=l,n.push(c)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=zr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.inputLayersTensorIndices[a];s.push([o.name,c,u])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=zr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.outputLayersTensorIndices[a];r.push([o.name,c,u])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let y=[],A;for(let x of g){let b=x[0],w=x[1],k=x[2];if(A=x[3]==null?{}:x[3],!(b in r)){o(m,g);return}let S=r[b];if(S.inboundNodes.length<=w){o(m,g);return}let E=S.inboundNodes[w];y.push(E.outputTensors[k])}y.length>0&&m.apply(cs(y),A)}function l(m){let g=m.name,y=xr(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(s),r[g]=y,m.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new q(`Corrupted configuration, expected array for nodeData: ${x}`);o(y,x)})}let c=t.name,u=t.layers;for(let m of u)l(m);for(;!nL(a);)for(let m of u){let g=r[m.name];if(g.name in a){let y=a[g.name];delete a[g.name];for(let A of y)i(g,A)}}let d=[],p=[],h=t.inputLayers;for(let m of h){let g=m[0],y=m[1],A=m[2];Or(g in r);let b=r[g].inboundNodes[y].outputTensors;d.push(b[A])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],A=m[2];Or(g in r);let b=r[g].inboundNodes[y].outputTensors;p.push(b[A])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new q("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){j(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function CB(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Kw(e,t){return CB(e,t,"classWeight")}async function Zw(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=j(()=>{if(e.shape.length===1)return cr(e);if(e.shape.length===2){if(e.shape[1]>1)return Ds(e,1);if(e.shape[1]===1)return G(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());Q(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),tn(o,"float32")}else return null}function TB(e,t){return B(e,t)}var NB=32;function Yw(e,t){let n,s,r=t;n=r.xs,s=r.ys,v.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=Jw("input",e.inputNames,n),o=Jw("output",e.outputNames,s),i=a[0].shape[0];v.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)v.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)v.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function Jw(e,t,n){if(n instanceof Ze)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new q(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function EB(e){if(e.length===3)throw new Ve("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function RB(e,t,n){let s=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(Qw(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=EB(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=Mw(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:h}=zw(u,d,n.epochs,null,null,$B(t,n),null,r,c);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await p.onEpochBegin(f);let y=0,A=0;for(s||(m=await t.iterator());s?y<n.batchesPerEpoch:!0;){let x=await m.next();if(s&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:b,ys:w}=Yw(e,x.value),k={};k.batch=A,k.size=b[0].shape[0],await p.onBatchBegin(A,k);let S=[];if(n.classWeight!=null){let P=Kw(n.classWeight,e.outputNames);for(let $=0;$<P.length;++$)S.push(await Zw(w[$],null,P[$]))}let E=b.concat(w).concat(S),R=i(E);Q(E);for(let P=0;P<l.length;++P){let $=l[P],D=R[P];k[$]=D,bn(D)}await p.onBatchEnd(A,k),Dw(k),A++,y++}if(s?y>=n.batchesPerEpoch:x.done){if(r){let b;Qw(n.validationData)?b=Nt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=Nt(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?NB:n.validationBatchSize,verbose:0}));for(let w=0;w<e.metricsNames.length;++w)g[`val_${e.metricsNames[w]}`]=b[w]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function $B(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Qw(e){return typeof e.iterator=="function"}function DB(e){return typeof e.next=="function"}async function _B(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Ve("Verbose mode is not implemented yet.");v.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=DB(t)?t:await t.iterator(),i=0,l=0;for(;s?l<n.batches:!0;){let c=await o.next();if(a=j(()=>{if(c.value){let{xs:u,ys:d}=Yw(e,c.value),p=u.concat(d),h=j(()=>r(p));if(Q(p),l===0)for(let m=0;m<h.length;++m)a.push(Ee(0));let f=p[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],y=a[m];a[m]=j(()=>le(a[m],B(f,g))),l>0&&Q(y)}Q(h),i+=f,++l}return a}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){let u=a[c];a[c]=fe(a[c],i),Q(u)}return cs(a)}function Iy(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Kd(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>fl(s,t,n-t)):fl(e,t,n-t)}function Sy(e,t){return j(()=>e==null?null:Array.isArray(e)?e.map(n=>Sy(n,t)):ww(e,t.dtype==="int32"?t:de(t,"int32")))}function Cy(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function FB(e,t,n,s,r,a,o,i,l,c,u,d,p,h,f){r==null&&(r=32),a==null&&(a=1),u==null&&(u=!0),p==null&&(p=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new q("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),y;g!=null&&(y=gr(0,g)),o==null&&(o=1);let{callbackList:A,history:x}=zw(i,o,a,p,g,h,r,m,d);A.setModel(e),e.history=x,await A.onTrainBegin(),e.stopTraining_=!1;for(let b=p;b<a;++b){await A.onEpochBegin(b);let w={};if(h!=null)throw new Ve("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Ve("batch shuffling is not implemneted yet");u&&v.shuffle(y);let k=tn(y),S=Cy(g,r);for(let E=0;E<S.length;++E){let R={};if(await A.onBatchBegin(E,R),j(()=>{let P=S[E][0],$=S[E][1],D=fl(k,P,$-P);R.batch=E,R.size=$-P;let T=Sy(n,D),O=t(T);for(let V=0;V<s.length;++V){let H=s[V],z=O[V];R[H]=z,bn(z)}if(E===S.length-1&&m){let V=e.testLoop(l,c,r);for(let H=0;H<s.length;++H){let z=s[H],X=V[H];bn(X),w["val_"+z]=X}}}),await A.onBatchEnd(E,R),Dw(R),e.stopTraining_)break}k.dispose()}if(await A.onEpochEnd(b,w),e.stopTraining_)break}return await A.onTrainEnd(),await e.history.syncData(),e.history}async function PB(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,c,u;try{let d=s.batchSize==null?32:s.batchSize;Iy(d);let p=!1,h=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,p,d);r=h[0],a=h[1],u=h[2];let f=!1,m;if(s.validationData!=null&&s.validationData.length>0){if(f=!0,s.validationData.length===2)o=s.validationData[0],i=s.validationData[1];else throw s.validationData.length===3?new Ve("validationData including sample weights is not supported yet."):new q(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let S=!0,E=await e.standardizeUserData(o,i,null,null,S,d);l=E[0],c=E[1],m=l.concat(c)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){f=!0;let S=Math.floor(r[0].shape[0]*(1-s.validationSplit)),E=r[0].shape[0];l=Kd(r,S,E),r=Kd(r,0,S),c=Kd(a,S,E),a=Kd(a,0,S),m=l.concat(c)}else s.validationSteps!=null&&(f=!0);let g=r.concat(a).concat(u);e.checkTrainableWeightsConsistency();let y=e.makeTrainFunction(),A=e.getDedupedMetricsNames(),x,b;f?(e.makeTestFunction(),x=e.testFunction,b=A.slice().concat(A.map(S=>"val_"+S))):(x=null,m=[],b=A.slice());let w=Mw(s.callbacks,s.yieldEvery);return await FB(e,y,g,A,d,s.epochs,s.verbose,w,x,m,s.shuffle,b,s.initialEpoch,null,null)}finally{e.isTraining=!1,yl(r,t),yl(a,n),yl(l,o),yl(c,i),u!=null&&Q(u)}}function ek(e){let t=[];e instanceof Ze&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(Ud(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function yl(e,t){if(e==null)return;let n=[];if(t instanceof Ze)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof Ze)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function OB(e){return e instanceof Ze}function Ty(e){return Array.isArray(e)}function tk(e){return!OB(e)&&!Ty(e)}function nk(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(Ty(e)&&e.length>0)o=!0;else if(tk(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new q(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(tk(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new q(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(Ty(e)){if(e=e,e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new q(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=ek(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u>=0&&c!==u)throw new q(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function MB(e,t,n){let s=Mo(e.map(a=>a.shape[0]));s.sort();let r=Mo(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new q(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new q(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!v.arraysEqual(s,r))throw new q(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function zB(e,t,n){let s=[ml,fm,jd];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===jd&&a.shape[a.shape.length-1]===1)throw new q(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),c=i.slice(1);for(let u=0;u<l.length;++u){let d=l[u],p=c[u];if(p!=null&&d!==p)throw new q(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function sk(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new q(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u!==c)throw new q(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function LB(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var BB="layers-model",ba=class extends zr{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new q("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");yB(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=gB(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ya))throw new q("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new q(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(gy(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new q(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>gy(o))}else{let a=gy(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],hl("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=LB(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};hl("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let c="",u,d,p;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===fm?["accuracy","acc"].indexOf(h)!==-1?d=yy:["crossentropy","ce"].indexOf(h)!==-1&&(d=Ww):this.lossFunctions[a]===hm?["accuracy","acc"].indexOf(h)!==-1?d=Vw:["crossentropy","ce"].indexOf(h)!==-1&&(d=Uw):["accuracy","acc"].indexOf(h)!==-1?d=Ay:["crossentropy","ce"].indexOf(h)!==-1&&(d=xy);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),p=d,u=c+g}else p=mB(h),u=c+ym(h);let f;hl(u,()=>{f=p}),r(a,u,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;Iy(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return cs(l)}finally{yl(a[0],e),yl(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),_B(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new q(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new q(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new q("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new gl;if(e instanceof Ze&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new q(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new q(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=Xd(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=cl(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new q(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return j(()=>{let s=this.checkNumSamples(e);if(n)throw new Ve("Verbose predictLoop() is not implemented yet.");let r=Cy(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)j(()=>{let l=r[o][0],c=r[o][1],u=Kd(e,l,c),d=[];if(Array.isArray(u))for(let h=0;h<u.length;++h)d.push({key:this.inputs[h],value:u[h]});else d.push({key:this.inputs[0],value:u});let p=new gl(d);return Xd(this.outputs,p)}).forEach((l,c)=>a[c].push(l));return cs(a.map(o=>kt(o,0)))})}predict(e,t={}){let n=ek(e);sk(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return Iy(s),this.predictLoop(n,s)}finally{yl(n,e)}}predictOnBatch(e){sk(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new mr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===hm?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=nk(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=nk(t,this.feedOutputNames,r,!1,"target"),MB(e,t,null),zB(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!=0)throw new q(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let c=Kw(s,this.outputNames);l=[];for(let u=0;u<c.length;++u)l.push(await Zw(i[u],null,c[u]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return j(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new Ve("Verbose mode is not implemented yet.");if(r!=null)throw new Ve("steps mode in testLoop() is not implemented yet");{let i=Cy(a,n),l=tn(gr(0,a));for(let c=0;c<i.length;++c){let u=i[c][0],d=i[c][1],p=fl(l,u,d-u),h=Sy(t,p),f=e(h);if(c===0)for(let m=0;m<f.length;++m)o.push(Ee(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=le(o[m],B(d-u,g))}}for(let c=0;c<o.length;++c)o[c]=fe(o[c],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;cw(e,s)>1&&(r+=`_${cw(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let u=[];for(let f=0;f<this.inputs.length;++f)u.push({key:this.inputs[f],value:n[f]});let d=new gl(u),p=Xd(this.outputs,d,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],p[f]);r[f]!=null&&(g=TB(g,r[f]));let y=Bt(g);t.push(y),f===0?h=g:h=le(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],y=this.metricsTensors[f][1];m=Bt(g(s[y],p[y]))}bn(m),a.push(m)}return h=Bt(h),this.calculateLosses().forEach(f=>{h=le(h,f)}),h},i=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>j(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new gl(a),i=Xd(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],u=Bt(c(r[l],i[l]));l===0?n=u:n=le(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],u=this.metricsTensors[l][1],d=Bt(c(r[u],i[u]));t.push(d)}return t})}async fit(e,t,n={}){return PB(this,e,t,n)}async fitDataset(e,t){return RB(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let c=await l.data();i.push(c[0])}return Q(o),cs(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=uf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-uf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=xa(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>xa(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=xa(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[xa(ym(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>xa(ym(e)));{let e={};for(let t in this.metrics)e[t]=xa(ym(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=qd(e.optimizer_config),n=xr(t),s;if(typeof e.loss=="string")s=dl(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>dl(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=dl(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>dl(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=dl(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=as.getSaveHandlers(e);if(l.length===0)throw new q(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new q(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new q("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await as.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:BB,generatedBy:`TensorFlow.js tfjs-layers v${wy}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:c,specs:u}=await as.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...u),n.data=as.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let l=!0;Hw(this.userDefinedMetadata,this.name,l),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){Hw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ba.className="Model";ue.registerClass(ba);var rk=class extends ba{};rk.className="Functional";ue.registerClass(rk);async function WB(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=qd(n),r=xr(s,t);if(e.weightsManifest!=null){let a=await as.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),Q(a)}return r}async function VB(e,t){if(t==null&&(t={}),typeof e=="string"){let n=as.getLoadHandlers(e,t);if(n.length===0)n.push(as.browserHTTPRequest(e,t));else if(n.length>1)throw new q(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return UB(e,void 0,t)}async function UB(e,t,n){if(n==null&&(n={}),e.load==null)throw new q("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=xr(qd(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new q("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:u}=GB(s.weightData,s.weightSpecs);i.loadWeights(c,a),i.optimizer!=null&&u.length>0&&await i.optimizer.setWeights(u),Q(c),Q(u.map(d=>d.tensor))}return i}function GB(e,t){let n=as.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var Ku=class extends ba{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:im("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new q(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Ku||e instanceof ba,n;if(t){if(n=e,n.outputs.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new q("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new q("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=$w({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new q(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Rw(this.outputs[0])}this.inboundNodes=[],new cm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:cl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(At(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ba({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new mr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new mr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new mr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new mr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new q("Legacy serialization format not supported yet.");r=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof Ku))throw new Ve(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let c=xr(i,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new q("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new q("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};Ku.className="Sequential";ue.registerClass(Ku);function HB(e){return new ba(e)}function jB(e){return new Ku(e)}function qB(e,t){return t==null&&(t={}),VB(e,t)}function ak(e){return $w(e)}function XB(e,t){Qs.registerCallbackConstructor(e,t)}var ps=class extends ue.Serializable{getConfig(){return{}}},ok=class extends ps{apply(e,t=1){return bL(e,t)}};ok.className="elu";ue.registerClass(ok);var ik=class extends ps{apply(e){return Ef(e)}};ik.className="selu";ue.registerClass(ik);var lk=class extends ps{apply(e){return pr(e)}};lk.className="relu";ue.registerClass(lk);var uk=class extends ps{apply(e){return j(()=>Mu(6,pr(e)))}};uk.className="relu6";ue.registerClass(uk);var ck=class extends ps{apply(e){return e}};ck.className="linear";ue.registerClass(ck);var dk=class extends ps{apply(e){return is(e)}};dk.className="sigmoid";ue.registerClass(dk);var pk=class extends ps{apply(e){return wL(e)}};pk.className="hardSigmoid";ue.registerClass(pk);var hk=class extends ps{apply(e){return rl(e)}};hk.className="softplus";ue.registerClass(hk);var fk=class extends ps{apply(e){return vL(e)}};fk.className="softsign";ue.registerClass(fk);var mk=class extends ps{apply(e){return tl(e)}};mk.className="tanh";ue.registerClass(mk);var Ny=class extends ps{apply(e,t=-1){return il(e,t)}};Ny.className="softmax";ue.registerClass(Ny);var gk=class extends ps{apply(e,t=-1){return wf(e,t)}};gk.className="logSoftmax";ue.registerClass(gk);var yk=class extends ps{apply(e,t=1){return j(()=>B(is(B(e,t)),e))}};yk.className="swish";ue.registerClass(yk);var Ak=class extends ps{apply(e){return j(()=>B(e,tl(rl(e))))}};Ak.className="mish";ue.registerClass(Ak);function Wo(e){return e.getClassName()}function Ey(e,t={}){return Bd(e,ue.SerializationMap.getMap().classNameMap,t,"activation")}function Vo(e){if(e==null){let t={};return t.className="linear",t.config={},Ey(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},Ey(t)}else return e instanceof ps?e:Ey(e)}function Ry(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var xk=class extends ue.Serializable{},Zd=class extends xk{constructor(e){super();Ry(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return j(()=>{let t=Kt([1]);return this.hasL1&&(t=le(t,Ie(B(this.l1,en(e))))),this.hasL2&&(t=le(t,Ie(B(this.l2,Gd(e))))),G(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Zd.className="L1L2";ue.registerClass(Zd);function KB(e){return Ry(e),new Zd({l1:e!=null?e.l1:null,l2:0})}function ZB(e){return Ry(e),new Zd({l2:e!=null?e.l2:null,l1:0})}var bk={l1l2:"L1L2"};function It(e){return q1(e)}function vk(e,t={}){return Bd(e,ue.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ot(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in bk?bk[e]:e,config:{}};return vk(n)}else return e instanceof xk?e:vk(e)}var $y=class extends rt{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ue(e);let n=pr(e);return this.maxValue!=null&&(n=ls(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};$y.className="ReLU";ue.registerClass($y);var Dy=class extends rt{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ue(e);return Td(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Dy.className="LeakyReLU";ue.registerClass(Dy);var _y=class extends rt{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Pt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ot(e.alphaRegularizer),this.alphaConstraint=dn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new q(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=At(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new nn({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ue(e),_d(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Wt(this.alphaInitializer),alphaRegularizer:It(this.alphaRegularizer),alphaConstraint:cn(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};_y.className="PReLU";ue.registerClass(_y);var Fy=class extends rt{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ve(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ue(e);return Fu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Fy.className="ELU";ue.registerClass(Fy);var Py=class extends rt{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ue(e);return B(n,de(us(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Py.className="ThresholdedReLU";ue.registerClass(Py);var Oy=class extends rt{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Ny().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ue(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Oy.className="Softmax";ue.registerClass(Oy);function Zu(e,t,n){if(typeof e=="number")return cl(e,t);if(e.length!==t)throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!gL(r))throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function br(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function Lr(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+Lo([n-t,0]);else if(s==="same")e=e*t;else throw new q(`Unsupport padding mode: ${s}.`);return e}function My(e,t){return j(()=>(Zt(t),t==="channelsFirst"?et(e,[0,2,3,1]):e))}function wk(e,t){return j(()=>(Zt(t),t==="channelsFirst"?et(e,[0,2,3,4,1]):e))}function YB(e,t,n,s=1,r="valid",a,o=1){return j(()=>{if(a==null&&(a=fr()),Zt(a),e.shape.length!==3)throw new q(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new q(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new q(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=et(e,[0,2,1])),r==="causal")throw new Ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=mf(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=yr(i,n)),i})}function kk(e,t,n,s=[1,1],r="valid",a,o,i=null){return j(()=>{if(a==null&&(a=fr()),Zt(a),e.rank!==3&&e.rank!==4)throw new q(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new q(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=My(e,a);if(r==="causal")throw new Ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Oo.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=et(l,[0,3,1,2])),l})}function JB(e,t,n,s=[1,1,1],r="valid",a,o){return j(()=>{if(a==null&&(a=fr()),Zt(a),e.rank!==4&&e.rank!==5)throw new q(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new q(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=wk(e,a);if(r==="causal")throw new Ve("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=f1(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=yr(i,n)),a==="channelsFirst"&&(i=et(i,[0,4,1,2,3])),i})}var zy=class extends rt{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",zy.verifyArgs(t),this.rank=e,wn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ve(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Zu(t.kernelSize,e,"kernelSize"),this.strides=Zu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Ps(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Zt(this.dataFormat),this.activation=Vo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=dn(t.biasConstraint),this.biasRegularizer=Ot(t.biasRegularizer),this.activityRegularizer=Ot(t.activityRegularizer),this.dilationRate=Zu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new q(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new q(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new q(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Or("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!K1(e.kernelSize,"number",1,3))throw new q(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Wo(this.activation),useBias:this.useBias,biasInitializer:Wt(this.biasInitializer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),biasConstraint:cn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Yd=class extends zy{constructor(e,t){super(e,t);this.kernel=null,Yd.verifyArgs(t),this.filters=t.filters,wn(this.filters,"filters"),this.kernelInitializer=Pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=dn(t.kernelConstraint),this.kernelRegularizer=Ot(t.kernelRegularizer)}build(e){e=At(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return j(()=>{e=Ue(e);let n,s=this.bias==null?null:this.bias.read(),r=pw(this.activation.getClassName());if(r!=null&&this.rank===2)n=kk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=YB(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=kk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=JB(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ve("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=At(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=br(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Wt(this.kernelInitializer),kernelRegularizer:It(this.kernelRegularizer),kernelConstraint:cn(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new q(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Jd=class extends Yd{constructor(e){super(2,e);Jd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!K1(e.kernelSize,"number",1,2))throw new q(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};Jd.className="Conv2D";ue.registerClass(Jd);var Qd=class extends Yd{constructor(e){super(3,e);Qd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new q(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};Qd.className="Conv3D";ue.registerClass(Qd);var Ly=class extends Jd{constructor(e){super(e);if(this.inputSpec=[new nn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=At(e),e.length!==4)throw new q("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new nn({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return j(()=>{let n=Ue(e);if(n.shape.length!==4)throw new q(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],c=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=Lr(i,d,c,this.padding),f=Lr(l,p,u,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=et(n,[0,2,3,1]));let g=gf(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=et(g,[0,3,1,2])),this.bias!=null&&(g=yr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=At(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Lr(t[s],i,a,this.padding),t[r]=Lr(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ly.className="Conv2DTranspose";ue.registerClass(Ly);var By=class extends Qd{constructor(e){super(e);if(this.inputSpec=[new nn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=At(e),e.length!==5)throw new q("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new nn({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return j(()=>{let n=Ue(e);if(n.shape.length!==5)throw new q(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],c=s[a],u=s[o],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=Lr(l,f,d,this.padding),A=Lr(c,m,p,this.padding),x=Lr(u,g,h,this.padding),b=[r,y,A,x,this.filters];this.dataFormat!=="channelsLast"&&(n=et(n,[0,2,3,4,1]));let w=dv(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=et(w,[0,4,1,2,3])),this.bias!==null&&(w=yr(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=At(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[s]=Lr(t[s],c,o,this.padding),t[r]=Lr(t[r],u,i,this.padding),t[a]=Lr(t[a],d,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};By.className="Conv3DTranspose";ue.registerClass(By);var Ik=class extends Yd{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new q("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new q("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new q(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Pt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ot(t.depthwiseRegularizer),this.depthwiseConstraint=dn(t.depthwiseConstraint),this.pointwiseInitializer=Pt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ot(t.pointwiseRegularizer),this.pointwiseConstraint=dn(t.pointwiseConstraint)}build(e){if(e=At(e),e.length<this.rank+2)throw new q(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new nn({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return j(()=>{e=Ue(e);let n;if(this.rank===1)throw new Ve("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=et(e,[0,2,3,1])),n=D1(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=yr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=et(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Wt(this.depthwiseInitializer),e.pointwiseInitializer=Wt(this.pointwiseInitializer),e.depthwiseRegularizer=It(this.depthwiseRegularizer),e.pointwiseRegularizer=It(this.pointwiseRegularizer),e.depthwiseConstraint=cn(this.depthwiseConstraint),e.pointwiseConstraint=cn(this.pointwiseConstraint),e}};Ik.className="SeparableConv";var Wy=class extends Ik{constructor(e){super(2,e)}};Wy.className="SeparableConv2D";ue.registerClass(Wy);var xm=class extends Yd{constructor(e){super(1,e);xm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!K1(e.kernelSize,"number",1,1))throw new q(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};xm.className="Conv1D";ue.registerClass(xm);var Vy=class extends rt{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return j(()=>{if(e=Ue(e),this.dataFormat==="channelsLast"){let n=Yf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Yf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Yf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Yf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Vy.className="Cropping2D";ue.registerClass(Vy);var Uy=class extends rt{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Zt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,hL(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return j(()=>{let n=Ue(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=et(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?$e.resizeNearestNeighbor(n,[r,a]):$e.resizeBilinear(n,[r,a]);return et(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?$e.resizeNearestNeighbor(n,[r,a]):$e.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Uy.className="UpSampling2D";ue.registerClass(Uy);function QB(e,t,n=[1,1],s="valid",r,a){return j(()=>{r==null&&(r=fr()),Zt(r);let o=My(e,r);if(e.rank!==4)throw new q(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new q(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=_u(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=et(o,[0,3,1,2])),o})}var Gy=class extends zy{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Pt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=dn(e.depthwiseConstraint),this.depthwiseRegularizer=Ot(e.depthwiseRegularizer)}build(e){if(e=At(e),e.length<4)throw new q(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return j(()=>{e=Ue(e);let n=QB(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=yr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=At(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=br(t,this.kernelSize[0],this.padding,this.strides[0]),a=br(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Wt(this.depthwiseInitializer),e.depthwiseRegularizer=It(this.depthwiseRegularizer),e.depthwiseConstraint=cn(this.depthwiseRegularizer),e}};Gy.className="DepthwiseConv2D";ue.registerClass(Gy);function Sk(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new q("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function Ck(e,t,n,s=!1,r,a,o=!1,i=!1){return j(()=>{let l=t.shape.length;if(l<3)throw new q(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(gr(2,l));if(t=et(t,c),a!=null)throw new Ve("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=de(de(r,"bool"),"float32"),r.rank===l-1&&(r=Xt(r,-1)),r=et(r,c)),s&&(t=ws(t,0),r!=null&&(r=ws(r,0)));let u=[],d,p=n,h=t.shape[0],f=Hn(t),m;r!=null&&(m=Hn(r));for(let y=0;y<h;++y){let A=f[y],x=j(()=>e(A,p));if(r==null)d=x[0],p=x[1];else{let b=j(()=>{let w=m[y],k=Ae(vs(w),w),S=le(B(x[0],w),B(p[0],k)),E=p.map((R,P)=>le(B(x[1][P],w),B(R,k)));return{output:S,newStates:E}});d=b.output,p=b.newStates}i&&u.push(d)}let g;return i&&(g=En(u,1)),[d,g,p]})}var Br=class extends rt{constructor(e){super(e);let t;if(e.cell==null)throw new q("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new wm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new q("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new nn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return gr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){py(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return j(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Ve("Constants support is not implemented in RNN yet.");py(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new nn({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));if(t!=null)throw new Ve("Constants support is not implemented in RNN yet.");this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new q(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new nn({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){j(()=>{if(!this.stateful)throw new Aa("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Kt([n,s])):this.states_=[Kt([n,this.cell.stateSize])];else if(e==null)Q(this.states_),this.keptStates!=null&&(Q(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Kt([n,s])):this.states_[0]=Kt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Q(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!v.arraysEqual(r.shape,o))throw new q(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>bn(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=Sk(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new nn({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Ar){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return j(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=Ue(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new q(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=Ck((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=l[0],u=l[1],d=l[2];this.stateful&&this.resetStates(d,s);let p=this.returnSequences?u:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return j(()=>{let t=Kt(e.shape);return t=Ie(t,[1,2]),t=Ud(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?sy(t,[1,n]):t):this.cell.stateSize>1?[sy(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===Br.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let s=t.cell,r=xr(s,n);return new e(Object.assign(t,{cell:r}))}};Br.className="RNN";ue.registerClass(Br);var ep=class extends rt{},bm=class extends ep{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,wn(this.units,"units"),this.activation=Vo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Pt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ot(e.kernelRegularizer),this.recurrentRegularizer=Ot(e.recurrentRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.kernelConstraint=dn(e.kernelConstraint),this.recurrentConstraint=dn(e.recurrentConstraint),this.biasConstraint=dn(e.biasConstraint),this.dropout=Hu([1,Lo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Hu([1,Lo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=At(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return j(()=>{if(e=e,e.length!==2)throw new q(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Uo({ones:()=>vs(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Uo({ones:()=>vs(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=Mr(B(e,a),this.kernel.read()):r=Mr(e,this.kernel.read()),this.bias!=null&&(r=yr(r,this.bias.read())),o!=null&&(n=B(n,o));let i=le(r,Mr(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wo(this.activation),useBias:this.useBias,kernelInitializer:Wt(this.kernelInitializer),recurrentInitializer:Wt(this.recurrentInitializer),biasInitializer:Wt(this.biasInitializer),kernelRegularizer:It(this.kernelRegularizer),recurrentRegularizer:It(this.recurrentRegularizer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),kernelConstraint:cn(this.kernelConstraint),recurrentConstraint:cn(this.recurrentConstraint),biasConstraint:cn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};bm.className="SimpleRNNCell";ue.registerClass(bm);var Hy=class extends Br{constructor(e){e.cell=new bm(e);super(e)}call(e,t){return j(()=>{this.cell.dropoutMask!=null&&(Q(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Q(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};Hy.className="SimpleRNN";ue.registerClass(Hy);var vm=class extends ep{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new q("GRUCell does not support reset_after parameter set to true.");this.units=e.units,wn(this.units,"units"),this.activation=Vo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Pt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ot(e.kernelRegularizer),this.recurrentRegularizer=Ot(e.recurrentRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.kernelConstraint=dn(e.kernelConstraint),this.recurrentConstraint=dn(e.recurrentConstraint),this.biasConstraint=dn(e.biasConstraint),this.dropout=Hu([1,Lo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Hu([1,Lo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=At(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return j(()=>{if(e=e,e.length!==2)throw new q(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Uo({ones:()=>vs(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Uo({ones:()=>vs(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=B(e,r[0]));let c=Mr(e,this.kernel.read());this.useBias&&(c=yr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=B(s,a[0]));let u=this.recurrentKernel.read(),[d,p]=vn(u,[2*this.units,this.units],u.rank-1),h=Mr(s,d),[f,m,g]=vn(c,3,c.rank-1),[y,A]=vn(h,2,h.rank-1);o=this.recurrentActivation.apply(le(f,y)),i=this.recurrentActivation.apply(le(m,A));let x=Mr(B(i,s),p);l=this.activation.apply(le(g,x));let b=le(B(o,s),B(le(1,Ft(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wo(this.activation),recurrentActivation:Wo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Wt(this.kernelInitializer),recurrentInitializer:Wt(this.recurrentInitializer),biasInitializer:Wt(this.biasInitializer),kernelRegularizer:It(this.kernelRegularizer),recurrentRegularizer:It(this.recurrentRegularizer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),kernelConstraint:cn(this.kernelConstraint),recurrentConstraint:cn(this.recurrentConstraint),biasConstraint:cn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};vm.className="GRUCell";ue.registerClass(vm);var jy=class extends Br{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new vm(e);super(e)}call(e,t){return j(()=>{this.cell.dropoutMask!=null&&(Q(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Q(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};jy.className="GRU";ue.registerClass(jy);var tp=class extends ep{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,wn(this.units,"units"),this.activation=Vo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Pt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ot(e.kernelRegularizer),this.recurrentRegularizer=Ot(e.recurrentRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.kernelConstraint=dn(e.kernelConstraint),this.recurrentConstraint=dn(e.recurrentConstraint),this.biasConstraint=dn(e.biasConstraint),this.dropout=Hu([1,Lo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Hu([1,Lo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=At(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends Js{apply(i,l){let c=r.apply([a]),u=new Qf().apply([a]),d=r.apply([a*2]);return vw(vw(c,u),d)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return j(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new q(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Uo({ones:()=>vs(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Uo({ones:()=>vs(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,c,u;0<this.dropout&&this.dropout<1&&(e=B(e,a[0]));let d=Mr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=B(s,o[0])),d=le(d,Mr(s,this.recurrentKernel.read())),this.useBias&&(d=yr(d,this.bias.read()));let[p,h,f,m]=vn(d,4,d.rank-1);i=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(h),c=le(B(l,r),B(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=B(u,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wo(this.activation),recurrentActivation:Wo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Wt(this.kernelInitializer),recurrentInitializer:Wt(this.recurrentInitializer),biasInitializer:Wt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:It(this.kernelRegularizer),recurrentRegularizer:It(this.recurrentRegularizer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),kernelConstraint:cn(this.kernelConstraint),recurrentConstraint:cn(this.recurrentConstraint),biasConstraint:cn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};tp.className="LSTMCell";ue.registerClass(tp);var qy=class extends Br{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new tp(e);super(e)}call(e,t){return j(()=>{this.cell.dropoutMask!=null&&(Q(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Q(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};qy.className="LSTM";ue.registerClass(qy);var wm=class extends ep{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return j(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){py(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{hl(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return Object.assign({},e,s)}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(xr(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return hy(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}fy(t)}};wm.className="StackedRNNCells";ue.registerClass(wm);function Uo(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):kw(t(),n),i=()=>Hd(o,t,s);return!r||r<=1?bn(i().clone()):Array(r).fill(void 0).map(i).map(c=>bn(c.clone()))}var eW=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]]);return n},Tk=class extends Br{constructor(e){if(e.unroll)throw new Ve("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ve("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new nn({ndim:5})]}call(e,t){return j(()=>{if(this.cell.dropoutMask!=null&&(Q(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Q(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new q("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return j(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Kt(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){j(()=>{if(!this.stateful)throw new Aa("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Kt(r)):this.states_=[Kt(r)];else if(e==null)Q(this.states_),this.keptStates!=null&&(Q(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Kt(r)):this.states_[0]=Kt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Q(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!v.arraysEqual(i.shape,l))throw new q(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>bn(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],c=e[i?4:3],u=br(l,s[0],r,a[0],o[0]),d=br(c,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}};Tk.className="ConvRNN2D";var km=class extends tp{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super(Object.assign({},e,{units:t}));this.filters=t,wn(this.filters,"filters"),this.kernelSize=Zu(n,2,"kernelSize"),this.kernelSize.forEach(i=>wn(i,"kernelSize")),this.strides=Zu(s||1,2,"strides"),this.strides.forEach(i=>wn(i,"strides")),this.padding=r||"valid",Ps(this.padding),this.dataFormat=a||"channelsLast",Zt(this.dataFormat),this.dilationRate=Zu(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>wn(i,"dilationRate"))}build(e){var t;e=At(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;i=new(t=class extends Js{apply(d,p){let h=l.apply([c]),f=bs([c]),m=l.apply([c*2]);return ny([h,f,m])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return j(()=>{if(e.length!==3)throw new q(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Uo({ones:()=>vs(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(ee,Y,se)=>!Y||!Y[se]?ee:B(Y[se],ee),c=l(s,i,0),u=l(s,i,1),d=l(s,i,2),p=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Uo({ones:()=>vs(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=l(r,h,0),m=l(r,h,1),g=l(r,h,2),y=l(r,h,3),A=3,[x,b,w,k]=vn(this.kernel.read(),o,A),[S,E,R,P]=this.useBias?vn(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,x,S,this.padding),u=this.inputConv(u,b,E,this.padding),d=this.inputConv(d,w,R,this.padding),p=this.inputConv(p,k,P,this.padding);let[$,D,T,O]=vn(this.recurrentKernel.read(),o,A);f=this.recurrentConv(f,$),m=this.recurrentConv(m,D),g=this.recurrentConv(g,T),y=this.recurrentConv(y,O);let V=this.recurrentActivation.apply(le(c,f)),H=this.recurrentActivation.apply(le(u,m)),z=le(B(H,a),B(V,this.activation.apply(le(d,g)))),X=B(this.recurrentActivation.apply(le(p,y)),this.activation.apply(z));return[X,X,z]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=eW(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){let r=fa(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?yr(r,n,this.dataFormat):r}recurrentConv(e,t){return fa(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};km.className="ConvLSTM2DCell";ue.registerClass(km);var Xy=class extends Tk{constructor(e){let t=new km(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Xy.className="ConvLSTM2D";ue.registerClass(Xy);var Im=class extends rt{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return j(()=>{this.invokeCallHook(e,t);let n=Ue(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Hd(()=>kw(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Im.className="Dropout";ue.registerClass(Im);var Ky=class extends Im{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Ky.className="SpatialDropout1D";ue.registerClass(Ky);var Zy=class extends rt{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,wn(this.units,"units"),this.activation=Vo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=dn(e.kernelConstraint),this.biasConstraint=dn(e.biasConstraint),this.kernelRegularizer=Ot(e.kernelRegularizer),this.biasRegularizer=Ot(e.biasRegularizer),this.activityRegularizer=Ot(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=At(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=At(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return j(()=>{this.invokeCallHook(e,t);let n=Ue(e),s=pw(this.activation.getClassName()),r;return s!=null?r=Mr(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Mr(n,this.kernel.read()),this.bias!=null&&(r=yr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:Wo(this.activation),useBias:this.useBias,kernelInitializer:Wt(this.kernelInitializer),biasInitializer:Wt(this.biasInitializer),kernelRegularizer:It(this.kernelRegularizer),biasRegularizer:It(this.biasRegularizer),activityRegularizer:It(this.activityRegularizer),kernelConstraint:cn(this.kernelConstraint),biasConstraint:cn(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Zy.className="Dense";ue.registerClass(Zy);var Yy=class extends rt{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=At(e);for(let t of e.slice(1))if(t==null)throw new q(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],zo(e,1)]}call(e,t){return j(()=>{this.invokeCallHook(e,t);let n=Ue(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=et(n,s)}return xL(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Yy.className="Flatten";ue.registerClass(Yy);var Jy=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.activation=Vo(e.activation)}call(e,t){return j(()=>{this.invokeCallHook(e,t);let n=Ue(e);return this.activation.apply(n)})}getConfig(){let e={activation:Wo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Jy.className="Activation";ue.registerClass(Jy);var Qy=class extends rt{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return j(()=>(e=Ue(e),yL(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Qy.className="RepeatVector";ue.registerClass(Qy);var eA=class extends rt{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new q("Can only specifiy one unknown dimension.");else r*=l}let o=zo(e);if(a!==null){if(r===0||o%r!=0)throw new q(n);s[a]=o/r}else if(o!==r)throw new q(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return j(()=>{this.invokeCallHook(e,t);let n=Ue(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return G(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};eA.className="Reshape";ue.registerClass(eA);var tA=class extends rt{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=gr(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new nn({ndim:this.dims.length+1})]}computeOutputShape(e){e=At(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return et(Ue(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};tA.className="Permute";ue.registerClass(tA);var nA=class extends rt{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ue(e),s=-1;return wd(ol(n,this.maskValue),s)}call(e,t){return j(()=>{this.invokeCallHook(e,t);let n=Ue(e),s=-1,r=!0,a=wd(ol(n,this.maskValue),s,r);return B(n,de(a,n.dtype))})}};nA.className="Masking";ue.registerClass(nA);var sA=class extends rt{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Nt(e.inputLength))}this.inputDim=e.inputDim,wn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,wn(this.outputDim,"outputDim"),this.embeddingsInitializer=Pt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ot(e.embeddingsRegularizer),this.activityRegularizer=Ot(e.activityRegularizer),this.embeddingsConstraint=dn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return j(()=>this.maskZero?(e=Ue(e),ol(e,tt(e))):null)}computeOutputShape(e){if(e=At(e),this.inputLength==null)return[...e,this.outputDim];let t=Nt(this.inputLength);if(t.length!==e.length-1)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return j(()=>{this.invokeCallHook(e,t);let n=Ue(e);n.dtype!=="int32"&&(n=Zf(n,"int32"));let s=ww(this.embeddings.read(),G(n,[n.size]));return G(s,At(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Wt(this.embeddingsInitializer),embeddingsRegularizer:It(this.embeddingsRegularizer),activityRegularizer:It(this.activityRegularizer),embeddingsConstraint:cn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};sA.className="Embedding";ue.registerClass(sA);var Al=class extends rt{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Ve}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new q("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[At(e)]),e=e,e.length<2)throw new q(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Mo(t),t.length>1)throw new q(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&Mo(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return j(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=Lo(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=Ud(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let c=i.shape,u=c[0],d=c.slice(1).concat([u]),p=G(i,[u].concat(zo(c.slice(1))));p=et(p,[1,0]),p=G(p,d),n.push(p),r=!0}else if(l>1){let c=gr(1,l).concat([0]);n.push(et(i,c)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,c=i[l-1],u=[c].concat(i.slice(0,i.length-1));a=G(et(G(a,[-1,c]),[1,0]),u)}else if(o>1){let i=[o-1].concat(gr(0,o-1));a=et(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=Mo(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return j(()=>{if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an Array");if(!Array.isArray(e))throw new q("`inputs` should be an Array");if(t.length!==e.length)throw new q(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Xt(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=Ks(n,t[s]);return n})}},rA=class extends Al{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=le(t,e[n]);return t})}};rA.className="Add";ue.registerClass(rA);var aA=class extends Al{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=B(t,e[n]);return t})}};aA.className="Multiply";ue.registerClass(aA);var oA=class extends Al{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=le(t,e[n]);return B(1/e.length,t)})}};oA.className="Average";ue.registerClass(oA);var iA=class extends Al{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Pr(t,e[n]);return t})}};iA.className="Maximum";ue.registerClass(iA);var lA=class extends Al{constructor(e){super(e)}mergeFunction(e){return j(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Mu(t,e[n]);return t})}};lA.className="Minimum";ue.registerClass(lA);var uA=class extends Al{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new q("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(v.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new q("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return j(()=>ny(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new q("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new q("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new q(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return j(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(de(vs(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Xt(t[a],-1)):s.push(t[a]);let r=kt(s,this.axis);return hf(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};uA.className="Concatenate";ue.registerClass(uA);function np(e,t){for(;e<0;)e+=t;return e}function tW(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Ve("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Ve("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return j(()=>{let o;if(s>r){o=s-r;let l=[];for(let c=0;c<o;++c)l.push(1);t=G(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let c=0;c<o;++c)l.push(1);e=G(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=Ie(B(e,t),a[0]):i=Ie(B(et(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,c=a[1]===t.shape.length-1;i=Xe(e,t,l,c)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let c=[];for(let u=l;u<l+o;++u)c.push(u);i=dt(i,c)}return i.shape.length===1&&(i=Xt(i,1)),i})}var cA=class extends Al{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Ve("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new q(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new q(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>np(r,e[a].shape.length)):s=[np(this.axes,t.shape.length),np(this.axes,n.shape.length)],this.normalize&&(t=dm(t,s[0]),n=dm(n,s[1])),tW(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[np(this.axes,e.length),np(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Ve("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};cA.className="Dot";ue.registerClass(cA);var dA=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return j(()=>{this.invokeCallHook(e,t);let n=Ue(e);return Hd(()=>le(Jf(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};dA.className="GaussianNoise";ue.registerClass(dA);var pA=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return j(()=>{this.invokeCallHook(e,t);let n=Ue(e);return this.rate>0&&this.rate<1?Hd(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return B(n,Jf(n.shape,1,r))},()=>n,t.training||!1):n})}};pA.className="GaussianDropout";ue.registerClass(pA);var hA=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ue(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return j(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Hd(()=>{let r=Ue(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=Fo(zu(n),this.rate);l=Zf(l,"float32");let c=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-c*i*this.rate,d=le(B(r,l),B(le(l,-1),i));return le(B(d,c),u)},()=>Ue(e),t.training||!1)}return e})}};hA.className="AlphaDropout";ue.registerClass(hA);function sp(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=sv(e,t,n,s,r,a);else if(e.rank===3)o=rv(e,t,n,s,r,a);else if(e.rank===4)o=av(e,t,n,s,r,a);else throw new Ve(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function nW(e,t,n,s,r=.001){return j(()=>{let a=If(e,s),o=a.mean,i=a.variance;return[sp(e,o,i,n,t,r),o,i]})}function sW(e,t,n,s,r=.001){return j(()=>{let a=If(e,s),o=a.mean,i=a.variance,l=[];for(let f of gr(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let c=G(o,l),u=G(i,l),d=t==null?null:G(t,l),p=n==null?null:G(n,l);return[sp(e,c,u,p,d,r),o,i]})}function rW(e,t,n,s,r=.001){return v.arraysEqual(s.slice().sort(),gr(0,e.rank-1))?nW(e,t,n,s,r):sW(e,t,n,s,r)}var fA=class extends rt{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Pt(e.betaInitializer||"zeros"),this.gammaInitializer=Pt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Pt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Pt(e.movingVarianceInitializer||"ones"),this.betaConstraint=dn(e.betaConstraint),this.gammaConstraint=dn(e.gammaConstraint),this.betaRegularizer=Ot(e.betaRegularizer),this.gammaRegularizer=Ot(e.gammaRegularizer)}build(e){e=At(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new q(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new nn({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return j(()=>{let n=t.training==null?!1:t.training,s=Ue(e),r=s.shape,a=r.length,o=gr(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=cl(1,a);l[i]=r[i];let c=o.slice();c.sort();let u=!v.arraysEqual(c,gr(0,a).slice(0,a-1)),d=()=>{if(u){let y=G(this.movingMean.read(),l),A=G(this.movingVariance.read(),l),x=this.center?G(this.beta.read(),l):null,b=this.scale?G(this.gamma.read(),l):null;return sp(s,y,A,x,b,this.epsilon)}else return sp(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[p,h,f]=rW(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(y,A,x)=>{j(()=>{let b=1-x,w=y.read(),k=B(Ae(w,A),b);y.write(Ae(w,k))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Wt(this.betaInitializer),gammaInitializer:Wt(this.gammaInitializer),movingMeanInitializer:Wt(this.movingMeanInitializer),movingVarianceInitializer:Wt(this.movingVarianceInitializer),betaRegularizer:It(this.betaRegularizer),gammaRegularizer:It(this.gammaRegularizer),betaConstraint:cn(this.betaConstraint),gammaConstraint:cn(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};fA.className="BatchNormalization";ue.registerClass(fA);var mA=class extends rt{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Pt(e.betaInitializer||"zeros"),this.gammaInitializer=Pt(e.gammaInitializer||"ones"),this.betaRegularizer=Ot(e.betaRegularizer),this.gammaRegularizer=Ot(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=At(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Mo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=Ue(e),s=n.shape,r=s.length;return j(()=>{let a=!0,{mean:o,variance:i}=If(n,this.axis,a),l=cl(1,r);for(let f of this.axis)l[f]=s[f];let c=f=>f!=null&&f.shape.length!==r?G(f,l):f,u=c(this.gamma.read()),d=c(this.beta.read()),p=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(p.push(s[f]),h.push(1)):(p.push(1),h.push(s[f]));return o=_s(o,p),i=_s(i,p),u=_s(u,h),d=_s(d,h),sp(n,o,i,d,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Wt(this.betaInitializer),gammaInitializer:Wt(this.gammaInitializer),betaRegularizer:It(this.betaRegularizer),gammaRegularizer:It(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};mA.className="LayerNormalization";ue.registerClass(mA);function aW(e,t,n){return j(()=>{if(e.rank!==4)throw new q(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new q("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=fr()),n!=="channelsLast"&&n!=="channelsFirst")throw new q(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Fs(e,s)})}var gA=class extends rt{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?fr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new q(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new q(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new q(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new nn({ndim:4})]}computeOutputShape(e){e=At(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return j(()=>aW(Ue(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};gA.className="ZeroPadding2D";ue.registerClass(gA);function Sm(e,t,n,s,r,a){return j(()=>{Zt(r),gw(a),Ps(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=fr()),a==null&&(a="max"),e=My(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=Rd(e,t,n,i):o=Id(e,t,n,i),r==="channelsFirst"&&(o=et(o,[0,3,1,2])),o})}function Nk(e,t,n,s,r,a){return j(()=>{Zt(r),gw(a),Ps(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=fr()),a==null&&(a="max"),e=wk(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=C1(e,t,n,i):o=c1(e,t,n,i),r==="channelsFirst"&&(o=et(o,[0,4,1,2,3])),o})}var Ek=class extends rt{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new q(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(wn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new q(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);wn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Ps(this.padding),this.inputSpec=[new nn({ndim:3})]}computeOutputShape(e){e=At(e);let t=br(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return j(()=>{this.invokeCallHook(e,t),e=Ud(Ue(e),2);let n=this.poolingFunction(Ue(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return dt(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},yA=class extends Ek{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ps(s),Sm(e,t,n,s,r,"max")}};yA.className="MaxPooling1D";ue.registerClass(yA);var AA=class extends Ek{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ps(s),Sm(e,t,n,s,r,"avg")}};AA.className="AveragePooling1D";ue.registerClass(AA);var Rk=class extends rt{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new q(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];wn(this.poolSize,"poolSize"),wn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Zt(this.dataFormat),Ps(this.padding),this.inputSpec=[new nn({ndim:4})]}computeOutputShape(e){e=At(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=br(t,this.poolSize[0],this.padding,this.strides[0]),n=br(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return j(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xA=class extends Rk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ps(s),Sm(e,t,n,s,r,"max")}};xA.className="MaxPooling2D";ue.registerClass(xA);var bA=class extends Rk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ps(s),Sm(e,t,n,s,r,"avg")}};bA.className="AveragePooling2D";ue.registerClass(bA);var $k=class extends rt{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new q(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];wn(this.poolSize,"poolSize"),wn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Zt(this.dataFormat),Ps(this.padding),this.inputSpec=[new nn({ndim:5})]}computeOutputShape(e){e=At(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=br(t,this.poolSize[0],this.padding,this.strides[0]),n=br(n,this.poolSize[1],this.padding,this.strides[1]),s=br(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return j(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},vA=class extends $k{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ps(s),Nk(e,t,n,s,r,"max")}};vA.className="MaxPooling3D";ue.registerClass(vA);var wA=class extends $k{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Zt(r),Ps(s),Nk(e,t,n,s,r,"avg")}};wA.className="AveragePooling3D";ue.registerClass(wA);var Dk=class extends rt{constructor(e){super(e);this.inputSpec=[new nn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ve}},kA=class extends Dk{constructor(e){super(e||{})}call(e,t){return j(()=>{let n=Ue(e);return Bt(n,1)})}};kA.className="GlobalAveragePooling1D";ue.registerClass(kA);var IA=class extends Dk{constructor(e){super(e||{})}call(e,t){return j(()=>{let n=Ue(e);return Gn(n,1)})}};IA.className="GlobalMaxPooling1D";ue.registerClass(IA);var _k=class extends rt{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Zt(this.dataFormat),this.inputSpec=[new nn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ve}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},SA=class extends _k{call(e,t){return j(()=>{let n=Ue(e);return this.dataFormat==="channelsLast"?Bt(n,[1,2]):Bt(n,[2,3])})}};SA.className="GlobalAveragePooling2D";ue.registerClass(SA);var CA=class extends _k{call(e,t){return j(()=>{let n=Ue(e);return this.dataFormat==="channelsLast"?Gn(n,[1,2]):Gn(n,[2,3])})}};CA.className="GlobalMaxPooling2D";ue.registerClass(CA);var Fk=class extends rt{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=xr(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},TA=class extends Fk{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=At(e),e.length<3)throw new q(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=At(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return j(()=>(e=Ue(e),Ck((a,o)=>[Ue(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};TA.className="TimeDistributed";ue.registerClass(TA);function oW(e){pl(pL,"BidirectionalMergeMode",e)}var iW="concat",NA=class extends Fk{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xr(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=xr(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?iW:e.mergeMode,oW(this.mergeMode),e.weights)throw new Ve("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):cs(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=Sk(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new q("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(u=>new nn({shape:u.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),o.push(...c)}if(s!=null)throw new Ve("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof Ar;for(let l of a)if(l instanceof Ar!==i)throw new q("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return j(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=ws(r,1));let o;return this.mergeMode==="concat"?o=ny([s,r]):this.mergeMode==="sum"?o=le(s,r):this.mergeMode==="ave"?o=B(.5,le(s,r)):this.mergeMode==="mul"?o=B(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){hl(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),hl(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=xr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Ve("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};NA.className="Bidirectional";ue.registerClass(NA);function lW(e){return new ju(e)}function uW(e){return new Fy(e)}function cW(e){return new $y(e)}function dW(e){return new Dy(e)}function pW(e){return new _y(e)}function hW(e){return new Oy(e)}function fW(e){return new Py(e)}function mW(e){return new xm(e)}function gW(e){return new Jd(e)}function yW(e){return new Ly(e)}function AW(e){return new Qd(e)}function xW(e){return new By(e)}function bW(e){return new Wy(e)}function vW(e){return new Vy(e)}function wW(e){return new Uy(e)}function kW(e){return new Gy(e)}function IW(e){return new Jy(e)}function SW(e){return new Zy(e)}function CW(e){return new Im(e)}function TW(e){return new Ky(e)}function NW(e){return new Yy(e)}function EW(e){return new Qy(e)}function RW(e){return new eA(e)}function $W(e){return new tA(e)}function DW(e){return new sA(e)}function _W(e){return new rA(e)}function FW(e){return new oA(e)}function PW(e){return new uA(e)}function OW(e){return new iA(e)}function MW(e){return new lA(e)}function zW(e){return new aA(e)}function LW(e){return new cA(e)}function BW(e){return new fA(e)}function WW(e){return new mA(e)}function VW(e){return new gA(e)}function EA(e){return new AA(e)}function UW(e){return EA(e)}function GW(e){return EA(e)}function RA(e){return new bA(e)}function HW(e){return RA(e)}function jW(e){return RA(e)}function $A(e){return new wA(e)}function qW(e){return $A(e)}function XW(e){return $A(e)}function KW(e){return new kA(e)}function ZW(e){return new SA(e)}function Pk(e){return new IA(e)}function Ok(e){return new CA(e)}function Mk(e){return new yA(e)}function zk(e){return new xA(e)}function YW(e){return new vA(e)}function JW(e){return new jy(e)}function QW(e){return new vm(e)}function eV(e){return new qy(e)}function tV(e){return new tp(e)}function nV(e){return new Hy(e)}function sV(e){return new bm(e)}function rV(e){return new Xy(e)}function aV(e){return new km(e)}function oV(e){return new Br(e)}function iV(e){return new wm(e)}function lV(e){return new NA(e)}function uV(e){return new TA(e)}var cV=Pk,dV=Ok,pV=Mk,hV=zk;function fV(e){return new dA(e)}function mV(e){return new pA(e)}function gV(e){return new hA(e)}function yV(e){return new nA(e)}var Lk={};ze(Lk,{MAPE:()=>NV,MSE:()=>$V,binaryAccuracy:()=>AV,binaryCrossentropy:()=>xV,categoricalAccuracy:()=>vV,categoricalCrossentropy:()=>wV,cosineProximity:()=>SV,mape:()=>EV,meanAbsoluteError:()=>CV,meanAbsolutePercentageError:()=>TV,meanSquaredError:()=>RV,mse:()=>DV,precision:()=>kV,recall:()=>IV,sparseCategoricalAccuracy:()=>bV});function AV(e,t){return yy(e,t)}function xV(e,t){return Ww(e,t)}function bV(e,t){return Vw(e,t)}function vV(e,t){return Ay(e,t)}function wV(e,t){return xy(e,t)}function kV(e,t){return Bw(e,t)}function IV(e,t){return iB(e,t)}function SV(e,t){return my(e,t)}function CV(e,t){return pm(e,t)}function TV(e,t){return Xu(e,t)}function NV(e,t){return Xu(e,t)}function EV(e,t){return Xu(e,t)}function RV(e,t){return ml(e,t)}function $V(e,t){return ml(e,t)}function DV(e,t){return ml(e,t)}var Bk={};ze(Bk,{modelFromJSON:()=>WB});var Wk={};ze(Wk,{l1:()=>FV,l1l2:()=>_V,l2:()=>PV});function _V(e){return new Zd(e)}function FV(e){return KB(e)}function PV(e){return ZB(e)}var Vk=class extends qu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof ba))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Cm(e,t){return e<t}function Uk(e,t){return e>t}var Gk=class extends Vk{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Ve("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Cm:this.mode==="max"?this.monitorFunc=Uk:this.monitor.indexOf("acc")!==-1?this.monitorFunc=Uk:this.monitorFunc=Cm,this.monitorFunc===Cm&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Cm?1/0:-1/0}async onEpochEnd(e,t){await Bo(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function OV(e){return new Gk(e)}var MV={earlyStopping:OV},vr;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(vr||(vr={}));var Hk;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Hk||(Hk={}));var DA={};function zV(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};DA[e]=n}function jk(e){return DA[e]}function LV(e){delete DA[e]}function I(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return qn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(p=>qn(p,n,s,r));let c=qn(t.inputNames.slice(i)[0],n,s,r),u=c.dataSync();return a.type==="number"?u[0]:v.toNestedArray(c.shape,u)}let o=t.attrParams[e];return o&&o.value}function qn(e,t,n,s){let[r,a]=ks(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[Tm(r,i)]);return o!==void 0?t[Tm(r,o)][a]:void 0}function BV(e,t,n){return t[Tm(e,n.currentContextId)]}function va(e,t){let[n,s,r]=ks(e);return[Tm(n,t&&t.currentContextId),s,r]}function Tm(e,t){return t?`${e}-${t}`:e}function ks(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function Nm(e,t,n){let s=I("pad",e,t,n);if(s==="explicit"){s=I("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function wa(e){return e.kept?e:cr(e)}var qk={};ze(qk,{json:()=>WV});var WV=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Xk={};ze(Xk,{json:()=>VV});var VV=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Kk={};ze(Kk,{json:()=>UV});var UV=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Zk={};ze(Zk,{json:()=>GV});var GV=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Yk={};ze(Yk,{json:()=>HV});var HV=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Jk={};ze(Jk,{json:()=>jV});var jV=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Qk={};ze(Qk,{json:()=>qV});var qV=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],eI={};ze(eI,{json:()=>XV});var XV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],tI={};ze(tI,{json:()=>KV});var KV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],nI={};ze(nI,{json:()=>ZV});var ZV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],sI={};ze(sI,{json:()=>YV});var YV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],rI={};ze(rI,{json:()=>JV});var JV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],aI={};ze(aI,{json:()=>QV});var QV=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],oI={};ze(oI,{json:()=>eU});var eU=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],iI={};ze(iI,{json:()=>tU});var tU=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],lI={};ze(lI,{json:()=>nU});var nU=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],uI={};ze(uI,{json:()=>sU});var sU=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],cI={};ze(cI,{json:()=>rU});var rU=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],dI={};ze(dI,{json:()=>aU});var aU=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],pI=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[qk,Xk,Kk,Zk,Yk,Jk,Qk,eI,tI,nI,sI,rI,aI,oI,iI,lI,uI,cI,dI],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],c={},u={};t!=null&&(c=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let d=Object.keys(o);d.forEach(f=>{let m=o[f];m.inputNames.forEach((g,y)=>{let[A,,x]=va(g),b=o[A];if(b.outputs!=null){let w=b.outputs.indexOf(x);if(w!==-1){let k=`${A}:${w}`;m.inputNames[y]=k}}m.inputs.push(b),b.children.push(m)})}),Object.keys(u).length===0?d.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(u).forEach(f=>{let[m]=va(f),g=o[m];g!=null&&(g.signatureKey=u[f],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(f=>{let[m]=va(f),g=o[m];g&&(g.signatureKey=c[f],i.push(g))}):i=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=jk(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.substr(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=_A(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=_A(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=WA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=WA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=PA(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=PA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=BA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=BA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=FA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=FA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=UA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=UA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=LA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=LA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=VA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=VA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=MA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=MA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=zA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=zA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=fI(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=fI(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&s.push(u[d.name]),u),{}));let a=[],o=[];e.signature.inputArg.forEach(u=>{let[d]=va(u.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:OA(u.type),type:"dtype"}},children:[]};p.signatureKey=u.name,a.push(p),r[d]=p}),Object.keys(r).forEach(u=>{let d=r[u];d.inputNames.forEach((p,h)=>{let[f,,m]=va(p),g=r[f];if(g.outputs!=null){let y=g.outputs.indexOf(m);if(y!==-1){let A=`${f}:${y}`;d.inputNames[h]=A}}d.inputs.push(g),g.children.push(d)})});let l=e.ret;e.signature.outputArg.forEach(u=>{let[d,p]=va(l[u.name]),h=r[d];h!=null&&(h.defaultOutput=p,o.push(h))});let c=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function oU(e){let t=K().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function hI(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):oU(e);return t?n:n.toLowerCase()}function _A(e,t,n,s=!1){let r=e[t];return r!=null?hI(r.s,s):n}function FA(e,t,n){let s=e[t];return s?s.b:n}function PA(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function OA(e){switch(typeof e=="string"&&(e=vr[e]),e){case vr.DT_FLOAT:return"float32";case vr.DT_INT32:case vr.DT_INT64:case vr.DT_INT8:case vr.DT_UINT8:return"int32";case vr.DT_BOOL:return"bool";case vr.DT_DOUBLE:return"float32";case vr.DT_STRING:return"string";default:return null}}function fI(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function MA(e,t,n){let s=e[t];return s&&s.type?OA(s.type):n}function zA(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>OA(r)):n}function mI(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function LA(e,t,n){let s=e[t];return s&&s.shape?mI(s.shape):n}function BA(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function WA(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>hI(a,s)):n}function VA(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>mI(r)):n}function UA(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var iU=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return qn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return qn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return PA(this.node.rawAttrs,e,t);if(n.s!=null)return _A(this.node.rawAttrs,e,t);if(n.b!=null)return FA(this.node.rawAttrs,e,t);if(n.shape!=null)return LA(this.node.rawAttrs,e,t);if(n.type!=null)return MA(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return BA(this.node.rawAttrs,e,t);if(n.list.s!=null)return WA(this.node.rawAttrs,e,t);if(n.list.shape!=null)return VA(this.node.rawAttrs,e,t);if(n.list.b!=null)return UA(this.node.rawAttrs,e,t);if(n.list.type!=null)return zA(this.node.rawAttrs,e,t)}return t}},lU=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[le(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[pf(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[N1(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[B(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[fe(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[y1(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[df(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[Ae(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[Mu(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[Pr(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[ma(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[Ff(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},uU=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[en(I("x",e,t,n))];case"Acos":return[e1(I("x",e,t,n))];case"Acosh":return[t1(I("x",e,t,n))];case"Asin":return[s1(I("x",e,t,n))];case"Asinh":return[r1(I("x",e,t,n))];case"Atan":return[a1(I("x",e,t,n))];case"Atan2":return[o1(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[i1(I("x",e,t,n))];case"Ceil":return[p1(I("x",e,t,n))];case"Complex":return[Eo(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[Cd(I("x",e,t,n))];case"Cosh":return[yf(I("x",e,t,n))];case"Elu":return[Fu(I("x",e,t,n))];case"Erf":return[A1(I("x",e,t,n))];case"Exp":return[As(I("x",e,t,n))];case"Expm1":return[x1(I("x",e,t,n))];case"Floor":return[Ou(I("x",e,t,n))];case"Log":return[xs(I("x",e,t,n))];case"Log1p":return[Nd(I("x",e,t,n))];case"Imag":return[xf(I("x",e,t,n))];case"Neg":return[Ft(I("x",e,t,n))];case"Reciprocal":return[$1(I("x",e,t,n))];case"Real":return[Fd(I("x",e,t,n))];case"Relu":return[pr(I("x",e,t,n))];case"Round":return[Tf(I("x",e,t,n))];case"Selu":return[Ef(I("x",e,t,n))];case"Sigmoid":return[is(I("x",e,t,n))];case"Sin":return[Rf(I("x",e,t,n))];case"Sign":return[_1(I("x",e,t,n))];case"Sinh":return[$f(I("x",e,t,n))];case"Softplus":return[rl(I("x",e,t,n))];case"Sqrt":return[Nn(I("x",e,t,n))];case"Square":return[vt(I("x",e,t,n))];case"Tanh":return[tl(I("x",e,t,n))];case"Tan":return[O1(I("x",e,t,n))];case"ClipByValue":return[ls(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[Cf(I("x",e,t,n))];case"Rsqrt":return[Nf(qn(e.inputNames[0],t,n))];case"Prod":return[Sf(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[Td(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[_d(I("x",e,t,n),I("alpha",e,t,n))];case"IsNan":return[v1(qn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function er(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];v.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function gI(e){return!(typeof e=="number"||e.some(t=>t<0))}function rp(e,t,n){let s=GA(e,n),r=!gI(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=GA(a.shape,s)}),!gI(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function GA(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var cU=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ee(0),bn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),er(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,bn(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return qt([],[0].concat(this.elementShape));let n=this.readMany(e);return er(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),En(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return qt([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return er(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),kt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Hn(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];j(()=>{t=G(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],c=[0,l,0],u=[1,e[i],r];a[i]=G(De(t,c,u),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},ap=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);er(t,r.shape,"TensorList shape mismatch: "),bn(r)}),this.idTensor=Ee(0),this.maxNumElements=s,bn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ap([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);er(e,this.elementShape,"TensorList shape mismatch: ");let s=rp(this.elementShape,this.tensors,e);return j(()=>{let r=this.tensors.map(a=>G(a,s));return En(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=rp(this.elementShape,this.tensors,e),s=this.tensors.pop();return er(s.shape,e,"TensorList shape mismatch: "),G(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(er(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");bn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);er(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=rp(this.elementShape,this.tensors,t);return G(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);er(this.elementShape,t.shape,"TensorList shape mismatch: "),bn(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);er(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=rp(this.elementShape,this.tensors,n);return e.length===0?qt([],[0].concat(s)):j(()=>{let r=e.map(a=>G(this.tensors[a],s));return En(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);er(this.elementShape,t,"TensorList shape mismatch: ");let n=rp(this.elementShape,this.tensors,t);return this.size()===0?qt([],[0].concat(n)):j(()=>{let s=this.tensors.map(r=>G(r,n));return kt(s,0)})}};function dU(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);er(r,t,"TensorList shape mismatch: ");let a=Hn(e);return new ap(a,t,s)}function pU(e,t,n){return new ap([],e,t,n)}function hU(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new ap([],n,e.dtype,s),o=Hn(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function fU(e,t,n){let s=0,r=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=GA(a,n),i=s===0?0:e.size/s,l=j(()=>{let u=[];e=G(e,[1,s,i]);for(let d=0;d<t.length;++d){let p=d===0?0:r[d-1],h=[0,p,0],f=[1,t[d],i];u[d]=G(De(e,h,f),o)}return e.dispose(),u}),c=new ap([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}var mU=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=I("thenBranch",e,t,n),r=I("elseBranch",e,t,n),a=I("cond",e,t,n),o=I("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=I("body",e,t,n),r=I("cond",e,t,n),a=I("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(u=>u.id),l=await o[0].data();o.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let c=a;for(;l[0];){let u=c;c=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let d=c.map(h=>h.id);u.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});let p=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await p[0].data(),p.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{let s=I("pred",e,t,n);return[wa(s)]}case"Switch":{let s=I("pred",e,t,n),r=I("data",e,t,n);return r.kept||(r=wa(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>qn(r,t,n)!==void 0);if(s){let r=qn(s,t,n);return[wa(r)]}return}case"Enter":{let s=I("frameName",e,t,n),r=I("tensor",e,t,n);return n.enterFrame(s),[wa(r)]}case"Exit":{let s=I("tensor",e,t,n);return n.exitFrame(),[wa(s)]}case"NextIteration":{let s=I("tensor",e,t,n);return n.nextIteration(),[wa(s)]}case"TensorArrayV3":{let s=I("size",e,t,n),r=I("dtype",e,t,n),a=I("elementShape",e,t,n),o=I("dynamicSize",e,t,n),i=I("clearAfterRead",e,t,n),l=I("identicalElementShapes",e,t,n),c=I("name",e,t,n),u=new cU(c,r,s,a,l,o,i);return n.addTensorArray(u),[u.idTensor,Ee(1)]}case"TensorArrayWriteV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=I("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=I("tensorArrayId",e,t,n),r=I("tensor",e,t,n),a=I("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ee(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=I("indices",e,t,n),r=I("tensor",e,t,n),a=I("elementShape",e,t,n),o=I("numElements",e,t,n),i=hU(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=I("elementShape",e,t,n),r=I("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=I(a,e,t,n),i=pU(s,r,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let s=I("tensorListId",e,t,n),r=I("indices",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=I("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=dU(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let s=I("tensorListId",e,t,n),r=n.getTensorList(s.id),a=I("dtype",e,t,n),o=I("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=I("tensorListId",e,t,n),r=I("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("lengths",e,t,n),o=fU(s,a,r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function yI(e,t,n){let[s,r]=I("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",c=I("numArgs",e,t,n);if(a){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=I("strides",e,t,n),d=Nm(e,t,n),p=I("dataFormat",e,t,n).toUpperCase(),h=I("dilations",e,t,n),[f,m]=I("args",e,t,n);o&&(m=f,f=void 0);let g=I("leakyreluAlpha",e,t,n);return{stride:u,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var gU=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=I("stride",e,t,n),r=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilation",e,t,n);return[mf(I("x",e,t,n),I("filter",e,t,n),s,r,a,o)]}case"Conv2D":{let s=I("strides",e,t,n),r=Nm(e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[fa(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2]],r,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=yI(e,t,n);return[Oo.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=yI(e,t,n);return[Oo.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=I("outputShape",e,t,n),r=I("strides",e,t,n),a=Nm(e,t,n);return[gf(I("x",e,t,n),I("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=I("strides",e,t,n),r=Nm(e,t,n),a=I("dilations",e,t,n),o=I("dataFormat",e,t,n).toUpperCase();return[_u(I("input",e,t,n),I("filter",e,t,n),[s[1],s[2]],r,o,[a[1],a[2]])]}case"Conv3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[f1(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2],s[3]],r,a,[o[1],o[2],o[3]])]}case"AvgPool":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Id(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[Rd(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n),o=I("includeBatchInIndex",e,t,n),{result:i,indexes:l}=Iv(I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,o);return[i,l]}case"AvgPool3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[c1(I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("kernelSize",e,t,n);return[C1(I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=I("strides",e,t,n),r=I("pad",e,t,n),a=I("dilations",e,t,n),o=s[1],i=s[2],l=a[1],c=a[2];return[g1(I("x",e,t,n),I("filter",e,t,n),[o,i],r,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},yU=(e,t,n)=>{switch(e.op){case"Fill":{let s=I("shape",e,t,n),r=I("dtype",e,t,n),a=I("value",e,t,n);return[Pu(s,a,r)]}case"LinSpace":{let s=I("start",e,t,n),r=I("stop",e,t,n),a=I("num",e,t,n);return[yv(s,r,a)]}case"Multinomial":{let s=I("logits",e,t,n),r=I("numSamples",e,t,n),a=I("seed",e,t,n);return[Sv(s,r,a)]}case"OneHot":{let s=I("indices",e,t,n),r=I("depth",e,t,n),a=I("onValue",e,t,n),o=I("offValue",e,t,n);return[Nu(s,r,a,o)]}case"Ones":return[bs(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[vs(I("x",e,t,n))];case"RandomUniform":return[zu(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let s=I("start",e,t,n),r=I("stop",e,t,n),a=I("step",e,t,n);return[Lu(s,r,a,I("dtype",e,t,n))]}case"TruncatedNormal":{let s=I("shape",e,t,n),r=I("mean",e,t,n),a=I("stdDev",e,t,n),o=I("seed",e,t,n);return[Pf(s,r,a,I("dtype",e,t,n),o)]}case"Zeros":return[Kt(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[tt(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function HA(e,t,n){let s=I("boxes",e,t,n),r=I("scores",e,t,n),a=I("maxOutputSize",e,t,n),o=I("iouThreshold",e,t,n),i=I("scoreThreshold",e,t,n),l=I("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var AU=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=HA(e,t,n),c=await $e.nonMaxSuppressionWithScoreAsync(s,r,a,o,i,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=HA(e,t,n),l=I("padToMaxOutputSize",e,t,n),c=await $e.nonMaxSuppressionPaddedAsync(s,r,a,o,i,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=HA(e,t,n);return[await $e.nonMaxSuppressionAsync(s,r,a,o,i)]}case"Where":{let s=de(I("condition",e,t,n),"bool"),r=[await L1(s)];return s.dispose(),r}case"ListDiff":return Nv(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},xU=(e,t,n)=>{switch(e.op){case"TopKV2":{let s=I("x",e,t,n),r=I("k",e,t,n),a=I("sorted",e,t,n),o=M1(s,r,a);return[o.values,o.indices]}case"Unique":{let s=I("x",e,t,n),r=Of(s);return[r.values,r.indices]}case"UniqueV2":{let s=I("x",e,t,n),r=I("axis",e,t,n),a=Of(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},bU=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=I("default",e,t,n);return[qn(e.name,t,n)||s];case"Placeholder":return[qn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=I("x",e,t,n);return[wa(c)]}case"IdentityN":return I("x",e,t,n).map(c=>wa(c));case"Snapshot":let r=I("x",e,t,n);return[wa(r)];case"Shape":return[tn(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map(c=>tn(c.shape));case"Size":return[Ee(I("x",e,t,n).size,"int32")];case"Rank":return[Ee(I("x",e,t,n).rank,"int32")];case"NoOp":return[Ee(1)];case"Print":let a=I("x",e,t,n),o=I("data",e,t,n),i=I("message",e,t,n),l=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vU=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ee(0),this.tensorMap=new Map,bn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ee(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),j(()=>{let s=Hn(t),r=n.length,a=s.length;v.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];bn(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return j(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return En(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},wU=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=I("keyDType",e,t,n),a=I("valueDType",e,t,n),o=new vU(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),o=I("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),o=I("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=I("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},kU=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=I("images",e,t,n),r=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[$e.resizeBilinear(s,[r[0],r[1]],a,o)]}case"ResizeNearestNeighbor":{let s=I("images",e,t,n),r=I("size",e,t,n),a=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[$e.resizeNearestNeighbor(s,[r[0],r[1]],a,o)]}case"CropAndResize":{let s=I("image",e,t,n),r=I("boxes",e,t,n),a=I("boxInd",e,t,n),o=I("cropSize",e,t,n),i=I("method",e,t,n),l=I("extrapolationValue",e,t,n);return[$e.cropAndResize(s,r,a,o,i,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},IU=(e,t,n)=>{switch(e.op){case"Equal":return[ys(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[ol(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[us(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[Fo(I("a",e,t,n),I("b",e,t,n))];case"Less":return[bf(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[Po(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[Ks(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[Ed(I("a",e,t,n))];case"LogicalOr":return[kf(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[zn(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},SU=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Xe(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Einsum":return[fv(I("equation",e,t,n),...I("tensors",e,t,n))];case"Transpose":return[et(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[s,r]=I("fusedOps",e,t,n),a=s==="biasadd",o=r==="prelu",i=I("numArgs",e,t,n),l=I("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,u]=I("args",e,t,n);return[Oo.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},CU=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[nl(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"FusedBatchNormV3":return[nl(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[w1(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[il(I("x",e,t,n))];case"LogSoftmax":return[wf(I("x",e,t,n))];case"SparseToDense":return[B1(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},TU=(e,t,n)=>{switch(e.op){case"Max":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Gn(I("x",e,t,n),o,i)]}case"Mean":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Bt(I("x",e,t,n),o,i)]}case"Min":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[$d(I("x",e,t,n),o,i)]}case"Sum":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Ie(I("x",e,t,n),o,i)]}case"All":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[hf(I("x",e,t,n),o,i)]}case"Any":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[wd(I("x",e,t,n),o,i)]}case"ArgMax":{let o=I("axis",e,t,n);return[Ds(I("x",e,t,n),o)]}case"ArgMin":{let o=I("axis",e,t,n);return[n1(I("x",e,t,n),o)]}case"Prod":{let o=I("axis",e,t,n),i=I("keepDims",e,t,n);return[Sf(I("x",e,t,n),o,i)]}case"Cumsum":{let o=I("axis",e,t,n),i=I("exclusive",e,t,n),l=I("reverse",e,t,n);return[Af(I("x",e,t,n),o,i,l)]}case"Bincount":let s=I("x",e,t,n),r=I("weights",e,t,n),a=I("size",e,t,n);return[d1(s,r,a)];case"DenseBincount":{let o=I("x",e,t,n),i=I("weights",e,t,n),l=I("size",e,t,n),c=I("binaryOutput",e,t,n);return[pv(o,i,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},NU=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=I("n",e,t,n),r=I("axis",e,t,n),a=I("tensors",e,t,n);return a=a.slice(0,s),[kt(a,r)]}case"Gather":{let s=I("x",e,t,n),r=I("indices",e,t,n);return[sl(s,de(r,"int32"),0)]}case"GatherV2":{let s=I("axis",e,t,n),r=I("batchDims",e,t,n),a=I("x",e,t,n),o=I("indices",e,t,n);return[sl(a,de(o,"int32"),s,r)]}case"Reverse":{let s=I("dims",e,t,n),r=[];for(let o=0;o<s.length;o++)s[o]&&r.push(o);let a=I("x",e,t,n);return[ws(a,r)]}case"ReverseV2":{let s=I("axis",e,t,n),r=I("x",e,t,n);return[ws(r,s)]}case"Slice":{let s=I("begin",e,t,n),r=I("size",e,t,n);return[De(I("x",e,t,n),s,r)]}case"StridedSlice":{let s=I("begin",e,t,n),r=I("end",e,t,n),a=I("strides",e,t,n),o=I("beginMask",e,t,n),i=I("endMask",e,t,n),l=I("ellipsisMask",e,t,n),c=I("newAxisMask",e,t,n),u=I("shrinkAxisMask",e,t,n),d=I("x",e,t,n);return[P1(d,s,r,a,o,i,l,c,u)]}case"Pack":return j(()=>{let s=I("axis",e,t,n),r=I("tensors",e,t,n),a=r[0].shape,o=dt(r[0]).shape,i=r.map(l=>{let c=v.arraysEqual(l.shape,a);if(!c&&!v.arraysEqual(dt(l).shape,o))throw new Error("the input tensors shape does not match");return c?l:G(l,a)});return[En(i,s)]});case"Unpack":{let s=I("axis",e,t,n),r=I("tensor",e,t,n);return Hn(r,s)}case"Tile":{let s=I("reps",e,t,n);return[_s(I("x",e,t,n),s)]}case"Split":case"SplitV":{let s=I("axis",e,t,n),r=I("numOrSizeSplits",e,t,n),a=I("x",e,t,n);return vn(a,r,s)}case"ScatterNd":{let s=I("indices",e,t,n),r=I("values",e,t,n),a=I("shape",e,t,n);return[Dv(s,r,a)]}case"GatherNd":{let s=I("x",e,t,n),r=I("indices",e,t,n);return[_v(s,r)]}case"SparseToDense":{let s=I("sparseIndices",e,t,n),r=I("outputShape",e,t,n),a=I("sparseValues",e,t,n),o=I("defaultValue",e,t,n);return[B1(s,a,r,a.dtype===o.dtype?o:de(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},EU=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:o}=zd.sparseFillEmptyRows(I("indices",e,t,n),I("values",e,t,n),I("denseShape",e,t,n),I("defaultValue",e,t,n));return[s,r,a,o]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=zd.sparseReshape(I("inputIndices",e,t,n),I("inputShape",e,t,n),I("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[zd.sparseSegmentMean(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];case"SparseSegmentSum":return[zd.sparseSegmentSum(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},RU=(e,t,n)=>{switch(e.op){case"FFT":return[Od(I("x",e,t,n))];case"IFFT":return[Wu(I("x",e,t,n))];case"RFFT":return[Md(I("x",e,t,n))];case"IRFFT":return[_f(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},$U=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=Vf.stringNGrams(I("data",e,t,n),I("dataSplits",e,t,n),I("separator",e,t,n),I("nGramWidths",e,t,n),I("leftPad",e,t,n),I("rightPad",e,t,n),I("padWidth",e,t,n),I("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=Vf.stringSplit(I("input",e,t,n),I("delimiter",e,t,n),I("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[Vf.stringToHashBucketFast(I("input",e,t,n),I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},DU=(e,t,n)=>{switch(e.op){case"Cast":return[de(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let s=I("axis",e,t,n);return[Xt(I("x",e,t,n),s)]}case"Squeeze":{let s=I("axis",e,t,n);return[dt(I("x",e,t,n),s)]}case"Reshape":return[G(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[T1(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[Fs(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let s=I("blockShape",e,t,n),r=I("paddings",e,t,n);return[Dd(I("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=I("blockShape",e,t,n),r=I("crops",e,t,n);return[Sd(I("x",e,t,n),s,r)]}case"DepthToSpace":{let s=I("blockSize",e,t,n),r=I("dataFormat",e,t,n).toUpperCase();return[m1(I("x",e,t,n),s,r)]}case"BroadcastTo":return[$u(I("x",e,t,n),I("shape",e,t,n))];case"BroadcastArgs":return[ov(I("s0",e,t,n),I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function AI(e,t,n,s){let r=((a,o,i)=>{switch(a.category){case"arithmetic":return j(()=>lU(a,o,i));case"basic_math":return j(()=>uU(a,o,i));case"control":return mU(a,o,i);case"convolution":return j(()=>gU(a,o,i));case"creation":return j(()=>yU(a,o,i));case"dynamic":return AU(a,o,i);case"evaluation":return j(()=>xU(a,o,i));case"image":return j(()=>kU(a,o,i));case"graph":return j(()=>bU(a,o,i));case"logical":return j(()=>IU(a,o,i));case"matrices":return j(()=>SU(a,o,i));case"normalization":return j(()=>CU(a,o,i));case"reduction":return j(()=>TU(a,o,i));case"slice_join":return j(()=>NU(a,o,i));case"sparse":return j(()=>EU(a,o,i));case"spectral":return j(()=>RU(a,o,i));case"string":return j(()=>$U(a,o,i));case"transformation":return j(()=>DU(a,o,i));case"hash_table":return wU(a,o,i,s);case"custom":let l=jk(a.op);if(l&&l.customExecutor)return l.customExecutor(new iU(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var xI=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function bI(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,c=Object.keys(e).map(p=>ks(p)[0]),u=[];s!=null&&(u=s.map(p=>ks(p.name)[0]));let d=[...t];for(;d.length>0;){let p=d.pop();if((vI(p)||MU(p)||zU(p))&&o==null&&(o=p,i=o.children.map(h=>h.name).filter(h=>r.has(h))),r.add(p.name),n[p.name]==null&&c.indexOf(p.name)===-1&&u.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),d.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function _U(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(u=>ks(u)[0]).map(u=>e.nodes[u]),i=e.initNodes;o.forEach(u=>{s.has(u.name)&&a.push(u)}),e.weights.forEach(u=>{s.has(u.name)&&a.push(u)}),i!=null&&i.forEach(u=>{s.has(u.name)&&a.push(u)});let l=new Set,c=[];for(;a.length>0;){let u=a.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(d=>{!l.has(d.name)&&s.has(d.name)&&d.inputs.every(p=>l.has(p.name))&&a.push(d)})}return c}var FU=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],PU=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],OU=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function vI(e){return FU.indexOf(e.op)>=0}function MU(e){return PU.indexOf(e.op)>=0}function zU(e){return OU.indexOf(e.op)>=0}var jA=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new jA(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=bI(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return _U(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(u=>this.graph.nodes[ks(u)[0]]),r=t.map(u=>ks(u)[0]),a=r.map(u=>this.graph.nodes[u]);a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},c={};return j(()=>{let u=new xI(this.weightMap,l,c,this.functionExecutorMap),d=Object.assign({},this.weightMap);Object.keys(e).forEach(f=>{let[m,g]=ks(f),y=[];y[g]=e[f],d[m]=y});let p=this.getFrozenTensorIds(d),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!d[m.name]){let g=AI(m,d,u,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,u,p,r,h)}}return this.parent==null&&u.dispose(p),t.map(f=>qn(f,d,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=BV(i.name,n,s);l!=null&&l.forEach(c=>{if(c&&!c.kept&&!r.has(c.id)){let u=o[c.id];u===1?(c.dispose(),delete o[c.id]):u!=null&&o[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let a=new xI(this.weightMap,s,r,this.functionExecutorMap),o=await this.executeWithControlFlow(e,a,t,n),i=t.map(d=>qn(d,o,a)),l=i.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),u=new Set([...l,...c,...this.weightIds]);return Object.keys(o).forEach(d=>{o[d].forEach(h=>{h&&!h.kept&&!h.isDisposed&&!u.has(h.id)&&h.dispose()})}),this.parent==null&&a.dispose(u),i}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(A=>this.graph.nodes[ks(A)[0]]),o=n.map(A=>ks(A)[0]),i=o.map(A=>this.graph.nodes[A]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:u,syncInputs:d}=bI(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(A=>({node:A,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(A=>{let[x,b]=ks(A),w=[];w[b]=e[A],h[x]=w});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let A=this.processStack(a,p,t,h,g,m,o,f,l);await Promise.all(A)}u==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=i.filter(A=>!vI(A)&&!qn(A.name,h,t)).map(A=>A.name);if(y.length>0){let A="";throw u!=null&&(A=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${A}`)}return h}processStack(e,t,n,s,r,a,o,i,l){let c=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let d="";if(u.node.op==="Enter"&&I("isConstant",u.node,s,n)&&([d]=va(u.node.name,n)),s[u.node.name]==null){let p=AI(u.node,s,n,this._resourceManager);d||([d]=va(u.node.name,n));let h=n.currentContext;v.isPromise(p)?c.push(p.then(f=>(s[d]=f,n.currentContext=h,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l),f))):(s[d]=p,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l))}else this.processChildNodes(u.node,t,n,s,r,l)}return c}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=va(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!qn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!qn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=ks(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);v.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&v.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=ks(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=ks(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},LU=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},BU="?tfjs-format=file",WU="model.json",wI=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new LU}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=as.browserHTTPRequest(e,this.loadOptions);else{let t=as.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(as.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=as.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new jA(pI.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=pI.Instance.transformGraph(e.modelInitializer);this.initializer=new jA(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=as.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ze)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function at(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${WU}${BU}`);let n=new wI(e,t);return await n.load(),n}var VU="3.10.0",kI={};ze(kI,{CSVDataset:()=>PI,Dataset:()=>Ju,FileDataSource:()=>VI,TextLineDataset:()=>DI,URLDataSource:()=>UI,array:()=>dG,csv:()=>wG,func:()=>kG,generator:()=>IG,microphone:()=>CG,version_data:()=>TG,webcam:()=>SG,zip:()=>pG});var UU=ci(M5()),GU=ci(M5());function HU(e,t){return Em(e,t)}function Em(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(Yu(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=Em(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function jU(e,t=SI){return II(e,t)}function II(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(Yu(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(c=>c[o]),l=II(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function SI(e){return e===null?null:Yu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function CI(e,t){let n=new Map;Em(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let o=await a;n.set(r,o)}}return Em(e,t,n)}function Yu(e){let t=!1;if(K().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=z5();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Ze)&&!(e instanceof Promise)&&!t)}function qU(e){return e==null||XU(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Ze||v.isTypedArray(e)}function XU(e){return e===null||typeof e!="object"&&typeof e!="function"}function KU(e){return HU(e,ZU)}function ZU(e){return e instanceof Ze?{value:e.clone(),recurse:!1}:Yu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var TI=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},qA=class extends TI{constructor(){super(qA.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};qA.INITIAL_CAPACITY=32;function NI(e){return new QU(e)}function XA(e){return new eG(e)}function YU(e,t){return new RI(e,t)}function JU(e,t=Go.FAIL){return new uG(e,t)}var kn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new iG(this,e)}filter(e){return new aG(this,e)}map(e){return new oG(this,e)}mapAsync(e){return new EI(this,e)}serialMapAsync(e){return new EI(this,e).serial()}flatmap(e){return new lG(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new rG(this,e,t)}columnMajorBatch(e,t=!0,n=SI){return this.rowMajorBatch(e,t).map(r=>jU(r,n))}concatenate(e,t){return new RI(NI([this,e]),t)}take(e){return e<0||e==null?this:new sG(this,e)}skip(e){return e<0||e==null?this:new nG(this,e)}prefetch(e){return new $I(this,e)}shuffle(e,t){return new cG(this,e,t)}serial(){return new tG(this)}},QU=class extends kn{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:KU(e),done:!1}}},eG=class extends kn{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},tG=class extends kn{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},nG=class extends kn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Q(e.value)}return this.upstream.next()}},sG=class extends kn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},rG=class extends kn{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},aG=class extends kn{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Q(e.value)}}},oG=class extends kn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=lr.getTensorsInContainer(e.value),n=this.transform(e.value),s=lr.getTensorsInContainer(n);for(let r of t)lr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},iG=class extends kn{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},EI=class extends kn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=lr.getTensorsInContainer(e.value),n=await this.transform(e.value),s=lr.getTensorsInContainer(n);for(let r of t)lr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},KA=class extends kn{constructor(){super();this.outputQueue=new qA,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},lG=class extends KA{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=lr.getTensorsInContainer(e.value),n=this.transform(e.value),s=lr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)lr.isTensorInList(r,s)||r.dispose();return!0}},RI=class extends kn{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Go;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Go||(Go={}));var uG=class extends kn{constructor(e,t=Go.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof kn?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await CI(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Go.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Go.SHORTEST:return{value:null,done:!0};case Go.LONGEST:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},$I=class extends kn{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new TI(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},cG=class extends $I{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=GU.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Ju=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),Is(async()=>(await n.iterator()).columnMajorBatch(e,t,hG),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Is(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Is(async()=>(await t.iterator()).filter(s=>j(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Is(async()=>(await t.iterator()).map(n=>j(()=>e(n))),this.size)}mapAsync(e){let t=this;return Is(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Is(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Is(async()=>{let s=XA(async()=>({value:await t.iterator(),done:!1}));return YU(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Is(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=UU.alea(t||v.now().toString());return Is(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Is(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ju.MAX_BUFFER_SIZE=1e4;function Is(e,t=null){return new class extends Ju{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function dG(e){return Is(async()=>NI(e),e.length)}function pG(e){if(!Yu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Is(async()=>{let n=await CI(e,s=>{if(s instanceof Ju)return{value:s.iterator(),recurse:!1};if(Yu(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return JU(n,Go.SHORTEST)},t)}function hG(e){if(e===null)return null;let t=e[0];return qU(t)?{value:fG(e),recurse:!1}:{value:null,recurse:!0}}function fG(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ze?En(e):qt(e)}var DI=class extends Ju{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Rm='"',op=Symbol("out"),_I=Symbol("field"),$m=Symbol("quote"),ZA=Symbol("quoteafterquote"),FI=Symbol("quoteinquote"),PI=class extends Ju{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new DI(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let c=Number(i);if(isNaN(c))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=c;else switch(o.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(i);break;default:l=c}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=op;for(let o=0;o<r;o++)switch(a){case op:switch(e.charAt(o)){case Rm:s=o+1,a=$m;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=op;break;default:a=_I,s=o;break}break;case _I:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=op,s=o+1;break;default:}break;case $m:switch(e.charAt(o)){case Rm:a=ZA;break;default:}break;case ZA:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=op,s=o+1;break;case Rm:a=$m;break;default:a=FI;break}break;case FI:switch(e.charAt(o)){case Rm:a=$m;break;default:}break;default:}if(a===ZA?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},OI=class extends kn{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(K().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new OI(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(v.sizeFromShape(t));return n.set(e,n.length-e.length),qt(n,t)}},MI=class extends kn{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=tn([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=hr([a,r,i,o],[1,4])}else this.cropBox=hr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(K().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new MI(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Xs.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return j(()=>{let t=Xt(de(e,"float32"),0),n;n=$e.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return G(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},zI=class{},LI=class extends kn{split(e){return new mG(this,e)}},mG=class extends LI{constructor(e,t){super();this.upstream=e,this.impl=new gG(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},gG=class extends KA{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},yG=class extends kn{decodeUTF8(){return new AG(this)}},AG=class extends LI{constructor(e){super();this.upstream=e,this.impl=new xG(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},xG=class extends KA{constructor(e){super();if(this.upstream=e,K().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=z5();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return K().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},BI=class extends yG{constructor(e,t={}){super();this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(K().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function bG(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=vG(e));let a=await(n||v.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new BI(o,t)}else throw new Error(a.statusText)}var vG=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function WI(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var VI=class extends zI{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(WI(this.input)&&K().get("IS_NODE")){let e=Hl("fs");this.input=e.readFileSync(this.input.substr(7))}return new BI(this.input,this.options)}},UI=class extends zI{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return WI(this.url)?new VI(this.url,this.fileOptions).iterator():bG(this.url,this.fileOptions)}};function wG(e,t={}){return new PI(new UI(e),t)}function kG(e){let t=XA(e);return Is(async()=>t)}function IG(e){return Is(async()=>{let t=await e();return XA(()=>t.next())})}async function SG(e,t){return MI.create(e,t)}async function CG(e){return OI.create(e)}var TG="3.10.0";function Ne(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var NG=Zs.whereImpl,YA=class extends jl{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Hc(this,os())}nextDataId(){return YA.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,K().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Fe(e.shape,e.dtype,n)}makeOutput(e,t,n){let s=this.write(e,t,n);return os().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ne([e],"where");let t=this.readSync(e.dataId);return NG(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};YA.nextDataId=0;var GI={};ze(GI,{addImpl:()=>jI,bincountImpl:()=>QA,bincountReduceImpl:()=>qI,ceilImpl:()=>XI,concatImpl:()=>ex,equalImpl:()=>KI,expImpl:()=>YI,expm1Impl:()=>QI,floorImpl:()=>e7,gatherNdImpl:()=>t7,gatherV2Impl:()=>n7,greaterEqualImpl:()=>r7,greaterImpl:()=>s7,lessEqualImpl:()=>o7,lessImpl:()=>a7,linSpaceImpl:()=>i7,logImpl:()=>l7,maxImpl:()=>u7,maximumImpl:()=>c7,minimumImpl:()=>d7,multiplyImpl:()=>tx,negImpl:()=>p7,notEqualImpl:()=>h7,prodImpl:()=>f7,rangeImpl:()=>sx,rsqrtImpl:()=>m7,sigmoidImpl:()=>gH,simpleAbsImpl:()=>HI,sliceImpl:()=>Fm,sparseFillEmptyRowsImpl:()=>y7,sparseReshapeImpl:()=>A7,sparseSegmentReductionImpl:()=>rx,sqrtImpl:()=>xH,squaredDifferenceImpl:()=>x7,stridedSliceImpl:()=>b7,stringNGramsImpl:()=>v7,stringSplitImpl:()=>w7,stringToHashBucketFastImpl:()=>k7,subImpl:()=>I7,tileImpl:()=>S7,topKImpl:()=>T7,transposeImpl:()=>nx,uniqueImpl:()=>N7});function HI(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var EG=e=>{let{x:t}=e.inputs,n=e.backend;Ne(t,"abs");let s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=HI(r),n.makeOutput(s,t.shape,t.dtype)},RG={kernelName:hi,backendName:"cpu",kernelFunc:EG};function sn(e){return(t,n,s,r,a)=>{let o=N.assertAndGetBroadcastShape(t,n),i=o.length,l=v.computeStrides(o),c=v.sizeFromShape(o),u=v.getTypedArrayFromDType(a,c),d=t.length,p=n.length,h=v.computeStrides(t),f=v.computeStrides(n),m=N.getBroadcastDims(t,o),g=N.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(s[y%s.length],r[y%r.length]);else for(let y=0;y<u.length;++y){let A=v.indexToLoc(y,i,l),x=A.slice(-d);m.forEach(S=>x[S]=0);let b=v.locToIndex(x,d,h),w=A.slice(-p);g.forEach(S=>w[S]=0);let k=v.locToIndex(w,p,f);u[y]=e(s[b],r[k])}return[u,o]}}function Ss(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var $G={kernelName:Kc,backendName:"cpu",kernelFunc:Ss};function Dm(e,t,n="float32"){if(n==="complex64"){let r=Dm(e,t,"float32"),a=Dm(e,t,"float32");return Ss({inputs:{real:r,imag:a},backend:e})}let s=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Wr(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var DG={kernelName:so,backendName:"cpu",kernelFunc:Wr};function xl(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var _G={kernelName:rd,backendName:"cpu",kernelFunc:xl};function Ho(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Wr({inputs:{x:r},backend:n});let o=Dm(n,r.shape,r.dtype),i=Ho({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Ss({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=xl({inputs:{input:r},backend:n}),i=Ho({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Wr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=v.toTypedArray([0],r.dtype),[l,c]=sn((u,d)=>u!==d?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var FG={kernelName:Ga,backendName:"cpu",kernelFunc:Ho};function In(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Ne([o,i],e);let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=o.dtype==="string"?N.fromUint8ToStringArray(c):c,p=o.dtype==="string"?N.fromUint8ToStringArray(u):u,h=s||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let c=Ho({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,h=l.data.get(d.dataId).values,f=l.data.get(p.dataId).values,m=Ho({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,A=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,b=l.data.get(A.dataId).values,[w,k,S]=n(o.shape,i.shape,h,f,x,b),E=l.makeTensorInfo(S,"float32",w),R=l.makeTensorInfo(S,"float32",k),P=Ss({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),P}else{let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=s||o.dtype,[p,h]=t(o.shape,i.shape,c,u,d);return l.makeTensorInfo(h,d,p)}}}function JA(e){return(t,n,s,r,a,o)=>{let i=N.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(i),c=i.length,u=v.computeStrides(i),d=v.getTypedArrayFromDType("float32",l),p=v.getTypedArrayFromDType("float32",l),h=N.getBroadcastDims(t,i),f=N.getBroadcastDims(n,i),m=N.mergeRealAndImagArrays(s,r),g=N.mergeRealAndImagArrays(a,o),y=t.length,A=v.computeStrides(t),x=n.length,b=v.computeStrides(n);if(h.length+f.length===0)for(let w=0;w<d.length;w++){let k=w%m.length,S=w%g.length,E=e(m[k*2],m[k*2+1],g[S*2],g[S*2+1]);d[w]=E.real,p[w]=E.imag}else for(let w=0;w<d.length;w++){let k=v.indexToLoc(w,c,u),S=k.slice(-y);h.forEach(D=>S[D]=0);let E=v.locToIndex(S,y,A),R=k.slice(-x);f.forEach(D=>R[D]=0);let P=v.locToIndex(R,x,b),$=e(m[E*2],m[E*2+1],g[P*2],g[P*2+1]);d[w]=$.real,p[w]=$.imag}return[d,p,i]}}var jI=sn((e,t)=>e+t),PG=JA((e,t,n,s)=>({real:e+n,imag:t+s})),ip=In(Er,jI,PG),OG={kernelName:Er,backendName:"cpu",kernelFunc:ip};function QA(e,t,n,s,r){let a=v.sizeFromShape(s),o=v.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function qI(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=Fe([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let c=e.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?o.set(1,i,c):t.size>0?o.set(o.get(i,c)+t.get(i,l),i,c):o.set(o.get(i,c)+1,i,c))}return o}function jo(e){return(t,n,s)=>{let r=v.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function xt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ne(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=v.sizeFromShape(o.shape),u=n||o.dtype,d=v.getArrayFromDType(u,c);for(let p=0;p<c;++p)d[p]=t(l[p],r);return i.makeTensorInfo(o.shape,u,d)}}function Qu(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ne(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=n||o.dtype,u=t(l,c,r);return i.makeTensorInfo(o.shape,c,u)}}var XI=jo(e=>Math.ceil(e)),MG=Qu(Zr,XI),zG={kernelName:Zr,backendName:"cpu",kernelFunc:MG};function ex(e,t,n,s){let r=v.getArrayFromDType(n,v.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=v.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?N.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let c=0;c<o.shape[0];++c){let u=c*t[1]+a;for(let d=0;d<o.shape[1];++d)r[u+d]=i[l++]}a+=o.shape[1]})}return r}var KI=sn((e,t)=>e===t?1:0),ZI=In(Ja,KI,null,"bool"),LG={kernelName:Ja,backendName:"cpu",kernelFunc:ZI},YI=jo(e=>Math.exp(e)),JI=Qu(Jr,YI,"float32"),BG={kernelName:Jr,backendName:"cpu",kernelFunc:JI},QI=jo(e=>Math.expm1(e)),WG=Qu(Qa,QI),VG={kernelName:Qa,backendName:"cpu",kernelFunc:WG},e7=jo(e=>Math.floor(e)),UG=Qu(Qr,e7),GG={kernelName:Qr,backendName:"cpu",kernelFunc:UG};function t7(e,t,n,s,r,a,o,i,l){let c=Fe([s,a],n);for(let u=0;u<s;u++){let d=[],p=0;for(let h=0;h<r;h++){let f=e[u*r+h];p+=f*o[h],d.push(f)}if(p<0||p>=l/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<a;h++)c.values[u*a+h]=t.get(...t.indexToLoc(p*a+h))}return c}function n7(e,t,n){let s=Fe(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],c=t.locToIndex([i,l]);o[2]=t.values[c];let u=e.locToIndex(o);s.values[r]=e.values[u]}return s}var s7=sn((e,t)=>e>t?1:0),HG=In(no,s7,null,"bool"),jG={kernelName:no,backendName:"cpu",kernelFunc:HG},r7=sn((e,t)=>e>=t?1:0),qG=In(ea,r7,null,"bool"),XG={kernelName:ea,backendName:"cpu",kernelFunc:qG},a7=sn((e,t)=>e<t?1:0),KG=In(ro,a7,null,"bool"),ZG={kernelName:ro,backendName:"cpu",kernelFunc:KG},o7=sn((e,t)=>e<=t?1:0),YG=In(ao,o7,null,"bool"),JG={kernelName:ao,backendName:"cpu",kernelFunc:YG};function i7(e,t,n){let s=(t-e)/(n-1),r=v.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var l7=jo(e=>Math.log(e)),QG=Qu(ta,l7),eH={kernelName:ta,backendName:"cpu",kernelFunc:QG};function u7(e,t,n,s){let r=v.getTypedArrayFromDType(s,v.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let c=e[o+l];(Number.isNaN(c)||c>i)&&(i=c)}r[a]=i}return r}var c7=sn((e,t)=>Math.max(e,t)),tH=In(na,c7),nH={kernelName:na,backendName:"cpu",kernelFunc:tH},d7=sn((e,t)=>Math.min(e,t)),sH=In(sa,d7),rH={kernelName:sa,backendName:"cpu",kernelFunc:sH},tx=sn((e,t)=>e*t),aH=JA((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),_m=In(ra,tx,aH),oH={kernelName:ra,backendName:"cpu",kernelFunc:_m};function p7(e,t,n){let s=v.createScalarValue(-1,n);return tx([],t,s,e,n)}function iH(e){let{inputs:t,backend:n}=e,{x:s}=t;Ne(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=p7(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var lH={kernelName:Si,backendName:"cpu",kernelFunc:iH},h7=sn((e,t)=>e!==t?1:0),uH=In(po,h7,null,"bool"),cH={kernelName:po,backendName:"cpu",kernelFunc:uH};function nx(e,t,n,s,r){let a=t.length,o=v.sizeFromShape(t),i=v.computeStrides(t),l=v.computeStrides(r),c=v.getTypedArrayFromDType(n,v.sizeFromShape(r));for(let u=0;u<o;++u){let d=v.indexToLoc(u,a,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[s[f]];let h=v.locToIndex(p,a,l);c[h]=e[u]}return c}function Os(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Ne(r,"transpose");let o=r.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=r.shape[a[d]];let l=s.data.get(r.dataId).values,c=nx(l,r.shape,r.dtype,a,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}var dH={kernelName:ko,backendName:"cpu",kernelFunc:Os};function f7(e,t,n,s){let[r,a]=N.computeOutAndReduceShapes(e,s),o=Mn(t,"int32"),i=v.makeZerosTypedArray(v.sizeFromShape(r),o),l=v.sizeFromShape(a);for(let c=0;c<i.length;++c){let u=c*l,d=1;for(let p=0;p<l;++p)d*=n[u+p];i[c]=d}return{outVals:i,outShape:r,outDtype:o}}function pH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"prod");let i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=N.getAxesPermutation(l,i),u=l,d=r,p=[];c!=null&&(d=Os({inputs:{x:r},backend:n,attrs:{perm:c}}),p.push(d),u=N.getInnerMostAxes(u.length,i));let h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=f7(d.shape,d.dtype,h,u),y=m;return o&&(y=N.expandShapeToKeepDim(m,l)),p.forEach(A=>n.disposeIntermediateTensorInfo(A)),n.makeTensorInfo(y,g,f)}var hH={kernelName:$i,backendName:"cpu",kernelFunc:pH};function sx(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return v.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var m7=jo(e=>1/Math.sqrt(e)),fH=Qu(aa,m7),mH={kernelName:aa,backendName:"cpu",kernelFunc:fH},gH=jo(e=>1/(1+Math.exp(-e))),g7=xt(oa,e=>1/(1+Math.exp(-e))),yH={kernelName:oa,backendName:"cpu",kernelFunc:g7};function Fm(e,t,n,s,r){let a=Qt.isSliceContinous(s,t,n),o=v.sizeFromShape(n),i=v.computeStrides(s);if(a){let d=Qt.computeFlatOffset(t,i);return r==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let l=r==="string"?N.fromUint8ToStringArray(e):e,c=Fe(s,r,l),u=Fe(n,r);for(let d=0;d<u.size;++d){let p=u.indexToLoc(d),h=p.map((f,m)=>f+t[m]);u.set(c.get(...h),...p)}return r==="string"?N.fromStringArrayToUint8(u.values):u.values}function bl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Ne(r,"slice");let[i,l]=Qt.parseSliceParams(r,a,o);Qt.assertParamsValid(r,i,l);let c=n.data.get(r.dataId).values,u=Fm(c,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var AH={kernelName:Mi,backendName:"cpu",kernelFunc:bl};function y7(e,t,n,s,r,a,o){let i=t[0],l=a[0],c=new Array(l),u=new Array(i),d=t[1];if(l===0){if(i!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${i}`);let g=v.getArrayFromDType(n,0),y=v.getArrayFromDType(r,0);return[g,[0,d],y,c,u]}let p=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let y=e[g*d];if(y<0)throw new Error(`indices(${g}, 0) is invalid: ${y} < 0`);if(y>=l)throw new Error(`indices(${g}, 0) is invalid: ${y} >= ${l}`);++f[y],p=p&&y>=h,h=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,y=s;for(let A=0;A<i;++A)u[A]=A;return[g,[i,d],y,c,u]}else{let g=f[l-1],y=v.getArrayFromDType(n,g*d),A=v.getArrayFromDType(r,g),x=new Array(l).fill(0);for(let b=0;b<i;++b){let w=e[b*d],k=x[w],S=(w===0?0:f[w-1])+k;x[w]++;for(let E=0;E<d;++E)y[S*d+E]=e[b*d+E];A[S]=s[b],u[b]=S}for(let b=0;b<l;++b)if(x[b]===0){let k=b===0?0:f[b-1];y[k*d+0]=b;for(let S=1;S<d;++S)y[k*d+S]=0;A[k]=o}return[y,[g,d],A,c,u]}}function A7(e,t,n,s,r){let a=v.sizeFromShape(s),o=t[0],i=r.length,l=[],c=1,u=-1;for(let g=0;g<i;++g){let y=r[g];if(y===-1){if(u!==-1)throw new Error(`only one output dimension may be -1, not both ${u} and ${g}`);u=g,l.push(1)}else{if(y<0)throw new Error(`size ${g} must be non-negative, not ${y}`);c*=y,l.push(y)}}if(u!==-1){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let g=Math.trunc(a/c);if(c*g!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}
          dense values, but the requested shape requires a multiple of ${c}. inputShape=${s} outputShape= ${l}`);l[u]=g}let d=v.sizeFromShape(l);if(d!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${d}. inputShape=${s} outputShape=${l}`);let p=s.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=v.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let y=0;for(let A=0;A<p;++A)y+=e[g*p+A]*h[A];for(let A=0;A<i;++A)m[g*i+A]=Math.trunc(y/f[A]),y%=f[A]}return[m,[o,i],l]}function rx(e,t,n,s,r,a=!1,o=0){let i=s.length;if(i!==r.length)throw new Error("segmentIds and indices should have same size.");let l=[t[0],e.length/t[0]],c=l[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");let p=t.slice();p[0]=d;let h=p.reduce((x,b)=>x*b,1),f=v.getArrayFromDType(n,h);if(i===0)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,y=0,A=r[m];for(;;){let x=0;if(g<i){if(x=r[g],A===x){++g;continue}if(A>=x)throw new Error("segment ids are not increasing")}if(A<0||A>=d)throw new Error(`Segment id ${A} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);A>y&&f.fill(o,y*c,A*c);for(let b=m;b<g;++b){let w=s[b];if(w<0||w>=l[0])throw new Error(`Bad: indices[${b}] == ${s[b]} out of range [0, ${l[0]})`);for(let k=0;k<c;k++)f[A*c+k]+=e[w*c+k]}if(a)for(let b=0;b<c;b++)f[A*c+b]/=g-m;if(m=g,++g,y=A+1,A=x,g>i)break}return y<d&&f.fill(o,y*c,d*c),[f,p]}var xH=jo(e=>Math.sqrt(e)),bH=xt(ia,e=>Math.sqrt(e)),vH={kernelName:ia,backendName:"cpu",kernelFunc:bH},x7=sn((e,t)=>{let n=e-t;return n*n}),wH=In(la,x7),kH={kernelName:la,backendName:"cpu",kernelFunc:wH};function b7(e,t,n,s){let r=Fe(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var IH=class{constructor(e,t,n,s,r,a){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),u=a-(l+c),d=t+(l>0?0:o-i),p=0;p+=l*this.leftPad.length;for(let y=0;y<u;++y)p+=e[d+y].length;p+=c*this.rightPad.length,p+=(l+c+u-1)*this.separator.length,n[s+o]=new Uint8Array(p);let f=n[s+o],m=0,g=y=>y.forEach(A=>f[m++]=A);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<u-1;++y)g(e[d+y]),g(this.separator);if(u>0){g(e[d+u-1]);for(let y=0;y<c;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<c-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let c=t[l]>=i;if(c=c&&t[l]<=n,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=v.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],c=0;this.nGramWidths.forEach(u=>{c+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&c===0&&(c=1),a[i]=a[i-1]+c}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],c=a[i];if(this.nGramWidths.forEach(u=>{let d=t[i+1]-t[i],p=this.getNumNGrams(d,u);this.createNGrams(e,l,o,c,p,u),c+=p}),this.preserveShort&&c===a[i]){let u=t[i+1]-t[i];if(u===0)continue;let d=u+2*this.padWidth,p=1;this.createNGrams(e,l,o,c,p,d)}}return[o,a]}};function v7(e,t,n,s,r,a,o,i){return new IH(n,s,r,a,o,i).compute(e,t)}function SH(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function w7(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let p=0;p<s;++p){let h=r.length;SH(e[p],t,n,r);let f=r.length-h;i[p]=f,a+=f,o=Math.max(o,f)}let l=v.getArrayFromDType("int32",a*2),c=new Array(a),u=[s,o],d=0;for(let p=0;p<s;++p)for(let h=0;h<i[p];++h)l[d*2]=p,l[d*2+1]=h,c[d]=r[d],++d;return[l,c,u]}function k7(e,t){let n=v.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=v.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var I7=sn((e,t)=>e-t),CH=JA((e,t,n,s)=>({real:e-n,imag:t-s})),ax=In(ua,I7,CH),TH={kernelName:ua,backendName:"cpu",kernelFunc:ax};function S7(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=Fe(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var lp=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function C7(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,c=Math.log(i),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(i-u)/i)*Math.sign(l-i/2),p=Math.max(n,Math.floor(t-l*u/i+d)),h=Math.min(s,Math.floor(t+(i-l)*u/i+d));C7(e,t,p,h)}let r=e[t],a=n,o=s;for(v.swap(e,n,t),lp(e[s],r)>0&&v.swap(e,n,s);a<o;){for(v.swap(e,a,o),a++,o--;lp(e[a],r)<0;)a=a+1;for(;lp(e[o],r)>0;)o=o-1}lp(e[n],r)===0?v.swap(e,n,o):(o=o+1,v.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function T7(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=v.getTypedArrayFromDType(n,o*s),c=v.getTypedArrayFromDType("int32",o*s);for(let d=0;d<o;d++){let p=d*i,h=e.subarray(p,p+i),f=new Array(h.length);h.forEach((A,x)=>f[x]={value:A,index:x}),s<f.length&&(C7(f,s),f=f.slice(0,s)),r&&f.sort(lp);let m=d*s,g=l.subarray(m,m+s),y=c.subarray(m,m+s);for(let A=0;A<s;A++)g[A]=f[A].value,y[A]=f[A].index}let u=t.slice();return u[u.length-1]=s,[Fe(u,n,l),Fe(u,"int32",c)]}function N7(e,t,n,s){let r=v.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new jt(a,s,e),c=[],u=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let A=0;A<a[2];A++)g.push(l.get(y,f,A));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let p=new jt(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)p.set(l.get(g,f,y),g,m,y)});let h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:i}}Qi("cpu",()=>new YA,1);var E7=xt(Ya,e=>e>=0?e:Math.exp(e)-1),NH={kernelName:Ya,backendName:"cpu",kernelFunc:E7};function R7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Ne([r],"leakyRelu");let o=v.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=v.getTypedArrayFromDType("float32",o);for(let c=0;c<i.length;c++)l[c]=i[c]<0?a*i[c]:i[c];return n.makeTensorInfo(r.shape,"float32",l)}var EH={kernelName:ki,backendName:"cpu",kernelFunc:R7},RH=sn((e,t)=>e<0?t*e:e);function $7(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Ne([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=RH(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var $H={kernelName:mo,backendName:"cpu",kernelFunc:$7},D7=xt(go,e=>Math.max(0,e)),DH={kernelName:go,backendName:"cpu",kernelFunc:D7},_7=xt(Ao,e=>Math.min(Math.max(0,e),6)),_H={kernelName:Ao,backendName:"cpu",kernelFunc:_7};function ox(e,t,n,s,r){if(n==="linear")return Wr({inputs:{x:t},backend:e});if(n==="relu")return D7({inputs:{x:t},backend:e});if(n==="elu")return E7({inputs:{x:t},backend:e});if(n==="relu6")return _7({inputs:{x:t},backend:e});if(n==="prelu")return $7({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return R7({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return g7({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Et(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,o),l=v.sizeFromShape(i);v.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var FH={kernelName:Di,backendName:"cpu",kernelFunc:Et};function F7(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Ne([r,a],"matMul");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=g===y||g===1||y===1;v.assert(l>=2&&c>=2&&A,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);let b=(g>y?r.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,h]);v.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let w=o?[g,u,p]:[g,p,u],k=i?[y,h,d]:[y,d,h],S=Et({inputs:{x:r},backend:n,attrs:{shape:w}}),E=Et({inputs:{x:a},backend:n,attrs:{shape:k}}),R=o?S.shape[1]:S.shape[2],P=o?S.shape[2]:S.shape[1],$=i?E.shape[1]:E.shape[2],D=Math.max(g,y),T=n.data.get(S.dataId).values,O=n.data.get(E.dataId).values,V=v.computeStrides(S.shape),H=v.computeStrides(E.shape),[z,X,ee]=o?[V[0],1,V[1]]:[V[0],V[1],1],[Y,se,ne]=i?[1,H[1],H[0]]:[H[1],1,H[0]],J=P*$,te=Fe([D,P,$],S.dtype),ce=te.values,pe=n.blockSize;for(let be=0;be<D;be++)for(let we=0;we<P;we+=pe)for(let Ce=0;Ce<$;Ce+=pe)for(let Me=0;Me<R;Me+=pe){let Ge=Math.min(we+pe,P),Ke=Math.min(Ce+pe,$),it=Math.min(Me+pe,R);for(let yt=we;yt<Ge;yt++)for(let ht=Ce;ht<Ke;ht++){let ft=0;for(let bt=Me;bt<it;bt++){let wt=Math.min(be,g-1)*z,$t=Math.min(be,y-1)*ne,zt=T[wt+yt*X+bt*ee],ns=O[bt*Y+ht*se+$t];ft+=zt*ns}ce[be*J+(yt*$+ht)]+=ft}}return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(E),n.makeTensorInfo(b,te.dtype,te.values)}var PH={kernelName:Ua,backendName:"cpu",kernelFunc:F7};function OH(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p,h,f,m=[];p=F7({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:c},backend:n}),o&&(h=ip({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),u&&(f=ox(n,p,u,i,d),m.push(p),p=f);for(let y of m)n.disposeIntermediateTensorInfo(y);return p}var MH={kernelName:So,backendName:"cpu",kernelFunc:OH},zH=xt(Kl,e=>Math.acos(e)),LH={kernelName:Kl,backendName:"cpu",kernelFunc:zH},BH=xt(Zl,e=>Math.acosh(e)),WH={kernelName:Zl,backendName:"cpu",kernelFunc:BH};function VH(e){let{inputs:t,backend:n}=e,s=t;Ne(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=Fe(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let c=0;c<o.length;c++)o[c]+=l[c]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var UH={kernelName:Ba,backendName:"cpu",kernelFunc:VH};function GH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"all");let i=v.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Os({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("all",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let A=y*h,x=m[A];for(let b=0;b<h;++b){let w=m[A+b];x=x&&w}f[y]=x}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),A=Et({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),A}return g}var HH={kernelName:Yl,backendName:"cpu",kernelFunc:GH};function jH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"any");let i=v.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Os({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("any",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let A=y*h,x=m[A];for(let b=0;b<h;++b){let w=m[A+b];x=x||w}f[y]=x}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),A=Et({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),A}return g}var qH={kernelName:Jl,backendName:"cpu",kernelFunc:jH};function XH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ne(r,"argMax");let o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Os({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=v.sizeFromShape(u),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,A=m[y],x=0;for(let b=0;b<f;++b){let w=m[y+b];w>A&&(A=w,x=b)}h[g]=x}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var KH={kernelName:Wa,backendName:"cpu",kernelFunc:XH};function ZH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ne(r,"argMin");let o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Os({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=v.sizeFromShape(u),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,A=m[y],x=0;for(let b=0;b<f;++b){let w=m[y+b];w<A&&(A=w,x=b)}h[g]=x}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var YH={kernelName:Ql,backendName:"cpu",kernelFunc:ZH},JH=xt(eu,e=>Math.asin(e)),QH={kernelName:eu,backendName:"cpu",kernelFunc:JH},ej=xt(tu,e=>Math.asinh(e)),tj={kernelName:tu,backendName:"cpu",kernelFunc:ej},nj=xt(nu,e=>Math.atan(e)),sj={kernelName:nu,backendName:"cpu",kernelFunc:nj},rj=sn((e,t)=>Math.atan2(e,t)),aj=In(ru,rj),oj={kernelName:ru,backendName:"cpu",kernelFunc:aj},ij=xt(su,e=>Math.atanh(e)),lj={kernelName:su,backendName:"cpu",kernelFunc:ij};function ix(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Fe(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],A=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let b=0;b<r.batchSize;++b){let w=b*y,k=b*s[0];for(let S=0;S<r.inChannels;++S)for(let E=0;E<r.outHeight;++E){let R=E*o-p,P=Math.max(0,R),$=Math.min(r.inHeight,u+R),D=w+E*A;for(let T=0;T<r.outWidth;++T){let O=T*i-h,V=Math.max(0,O),H=Math.min(r.inWidth,d+O),z=f,X=0,ee=0;for(let se=P;se<$;se+=l){let ne=k+se*s[1];for(let J=V;J<H;J+=c){let te=ne+J*s[2],ce=e[te+S];a==="max"&&ce>z?z=ce:a==="avg"&&(X+=ce,ee++)}if(isNaN(z))break}let Y=D+T*x+S;g[Y]=a==="avg"?X/ee:z}}}return m}function P7(e,t,n,s,r=!1,a=!1){let o=Fe(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=Fe(t,n,e);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let A=0;A<s.outHeight;++A){let x=A*i-h,b=x;for(;b<0;)b+=c;let w=Math.min(s.inHeight,d+x);for(let k=0;k<s.outWidth;++k){let S=k*l-f,E=S;for(;E<0;)E+=u;let R=Math.min(s.inWidth,p+S),P=Number.NEGATIVE_INFINITY,$=-1;for(let D=b;D<w;D+=c){let T=D-x;for(let O=E;O<R;O+=u){let V=O-S,H=m.get(g,D,O,y);H>P&&(P=H,r?$=a?((g*s.inHeight+D)*s.inWidth+O)*s.inChannels+y:(D*s.inWidth+O)*s.inChannels+y:$=T*p+V)}}o.set($,g,A,k,y)}}return o}function O7(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,A=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Fe(r.outShape,n),b=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){let P=R*w,$=R*s[0];for(let D=0;D<r.inChannels;++D)for(let T=0;T<r.outDepth;++T){let O=T*o-m,V=O;for(;V<0;)V+=c;let H=Math.min(r.inDepth,p+O),z=P+T*k;for(let X=0;X<r.outHeight;++X){let ee=X*i-g,Y=ee;for(;Y<0;)Y+=u;let se=Math.min(r.inHeight,h+ee),ne=z+X*S;for(let J=0;J<r.outWidth;++J){let te=J*l-y,ce=te;for(;ce<0;)ce+=d;let pe=Math.min(r.inWidth,f+te),be=ne+J*E,we=A,Ce=0,Me=0;for(let Ke=V;Ke<H;Ke+=c){let it=$+Ke*s[1];for(let yt=Y;yt<se;yt+=u){let ht=it+yt*s[2];for(let ft=ce;ft<pe;ft+=d){let bt=ht+ft*s[3],wt=e[bt+D];if(a==="max"&&wt>we?we=wt:a==="avg"&&(Ce+=wt,Me++),isNaN(we))break}if(isNaN(we))break}if(isNaN(we))break}let Ge=be+D;b[Ge]=a==="avg"?Ce/Me:we}}}}return x}function uj(e,t){let n=Fe(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let A=y*s-p,x=A;for(;x<0;)x+=o;let b=Math.min(t.inDepth,c+A);for(let w=0;w<t.outHeight;++w){let k=w*r-h,S=k;for(;S<0;)S+=i;let E=Math.min(t.inHeight,u+k);for(let R=0;R<t.outWidth;++R){let P=R*a-f,$=P;for(;$<0;)$+=l;let D=Math.min(t.inWidth,d+P),T=Number.NEGATIVE_INFINITY,O=-1;for(let V=x;V<b;V+=o){let H=V-A;for(let z=S;z<E;z+=i){let X=z-k;for(let ee=$;ee<D;ee+=l){let Y=ee-P,se=e.get(m,V,z,ee,g);se>=T&&(T=se,O=H*u*d+X*u+Y)}}}n.set(O,m,y,w,R,g)}}}return n}function cj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ne(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))d=Wr({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=ix(p,r.shape,r.dtype,h,u,"avg");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var dj={kernelName:Va,backendName:"cpu",kernelFunc:cj};function pj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Ne(r,"avgPool3d");let u=N.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=O7(d,r.shape,r.dtype,v.computeStrides(r.shape),u,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var hj={kernelName:Xc,backendName:"cpu",kernelFunc:pj};function fj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Ne([r,a],"avgPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=u.strideDepth,p=u.strideHeight,h=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,A=u.dilationHeight,x=u.dilationWidth,b=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,S=b-1-u.padInfo.front,E=k-1-u.padInfo.left,R=w-1-u.padInfo.top,P=Fe(a.shape,"float32"),$=1/(f*m*g),D=n.bufferSync(r);for(let T=0;T<u.batchSize;++T)for(let O=0;O<u.inChannels;++O)for(let V=0;V<u.inDepth;++V)for(let H=0;H<u.inHeight;++H)for(let z=0;z<u.inWidth;++z){let X=V-S,ee=H-R,Y=z-E,se=0;for(let ne=0;ne<b;ne+=y){let J=(X+ne)/d;if(!(J<0||J>=u.outDepth||Math.floor(J)!==J))for(let te=0;te<w;te+=A){let ce=(ee+te)/p;if(!(ce<0||ce>=u.outHeight||Math.floor(ce)!==ce))for(let pe=0;pe<k;pe+=x){let be=(Y+pe)/h;if(be<0||be>=u.outWidth||Math.floor(be)!==be)continue;se+=D.get(T,J,ce,be,O)}}}P.set(se*$,T,V,H,z,O)}return n.makeTensorInfo(P.shape,P.dtype,P.values)}var mj={kernelName:Ih,backendName:"cpu",kernelFunc:fj};function gj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Ne([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=N.computePool2DInfo(o.shape,i,l,1,c),d=u.strideHeight,p=u.strideWidth,h=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,A=u.effectiveFilterWidth,x=A-1-u.padInfo.left,b=y-1-u.padInfo.top,w=Fe(o.shape,"float32"),k=1/(h*f),S=n.data.get(r.dataId).values,E=Fe(r.shape,"float32",S);for(let R=0;R<u.batchSize;++R)for(let P=0;P<u.inChannels;++P)for(let $=0;$<u.inHeight;++$)for(let D=0;D<u.inWidth;++D){let T=$-b,O=D-x,V=0;for(let H=0;H<y;H+=m){let z=(T+H)/d;if(!(z<0||z>=u.outHeight||Math.floor(z)!==z))for(let X=0;X<A;X+=g){let ee=(O+X)/p;if(ee<0||ee>=u.outWidth||Math.floor(ee)!==ee)continue;V+=E.get(R,z,ee,P)}}w.set(V*k,R,$,D,P)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var yj={kernelName:kh,backendName:"cpu",kernelFunc:gj};function Aj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;v.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ne([r,i,l,a,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);let u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(l.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=h.length,A=p.length,x=d.length,b=0,w=0,k=0,S=0;for(let E=0;E<u.length;++E)m[E]=f[b++]+(u[E]-d[w++])*h[k++]/Math.sqrt(p[S++]+c),b>=g&&(b=0),w>=x&&(w=0),k>=y&&(k=0),S>=A&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var xj={kernelName:to,backendName:"cpu",kernelFunc:Aj};function bj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Ne([r],"batchToSpaceND");let i=a.reduce((y,A)=>y*A),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=Et({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Os({inputs:{x:h},backend:n,attrs:{perm:c}}),m=Et({inputs:{x:f},backend:n,attrs:{shape:u}}),g=bl({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var vj={kernelName:fi,backendName:"cpu",kernelFunc:bj};function wj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=QA(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var kj={kernelName:Sh,backendName:"cpu",kernelFunc:wj};function Ij(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var Sj={kernelName:Ch,backendName:"cpu",kernelFunc:Ij},Cj=xt(Yr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),Tj={kernelName:Yr,backendName:"cpu",kernelFunc:Cj},Nj=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){let u=i[c],d=l[c];s[c]=Math.hypot(u,d)}return n.makeOutput(s,t.shape,"float32")},Ej={kernelName:Zc,backendName:"cpu",kernelFunc:Nj};function ec(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var Rj={kernelName:ed,backendName:"cpu",kernelFunc:ec};function tc(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(m=>m.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>v.sizeFromShape(m.shape)>0);if(i.length===1)return Wr({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(N.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>xl({inputs:{input:b},backend:n})),g=i.map(b=>ec({inputs:{input:b},backend:n})),y=tc({inputs:m,backend:n,attrs:{axis:a}}),A=tc({inputs:g,backend:n,attrs:{axis:a}}),x=Ss({inputs:{real:y,imag:A},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(A),x}let c=i.map(m=>{let g=v.sizeFromShape(m.shape.slice(a));return Et({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=N.computeOutShape(c.map(m=>m.shape),1);let d=c[0].shape[0]===1,p=ex(u,o,t[0].dtype,d),h=N.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,p);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var $j={kernelName:mi,backendName:"cpu",kernelFunc:tc};function M7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s;Ne([r,a],"conv2d");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,A=p.padInfo.top,x=p.dataFormat==="channelsLast",b=new jt(p.outShape,r.dtype),w=v.computeStrides(r.shape),k=v.computeStrides(a.shape),S=w[0],E=x?w[1]:w[2],R=x?w[2]:1,P=x?1:w[1],$=b.strides[0],D=x?b.strides[1]:b.strides[2],T=x?b.strides[2]:1,O=x?1:b.strides[1],V=n.data.get(r.dataId).values,H=n.data.get(a.dataId).values,z=b.values;for(let X=0;X<p.batchSize;++X){let ee=X*S,Y=X*$;for(let se=0;se<p.outHeight;++se){let ne=Y+se*D,J=se*p.strideHeight-A;for(let te=0;te<h;++te){let ce=J+te*m;if(ce<0||ce>=p.inHeight)continue;let pe=te*k[0],be=ee+ce*E;for(let we=0;we<p.outWidth;++we){let Ce=ne+we*T,Me=we*p.strideWidth-y;for(let Ge=0;Ge<f;++Ge){let Ke=Me+Ge*g;if(Ke<0||Ke>=p.inWidth)continue;let it=pe+Ge*k[1],yt=be+Ke*R,ht=it;for(let ft=0;ft<p.inChannels;++ft){let bt=V[yt+ft*P];for(let wt=0;wt<p.outChannels;++wt)z[Ce+wt*O]+=bt*H[ht+wt];ht+=p.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,z)}var Dj={kernelName:Ha,backendName:"cpu",kernelFunc:M7};function _j(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;Ne([r,a],"conv2dBackpropFilter");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=p.dataFormat==="channelsLast",A=new jt(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,S=new jt(r.shape,r.dtype,w),E=new jt(a.shape,a.dtype,k);for(let R=0;R<m;++R){let P=Math.max(0,Math.ceil((b-R)/h)),$=Math.min(p.outHeight,(p.inHeight+b-R)/h);for(let D=0;D<g;++D){let T=Math.max(0,Math.ceil((x-D)/f)),O=Math.min(p.outWidth,(p.inWidth+x-D)/f);for(let V=0;V<p.inChannels;++V)for(let H=0;H<p.outChannels;++H){let z=0;for(let X=0;X<p.batchSize;++X)for(let ee=P;ee<$;++ee){let Y=R+ee*h-b;for(let se=T;se<O;++se){let ne=D+se*f-x;y?z+=S.get(X,Y,ne,V)*E.get(X,ee,se,H):z+=S.get(X,V,Y,ne)*E.get(X,H,ee,se)}}A.set(z,R,D,V,H)}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var Fj={kernelName:Th,backendName:"cpu",kernelFunc:_j};function Pj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s;Ne([r,a],"conv2dBackpropInput");let d=v.computeStrides(a.shape),p=v.computeStrides(r.shape),h=N.convertConv2DDataFormat(c),f=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,h),m=new jt(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,A=n.data.get(a.dataId).values,[x,b,w]=d,{batchSize:k,filterHeight:S,filterWidth:E,inChannels:R,inHeight:P,inWidth:$,outChannels:D,outHeight:T,outWidth:O,strideHeight:V,strideWidth:H}=f;h=f.dataFormat;let z=S-1-f.padInfo.top,X=E-1-f.padInfo.left,ee=h==="channelsLast",Y=m.strides[0],se=ee?m.strides[1]:m.strides[2],ne=ee?m.strides[2]:1,J=ee?1:m.strides[1],te=p[0],ce=ee?p[1]:p[2],pe=ee?p[2]:1,be=ee?1:p[1];for(let we=0;we<k;++we)for(let Ce=0;Ce<R;++Ce)for(let Me=0;Me<P;++Me){let Ge=Me-z,Ke=Math.max(0,Math.ceil(Ge/V)),it=Math.min(T,(S+Ge)/V);for(let yt=0;yt<$;++yt){let ht=yt-X,ft=Math.max(0,Math.ceil(ht/H)),bt=Math.min(O,(E+ht)/H),wt=0;for(let zt=Ke;zt<it;++zt){let ns=zt*V-Ge;for(let Sn=ft;Sn<bt;++Sn){let or=Sn*H-ht,Bn=te*we+ce*zt+pe*Sn,ms=x*(S-1-ns)+b*(E-1-or)+w*Ce;for(let Gs=0;Gs<D;++Gs){let Rs=y[Bn+be*Gs],Cn=A[ms+Gs];wt+=Rs*Cn}}}let $t=Y*we+se*Me+ne*yt+J*Ce;g[$t]=wt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var Oj={kernelName:ja,backendName:"cpu",kernelFunc:Pj};function Mj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Ne([r,a],"conv3d");let c=N.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:u,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,A=g.left,x=g.top,b=new jt(c.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,S=b.values,E=v.computeStrides(r.shape),R=v.computeStrides(a.shape);for(let P=0;P<c.batchSize;++P){let $=P*E[0],D=P*b.strides[0];for(let T=0;T<c.outDepth;++T){let O=D+T*b.strides[1],V=T*c.strideDepth-y;for(let H=0;H<u;++H){let z=V+H*h;if(z<0||z>=c.inDepth)continue;let X=H*R[0],ee=$+z*E[1];for(let Y=0;Y<c.outHeight;++Y){let se=O+Y*b.strides[2],ne=Y*c.strideHeight-x;for(let J=0;J<d;++J){let te=ne+J*f;if(te<0||te>=c.inHeight)continue;let ce=X+J*R[1],pe=ee+te*E[2];for(let be=0;be<c.outWidth;++be){let we=se+be*c.outChannels,Ce=be*c.strideWidth-A;for(let Me=0;Me<p;++Me){let Ge=Ce+Me*m;if(Ge<0||Ge>=c.inWidth)continue;let Ke=ce+Me*R[2],it=pe+Ge*c.inChannels,yt=Ke;for(let ht=0;ht<c.inChannels;++ht){let ft=w[it+ht];for(let bt=0;bt<c.outChannels;++bt)S[we+bt]+=ft*k[yt+bt];yt+=c.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var zj={kernelName:Yc,backendName:"cpu",kernelFunc:Mj};function Lj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Ne([r,a],"conv3dBackpropFilterV2");let c=v.computeStrides(r.shape),u=v.computeStrides(a.shape),d=N.computeConv3DInfo(r.shape,l,o,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,A=new jt(d.filterShape,"float32"),x=A.values,[b,w,k,S]=A.strides,E=n.data.get(a.dataId).values,[R,P,$,D]=u,T=n.data.get(r.dataId).values,[O,V,H,z]=c,X=d.padInfo.front,ee=d.padInfo.left,Y=d.padInfo.top;for(let se=0;se<m;++se){let ne=Math.max(0,Math.ceil((X-se)/p)),J=Math.min(d.outDepth,(d.inDepth+X-se)/p),te=se*b;for(let ce=0;ce<g;++ce){let pe=Math.max(0,Math.ceil((Y-ce)/h)),be=Math.min(d.outHeight,(d.inHeight+Y-ce)/h),we=ce*w+te;for(let Ce=0;Ce<y;++Ce){let Me=Math.max(0,Math.ceil((ee-Ce)/f)),Ge=Math.min(d.outWidth,(d.inWidth+ee-Ce)/f),Ke=Ce*k+we;for(let it=0;it<d.inChannels;++it){let yt=it*S+Ke;for(let ht=0;ht<d.outChannels;++ht){let ft=0;for(let bt=0;bt<d.batchSize;++bt){let wt=bt*O,$t=bt*R;for(let zt=ne;zt<J;++zt){let Sn=(se+zt*p-X)*V+wt,or=zt*P+$t;for(let Bn=pe;Bn<be;++Bn){let Gs=(ce+Bn*h-Y)*H+Sn,Rs=Bn*$+or;for(let Cn=Me;Cn<Ge;++Cn){let Fn=(Ce+Cn*f-ee)*z+Gs,Sr=Cn*D+Rs;ft+=T[Fn+it]*E[Sr+ht]}}}}x[yt+ht]=ft}}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var Bj={kernelName:Nh,backendName:"cpu",kernelFunc:Lj};function Wj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Ne([r],"conv3dBackpropInputV2");let c=v.computeStrides(r.shape),u=v.computeStrides(a.shape),d=N.computeConv3DInfo(l,a.shape,i,1,o),p=new jt(d.inShape,"float32"),h=p.values,[f,m,g,y]=p.strides,A=n.data.get(r.dataId).values,[x,b,w,k]=c,S=n.data.get(a.dataId).values,[E,R,P,$]=u,{batchSize:D,filterDepth:T,filterHeight:O,filterWidth:V,inChannels:H,inDepth:z,inHeight:X,inWidth:ee,outChannels:Y,outDepth:se,outHeight:ne,outWidth:J,strideDepth:te,strideHeight:ce,strideWidth:pe}=d,be=T-1-d.padInfo.front,we=O-1-d.padInfo.top,Ce=V-1-d.padInfo.left;for(let Me=0;Me<D;++Me)for(let Ge=0;Ge<H;++Ge)for(let Ke=0;Ke<z;++Ke){let it=Ke-be,yt=Math.max(0,Math.ceil(it/te)),ht=Math.min(se,(T+it)/te);for(let ft=0;ft<X;++ft){let bt=ft-we,wt=Math.max(0,Math.ceil(bt/ce)),$t=Math.min(ne,(O+bt)/ce);for(let zt=0;zt<ee;++zt){let ns=zt-Ce,Sn=Math.max(0,Math.ceil(ns/pe)),or=Math.min(J,(V+ns)/pe),Bn=0;for(let ms=yt;ms<ht;++ms){let Gs=ms*te-it;for(let Rs=wt;Rs<$t;++Rs){let Cn=Rs*ce-bt;for(let Ir=Sn;Ir<or;++Ir){let Fn=Ir*pe-ns,Sr=x*Me+b*ms+w*Rs+k*Ir,Cr=E*(T-1-Gs)+R*(O-1-Cn)+P*(V-1-Fn)+$*Ge;for(let Ea=0;Ea<Y;++Ea){let Nc=A[Sr+Ea],ir=S[Cr+Ea];Bn+=Nc*ir}}}}h[f*Me+m*Ke+g*ft+y*zt+Ge]=Bn}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var Vj={kernelName:Eh,backendName:"cpu",kernelFunc:Wj},Uj=xt(qa,e=>Math.cos(e)),Gj={kernelName:qa,backendName:"cpu",kernelFunc:Uj},Hj=xt(Xa,e=>Math.cosh(e)),jj={kernelName:Xa,backendName:"cpu",kernelFunc:Hj};function qj(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,[u,d,p,h]=r.shape,f=a.shape[0],[m,g]=i,y=Fe([f,m,g,h],"float32"),A=n.data.get(a.dataId).values,x=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,w=v.computeStrides(r.shape),k=v.computeStrides(y.shape);for(let S=0;S<f;S++){let E=S*4,R=A[E],P=A[E+1],$=A[E+2],D=A[E+3],T=x[S];if(T>=u)continue;let O=m>1?($-R)*(d-1)/(m-1):0,V=g>1?(D-P)*(p-1)/(g-1):0;for(let H=0;H<m;H++){let z=m>1?R*(d-1)+H*O:.5*(R+$)*(d-1);if(z<0||z>d-1){for(let X=0;X<g;X++)for(let ee=0;ee<h;ee++){let Y=ee+X*k[2]+H*k[1]+S*k[0];y.values[Y]=c}continue}if(l==="bilinear"){let X=Math.floor(z),ee=Math.ceil(z),Y=z-X;for(let se=0;se<g;se++){let ne=g>1?P*(p-1)+se*V:.5*(P+D)*(p-1);if(ne<0||ne>p-1){for(let pe=0;pe<h;pe++){let be=pe+se*k[2]+H*k[1]+S*k[0];y.values[be]=c}continue}let J=Math.floor(ne),te=Math.ceil(ne),ce=ne-J;for(let pe=0;pe<h;pe++){let be=pe+J*w[2]+X*w[1]+T*w[0],we=b[be];be=pe+te*w[2]+X*w[1]+T*w[0];let Ce=b[be];be=pe+J*w[2]+ee*w[1]+T*w[0];let Me=b[be];be=pe+te*w[2]+ee*w[1]+T*w[0];let Ge=b[be],Ke=we+(Ce-we)*ce,it=Me+(Ge-Me)*ce;be=pe+se*k[2]+H*k[1]+S*k[0],y.values[be]=Ke+(it-Ke)*Y}}}else for(let X=0;X<g;++X){let ee=g>1?P*(p-1)+X*V:.5*(P+D)*(p-1);if(ee<0||ee>p-1){for(let ne=0;ne<h;ne++){let J=ne+X*k[2]+H*k[1]+S*k[0];y.values[J]=c}continue}let Y=Math.round(ee),se=Math.round(z);for(let ne=0;ne<h;ne++){let J=ne+Y*w[2]+se*w[1]+T*w[0],te=ne+X*k[2]+H*k[1]+S*k[0];y.values[te]=b[J]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var Xj={kernelName:yi,backendName:"cpu",kernelFunc:qj};function Kj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Ne(r,"cumsum");let l=N.getAxesPermutation([a],r.shape.length),c=r;l!=null&&(c=Os({inputs:{x:r},backend:n,attrs:{perm:l}}));let u=N.getInnerMostAxes(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let d=Mn(c.dtype,"int32"),p=v.makeZerosTypedArray(v.sizeFromShape(c.shape),d),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(y,A)=>y+f-A-1:(y,A)=>y+A;for(let y=0;y<h.length;y+=f)for(let A=0;A<f;A++){let x=m(y,A);if(A===0)p[x]=o?0:h[x];else{let b=m(y,A-1);p[x]=o?h[b]+p[b]:h[x]+p[b]}}let g=n.makeTensorInfo(c.shape,d,p);if(l!=null){let y=N.getUndoAxesPermutation(l),A=Os({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),A}return g}var Zj={kernelName:gi,backendName:"cpu",kernelFunc:Kj};function Yj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=QA(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=qI(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var Jj={kernelName:Rh,backendName:"cpu",kernelFunc:Yj};function Qj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;v.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],d=l*a,p=c*a,h=u/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*d*p*h),g=0;for(let y=0;y<i;++y)for(let A=0;A<d;++A){let x=Math.floor(A/a),b=A%a;for(let w=0;w<p;++w){let k=Math.floor(w/a),S=w%a,E=(b*a+S)*h;for(let R=0;R<h;++R){let $=R+E+u*(k+c*(x+l*y));m[g++]=f[$]}}}return n.makeTensorInfo([i,d,p,h],r.dtype,m)}var eq={kernelName:Ai,backendName:"cpu",kernelFunc:Qj};function z7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s;Ne([r,a],"depthwiseConv2DNative");let u=v.computeStrides(r.shape),d=v.computeStrides(a.shape),p=l;p==null&&(p=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let h=N.computeConv2DInfo(r.shape,a.shape,o,p,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:A}=h,x=A.left,b=A.top,w=h.outChannels/h.inChannels,k=new jt(h.outShape,r.dtype),S=n.data.get(r.dataId).values,E=n.data.get(a.dataId).values,R=k.values;for(let P=0;P<h.batchSize;++P){let $=P*u[0],D=P*k.strides[0];for(let T=0;T<h.outHeight;++T){let O=D+T*k.strides[1],V=T*h.strideHeight-b;for(let H=0;H<f;++H){let z=V+H*g;if(z<0||z>=h.inHeight)continue;let X=H*d[0],ee=$+z*u[1];for(let Y=0;Y<h.outWidth;++Y){let se=O+Y*k.strides[2],ne=Y*h.strideWidth-x;for(let J=0;J<m;++J){let te=ne+J*y;if(te<0||te>=h.inWidth)continue;let ce=X+J*d[1],pe=ee+te*h.inChannels,be=se,we=ce;for(let Ce=0;Ce<h.inChannels;++Ce){let Me=S[pe+Ce];for(let Ge=0;Ge<w;++Ge)R[be+Ge]+=Me*E[we+Ge];be+=w,we+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var tq={kernelName:Ka,backendName:"cpu",kernelFunc:z7};function nq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s;Ne([r,a],"depthwiseConv2dNativeBackpropFilter");let d=N.computeConv2DInfo(r.shape,u,o,i,l,c,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new jt(d.filterShape,"float32"),y=d.padInfo.left,A=d.padInfo.top,x=d.outChannels/d.inChannels,b=n.data.get(r.dataId).values,w=new jt(r.shape,r.dtype,b),k=n.data.get(a.dataId).values,S=new jt(a.shape,a.dtype,k);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((A-E)/p)),P=Math.min(d.outHeight,(d.inHeight+A-E)/p);for(let $=0;$<m;++$){let D=Math.max(0,Math.ceil((y-$)/h)),T=Math.min(d.outWidth,(d.inWidth+y-$)/h);for(let O=0;O<d.outChannels;++O){let V=Math.trunc(O/x),H=O%x,z=0;for(let X=0;X<d.batchSize;++X)for(let ee=R;ee<P;++ee){let Y=E+ee*p-A;for(let se=D;se<T;++se){let ne=$+se*h-y;z+=w.get(X,Y,ne,V)*S.get(X,ee,se,O)}}g.set(z,E,$,V,H)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var sq={kernelName:$h,backendName:"cpu",kernelFunc:nq};function rq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s;Ne([r,a],"depthwiseConv2DNativeBackpropInput");let d=v.computeStrides(r.shape),p=v.computeStrides(a.shape),h=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),f=new jt(h.inShape,"float32"),m=f.values,[g,y,A]=f.strides,x=n.data.get(r.dataId).values,[b,w,k]=d,S=n.data.get(a.dataId).values,[E,R,P]=p,{batchSize:$,filterHeight:D,filterWidth:T,inChannels:O,inHeight:V,inWidth:H,outChannels:z,outHeight:X,outWidth:ee,strideHeight:Y,strideWidth:se}=h,ne=D-1-h.padInfo.top,J=T-1-h.padInfo.left,te=z/O;for(let ce=0;ce<$;++ce)for(let pe=0;pe<O;++pe)for(let be=0;be<V;++be){let we=be-ne,Ce=Math.max(0,Math.ceil(we/Y)),Me=Math.min(X,(D+we)/Y);for(let Ge=0;Ge<H;++Ge){let Ke=Ge-J,it=Math.max(0,Math.ceil(Ke/se)),yt=Math.min(ee,(T+Ke)/se),ht=0;for(let ft=Ce;ft<Me;++ft){let bt=ft*Y-we;for(let wt=it;wt<yt;++wt){let $t=wt*se-Ke,zt=b*ce+w*ft+k*wt,ns=E*(D-1-bt)+R*(T-1-$t)+P*pe;for(let Sn=0;Sn<te;++Sn){let or=pe*te+Sn,Bn=x[zt+or],ms=S[ns+Sn];ht+=Bn*ms}}}m[g*ce+y*be+A*Ge+pe]=ht}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var aq={kernelName:Dh,backendName:"cpu",kernelFunc:rq};function oq(e){let{inputs:t,backend:n}=e,{x:s}=t,r=v.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=Fe([r,r],s.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*r+c]=a[c];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var iq={kernelName:_h,backendName:"cpu",kernelFunc:oq},lq={kernelName:Jc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,d=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:E,dilationWidth:R,outShape:P}=N.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),$=v.sizeFromShape(P),D=P.length,T=v.getArrayFromDType(s.dtype,$);for(let V=0;V<h;++V)for(let H=0;H<y;++H){let z=H*b-x.top;for(let X=0;X<A;++X){let ee=X*w-x.left;for(let Y=0;Y<g;++Y){let se=Number.MIN_SAFE_INTEGER;for(let J=0;J<k;++J){let te=z+J*E;if(te>=0&&te<f)for(let ce=0;ce<S;++ce){let pe=ee+ce*R;if(pe>=0&&pe<m){let be=v.locToIndex([V,te,pe,Y],u,v.computeStrides(s.shape)),we=v.locToIndex([J,ce,Y],p,v.computeStrides(r.shape)),Ce=c[be]+d[we];Ce>se&&(se=Ce)}}}let ne=v.locToIndex([V,H,X,Y],D,v.computeStrides(P));T[ne]=se}}}return{dataId:l.write(v.toTypedArray(T,s.dtype),P,s.dtype),shape:P,dtype:s.dtype}}},uq={kernelName:Ph,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=v.toNestedArray(s.shape,c.data.get(s.dataId).values),d=v.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${Ph}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let P=v.toNestedArray(R,c.data.get(a.dataId).values),$=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<p;++T)for(let O=0;O<g;++O){let V=O*x-A.top;for(let H=0;H<y;++H){let z=H*b-A.left;for(let X=0;X<m;++X){let ee=Number.MIN_SAFE_INTEGER,Y=0,se=0;for(let ne=0;ne<w;++ne){let J=V+ne*S;if(J>=0&&J<h)for(let te=0;te<k;++te){let ce=z+te*E;if(ce>=0&&ce<f){let pe=u[T][J][ce][X]+d[ne][te][X];pe>ee&&(ee=pe,Y=ne,se=te)}}}$[Y][se][X]+=P[T][O][H][X]}}}return{dataId:c.write(v.toTypedArray($,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},cq={kernelName:Fh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=v.toNestedArray(s.shape,c.data.get(s.dataId).values),d=v.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${Fh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let P=v.toNestedArray(R,c.data.get(a.dataId).values),$=v.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<p;++T)for(let O=0;O<g;++O){let V=O*x-A.top;for(let H=0;H<y;++H){let z=H*b-A.left;for(let X=0;X<m;++X){let ee=Number.MIN_SAFE_INTEGER,Y=V<0?0:V,se=z<0?0:z;for(let ne=0;ne<w;++ne){let J=V+ne*S;if(J>=0&&J<h)for(let te=0;te<k;++te){let ce=z+te*E;if(ce>=0&&ce<f){let pe=u[T][J][ce][X]+d[ne][te][X];pe>ee&&(ee=pe,Y=J,se=ce)}}}$[T][Y][se][X]+=P[T][O][H][X]}}}return{dataId:c.write(v.toTypedArray($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function up(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"sum");let i;r.dtype==="bool"?i=Ho({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Wr({inputs:{x:r},backend:n});let l=i.shape.length,c=v.parseAxisParam(a,i.shape),u=N.getAxesPermutation(c,l),d=c,p=i;u!=null&&(p=Os({inputs:{x:i},backend:n,attrs:{perm:u}}),d=N.getInnerMostAxes(d.length,l)),N.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=N.computeOutAndReduceShapes(p.shape,d),m=N.upcastType(p.dtype,"int32"),g=Dm(n,h,m),y=v.sizeFromShape(f),A=n.data.get(g.dataId).values,x=n.data.get(p.dataId).values;for(let b=0;b<A.length;++b){let w=b*y,k=0;for(let S=0;S<y;++S)k+=x[w+S];A[b]=k}if(o){let b=N.expandShapeToKeepDim(g.shape,c),w=g;g=Et({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(w)}return n.disposeIntermediateTensorInfo(i),u!=null&&n.disposeIntermediateTensorInfo(p),g}var dq={kernelName:bo,backendName:"cpu",kernelFunc:up};function pq(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:A}=N.getEinsumPermutation(h,l[g]),x;N.isIdentityPermutation(y)?x=a[g]:(x=Os({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let w=0;w<A.length;++w)b.splice(A[w],0,1);v.arraysEqual(x.shape,b)||(x=Et({inputs:{x},backend:n,attrs:{shape:b}}),f.push(x)),p===null?p=x:(p=_m({inputs:{a:x,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=up({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var hq={kernelName:Qc,backendName:"cpu",kernelFunc:pq};function fq(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Ne([s,r],"eluGrad");let a=new Float32Array(v.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let c=o[l];c>=1?a[l]=i[l]:a[l]=i[l]*(c+1)}return n.makeTensorInfo(r.shape,"float32",a)}var mq={kernelName:Oh,backendName:"cpu",kernelFunc:fq},gq=N.ERF_P,yq=N.ERF_A1,Aq=N.ERF_A2,xq=N.ERF_A3,bq=N.ERF_A4,vq=N.ERF_A5,wq=xt(au,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+gq*n);return t*(1-((((vq*s+bq)*s+xq)*s+Aq)*s+yq)*s*Math.exp(-n*n))}),kq={kernelName:au,backendName:"cpu",kernelFunc:wq};function Pm(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),Et({inputs:{x:r},backend:n,attrs:{shape:i}})}var Iq={kernelName:xi,backendName:"cpu",kernelFunc:Pm},Sq=sn((e,t)=>e/t),lx=In(Za,Sq),ux={kernelName:Za,backendName:"cpu",kernelFunc:lx};function L7(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[r,a],u=v.sizeFromShape(c),d=v.getTypedArrayFromDType("float32",u),p=v.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){let y=bl({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),A=bl({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=Ss({inputs:{real:y,imag:A},backend:n}),{real:b,imag:w}=Cq(x,t,n),k=N.mergeRealAndImagArrays(b,w);for(let S=0;S<a;S++){let E=N.getComplexWithIndex(k,S);d[g*a+S]=E.real,p[g*a+S]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(x)}let h=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",p),m=Ss({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function Cq(e,t,n){let s=v.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(Tq(s)){let i=cx(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(l,"float32",i.real),u=n.makeTensorInfo(l,"float32",i.imag),d=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),p=Wr({inputs:{x:d},backend:n}),h=ux.kernelFunc({inputs:{a:c,b:d},backend:n}),f=ux.kernelFunc({inputs:{a:u,b:p},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=N.mergeRealAndImagArrays(a,o),l=Nq(i,s,t);return N.splitRealAndImagArrays(l)}}function Tq(e){return(e&e-1)==0}function cx(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=N.mergeRealAndImagArrays(e,t),o=n/2,i=N.complexWithEvenIndex(a),l=i.real,c=i.imag,u=[l.length],d=r.makeTensorInfo(u,"float32",l),p=r.makeTensorInfo(u,"float32",c),h=Ss({inputs:{real:d,imag:p},backend:r}),f=N.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],A=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),b=Ss({inputs:{real:A,imag:x},backend:r}),w=cx(l,c,o,s,r),k=w.real,S=w.imag,E=[k.length],R=r.makeTensorInfo(E,"float32",k),P=r.makeTensorInfo(E,"float32",S),$=Ss({inputs:{real:R,imag:P},backend:r}),D=cx(m,g,o,s,r),T=D.real,O=D.imag,V=[T.length],H=r.makeTensorInfo(V,"float32",T),z=r.makeTensorInfo(V,"float32",O),X=Ss({inputs:{real:H,imag:z},backend:r}),ee=N.exponents(n,s),Y=[ee.real.length],se=r.makeTensorInfo(Y,"float32",ee.real),ne=r.makeTensorInfo(Y,"float32",ee.imag),J=Ss({inputs:{real:se,imag:ne},backend:r}),te=_m({inputs:{a:J,b:X},backend:r}),ce=ip({inputs:{a:$,b:te},backend:r}),pe=ax({inputs:{a:$,b:te},backend:r}),be=xl({inputs:{input:ce},backend:r}),we=xl({inputs:{input:pe},backend:r}),Ce=ec({inputs:{input:ce},backend:r}),Me=ec({inputs:{input:pe},backend:r}),Ge=tc({inputs:[be,we],backend:r,attrs:{axis:0}}),Ke=tc({inputs:[Ce,Me],backend:r,attrs:{axis:0}}),it=r.data.get(Ge.dataId).values,yt=r.data.get(Ke.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(Ce),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(Me),r.disposeIntermediateTensorInfo(Ge),r.disposeIntermediateTensorInfo(Ke),{real:it,imag:yt}}function Nq(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=N.exponent(r*i,t,n),c=N.getComplexWithIndex(e,i);a+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}n&&(a/=t,o/=t),N.assignToTypedArray(s,a,o,r)}return s}function Eq(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Et({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=L7(i,!1,n),c=Et({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var Rq={kernelName:Mh,backendName:"cpu",kernelFunc:Eq};function dx(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||v.inferDtype(r),i=v.getArrayFromDType(o,v.sizeFromShape(s));return Dq(i,r,o),t.makeTensorInfo(s,o,i)}var $q={kernelName:ou,backendName:"cpu",kernelFunc:dx};function Dq(e,t,n){e.fill(t)}var _q={kernelName:bi,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[o,i,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let p=0;p<o;p++){let h=p*l*i*c;for(let f=0;f<i;f++){let m=f*(l*c);for(let g=0;g<l;g++){let y=g*c;for(let A=0;A<c;A++){let x=Math.round(l-g-1),b=h+m+y+A,w=u[b];if(x>=0&&x<l){let k=x*c,S=h+m+k+A;w=u[S]}a[b]=w}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Fq=sn((e,t)=>Math.floor(e/t)),Pq=In(eo,Fq,null,"int32"),Oq={kernelName:eo,backendName:"cpu",kernelFunc:Pq};function Mq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=M7({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=ip({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=ox(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var zq={kernelName:Co,backendName:"cpu",kernelFunc:Mq};function Lq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=z7({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=ip({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=ox(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var Bq={kernelName:To,backendName:"cpu",kernelFunc:Lq};function Wq(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=v.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,c,u,d]=N.prepareAndValidate(s,r);if(c===0)return n.makeTensorInfo(l,s.dtype,[]);let p=n.data.get(r.dataId).values,h=n.bufferSync(s),f=t7(p,h,s.dtype,c,i,u,d,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var Vq={kernelName:wi,backendName:"cpu",kernelFunc:Wq};function Uq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Ne([r,a],"gatherV2");let l=v.parseAxisParam(o,r.shape)[0],c=n.data.get(a.dataId).values,u=r.shape[l];for(let b=0;b<c.length;++b){let w=c[b];v.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);let p=v.sizeFromShape(a.shape),h=N.segment_util.collectGatherOpShapeInfo(r,a,l,d),f=Et({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Et({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],y=n.bufferSync(m),A=n.bufferSync(f),x=n7(A,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,x.dtype,x.values)}var Gq={kernelName:vi,backendName:"cpu",kernelFunc:Uq};function Hq(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Et({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=L7(i,!0,n),c=Et({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var jq={kernelName:zh,backendName:"cpu",kernelFunc:Hq},qq=xt(iu,e=>Number.isFinite(e)?1:0,"bool"),Xq={kernelName:iu,backendName:"cpu",kernelFunc:qq},Kq=xt(lu,e=>Math.abs(e)===1/0?1:0,"bool"),Zq={kernelName:lu,backendName:"cpu",kernelFunc:Kq},Yq=xt(uu,e=>Number.isNaN(e)?1:0,"bool"),Jq={kernelName:uu,backendName:"cpu",kernelFunc:Yq};function Qq(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=i7(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var eX={kernelName:Lh,backendName:"cpu",kernelFunc:Qq},tX=xt(cu,e=>Math.log1p(e)),nX={kernelName:cu,backendName:"cpu",kernelFunc:tX},sX=sn((e,t)=>e&&t),rX=In(Ii,sX,null,"bool"),aX={kernelName:Ii,backendName:"cpu",kernelFunc:rX},oX=xt(du,e=>e?0:1,"bool"),iX={kernelName:du,backendName:"cpu",kernelFunc:oX},lX=sn((e,t)=>e||t),uX=In(td,lX,null,"bool"),cX={kernelName:td,backendName:"cpu",kernelFunc:uX};function dX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Ne(r,"LRN");let c=r.shape[3],u=c-1,d=n.data.get(r.dataId).values,p=v.sizeFromShape(r.shape),h=new Float32Array(p);function f(m){let g=m%c,y=m-g+Math.max(0,g-a),A=m-g+Math.min(g+a,u),x=0;for(;y<=A;y++){let b=d[y];x+=b*b}return x}for(let m=0;m<p;m++){let g=f(m),y=d[m]*Math.pow(o+i*g,-l);h[m]=y}return n.makeTensorInfo(r.shape,r.dtype,h)}var pX={kernelName:nd,backendName:"cpu",kernelFunc:dX};function hX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s;Ne(o,"LRNGrad");let d=v.sizeFromShape(o.shape),p=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),y=d;for(let A=0;A<y;A++){let x=A%p,b=A-x+Math.max(0,x-i),w=A-x+Math.min(p,x+i+1),k=0;for(let S=b;S<w;S++)k+=Math.pow(f[S],2);k=c*k+l;for(let S=b;S<w;S++){let E=-2*c*u*f[S]*m[A]/k;A===S&&(E+=Math.pow(k,-u)),E*=h[A],g[S]+=E}}return n.makeTensorInfo(o.shape,r.dtype,g)}var fX={kernelName:Bh,backendName:"cpu",kernelFunc:hX};function B7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,c=l.length,u=v.parseAxisParam(a,l),d=u,p=N.getAxesPermutation(d,c),h=i.data.get(r.dataId).values;if(p!=null){let b=new Array(c);for(let w=0;w<b.length;w++)b[w]=l[p[w]];h=nx(h,l,r.dtype,p,b),d=N.getInnerMostAxes(d.length,c),l=b}Ne(r,"max"),N.assertAxesAreInnerMostDims("max",d,c);let[f,m]=N.computeOutAndReduceShapes(l,d),g=v.sizeFromShape(m),y=u7(h,g,f,r.dtype),A=i.write(y,f,r.dtype),x=f;return o&&(x=N.expandShapeToKeepDim(f,u)),{dataId:A,shape:x,dtype:r.dtype}}var mX={kernelName:oo,backendName:"cpu",kernelFunc:B7};function gX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ne(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))d=Wr({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=ix(p,r.shape,r.dtype,h,u,"max");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var yX={kernelName:io,backendName:"cpu",kernelFunc:gX};function AX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Ne(r,"maxPool3d");let u=N.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=O7(d,r.shape,r.dtype,v.computeStrides(r.shape),u,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var xX={kernelName:sd,backendName:"cpu",kernelFunc:AX};function bX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Ne([r,a],"maxPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=n.bufferSync(a),p=uj(d,u),h=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,A=u.dilationWidth,x=u.effectiveFilterDepth,b=u.effectiveFilterHeight,w=u.effectiveFilterWidth,k=x-1-u.padInfo.front,S=w-1-u.padInfo.left,E=b-1-u.padInfo.top,R=Fe(a.shape,"float32"),P=n.bufferSync(r);for(let $=0;$<u.batchSize;++$)for(let D=0;D<u.inChannels;++D)for(let T=0;T<u.inDepth;++T)for(let O=0;O<u.inHeight;++O)for(let V=0;V<u.inWidth;++V){let H=T-k,z=O-E,X=V-S,ee=0;for(let Y=0;Y<x;Y+=g){let se=(H+Y)/h;if(!(se<0||se>=u.outDepth||Math.floor(se)!==se))for(let ne=0;ne<b;ne+=y){let J=(z+ne)/f;if(!(J<0||J>=u.outHeight||Math.floor(J)!==J))for(let te=0;te<w;te+=A){let ce=(X+te)/m;if(ce<0||ce>=u.outWidth||Math.floor(ce)!==ce)continue;let pe=x*b*w-1-p.get($,se,J,ce,D),be=Y*b*w+ne*w+te,we=pe===be?1:0;if(we===0)continue;ee+=P.get($,se,J,ce,D)*we}}}R.set(ee,$,T,O,V,D)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var vX={kernelName:Vh,backendName:"cpu",kernelFunc:bX};function wX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Ne([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=n.data.get(i.dataId).values,f=Fe(p.outShape,i.dtype,P7(h,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,A=p.dilationWidth,x=p.effectiveFilterHeight,b=p.effectiveFilterWidth,w=b-1-p.padInfo.left,k=x-1-p.padInfo.top,S=Fe(i.shape,"float32"),E=n.data.get(r.dataId).values,R=Fe(r.shape,"float32",E);for(let P=0;P<p.batchSize;++P)for(let $=0;$<p.inChannels;++$)for(let D=0;D<p.inHeight;++D)for(let T=0;T<p.inWidth;++T){let O=D-k,V=T-w,H=0;for(let z=0;z<x;z+=y){let X=(O+z)/m;if(!(X<0||X>=p.outHeight||Math.floor(X)!==X))for(let ee=0;ee<b;ee+=A){let Y=(V+ee)/g;if(Y<0||Y>=p.outWidth||Math.floor(Y)!==Y)continue;let se=x*b-1-f.get(P,X,Y,$),ne=z*b+ee,J=se===ne?1:0;if(J===0)continue;H+=R.get(P,X,Y,$)*J}}S.set(H,P,D,T,$)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}var kX={kernelName:Wh,backendName:"cpu",kernelFunc:wX};function IX(e,t,n,s,r){let a=v.computeStrides(t),o=ix(e,t,n,a,r,"max"),i=P7(e,t,n,r,!0,s);return[o.values,i.values]}var SX={kernelName:Uh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Ne(s,"MaxPoolWithArgmax");let c=l.data.get(s.dataId).values,u=N.computePool2DInfo(s.shape,r,a,[1,1],o),[d,p]=IX(c,s.shape,s.dtype,i,u),h=l.write(d,u.outShape,s.dtype),f=l.write(p,u.outShape,s.dtype);return[{dataId:h,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function CX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=v.parseAxisParam(a,r.shape),c=N.computeOutAndReduceShapes(r.shape,i)[1],u=v.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=Ho({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(h);let f=lx({inputs:{a:h,b:p},backend:n});d.push(f);let m=up({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var TX={kernelName:lo,backendName:"cpu",kernelFunc:CX};function NX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"min");let i=v.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Os({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let A=y*h,x=m[A];for(let b=0;b<h;++b){let w=m[A+b];(Number.isNaN(w)||w<x)&&(x=w)}f[y]=x}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),A=Et({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),A}return g}var EX={kernelName:uo,backendName:"cpu",kernelFunc:NX};function RX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Ne(r,"mirrorPad");let i=a.map((x,b)=>x[0]+r.shape[b]+x[1]),l=a.map(x=>x[0]),c=a.map((x,b)=>x[0]+r.shape[b]),u=o==="reflect"?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,h=v.computeStrides(r.shape),f=v.sizeFromShape(i),m=i.length,g=v.computeStrides(i),y=v.getTypedArrayFromDType(r.dtype,f);for(let x=0;x<f;x++){let b=v.indexToLoc(x,m,g);for(let k=0;k<m;k++)b[k]<l[k]?b[k]=l[k]*2-b[k]-u:b[k]>=c[k]&&(b[k]=(c[k]-1)*2-b[k]+u);b=b.map((k,S)=>k-l[S]);let w=v.locToIndex(b,p,h);y[x]=d[w]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}var $X={kernelName:co,backendName:"cpu",kernelFunc:RX},DX=sn((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),_X=In(pu,DX),FX={kernelName:pu,backendName:"cpu",kernelFunc:_X},PX=ci(O5());function W7(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=v.parseAxisParam([i],r.shape),c=B7({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=N.expandShapeToKeepDim(c.shape,l),d=Et({inputs:{x:c},backend:n,attrs:{shape:u}}),p=ax({inputs:{a:r,b:d},backend:n}),h=JI({inputs:{x:p},backend:n}),f=up({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=Et({inputs:{x:f},backend:n,attrs:{shape:u}}),g=lx({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var OX={kernelName:vo,backendName:"cpu",kernelFunc:W7};function MX(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Ne(r,"multinomial");let l=i?r:W7({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],d=n.data.get(l.dataId).values,p=[c,a],h=v.makeZerosTypedArray(v.sizeFromShape(p),"int32");for(let f=0;f<c;++f){let m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+d[m+x];let y=PX.alea(o.toString()),A=f*a;for(let x=0;x<a;++x){let b=y();h[A+x]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){h[A+x]=w;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",h)}var zX={kernelName:Gh,backendName:"cpu",kernelFunc:MX},LX=Zs.nonMaxSuppressionV3Impl;function BX(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Ne(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,{selectedIndices:d}=LX(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var WX={kernelName:Ci,backendName:"cpu",kernelFunc:BX},VX=Zs.nonMaxSuppressionV4Impl;function UX(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s;Ne(r,"NonMaxSuppressionPadded");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:h}=VX(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var GX={kernelName:hu,backendName:"cpu",kernelFunc:UX},HX=Zs.nonMaxSuppressionV5Impl;function jX(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s;Ne(r,"NonMaxSuppressionWithScore");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=HX(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var qX={kernelName:Ti,backendName:"cpu",kernelFunc:jX};function XX(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;Ne(r,"oneHot");let l=v.sizeFromShape(r.shape),c=new Float32Array(l*a);c.fill(i);let u=n.data.get(r.dataId).values;for(let d=0;d<l;++d)u[d]>=0&&u[d]<a&&(c[d*a+u[d]]=o);return n.makeTensorInfo([...r.shape,a],"int32",c)}var KX={kernelName:Ei,backendName:"cpu",kernelFunc:XX};function Om(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=xl({inputs:{input:s},backend:n}),a=Om({inputs:{x:r},backend:n}),o=ec({inputs:{input:s},backend:n}),i=Om({inputs:{x:o},backend:n}),l=Ss({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return dx({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var ZX={kernelName:Hi,backendName:"cpu",kernelFunc:Om};function V7(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=xl({inputs:{input:s},backend:n}),a=V7({inputs:{x:r},backend:n}),o=ec({inputs:{input:s},backend:n}),i=Om({inputs:{x:o},backend:n}),l=Ss({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return dx({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var YX={kernelName:Ni,backendName:"cpu",kernelFunc:V7};function U7(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Pm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Pm({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=tc({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var JX={kernelName:Ri,backendName:"cpu",kernelFunc:U7};function QX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Ne(r,"pad");let i=a.map((A,x)=>A[0]+r.shape[x]+A[1]),l=a.map(A=>A[0]),c=n.data.get(r.dataId).values,u=v.sizeFromShape(r.shape),d=r.shape.length,p=v.computeStrides(r.shape),h=v.sizeFromShape(i),f=i.length,m=v.computeStrides(i),g=v.getTypedArrayFromDType(r.dtype,h);o!==0&&g.fill(o);for(let A=0;A<u;A++){let b=v.indexToLoc(A,d,p).map((k,S)=>k+l[S]),w=v.locToIndex(b,f,m);g[w]=c[A]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var G7={kernelName:ho,backendName:"cpu",kernelFunc:QX},eK=sn((e,t)=>Math.pow(e,t)),tK=In(fo,eK),nK={kernelName:fo,backendName:"cpu",kernelFunc:tK};function sK(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=sx(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var rK={kernelName:fu,backendName:"cpu",kernelFunc:sK},aK=xt(mu,e=>1/e),oK={kernelName:mu,backendName:"cpu",kernelFunc:aK};function iK(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ne(r,"resizeBilinear");let l=v.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(v.sizeFromShape([d,c,u,f])),y=[a&&c>1?p-1:p,a&&u>1?h-1:h],A=[a&&c>1?c-1:c,a&&u>1?u-1:u],x=0,b=y[0]/A[0],w=y[1]/A[1];for(let k=0;k<d;k++)for(let S=0;S<c;S++){let E;o?E=b*(S+.5)-.5:E=b*S;let R=Math.max(0,Math.floor(E)),P=E-R,$=Math.min(p-1,Math.ceil(E)),D=k*l[0]+R*l[1],T=k*l[0]+$*l[1];for(let O=0;O<u;O++){let V;o?V=w*(O+.5)-.5:V=w*O;let H=Math.max(0,Math.floor(V)),z=V-H,X=Math.min(h-1,Math.ceil(V)),ee=D+H*l[2],Y=T+H*l[2],se=D+X*l[2],ne=T+X*l[2];for(let J=0;J<f;J++){let te=m[ee+J],ce=m[Y+J],pe=m[se+J],be=m[ne+J],we=te+(pe-te)*z,Ce=ce+(be-ce)*z,Me=we+(Ce-we)*P;g[x++]=Me}}}return n.makeTensorInfo([d,c,u,f],"float32",g)}var lK={kernelName:yo,backendName:"cpu",kernelFunc:iK};function uK(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ne([a,r],"resizeBilinearGrad");let i=v.computeStrides(r.shape),[l,c,u,d]=r.shape,[,p,h]=a.shape,f=new Float32Array(l*c*u*d),m=[o&&p>1?c-1:c,o&&h>1?u-1:u],g=[o&&p>1?p-1:p,o&&h>1?h-1:h],y=m[0]/g[0],A=m[1]/g[1],x=n.data.get(a.dataId).values,b=0;for(let w=0;w<l;w++){let k=w*i[0];for(let S=0;S<p;S++){let E=S*y,R=Math.floor(E),P=Math.min(Math.ceil(E),c-1),$=k+R*i[1],D=k+P*i[1],T=E-R,O=1-T;for(let V=0;V<h;V++){let H=V*A,z=Math.floor(H),X=Math.min(Math.ceil(H),u-1),ee=H-z,Y=1-ee,se=$+z*i[2],ne=$+X*i[2],J=D+z*i[2],te=D+X*i[2],ce=O*Y,pe=O*ee,be=T*Y,we=T*ee;for(let Ce=0;Ce<d;Ce++){let Me=x[b++];f[se+Ce]+=Me*ce,f[ne+Ce]+=Me*pe,f[J+Ce]+=Me*be,f[te+Ce]+=Me*we}}}}return n.makeTensorInfo([l,u,c,d],"float32",f)}var cK={kernelName:jh,backendName:"cpu",kernelFunc:uK};function dK(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ne(r,"resizeNearestNeighbor");let l=v.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*c*u*f),y=[a&&c>1?p-1:p,a&&u>1?h-1:h],A=[a&&c>1?c-1:c,a&&u>1?u-1:u],x=y[0]/A[0],b=y[1]/A[1],w=0;for(let k=0;k<d;k++){let S=k*l[0];for(let E=0;E<c;E++){let R=o?x*(E+.5):x*E,P=Math.min(p-1,a?Math.round(R):Math.floor(R));o&&(P=Math.max(0,P));let $=S+P*l[1];for(let D=0;D<u;D++){let T=o?b*(D+.5):b*D,O=Math.min(h-1,a?Math.round(T):Math.floor(T));o&&(O=Math.max(0,O));let V=$+O*l[2];for(let H=0;H<f;H++){let z=m[V+H];g[w++]=z}}}}return n.makeTensorInfo([d,c,u,f],r.dtype,g)}var pK={kernelName:gu,backendName:"cpu",kernelFunc:dK};function hK(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ne([a,r],"resizeNearestNeighborGrad");let i=v.computeStrides(r.shape),l=v.computeStrides(a.shape),[c,u,d,p]=r.shape,[,h,f]=a.shape,m=new Float32Array(c*u*d*p),g=n.data.get(a.dataId).values,y=[o&&h>1?u-1:u,o&&f>1?d-1:d],A=[o&&h>1?h-1:h,o&&f>1?f-1:f],x=y[0]/A[0],b=y[1]/A[1],w=1/x,k=1/b,S=Math.ceil(w)*2+2,E=Math.ceil(k)*2+2;for(let R=0;R<c;R++){let P=R*i[0];for(let $=0;$<u;$++){let D=P+$*i[1],T=Math.floor($*w),O=Math.floor(T-S/2);for(let V=0;V<d;V++){let H=D+V*i[2],z=Math.floor(V*k),X=Math.floor(z-E/2);for(let ee=0;ee<p;ee++){let Y=0;for(let se=0;se<S;se++){let ne=se+O;if(ne<0||ne>=h)continue;let J=P+ne*l[1],te=ne*x,ce=Math.min(u-1,o?Math.round(te):Math.floor(te));if($===ce)for(let pe=0;pe<E;pe++){let be=pe+X;if(be<0||be>=f)continue;let we=J+be*l[2],Ce=be*b,Me=Math.min(d-1,o?Math.round(Ce):Math.floor(Ce));V===Me&&(Y+=g[we+ee])}}m[H+ee]=Y}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var fK={kernelName:Hh,backendName:"cpu",kernelFunc:hK};function mK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Ne(r,"reverse");let o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Wr({inputs:{x:r},backend:n});let l=new jt(r.shape,r.dtype),c=n.bufferSync(r);for(let u=0;u<l.size;u++){let d=l.indexToLoc(u),p=d.slice();i.forEach(h=>p[h]=r.shape[h]-1-p[h]),l.set(c.get(...p),...d)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var gK={kernelName:_i,backendName:"cpu",kernelFunc:mK},yK={kernelName:ji,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[c,u,d,p]=s.shape,[h,f]=N.getImageCenter(o,u,d),m=255,g=Math.sin(r),y=Math.cos(r),A=i.data.get(s.dataId).values;for(let b=0;b<c;b++){let w=b*d*u*p;for(let k=0;k<u;k++){let S=k*(d*p);for(let E=0;E<d;E++){let R=E*p;for(let P=0;P<p;P++){let $=[c,k,E,P],D=$[2],T=$[1],O=(D-h)*y-(T-f)*g,V=(D-h)*g+(T-f)*y;O=Math.round(O+h),V=Math.round(V+f);let H=a;if(typeof a!="number"&&(P===3?H=m:H=a[P]),O>=0&&O<d&&V>=0&&V<u){let X=V*(d*p),ee=O*p,Y=w+X+ee+P;H=A[Y]}let z=w+S+R+P;l[z]=H}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},AK=xt(Fi,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),xK={kernelName:Fi,backendName:"cpu",kernelFunc:AK};function H7(e,t,n,s,r,a,o,i,l,c){let u=[s/r,r],d=e.values,p=t.values;if(s===0)return Fe(n,t.dtype);let h=Fe(u,t.dtype);h.values.fill(l);for(let f=0;f<a;f++){let m=[],g=0;for(let y=0;y<o;y++){let A=d[f*o+y];m.push(A),g+=A*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<r;y++)c?h.values[g*r+y]+=p[f*r+y]:h.values[g*r+y]=t.rank===0?p[0]:p[f*r+y]}return h}function bK(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=H7(h,f,o,d,c,l,i,u,0,p);return n.makeTensorInfo(o,m.dtype,m.values)}var vK={kernelName:Pi,backendName:"cpu",kernelFunc:bK};function wK(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Ne([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=Mn(r.dtype,a.dtype),d=v.makeZerosTypedArray(v.sizeFromShape(r.shape),u),p=0,h=o===0||o>1||r.shape.length===1?1:v.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?d[p++]=l[f]:d[p++]=c[f];return n.makeTensorInfo(r.shape,u,d)}var kK={kernelName:Oi,backendName:"cpu",kernelFunc:wK},IK=N.SELU_SCALEALPHA,SK=N.SELU_SCALE,CK=xt(yu,e=>e>=0?SK*e:IK*(Math.exp(e)-1)),TK={kernelName:yu,backendName:"cpu",kernelFunc:CK},NK=xt(Au,e=>e<0?-1:e>0?1:0),EK={kernelName:Au,backendName:"cpu",kernelFunc:NK},RK=xt(xo,e=>Math.sin(e)),$K={kernelName:xo,backendName:"cpu",kernelFunc:RK},DK=xt(zi,e=>Math.sinh(e)),_K={kernelName:zi,backendName:"cpu",kernelFunc:DK},FK=11920928955078125e-23,j7=Math.log(FK)+2,PK=xt(xu,e=>{let t=e>-j7,n=e<j7,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),OK={kernelName:xu,backendName:"cpu",kernelFunc:PK};function MK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Ne([r],"spaceToBatchND");let i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let c=G7.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=Et({inputs:{x:c},backend:n,attrs:{shape:u}}),A=Os({inputs:{x:m},backend:n,attrs:{perm:d}}),w=Et({inputs:{x:A},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(A),w}var zK={kernelName:Li,backendName:"cpu",kernelFunc:MK};function LK(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[d,p,h,f,m]=y7(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var BK={kernelName:qh,backendName:"cpu",kernelFunc:LK};function WK(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[c,u,d]=A7(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var VK={kernelName:Xh,backendName:"cpu",kernelFunc:WK};function UK(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=rx(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var GK={kernelName:Kh,backendName:"cpu",kernelFunc:UK};function HK(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=rx(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var jK={kernelName:Zh,backendName:"cpu",kernelFunc:HK};function qK(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=N.calculateShapes(a,r,i),h=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],y=H7(f,m,i,p,u,c,l,d,g,h);return n.makeTensorInfo(i,y.dtype,y.values)}var XK={kernelName:ad,backendName:"cpu",kernelFunc:qK};function KK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=bl({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[i]+=d,h})}var ZK={kernelName:Bi,backendName:"cpu",kernelFunc:KK},YK={kernelName:bu,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Ne(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},JK=xt(Io,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),QK={kernelName:Io,backendName:"cpu",kernelFunc:JK};function eZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s;Ne(r,"stridedSlice");let{nonStrided:h,$begin:f,$strides:m,size:g,newShape:y,outShape:A}=Qt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),x=Et({inputs:{x:r},backend:n,attrs:{shape:y}}),b;if(h){let k=bl({inputs:{x},backend:n,attrs:{begin:f,size:g}});b=Et({inputs:{x:k},backend:n,attrs:{shape:A}}),n.disposeIntermediateTensorInfo(k)}else if(A.some(k=>k===0))b=n.makeTensorInfo(A,r.dtype,[]);else{let k=n.bufferSync(x),S=b7(A,k,m,f);b=n.makeTensorInfo(S.shape,S.dtype,S.values)}let w=Et({inputs:{x:b},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),w}var tZ={kernelName:Wi,backendName:"cpu",kernelFunc:eZ};function nZ(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.data.get(u.dataId).values,h=n.data.get(d.dataId).values,[f,m]=v7(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var sZ={kernelName:od,backendName:"cpu",kernelFunc:nZ};function rZ(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[c,u,d]=w7(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var aZ={kernelName:Yh,backendName:"cpu",kernelFunc:rZ};function oZ(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=k7(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var iZ={kernelName:Jh,backendName:"cpu",kernelFunc:oZ},lZ=xt(Vi,e=>Math.tan(e)),uZ={kernelName:Vi,backendName:"cpu",kernelFunc:lZ},cZ=xt(wo,e=>Math.tanh(e)),dZ={kernelName:wo,backendName:"cpu",kernelFunc:cZ};function pZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Ne(r,"tile");let o=S7(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var hZ={kernelName:ca,backendName:"cpu",kernelFunc:pZ};function fZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Ne(r,"topk");let i=n.data.get(r.dataId).values,[l,c]=T7(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var mZ={kernelName:vu,backendName:"cpu",kernelFunc:fZ};function gZ(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=n,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=v.computeStrides(r.shape),A=y[0],x=y[1],b=y[2],w=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(g));w.fill(l);let k=s.data.get(r.dataId).values,S=s.data.get(a.dataId).values;for(let R=0;R<u;++R){let P=a.shape[0]===1?S:S.subarray(R*8,R*8+8);for(let $=0;$<f;++$)for(let D=0;D<m;++D)for(let T=0;T<h;++T){let O,V=P[6]*D+P[7]*$+1;if(V===0)continue;let H=(P[0]*D+P[1]*$+P[2])/V,z=(P[3]*D+P[4]*$+P[5])/V,X=q7(H,p,i),ee=q7(z,d,i);switch(o){case"nearest":O=wZ(k,d,p,A,x,b,R,ee,X,T,l);break;case"bilinear":O=kZ(k,d,p,A,x,b,R,ee,X,T,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let Y=R*A+$*x+D*b+T;w[Y]=O}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}var yZ={kernelName:Ui,backendName:"cpu",kernelFunc:gZ};function q7(e,t,n){switch(n){case"reflect":return AZ(e,t);case"wrap":return xZ(e,t);case"nearest":return vZ(e,t);case"constant":default:return bZ(e,t)}}function AZ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return v.clamp(0,n,t-1)}function xZ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return v.clamp(0,n,t-1)}function bZ(e,t){return e}function vZ(e,t){return v.clamp(0,e,t-1)}function cp(e,t,n,s,r,a,o,i,l,c,u){let d=o*s+i*r+l*a+c;return 0<=i&&i<t&&0<=l&&l<n?e[d]:u}function wZ(e,t,n,s,r,a,o,i,l,c,u){let d=Math.round(i),p=Math.round(l);return cp(e,t,n,s,r,a,o,d,p,c,u)}function kZ(e,t,n,s,r,a,o,i,l,c,u){let d=Math.floor(i),p=Math.floor(l),h=d+1,f=p+1,m=(f-l)*cp(e,t,n,s,r,a,o,d,p,c,u)+(l-p)*cp(e,t,n,s,r,a,o,d,f,c,u),g=(f-l)*cp(e,t,n,s,r,a,o,h,p,c,u)+(l-p)*cp(e,t,n,s,r,a,o,h,f,c,u);return(h-i)*m+(i-d)*g}function IZ(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Ne(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:c}=N7(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var SZ={kernelName:Qh,backendName:"cpu",kernelFunc:IZ};function CZ(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),c=0;for(let h=0;h<o;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o).fill(0),d=r.shape.slice();d[a]=1;let p=new Array(i);for(let h=0;h<p.length;h++){u[a]=h;let f=bl({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});p[h]=Et({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return p}var TZ={kernelName:Gi,backendName:"cpu",kernelFunc:CZ};function NZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Ne(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,c=[],u=[],d=i-l,p=a;for(let f=0;f<d;++f){let m=Pm({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,u.push(m)}for(let f=0;f<o;++f){let m=v.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=ZI({inputs:{a:g,b:p},backend:n}),A=Ho({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=_m({inputs:{a:A,b:r},backend:n}),b=up({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(g),u.push(y),u.push(A),u.push(x),u.push(b)}let h=U7({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var EZ={kernelName:id,backendName:"cpu",kernelFunc:NZ},RZ=[MH,RG,LH,WH,OG,UH,HH,qH,KH,YH,QH,tj,sj,oj,lj,dj,hj,mj,yj,PH,xj,vj,kj,Sj,FG,zG,Tj,$G,Ej,$j,Fj,Oj,Dj,Bj,Vj,zj,Gj,jj,Xj,Zj,Jj,eq,tq,sq,aq,iq,lq,cq,uq,ux,hq,NH,mq,LG,kq,BG,Iq,VG,Rq,$q,_q,GG,Oq,zq,Bq,Vq,Gq,jG,XG,DG,jq,Rj,Xq,Zq,Jq,EH,ZG,JG,eX,eH,nX,aX,iX,cX,pX,fX,nH,yX,xX,vX,kX,SX,mX,TX,EX,rH,$X,FX,zX,oH,lH,WX,GX,qX,cH,KX,YX,JX,G7,nK,$H,hH,rK,_G,oK,DH,_H,FH,lK,cK,pK,fK,gK,yK,xK,mH,vK,kK,TK,yH,EK,$K,_K,AH,OX,OK,zK,BK,VK,GK,jK,XK,ZK,vH,YK,kH,QK,tZ,sZ,aZ,iZ,TH,dq,uZ,dZ,hZ,mZ,dH,yZ,SZ,TZ,EZ,ZX];for(let e of RZ)pa(e);var X7={};ze(X7,{assertNotComplex:()=>sc,bindCanvasToFramebuffer:()=>VZ,bindColorTextureToFramebuffer:()=>Bm,bindTextureToProgramUniformSampler:()=>uS,bindTextureUnit:()=>oS,bindVertexBufferToProgramAttribute:()=>fx,callAndCheck:()=>Se,canBeRepresented:()=>K7,createFragmentShader:()=>J7,createFramebuffer:()=>aS,createProgram:()=>Q7,createStaticIndexBuffer:()=>nS,createStaticVertexBuffer:()=>tS,createTexture:()=>sS,createVertexShader:()=>Y7,getBatchDim:()=>wl,getExtensionOrThrow:()=>hp,getFramebufferErrorMessage:()=>cS,getMaxTexturesInShader:()=>fS,getNumChannels:()=>BZ,getProgramUniformLocation:()=>lS,getProgramUniformLocationOrThrow:()=>iS,getRowsCols:()=>kl,getShapeAs3D:()=>Wm,getTextureShapeFromLogicalShape:()=>pS,getWebGLDisjointQueryTimerVersion:()=>mS,getWebGLErrorMessage:()=>Z7,getWebGLMaxTextureSize:()=>hS,hasExtension:()=>zs,isCapableOfRenderingToFloatTexture:()=>gS,isDownloadFloatTextureEnabled:()=>yS,isReshapeFree:()=>mp,isWebGLFenceEnabled:()=>AS,isWebGLVersionEnabled:()=>gx,linkProgram:()=>eS,resetMaxTextureSize:()=>UZ,resetMaxTexturesInShader:()=>GZ,unbindColorTextureFromFramebuffer:()=>mx,unbindTextureUnit:()=>WZ,validateFramebuffer:()=>fp,validateProgram:()=>Lm,validateTextureSize:()=>rS});var vl={},px={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Mm(e,t){vl[e]=t}function Vr(e){if(!(e in vl)){let n=DZ(e);if(n!==null)vl[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=vl[e];return t.isContextLost()?(delete vl[e],Vr(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),vl[e])}function $Z(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function DZ(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=$Z(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete vl[e]},!1),e===1?t.getContext("webgl",px)||t.getContext("experimental-webgl",px):t.getContext("webgl2",px)}var dp;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(dp||(dp={}));var Ms;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(Ms||(Ms={}));var Rn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Rn||(Rn={}));function pp(e,t){return[t,e]}function _Z(e,t){return e*t}function zm(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function nc(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function FZ(e,t){let[n,s]=nc(e,t);return n*s*4}function hx(e,t){let n=e,s,r,a,o,i,l,c,u,d,p;return K().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,u=1,d=n.HALF_FLOAT,p=n.FLOAT):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT),l=e.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function Se(e,t){let n=t();return K().getBool("DEBUG")&&PZ(e),n}function PZ(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Z7(e,t))}var OZ=596e-10,MZ=65504;function K7(e){return!!(K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||OZ<Math.abs(e)&&Math.abs(e)<MZ)}function Z7(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function hp(e,t){return ka(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Y7(e,t){let n=ka(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Se(e,()=>e.shaderSource(n,t)),Se(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function J7(e,t){let n=ka(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Se(e,()=>e.shaderSource(n,t)),Se(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw LZ(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var zZ=/ERROR: [0-9]+:([0-9]+):/g;function LZ(e,t){let n=zZ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((d,p)=>v.rightPad((p+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let l=o.slice(0,s-1),c=o.slice(s-1,s),u=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function Q7(e){return ka(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function eS(e,t){if(Se(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Lm(e,t){if(Se(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function tS(e,t){let n=ka(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Se(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function nS(e,t){let n=ka(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Se(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Se(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function BZ(){return K().getNumber("WEBGL_VERSION")===2?1:4}function sS(e){return ka(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function rS(e,t){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function aS(e){return ka(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function fx(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),Se(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),Se(e,()=>e.enableVertexAttribArray(i)),!0)}function oS(e,t,n){dS(e,n),Se(e,()=>e.activeTexture(e.TEXTURE0+n)),Se(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function WZ(e,t){dS(e,t),Se(e,()=>e.activeTexture(e.TEXTURE0+t)),Se(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function iS(e,t,n){return ka(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function lS(e,t,n){return e.getUniformLocation(t,n)}function uS(e,t,n,s){Se(e,()=>oS(e,t,s)),Se(e,()=>e.uniform1i(n,s))}function VZ(e){Se(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Se(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),Se(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Bm(e,t,n){Se(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Se(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function mx(e,t){Se(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Se(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function fp(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+cS(e,t))}function cS(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ka(e,t,n){let s=Se(e,()=>t());if(s==null)throw new Error(n);return s}function dS(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function wl(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function kl(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Wm(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[wl(e),...kl(e)]),t}function pS(e,t=!1){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?v.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let s=v.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=wl(e),a=2,o=2;return e.length&&([a,o]=kl(e)),s=r*(a/2)*(o/2),v.sizeToSquarishShape(s).map(i=>i*2)}return v.sizeToSquarishShape(s)}function Vm(e){return e%2==0}function mp(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||Vm(n)&&Vm(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Vm(e[0])&&Vm(t[0])}var Um,Gm;function hS(e){if(Um==null){let t=Vr(e);Um=t.getParameter(t.MAX_TEXTURE_SIZE)}return Um}function UZ(){Um=null}function GZ(){Gm=null}function fS(e){if(Gm==null){let t=Vr(e);Gm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Gm)}function mS(e){if(e===0)return 0;let t,n=Vr(e);return zs(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:zs(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function zs(e,t){return e.getExtension(t)!=null}function gx(e){try{if(Vr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function gS(e){if(e===0)return!1;let t=Vr(e);if(e===1){if(!zs(t,"OES_texture_float"))return!1}else if(!zs(t,"EXT_color_buffer_float"))return!1;return yx(t)}function yS(e){if(e===0)return!1;let t=Vr(e);if(e===1){if(!zs(t,"OES_texture_float")||!zs(t,"WEBGL_color_buffer_float"))return!1}else{if(zs(t,"EXT_color_buffer_float"))return yx(t);let s="EXT_color_buffer_half_float";if(zs(t,s)){let r=t.getExtension(s);return HZ(t,r)}return!1}return yx(t)}function yx(e){let t=hx(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function HZ(e,t){let n=hx(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function AS(e){return e!==2?!1:Vr(e).fenceSync!=null}function sc(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var _e=K();_e.registerFlag("HAS_WEBGL",()=>_e.getNumber("WEBGL_VERSION")>0);_e.registerFlag("WEBGL_VERSION",()=>gx(2)?2:gx(1)?1:0);_e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);_e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>_e.get("WEBGL_VERSION")===2);_e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);_e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);_e.registerFlag("WEBGL_PACK",()=>_e.getBool("HAS_WEBGL"));_e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_PACK_CLIP",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_PACK_REDUCE",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_LAZILY_UNPACK",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_CONV_IM2COL",()=>_e.getBool("WEBGL_PACK"));_e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>hS(_e.getNumber("WEBGL_VERSION")));_e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>fS(_e.getNumber("WEBGL_VERSION")));_e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=_e.getNumber("WEBGL_VERSION");return e===0?0:mS(e)});_e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>_e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Iu.isMobile());_e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>gS(_e.getNumber("WEBGL_VERSION")));_e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>_e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:_e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));_e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>yS(_e.getNumber("WEBGL_VERSION")));_e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>AS(_e.getNumber("WEBGL_VERSION")));_e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>_e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);_e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});_e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Iu.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});_e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);_e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);_e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);_e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Xn(){let e,t,n,s,r,a,o,i,l,c;return K().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}function Il(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function Hm(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function jZ(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function qZ(e,t,n="index"){let s=e.map((a,o)=>o),r=jZ(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function Ax(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function xx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var xS=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:bS}=N;function XZ(e,t,n){let s=[];if(e.forEach(h=>{let f=v.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=bx(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>KZ(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=Xn(),l=JZ(i),c,u,d=tY(i);return t.isPacked?(c=ZZ(t.logicalShape,o,n.enableShapeUniforms),u=eY(i)):(c=YZ(t.logicalShape,o,n.enableShapeUniforms),u=QZ(i)),n.packedInputs&&(d+=aY),[d,l,u,r,c,a,n.userCode].join(`
`)}function rc(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return yY(e,t);case 1:return xY(e,t);case 2:return vY(e,t);case 3:return kY(e,t);case 4:return SY(e,t);case 5:return CY(e);case 6:return TY(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function vS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return gY(e);case 1:return AY(e,t);case 2:return bY(e,t);case 3:return wY(e,t);default:return IY(e,t)}}function KZ(e,t,n=!1,s){let r="";n?r+=vS(e,s):r+=rc(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=NY(e,t):r+=EY(e,t)),r}function ZZ(e,t,n){switch(e.length){case 0:return wS();case 1:return oY(e,t,n);case 2:return fY(e,t,n);case 3:return lY(e,t,n);default:return cY(e,t,n)}}function YZ(e,t,n){switch(e.length){case 0:return wS();case 1:return iY(e,t,n);case 2:return mY(e,t,n);case 3:return uY(e,t,n);case 4:return dY(e,t,n);case 5:return pY(e,t);case 6:return hY(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function JZ(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function QZ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function eY(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function tY(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${nY}
    ${sY}
    ${rY}
  `}var nY=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,sY=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,rY=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,aY=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function wS(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function oY(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function iY(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function lY(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function uY(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Hm(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=Il(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function cY(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+i,l=`b${c}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function dY(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Hm(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=Il(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function pY(e,t){let n=Il(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function hY(e,t){let n=Il(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function fY(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function mY(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Sl(e){return`offset${e}`}function gY(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Xn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function yY(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Sl(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function AY(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=Xn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function xY(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ac(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Sl(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function bY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=Xn();if(a!=null&&v.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function vY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&v.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let p=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=v.squeezeShape(n),l=o;if(l.length<n.length){let p=oc(e,l),h=["row","col"];return`
      ${rc(p,t)}
      float ${r}(int row, int col) {
        return ${r}(${ic(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${ac(e)}
      }
    `;let c=a[0],u=a[1],d=Sl(s);return u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function wY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let p=n.slice(1),h=[1,2],f=oc(e,p),m=["b","row","col"];return`
        ${vS(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${ic(m,h)});
        }
      `}let i=Xn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],c=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function kY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=v.squeezeShape(n),c=i;if(c.length<n.length){let m=oc(e,c),g=["row","col","depth"];return`
        ${rc(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${ic(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${ac(e)}
      }
    `;let u=e.shapeInfo.texShape,d=u[0],p=u[1],h=e.shapeInfo.flatOffset;if(p===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(p===o&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=Sl(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${s}, uv);
      }
  `}function IY(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Xn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=l[0],u=l[1],d=Math.ceil(a[o-1]/2),p=d*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${n}, uv);
    }
  `}function SY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:c}=v.squeezeShape(n);if(l.length<n.length){let A=oc(e,l),x=["row","col","depth","depth2"];return`
      ${rc(A,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${ic(x,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${ac(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===i&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;let y=Sl(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function CY(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:c}=v.squeezeShape(t);if(l.length<t.length){let m=oc(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${rc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${ic(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${ac(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Sl(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function TY(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=v.squeezeShape(t);if(r.length<t.length){let g=oc(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${rc(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${ic(y,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${ac(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Sl(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function ac(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function NY(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=bS(e.shapeInfo.logicalShape,t.logicalShape),l=St(o),c=o-a,u,d=["x","y","z","w","u","v"];a===0?u="":o<2&&i.length>=1?u="coords = 0;":u=i.map(A=>`coords.${d[A+c]} = 0;`).join(`
`);let p="";o<2&&a>0?p="coords":p=e.shapeInfo.logicalShape.map((A,x)=>`coords.${d[x+c]}`).join(", ");let h="return outputValue;",m=v.sizeFromShape(e.shapeInfo.logicalShape)===1,y=v.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!y)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let A=a-2,x=a-1;i.indexOf(A)>-1&&i.indexOf(x)>-1?h="return vec4(outputValue.x);":i.indexOf(A)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(x)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${p});
      ${h}
    }
  `}function EY(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=St(l),u=bS(e.shapeInfo.logicalShape,t.logicalShape),d=l-i,p,h=["x","y","z","w","u","v"];i===0?p="":l<2&&u.length>=1?p="coords = 0;":p=u.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${p}
      return get${s}(${f});
    }
  `}function St(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function bx(e,t,n){let{newShape:s,keptDims:r}=v.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!v.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function oc(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ic(e,t){return t.map(n=>e[n]).join(", ")}function RY(e,t,n,s){let r=n.map((x,b)=>{let w={logicalShape:x.shape,texShape:x.isUniform?null:x.texData.texShape,isUniform:x.isUniform,isPacked:x.isUniform?!1:x.texData.isPacked,flatOffset:null};return x.texData!=null&&x.texData.slice!=null&&x.texData.slice.flatOffset>0&&(w.flatOffset=x.texData.slice.flatOffset),{name:t.variableNames[b],shapeInfo:w}}),a=r.map(x=>x.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=XZ(r,o,t),l=e.createProgram(i),c=null,u=e.getUniformLocation(l,"NAN",!1);K().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(l,"INFINITY",!1));let d=!1,p={},h={},f={};for(let x=0;x<t.variableNames.length;x++){let b=t.variableNames[x];p[b]=e.getUniformLocation(l,b,d),p[`offset${b}`]=e.getUniformLocation(l,`offset${b}`,d),t.enableShapeUniforms&&(h[`${b}Shape`]=e.getUniformLocation(l,`${b}Shape`,d),f[`${b}TexShape`]=e.getUniformLocation(l,`${b}TexShape`,d))}let m,g,y;t.enableShapeUniforms&&(m=e.getUniformLocation(l,"outShape",d),y=e.getUniformLocation(l,"outShapeStrides",d),g=e.getUniformLocation(l,"outTexShape",d));let A=[];return t.customUniforms&&t.customUniforms.forEach((x,b)=>{A[b]=e.getUniformLocation(l,x.name,d)}),{program:t,source:i,webGLProgram:l,uniformLocations:p,customUniformLocations:A,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:u,inShapesLocations:h,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:y,outTexShapeLocation:g}}function kS(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!v.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!v.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function $Y(e,t,n,s,r){t.program.enableShapeUniforms||(kS(t.inShapeInfos,n),kS([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a,o[0],o[1]):e.setOutputMatrixTexture(a,o[0],o[1]),e.setProgram(t.webGLProgram),K().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,c)=>{let u=t.program.variableNames[c],d=t.uniformLocations[u],p=t.uniformLocations[`offset${u}`],h=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(h){let{uniformShape:m}=bx(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),d!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(d,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}l.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture,d,c)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,c)=>{let u=t.customUniformLocations[c],d=r[c];if(l.type==="float")e.gl.uniform1fv(u,d);else if(l.type==="vec2")e.gl.uniform2fv(u,d);else if(l.type==="vec3")e.gl.uniform3fv(u,d);else if(l.type==="vec4")e.gl.uniform4fv(u,d);else if(l.type==="int")e.gl.uniform1iv(u,d);else if(l.type==="ivec2")e.gl.uniform2iv(u,d);else if(l.type==="ivec3")e.gl.uniform3iv(u,d);else if(l.type==="ivec4")e.gl.uniform4iv(u,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function DY(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:d}=bx(e.packedInputs,o.shape,l),p="",h="",f="";if(u.length===1&&e.packedInputs){let w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!e.packedInputs)h=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let w=v.computeStrides(u);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}let m=o.shape.length,g=u.length===2&&v.arraysEqual(o.shape,l),y=v.sizeFromShape(o.shape)===1,A=N.getBroadcastDims(o.shape,n.shape),x=!e.packedInputs&&m===n.shape.length&&v.arraysEqual(l,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${x}_${c?d:""}_${u.length}_${y}_${A}_${g}_${p}_${h}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${K().getNumber("WEBGL_VERSION")}`,a}function Ls(e){return K().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var _Y=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=dp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Xn();this.outputShape=e,this.enableShapeUniforms=Ls(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hm(["r","c","d"],e):Il(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},FY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=dp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Xn();this.outputShape=e,this.enableShapeUniforms=Ls(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hm(["r","c","d"],e):Il(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},PY=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Ms.DOWNLOAD;let t=Xn();this.outputShape=e,this.userCode=`
      ${xS}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},OY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ms.DOWNLOAD;let t=Xn();this.outputShape=e,this.userCode=`
      ${xS}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},MY=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Xn();this.outputShape=e,this.enableShapeUniforms=Ls(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?xx():Ax(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},zY=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Xn();this.outputShape=e,this.enableShapeUniforms=Ls(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?xx():Ax(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},IS={};ze(IS,{bindVertexProgramAttributeStreams:()=>_S,createBufferFromOutputTexture:()=>OS,createFloat16MatrixTexture:()=>ES,createFloat16PackedMatrixTexture:()=>DS,createFloat32MatrixTexture:()=>NS,createIndexBuffer:()=>TS,createPackedMatrixTexture:()=>$S,createUnsignedBytesMatrixTexture:()=>RS,createVertexBuffer:()=>CS,createVertexShader:()=>SS,downloadByteEncodedFloatMatrixFromOutputTexture:()=>zS,downloadFloat32MatrixFromBuffer:()=>MS,downloadMatrixFromPackedOutputTexture:()=>BS,downloadPackedMatrixFromBuffer:()=>LS,getInternalFormatForFloat16MatrixTexture:()=>wx,getInternalFormatForFloat16PackedMatrixTexture:()=>Sx,getInternalFormatForFloat32MatrixTexture:()=>vx,getInternalFormatForPackedMatrixTexture:()=>Ix,getInternalFormatForUnsignedBytesMatrixTexture:()=>kx,uploadDenseMatrixToTexture:()=>FS,uploadPixelDataToTexture:()=>PS});function SS(e){let t=Xn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Y7(e,n)}function CS(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return tS(e,t)}function TS(e){let t=new Uint16Array([0,1,2,2,1,3]);return nS(e,t)}function gp(e,t,n,s,r,a){rS(t,n);let o=sS(e),i=e.TEXTURE_2D;return Se(e,()=>e.bindTexture(i,o)),Se(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Se(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Se(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),Se(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Se(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)),Se(e,()=>e.bindTexture(e.TEXTURE_2D,null)),o}function vx(e){return e.internalFormatFloat}function NS(e,t,n,s){let[r,a]=pp(t,n);return gp(e,r,a,vx(s),s.textureFormatFloat,e.FLOAT)}function wx(e){return e.internalFormatHalfFloat}function ES(e,t,n,s){let[r,a]=pp(t,n);return gp(e,r,a,wx(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function kx(e){return e.downloadTextureFormat}function RS(e,t,n,s){let[r,a]=pp(t,n);return gp(e,r,a,kx(s),e.RGBA,e.UNSIGNED_BYTE)}function Ix(e){return e.internalFormatPackedFloat}function $S(e,t,n,s){let[r,a]=nc(t,n);return gp(e,r,a,Ix(s),e.RGBA,e.FLOAT)}function Sx(e){return e.internalFormatPackedHalfFloat}function DS(e,t,n,s){let[r,a]=nc(t,n);return gp(e,r,a,Sx(s),e.RGBA,s.textureTypeHalfFloat)}function _S(e,t,n){let s=0,r=3*4,a=3*4+2*4;return Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),fx(e,t,"clipSpacePos",n,3,a,s)&&fx(e,t,"uv",n,2,a,r)}function FS(e,t,n,s,r,a){Se(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),Se(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),Se(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function PS(e,t,n){Se(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Se(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Se(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Se(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function OS(e,t,n,s){let r=e.createBuffer();Se(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return Se(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),Se(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Se(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function MS(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function zS(e,t,n,s){let[r,a]=pp(t,n),o=4,i=new Uint8Array(_Z(t*n,o));return Se(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function LS(e,t,n,s,r,a,o,i){let l=e,c=new Float32Array(FZ(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function BS(e,t,n){let s=new Float32Array(t*n*4);return Se(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var jm=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=K().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Mm(t,e)):this.gl=Vr(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(K().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=hp(this.gl,r),zs(this.gl,a))this.textureHalfFloatExtension=hp(this.gl,a);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),zs(this.gl,s))this.colorBufferHalfFloatExtension=hp(this.gl,s);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",zs(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(zs(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=CS(this.gl),this.indexBuffer=TS(this.gl),this.framebuffer=aS(this.gl),this.textureConfig=hx(this.gl,this.textureHalfFloatExtension)}get debug(){return K().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Se(e,()=>e.finish()),Se(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Se(e,()=>e.deleteFramebuffer(this.framebuffer)),Se(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Se(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Se(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),NS(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),ES(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),RS(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),PS(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),FS(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),DS(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),$S(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(mx(this.gl,this.framebuffer),this.outputTexture=null),Se(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>zS(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return LS(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return MS(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=OS(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(K().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>BS(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=J7(t,e);this.vertexShader==null&&(this.vertexShader=SS(t));let s=Q7(t);return Se(t,()=>t.attachShader(s,this.vertexShader)),Se(t,()=>t.attachShader(s,n)),eS(t,s),this.debug&&Lm(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=_S(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Se(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Lm(this.gl,this.program),Se(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?iS(this.gl,e,t):lS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Se(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),uS(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=nc(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Lm(this.gl,this.program),fp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Se(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Se(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=hp(this.gl,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=LY(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Bm(this.gl,e,this.framebuffer),this.debug&&fp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Bm(this.gl,this.outputTexture,this.framebuffer),this.debug&&fp(this.gl)):mx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;Bm(s,e,this.framebuffer),this.debug&&fp(s),this.outputTexture=e,Se(s,()=>s.viewport(0,0,t,n)),Se(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),Se(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function LY(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:BY,bincountImpl:WS,bincountReduceImpl:WY,ceilImpl:VY,concatImpl:UY,equalImpl:GY,expImpl:HY,expm1Impl:jY,floorImpl:qY,gatherNdImpl:XY,gatherV2Impl:KY,greaterImpl:ZY,greaterEqualImpl:YY,lessImpl:JY,lessEqualImpl:QY,linSpaceImpl:eJ,logImpl:tJ,maxImpl:nJ,maximumImpl:sJ,minimumImpl:rJ,multiplyImpl:aJ,negImpl:oJ,notEqualImpl:iJ,prodImpl:lJ,rangeImpl:uJ,rsqrtImpl:cJ,sigmoidImpl:dJ,simpleAbsImpl:VS,sliceImpl:pJ,sparseFillEmptyRowsImpl:hJ,sparseReshapeImpl:fJ,sparseSegmentReductionImpl:US,sqrtImpl:mJ,stridedSliceImpl:gJ,stringNGramsImpl:yJ,stringSplitImpl:AJ,stringToHashBucketFastImpl:xJ,subImpl:bJ,tileImpl:vJ,topKImpl:wJ,transposeImpl:Cx,uniqueImpl:kJ}=GI;function GS(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Kn(e,t){return t===1?[e]:GS(e,t)}function IJ(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var SJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=Kn("rc",t),s=St(t),r=TJ(t,e,n),a=NJ(t,e[e.length-1],e[e.length-2],n),o=EJ(e,n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${o}));
          }
        }
      `}}};function CJ(e,t){let n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<e;o++)a=`${t[t.length-1-o]},`+a;n.push(a)}return n}function TJ(e,t,n){if(e===1)return`rc > ${t[0]}`;let s="";for(let r=e-2;r<e;r++)s+=`${n[r]} >= ${t[r]}`,r<e-1&&(s+="||");return s}function NJ(e,t,n,s){if(e===1)return"";let r=s.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function EJ(e,t){let n=e.length,s=CJ(n,t);return n===1?`getA(rc),
            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${s[0]}),
          cEdge ? 0. : getA(${s[1]}),
          rEdge ? 0. : getA(${s[2]}),
          rEdge || cEdge ? 0. : getA(${s[3]})`}var HS=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Ls(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2==1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${RJ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?xx():Ax(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function RJ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?qZ(["r","c","d"],"inputShape"):Il(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var $J=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=qS(t,n),r=XS(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=jS(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===Rn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Rn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Rn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Rn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Rn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=qS(n,s),a=XS(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=jS(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=K().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function DJ(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function jS(e,t,n,s,r){let a=_J(t,s),o;if(r){let[l,c]=nc(e[0],e[1]);o=l*c}else{let[l,c]=pp(e[0],e[1]);o=l*c}let i=DJ(n,a);return o*i}function _J(e,t){switch(e){case Rn.PACKED_2X2_FLOAT32:return Ix(t);case Rn.PACKED_2X2_FLOAT16:return Sx(t);case Rn.UNPACKED_FLOAT32:return vx(t);case Rn.UNPACKED_FLOAT16:return wx(t);case Rn.PACKED_4X1_UNSIGNED_BYTE:return kx(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function FJ(e){return K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Rn.PACKED_2X2_FLOAT32:Rn.UNPACKED_FLOAT32:e?Rn.PACKED_2X2_FLOAT16:Rn.UNPACKED_FLOAT16}function qS(e,t){if(e===Ms.UPLOAD)return Rn.PACKED_2X2_FLOAT32;if(e===Ms.RENDER||e==null)return FJ(t);if(e===Ms.DOWNLOAD||e===Ms.PIXELS)return Rn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function XS(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var qo=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Ls(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},wr="if (isnan(x)) return x;",PJ="return x;",KS="return abs(x);",OJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",MJ=wr+`
  return (x < 0.0) ? 0.0 : x;
`,zJ=wr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,qm="return x;",LJ="return 1.0 / (1.0 + exp(-1.0 * x));",BJ="return x;",WJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,VJ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,UJ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,GJ="return 1.0 / (1.0 + exp(-1.0 * x));",lc=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Ls(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},HJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=Kn("rc",t),s=St(t),r=IJ(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},jJ=Zs.whereImpl,qJ=1e-7,XJ=1e-4,Xm={};function KJ(e){return e in Xm||(Xm[e]={}),Xm[e]}var ZJ=K().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),YJ=600;function JJ(){return K().global.screen==null?1024:K().global.screen.height*K().global.screen.width*window.devicePixelRatio*YJ/1024/1024}var uc=class extends jl{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!K().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Vr(K().getNumber("WEBGL_VERSION"));this.binaryCache=KJ(K().getNumber("WEBGL_VERSION")),this.gpgpu=new jm(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new $J(this.gpgpu),this.numMBBeforeWarning=JJ(),this.texData=new Hc(this,os())}nextDataId(){return uc.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((K().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||K().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:Ms.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(K().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:Ms.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new lc(o,qm):d=new qo(o,qm);let p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:s}],s),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,c;l&&(c=v.now());let u;if(s==="complex64"){let d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);u=N.mergeRealAndImagArrays(d,p)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let h;i?h=new lc(s,qm):h=new qo(s,qm);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(!K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&K().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(a!=="complex64"&&K().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let h=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(h.texture,...zm(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];u=N.mergeRealAndImagArrays(f,m)}else if(l==null)u=this.getValuesFromTexture(e);else{let h=v.sizeFromShape(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){let h=this.gpgpu.gl;Se(h,()=>h.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&os().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Fe(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!K7(n))throw K().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=v.sizeFromShape(t);if(K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),p=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture,...zm(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),h}let a=K().getBool("WEBGL_PACK")&&s===!0,o=a?Wm(t):t,i=a?new OY(o):new PY(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=v.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=ZJ){return K().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return jJ(e.shape,t)}packedUnaryOp(e,t,n){let s=new lc(e.shape,t),r=this.compileAndRun(s,[e],n);return os().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=VS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(K().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,KS,e.dtype);let t=new qo(e.shape,KS),n=this.compileAndRun(t,[e]);return os().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:s}=this.makeTensorInfo(e,t,n);return os().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){let t=new HJ(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new SJ(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[wl(e.shape),...kl(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[wl(t),...kl(t)],a=new HS(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=Wm(s),o,i=zm(a);n?o=new FY(a):o=new _Y(a);let l=!0,c=[i],u=this.runWebGLProgram(o,[{shape:a,dtype:r,dataId:e}],r,c,l);return{dtype:r,shape:s,dataId:u.dataId}}runWebGLProgram(e,t,n,s,r=!1){let a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===dp.DENSE){let m=zm(e.outputShape);o.texShape=m.map(g=>g*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),v.sizeFromShape(a.shape)===0)return o.values=v.getTypedArrayFromDType(a.dtype,0),a;let i=[],l=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(m.dataId);if(g.texture==null){if(!e.packedInputs&&v.sizeFromShape(m.shape)<=K().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=m.shape)}else if(!!g.isPacked!=!!e.packedInputs)m=g.isPacked?this.unpackTensor(m):this.packTensor(m),i.push(m),g=this.texData.get(m.dataId);else if(g.isPacked&&!mp(g.shape,m.shape)){let y=m,A=m.shape;m.shape=g.shape,m=this.packedReshape(m,A),i.push(m),g=this.texData.get(m.dataId),y.shape=A}return this.uploadToGPU(m.dataId),{shape:m.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let c={shape:a.shape,texData:o,isUniform:!1},u=DY(e,l,c),d=this.getAndSaveBinary(u,()=>RY(this.gpgpu,e,l,c)),p=this.activeTimers!=null,h;p&&(h=this.startTimer()),$Y(this.gpgpu,d,l,c,s),i.forEach(m=>this.disposeIntermediateTensorInfo(m)),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let f=K().get("WEBGL_FLUSH_THRESHOLD");if(f>0){let m=v.now();m-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!K().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(K().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=j(()=>{if(!K().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=K().getBool("DEBUG");K().set("DEBUG",!1);let t=this.abs(Ee(1e-8)).dataSync()[0];if(K().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?qJ:XJ}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,c;l&&(c=v.now());let u=t.texShape;if(u==null&&(u=pS(n,i),t.texShape=u),r!=null){let d=Wm(n),p,h=u[1],f=u[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;i?([h,f]=nc(u[0],u[1]),p=new zY(d,m)):p=new MY(d,m);let g=this.makeTensorInfo([f,h],s);m?this.texData.get(g.dataId).usage=Ms.PIXELS:this.texData.get(g.dataId).usage=Ms.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),h,f,r);let y=[[f,h]],A=!0,x=this.runWebGLProgram(p,[g],s,y,A),b=this.texData.get(x.dataId);t.texture=b.texture,t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(x.dataId),t.values=null,l&&(this.uploadWaitMs+=v.now()-c)}else{let d=this.acquireTexture(u,o,s,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=QJ(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}};uc.nextDataId=0;function QJ(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var eQ="3.10.0";function ZS(){K().set("WEBGL_FORCE_F16_TEXTURES",!0)}Iu.isBrowser()&&Qi("webgl",()=>new uc,2);var tQ={forceHalfFloat:ZS},YS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,cc=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Ls(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Km=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,yp=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=Ls(r);let a="";if(s)if(r===0||v.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${St(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Kn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Cs(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var nQ={kernelName:so,backendName:"webgl",kernelFunc:Cs};function Xo(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=Cs({inputs:{x:s},backend:n}),l=Cs({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var sQ={kernelName:Kc,backendName:"webgl",kernelFunc:Xo},JS="return (a < 0.) ? b * a : a;",QS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function rQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",v.createScalarValue(a,"float32")),i=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yp(QS,r.shape,o.shape):new cc(JS,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var aQ={kernelName:ki,backendName:"webgl",kernelFunc:rQ},e4="return (a < 0.) ? b * a : a;",t4=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function oQ(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yp(t4,s.shape,r.shape):new cc(e4,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var iQ={kernelName:mo,backendName:"webgl",kernelFunc:oQ},n4="if (isnan(x)) return x;",lQ=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,uQ=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function ut({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),p=n(d.values,l);return i.makeTensorInfo(o.shape,l,p)}let c=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new lc(o.shape,t):u=new qo(o.shape,e),i.runWebGLProgram(u,[o],l)}}function $n({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:c}=o,u=i;if(s&&l.dtype==="complex64"){let f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{let[b,w]=x,k={dataId:b.dataId,dtype:b.dtype,shape:l.shape},S={dataId:w.dataId,dtype:w.dtype,shape:c.shape},E=new cc(e,l.shape,c.shape);return u.runWebGLProgram(E,[k,S],Mn(b.dtype,w.dtype))}),A=Xo({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),A}let d=a||Mn(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){let f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?N.fromUint8ToStringArray(f):f,y=l.dtype==="string"?N.fromUint8ToStringArray(m):m,[A,x]=r(l.shape,c.shape,g,y,d),b=u.makeTensorInfo(x,d),w=u.texData.get(b.dataId);return w.values=A,b}let p=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new yp(t,l.shape,c.shape,n):h=new cc(e,l.shape,c.shape),u.runWebGLProgram(h,[l,c],d)}}function Zm(e,t=!1){if(e==="linear")return t?BJ:PJ;if(e==="relu")return t?VJ:MJ;if(e==="elu")return t?WJ:OJ;if(e==="relu6")return t?UJ:zJ;if(e==="prelu")return t?t4:e4;if(e==="leakyrelu")return t?QS:JS;if(e==="sigmoid")return t?GJ:LJ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var s4=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Ls(this.outputShape.length);let c=s?e[1]:e[2],u=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",x="rc.x";e[0]<t[0]?A=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${A};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},r4={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},a4=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},o4="return a * b;";function Tx(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=N.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),c=new a4(r4.REAL,s.shape,r.shape),u=new a4(r4.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Xo({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[c,u]=aJ(s.shape,r.shape,i.values,l.values,a),d=n.makeTensorInfo(u,a),p=n.texData.get(d.dataId);return p.values=c,d}let o;return K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new yp(o4,s.shape,r.shape):o=new cc(o4,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var cQ={kernelName:ra,backendName:"webgl",kernelFunc:Tx};function dQ(e,t,n){let s=[wl(e.shape),...kl(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[wl(t),...kl(t)],o=new HS(a,s),i=!0,l=[s],c=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function ve(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=v.sizeFromShape(r.shape),l=v.inferFromImplicitShape(a,i),c=v.sizeFromShape(l);v.assert(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=o.texData.get(r.dataId);return u.isPacked&&!mp(r.shape,l)&&!(u.texture!==null&&mp(u.shape,l))?dQ(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var pQ={kernelName:Di,backendName:"webgl",kernelFunc:ve},i4=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${v.isInt(u)?u.toPrecision(2):u}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},hQ=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,u=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function fQ(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=N.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function Cl(e,t,n,s){let r=fQ(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:c}=r[o],u,d;n==="mean"?u=o===0?new i4({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},i):new i4({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c}):u=new hQ({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},n),d=a,a=s.runWebGLProgram(u,[a],t),d.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(d)}return a}var mQ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=St(this.rank),r=gQ(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function gQ(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var yQ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=St(this.rank),r=GS("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=r[c];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Ym(e,t,n){let s=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yQ(e.shape,t):new mQ(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function AQ(e,t,n,s){let r=t,a=e.shape.length,o=v.parseAxisParam(r,e.shape),i=o,l=N.getAxesPermutation(i,a),c=l!=null,u=e;c&&(u=Ym(e,l,s),i=N.getInnerMostAxes(i.length,a)),N.assertAxesAreInnerMostDims("sum",i,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,i),h=d;n&&(h=N.expandShapeToKeepDim(d,o));let f=v.sizeFromShape(p),g=v.sizeFromShape(e.shape)/f,y=ve({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),A=yd(e.dtype),x=Cl(y,A,"sum",s),b=ve({inputs:{x},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),c&&s.disposeIntermediateTensorInfo(u),b}function Jm(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return AQ(r,a,o,n)}var xQ={kernelName:bo,backendName:"webgl",kernelFunc:Jm};function Zn(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];let c;if(o.shouldExecuteOnCPU([r])){let d=o.texData.get(r.dataId).values,p=Cx(d,r.shape,r.dtype,a,l);c=o.makeTensorInfo(l,r.dtype);let h=o.texData.get(c.dataId);h.values=p}else c=Ym(r,a,o);return c}var bQ={kernelName:ko,backendName:"webgl",kernelFunc:Zn},l4=1e3;function Qm({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),A=v.sizeFromShape(g),x=y===A||y===1||A===1;v.assert(c>=2&&u>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);let w=(y>A?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([h,f]);v.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[y,d,h]:[y,h,d],S=s?[A,f,p]:[A,p,f],E=ve({inputs:{x:e},backend:r,attrs:{shape:k}}),R=ve({inputs:{x:t},backend:r,attrs:{shape:S}}),P=[E,R],$=Math.max(y,A),D=n?E.shape[1]:E.shape[2],T=a!=null,O=o!=null,V=l==="leakyrelu",H=l!=null?Zm(l,!0):null,z=T||O||V||H!=null,X;if((h===1||f===1)&&D>l4&&z===!1){let Y=E,se=R;n&&(Y=Zn({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),P.push(Y)),s&&(se=Zn({inputs:{x:R},backend:r,attrs:{perm:[0,2,1]}}),P.push(se));let ne=f!==1,J=f===1,te=Y;ne&&(te=ve({inputs:{x:Y},backend:r,attrs:{shape:[$,D,1]}}),P.push(te));let ce=f===1?2:1,pe=se;J&&(pe=ve({inputs:{x:se},backend:r,attrs:{shape:[$,1,D]}}),P.push(pe));let be=Tx({inputs:{a:te,b:pe},backend:r});X=Jm({inputs:{x:be},backend:r,attrs:{axis:ce,keepDims:!0}}),P.push(be)}else{let Y=Mn(e.dtype,t.dtype),se=new s4(k,S,[$,h,f],n,s,T,H,O,V),ne=[E,R];if(a!=null&&ne.push(a),O&&ne.push(o),V){let J=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));ne.push(J),P.push(J)}X=r.runWebGLProgram(se,ne,Y)}let ee=ve({inputs:{x:X},backend:r,attrs:{shape:w}});P.push(X);for(let Y of P)r.disposeIntermediateTensorInfo(Y);return ee}function vQ(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return Qm({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var wQ={kernelName:So,backendName:"webgl",kernelFunc:vQ},u4="return abs(x);";function kQ(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=VS(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new lc(s.shape,u4):r=new qo(s.shape,u4),n.runWebGLProgram(r,[s],s.dtype)}var IQ={kernelName:hi,backendName:"webgl",kernelFunc:kQ},SQ=wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,CQ=ut({opSnippet:SQ}),TQ={kernelName:Kl,backendName:"webgl",kernelFunc:CQ},NQ=wr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,EQ=ut({opSnippet:NQ}),RQ={kernelName:Zl,backendName:"webgl",kernelFunc:EQ},c4="return a + b;",$Q=$n({opSnippet:c4,packedOpSnippet:c4,supportsComplex:!0,cpuKernelImpl:BY}),DQ={kernelName:Er,backendName:"webgl",kernelFunc:$Q},_Q=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},FQ=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function e0(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Cs({inputs:{x:s[0]},backend:n});if(s.length>K().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),c=e0({inputs:s.slice(0,l),backend:n}),u=e0({inputs:s.slice(l),backend:n});return e0({inputs:[c,u],backend:n})}let r=s.map(l=>l.dtype).reduce((l,c)=>Mn(l,c)),a=s.map(l=>l.shape),i=K().getBool("WEBGL_PACK")?new FQ(s[0].shape,a):new _Q(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var PQ={kernelName:Ba,backendName:"webgl",kernelFunc:e0};function OQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=Zn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("all",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=Cl(m,m.dtype,"all",n),y;if(o){let A=N.expandShapeToKeepDim(p,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:A}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var MQ={kernelName:Yl,backendName:"webgl",kernelFunc:OQ};function zQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=Zn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("any",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=Cl(m,m.dtype,"any",n),y;if(o){let A=N.expandShapeToKeepDim(p,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:A}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var LQ={kernelName:Jl,backendName:"webgl",kernelFunc:zQ},BQ=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},WQ=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=St(i),c=Kn("coords",i),u,d;if(a===1){d=i+1;let S=St(d);u=`
        ${S} sourceLocR = ${S}(${c.join()}, 0);
        ++${c[i-1]};
        ${S} sourceLocG = ${S}(${c.join()}, 0);
        ++${c[i-2]};
        ${S} sourceLocA = ${S}(${c.join()}, 0);
        --${c[i-1]};
        ${S} sourceLocB = ${S}(${c.join()}, 0);
        --${c[i-2]};`}else d=i,u=`
        ${l} sourceLocR = coords;
        ++${c[i-1]};
        ${l} sourceLocG = coords;
        ++${c[i-2]};
        ${l} sourceLocA = coords;
        --${c[i-1]};
        ${l} sourceLocB = coords;
        --${c[i-2]};`;let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(S=>"int "+S),m=Kn("sourceLocR",d-1).concat("inIdx.r"),g=Kn("sourceLocG",d-1).concat("inIdx.g"),y=Kn("sourceLocB",d-1).concat("inIdx.b"),A=Kn("sourceLocA",d-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${A.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,k=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function d4(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=N.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new BQ(i,n,s==null),c=[t];s!=null&&c.push(s);let u=e.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let d=d4(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function p4(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=N.computeOptimalWindowSize(a),i=new WQ(r,o,n,s==null),l=s==null?[t]:[t,s],c=e.runWebGLProgram(i,l,"int32");if(c.shape.length===t.shape.length){let u=p4(e,t,n,c);return e.disposeIntermediateTensorInfo(c),u}return c}function h4(e,t,n,s){let r=[n];if(N.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!K().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[c,u]=N.computeOutAndReduceShapes(l.shape,r),d=v.sizeFromShape(u),p=ve({inputs:{x:l},backend:e,attrs:{shape:[-1,d]}});a.push(p);let h=d4(e,p,s);a.push(h);let f=ve({inputs:{x:h},backend:e,attrs:{shape:c}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return p4(e,t,s)}function VQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Zn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=h4(n,l,o[0],"max");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var UQ={kernelName:Wa,backendName:"webgl",kernelFunc:VQ};function GQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Zn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=h4(n,l,o[0],"min");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var HQ={kernelName:Ql,backendName:"webgl",kernelFunc:GQ},jQ=wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,qQ=ut({opSnippet:jQ}),XQ={kernelName:eu,backendName:"webgl",kernelFunc:qQ},KQ=wr+"return log(x + sqrt(x * x + 1.0));",ZQ=ut({opSnippet:KQ}),YQ={kernelName:tu,backendName:"webgl",kernelFunc:ZQ},JQ=wr+`
  return atan(x);
`,QQ=ut({opSnippet:JQ}),eee={kernelName:nu,backendName:"webgl",kernelFunc:QQ},tee=lQ+`
  return atan(a, b);
`,nee=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+uQ+`
  return result;
`,see=$n({opSnippet:tee,packedOpSnippet:nee}),ree={kernelName:ru,backendName:"webgl",kernelFunc:see},aee=wr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,oee=ut({opSnippet:aee}),iee={kernelName:su,backendName:"webgl",kernelFunc:oee},Ap=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let S=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let A="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");let b=Math.floor(a/4)*4,w=a%4,k=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${A}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${x});
      }
    `}},Nx=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let A=t==="avg",x="0.0";if(A||(x="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let k=Math.floor(a/4)*4,S=a%4,E=`
      if (${A}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${k};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${w});
        }
      }
    `}};function lee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;sc(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return Cs({inputs:{x:r},backend:n});let d=new Ap(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var uee={kernelName:Va,backendName:"webgl",kernelFunc:lee};function cee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],d=N.computePool3DInfo(r.shape,a,o,u,i,l,c),p=new Nx(d,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var dee={kernelName:Xc,backendName:"webgl",kernelFunc:cee},pee=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.top,u=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},hee=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function fee(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new hee(p);return n.runWebGLProgram(h,[r],o.dtype)}var mee={kernelName:Ih,backendName:"webgl",kernelFunc:fee};function gee(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;sc([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=N.computePool2DInfo(o.shape,i,l,1,c),d=new pee(u);return n.runWebGLProgram(d,[r],o.dtype)}var yee={kernelName:kh,backendName:"webgl",kernelFunc:gee};function Aee(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Qm({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var xee={kernelName:Ua,backendName:"webgl",kernelFunc:Aee},bee=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},vee=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},wee=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;v.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=[s,r,a],u=null;o!=null&&(u=o.shape,c.push(o));let d=null;i!=null&&(d=i.shape,c.push(i));let p=K().getBool("WEBGL_PACK_NORMALIZATION")?new vee(s.shape,r.shape,a.shape,u,d,l):new bee(s.shape,r.shape,a.shape,u,d,l);return t.runWebGLProgram(p,c,c[0].dtype)},kee={kernelName:to,backendName:"webgl",kernelFunc:wee},Iee=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=St(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=See(this.rank),s,r=e.map((a,o)=>`sourceLoc.${Ex[o]} = start[${o}] + coords.${Ex[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Ex=["x","y","z","w","u","v"];function See(e){if(e===1)return"sourceLoc";if(e<=6)return Ex.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var Cee=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=St(this.rank),n=Kn("coords",this.rank),s=Kn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,u)=>`start[${u}]`).join()});`:e.map((c,u)=>`${s[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function Tee(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Qt.computeFlatOffset(t,v.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function dc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Qt.parseSliceParams(r,a,o);if(Qt.assertParamsValid(r,i,l),v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.texData.get(r.dataId),p=pJ(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}let{isPacked:c}=n.texData.get(r.dataId),u=Qt.isSliceContinous(r.shape,i,l);if(c||!u){let d=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cee(l):new Iee(l),p=[i];return n.runWebGLProgram(d,[r],r.dtype,p)}return n.uploadToGPU(r.dataId),Tee(r,i,l,n)}var Nee={kernelName:Mi,backendName:"webgl",kernelFunc:dc},Eee=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((A,x)=>A*x),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:l}}),m=Zn({inputs:{x:f},backend:n,attrs:{perm:c}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:u}}),y=dc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(A=>n.disposeIntermediateTensorInfo(A)),y},Ree={kernelName:fi,backendName:"webgl",kernelFunc:Eee};function $ee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),c=WS(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var Dee={kernelName:Sh,backendName:"webgl",kernelFunc:$ee};function _ee(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var Fee={kernelName:Ch,backendName:"webgl",kernelFunc:_ee},Pee="return float(a != b);",f4=$n({opSnippet:Pee,cpuKernelImpl:iJ,dtype:"bool"}),Oee={kernelName:po,backendName:"webgl",kernelFunc:f4};function xp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Cs({inputs:{x:r.complexTensorInfos.real},backend:n})}var Mee={kernelName:rd,backendName:"webgl",kernelFunc:xp},zee="return float(int(x));";function Lee(e,t){let n=new qo(e.shape,zee),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Rx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Cs({inputs:{x:r},backend:n});let o=Kt(r.shape),i=Rx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Xo({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=xp({inputs:{input:r},backend:n}),i=Rx({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Cs({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Lee(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=f4({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Bee={kernelName:Ga,backendName:"webgl",kernelFunc:Rx},m4="return ceil(x);",Wee=ut({opSnippet:m4,packedOpSnippet:m4,cpuKernelImpl:VY}),Vee={kernelName:Zr,backendName:"webgl",kernelFunc:Wee},Uee=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},Gee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Hee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;K().getBool("WEBGL_PACK_CLIP")?i=new Gee(r.shape):i=new Uee(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var jee={kernelName:Yr,backendName:"webgl",kernelFunc:Hee},qee=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function g4(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Xee(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new qee(s.shape),o=[g4(s,r.complexTensorInfos.real),g4(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var Kee={kernelName:Zc,backendName:"webgl",kernelFunc:Xee},Zee=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},Yee=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=St(s),a=Kn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],c=o.slice(-2),u=o.join(),d=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${u}), vec2(${c.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${t0(o,l,m)}),
            vec2(${t0(c,l,m)}));
        }`}let p=i.length,h=i[i.length-1];d+=`
        return getChannel(
          getT${p}(${t0(o,l,h)}),
          vec2(${t0(c,l,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function t0(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function n0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Cs({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Jee={kernelName:ed,backendName:"webgl",kernelFunc:n0};function pc(e,t,n){let s=e[0].dtype;if(s==="complex64"){let u=e.map(m=>xp({inputs:{input:m},backend:n})),d=e.map(m=>n0({inputs:{input:m},backend:n})),p=pc(u,t,n),h=pc(d,t,n),f=Xo({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let u=e.map(y=>{let A=v.sizeFromShape(y.shape.slice(t));return ve({inputs:{x:y},backend:n,attrs:{shape:[-1,A]}})}),d=u.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),p=N.computeOutShape(u.map(y=>y.shape),1),h=u[0].shape[0]===1,f=UY(d,p,s,h),m=N.computeOutShape(e.map(y=>y.shape),t),g=n.makeTensorInfo(m,s,f);return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g}if(e.length>K().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),d=pc(e.slice(0,u),t,n),p=pc(e.slice(u),t,n),h=pc([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}if(K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new Yee(e.map(d=>d.shape),t);return n.runWebGLProgram(u,e,s)}let{tensors2D:a,outShape:o}=Qee(e,t,n),i=new Zee(a.map(u=>u.shape)),l=n.runWebGLProgram(i,a,s);a.forEach(u=>n.disposeIntermediateTensorInfo(u));let c=ve({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function Qee(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ve({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function y4(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return Cs({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),pc(i,a,n)}var ete={kernelName:mi,backendName:"webgl",kernelFunc:y4},A4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,A=m?3:1,x="",b="";n&&(s?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${A}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},tte=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},nte=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Ls(this.outputShape.length);let{dataFormat:n}=t,s=Xn(),r=n==="channelsLast",a=r?0:1,o=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.y + ${u};
          pos = rc.x + ${c};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+u}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+u}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function x4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=s.texData.get(e.dataId),u=n.inChannels,d=l[0]*l[1]*l[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(!((d===1||p===1)&&u>l4)&&c.isPacked&&h&&c.texture!=null&&l[2]%2!=0&&v.arraysEqual(c.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),w={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},k=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,v.assert(mp(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);let S=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(S);let E=Qm({a:w,b:S,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=s.texData.get(E.dataId);v.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=k,R.shape=n.outShape,g=Cs({inputs:{x:E},backend:s}),g.shape=n.outShape,y.push(E)}else{let b=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],w=ve({inputs:{x:e},backend:s,attrs:{shape:[1,b,n.inChannels]}}),k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),S=Qm({a:w,b:k,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=ve({inputs:{x:S},backend:s,attrs:{shape:n.outShape}}),y.push(w),y.push(k),y.push(S)}for(let b of y)s.disposeIntermediateTensorInfo(b);return g}function b4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=l*c*u,g=p*d,y=[m,g],A=!0,x=!1,b=[],w=ve({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w),b.push(k);let S=new nte(y,n),E=[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=s.runWebGLProgram(S,[w],"float32",E),P=ve({inputs:{x:R},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(R),b.push(P);let $=r!=null,D=a!=null,T=i==="leakyrelu",O=i?Zm(i,!0):null,V=new s4(P.shape,k.shape,[1,g,n.outChannels],A,x,$,O,D,T),H=[P,k];if(r&&H.push(r),D&&H.push(a),T){let Y=s.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));H.push(Y),b.push(Y)}let z=s.runWebGLProgram(V,H,"float32"),X=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],ee=ve({inputs:{x:z},backend:s,attrs:{shape:X}});b.push(z);for(let Y of b)s.disposeIntermediateTensorInfo(Y);return ee}function ste(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=x4({x:r,filter:a,convInfo:p,backend:n});else if(K().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=b4({x:r,filter:a,convInfo:p,backend:n});else{let m=new A4(p);h=n.runWebGLProgram(m,[r,a],"float32")}let f=ve({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}var rte={kernelName:Ha,backendName:"webgl",kernelFunc:ste},ate=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},ote=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,c=a?2:3,u=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},ite=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},lte=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function ute(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),h=new ate(p);return n.runWebGLProgram(h,[r,a],"float32")}var cte={kernelName:Th,backendName:"webgl",kernelFunc:ute};function dte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=new ote(p);return n.runWebGLProgram(h,[r,a],"float32")}var pte={kernelName:ja,backendName:"webgl",kernelFunc:dte};function hte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=N.computeConv3DInfo(r.shape,a.shape,o,l,i),u=new tte(c);return n.runWebGLProgram(u,[r,a],"float32")}var fte={kernelName:Yc,backendName:"webgl",kernelFunc:hte};function mte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,c=N.computeConv3DInfo(r.shape,l,o,1,i),u=new ite(c);return n.runWebGLProgram(u,[r,a],"float32")}var gte={kernelName:Nh,backendName:"webgl",kernelFunc:mte};function yte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,c=N.computeConv3DInfo(l,a.shape,i,1,o),u=new lte(c);return n.runWebGLProgram(u,[r,a],"float32")}var Ate={kernelName:Eh,backendName:"webgl",kernelFunc:yte},xte=n4+`
  return cos(x);
`,bte=ut({opSnippet:xte}),vte={kernelName:qa,backendName:"webgl",kernelFunc:bte},wte=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,kte=ut({opSnippet:wte}),Ite={kernelName:Xa,backendName:"webgl",kernelFunc:kte},Ste=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[c]=t,[u,d]=n;this.outputShape=[c,u,d,l];let p=s==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,y]=u>1?[`${(o-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[A,x,b]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${A});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},Cte=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new Ste(r.shape,a.shape,i,l,c);return n.runWebGLProgram(u,[r,a,o],"float32")},Tte={kernelName:yi,backendName:"webgl",kernelFunc:Cte},v4=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let s=e.length,r=t?"0.0":`getX(${w4(s,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${St(s)} coords = getOutputCoords();
        int end = ${k4(s,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${k4(s,"coords")} = idx;
          val += getX(${w4(s,"coords")});
        }
        setOutput(val);
      }
    `}};function w4(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function k4(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Nte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length,c=N.getAxesPermutation([a],l),u=r;c!=null&&(u=Zn({inputs:{x:r},backend:n,attrs:{perm:c}}));let d=N.getInnerMostAxes(1,l)[0];if(d!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);let p=u.shape[d],h=Cs({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new v4(u.shape,!1,i),g=[[f]],y=h;h=n.runWebGLProgram(m,[h],h.dtype,g),n.disposeIntermediateTensorInfo(y)}if(o){let f=new v4(u.shape,o,i),m=h;h=n.runWebGLProgram(f,[h],h.dtype),n.disposeIntermediateTensorInfo(m)}if(c!=null){let f=N.getUndoAxesPermutation(c),m=Zn({inputs:{x:h},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),m}return h}var Ete={kernelName:gi,backendName:"webgl",kernelFunc:Nte};function Rte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=WS(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=WY(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var $te={kernelName:Rh,backendName:"webgl",kernelFunc:Rte},Dte=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function _te(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=new Dte(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var Fte={kernelName:Ai,backendName:"webgl",kernelFunc:_te},I4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ls(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",c="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${c}
        setOutput(result);
      }
    `}},S4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ls(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,d=u,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<u;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let y=g*2;if(p+=`
          xC = xCCorner + ${y*l};
          `,i===1){if(y<u&&(o%2==1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<u)){let A=o%2==0?v.nearestLargerEven(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${A};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):A===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${A};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<u&&(o%2==1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<u&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<u&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<u&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<u&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function Pte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let d=N.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p;K().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?p=new S4(d):p=new I4(d);let h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",h)}var Ote={kernelName:Ka,backendName:"webgl",kernelFunc:Pte},Mte=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},zte=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Lte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s,d=N.computeConv2DInfo(r.shape,u,o,i,l,c,!0),p=new Mte(d);return n.runWebGLProgram(p,[r,a],"float32")}var Bte={kernelName:$h,backendName:"webgl",kernelFunc:Lte};function Wte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s,d=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),p=new zte(d);return n.runWebGLProgram(p,[r,a],"float32")}var Vte={kernelName:Dh,backendName:"webgl",kernelFunc:Wte},Ute=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Gte(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=v.sizeFromShape(s.shape),o=ve({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new Ute(a),l=n.runWebGLProgram(i,[o],o.dtype),c=ve({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var Hte={kernelName:_h,backendName:"webgl",kernelFunc:Gte},jte=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:c}=e,{top:u,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${u}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function qte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=N.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),u,d=new jte(c);u=n.runWebGLProgram(d,[r,a],"float32");let p=ve({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),p}var Xte={kernelName:Jc,backendName:"webgl",kernelFunc:qte};function Kte(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:A}=N.getEinsumPermutation(h,l[g]),x;N.isIdentityPermutation(y)?x=a[g]:(x=Zn({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let w=0;w<A.length;++w)b.splice(A[w],0,1);v.arraysEqual(x.shape,b)||(x=ve({inputs:{x},backend:n,attrs:{shape:b}}),f.push(x)),p===null?p=x:(p=Tx({inputs:{a:x,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Jm({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var Zte={kernelName:Qc,backendName:"webgl",kernelFunc:Kte},Yte="return (x >= 0.0) ? x : (exp(x) - 1.0);",Jte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Qte=ut({opSnippet:Yte,packedOpSnippet:Jte}),ene={kernelName:Ya,backendName:"webgl",kernelFunc:Qte},tne="return (b >= 1.0) ? a : a * (b + 1.0);",nne=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,sne=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yp(nne,s.shape,r.shape):new cc(tne,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},rne={kernelName:Oh,backendName:"webgl",kernelFunc:sne},ane=`
  return vec4(equal(a, b));
`,one="return float(a == b);",ine=$n({opSnippet:one,packedOpSnippet:ane,dtype:"bool",cpuKernelImpl:GY}),lne={kernelName:Ja,backendName:"webgl",kernelFunc:ine},une=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,cne=ut({opSnippet:une}),dne={kernelName:au,backendName:"webgl",kernelFunc:cne},C4="return exp(x);",T4=ut({opSnippet:C4,packedOpSnippet:C4,cpuKernelImpl:HY,dtype:"float32"}),pne={kernelName:Jr,backendName:"webgl",kernelFunc:T4};function $x(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),ve({inputs:{x:a},backend:s,attrs:{shape:i}})}var hne={kernelName:xi,backendName:"webgl",kernelFunc:$x},N4="return exp(x) - 1.0;",fne=ut({opSnippet:N4,packedOpSnippet:N4,cpuKernelImpl:jY}),mne={kernelName:Qa,backendName:"webgl",kernelFunc:fne},E4=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function R4(e,t,n){let s=n.texData.get(e.dataId),r=v.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=ve({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,c=new E4("real",l,t),u=new E4("imag",l,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Xo({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let m=ve({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function gne(e){let{inputs:t,backend:n}=e,{input:s}=t;return R4(s,!1,n)}var yne={kernelName:Mh,backendName:"webgl",kernelFunc:gne},Ane=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function bp(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new Ane(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var xne={kernelName:ou,backendName:"webgl",kernelFunc:bp},bne=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},vne={kernelName:bi,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new bne(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},$4="return floor(x);",wne=ut({opSnippet:$4,packedOpSnippet:$4,cpuKernelImpl:qY}),kne={kernelName:Qr,backendName:"webgl",kernelFunc:wne},Ine=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Sne=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Cne=$n({opSnippet:Ine,packedOpSnippet:Sne,dtype:"int32"}),Tne={kernelName:eo,backendName:"webgl",kernelFunc:Cne},Nne=class{constructor(e){this.variableNames=["A"];let t=Xn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},Ene=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Xn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},Rne={kernelName:ld,backendName:"webgl",kernelFunc:$ne},hc;function $ne(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],d=[c,l,a];(i||o)&&(hc==null&&(hc=document.createElement("canvas").getContext("2d")),hc.canvas.width=l,hc.canvas.height=c,hc.drawImage(r,0,0,l,c),r=hc.canvas);let p=n.makeTensorInfo(u,"int32");n.texData.get(p.dataId).usage=Ms.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);let h=K().getBool("WEBGL_PACK")?new Ene(d):new Nne(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}function Dne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),y,A=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=x4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(K().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=b4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,w=i!=null,k=h==="leakyrelu",S=h?Zm(h,!1):null,E=new A4(g,b,S,w,k),R=[r,a];if(o&&R.push(o),i&&R.push(i),k){let P=n.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));R.push(P),A.push(P)}y=n.runWebGLProgram(E,R,"float32")}let x=ve({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return A.push(y),A.forEach(b=>n.disposeIntermediateTensorInfo(b)),x}var _ne={kernelName:Co,backendName:"webgl",kernelFunc:Dne};function Fne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=s,f=[],m=u;m==null&&(m=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=N.computeConv2DInfo(r.shape,a.shape,l,m,c,d,!0),y=K().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,A=p?Zm(p,y):null,x=[r,a],b=o!=null,w=i!=null,k=p==="leakyrelu";if(b&&x.push(o),w&&x.push(i),k){let P=n.makeTensorInfo([],"float32",v.createScalarValue(h,"float32"));x.push(P),f.push(P)}let S;y?S=new S4(g,b,A,w,k):S=new I4(g,b,A,w,k);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(S,x,"float32",E);return f.forEach(P=>n.disposeIntermediateTensorInfo(P)),R}var Pne={kernelName:To,backendName:"webgl",kernelFunc:Fne},One=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=St(t.length),r=St(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Mne(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,c,u,d]=N.prepareAndValidate(s,r),p=ve({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=ve({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),A=n.bufferSync(s),x=XY(y,A,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,x.values)}let f=new One(o,d,[c,u]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var zne={kernelName:wi,backendName:"webgl",kernelFunc:Mne},Lne=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=St(this.rank),s=Bne(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Bne(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[r]}`);return s.join()}function D4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=n.readSync(a.dataId),u=r.shape[l];for(let b=0;b<c.length;++b){let w=c[b];v.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=v.sizeFromShape(a.shape),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=ve({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}});h.push(f),h.push(m);let g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let b=n.bufferSync(m),w=n.bufferSync(f),k=KY(w,b,g);return h.forEach(S=>n.disposeIntermediateTensorInfo(S)),n.makeTensorInfo(d.outputShape,k.dtype,k.values)}let y=new Lne(f.shape,g),A=n.runWebGLProgram(y,[f,m],f.dtype);h.push(A);let x=ve({inputs:{x:A},backend:n,attrs:{shape:d.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),x}var Wne={kernelName:vi,backendName:"webgl",kernelFunc:D4},Vne="return float(a > b);",Une=`
  return vec4(greaterThan(a, b));
`,Gne=$n({opSnippet:Vne,packedOpSnippet:Une,cpuKernelImpl:ZY,dtype:"bool"}),Hne={kernelName:no,backendName:"webgl",kernelFunc:Gne},jne="return float(a >= b);",qne=`
  return vec4(greaterThanEqual(a, b));
`,Xne=$n({opSnippet:jne,packedOpSnippet:qne,dtype:"bool",cpuKernelImpl:YY}),Kne={kernelName:ea,backendName:"webgl",kernelFunc:Xne};function Zne(e){let{inputs:t,backend:n}=e,{input:s}=t;return R4(s,!0,n)}var Yne={kernelName:zh,backendName:"webgl",kernelFunc:Zne},Jne="return float(!isnan(x) && !isinf(x));",Qne=ut({opSnippet:Jne,dtype:"bool"}),ese={kernelName:iu,backendName:"webgl",kernelFunc:Qne},tse="return float(isinf(x));",nse=ut({opSnippet:tse,dtype:"bool"}),sse={kernelName:lu,backendName:"webgl",kernelFunc:nse},rse="return float(isnan(x));",ase=ut({opSnippet:rse,dtype:"bool"}),ose={kernelName:uu,backendName:"webgl",kernelFunc:ase},ise="return float(a < b);",lse=`
  return vec4(lessThan(a, b));
`,use=$n({opSnippet:ise,packedOpSnippet:lse,cpuKernelImpl:JY,dtype:"bool"}),cse={kernelName:ro,backendName:"webgl",kernelFunc:use},dse="return float(a <= b);",pse=`
  return vec4(lessThanEqual(a, b));
`,hse=$n({opSnippet:dse,packedOpSnippet:pse,cpuKernelImpl:QY,dtype:"bool"}),fse={kernelName:ao,backendName:"webgl",kernelFunc:hse};function mse(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=eJ(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var gse={kernelName:Lh,backendName:"webgl",kernelFunc:mse},yse=`if (x < 0.0) return NAN;
  return log(x);`,Ase=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,xse=ut({opSnippet:yse,packedOpSnippet:Ase,cpuKernelImpl:tJ}),bse={kernelName:ta,backendName:"webgl",kernelFunc:xse},vse="return log(1.0 + x);",wse=ut({opSnippet:vse}),kse={kernelName:cu,backendName:"webgl",kernelFunc:wse},Ise="return float(a >= 1.0 && b >= 1.0);",Sse=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Cse=$n({opSnippet:Ise,packedOpSnippet:Sse,dtype:"bool"}),Tse={kernelName:Ii,backendName:"webgl",kernelFunc:Cse},Nse="return float(!(x >= 1.0));",Ese=ut({opSnippet:Nse}),Rse={kernelName:du,backendName:"webgl",kernelFunc:Ese},$se="return float(a >= 1.0 || b >= 1.0);",Dse=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,_se=$n({opSnippet:$se,packedOpSnippet:Dse,dtype:"bool"}),Fse={kernelName:td,backendName:"webgl",kernelFunc:_se},Pse=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Ose=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},Mse=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,c=K().getBool("WEBGL_PACK_NORMALIZATION")?new Ose(r.shape,a,o,i,l):new Pse(r.shape,a,o,i,l);return n.runWebGLProgram(c,[r],r.dtype)},zse={kernelName:nd,backendName:"webgl",kernelFunc:Mse},Lse=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},Bse=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s,d=new Lse(r.shape,i,l,c,u);return n.runWebGLProgram(d,[r,a,o],r.dtype)},Wse={kernelName:Bh,backendName:"webgl",kernelFunc:Bse};function Vse(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=Cl(i,e.dtype,"max",s),c=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}function _4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=n.shouldExecuteOnCPU([r]),h=r;if(d){if(p){let x=n.texData.get(h.dataId).values,b=new Array(i);for(let S=0;S<b.length;S++)b[S]=r.shape[u[S]];let w=Cx(x,r.shape,r.dtype,u,b);h=n.makeTensorInfo(b,r.dtype);let k=n.texData.get(h.dataId);k.values=w}else h=Ym(r,u,n);c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("max",c,i);let[f,m]=N.computeOutAndReduceShapes(h.shape,c),g=f;o&&(g=N.expandShapeToKeepDim(f,l));let y;if(p){let x=n.texData.get(h.dataId).values,b=nJ(x,v.sizeFromShape(m),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let w=n.texData.get(y.dataId);w.values=b}else y=Vse(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),y}var Use={kernelName:oo,backendName:"webgl",kernelFunc:_4},Gse=YS+`
  return max(a, b);
`,Hse=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Km+`
  return result;
`,jse=$n({opSnippet:Gse,packedOpSnippet:Hse,cpuKernelImpl:sJ}),qse={kernelName:na,backendName:"webgl",kernelFunc:jse};function Xse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;sc(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return Cs({inputs:{x:r},backend:n});let d=new Ap(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var Kse={kernelName:io,backendName:"webgl",kernelFunc:Xse};function Zse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],d=N.computePool3DInfo(r.shape,a,o,u,i,c,l),p=new Nx(d,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var Yse={kernelName:sd,backendName:"webgl",kernelFunc:Zse},Jse=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Qse=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=l-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function ere(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new Nx(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new Qse(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var tre={kernelName:Vh,backendName:"webgl",kernelFunc:ere};function nre(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;sc([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=!0,f=new Ap(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new Jse(p),y=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}var sre={kernelName:Wh,backendName:"webgl",kernelFunc:nre};function rre(e,t,n,s){let r=new Ap(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new Ap(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var are={kernelName:Uh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;v.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let c=[1,1];v.assert(N.eitherStridesOrDilationsAreOne(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let u=N.computePool2DInfo(s.shape,r,a,c,o),[d,p]=rre(s,i,u,l);return[d,p]}};function ore(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=Cl(i,"float32","mean",s),c=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}var ire={kernelName:lo,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=v.parseAxisParam(a,s.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=o.shouldExecuteOnCPU([s]),h=[],f=s;if(d){if(p){let b=o.texData.get(f.dataId).values,w=new Array(i);for(let E=0;E<w.length;E++)w[E]=s.shape[u[E]];let k=Cx(b,s.shape,s.dtype,u,w);f=o.makeTensorInfo(w,s.dtype);let S=o.texData.get(f.dataId);S.values=k}else f=Ym(s,u,o);h.push(f),c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("sum",c,i);let[m,g]=N.computeOutAndReduceShapes(f.shape,c),y=m;r&&(y=N.expandShapeToKeepDim(m,l));let A=ore(f,g,y,o);for(let x of h)o.disposeIntermediateTensorInfo(x);return A}};function lre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=Zn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=Cl(m,m.dtype,"min",n),y;if(o){let A=N.expandShapeToKeepDim(p,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:A}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var ure={kernelName:uo,backendName:"webgl",kernelFunc:lre},cre=YS+`
  return min(a, b);
`,dre=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Km+`
  return result;
`,pre=$n({opSnippet:cre,packedOpSnippet:dre,cpuKernelImpl:rJ}),hre={kernelName:sa,backendName:"webgl",kernelFunc:pre},fre=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let s=e.length,r=St(s),a=t.map(c=>c[0]).join(","),o=t.map((c,u)=>c[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},mre=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=St(s),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=Kn("rc",s),l=Kn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=n==="reflect"?0:1,p="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${i[s-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},gre=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mre(s.shape,r,a):new fre(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},yre={kernelName:co,backendName:"webgl",kernelFunc:gre},Are=`if (b == 0.0) return NAN;
  return mod(a, b);`,xre=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Km+`
  return result;
`,bre=$n({opSnippet:Are,packedOpSnippet:xre}),vre={kernelName:pu,backendName:"webgl",kernelFunc:bre},wre=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},kre=`
if (a == b) {
  return 1.0;
};
return a / b;`,Ire=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,F4=$n({opSnippet:kre,packedOpSnippet:Ire,checkOutOfBounds:!0}),Sre={kernelName:Za,backendName:"webgl",kernelFunc:F4},P4="return a - b;",O4=$n({opSnippet:P4,packedOpSnippet:P4,supportsComplex:!0,cpuKernelImpl:bJ}),Cre={kernelName:ua,backendName:"webgl",kernelFunc:O4};function M4(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=_4({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=ve({inputs:{x:i},backend:n,attrs:{shape:l}}),u=O4({inputs:{a:r,b:c},backend:n}),d=T4({inputs:{x:u},backend:n}),p=Jm({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=ve({inputs:{x:p},backend:n,attrs:{shape:l}}),f=F4({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var Tre={kernelName:vo,backendName:"webgl",kernelFunc:M4};function Nre(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:M4({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],d=new wre(c,u,a),p=[[o]],h=n.runWebGLProgram(d,[l],"int32",p);return i||n.disposeIntermediateTensorInfo(l),h}var Ere={kernelName:Gh,backendName:"webgl",kernelFunc:Nre},z4="return -x;";function Rre(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=oJ(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new lc(s.shape,z4):r=new qo(s.shape,z4),n.runWebGLProgram(r,[s],s.dtype)}var $re={kernelName:Si,backendName:"webgl",kernelFunc:Rre},Dre=Zs.nonMaxSuppressionV3Impl;function _re(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=Dre(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Fre={kernelName:Ci,backendName:"webgl",kernelFunc:_re},Pre=Zs.nonMaxSuppressionV4Impl;function Ore(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:h}=Pre(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Mre={kernelName:hu,backendName:"webgl",kernelFunc:Ore},zre=Zs.nonMaxSuppressionV5Impl;function Lre(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=zre(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Bre={kernelName:Ti,backendName:"webgl",kernelFunc:Lre},Wre=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Vre=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=v.sizeFromShape(r.shape),c=new Wre(l,a,o,i),u=ve({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[u],r.dtype);n.disposeIntermediateTensorInfo(u);let p=[...r.shape,a],h=ve({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},Ure={kernelName:Ei,backendName:"webgl",kernelFunc:Vre};function s0(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=xp({inputs:{input:s},backend:n}),a=s0({inputs:{x:r},backend:n}),o=n0({inputs:{input:s},backend:n}),i=s0({inputs:{x:o},backend:n}),l=Xo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return bp({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Gre={kernelName:Hi,backendName:"webgl",kernelFunc:s0};function L4(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=xp({inputs:{input:s},backend:n}),a=L4({inputs:{x:r},backend:n}),o=n0({inputs:{input:s},backend:n}),i=s0({inputs:{x:o},backend:n}),l=Xo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return bp({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Hre={kernelName:Ni,backendName:"webgl",kernelFunc:L4};function jre(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return $x({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=$x({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=y4({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var qre={kernelName:Ri,backendName:"webgl",kernelFunc:jre},Xre=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let s=e.length,r=St(s),a=t.map(l=>l[0]).join(","),o=t.map((l,c)=>l[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Kre=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=St(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=Kn("rc",s),l=Kn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${c}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${d[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${u});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},B4=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(v.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return bp({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Kre(r.shape,a,o):new Xre(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},Zre={kernelName:ho,backendName:"webgl",kernelFunc:B4},Yre=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Jre=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Km+`
  return result;
`,Qre=$n({opSnippet:Yre,packedOpSnippet:Jre}),eae={kernelName:fo,backendName:"webgl",kernelFunc:Qre};function tae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],c=v.parseAxisParam(a,r.shape),u=c,d=N.getAxesPermutation(u,i),p=r;d!=null&&(p=Zn({inputs:{x:r},backend:n,attrs:{perm:d}}),u=N.getInnerMostAxes(u.length,i),l.push(p)),N.assertAxesAreInnerMostDims("prod",u,i);let h;if(n.shouldExecuteOnCPU([p])){let f=n.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:y}=lJ(p.shape,p.dtype,f,u);h=n.makeTensorInfo(g,y,m)}else{let[f,m]=N.computeOutAndReduceShapes(p.shape,u),g=v.sizeFromShape(m),y=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),A=yd(r.dtype),x=Cl(y,A,"prod",n);h=ve({inputs:{x},backend:n,attrs:{shape:f}}),l.push(y),l.push(x)}if(o){l.push(h);let f=N.expandShapeToKeepDim(h.shape,c);h=ve({inputs:{x:h},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var nae={kernelName:$i,backendName:"webgl",kernelFunc:tae},W4=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=uJ(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},sae={kernelName:fu,backendName:"webgl",kernelFunc:W4},rae="return 1.0 / x;",aae=ut({opSnippet:rae}),oae={kernelName:mu,backendName:"webgl",kernelFunc:aae},iae=wr+`
  return (x < 0.0) ? 0.0 : x;
`,lae=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uae=ut({opSnippet:iae,packedOpSnippet:lae}),cae={kernelName:go,backendName:"webgl",kernelFunc:uae},dae=wr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,pae=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hae=ut({opSnippet:dae,packedOpSnippet:pae}),fae={kernelName:Ao,backendName:"webgl",kernelFunc:hae},mae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},gae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function yae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gae(r.shape,l,c,a,o):new mae(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],"float32")}var Aae={kernelName:yo,backendName:"webgl",kernelFunc:yae},xae=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function bae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new xae(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var vae={kernelName:jh,backendName:"webgl",kernelFunc:bae},wae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},kae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Iae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new kae(r.shape,l,c,a,o):new wae(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],r.dtype)}var Sae={kernelName:gu,backendName:"webgl",kernelFunc:Iae},Cae=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Tae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Cae(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var Nae={kernelName:Hh,backendName:"webgl",kernelFunc:Tae},Eae=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=St(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},Rae=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=Kn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=St(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${r}) {
              result.a = ${u(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return d(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",d(h)}function c(h){return h[n-2]="("+h[n-2]+" + 1)",d(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",d(h)}function d(h){let f=e.map((y,A)=>p(A,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function $ae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Cs({inputs:{x:r},backend:n});let l=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rae(r.shape,i):new Eae(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var Dae={kernelName:_i,backendName:"webgl",kernelFunc:$ae},_ae=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Fae={kernelName:ji,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new _ae(s.shape,a),[c,u]=N.getImageCenter(o,s.shape[1],s.shape[2]),d=[[c,u,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,d)}},Pae=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Oae=ut({opSnippet:Pae}),Mae={kernelName:Fi,backendName:"webgl",kernelFunc:Oae},zae="return inversesqrt(x);",Lae=ut({opSnippet:zae,cpuKernelImpl:cJ}),Bae={kernelName:aa,backendName:"webgl",kernelFunc:Lae},V4=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=St(r.length),l=St(a.length),c="";n===1?c="i":n===2&&(c="i, j");let u=`getIndices(${c})`,d="";s===1?d="i":s===2&&(d="i, coords[1]");let p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Wae(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=ve({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=ve({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new V4(l,i,h.shape.length,f.shape.length,u,p),y=n.runWebGLProgram(g,[f,h,m],f.dtype),A=ve({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),A}var Vae={kernelName:Pi,backendName:"webgl",kernelFunc:Wae},Uae=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let c=0;c<t.length;c++)l.push(`${o[c]}`),c<e&&i.push(`${o[c]}`);s=i.join(),r=l.join()}let a=St(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Gae(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new Uae(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],Mn(r.dtype,a.dtype))}var Hae={kernelName:Oi,backendName:"webgl",kernelFunc:Gae},jae=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,qae=ut({opSnippet:jae}),Xae={kernelName:yu,backendName:"webgl",kernelFunc:qae},U4="return 1.0 / (1.0 + exp(-1.0 * x));",Kae=ut({opSnippet:U4,packedOpSnippet:U4,cpuKernelImpl:dJ}),Zae={kernelName:oa,backendName:"webgl",kernelFunc:Kae},Yae=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Jae=ut({opSnippet:Yae}),Qae={kernelName:Au,backendName:"webgl",kernelFunc:Jae},eoe=n4+`
  return sin(x);
`,toe=ut({opSnippet:eoe}),noe={kernelName:xo,backendName:"webgl",kernelFunc:toe},soe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,roe=ut({opSnippet:soe}),aoe={kernelName:zi,backendName:"webgl",kernelFunc:roe},ooe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,ioe=ut({opSnippet:ooe}),loe={kernelName:xu,backendName:"webgl",kernelFunc:ioe},uoe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,A)=>y*A),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let c=[],u=B4({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=ve({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Zn({inputs:{x:f},backend:n,attrs:{perm:p}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},coe={kernelName:Li,backendName:"webgl",kernelFunc:uoe};function doe(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[d,p,h,f,m]=hJ(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var poe={kernelName:qh,backendName:"webgl",kernelFunc:doe};function hoe(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[c,u,d]=fJ(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var foe={kernelName:Xh,backendName:"webgl",kernelFunc:hoe};function moe(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=US(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var goe={kernelName:Kh,backendName:"webgl",kernelFunc:moe};function yoe(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=US(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var Aoe={kernelName:Zh,backendName:"webgl",kernelFunc:yoe};function xoe(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,r,i),p=!1,h=new V4(c,l,r.shape.length,a.shape.length,u,[d,1],p),f=n.runWebGLProgram(h,[a,r,o],a.dtype),m=ve({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var boe={kernelName:ad,backendName:"webgl",kernelFunc:xoe};function voe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=dc({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var woe={kernelName:Bi,backendName:"webgl",kernelFunc:voe},G4="return sqrt(x);",koe=ut({opSnippet:G4,packedOpSnippet:G4,cpuKernelImpl:mJ}),Ioe={kernelName:ia,backendName:"webgl",kernelFunc:koe},Soe="return x * x;",Coe=ut({opSnippet:Soe}),Toe={kernelName:bu,backendName:"webgl",kernelFunc:Coe},H4="return (a - b) * (a - b);",Noe=$n({opSnippet:H4,packedOpSnippet:H4}),Eoe={kernelName:la,backendName:"webgl",kernelFunc:Noe};function Roe({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=wr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new qo(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var $oe={kernelName:Io,backendName:"webgl",kernelFunc:Roe},Doe=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=St(n.length),a=St(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,c)=>(i++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${i-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function _oe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{nonStrided:h,$begin:f,$strides:m,size:g,newShape:y,outShape:A}=Qt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),x=ve({inputs:{x:r},backend:n,attrs:{shape:y}}),b;if(h){let k=dc({inputs:{x},backend:n,attrs:{begin:f,size:g}});b=ve({inputs:{x:k},backend:n,attrs:{shape:A}}),n.disposeIntermediateTensorInfo(k)}else if(A.some(k=>k===0))b=n.makeTensorInfo(A,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){let E=n.texData.get(x.dataId).values,R=Fe(x.shape,x.dtype,E),P=gJ(A,R,m,f);b=n.makeTensorInfo(A,x.dtype,P.values)}else{let S=new Doe(f,m,A);b=n.runWebGLProgram(S,[x],x.dtype)}let w=ve({inputs:{x:b},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),w}var Foe={kernelName:Wi,backendName:"webgl",kernelFunc:_oe};function Poe(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=yJ(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Ooe={kernelName:od,backendName:"webgl",kernelFunc:Poe};function Moe(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[c,u,d]=AJ(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var zoe={kernelName:Yh,backendName:"webgl",kernelFunc:Moe};function Loe(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=xJ(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var Boe={kernelName:Jh,backendName:"webgl",kernelFunc:Loe},Woe="return tan(x);",Voe=ut({opSnippet:Woe}),Uoe={kernelName:Vi,backendName:"webgl",kernelFunc:Voe},Goe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Hoe=ut({opSnippet:Goe}),joe={kernelName:wo,backendName:"webgl",kernelFunc:Hoe},qoe=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=St(this.rank),r=Xoe(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Xoe(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function j4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>v.decodeString(p)):l,u=Fe(r.shape,r.dtype,c),d=vJ(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new qoe(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var Koe={kernelName:ca,backendName:"webgl",kernelFunc:j4},Zoe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Yoe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Tl(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function q4(e){let t=1;for(;t<e;)t*=2;return t}function Joe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=K().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=K().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(n.shouldExecuteOnCPU([r])||u<i||a>l){let P=n.readSync(r.dataId),[$,D]=wJ(P,c,r.dtype,a,o);return[n.makeTensorInfo($.shape,$.dtype,$.values),n.makeTensorInfo(D.shape,D.dtype,D.values)]}if(a===0)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(u===1)return[r,bp({attrs:{shape:c,dtype:"int32",value:0},backend:n})];let d=n.texData.get(r.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(r):r,m=v.sizeFromShape(c)/u,g=ve({inputs:{x:h},attrs:{shape:[m,u]},backend:n});p&&Tl(n,h);let y=q4(a),A=q4(u),x=null,b=()=>x===null?[g,g]:[g,x],w=(P,$,D)=>{let T=b(),O=new Zoe(D),H=[[u],[x===null?1:0],[Number.NEGATIVE_INFINITY],[P],[$]],z=x;x=n.runWebGLProgram(O,T,"int32",H),Tl(n,z)};for(let P=1;P<y;P*=2){let $=P*2;for(let D=P;D>=1;D/=2)w($,D,[m,A])}for(let P=A;P>y;P/=2){let $=b(),D=new Yoe([m,P/2]),O=[[u],[x===null?1:0],[y]],V=x;x=n.runWebGLProgram(D,$,"int32",O),Tl(n,V);let H=y/2,z=H*2;for(let X=H;X>=1;X/=2)w(z,X,x.shape)}let k=x;x=dc({inputs:{x},backend:n,attrs:{begin:0,size:[m,a]}}),Tl(n,k);let S=D4({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});Tl(n,g);let E=c.slice(0,-1);E.push(a),k=x,x=ve({inputs:{x},attrs:{shape:E},backend:n}),Tl(n,k);let R=S;return S=ve({inputs:{x:S},attrs:{shape:E},backend:n}),Tl(n,R),[S,x]}var Qoe={kernelName:vu,backendName:"webgl",kernelFunc:Joe},eie=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function tie(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new eie(d,p,o,i,l,g);return n.runWebGLProgram(y,[r,a],"float32")}var nie={kernelName:Ui,backendName:"webgl",kernelFunc:tie};function sie(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;sc(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:c}=kJ(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var rie={kernelName:Qh,backendName:"webgl",kernelFunc:sie};function aie(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=dc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),y=ve({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var oie={kernelName:Gi,backendName:"webgl",kernelFunc:aie},iie=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",c=Math.floor(n/4)*4,u=n%4,d=`
        sumValue += dot(values, segFilter);
    `,p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function lie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],c=0,u=N.getAxesPermutation([c],i),d=r;u!=null&&(d=Zn({inputs:{x:r},backend:n,attrs:{perm:u}}),l.push(d),c=N.getInnerMostAxes(1,i)[0]);let p=N.segment_util.computeOutShape(d.shape,c,o),h=v.sizeFromShape([d.shape[c]]),f=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=yd(r.dtype),g=(b,w,k,S,E)=>{let R=b.shape[0],P=b.shape[1],$=N.segment_util.segOpComputeOptimalWindowSize(P,E),D={windowSize:$,inSize:P,batchSize:R,numSegments:E},T=new iie(D,w),O=n.compileAndRun(T,[b,k],S);if(l.push(O),O.shape[1]===E)return O;let V=W4({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),H=j4({inputs:{x:V},backend:n,attrs:{reps:[P/$]}});return l.push(V),l.push(H),g(O,w,H,S,E)},y=g(f,"unsortedSegmentSum",a,m,o),A=ve({inputs:{x:y},backend:n,attrs:{shape:p}}),x=A;if(u!=null){l.push(A);let b=N.getUndoAxesPermutation(u);x=Zn({inputs:{x},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),x}var uie={kernelName:id,backendName:"webgl",kernelFunc:lie},cie=[zse,Wse,wQ,IQ,TQ,RQ,DQ,PQ,MQ,LQ,UQ,HQ,XQ,YQ,ree,eee,iee,dee,uee,mee,yee,xee,kee,Ree,Dee,Fee,Bee,Vee,jee,Kee,sQ,ete,cte,pte,rte,gte,Ate,fte,vte,Ite,Tte,Ete,$te,Fte,Bte,Vte,Ote,Hte,Xte,Zte,ene,rne,lne,dne,pne,hne,mne,yne,xne,vne,kne,Tne,Rne,_ne,Pne,zne,Wne,Hne,Kne,nQ,Yne,Jee,ese,sse,ose,aQ,cse,fse,gse,kse,bse,Tse,Rse,Fse,Use,Yse,Kse,tre,sre,are,qse,ire,ure,hre,yre,vre,Ere,cQ,$re,Fre,Mre,Bre,Oee,Ure,Hre,qre,Zre,eae,iQ,nae,sae,Mee,Sre,oae,fae,cae,pQ,Aae,vae,Sae,Nae,Dae,Fae,Mae,Bae,Vae,Hae,Xae,Zae,Qae,noe,aoe,Nee,Tre,loe,coe,poe,foe,goe,Aoe,boe,woe,Ioe,Toe,Eoe,$oe,Foe,Ooe,zoe,Boe,Cre,xQ,Uoe,joe,Koe,Qoe,nie,bQ,rie,oie,uie,Gre];for(let e of cie)pa(e);var rn;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(rn||(rn={}));var vp;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(vp||(vp={}));var X4;function die(e){X4=e.wasm.cwrap(So,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function pie(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let E=n.dataIdMap.get(o.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=vp[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],A=c?a.shape[1]:a.shape[2],x=r.shape[0],b=n.makeOutput([x,y,A],r.dtype),w=n.dataIdMap.get(b.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(a.shape).buffer);return X4(p,k,r.shape.length,h,S,a.shape.length,l,c,g,f,m,d||0,w),b}var hie={kernelName:So,backendName:"wasm",setupFunc:die,kernelFunc:pie};function Dn(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,c=o.makeOutput(i.shape,t||i.dtype),u=o.dataIdMap.get(c.dataId).id;return v.sizeFromShape(c.shape)===0||n(l,rn[i.dtype],u),c}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var fie=Dn(hi);function Yn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:c,b:u}=l,d=i.dataIdMap.get(c.dataId).id,p=i.dataIdMap.get(u.dataId).id,h=n!=null?n:c.dtype,f=N.assertAndGetBroadcastShape(c.shape,u.shape),m=i.makeOutput(f,h);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(c.shape).buffer),y=new Uint8Array(new Int32Array(u.shape).buffer),A=i.dataIdMap.get(m.dataId).id,x=()=>s(d,g,c.shape.length,p,y,u.shape.length,rn[c.dtype],A);if(t&&c.dtype==="float32")return x(),m;let b=N.getBroadcastDims(c.shape,f),w=N.getBroadcastDims(u.shape,f),k=b.every((E,R)=>E===R),S=w.every((E,R)=>E===R);if(k&&S)return x(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${c.dtype} ${e}.`)}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var mie=!0,gie=Yn(Er,mie),K4;function yie(e){K4=e.wasm.cwrap(Ba,null,["array","number","number","number"])}function Aie(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return K4(a,r.length,rn[s.dtype],o),s}var xie={kernelName:Ba,backendName:"wasm",setupFunc:yie,kernelFunc:Aie};function r0(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var bie={kernelName:so,backendName:"wasm",kernelFunc:r0},Z4;function vie(e){Z4=e.wasm.cwrap(ko,null,["number","array","number","number","number","array","number"])}function fc(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=kie(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=wie(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=r0({inputs:t,backend:n});return f.shape=i,f}let c=n.makeOutput(i,l.dtype),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(c.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return Z4(u,h,l.shape.length,rn[l.dtype],d,p,a.length),c}function wie(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function kie(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var Iie={kernelName:ko,backendName:"wasm",kernelFunc:fc,setupFunc:vie};function Ko(e,t,n){let s=e.shape,r=e.shape.length,a=v.parseAxisParam(t,s),o=a,i=N.getAxesPermutation(o,r),l=null,c=!1;if(i!=null){let u=new Array(r);for(let h=0;h<u.length;h++)u[h]=s[i[h]];o=N.getInnerMostAxes(o.length,r),l=fc({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==d&&(c=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:c}}var Y4;function Sie(e){Y4=e.wasm.cwrap(Yl,null,["number, number, number"])}function Cie(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ko(o,r,t);if(h){let x=t.dataIdMap.get(u.dataId).id;c=u,l=x}let f=c.shape.length;N.assertAxesAreInnerMostDims("all",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=v.sizeFromShape(g),A=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;Y4(l,y,x)}if(h&&t.disposeData(u.dataId),a){let x=N.expandShapeToKeepDim(A.shape,p);A.shape=x}return A}var Tie={kernelName:Yl,backendName:"wasm",setupFunc:Sie,kernelFunc:Cie},J4;function Nie(e){J4=e.wasm.cwrap(Jl,null,["number, number, number"])}function Eie(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ko(o,r,t);if(h){let x=t.dataIdMap.get(u.dataId).id;c=u,l=x}let f=c.shape.length;N.assertAxesAreInnerMostDims("any",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=v.sizeFromShape(g),A=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;J4(l,y,x)}if(h&&t.disposeData(u.dataId),a){let x=N.expandShapeToKeepDim(A.shape,p);A.shape=x}return A}var Rie={kernelName:Jl,backendName:"wasm",setupFunc:Nie,kernelFunc:Eie},Q4;function $ie(e){Q4=e.wasm.cwrap(Wa,null,["number","number","number","number","number"])}function Die(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:c,axes:u,inputWasTransposed:d}=Ko(a,r,t);if(d){let y=t.dataIdMap.get(c.dataId).id;y!==o&&(l=c,i=y)}let p=l.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=v.sizeFromShape(h.shape),g=l.shape[u[0]];return Q4(i,rn[l.dtype],m,g,f),d&&t.disposeData(c.dataId),h}var _ie={kernelName:Wa,backendName:"wasm",kernelFunc:Die,setupFunc:$ie},eC;function Fie(e){eC=e.wasm.cwrap(Va,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Pie(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.strideHeight,A=u.strideWidth,x=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let b=s.makeOutput(u.outShape,"float32"),w=s.dataIdMap.get(b.dataId).id;return eC(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,A,x,w),b}var Oie={kernelName:Va,backendName:"wasm",setupFunc:Fie,kernelFunc:Pie};function hs(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a);return v.assert(a===v.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var Mie={kernelName:Di,backendName:"wasm",kernelFunc:hs},tC;function zie(e){tC=e.wasm.cwrap(Ua,null,["number","array","number","number","array","number","number","number","number"])}function Lie(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=g===y||g===1||y===1;v.assert(l>=2&&c>=2&&A,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);let b=(g>y?r.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,h]);v.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let w=o?[g,u,p]:[g,p,u],k=i?[y,h,d]:[y,d,h],S=hs({inputs:{x:r},backend:n,attrs:{shape:w}}),E=hs({inputs:{x:a},backend:n,attrs:{shape:k}}),R=n.dataIdMap.get(S.dataId).id,P=n.dataIdMap.get(E.dataId).id,$=o?S.shape[2]:S.shape[1],D=i?E.shape[1]:E.shape[2],T=Math.max(g,y),O=n.makeOutput([T,$,D],S.dtype),V=n.dataIdMap.get(O.dataId).id,H=new Uint8Array(new Int32Array(S.shape).buffer),z=new Uint8Array(new Int32Array(E.shape).buffer);return tC(R,H,S.shape.length,P,z,E.shape.length,o,i,V),n.disposeData(S.dataId),n.disposeData(E.dataId),O.shape=b,O}var Bie={kernelName:Ua,backendName:"wasm",setupFunc:zie,kernelFunc:Lie};function wp(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=Qt.parseSliceParams(t,n,s),i=Qt.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),c=r.makeOutput(o,t.dtype),u=v.computeStrides(t.shape),d=r.dataIdMap.get(c.dataId);if(i){let f=Qt.computeFlatOffset(a,u);return t.dtype==="string"?d.stringBytes=l.slice(f,f+v.sizeFromShape(o)):r.typedArrayFromHeap(c).set(l.subarray(f,f+v.sizeFromShape(o))),c}if(t.dtype==="string"){let f=Fm(l,a,o,t.shape,t.dtype);return d.stringBytes=f,c}let p=r.typedArrayFromHeap(c),h=t.shape.length;if(h===2)Wie(l,u[0],p,a,o);else if(h===3)Vie(l,u[0],u[1],p,a,o);else if(h===4)Uie(l,u[0],u[1],u[2],p,a,o);else{let f=Fm(l,a,o,t.shape,t.dtype);p.set(f)}return c}function Wie(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let c=o;c<l;c++){let u=c*t+i;n.set(e.subarray(u,u+r[1]),a),a+=r[1]}}function Vie(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],c=r[2],u=i+a[0],d=l+a[1];for(let p=i;p<u;p++)for(let h=l;h<d;h++){let f=p*t+h*n+c;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function Uie(e,t,n,s,r,a,o){let i=0,l=a[0],c=a[1],u=a[2],d=l+o[0],p=c+o[1],h=u+o[2],f=a[3];for(let m=l;m<d;m++)for(let g=c;g<p;g++)for(let y=u;y<h;y++){let A=m*t+g*n+y*s+f;r.set(e.subarray(A,A+o[3]),i),i+=o[3]}}var Gie={kernelName:Mi,backendName:"wasm",kernelFunc:wp};function Hie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((y,A)=>y*A),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=hs({inputs:{x:r},backend:n,attrs:{shape:l}}),f=fc({inputs:{x:h},backend:n,attrs:{perm:c}}),m=hs({inputs:{x:f},backend:n,attrs:{shape:u}}),g=wp({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var jie={kernelName:fi,backendName:"wasm",kernelFunc:Hie};function kp(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var qie={kernelName:Ga,backendName:"wasm",kernelFunc:kp},Xie=Dn(Zr),nC;function Kie(e){nC=e.wasm.cwrap(Yr,null,["number","number","number","number"])}function Zie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id;return nC(i,a,o,c),l}var Yie={kernelName:Yr,backendName:"wasm",setupFunc:Kie,kernelFunc:Zie};function sC(e){let{inputs:t,backend:n}=e,s=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=N.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>v.sizeFromShape(h.shape)>0);if(a.length===1)return r0({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(v.sizeFromShape(r)===0)return o;let i=a.map(h=>h.shape);if(N.assertParamsConsistent(i,s),a[0].dtype==="string"){let h=a.map(x=>{let b=v.sizeFromShape(x.shape.slice(s));return hs({inputs:{x},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));r=N.computeOutShape(h.map(x=>x.shape),1);let m=h[0].shape[0]===1,g=ex(f,r,t[0].dtype,m),y=N.computeOutShape(a.map(x=>x.shape),s);o.shape=y;let A=n.dataIdMap.get(o.dataId);return A.stringBytes=N.fromStringArrayToUint8(g),h.forEach(x=>n.disposeData(x.dataId)),o}let l=v.sizeFromShape(a[0].shape.slice(0,s)),c=0,u=a.map(h=>{let f=v.sizeFromShape(h.shape.slice(s));return c+=f,f}),d=a.map(h=>n.typedArrayFromHeap(h)),p=n.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*c;for(let m=0;m<d.length;m++){let g=u[m],y=h*g,A=d[m].subarray(y,y+g);p.set(A,f),f+=g}}return o}var Jie={kernelName:mi,backendName:"wasm",kernelFunc:sC},rC;function Qie(e){rC=e.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ele(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d,dataFormat:p}=n,h=N.convertConv2DDataFormat(p),f=N.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,x=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,S=f.strideHeight,E=f.strideWidth,R=f.inChannels,P=f.outChannels,$=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let D=s.makeOutput(f.outShape,"float32"),T=s.dataIdMap.get(D.dataId).id;return rC(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,A,x,b,$,w,k,S,E,R,P,T),D}var tle={kernelName:Ha,backendName:"wasm",setupFunc:Qie,kernelFunc:ele},aC;function nle(e){aC=e.wasm.cwrap(ja,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sle(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,inputShape:u}=s,d=1,p=N.convertConv2DDataFormat(l),h=N.computeConv2DInfo(u,a.shape,o,d,i,c,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:A,inWidth:x,outChannels:b,outHeight:w,outWidth:k,strideHeight:S,strideWidth:E}=h,R=m-1-h.padInfo.top,P=g-1-h.padInfo.left,$=h.dataFormat==="channelsLast",D=v.computeStrides(h.inShape),T=v.computeStrides(r.shape),[O,V,H]=v.computeStrides(a.shape),z=D[0],X=$?D[1]:D[2],ee=$?D[2]:1,Y=$?1:D[1],se=T[0],ne=$?T[1]:T[2],J=$?T[2]:1,te=$?1:T[1],ce=t.makeOutput(h.inShape,"float32"),pe=t.dataIdMap.get(ce.dataId).id,be=t.dataIdMap.get(r.dataId).id,we=t.dataIdMap.get(a.dataId).id;return aC(be,we,f,m,g,A,x,y,w,k,b,S,E,R,P,O,V,H,z,X,ee,Y,se,ne,J,te,pe),ce}var rle={kernelName:ja,backendName:"wasm",setupFunc:nle,kernelFunc:sle},ale=Dn(qa),ole=Dn(Xa),Dx;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(Dx||(Dx={}));var oC;function ile(e){oC=e.wasm.cwrap(yi,null,["number","number","number","number","array","number","number","number","number","number"])}function lle(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:c}=n,u=l.shape[0],[d,p]=o,h=[u,d,p,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=kp({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,A=t.dataIdMap.get(c.dataId).id,x=t.makeOutput(h,"float32"),b=t.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(i.shape).buffer);return oC(g,y,A,u,w,d,p,Dx[r],a,b),m!=null&&t.disposeData(m.dataId),x}var ule={kernelName:yi,backendName:"wasm",setupFunc:ile,kernelFunc:lle},iC;function cle(e){iC=e.wasm.cwrap(gi,null,["number","number","number","number","number","number"])}function dle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=N.getAxesPermutation([a],l),u=r;c!==null&&(u=fc({inputs:{x:r},attrs:{perm:c},backend:n}));let d=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[d],l);let p=n.makeOutput(u.shape,u.dtype),h=u.shape[d],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(p.dataId).id;iC(f,o?1:0,i?1:0,h,m,rn[r.dtype]);let g=p;if(c!==null){let y=N.getUndoAxesPermutation(c);g=fc({inputs:{x:p},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(p.dataId)}return g}var ple={kernelName:gi,backendName:"wasm",setupFunc:cle,kernelFunc:dle},lC;function hle(e){lC=e.wasm.cwrap(Ai,null,["number","number","number","array","number","array","array","number","number"])}function fle(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=t.makeOutput(f,"float32"),y=t.dataIdMap.get(r.dataId).id,A=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return lC(y,a,o==="NHWC"?1:0,A,r.shape.length-1,x,b,f.length,w),m}var mle={kernelName:Ai,backendName:"wasm",setupFunc:hle,kernelFunc:fle},uC;function gle(e){uC=e.wasm.cwrap(Ka,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yle(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d}=n,p=c==null?[1,1]:c,h=N.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,A=h.padInfo.bottom,x=h.padInfo.left,b=h.dilationHeight,w=h.dilationWidth,k=h.strideHeight,S=h.strideWidth,E=h.inChannels,R=h.outChannels,P=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let $=s.makeOutput(h.outShape,"float32"),D=s.dataIdMap.get($.dataId).id;return uC(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,A,x,P,b,w,k,S,E,R,D),$}var Ale={kernelName:Ka,backendName:"wasm",setupFunc:gle,kernelFunc:yle},xle=Dn(Ya),ble=!1,vle=Yn(Ja,ble,"bool"),wle=Dn(Jr,"float32");function _x(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),hs({inputs:{x:r},backend:s,attrs:{shape:i}})}var kle={kernelName:xi,backendName:"wasm",kernelFunc:_x};function cC(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var Ile={kernelName:ou,backendName:"wasm",kernelFunc:cC},dC;function Sle(e){dC=e.wasm.cwrap(bi,null,["number","number","number","number","number","number"])}function Cle(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,c,u]=s.shape;return dC(a,i,l,c,u,o),r}var Tle={kernelName:bi,backendName:"wasm",kernelFunc:Cle,setupFunc:Sle},Nle=Dn(Qr),Ele=!1,Rle=Yn(eo,Ele),pC;function $le(e){pC=e.wasm.cwrap(to,null,["number","number","number","number","number","number","number"])}function Dle(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:c}=n,u=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(v.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return pC(u,d,p,h,f,r,g),m}var _le={kernelName:to,backendName:"wasm",setupFunc:$le,kernelFunc:Dle},hC;function Fle(e){hC=e.wasm.cwrap(Co,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ple(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,l,u,c,p),g=vp[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,A=s.dataIdMap.get(a.dataId).id,x=m.outChannels,b=0;if(o!=null){let J=s.dataIdMap.get(o.dataId);if(J.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${J.shape}) does not match the number of output channels (${x})`);b=J.id}let w=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,P=m.padInfo.left,$=m.dilationHeight,D=m.dilationWidth,T=m.strideHeight,O=m.strideWidth,V=m.inChannels,H=m.padInfo.type==="SAME"?1:0,z=m.batchSize,X=m.inHeight,ee=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Y=s.makeOutput(m.outShape,"float32"),se=s.dataIdMap.get(Y.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return hC(y,z,X,ee,A,w,k,b,S,E,R,P,H,$,D,T,O,V,x,g,ne,f||0,se),Y}var Ole={kernelName:Co,backendName:"wasm",setupFunc:Fle,kernelFunc:Ple},fC;function Mle(e){fC=e.wasm.cwrap(To,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zle(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,l,u,c,p,!0),g=vp[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,A=s.dataIdMap.get(a.dataId).id,x=m.outChannels,b=0;if(o!=null){let J=s.dataIdMap.get(o.dataId);if(J.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${J.shape}) does not match the number of output channels (${x})`);b=J.id}let w=m.filterHeight,k=m.filterWidth,S=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,P=m.padInfo.left,$=m.dilationHeight,D=m.dilationWidth,T=m.strideHeight,O=m.strideWidth,V=m.inChannels,H=m.padInfo.type==="SAME"?1:0,z=m.batchSize,X=m.inHeight,ee=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Y=s.makeOutput(m.outShape,"float32"),se=s.dataIdMap.get(Y.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return fC(y,z,X,ee,A,w,k,b,S,E,R,P,H,$,D,T,O,V,x,g,ne,f||0,se),Y}var Lle={kernelName:To,backendName:"wasm",setupFunc:Mle,kernelFunc:zle},mC;function Ble(e){mC=e.wasm.cwrap(wi,null,["number","number","number","number","number","number","array","number"])}function Wle(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=H2.prepareAndValidate(s,r),c=t.makeOutput(a,s.dtype);if(o===0)return c;let u=r.shape,d=u[u.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=t.dataIdMap.get(c.dataId).id;return mC(h,rn[s.dtype],m,o,d,i,g,y),c}var Vle={kernelName:wi,backendName:"wasm",setupFunc:Ble,kernelFunc:Wle},gC;function Ule(e){gC=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Gle(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=t.readSync(a.dataId),u=r.shape[l];for(let R=0;R<c.length;++R){let P=c[R];v.assert(P<=u-1&&P>=0,()=>`GatherV2: the index value ${P} is not in [0, ${u-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=hs({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=v.sizeFromShape(a.shape),f=hs({inputs:{x:a},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(v.sizeFromShape(r.shape)===0)return g;let y=p.shape.length-1,x=t.dataIdMap.get(p.dataId).id,w=t.dataIdMap.get(f.dataId).id,k=t.dataIdMap.get(g.dataId).id,S=new Uint8Array(new Int32Array(v.computeStrides(p.shape)).buffer),E=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return gC(x,rn[r.dtype],S,y,w,d.batchSize,E,k),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var Hle={kernelName:vi,backendName:"wasm",setupFunc:Ule,kernelFunc:Gle},jle=!1,qle=Yn(no,jle,"bool"),Xle=!1,Kle=Yn(ea,Xle,"bool"),yC;function Zle(e){yC=e.wasm.cwrap(ki,null,["number","number","number","number"])}function Yle(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;yC(r,rn[t.dtype],n,o)}return a}var Jle={kernelName:ki,backendName:"wasm",setupFunc:Zle,kernelFunc:Yle},Qle=!1,eue=Yn(ro,Qle,"bool"),tue=!1,nue=Yn(ao,tue,"bool"),sue=Dn(ta),rue=!1,aue=Yn(Ii,rue,"bool"),AC;function oue(e){AC=e.wasm.cwrap(oo,null,["number","number","number","number"])}function iue(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ko(o,r,t);if(h){let x=t.dataIdMap.get(u.dataId).id;c=u,l=x}let f=c.shape.length;N.assertAxesAreInnerMostDims("max",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=v.sizeFromShape(g),A=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;AC(l,rn[o.dtype],y,x)}if(h&&t.disposeData(u.dataId),a){let x=N.expandShapeToKeepDim(A.shape,p);A.shape=x}return A}var lue={kernelName:oo,backendName:"wasm",setupFunc:oue,kernelFunc:iue},uue=!1,cue=Yn(na,uue),xC;function due(e){xC=e.wasm.cwrap(io,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function pue(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;v.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.dilationHeight,A=u.dilationWidth,x=u.strideHeight,b=u.strideWidth,w=u.inChannels,k=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let S=s.makeOutput(u.outShape,"float32"),E=s.dataIdMap.get(S.dataId).id;return xC(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,A,x,b,w,k,E),S}var hue={kernelName:io,backendName:"wasm",setupFunc:due,kernelFunc:pue},bC;function fue(e){bC=e.wasm.cwrap(lo,null,["number, number, number"])}function mue(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ko(o,r,t),f=d;if(h){let b=t.dataIdMap.get(u.dataId).id;b!==i&&(c=u,l=b,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("mean",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=v.sizeFromShape(g),A=c;c.dtype!=="float32"&&(A=kp({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);let x=t.makeOutput(m,"float32");if(v.sizeFromShape(c.shape)!==0){let b=t.dataIdMap.get(x.dataId).id;bC(l,y,b)}if(h&&t.disposeData(u.dataId),a){let b=N.expandShapeToKeepDim(x.shape,p);x.shape=b}return c.dtype!=="float32"&&t.disposeData(A.dataId),x}var gue={kernelName:lo,backendName:"wasm",setupFunc:fue,kernelFunc:mue},vC;function yue(e){vC=e.wasm.cwrap(uo,null,["number","number","number","number"])}function Aue(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ko(o,r,t);if(h){let x=t.dataIdMap.get(u.dataId).id;x!==i&&(c=u,l=x)}let f=c.shape.length;N.assertAxesAreInnerMostDims("min",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=v.sizeFromShape(g),A=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;vC(l,rn[o.dtype],y,x)}if(h&&t.disposeData(u.dataId),a){let x=N.expandShapeToKeepDim(A.shape,p);A.shape=x}return A}var xue={kernelName:uo,backendName:"wasm",setupFunc:yue,kernelFunc:Aue},bue=!1,vue=Yn(sa,bue),Fx;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(Fx||(Fx={}));var wC;function wue(e){wC=e.wasm.cwrap(co,null,["number","array","number","number","array","array","number","number"])}function kue(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=s.map(f=>f[0]),d=s.map(f=>f[1]),p=new Uint8Array(new Int32Array(u).buffer),h=new Uint8Array(new Int32Array(d).buffer);return wC(o,c,t.shape.length,rn[t.dtype],p,h,Fx[r],l),i}var Iue={kernelName:co,backendName:"wasm",kernelFunc:kue,setupFunc:wue},Sue=!0,Cue=Yn(ra,Sue),Tue=Dn(Si);function Px(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var kC;function Nue(e){kC=e.wasm.cwrap(Ci,"number",["number","number","number","number","number"])}function Eue(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,c=t.dataIdMap.get(i.dataId).id,u=t.dataIdMap.get(l.dataId).id,d=kC(c,u,a,r,o),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=Px(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var Rue={kernelName:Ci,backendName:"wasm",setupFunc:Nue,kernelFunc:Eue},IC;function $ue(e){IC=e.wasm.cwrap(hu,"number",["number","number","number","number","number","bool"])}function Due(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=IC(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Px(t,p);t.wasm._free(m);let y=t.makeOutput([f],"int32",h),A=t.makeOutput([],"int32",g);return[y,A]}var _ue={kernelName:hu,backendName:"wasm",setupFunc:$ue,kernelFunc:Due},SC;function Fue(e){SC=e.wasm.cwrap(Ti,"number",["number","number","number","number","number","number"])}function Pue(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=SC(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Px(t,p);t.wasm._free(g);let y=t.makeOutput([f],"int32",h),A=t.makeOutput([f],"float32",m);return[y,A]}var Oue={kernelName:Ti,backendName:"wasm",setupFunc:Fue,kernelFunc:Pue},Mue=!1,zue=Yn(po,Mue,"bool"),CC;function Lue(e){CC=e.wasm.cwrap(Ei,null,["number","number","number","number","number"])}function Bue(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=n.makeOutput([...r.shape,a],"int32"),c=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(r.dataId).id;return CC(d,a,o,i,c),l}var Wue={kernelName:Ei,backendName:"wasm",setupFunc:Lue,kernelFunc:Bue};function Vue(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var Uue={kernelName:Ni,backendName:"wasm",kernelFunc:Vue};function Gue(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return _x({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=_x({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=sC({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var Hue={kernelName:Ri,backendName:"wasm",kernelFunc:Gue},TC;function jue(e){TC=e.wasm.cwrap(ho,null,["number","array","number","number","array","array","number","number"])}function que(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(v.sizeFromShape(t.shape)===0)return cC({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),p=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return TC(o,u,t.shape.length,rn[t.dtype],h,f,r,c),i}var NC={kernelName:ho,backendName:"wasm",kernelFunc:que,setupFunc:jue},Xue=!1,Kue=Yn(fo,Xue),EC;function Zue(e){EC=e.wasm.cwrap(mo,null,["number","number","number"])}function Yue(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,c=l;l.dtype!=="float32"&&(c=kp({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(c.dataId).id);let u=n.makeOutput(s.shape,"float32"),d=n.dataIdMap.get(u.dataId).id;return EC(i,o,d),l.dtype!=="float32"&&n.disposeData(c.dataId),u}var Jue={kernelName:mo,backendName:"wasm",setupFunc:Zue,kernelFunc:Yue},RC;function Que(e){RC=e.wasm.cwrap($i,null,["number","number","number","number"])}function ece(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ko(o,r,t),f=d;if(h){let x=t.dataIdMap.get(u.dataId).id;x!==i&&(c=u,l=x,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("prod",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=v.sizeFromShape(g),A=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;RC(l,y,rn[A.dtype],x)}if(h&&t.disposeData(u.dataId),a){let x=N.expandShapeToKeepDim(A.shape,p);A.shape=x}return A}var tce={kernelName:$i,backendName:"wasm",setupFunc:Que,kernelFunc:ece},nce=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=sx(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},sce={kernelName:fu,backendName:"wasm",kernelFunc:nce},rce=!0,ace=Yn(Za,rce),oce=Dn(go),ice=Dn(Ao),$C;function lce(e){$C=e.wasm.cwrap(yo,null,["number","number","number","number","number","number","number","number","number","number"])}function uce(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,[u,d,p,h]=r.shape,f=[u,l,c,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=kp({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,A=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return A;let x=t.dataIdMap.get(A.dataId).id;return $C(y,u,d,p,h,l,c,a?1:0,o?1:0,x),g!=null&&t.disposeData(g.dataId),A}var cce={kernelName:yo,backendName:"wasm",setupFunc:lce,kernelFunc:uce},DC;function dce(e){DC=e.wasm.cwrap(_i,null,["number","array","number","array","number","number"])}function pce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=v.parseAxisParam(a,r.shape);if(r.shape.length===0)return r0({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);DC(l,u,o.length,d,r.shape.length,c);let p=hs({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),p}var hce={kernelName:_i,backendName:"wasm",kernelFunc:pce,setupFunc:dce},_C;function fce(e){_C=e.wasm.cwrap(ji,null,["number","number","number","number","number","number","number","number","array","number","number"])}function mce(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(l.dataId).id,[d,p,h,f]=r.shape,[m,g]=N.getImageCenter(i,p,h),y=o===0,A=255,x=typeof o=="number"?[o,o,o,y?0:A]:[...o,A],b=new Uint8Array(new Int32Array(x).buffer);return _C(c,d,p,h,f,a,m,g,b,x.length,u),l}var gce={kernelName:ji,backendName:"wasm",kernelFunc:mce,setupFunc:fce},yce=Dn(Fi),Ace=Dn(aa),FC;function xce(e){FC=e.wasm.cwrap(Pi,null,["number","number","number","number","number","number","array","number","number"])}function bce(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(v.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=j2.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),A=t.dataIdMap.get(i.dataId).id;return FC(f,g,rn[a.dtype],l,c,u,y,p,A),i}var vce={kernelName:Pi,backendName:"wasm",setupFunc:xce,kernelFunc:bce},PC;function wce(e){PC=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function kce(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(c.dataId).id,d=s.shape.length,p=r.shape.length,h=d===0||d>1||p===1?1:v.sizeFromShape(r.shape.slice(1));return PC(o,i,l,h,u),c}var Ice={kernelName:Oi,backendName:"wasm",kernelFunc:kce,setupFunc:wce},OC;function Sce(e){OC=e.wasm.cwrap(oa,null,["number","number"])}function Cce(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return v.sizeFromShape(r.shape)===0||OC(s,a),r}var Tce={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Sce,kernelFunc:Cce},Nce=Dn(xo),MC;function Ece(e){MC=e.wasm.cwrap(vo,null,["number","number","number","number"])}function Rce(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=v.sizeFromShape(n.shape)/i;return v.sizeFromShape(a.shape)===0||MC(r,o,i,l),a}var $ce={kernelName:vo,backendName:"wasm",setupFunc:Ece,kernelFunc:Rce};function Dce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let c=NC.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=hs({inputs:{x:c},backend:n,attrs:{shape:u}}),A=fc({inputs:{x:m},backend:n,attrs:{perm:d}}),w=hs({inputs:{x:A},backend:n,attrs:{shape:p}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(A.dataId),w}var _ce={kernelName:Li,backendName:"wasm",kernelFunc:Dce};function Fce(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=wp({inputs:{x:r},attrs:{begin:c,size:p},backend:s});return c[i]+=d,h})}var Pce={kernelName:Bi,backendName:"wasm",kernelFunc:Fce},Oce=Dn(ia),Mce=Dn(bu),zce=!0,Lce=Yn(la,zce),zC;function Bce(e){zC=e.wasm.cwrap(Io,null,["number","number","number","number"])}function Wce(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return zC(o,r,rn[a.dtype],l),i}var Vce={kernelName:Io,backendName:"wasm",setupFunc:Bce,kernelFunc:Wce},LC;function Uce(e){LC=e.wasm.cwrap(Wi,null,["number","array","number","array","array","array","array","array","number","number"])}function Gce(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i}=s;i==null&&(i=new Array(a.length));let{beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,h=N.slice_util.maskToAxes(u);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(u!==0&&d!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(u!==0&&p!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let f=r.shape.length-a.length,m=N.slice_util.maskToAxes(d),g=r.shape.slice();m.forEach($=>{a[$]=0,o[$]=1,g.splice($,0,1)});let y=hs({inputs:{x:r},attrs:{shape:g},backend:t}),{begin:A,end:x,strides:b}=N.slice_util.getNormalizedAxes(y.shape,h,f,a,o,i,l,c,u);a=A,o=x,i=b;let w=N.slice_util.maskToAxes(p);w.forEach($=>{o[$]=a[$]+1,i[$]=1});let k=N.slice_util.computeOutShape(a,o,i),S=k.filter(($,D)=>w.indexOf(D)===-1);if(i.every($=>$===1)){let $=wp({inputs:{x:y},attrs:{begin:a,size:k},backend:t});t.disposeData(y.dataId);let D=hs({inputs:{x:$},attrs:{shape:S},backend:t});return t.disposeData($.dataId),D}let R=t.makeOutput(S,"float32");if(!S.some($=>$===0)){let $=t.dataIdMap.get(y.dataId).id,D=new Uint8Array(new Int32Array(v.computeStrides(y.shape)).buffer),T=new Uint8Array(new Int32Array(a).buffer),O=new Uint8Array(new Int32Array(o).buffer),V=new Uint8Array(new Int32Array(i).buffer),H=new Uint8Array(new Int32Array(S).buffer),z=new Uint8Array(new Int32Array(v.computeStrides(S)).buffer),X=t.dataIdMap.get(R.dataId).id;LC($,D,y.shape.length,T,O,V,H,z,S.length,X)}t.disposeData(y.dataId);let P=hs({inputs:{x:R},attrs:{shape:S},backend:t});return t.disposeData(R.dataId),P}var Hce={kernelName:Wi,backendName:"wasm",setupFunc:Uce,kernelFunc:Gce},jce=!0,qce=Yn(ua,jce),BC;function Xce(e){BC=e.wasm.cwrap(bo,null,["number","number","number","number"])}function Kce(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Ko(o,r,t),f=d;if(h){let x=t.dataIdMap.get(u.dataId).id;x!==i&&(c=u,l=x,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("sum",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=v.sizeFromShape(g),A=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let x=t.dataIdMap.get(A.dataId).id;BC(l,y,rn[A.dtype],x)}if(h&&t.disposeData(u.dataId),a){let x=N.expandShapeToKeepDim(A.shape,p);A.shape=x}return A}var Zce={kernelName:bo,backendName:"wasm",setupFunc:Xce,kernelFunc:Kce},Yce=Dn(Vi),Jce=Dn(wo),WC;function Qce(e){WC=e.wasm.cwrap(ca,null,["number","array","number","array","number","number"])}function ede(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let p=0;p<i.length;p++)i[p]=r.shape[p]*o[p];let l=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),u=n.makeOutput(i,r.dtype),d=n.dataIdMap.get(u.dataId).id;return WC(a,l,r.shape.length,c,i.length,rn[u.dtype],d),u}var tde={kernelName:ca,backendName:"wasm",setupFunc:Qce,kernelFunc:ede},VC;function nde(e){VC=e.wasm.cwrap(vu,null,["number","array","number","number","number","bool","number","number"])}var sde=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let c=t.makeOutput(l,s.dtype),u=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(l,"int32"),p=t.dataIdMap.get(d.dataId).id;return VC(o,i,s.shape.length,rn[s.dtype],r,a,u,p),[c,d]},rde={kernelName:vu,backendName:"wasm",setupFunc:nde,kernelFunc:sde},UC;function ade(e){UC=e.wasm.cwrap(Ui,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function ode(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),A=t.makeOutput(g,r.dtype),x=t.dataIdMap.get(A.dataId).id,w=t.dataIdMap.get(r.dataId).id,S=t.dataIdMap.get(a.dataId).id,E=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return UC(w,S,a.shape[0]>1,u,f,m,h,p,d,y,r.shape.length-1,E,R,l,x),A}var ide={kernelName:Ui,backendName:"wasm",setupFunc:ade,kernelFunc:ode};function lde(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o),d=new Array(i).fill(0),p=r.shape.slice();p[a]=1;for(let h=0;h<u.length;h++)d[a]=h,u[h]=wp({inputs:{x:r},attrs:{begin:d,size:p},backend:n});return u.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var ude={kernelName:Gi,backendName:"wasm",kernelFunc:lde};function cde(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var dde={kernelName:Hi,backendName:"wasm",kernelFunc:cde},pde=[fie,gie,xie,Tie,Rie,_ie,Oie,Bie,jie,qie,Xie,Yie,Jie,tle,rle,ale,ole,ule,ple,mle,Ale,xle,vle,wle,kle,Ile,Tle,Nle,Rle,hie,_le,Ole,Lle,Vle,Hle,qle,Kle,bie,Jle,eue,nue,sue,aue,lue,cue,hue,gue,xue,vue,Iue,Cue,Tue,Rue,_ue,Oue,zue,Wue,Uue,Hue,NC,Kue,Jue,tce,sce,ace,oce,ice,Mie,cce,hce,gce,Ace,yce,vce,Ice,Tce,Nce,Gie,$ce,_ce,Pce,Oce,Mce,Lce,Vce,Hce,qce,Zce,Yce,Jce,tde,rde,ide,Iie,ude,dde];for(let e of pde)pa(e);var Ox=K();Ox.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));Ox.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Ox.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var GC=ci(dE()),hde='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',fde=ci(pE()),HC=class extends jl{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(XC),zx=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Hc(this,os())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=v.sizeFromShape(n),i=o*v.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:s,stringBytes:r}=this.dataIdMap.get(e);if(n==="string")return r;let a=this.wasm.HEAPU8.slice(t,t+v.sizeFromShape(s)*v.bytesPerElement(n));return yde(a.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function mde(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function jC(e,t,n){if(a0!=null)return a0;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),Sp!=null&&Sp[s]!=null?Sp[s]:n+s}async function gde(){let[e,t]=await Promise.all([K().getAsync("WASM_HAS_SIMD_SUPPORT"),K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let c=hde,u=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(u)}return i.endsWith(".wasm")?jC(e,t,Ip!=null?Ip:l):l+i},Mx&&(r.instantiateWasm=mde(jC(e,t,Ip!=null?Ip:"")));let a=!1;r.onAbort=()=>{if(a||Cp)return;Cp=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&a0==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+GC.default.toString()],{type:"text/javascript"}),o=(0,GC.default)(r)):o=(0,fde.default)(r),o.then(i=>{a=!0,Cp=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})})})}function yde(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Ade=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],a0=null,Ip=null,Sp={},Cp=!1,Mx=!1;function xde(e,t=!1){if(J2("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Cp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");a0=e,Mx=t}function qC(e,t=!1){if(Cp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Ip=e;else{Sp=e;let n=Ade.filter(s=>Sp[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Mx=t}var XC=-1,zx=-1;function bde(e){XC=e}function vde(){if(zx===-1)throw new Error("WASM backend not initialized.");return zx}var wde="3.10.0",kde=2;Qi("wasm",async()=>{let{wasm:e}=await gde();return new HC(e)},kde);var Ur=K();Ur.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Ur.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Ur.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Ur.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Ur.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Ur.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Ur.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Ur.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Ur.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Ur.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function Ide(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function pn(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function o0(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function He(){return`
  let index = getGlobalIndex(globalId, localId);
`}function Le(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
  fn main([[builtin(local_invocation_id)]] localId : vec3<u32>, [[builtin(global_invocation_id)]] globalId : vec3<u32>)
`}function Sde(e,t,n,s=!1){let r=`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;`;if(s===!0){let h=YC(t.shape),f=`
      [[block]] struct Matrix0 {
        numbers: array<${o0(t.dtype,n.isVec4)}>;
      };
      [[block]] struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `;return[KC,f,r,ZC,h,n.getUserCode()].join(`
`)}let a=[],o="[[block]] struct Uniforms { NAN : f32; ";n.variableNames.forEach((h,f)=>{o+=`${h.charAt(0).toLowerCase()+h.slice(1)}Shape : ${pn(e[f].shape.length)}; `}),o+=`outShape : ${pn(t.shape.length)} ; `;let i=t.shape.length-1;o+=`
       outShapeStrides: ${pn(i)}; `,n.size!=null&&(o+="size : i32; "),o+="dispatchSize : vec3<u32>; ",n.uniforms&&(o+=n.uniforms),o+="};",a.push(o),a.push(`
    [[block]] struct Matrix0 {
        numbers: array<${o0(t.dtype,n.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),n.variableNames.forEach((h,f)=>{a.push(`
    [[block]] struct Matrix${1+f} {
      numbers: array<${o0(e[f].dtype,n.isVec4)}>;
    };
    [[group(0), binding(${1+f})]] var<storage, read> ${h} : Matrix${1+f};
    `)}),o!==""&&a.push(`
    [[group(0), binding(${1+n.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `),a.push(r);let[l,c]=Rde(t.shape,n.dispatchLayout),u=YC(t.shape),d=[KC,a.join(`
`),ZC,u,l,Cde(t.shape,t.dtype,n.isVec4)];if(c===t.shape.length){let h=e.map(f=>Tde(f,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);d.push(h)}return d.push(n.getUserCode()),d.join(`
`)}var KC=`
  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }

  fn isNanCustomVec4F32(val : vec4<f32>) -> vec4<f32> {
    var res = vec4<f32> (0.0);
    for (var i = 0u; i < 4u; i = i + 1u) {
      if (isNanCustom(val[i])) {
        res[i] = 1.0;
      } else {
        res[i] = 0.0;
      }
    }
    return res;
  }

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) &&
        all(coord < shape);
  }
  `,ZC=`
  fn getFlatIndex1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }

  fn getFlatIndex2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return i32(dot(vec2<f32>(coords), vec2<f32>(f32(shape.y), 1.0)));
  }

  fn getFlatIndex3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return i32(dot(vec3<f32>(coords), vec3<f32>(f32(shape.y) * f32(shape.z), f32(shape.z), 1.0)));
  }

  fn getFlatIndex4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return i32(dot(vec4<f32>(coords), vec4<f32>(
        f32(shape.y) * f32(shape.z) * f32(shape.w), f32(shape.z) * f32(shape.w), f32(shape.w), 1.0)));
  }

  // Only used when the y/z dimension of workgroup size is 1.
  fn getGlobalIndex(globalId : vec3<u32>, localId : vec3<u32>) -> i32 {
    if (uniforms.dispatchSize.y == 1u && uniforms.dispatchSize.z == 1u) {
      return i32(globalId.x);
    }
    let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
      localId.y * workGroupSizeX + localId.x;
    let workGroupID = (globalId - localId)/vec3<u32>(
      workGroupSizeX, workGroupSizeY, workGroupSizeZ);
    return i32((workGroupID.z * uniforms.dispatchSize.x * uniforms.dispatchSize.y +
      workGroupID.y * uniforms.dispatchSize.x + workGroupID.x) *
      (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
      localInvocationIndex);
  }
`;function Cde(e,t,n){let s=e.length,r=o0(t,n),a;if(n?a=`fn setOutputFlat(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${r}(value);
    }`:a=`fn setOutputFlat(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${r}(value);
    }`,s>=2){switch(s){case 2:a+=`
        fn getOutputFlatIndex(coords : vec2<i32>) -> i32 {
          return i32(dot(vec2<f32>(coords), vec2<f32>(f32(uniforms.outShapeStrides), 1.0)));
        }
        `;break;case 3:a+=`
        fn getOutputFlatIndex(coords : vec3<i32>) -> i32 {
          return i32(dot(vec3<f32>(coords), vec3<f32>(f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), 1.0)));
        }
        `;break;case 4:a+=`
        fn getOutputFlatIndex(coords : vec4<i32>) -> i32 {
          return i32(dot(vec4<f32>(coords), vec4<f32>(
            f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), f32(uniforms.outShapeStrides.z), 1.0)));
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${s}D shape`);break}let o=["d0","d1","d2","d3"].slice(0,s),i=pn(s);n?a+=`
      fn setOutput(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex / 4, value);
      }
      fn setOutputI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutput(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex, value);
      }
      fn setOutputI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex, value);
      }
    `}return a}function Tde(e,t,n,s){let r=Nde(e,n);return e.shape.length<=t.length&&(r+=Ede(e,t,n,s)),r}function Nde(e,t){let n=e.name,s=e.shape.length,r=pn(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3"].slice(0,s),i=o.map(u=>`${u} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}.numbers[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}.numbers[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,c=`${s}D`;return s===0&&(c="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function Ede(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"AtOutCoords",i=e.shape.length,l=t.length,c=pn(l);if(v.arraysEqual(e.shape,t)&&s)return n?`
        fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[globalIndex]);
        }

        fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
        return f32(${r}.numbers[globalIndex]);
      }

      fn ${o}ByCoords(coords : ${c}) -> f32 {
        return f32(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"}]);
      }
      `;let u=N.getBroadcastDims(e.shape,t),d=l-i,p="";if(i===0)return n?`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> f32{
        return get${a}();
      }
    `;l<2&&u.length>=1?p="coords = 0;":p=u.map(g=>`coords[${g+d}] = 0;`).join(`
`);let h="";if(l<2&&i>0)h="coords";else if(l>1){let g=pn(i),y=e.shape.map((A,x)=>`coords[${x+d}]`).join(", ");h=`${g}(${y})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        var coords = getOutputCoords(globalId, globalIndex);
        ${p}
        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];
      }

      fn ${o}ByCoords(coordsIn : ${c}) -> vec4<f32> {
        var coords = coordsIn;
        ${p}
        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
      var coords = getOutputCoords(globalId, globalIndex);
      ${p}
      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);
    }

    fn ${o}ByCoords(coordsIn : ${c}) -> f32 {
      var coords = coordsIn;
      ${p}
      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);
    }
  `}function Rde(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${pn(a)}{
      return getCoordsFromFlatIndex(i32(globalIndex));
    }
    `,a];let o="",i=[n,s,r],l=0;for(let p=0;p<i.length;p++){let h=i[p];if(h.length!==0)if(l+=h.length,h.length===1)o+=`let d${h[0]} = i32(globalId[${p}]);`;else{let f=Ide(h,"uniforms.outShape");o+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${p} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${p} - d${h[m]} * ${f[m]};`:o+=`index${p} = index${p} - d${h[m]} * ${f[m]};`}}let c=[];for(let p=0;p<l;p++)c.push(`d${p}`);let u=pn(l),d=`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${u} {
    ${o}
  `;return c.length===0?d+=`return ${u}(0); }`:d+=`return ${u}(${c.join(",")}); }`,[d,l]}function YC(e){let t=e.length;if(t<=1)return"fn getCoordsFromFlatIndex(index : i32) -> i32 { return index; }";let n=v.computeStrides(e),s=pn(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromFlatIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides[${i}]`,c=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`;return`${l}; ${c};`}).join("");return`
    fn getCoordsFromFlatIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var JC={};ze(JC,{ArrayBufferToTypedArray:()=>QC,GPUBytesPerElement:()=>Vx,computeDispatch:()=>Be,computeWorkGroupSizeForConv2d:()=>Lx,computeWorkGroupSizeForMatMul:()=>Bx,computeWorkPerThreadForConv2d:()=>Wx,flatDispatchLayout:()=>ot,isWebGPUSupported:()=>Ux,tilesFitEvenlyIntoShape:()=>Ia});var mc=65535,Nl=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function Ia(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]==0)}function Be(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(Nl(e.x.map(l=>t[l]))/(n[0]*s[0])),e.y?Math.ceil(Nl(e.y.map(l=>t[l]))/(n[1]*s[1])):1,e.z?Math.ceil(Nl(e.z.map(l=>t[l]))/(n[2]*s[2])):1];if(r<=mc&&a<=mc&&o<=mc)return[r,a,o];v.assert(r>mc&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r));return i>mc?(i=Math.ceil(Math.cbrt(r)),v.assert(i<=mc,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function Lx(e,t){let n=Nl(e.x.map(r=>t[r])),s=Nl(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function Bx(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function Wx(e,t){let n=Nl(e.x.map(r=>t[r])),s=Nl(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function ot(e){return{x:e.map((t,n)=>n)}}function Vx(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function QC(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string"){let n=new Int32Array(e),s=new ArrayBuffer(n.length),r=new Uint8Array(s);for(let a=0;a<n.length;a++)r[a]=n[a];return r}else throw new Error(`Unknown dtype ${t}`)}function Ux(){return!!navigator.gpu}var je;(function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"})(je||(je={}));var $de="return a + b;",Dde="return areal * breal - aimag * bimag;",_de="return areal * bimag + aimag * breal;",Fde="return a / b;",Pde="return a * b;",Ode="return (a - b) * (a - b);",Mde="return a - b;",zde="return f32(a == b);",Lde="return vec4<f32>(a == b);",Bde="return f32(a > b);",Wde="return vec4<f32>(a > b);",Vde="return f32(a >= b);",Ude="return vec4<f32>(a >= b);",Gde="return f32(a < b);",Hde="return vec4<f32>(a < b);",jde="return f32(a <= b);",qde="return vec4<f32>(a <= b);",Xde="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Kde=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Zde=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,e6=`
  if (isNaN.r > 0.) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g > 0.) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b > 0.) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a > 0.) {
    resultTemp.a = uniforms.NAN;
  }
  `,Yde=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Jde=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Qde="return f32(a != b);",epe="return vec4<f32>(a != b);",tpe=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,npe=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = vec4<f32>(a < vec4<f32>(0.0)) * vec4<f32>(floor(b) < b);
  ${e6}
  return resultTemp;
  `,spe="if (a < 0.0) { return b * a; }  return a;",rpe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function t6(e,t){let n=t?e6:Zde;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = min(vec4<f32>(isNanCustomVec4F32(a)) + vec4<f32>(isNanCustomVec4F32(b)), vec4<f32>(1.0));
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function Tp(e,t){switch(e){case je.MUL:return Pde;case je.ADD:return $de;case je.SUB:return Mde;case je.DIV:return Fde;case je.EQUAL:return t?Lde:zde;case je.GREATER:return t?Wde:Bde;case je.GREATER_EQUAL:return t?Ude:Vde;case je.LESS:return t?Hde:Gde;case je.LESS_EQUAL:return t?qde:jde;case je.LOGICAL_AND:return t?Kde:Xde;case je.NOT_EQUAL:return t?epe:Qde;case je.SQUARED_DIFFERENCE:return Ode;case je.INT_DIV:return t?Jde:Yde;case je.PRELU:return t?rpe:spe;case je.MAX:return t6("max",t);case je.MIN:return t6("min",t);case je.POW:return t?npe:tpe;case je.COMPLEX_MULTIPLY_REAL:return Dde;case je.COMPLEX_MULTIPLY_IMAG:return _de;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var Oe;(function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.PRELU=12]="PRELU",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.RSQRT=15]="RSQRT",e[e.SIN=16]="SIN",e[e.SINH=17]="SINH",e[e.SIGMOID=18]="SIGMOID",e[e.SQRT=19]="SQRT",e[e.SQUARE=20]="SQUARE",e[e.TANH=21]="TANH",e[e.TO_INT=22]="TO_INT"})(Oe||(Oe={}));var ape="return abs(a);",ope="return ceil(a);",ipe="return cos(a);",lpe=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,upe="return exp(a) - 1.0;",cpe="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",dpe=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,ppe="return exp(a);",hpe="return floor(a);",fpe="return a;",mpe=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,gpe="return f32(!(a >= 1.0));",ype="return -a;",Ape="return (a < 0.0) ? b * a : a;",xpe="return max(a, 0.0);",bpe="return clamp(a, 0.0, 6.0);",vpe="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",wpe=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNan(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,kpe="return 1.0/sqrt(a);",Ipe="return 1.0 / (1.0 + exp(-1.0 * a));",Spe="return sin(a);",Cpe=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Tpe="return sqrt(a);",Npe="return a * a;",Epe=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Rpe="return f32(i32((a)));";function gc(e,t){switch(e){case Oe.ABS:return ape;case Oe.COS:return ipe;case Oe.COSH:return lpe;case Oe.CEIL:return ope;case Oe.ELU:return t?dpe:cpe;case Oe.EXP:return ppe;case Oe.EXPM1:return upe;case Oe.FLOOR:return hpe;case Oe.LINEAR:return fpe;case Oe.LOG:return mpe;case Oe.LOGICAL_NOT:return gpe;case Oe.NEG:return ype;case Oe.PRELU:return Ape;case Oe.RELU:return t?wpe:xpe;case Oe.RELU6:return t?vpe:bpe;case Oe.RSQRT:return kpe;case Oe.SIGMOID:return Ipe;case Oe.SIN:return Spe;case Oe.SINH:return Cpe;case Oe.SQRT:return Tpe;case Oe.SQUARE:return Npe;case Oe.TANH:return Epe;case Oe.TO_INT:return Rpe;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function Zo(e,t=!1){if(e===null)return null;if(e==="linear")return gc(Oe.LINEAR);if(e==="relu")return gc(Oe.RELU,t);if(e==="elu")return gc(Oe.ELU,t);if(e==="relu6")return gc(Oe.RELU6,t);if(e==="prelu")return Tp(je.PRELU,t);if(e==="sigmoid")return gc(Oe.SIGMOID);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function n6(e,t){let n={RowPerThread:e[1],ColPerThread:e[0],TileAOuter:t[1]*e[1],TileBOuter:t[0]*e[0],TileInner:t[0]*e[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${n.TileInner/n.ColPerThread}>, ${n.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n.TileBOuter/n.ColPerThread}>, ${n.TileInner}>;

  let RowPerThread = ${n.RowPerThread};
  let ColPerThread = ${n.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${n.TileAOuter};
  let TileBOuter = ${n.TileBOuter};
  let TileInner = ${n.TileInner};

  ${Le()} {

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${n.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${t[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
}`}function $pe(e){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;
  let tileSize = ${e[0]*4};
  ${Le()} {
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var Dpe=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.isVec4=!0,this.vecSize=4,this.outputShape=t,this.workGroupSize=Bx(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.vecSize,a=r,o=[s,a],i=[a,r];return[Ia(o,this.aShape.slice(1)),Ia(i,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let o=Zo(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutput(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?n6([this.vecSize,this.workPerThread,1],this.workGroupSize):$pe(this.workGroupSize)}

    `}};function Gx(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${Le()} {
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function _pe(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Le()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var s6=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=s?e[1]:e[2];this.workGroupSize=Bx(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),v.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=a!=null,u=i!=null;c&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=u;let d=this.outputShape[2],p=this.transposeB?[this.outputShape[0],d,l]:[this.outputShape[0],l,d];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${s}_${r}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),v.assert(s%this.workGroupSize[0]==0&&s%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[Ia(r,this.aShape.slice(1)),Ia(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let o=Zo(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutput(batch, row, col, value);
      }
      ${this.outputShape[1]>1?Gx([this.workPerThread,this.workPerThread,1],this.workGroupSize):_pe(this.workGroupSize)}
    `}};function Fpe(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Le()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var Ppe=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],v.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=s!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let o=Zo(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutput(batch, row, col, value);
        }
      }
      ${Fpe(this.workGroupSize)}
    `}};function nt(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a),i=v.sizeFromShape(o);return v.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var Ope={kernelName:Di,backendName:"webgpu",kernelFunc:nt};function Hx({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),A=v.sizeFromShape(g),x=y===A||y===1||A===1;v.assert(c>=2&&u>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);let w=(y>A?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([h,f]);v.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[y,d,h]:[y,h,d],S=s?[A,f,p]:[A,p,f],E=nt({inputs:{x:e},backend:r,attrs:{shape:k}}),R=nt({inputs:{x:t},backend:r,attrs:{shape:S}}),P=[E,R],$=Math.max(y,A),D=d%4==0&&f%4==0&&!n&&!s&&f>=32,T;!n&&!s&&(h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||d>=2*h))?T=new Ppe(k,S,[$,h,f],a,l,o):D?T=new Dpe(k,[$,h,f],K().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,l,o):T=new s6(k,[$,h,f],K().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,s,a,l,o);let O=[E,R];a&&O.push(a),o&&O.push(o);let V=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[d]}],H=r.runWebGPUProgram(T,O,e.dtype,V),z=nt({inputs:{x:H},backend:r,attrs:{shape:w}});P.push(H);for(let X of P)r.disposeData(X.dataId);return z}function Mpe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return Hx({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var zpe={kernelName:So,backendName:"webgpu",kernelFunc:Mpe},r6=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Tp(this.op,!1)}
      }

      ${Le()} {
        ${He()}
        if(index < uniforms.size) {
          let areal = getARealAtOutCoordsByGlobalId(globalId, index);
          let aimag = getAImagAtOutCoordsByGlobalId(globalId, index);
          let breal = getBRealAtOutCoordsByGlobalId(globalId, index);
          let bimag = getBImagAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Lpe=class{constructor(e,t,n,s){this.variableNames=["A","B"];let r=256;this.workGroupSize=[r,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ot(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.size=v.sizeFromShape(this.outputShape),this.sizeFit=this.size%(this.workGroupSize[0]*this.workPerThread)==0,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}_${this.sizeFit}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAAtOutCoordsByCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBAtOutCoordsByCoords(coords);`,n=this.sizeFit?`let coords = getCoordsFromFlatIndex(flatIndex);

         ${t}
         setOutputFlat(flatIndex, binaryOperation(a, b));`:`if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            ${t}
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Tp(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Le()} {
          ${He()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;

            ${n}
          }
        }
        `}},Bpe=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.fitShape=this.size%this.workGroupSize[0]==0,this.shaderKey=`binaryVec4_${e}_${this.fitShape}`,this.size=v.sizeFromShape(this.outputShape)/this.workPerThread}getUserCode(){let e,n=`fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
          ${Tp(this.op,this.isVec4)}
        }`;return this.fitShape?e=`
      ${n}
      ${Le()} {
        ${He()}
        let a = vec4<f32>(A.numbers[index]);
        let b = vec4<f32>(B.numbers[index]);
        setOutputFlat(index, binaryOperation(a, b));
      }
    `:e=`
      ${n}
      ${Le()} {
        ${He()}
        if (index < uniforms.size) {
          let a = vec4<f32>(A.numbers[index]);
          let b = vec4<f32>(B.numbers[index]);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
    `,e}},a6=class{constructor(e,t,n){this.variableNames=["A","B"];let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=ot(this.outputShape),this.size=v.sizeFromShape(this.outputShape),this.sizeFit=this.size%s==0,this.shapesFit=v.arraysEqual(t,n)&&this.sizeFit,this.workPerThread=this.sizeFit||this.shapesFit?1:2,this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey=`binary_${e}_${this.sizeFit}_${this.shapesFit}`,this.op=e}getUserCode(){let e,n=`          fn binaryOperation(a : f32, b : f32) -> f32 {
      ${Tp(this.op,!1)}
    }`;return this.shapesFit?e=`
          ${n}
          ${Le()} {
            ${He()}

            let a = f32(A[index]);
            let b = f32(B[index]);
            setOutputFlat(index, binaryOperation(a, b));
          }
        `:this.sizeFit?e=`
      ${n}
      ${Le()} {
        ${He()}

        let coords = getCoordsFromFlatIndex(index);

        let a = getAAtOutCoordsByCoords(coords);
        let b = getBAtOutCoordsByCoords(coords);
        setOutputFlat(index, binaryOperation(a, b));
      }
      `:e=`
      ${n}
      ${Le()} {
        ${He()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1 ) {
          let flatIndex = index * ${this.workPerThread} + i;

          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            let a = getAAtOutCoordsByCoords(coords);
            let b = getBAtOutCoordsByCoords(coords);
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }
        }
      }
      `,e}};function o6(e,t,n){if(v.arraysEqual(t,n)&&v.sizeFromShape(t)%4==0)return new Bpe(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new Lpe(e,t,n,a):new a6(e,t,n)}function tr(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Wpe={kernelName:so,backendName:"webgpu",kernelFunc:tr};function yc(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=tr({inputs:{x:s},backend:n}),l=tr({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var Vpe={kernelName:Kc,backendName:"webgpu",kernelFunc:yc},i0=class{constructor(e,t){this.variableNames=["A"];let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.size=v.sizeFromShape(this.outputShape),this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${gc(this.op,!1)}
      }
      ${Le()} {
        ${He()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, unaryOperation(a));
        }
      }
      `}};function _n({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let c=o.tensorMap.get(a.dataId),u=t(c.values,i);return o.makeTensorInfo(a.shape,i,u)}let l=new i0(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function Jn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let d=l.tensorMap.get(o.dataId),p=l.tensorMap.get(i.dataId),h,f;if(e!==je.MUL)[h,f]=[[d.complexTensorInfos.real,p.complexTensorInfos.real],[d.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(g=>{let[y,A]=g,x={dataId:y.dataId,dtype:y.dtype,shape:o.shape},b={dataId:A.dataId,dtype:A.dtype,shape:i.shape},w=o6(e,o.shape,i.shape);return l.runWebGPUProgram(w,[x,b],Mn(y.dtype,A.dtype))});else{let g=new r6(je.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),y=new r6(je.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),A=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape}];h=l.runWebGPUProgram(g,A,"float32"),f=l.runWebGPUProgram(y,A,"float32")}let m=yc({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let c=s||Mn(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let d=l.tensorMap.get(o.dataId).values,p=l.tensorMap.get(i.dataId).values,h=o.dtype==="string"?N.fromUint8ToStringArray(d):d,f=o.dtype==="string"?N.fromUint8ToStringArray(p):p,[m,g]=t(o.shape,i.shape,h,f,c);return l.makeTensorInfo(g,c,m)}let u=o6(e,o.shape,i.shape);return l.runWebGPUProgram(u,[o,i],c)}}var i6={};ze(i6,{addImpl:()=>u6,bincountImpl:()=>jpe,bincountReduceImpl:()=>qpe,ceilImpl:()=>d6,concatImpl:()=>Xpe,equalImpl:()=>p6,expImpl:()=>h6,expm1Impl:()=>f6,floorImpl:()=>m6,gatherNdImpl:()=>Kpe,gatherV2Impl:()=>Zpe,greaterEqualImpl:()=>y6,greaterImpl:()=>g6,lessEqualImpl:()=>x6,lessImpl:()=>A6,linSpaceImpl:()=>Ype,logImpl:()=>b6,maxImpl:()=>Jpe,maximumImpl:()=>v6,minimumImpl:()=>w6,multiplyImpl:()=>Zx,negImpl:()=>ehe,notEqualImpl:()=>k6,prodImpl:()=>nhe,rangeImpl:()=>she,rsqrtImpl:()=>I6,sigmoidImpl:()=>rhe,simpleAbsImpl:()=>Upe,sliceImpl:()=>ahe,sparseFillEmptyRowsImpl:()=>ohe,sparseReshapeImpl:()=>ihe,sparseSegmentReductionImpl:()=>lhe,sqrtImpl:()=>uhe,squaredDifferenceImpl:()=>S6,stridedSliceImpl:()=>che,stringNGramsImpl:()=>phe,stringSplitImpl:()=>fhe,stringToHashBucketFastImpl:()=>mhe,subImpl:()=>C6,tileImpl:()=>yhe,topKImpl:()=>Ahe,transposeImpl:()=>the,uniqueImpl:()=>xhe});function jx(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}function Upe(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function Bs(e){return(t,n,s,r,a)=>{let o=N.assertAndGetBroadcastShape(t,n),i=o.length,l=v.computeStrides(o),c=v.sizeFromShape(o),u=v.getTypedArrayFromDType(a,c),d=t.length,p=n.length,h=v.computeStrides(t),f=v.computeStrides(n),m=N.getBroadcastDims(t,o),g=N.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(s[y%s.length],r[y%r.length]);else for(let y=0;y<u.length;++y){let A=v.indexToLoc(y,i,l),x=A.slice(-d);m.forEach(S=>x[S]=0);let b=v.locToIndex(x,d,h),w=A.slice(-p);g.forEach(S=>w[S]=0);let k=v.locToIndex(w,p,f);u[y]=e(s[b],r[k])}return[u,o]}}function qx(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}function Xx(e,t,n="float32"){if(n==="complex64"){let r=Xx(e,t,"float32"),a=Xx(e,t,"float32");return qx({inputs:{real:r,imag:a},backend:e})}let s=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function l6(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Gpe(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}function l0(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return l6({inputs:{x:r},backend:n});let o=Xx(n,r.shape,r.dtype),i=l0({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=qx({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Gpe({inputs:{input:r},backend:n}),i=l0({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=l6({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=v.toTypedArray([0],r.dtype),[l,c]=Bs((u,d)=>u!==d?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}function nr(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;jx([o,i],e);let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=o.dtype==="string"?N.fromUint8ToStringArray(c):c,p=o.dtype==="string"?N.fromUint8ToStringArray(u):u,h=s||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let c=l0({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,h=l.data.get(d.dataId).values,f=l.data.get(p.dataId).values,m=l0({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,A=g.complexTensorInfos.imag,x=l.data.get(y.dataId).values,b=l.data.get(A.dataId).values,[w,k,S]=n(o.shape,i.shape,h,f,x,b),E=l.makeTensorInfo(S,"float32",w),R=l.makeTensorInfo(S,"float32",k),P=qx({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),P}else{let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=s||o.dtype,[p,h]=t(o.shape,i.shape,c,u,d);return l.makeTensorInfo(h,d,p)}}}function Kx(e){return(t,n,s,r,a,o)=>{let i=N.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(i),c=i.length,u=v.computeStrides(i),d=v.getTypedArrayFromDType("float32",l),p=v.getTypedArrayFromDType("float32",l),h=N.getBroadcastDims(t,i),f=N.getBroadcastDims(n,i),m=N.mergeRealAndImagArrays(s,r),g=N.mergeRealAndImagArrays(a,o),y=t.length,A=v.computeStrides(t),x=n.length,b=v.computeStrides(n);if(h.length+f.length===0)for(let w=0;w<d.length;w++){let k=w%m.length,S=w%g.length,E=e(m[k*2],m[k*2+1],g[S*2],g[S*2+1]);d[w]=E.real,p[w]=E.imag}else for(let w=0;w<d.length;w++){let k=v.indexToLoc(w,c,u),S=k.slice(-y);h.forEach(D=>S[D]=0);let E=v.locToIndex(S,y,A),R=k.slice(-x);f.forEach(D=>R[D]=0);let P=v.locToIndex(R,x,b),$=e(m[E*2],m[E*2+1],g[P*2],g[P*2+1]);d[w]=$.real,p[w]=$.imag}return[d,p,i]}}var u6=Bs((e,t)=>e+t),Hpe=Kx((e,t,n,s)=>({real:e+n,imag:t+s})),K2e=nr(Er,u6,Hpe);function jpe(e,t,n,s,r){let a=v.sizeFromShape(s),o=v.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function qpe(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=Fe([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let c=e.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?o.set(1,i,c):t.size>0?o.set(o.get(i,c)+t.get(i,l),i,c):o.set(o.get(i,c)+1,i,c))}return o}function Yo(e){return(t,n,s)=>{let r=v.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function c6(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(jx(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=v.sizeFromShape(o.shape),u=n||o.dtype,d=v.getArrayFromDType(u,c);for(let p=0;p<c;++p)d[p]=t(l[p],r);return i.makeTensorInfo(o.shape,u,d)}}function Ac(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(jx(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=n||o.dtype,u=t(l,c,r);return i.makeTensorInfo(o.shape,c,u)}}var d6=Yo(e=>Math.ceil(e)),Z2e=Ac(Zr,d6);function Xpe(e,t,n,s){let r=v.getArrayFromDType(n,v.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=v.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?N.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let c=0;c<o.shape[0];++c){let u=c*t[1]+a;for(let d=0;d<o.shape[1];++d)r[u+d]=i[l++]}a+=o.shape[1]})}return r}var p6=Bs((e,t)=>e===t?1:0),Y2e=nr(Ja,p6,null,"bool"),h6=Yo(e=>Math.exp(e)),J2e=Ac(Jr,h6),f6=Yo(e=>Math.expm1(e)),Q2e=Ac(Qa,f6),m6=Yo(e=>Math.floor(e)),e1e=Ac(Qr,m6);function Kpe(e,t,n,s,r,a,o,i,l){let c=Fe([s,a],n);for(let u=0;u<s;u++){let d=[],p=0;for(let h=0;h<r;h++){let f=e[u*r+h];p+=f*o[h],d.push(f)}if(p<0||p>=l/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<a;h++)c.values[u*a+h]=t.get(...t.indexToLoc(p*a+h))}return c}function Zpe(e,t,n){let s=Fe(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],c=t.locToIndex([i,l]);o[2]=t.values[c];let u=e.locToIndex(o);s.values[r]=e.values[u]}return s}var g6=Bs((e,t)=>e>t?1:0),t1e=nr(no,g6,null,"bool"),y6=Bs((e,t)=>e>=t?1:0),n1e=nr(ea,y6,null,"bool"),A6=Bs((e,t)=>e<t?1:0),s1e=nr(ro,A6,null,"bool"),x6=Bs((e,t)=>e<=t?1:0),r1e=nr(ao,x6,null,"bool");function Ype(e,t,n){let s=(t-e)/(n-1),r=v.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var b6=Yo(e=>Math.log(e)),a1e=Ac(ta,b6);function Jpe(e,t,n,s){let r=v.getTypedArrayFromDType(s,v.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let c=e[o+l];(Number.isNaN(c)||c>i)&&(i=c)}r[a]=i}return r}var v6=Bs((e,t)=>Math.max(e,t)),o1e=nr(na,v6),w6=Bs((e,t)=>Math.min(e,t)),i1e=nr(sa,w6),Zx=Bs((e,t)=>e*t),Qpe=Kx((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),l1e=nr(ra,Zx,Qpe);function ehe(e,t,n){let s=v.createScalarValue(-1,n);return Zx([],t,s,e,n)}var k6=Bs((e,t)=>e!==t?1:0),u1e=nr(po,k6,null,"bool");function the(e,t,n,s,r){let a=t.length,o=v.sizeFromShape(t),i=v.computeStrides(t),l=v.computeStrides(r),c=v.getTypedArrayFromDType(n,v.sizeFromShape(r));for(let u=0;u<o;++u){let d=v.indexToLoc(u,a,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[s[f]];let h=v.locToIndex(p,a,l);c[h]=e[u]}return c}function nhe(e,t,n,s){let[r,a]=N.computeOutAndReduceShapes(e,s),o=Mn(t,"int32"),i=v.makeZerosTypedArray(v.sizeFromShape(r),o),l=v.sizeFromShape(a);for(let c=0;c<i.length;++c){let u=c*l,d=1;for(let p=0;p<l;++p)d*=n[u+p];i[c]=d}return{outVals:i,outShape:r,outDtype:o}}function she(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return v.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var I6=Yo(e=>1/Math.sqrt(e)),c1e=Ac(aa,I6),rhe=Yo(e=>1/(1+Math.exp(-e))),d1e=c6(oa,e=>1/(1+Math.exp(-e)));function ahe(e,t,n,s,r){let a=Qt.isSliceContinous(s,t,n),o=v.sizeFromShape(n),i=v.computeStrides(s);if(a){let d=Qt.computeFlatOffset(t,i);return r==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let l=r==="string"?N.fromUint8ToStringArray(e):e,c=Fe(s,r,l),u=Fe(n,r);for(let d=0;d<u.size;++d){let p=u.indexToLoc(d),h=p.map((f,m)=>f+t[m]);u.set(c.get(...h),...p)}return r==="string"?N.fromStringArrayToUint8(u.values):u.values}function ohe(e,t,n,s,r,a,o){let i=t[0],l=a[0],c=new Array(l),u=new Array(i),d=t[1];if(l===0){if(i!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${i}`);let g=v.getArrayFromDType(n,0),y=v.getArrayFromDType(r,0);return[g,[0,d],y,c,u]}let p=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let y=e[g*d];if(y<0)throw new Error(`indices(${g}, 0) is invalid: ${y} < 0`);if(y>=l)throw new Error(`indices(${g}, 0) is invalid: ${y} >= ${l}`);++f[y],p=p&&y>=h,h=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,y=s;for(let A=0;A<i;++A)u[A]=A;return[g,[i,d],y,c,u]}else{let g=f[l-1],y=v.getArrayFromDType(n,g*d),A=v.getArrayFromDType(r,g),x=new Array(l).fill(0);for(let b=0;b<i;++b){let w=e[b*d],k=x[w],S=(w===0?0:f[w-1])+k;x[w]++;for(let E=0;E<d;++E)y[S*d+E]=e[b*d+E];A[S]=s[b],u[b]=S}for(let b=0;b<l;++b)if(x[b]===0){let k=b===0?0:f[b-1];y[k*d+0]=b;for(let S=1;S<d;++S)y[k*d+S]=0;A[k]=o}return[y,[g,d],A,c,u]}}function ihe(e,t,n,s,r){let a=v.sizeFromShape(s),o=t[0],i=r.length,l=[],c=1,u=-1;for(let g=0;g<i;++g){let y=r[g];if(y===-1){if(u!==-1)throw new Error(`only one output dimension may be -1, not both ${u} and ${g}`);u=g,l.push(1)}else{if(y<0)throw new Error(`size ${g} must be non-negative, not ${y}`);c*=y,l.push(y)}}if(u!==-1){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let g=Math.trunc(a/c);if(c*g!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}
          dense values, but the requested shape requires a multiple of ${c}. inputShape=${s} outputShape= ${l}`);l[u]=g}let d=v.sizeFromShape(l);if(d!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${d}. inputShape=${s} outputShape=${l}`);let p=s.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=v.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let y=0;for(let A=0;A<p;++A)y+=e[g*p+A]*h[A];for(let A=0;A<i;++A)m[g*i+A]=Math.trunc(y/f[A]),y%=f[A]}return[m,[o,i],l]}function lhe(e,t,n,s,r,a=!1,o=0){let i=s.length;if(i!==r.length)throw new Error("segmentIds and indices should have same size.");let l=[t[0],e.length/t[0]],c=l[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");let p=t.slice();p[0]=d;let h=p.reduce((x,b)=>x*b,1),f=v.getArrayFromDType(n,h);if(i===0)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,y=0,A=r[m];for(;;){let x=0;if(g<i){if(x=r[g],A===x){++g;continue}if(A>=x)throw new Error("segment ids are not increasing")}if(A<0||A>=d)throw new Error(`Segment id ${A} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);A>y&&f.fill(o,y*c,A*c);for(let b=m;b<g;++b){let w=s[b];if(w<0||w>=l[0])throw new Error(`Bad: indices[${b}] == ${s[b]} out of range [0, ${l[0]})`);for(let k=0;k<c;k++)f[A*c+k]+=e[w*c+k]}if(a)for(let b=0;b<c;b++)f[A*c+b]/=g-m;if(m=g,++g,y=A+1,A=x,g>i)break}return y<d&&f.fill(o,y*c,d*c),[f,p]}var uhe=Yo(e=>Math.sqrt(e)),p1e=c6(ia,e=>Math.sqrt(e)),S6=Bs((e,t)=>{let n=e-t;return n*n}),h1e=nr(la,S6);function che(e,t,n,s){let r=Fe(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var dhe=class{constructor(e,t,n,s,r,a){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),u=a-(l+c),d=t+(l>0?0:o-i),p=0;p+=l*this.leftPad.length;for(let y=0;y<u;++y)p+=e[d+y].length;p+=c*this.rightPad.length,p+=(l+c+u-1)*this.separator.length,n[s+o]=new Uint8Array(p);let f=n[s+o],m=0,g=y=>y.forEach(A=>f[m++]=A);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<u-1;++y)g(e[d+y]),g(this.separator);if(u>0){g(e[d+u-1]);for(let y=0;y<c;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<c-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let c=t[l]>=i;if(c=c&&t[l]<=n,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=v.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],c=0;this.nGramWidths.forEach(u=>{c+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&c===0&&(c=1),a[i]=a[i-1]+c}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],c=a[i];if(this.nGramWidths.forEach(u=>{let d=t[i+1]-t[i],p=this.getNumNGrams(d,u);this.createNGrams(e,l,o,c,p,u),c+=p}),this.preserveShort&&c===a[i]){let u=t[i+1]-t[i];if(u===0)continue;let d=u+2*this.padWidth,p=1;this.createNGrams(e,l,o,c,p,d)}}return[o,a]}};function phe(e,t,n,s,r,a,o,i){return new dhe(n,s,r,a,o,i).compute(e,t)}function hhe(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function fhe(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let p=0;p<s;++p){let h=r.length;hhe(e[p],t,n,r);let f=r.length-h;i[p]=f,a+=f,o=Math.max(o,f)}let l=v.getArrayFromDType("int32",a*2),c=new Array(a),u=[s,o],d=0;for(let p=0;p<s;++p)for(let h=0;h<i[p];++h)l[d*2]=p,l[d*2+1]=h,c[d]=r[d],++d;return[l,c,u]}function mhe(e,t){let n=v.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=v.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var C6=Bs((e,t)=>e-t),ghe=Kx((e,t,n,s)=>({real:e-n,imag:t-s})),f1e=nr(ua,C6,ghe);function yhe(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=Fe(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var Np=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function T6(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,c=Math.log(i),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(i-u)/i)*Math.sign(l-i/2),p=Math.max(n,Math.floor(t-l*u/i+d)),h=Math.min(s,Math.floor(t+(i-l)*u/i+d));T6(e,t,p,h)}let r=e[t],a=n,o=s;for(v.swap(e,n,t),Np(e[s],r)>0&&v.swap(e,n,s);a<o;){for(v.swap(e,a,o),a++,o--;Np(e[a],r)<0;)a=a+1;for(;Np(e[o],r)>0;)o=o-1}Np(e[n],r)===0?v.swap(e,n,o):(o=o+1,v.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function Ahe(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=v.getTypedArrayFromDType(n,o*s),c=v.getTypedArrayFromDType("int32",o*s);for(let d=0;d<o;d++){let p=d*i,h=e.subarray(p,p+i),f=new Array(h.length);h.forEach((A,x)=>f[x]={value:A,index:x}),s<f.length&&(T6(f,s),f=f.slice(0,s)),r&&f.sort(Np);let m=d*s,g=l.subarray(m,m+s),y=c.subarray(m,m+s);for(let A=0;A<s;A++)g[A]=f[A].value,y[A]=f[A].index}let u=t.slice();return u[u.length-1]=s,[Fe(u,n,l),Fe(u,"int32",c)]}function xhe(e,t,n,s){let r=v.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new jt(a,s,e),c=[],u=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let A=0;A<a[2];A++)g.push(l.get(y,f,A));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let p=new jt(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)p.set(l.get(g,f,y),g,m,y)});let h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:i}}var{addImpl:bhe,ceilImpl:vhe,concatImpl:whe,equalImpl:khe,expImpl:Ihe,expm1Impl:She,floorImpl:Che,gatherNdImpl:The,gatherV2Impl:Nhe,greaterEqualImpl:Ehe,greaterImpl:Rhe,lessEqualImpl:$he,lessImpl:Dhe,logImpl:_he,maxImpl:Fhe,maximumImpl:Phe,minimumImpl:Ohe,multiplyImpl:Mhe,negImpl:zhe,notEqualImpl:Lhe,prodImpl:Bhe,rangeImpl:Whe,rsqrtImpl:Vhe,simpleAbsImpl:Uhe,sliceImpl:Ghe,stridedSliceImpl:Hhe,stringNGramsImpl:jhe,subImpl:qhe,tileImpl:Xhe,transposeImpl:Khe,uniqueImpl:m1e}=i6,Zhe=_n({opType:Oe.ABS,cpuKernelImpl:Uhe}),Yhe={kernelName:hi,backendName:"webgpu",kernelFunc:Zhe},Jhe=Jn({opSnippet:je.ADD,cpuKernelImpl:bhe,supportsComplex:!0}),Qhe={kernelName:Er,backendName:"webgpu",kernelFunc:Jhe},efe=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}AtOutCoordsByCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Le()} {
        ${He()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputFlat(flatIndex, ${t});
          }
        }
      }
    `}};function tfe(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return tr({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>Mn(i,l)),a=s.map(i=>i.shape),o=new efe(a);return n.runWebGPUProgram(o,s,r)}var nfe={kernelName:Ba,backendName:"webgpu",kernelFunc:tfe},N6=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="axis : i32;";let s=[t];N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r,a]=N.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r;let o=v.sizeFromShape(a);this.reductionFactor=2;let i=256,l=Math.min(Math.ceil(o/this.reductionFactor),i);this.workGroupSize=[l,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((c,u)=>u)},this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=this.workGroupSize[0]>1,t=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,n=`
      xBestIndices[localId.x] = bestIndex;
      xBestValues[localId.x] = bestValue;

      for(var currentSize = WorkGroupSize; currentSize > 1; currentSize = DIV_CEIL(currentSize, ${this.reductionFactor})) {
        workgroupBarrier();

        for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
          let i = i32(localId.x) * ${this.reductionFactor} + w;
          if (i < currentSize) {
            let candidateIndex = xBestIndices[i];
            let candidate = xBestValues[i];
            if(candidate ${this.op} bestValue && !isNanCustom(candidate)) {
              bestValue = candidate;
              bestIndex = candidateIndex;
            }
          }
        }

        xBestIndices[localId.x] = bestIndex;
        xBestValues[localId.x] = bestValue;
      }

      if (localId.x == 0u) {
        setOutputFlatI32(flatOutputIndex, i32(bestIndex));
      }
    `,s=pn(this.outputShape.length),r=(i,l)=>this.outputShape.length===1?i:`${i}[${l}]`,a=i=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${i}]`;return`
      fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
      }

      let WorkGroupSize = ${this.workGroupSize[0]};

      ${e?t:""}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(globalId : vec3<u32>, globalIndex : i32) -> vec2<i32>{
        let outputCoords : ${s} = getOutputCoords(globalId, globalIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${a(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${r("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Le()} {
        ${He()}
        let coordInfo = getInputCoordInfo(globalId, index);

        var bestIndex = 0;
        var bestValue = x.numbers[getInputIndex(coordInfo, bestIndex)];

        let Length = ${a("uniforms.axis")};
        let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);

        for (var w = 0; w < WorkPerThread; w = w + 1) {
          let i = i32(globalId.x) * WorkPerThread + w;
          if (i < Length) {
            let candidate = x.numbers[getInputIndex(coordInfo, i)];
            if (candidate ${this.op} bestValue && !isNanCustom(f32(candidate))) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
        }

        let flatOutputIndex = i32(globalId.y);
        ${e?n:"setOutputFlatI32(flatOutputIndex, bestIndex);"}
      }
    `}},sfe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Le()} {
        ${He()}
        let workGroupID = (globalId - localId)/vec3<u32>(${this.workGroupSize[0]}u, ${this.workGroupSize[1]}u, ${this.workGroupSize[2]}u);
        var x = i32(workGroupID.x) * TILE_DIM + i32(localId.x);
        var y = i32(workGroupID.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workGroupID.y) * TILE_DIM + i32(localId.x);
        y = i32(workGroupID.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputFlat((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},rfe=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=pn(this.outputShape.length),t=afe(this.newDim);return`
      ${Le()} {
        ${He()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromFlatIndex(flatIndex);
            setOutputFlat(flatIndex, A.numbers[getFlatIndex${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function afe(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC[${s}]`;return n.join()}function El(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];if(n.shouldExecuteOnCPU([r])){let d=o.tensorMap.get(r.dataId).values,p=Khe(d,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,p)}if(r.shape.length===2&&v.arraysEqual(a,[1,0])){let u=new sfe(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}let c=new rfe(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}var ofe={kernelName:ko,backendName:"webgpu",kernelFunc:El};function ife(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=El({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=new N6(l.shape,o[0],"max"),d=[{type:"int32",data:[o[0]]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var lfe={kernelName:Wa,backendName:"webgpu",kernelFunc:ife};function ufe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=El({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=new N6(l.shape,o[0],"min"),d=[{type:"int32",data:[o[0]]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var cfe={kernelName:Ql,backendName:"webgpu",kernelFunc:ufe},E6=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Le()} {
        ${He()}
        let coords = getOutputCoords(globalId, index);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutput(batch, coords[1], coords[2], coords[3], ${t});
        }
      }
    `}},R6=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Le()} {
        ${He()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let d = coords[3];

        if (all(coords < uniforms.outShape)) {
          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutput(batch, coords[1], coords[2], d, value);
        }
      }
    `}};function dfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return tr({inputs:{x:r},backend:n});let d,p=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return u.filterHeight===1&&u.filterWidth===1?d=new R6(u):(d=new E6(u,"avg"),p.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[r],r.dtype,p)}var pfe={kernelName:Va,backendName:"webgpu",kernelFunc:dfe};function hfe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Hx({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var ffe={kernelName:Ua,backendName:"webgpu",kernelFunc:hfe},mfe=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.outputShape=t,this.rank=t.length,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${pn(e.length)}; `,this.shaderKey="slice",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=pn(this.rank),t=gfe(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${Yx[a]} = uniforms.start[${a}] + coords.${Yx[a]};`),`
      ${Le()} {
        ${He()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getOutputCoords(globalId, index);
          ${n.join(`
`)}
          setOutputFlat(index, getSource(${t}));
        }
      }
    `}},Yx=["x","y","z","w","u","v"];function gfe(e){if(e===1)return"sourceLoc";if(e<=6)return Yx.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function Ep(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Qt.parseSliceParams(r,a,o);if(Qt.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.tensorMap.get(r.dataId),p=Ghe(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}if(v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let c=new mfe(i,l),u=[{type:"int32",data:i}];return n.runWebGPUProgram(c,[r],r.dtype,u)}var yfe={kernelName:Mi,backendName:"webgpu",kernelFunc:Ep},Afe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((A,x)=>A*x),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=nt({inputs:{x:r},backend:n,attrs:{shape:l}}),m=El({inputs:{x:f},backend:n,attrs:{perm:c}}),g=nt({inputs:{x:m},backend:n,attrs:{shape:u}}),y=Ep({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(A=>n.disposeData(A.dataId)),y},xfe={kernelName:fi,backendName:"webgpu",kernelFunc:Afe},$6=Jn({opSnippet:je.NOT_EQUAL,dtype:"bool",cpuKernelImpl:Lhe}),bfe={kernelName:po,backendName:"webgpu",kernelFunc:$6};function Rp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return tr({inputs:{x:r.complexTensorInfos.real},backend:n})}var vfe={kernelName:rd,backendName:"webgpu",kernelFunc:Rp};function wfe(e,t){let n=new i0(e.shape,Oe.TO_INT),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Jx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return tr({inputs:{x:r},backend:n});let o=Kt(r.shape),i=Jx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=yc({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=Rp({inputs:{input:r},backend:n}),i=Jx({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=tr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return wfe(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=$6({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var kfe={kernelName:Ga,backendName:"webgpu",kernelFunc:Jx},Ife=_n({opType:Oe.CEIL,cpuKernelImpl:vhe}),Sfe={kernelName:Zr,backendName:"webgpu",kernelFunc:Ife},Cfe=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4",this.size=v.sizeFromShape(this.outputShape)/4}getUserCode(){return`
      ${Le()} {
        ${He()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputFlat(index, clampedValue);
        }
      }
    `}},Tfe=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${Le()} {
        ${He()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          if (isNanCustom(value)) {
            setOutputFlat(index, value);
            return;
          }
          setOutputFlat(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Nfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return v.sizeFromShape(r.shape)%4==0?i=new Cfe(r.shape):i=new Tfe(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var Efe={kernelName:Yr,backendName:"webgpu",kernelFunc:Nfe},Rfe=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shapes=e,this.shaderKey=`concat${e}`,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=new Array(this.shapes.length-1),t=[];if(e.length>0){e[0]=this.shapes[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+this.shapes[a][1];t.push(`if (yC < ${e[0]}){ setOutput(coords.x, coords.y, getT0(yR, yC)); }`);for(let a=1;a<e.length;a++){let o=e[a-1];t.push(`elseif (yC < ${e[a]}){ setOutput(coords.x, coords.y, getT${a}(yR, yC - ${o})); }`)}let s=e.length,r=e[e.length-1];t.push(`else { setOutput(coords.x, coords.y, getT${s}(yR, yC - ${r})); }`)}else t.push("setOutput(coords.x, coords.y, getT0(yR, yC));");return`
      ${Le()} {
        ${He()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function u0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return tr({inputs:{x:r.complexTensorInfos.imag},backend:n})}var $fe={kernelName:ed,backendName:"webgpu",kernelFunc:u0};function Qx(e,t,n){let s=e[0].dtype;if(s==="complex64"){let u=e.map(m=>Rp({inputs:{input:m},backend:n})),d=e.map(m=>u0({inputs:{input:m},backend:n})),p=Qx(u,t,n),h=Qx(d,t,n),f=yc({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeData(m.dataId)),d.forEach(m=>n.disposeData(m.dataId)),n.disposeData(p.dataId),n.disposeData(h.dataId),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let u=e.map(y=>{let A=v.sizeFromShape(y.shape.slice(t));return nt({inputs:{x:y},backend:n,attrs:{shape:[-1,A]}})}),d=u.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),p=N.computeOutShape(u.map(y=>y.shape),1),h=u[0].shape[0]===1,f=whe(d,p,s,h),m=N.computeOutShape(e.map(y=>y.shape),t),g=n.makeTensorInfo(m,s,f);return u.forEach(y=>n.disposeData(y.dataId)),g}let{tensors2D:a,outShape:o}=Dfe(e,t,n),i=new Rfe(a.map(u=>u.shape)),l=n.runWebGPUProgram(i,a,a[0].dtype);a.forEach(u=>n.disposeData(u.dataId));let c=nt({inputs:{x:l},backend:n,attrs:{shape:o}});return n.disposeData(l.dataId),c}function Dfe(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>nt({inputs:{x:a},backend:n,attrs:{shape:[v.sizeFromShape(a.shape.slice(0,t)),v.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function D6(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return tr({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),Qx(i,a,n)}var _fe={kernelName:mi,backendName:"webgpu",kernelFunc:D6},Ffe=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Le()} {
      ${He()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromFlatIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputFlat(flatIndex, value);
        }
      }
    }
  `}};function _6({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=n.dataFormat==="channelsLast",u=!1,d=!1,p=c?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],h=nt({inputs:{x:e},backend:s,attrs:{shape:[1,p,n.inChannels]}}),f=nt({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),m=Hx({a:h,b:f,transposeA:u,transposeB:d,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=nt({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});return s.disposeData(h.dataId),s.disposeData(f.dataId),s.disposeData(m.dataId),g}function Pfe({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,strideWidth:d,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:A}=n,x=A==="channelsLast",b=l*c*u,w=m*f,k=[w,b],S=!1,E=!1,R=[],P=nt({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),$=nt({inputs:{x:t},backend:s,attrs:{shape:[1,b,-1]}});R.push(P),R.push($);let D=new Ffe(k,x),T=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[d,p]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[u*l]},{type:"int32",data:[u]}],O=s.runWebGPUProgram(D,[P],P.dtype,T),V=nt({inputs:{x:O},backend:s,attrs:{shape:[1,k[0],k[1]]}});R.push(O),R.push(V);let H=[1,k[0],k[1]],z=new s6(H,[1,w,n.outChannels],K().get("WEBGPU_MATMUL_WORK_PER_THREAD"),S,E),X=H[1],ee=H[2],Y=n.outChannels,se=[{type:"int32",data:[X]},{type:"int32",data:[Y]},{type:"int32",data:[ee]}],ne=s.runWebGPUProgram(z,[V,$],V.dtype,se),J=x?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],te=nt({inputs:{x:ne},backend:s,attrs:{shape:J}});R.push(ne);for(let ce of R)s.disposeData(ce.dataId);return te}var F6=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.isVec4=!0,this.outputShape=e.outShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let a=[4,4,1];this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,a),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(a),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],s=n,r=[t,s],a=[s,n],o=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Ia(r,[o,l]),Ia(a,[l,i])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getFlatIndex4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } elseif (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } elseif (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=n6([4,4,1],this.workGroupSize),r=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getFlatIndex4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } elseif (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${r}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${r}
         }
         return vec4<f32>(0.0);
        `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,i="",l="";if(this.activation){let d=Zo(this.activation,this.isVec4);if(this.hasPreluActivationWeights)i=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${d}
        }`;else{if(this.hasLeakyreluAlpha)throw i=`fn activation(a: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaAtOutCoords();
          ${d}
        }`,new Error("Leakyrelu is not supported.");i=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${d}
        }`}l="value = activation(value, outCoord);"}let c=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
        ${i}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${o}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${c}
            ${l}
            setOutput(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}},P6=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Lx(this.dispatchLayout,this.outputShape),this.elementsPerThread=Wx(this.dispatchLayout,this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;v.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Ia(s,[a,i]),Ia(r,[i,o])]}getUserCode(){let e=Gx(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,s=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,r="",a="";if(this.activation){let l=Zo(this.activation,!1);this.hasPreluActivationWeights?r=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${l}
                }`:r=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,a="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
    ${r}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${s}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${o}
      ${a}
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},O6=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=Zo(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutput(batch, row, col, chan, value);
        }
      }

      ${Le()} {
        ${He()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function Ofe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=n,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d);if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))return _6({x:r,filter:a,convInfo:p,backend:s});if(K().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&r.shape[0]===1)return Pfe({x:r,filter:a,convInfo:p,backend:s});let h,f=[p.padInfo.top,p.padInfo.left],m=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]}],g=K().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?h=new O6(p):(p.inChannels%4==0||p.inChannels===3&&p.padInfo.type==="VALID")&&p.outChannels%4==0&&p.outChannels>=64?h=new F6(p):h=new P6(p),!g){let y=p.outShape[1]*p.outShape[2],A=p.outShape[3],x=p.filterHeight*p.filterWidth*p.inShape[3];m.push({type:"int32",data:[y]},{type:"int32",data:[A]},{type:"int32",data:[x]})}return s.runWebGPUProgram(h,[r,a],r.dtype,m)}var Mfe={kernelName:Ha,backendName:"webgpu",kernelFunc:Ofe},zfe=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Lx(this.dispatchLayout,this.outputShape),this.elementsPerThread=Wx(this.dispatchLayout,this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getFlatIndex4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }

    ${Gx(this.elementsPerThread,this.workGroupSize)}
  `}},Lfe=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.outputShape=e.inShape,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Le()} {
      ${He()}
      let coords = getOutputCoords(globalId, index);
      if (coordsInBounds4D(coords, uniforms.outShape)) {
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutput(coords[0], coords[1], coords[2], coords[3], dotProd);
      }
    }
  `}};function Bfe(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}],f;if(K().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new Lfe(p);else{f=new zfe(p);let m=p.inShape[1]*p.inShape[2],g=p.inShape[3],y=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var Wfe={kernelName:ja,backendName:"webgpu",kernelFunc:Bfe},Vfe=_n({opType:Oe.COS}),Ufe={kernelName:qa,backendName:"webgpu",kernelFunc:Vfe},Gfe=_n({opType:Oe.COSH}),Hfe={kernelName:Xa,backendName:"webgpu",kernelFunc:Gfe},jfe=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1];let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      fn writeResult(coords : vec4<i32>, value : f32) {
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutput(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
      ${Le()} {
        ${He()}
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let coords = getOutputCoords(globalId, index);
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          writeResult(coords, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          writeResult(coords,newValue);
        }
      }
    `}},qfe=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new jfe(r.shape[3],a.shape,i,l),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(u,[r,a,o],"float32",d)},Xfe={kernelName:yi,backendName:"webgpu",kernelFunc:qfe},Kfe=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.size=v.sizeFromShape(this.outputShape),this.dataFormat=t}getUserCode(){return`
      ${Le()} {
        ${He()}
        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputFlat(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Zfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=[{type:"int32",data:[a]}],g=new Kfe(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var Yfe={kernelName:Ai,backendName:"webgpu",kernelFunc:Zfe},M6=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=Zo(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, globalIndex);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], globalId, index);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${e}

      ${Le()} {
        ${He()}
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutput(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},z6=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.activation}_${this.convInfo.outChannels/this.convInfo.inChannels}`}getUserCode(){let e=this.convInfo.outChannels/this.convInfo.inChannels,t="",n="";if(this.activation){let a=Zo(this.activation,!1);this.hasPreluActivation?t=`fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, index);
          ${a}
        }`:t=`
          fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
            ${a}
          }
        `,n="dotProd = activation(dotProd, globalId, index);"}let s=this.addBias?"dotProd = dotProd + getBiasAtOutCoordsByGlobalId(globalId, index);":"";return`
      ${t}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutput(batch, row, col, chan, value);
        }
      }

      ${Le()} {
        ${He()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / ${e};
        let q = d2 - d1 * ${e};

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + ${this.convInfo.filterHeight} * uniforms.dilation[0];
        let inputColEnd = inputColStart + ${this.convInfo.filterWidth} * uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] && inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${s}
        ${n}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Jfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]);let d=N.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p;d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4==0?p=new M6(d):p=new z6(d);let h=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}];return n.runWebGPUProgram(p,[r,a],r.dtype,h)}var Qfe={kernelName:Ka,backendName:"webgpu",kernelFunc:Jfe},L6=Jn({opSnippet:je.MUL,cpuKernelImpl:Mhe,supportsComplex:!0}),eme={kernelName:ra,backendName:"webgpu",kernelFunc:L6},tme=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.inputShape=[e.batchSize,e.inSize];let[s]=N.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=s.length===0?[1]:s,this.reductionFactor=2;let r=256,a=Math.min(Math.ceil(e.inSize/this.reductionFactor),r);this.workGroupSize=[a,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((o,i)=>i)},this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.reduceType=t,this.shaderKey=`reduce_${t}_${n}`}getUserCode(){let e=this.workGroupSize[0]>1,t="",n="0.0";this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } elseif (candidate ${this.reduceType==="min"?"<":">"}
           bestValue)
           {  bestValue = candidate; }`,n="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(t=" bestValue = bestValue * candidate; ",n="1.0");let s=this.reduceType==="mean"?"setOutputFlat(flatOutputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputFlat(flatOutputIndex, bestValue);",r=`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `,a=`
       xBestValues[localId.x] = bestValue;
       ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`bestValue = ${n};`:" "}
       var currentSize = WorkGroupSize;
       for(; currentSize > 1;) {
         workgroupBarrier();
         for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
           let i = i32(localId.x) * ${this.reductionFactor} + w;
           if (i < currentSize) {
             let candidate = xBestValues[i];
             ${t}
           }
         }
         workgroupBarrier();
         xBestValues[localId.x] = bestValue;
         currentSize = DIV_CEIL(currentSize, ${this.reductionFactor});
         ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`if(currentSize > 1) { bestValue = ${n}; }`:""}
       }
       if (localId.x == 0u) {
         ${s}
       }
     `;return`
       fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
       }
       let WorkGroupSize = ${this.workGroupSize[0]};
       ${e?r:""}
       fn getOffset(globalId : vec3<u32>, index : i32) -> i32 {
         let outputCoords = getOutputCoords(globalId, index);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
         return offset;
       }
       ${Le()} {
         ${He()}
         let offset= getOffset(globalId, index);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);
         for (var w = 0; w < WorkPerThread; w = w + 1) {
           let i = i32(globalId.x) * WorkPerThread + w;
           if (i < Length) {
             let candidate = f32(x.numbers[offset + i]);
             ${t}
           }
         }
         let flatOutputIndex = i32(globalId.y);
         ${e?a:s}
       }
     `}};function $p(e,t,n,s,r){let a=e.shape.length,o=[],i=v.parseAxisParam(t,e.shape),l=i,c=N.getAxesPermutation(l,a),u=e;c!=null&&(u=El({inputs:{x:e},attrs:{perm:c},backend:r}),l=N.getInnerMostAxes(l.length,a),o.push(u)),N.assertAxesAreInnerMostDims(s,l,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=d;n&&(h=N.expandShapeToKeepDim(d,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([u])){let m=r.tensorMap.get(u.dataId).values;switch(s){case"max":let g=Fhe(m,v.sizeFromShape(p),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:y,outShape:A,outDtype:x}=Bhe(u.shape,u.dtype,m,l);f=r.makeTensorInfo(A,x,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(p),y=v.sizeFromShape(u.shape)/m,A={windowSize:m,inSize:m,batchSize:y,outSize:1},x=s==="mean"?"float32":yd(e.dtype),b=[{type:"int32",data:[m]}],w=new tme(A,s,x),k=r.runWebGPUProgram(w,[u],x,b);o.push(k),f=nt({inputs:{x:k},attrs:{shape:h},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function eb(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return $p(r,a,o,"sum",n)}var nme={kernelName:bo,backendName:"webgpu",kernelFunc:eb};function sme(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:A}=N.getEinsumPermutation(h,l[g]),x;N.isIdentityPermutation(y)?x=a[g]:(x=El({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(x));let b=x.shape.slice();for(let w=0;w<A.length;++w)b.splice(A[w],0,1);v.arraysEqual(x.shape,b)||(x=nt({inputs:{x},backend:n,attrs:{shape:b}}),f.push(x)),p===null?p=x:(p=L6({inputs:{a:x,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=eb({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeData(m.dataId);return p}var rme={kernelName:Qc,backendName:"webgpu",kernelFunc:sme},ame=_n({opType:Oe.ELU}),ome={kernelName:Ya,backendName:"webgpu",kernelFunc:ame},ime=Jn({opSnippet:je.EQUAL,dtype:"bool",cpuKernelImpl:khe}),lme={kernelName:Ja,backendName:"webgpu",kernelFunc:ime},B6=_n({opType:Oe.EXP,cpuKernelImpl:Ihe,dtype:"float32"}),ume={kernelName:Jr,backendName:"webgpu",kernelFunc:B6};function tb(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),nt({inputs:{x:a},backend:s,attrs:{shape:i}})}var cme={kernelName:xi,backendName:"webgpu",kernelFunc:tb},dme=_n({opType:Oe.EXPM1,cpuKernelImpl:She}),pme={kernelName:Qa,backendName:"webgpu",kernelFunc:dme},hme=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workPerThread=4,this.workGroupSize=[16,1,1],this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="fill",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
    ${Le()} {
      ${He()}
      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;
        if (flatIndex < uniforms.size) {
          setOutputFlat(flatIndex, uniforms.value);
        }
      }
    }
  `}};function c0(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new hme(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var fme={kernelName:ou,backendName:"webgpu",kernelFunc:c0},mme=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${Le()} {
        ${He()}

        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputFlat(index, outputValue);
        }
      }
    `}},gme={kernelName:bi,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new mme(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},yme=_n({opType:Oe.FLOOR,cpuKernelImpl:Che}),Ame={kernelName:Qr,backendName:"webgpu",kernelFunc:yme},xme=Jn({opSnippet:je.INT_DIV,dtype:"int32"}),bme={kernelName:eo,backendName:"webgpu",kernelFunc:xme},vme=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},W6=(e,t,n,s,r,a=!1)=>{let o={dtype:r.dtype,shape:r.shape},i=Sde(s,o,t,a),l=e.createShaderModule({code:i});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"}})};function V6(e,t,n,s="",r=""){return(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r+e.shaderKey}function U6(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:o}=s,i=v.sizeFromShape(r),l=v.computeStrides(r),c=n.makeTensorInfo(r,"int32"),u=n.getFromPixelsProgram(a?"import":"copyExternal");u.updateOutputShape(r);let d=[c.shape],p=[c.dtype,a?"import":"copyExternal"],h=V6(u,d,p),f=u.getLayout(n.device),m=n.getAndSavePipeline(h,()=>W6(n.device,u,f.pipelineLayout,[],c,!0));u.setPipeline(m),a||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:u.makeInputTexture(n.device,r[1],r[0])},[r[1],r[0]]);let g=n.tensorMap.get(c.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let y=[i,o,...l,...u.dispatch];u.setUniform(n.device,y);let A;if(a){let x={source:t};A=n.device.importExternalTexture(x)}else A=u.inputTexture.createView();return n.runFromPixelsProgram(u,g.bufferInfo.buffer,f,A,c.dataId),c}var wme={kernelName:ld,backendName:"webgpu",kernelFunc:kme},xc;function kme(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement,c=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[u,d]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[d,u,a];if(K().getBool("WEBGPU_USE_IMPORT")&&o)return U6({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!0});if((o||i)&&(xc==null&&(xc=document.createElement("canvas").getContext("2d")),xc.canvas.width=u,xc.canvas.height=d,xc.drawImage(r,0,0,u,d),r=xc.canvas),c||l||o||i)return U6({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!1});let h=r.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let y=h.length,A=0;for(let x=0;x<y;x++)x%4<a&&(f[A++]=h[x])}let m=n.makeTensorInfo(p,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}var Ime=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetAtOutCoordsByGlobalId(globalId, index)");let t="1.0";this.scaleShape!=null&&(t="getScaleAtOutCoordsByGlobalId(globalId, index)");let n=this.outputShape.length,s=pn(n),r="setOutput(coords[0], coords[1], coords[2], coords[3], value);";return n===2&&(r="setOutput(coords[0], coords[1], value);"),n===3&&(r="setOutput(coords[0], coords[1], coords[2], value);"),`
      fn writeResult(coords : ${s}, value : f32) {
        if (coordsInBounds${n}D(coords, uniforms.outShape)) {
          ${r}
        }
      }
      ${Le()} {
        ${He()}
        let coords = getOutputCoords(globalId, index);
        let xValue = getXAtOutCoordsByGlobalId(globalId, index);
        let meanValue = getMeanAtOutCoordsByGlobalId(globalId, index);
        let varianValue = getVarianceAtOutCoordsByGlobalId(globalId, index);
        let offsetValue = ${e};
        let scaleValue = ${t};
        let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
        writeResult(coords,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
      }
  `}},Sme={kernelName:to,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,c=n,u=[s,o,i],d=null;a!=null&&(d=a.shape,u.push(a));let p=null;r!=null&&(p=r.shape,u.push(r));let h=new Ime(s.shape,o.shape,i.shape,d,p),f=[{type:"float32",data:[l]}];return c.runWebGPUProgram(h,u,s.dtype,f)}};function Cme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),y=o!=null,A=i!=null,x;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return _6({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});let b=K().getBool("WEBGPU_USE_NAIVE_CONV2D"),w=g.inChannels%4==0&&g.outChannels%4==0,k=[g.padInfo.top,g.padInfo.left],S=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...k]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(b)x=new O6(g,y,h,A);else{w?x=new F6(g,y,h,A):x=new P6(g,y,h,A);let R=g.outShape[1]*g.outShape[2],P=g.outShape[3],$=g.filterHeight*g.filterWidth*g.inShape[3];S.push({type:"int32",data:[R]},{type:"int32",data:[P]},{type:"int32",data:[$]})}let E=[r,a];return y&&E.push(o),A&&E.push(i),n.runWebGPUProgram(x,E,r.dtype,S)}var Tme={kernelName:Co,backendName:"webgpu",kernelFunc:Cme};function Nme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p}=s,h=u;h==null&&(h=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let f=N.computeConv2DInfo(r.shape,a.shape,l,h,c,d,!0),m=[r,a],g=o!=null,y=i!=null;g&&m.push(o),y&&m.push(i);let A;f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4==0?A=new M6(f,g,p,y):A=new z6(f,g,p,y);let x=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}];return n.runWebGPUProgram(A,m,"float32",x)}var Eme={kernelName:To,backendName:"webgpu",kernelFunc:Nme},Rme=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.outputShape=t,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.size=v.sizeFromShape(this.outputShape),this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${pn(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Le()} {
          ${He()}
          let coords = getOutputCoords(globalId, index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }
          if (index < uniforms.size) {
            setOutputFlat(index, getA(flattenIndex, coords[1]));
          }
        }
      `}};function $me(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,c,u,d]=N.prepareAndValidate(s,r),p=nt({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=nt({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let A=n.readSync(r.dataId),x=n.bufferSync(s),b=The(A,x,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new Rme(o,[c,u]),m=[{type:"int32",data:[o]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),y=nt({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}var Dme={kernelName:wi,backendName:"webgpu",kernelFunc:$me},_me=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=Fme(this.aShape,"i32");return`
      ${Le()} {
        ${He()}
        let resRC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Fme(e,t="int"){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push(`${t}(getIndices(resRC.x, resRC.z))`):s.push(`${n[r]}`);return s.join()}function Pme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=n.readSync(a.dataId),u=r.shape[l];for(let b=0;b<c.length;++b){let w=c[b];v.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=v.sizeFromShape(a.shape),h=[],f=nt({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=nt({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}});h.push(f),h.push(m);let g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let w=n.tensorMap.get(m.dataId).values,k=Fe(m.shape,m.dtype,w),E=n.tensorMap.get(f.dataId).values,R=Fe(f.shape,f.dtype,E),P=Nhe(R,k,g);return h.forEach($=>n.disposeData($.dataId)),n.makeTensorInfo(d.outputShape,P.dtype,P.values)}let y=new _me(f.shape,g),A=n.runWebGPUProgram(y,[f,m],f.dtype);h.push(A);let x=nt({inputs:{x:A},backend:n,attrs:{shape:d.outputShape}});return h.forEach(b=>n.disposeData(b.dataId)),x}var Ome={kernelName:vi,backendName:"webgpu",kernelFunc:Pme},Mme=Jn({opSnippet:je.GREATER,cpuKernelImpl:Rhe,dtype:"bool"}),zme={kernelName:no,backendName:"webgpu",kernelFunc:Mme},Lme=Jn({opSnippet:je.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:Ehe}),Bme={kernelName:ea,backendName:"webgpu",kernelFunc:Lme},Wme=Jn({opSnippet:je.LESS,dtype:"bool",cpuKernelImpl:Dhe}),Vme={kernelName:ro,backendName:"webgpu",kernelFunc:Wme},Ume=Jn({opSnippet:je.LESS_EQUAL,dtype:"bool",cpuKernelImpl:$he}),Gme={kernelName:ao,backendName:"webgpu",kernelFunc:Ume},Hme=_n({opType:Oe.LOG,cpuKernelImpl:_he}),jme={kernelName:ta,backendName:"webgpu",kernelFunc:Hme},qme=Jn({opSnippet:je.LOGICAL_AND,dtype:"bool"}),Xme={kernelName:Ii,backendName:"webgpu",kernelFunc:qme},Kme=_n({opType:Oe.LOGICAL_NOT}),Zme={kernelName:du,backendName:"webgpu",kernelFunc:Kme};function G6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return $p(r,a,o,"max",n)}var Yme={kernelName:oo,backendName:"webgpu",kernelFunc:G6},Jme=Jn({opSnippet:je.MAX,cpuKernelImpl:Phe}),Qme={kernelName:na,backendName:"webgpu",kernelFunc:Jme};function e0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=N.computePool2DInfo(r.shape,a,o,c,i,l),d,p=[];if(u.filterHeight===1&&u.filterWidth===1){if(v.arraysEqual(u.inShape,u.outShape))return tr({inputs:{x:r},backend:n});d=new R6(u),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else d=new E6(u,"max"),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return n.runWebGPUProgram(d,[r],r.dtype,p)}var t0e={kernelName:io,backendName:"webgpu",kernelFunc:e0e};function n0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return $p(r,o,a,"mean",n)}var s0e={kernelName:lo,backendName:"webgpu",kernelFunc:n0e};function r0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return $p(r,a,o,"min",n)}var a0e={kernelName:uo,backendName:"webgpu",kernelFunc:r0e},o0e=Jn({opSnippet:je.MIN,cpuKernelImpl:Ohe}),i0e={kernelName:sa,backendName:"webgpu",kernelFunc:o0e},l0e=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((l,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=pn(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Le()} {
        ${He()}
        let start = ${o}(${t});
        let end = ${o}(${n});
        var outC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } elseif(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputFlat(index, getX(${i}));
        }
      }
    `}},u0e={kernelName:co,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new l0e(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function c0e(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=zhe(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new i0(s.shape,Oe.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}var d0e={kernelName:Si,backendName:"webgpu",kernelFunc:c0e};function p0e(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=Zs.nonMaxSuppressionV3Impl(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var h0e={kernelName:Ci,backendName:"webgpu",kernelFunc:p0e};function f0e(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=Zs.nonMaxSuppressionV5Impl(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var m0e={kernelName:Ti,backendName:"webgpu",kernelFunc:f0e};function d0(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Rp({inputs:{input:s},backend:n}),a=d0({inputs:{x:r},backend:n}),o=u0({inputs:{input:s},backend:n}),i=d0({inputs:{x:o},backend:n}),l=yc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return c0({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var g0e={kernelName:Hi,backendName:"webgpu",kernelFunc:d0};function H6(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Rp({inputs:{input:s},backend:n}),a=H6({inputs:{x:r},backend:n}),o=u0({inputs:{input:s},backend:n}),i=d0({inputs:{x:o},backend:n}),l=yc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return c0({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var y0e={kernelName:Ni,backendName:"webgpu",kernelFunc:H6};function A0e(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return tb({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=tb({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=D6({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var x0e={kernelName:Ri,backendName:"webgpu",kernelFunc:A0e},b0e=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=pn(e),n=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Le()} {
        ${He()}
        let start = ${r};
        let end = ${a};
        if (index < uniforms.size) {
          let outC = getOutputCoords(globalId, index);

          if (${o} || ${i}) {
            setOutputFlat(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputFlat(index, getX(${l}));
          }
        }
      }
    `}},j6=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(c=>v.arraysEqual(c,[0,0])))return tr({inputs:{x:r},backend:n});if(v.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return c0({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(c=>i.push({type:"int32",data:[c[0],c[1]]}));let l=new b0e(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},v0e={kernelName:ho,backendName:"webgpu",kernelFunc:j6},w0e=Jn({opSnippet:je.POW}),k0e={kernelName:fo,backendName:"webgpu",kernelFunc:w0e};function I0e(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new a6(je.PRELU,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var S0e={kernelName:mo,backendName:"webgpu",kernelFunc:I0e};function C0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return $p(r,a,o,"prod",n)}var T0e={kernelName:$i,backendName:"webgpu",kernelFunc:C0e},N0e=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Whe(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},E0e={kernelName:fu,backendName:"webgpu",kernelFunc:N0e},q6=Jn({opSnippet:je.DIV}),R0e={kernelName:Za,backendName:"webgpu",kernelFunc:q6},$0e=_n({opType:Oe.RELU}),D0e={kernelName:go,backendName:"webgpu",kernelFunc:$0e},_0e=_n({opType:Oe.RELU6}),F0e={kernelName:Ao,backendName:"webgpu",kernelFunc:_0e},P0e=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=s,this.halfPixelCenters=r,this.shaderKey=`resizeBilinear_${s}_${r}_${this.outputShape[1]>1}_${this.outputShape[2]>1}`}getUserCode(){let e=this.alignCorners&&this.outputShape[1]>1,t=this.alignCorners&&this.outputShape[2]>1;return`
      ${Le()} {
        ${He()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${e?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${t?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${e?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${t?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${this.halfPixelCenters?"(vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC - vec2<f32>(0.5)":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC"};

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function O0e(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,c]=o,u=new P0e(r.shape,l,c,a,i);return n.runWebGPUProgram(u,[r],"float32")}var M0e={kernelName:yo,backendName:"webgpu",kernelFunc:O0e},z0e=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=s,this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${s}_${this.outputShape[1]>1}_${this.outputShape[2]>1}_${r}`}getUserCode(){let e=this.alignCorners?"0.5":"0.0",t;this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC";let n=this.alignCorners&&this.outputShape[1]>1,s=this.alignCorners&&this.outputShape[2]>1;return`
      ${Le()} {
        ${He()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${n?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${s?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${n?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${s?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${e})));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function L0e(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=new z0e(r.shape,l,c,a,o);return n.runWebGPUProgram(u,[r],r.dtype)}var B0e={kernelName:gu,backendName:"webgpu",kernelFunc:L0e},W0e=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.size=v.sizeFromShape(this.outputShape),this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Le()} {
          ${He()}

          if (index < uniforms.size) {
            let coords = getOutputCoords(globalId, index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputFlat(index, outputValue);
          }
        }
      `}},V0e={kernelName:ji,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new W0e(s.shape,a),[c,u]=N.getImageCenter(o,s.shape[1],s.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[u]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,d)}},U0e=_n({opType:Oe.RSQRT,cpuKernelImpl:Vhe}),G0e={kernelName:aa,backendName:"webgpu",kernelFunc:U0e},X6=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.outputShape=a,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${s}_${i}`,this.size=v.sizeFromShape(this.outputShape);let l=pn(r.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let c="";n===1?c="i":n===2&&(c="i, j"),this.indicesSnippet=`getIndices(${c})`;let u="";s===1?u="i":s===2&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Le()} {
        ${He()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromFlatIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputFlat(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function H0e(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=nt({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=nt({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=[{type:"int32",data:[l]},{type:"int32",data:[i]},{type:"int32",data:u}],y=new X6(l,i,h.shape.length,f.shape.length,u,p),A=n.runWebGPUProgram(y,[f,h,m],f.dtype,g),x=nt({inputs:{x:A},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(A.dataId),n.disposeData(m.dataId),x}var j0e={kernelName:Pi,backendName:"webgpu",kernelFunc:H0e},q0e=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.outputShape=t,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${Le()} {
        ${He()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputFlat(index, getA(${t}));
          } else {
            setOutputFlat(index, getB(${t}));
          }
        }
      }
    `}};function X0e(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new q0e(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],Mn(r.dtype,a.dtype))}var K0e={kernelName:Oi,backendName:"webgpu",kernelFunc:X0e},Z0e=_n({opType:Oe.SIGMOID}),Y0e={kernelName:oa,backendName:"webgpu",kernelFunc:Z0e},J0e=_n({opType:Oe.SIN}),Q0e={kernelName:xo,backendName:"webgpu",kernelFunc:J0e},ege=_n({opType:Oe.SINH}),tge={kernelName:zi,backendName:"webgpu",kernelFunc:ege},K6=Jn({opSnippet:je.SUB,cpuKernelImpl:qhe,supportsComplex:!0}),nge={kernelName:ua,backendName:"webgpu",kernelFunc:K6};function sge(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=G6({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=nt({inputs:{x:i},backend:n,attrs:{shape:l}}),u=K6({inputs:{a:r,b:c},backend:n}),d=B6({inputs:{x:u},backend:n}),p=eb({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=nt({inputs:{x:p},backend:n,attrs:{shape:l}}),f=q6({inputs:{a:d,b:h},backend:n});return n.disposeData(i.dataId),n.disposeData(c.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),f}var rge={kernelName:vo,backendName:"webgpu",kernelFunc:sge},age=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((y,A)=>y*A),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let c=[],u=j6({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=nt({inputs:{x:u},backend:n,attrs:{shape:d}}),m=El({inputs:{x:f},backend:n,attrs:{perm:p}}),g=nt({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>n.disposeData(y.dataId)),g},oge={kernelName:Li,backendName:"webgpu",kernelFunc:age};function ige(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,r,i),p=!1,h=[{type:"int32",data:[c]},{type:"int32",data:[l]},{type:"int32",data:u}],f=new X6(c,l,r.shape.length,a.shape.length,u,[d,1],p),m=n.runWebGPUProgram(f,[a,r,o],a.dtype,h),g=nt({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),g}var lge={kernelName:ad,backendName:"webgpu",kernelFunc:ige};function uge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=Ep({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var cge={kernelName:Bi,backendName:"webgpu",kernelFunc:uge},dge=_n({opType:Oe.SQRT}),pge={kernelName:ia,backendName:"webgpu",kernelFunc:dge},hge={kernelName:bu,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new i0(n.shape,Oe.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}},fge=Jn({opSnippet:je.SQUARED_DIFFERENCE}),mge={kernelName:la,backendName:"webgpu",kernelFunc:fge},gge=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=pn(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Le()} {
         ${He()}
         if (index < uniforms.size) {
           let coords = getOutputCoords(globalId, index);
           setOutputFlat(index, getX(${t}));
         }
       }
     `}};function yge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{nonStrided:h,$begin:f,$strides:m,size:g,newShape:y,outShape:A}=Qt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),x=nt({inputs:{x:r},backend:n,attrs:{shape:y}}),b;if(h){let k=Ep({inputs:{x},backend:n,attrs:{begin:f,size:g}});b=nt({inputs:{x:k},backend:n,attrs:{shape:A}}),n.disposeData(k.dataId)}else if(A.some(k=>k===0))b=n.makeTensorInfo(A,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){let E=n.tensorMap.get(x.dataId).values,R=Fe(x.shape,x.dtype,E),P=Hhe(A,R,m,f);b=n.makeTensorInfo(A,x.dtype,P.values)}else{let S=new gge(A),E=[{type:"int32",data:f},{type:"int32",data:m}];b=n.runWebGPUProgram(S,[x],x.dtype,E)}let w=nt({inputs:{x:b},backend:n,attrs:{shape:A}});return n.disposeData(x.dataId),n.disposeData(b.dataId),w}var Age={kernelName:Wi,backendName:"webgpu",kernelFunc:yge};function xge(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=jhe(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var bge={kernelName:od,backendName:"webgpu",kernelFunc:xge},vge=_n({opType:Oe.TANH}),wge={kernelName:wo,backendName:"webgpu",kernelFunc:vge},kge=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.size=v.sizeFromShape(this.outputShape),this.shaderKey="tile"}getUserCode(){let e=Ige(this.rank,"uniforms.");return`
      ${Le()} {
        ${He()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Ige(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function Sge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>v.decodeString(p)):l,u=Fe(r.shape,r.dtype,c),d=Xhe(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new kge(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var Cge={kernelName:ca,backendName:"webgpu",kernelFunc:Sge},Tge=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Le()} {
            ${He()}
            let coords = getOutputCoords(globalId, index);
            if (coordsInBounds4D(coords, uniforms.outShape)) {
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(coords[0], coords[1], coords[2], coords[3], outputValue);
            }
          }
        `}};function Nge(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new Tge(g),A=o==="nearest"?1:2,x;switch(i){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let b=[{type:"int32",data:[A]},{type:"int32",data:[x]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[r,a],"float32",b)}var Ege={kernelName:Ui,backendName:"webgpu",kernelFunc:Nge};function Rge(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=Ep({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),y=nt({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>n.disposeData(m.dataId)),f}var $ge={kernelName:Gi,backendName:"webgpu",kernelFunc:Rge},Dge=[zpe,Yhe,Qhe,nfe,lfe,cfe,pfe,ffe,xfe,kfe,Sfe,Efe,Vpe,_fe,Mfe,Wfe,Ufe,Hfe,Xfe,Yfe,Qfe,rme,ome,lme,cme,ume,pme,fme,gme,wme,Ame,bme,Sme,Tme,Eme,Dme,Ome,zme,Bme,Wpe,$fe,Vme,Gme,jme,Xme,Zme,Yme,Qme,t0e,s0e,a0e,i0e,u0e,eme,d0e,h0e,m0e,bfe,y0e,x0e,v0e,S0e,T0e,k0e,E0e,vfe,R0e,D0e,F0e,Ope,M0e,B0e,V0e,G0e,j0e,K0e,Y0e,Q0e,tge,yfe,Age,bge,rge,oge,cge,lge,pge,hge,mge,nge,nme,wge,Cge,Ege,ofe,$ge,g0e];for(let e of Dge)pa(e);var _ge=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n=Z6(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let r=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(r),r}this.numBytesAllocated+=e;let s=this.device.createBuffer({size:e,usage:t});return this.usedBuffers.get(n).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers==null)return;let s=Z6(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}reset(){this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}dispose(){this.freeBuffers==null&&this.usedBuffers==null||(this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=null,this.usedBuffers=null,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0)}};function Z6(e,t){return`${e}_${t}`}var Y6=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){v.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=ot(this.outputShape),this.dispatch=Be(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Le()} {
        ${He()}
        let flatIndexBase = index * uniforms.numChannels;
        let coords = getCoordsFromFlatIndex(flatIndexBase);
        let values = ${e};
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,s)=>n===this.lastUniformData[s])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Fge=class extends Y6{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Pge=K().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),p0=class extends jl{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!Ux())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new _ge(this.device),this.tensorMap=new Hc(this,os()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return p0.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=v.sizeFromShape(t)*Vx(n);return n==="bool"&&e instanceof Uint8Array&&(e=Int32Array.from(e)),this.tensorMap.set(s,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=v.sizeFromShape(n)*Vx(s);this.tensorMap.set(e,{dtype:s,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new Y6),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new Fge),this.fromPixelImportProgram;default:v.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=N.mergeRealAndImagArrays(a,o)}else{let r=await this.getBufferData(t);s=QC(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Fe(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values&&this.queue.writeBuffer(t.bufferInfo.buffer,0,t.values))}makeUniformsDataView(e){let t=this.acquireBuffer(e.byteLength,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(t,0,e),{offset:0,size:e.byteLength,buffer:t}}arrayToDataView(e,t){let n=4,s=new DataView(new ArrayBuffer(t*n)),r=0;return e.forEach(a=>{let o=a.data;if(a.type!=="int32"&&a.type!=="float32"&&a.type!=="uint32")throw new Error(`${a.type} not supported!`);a.type==="int32"?o.forEach(i=>{s.setInt32(r*n,i,!0),r++}):a.type==="uint32"?o.forEach(i=>{s.setUint32(r*n,i,!0),r++}):o.forEach(i=>{s.setFloat32(r*n,i,!0),r++})}),s}computePadding(e){let t=0,n=0,s=0,r=[];return e.forEach((a,o)=>{a.data.length===0&&(a.data=[1]);let i;switch(a.data.length){case 0:i=1;break;case 1:i=1;break;case 2:i=2;break;case 3:i=4;break;case 4:i=4;break;default:v.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}n=Math.ceil(t/i)*i-t;for(let l=0;l<n;++l)r.push({type:a.type,data:[0]}),s++;r.push({type:a.type,data:a.data}),s=s+a.data.length,t+=a.data.length+n}),this.arrayToDataView(r,s)}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s){let r=this.makeTensorInfo(e.outputShape,n),a=this.tensorMap.get(r.dataId);if(v.sizeFromShape(r.shape)===0)return a.values=v.getTypedArrayFromDType(r.dtype,0),r;let o=[{type:"float32",data:[NaN]}],i=t.concat(r).map(R=>R.shape),l="int32";i.map(R=>{o.push({type:l,data:R})});let c=v.computeStrides(r.shape);o.push({type:l,data:c}),e.size!=null&&o.push({type:l,data:[e.size]}),o.push({type:"uint32",data:e.dispatch}),s&&(o=[...o,...s]);let u=null,d=this.computePadding(o),p=d.byteLength;u=this.makeUniformsDataView(d);let h=t.map((R,P)=>{if(R.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(R.dataId),{dtype:this.tensorMap.get(R.dataId).dtype,shape:R.shape,name:e.variableNames[P]}});this.uploadToGPU(r.dataId);let f=h.map(R=>R.dtype).concat(r.dtype),m=h.map(R=>N.getBroadcastDims(R.shape,r.shape)),g=h.map(R=>v.arraysEqual(R.shape,r.shape)).join("_"),y=m.map(R=>R.join("_")).join(";"),A=V6(e,i,f,y,g),{bindGroupLayout:x,pipelineLayout:b}=this.getCachedOrCreateLayout(e.variableNames.length),w=this.getAndSavePipeline(A,()=>W6(this.device,e,b,h,r)),k=this.activeTimers!=null,S=vme(this.device,x,t.map(R=>this.tensorToBinding(R)),this.tensorToBinding(r),u);this.ensureCommandEncoderReady();let E=this.getComputePass();if(k&&this.supportTimeQuery&&E.writeTimestamp(this.querySet,0),E.setPipeline(w),E.setBindGroup(0,S),E.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),k&&this.supportTimeQuery&&E.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(R=>{this.commandQueueOwnedIds.add(R.dataId)}),this.commandQueueOwnedIds.add(r.dataId),u){let R={byteSize:p,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:u.buffer};this.uniformDisposalQueue.push(R)}return K().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),k&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}runFromPixelsProgram(e,t,n,s,r){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:s},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let o=this.getComputePass(),i=this.activeTimers!=null;i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,0),o.setPipeline(e.pipeline),o.setBindGroup(0,a),o.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(r),this.submitQueue(),i&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=Pge){return K().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&v.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}};p0.nextDataId=0;var J6={};ze(J6,{WebGPUBackend:()=>p0,webgpu_util:()=>JC});Iu.isBrowser()&&Ux()&&Qi("webgpu",async()=>{K().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:K().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},s=t.features.has("timestamp-query");s?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let r=await t.requestDevice(n);return new p0(r,s)},3);var Oge="3.10.0",Mge="3.10.0",zge="3.10.0",Lge="3.10.0",Bge="3.10.0",Wge="3.10.0",Vge="3.10.0",Uge="3.10.0",Gge={tfjs:Oge,"tfjs-core":Mge,"tfjs-data":zge,"tfjs-layers":Lge,"tfjs-converter":Bge,"tfjs-backend-cpu":Wge,"tfjs-backend-webgl":Vge,"tfjs-backend-wasm":Uge};var Q6=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var e8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,t8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,n8=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,s8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,r8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var nb=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},a8=class{constructor(t,n,s){he(this,"uniform",{});he(this,"attribute",{});he(this,"gl");he(this,"id");he(this,"compile",(t,n)=>{let s=this.gl.createShader(n);if(this.gl.shaderSource(s,t),this.gl.compileShader(s),!this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS))throw new Error(`filter: gl compile failed: ${this.gl.getShaderInfoLog(s)}`);return s});this.gl=t;let r=this.compile(n,this.gl.VERTEX_SHADER),a=this.compile(s,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS))throw new Error(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);this.gl.useProgram(this.id),nb(n,"attribute",this.attribute);for(let o in this.attribute)this.attribute[o]=this.gl.getAttribLocation(this.id,o);nb(n,"uniform",this.uniform),nb(s,"uniform",this.uniform);for(let o in this.uniform)this.uniform[o]=this.gl.getUniformLocation(this.id,o)}};function o8(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=Qn(100,100),c={},u={INTERMEDIATE:1},d=l.getContext("webgl");if(!d)throw new Error("filter: cannot get webgl context");function p(A,x){if(!(A===l.width&&x===l.height)){if(l.width=A,l.height=x,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,o),d.bufferData(d.ARRAY_BUFFER,b,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),r=[null,null]}}function h(A,x){let b=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,b);let w=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,w);let k=d.createTexture();return d.bindTexture(d.TEXTURE_2D,k),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,A,x,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,k,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:b,texture:k}}function f(A){return r[A]=r[A]||h(l.width,l.height),r[A]}function m(A=0){var k,S;if(!i)return;let x=null,b=null,w=!1;e===0?x=t:x=((k=f(s))==null?void 0:k.texture)||null,e++,n&&!(A&u.INTERMEDIATE)?(b=null,w=e%2==0):(s=(s+1)%2,b=((S=f(s))==null?void 0:S.fbo)||null),d.bindTexture(d.TEXTURE_2D,x),d.bindFramebuffer(d.FRAMEBUFFER,b),d.uniform1f(i.uniform.flipY,w?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function g(A){if(c[A])return i=c[A],d.useProgram((i==null?void 0:i.id)||null),i;i=new a8(d,Q6,A);let x=Float32Array.BYTES_PER_ELEMENT,b=4*x;return d.enableVertexAttribArray(i.attribute.pos),d.vertexAttribPointer(i.attribute.pos,2,d.FLOAT,!1,b,0*x),d.enableVertexAttribArray(i.attribute.uv),d.vertexAttribPointer(i.attribute.uv,2,d.FLOAT,!1,b,2*x),c[A]=i,i}let y={colorMatrix:A=>{let x=new Float32Array(A);x[4]/=255,x[9]/=255,x[14]/=255,x[19]/=255;let b=x[18]===1&&x[3]===0&&x[8]===0&&x[13]===0&&x[15]===0&&x[16]===0&&x[17]===0&&x[19]===0?t8:e8,w=g(b);d.uniform1fv(w==null?void 0:w.uniform.m,x),m()},brightness:A=>{let x=(A||0)+1;y.colorMatrix([x,0,0,0,0,0,x,0,0,0,0,0,x,0,0,0,0,0,1,0])},saturation:A=>{let x=(A||0)*2/3+1,b=(x-1)*-.5;y.colorMatrix([x,b,b,0,0,b,x,b,0,0,b,b,x,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:A=>{let x=(A||0)+1,b=-128*(x-1);y.colorMatrix([x,0,0,0,b,0,x,0,0,b,0,0,x,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:A=>{A=(A||0)/180*Math.PI;let x=Math.cos(A),b=Math.sin(A),w=.213,k=.715,S=.072;y.colorMatrix([w+x*(1-w)+b*-w,k+x*-k+b*-k,S+x*-S+b*(1-S),0,0,w+x*-w+b*.143,k+x*(1-k)+b*.14,S+x*-S+b*-.283,0,0,w+x*-w+b*-(1-w),k+x*-k+b*k,S+x*(1-S)+b*S,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:A=>{let x=new Float32Array(A),b=1/l.width,w=1/l.height,k=g(r8);d.uniform1fv(k==null?void 0:k.uniform.m,x),d.uniform2f(k==null?void 0:k.uniform.px,b,w),m()},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:A=>{let x=A||1;y.convolution.call(this,[0,-1*x,0,-1*x,1+4*x,-1*x,0,-1*x,0])},emboss:A=>{let x=A||1;y.convolution.call(this,[-2*x,-1*x,0,-1*x,1,1*x,0,1*x,2*x])},blur:A=>{let x=A/7/l.width,b=A/7/l.height,w=g(s8);d.uniform2f(w==null?void 0:w.uniform.px,0,b),m(u.INTERMEDIATE),d.uniform2f(w==null?void 0:w.uniform.px,x,0),m()},pixelate:A=>{let x=A/l.width,b=A/l.height,w=g(n8);d.uniform2f(w==null?void 0:w.uniform.size,x,b),m()}};this.add=function(A){let x=Array.prototype.slice.call(arguments,1),b=y[A];a.push({func:b,args:x})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(A){p(A.width,A.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,A);for(let x=0;x<a.length;x++){n=x===a.length-1;let b=a[x];b.func.apply(this,b.args||[])}return l},this.draw=function(A){return this.add("brightness",0),this.apply(A)}}var h0=2048,pt=null,Yt=null,Jo=null,Mt;function Qn(e,t){let n;if(xe.browser)if(xe.offscreen)n=new OffscreenCanvas(e,t);else{if(typeof document=="undefined")throw new Error("attempted to run in web worker but offscreenCanvas is not supported");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof xe.Canvas!="undefined"?n=new xe.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(n=new globalThis.Canvas(e,t));return n}function sb(e,t){let n=t||Qn(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}function bc(e,t,n=!0){if(!e)return t.debug&&oe("input is missing"),{tensor:null,canvas:null};if(!(e instanceof Ze)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof xe.Canvas!="undefined"&&e instanceof xe.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input type is not recognized");if(e instanceof Ze){if(e.isDisposedInternal)throw new Error("input tensor is disposed");if(!e.shape||e.shape.length!==4||e.shape[0]!==1||e.shape[3]!==3)throw new Error(`input tensor shape must be [1, height, width, 3] and instead was ${e.shape}`);return{tensor:cr(e),canvas:t.filter.return?Yt:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&oe("input stream is not ready"),{tensor:null,canvas:pt};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!r)return t.debug&&oe("cannot determine input dimensions"),{tensor:null,canvas:pt};let a=s,o=r;if(a>h0&&(a=h0,o=Math.trunc(a*r/s)),o>h0&&(o=h0,a=Math.trunc(o*s/r)),(t.filter.width||0)>0?a=t.filter.width:(t.filter.height||0)>0&&(a=s*((t.filter.height||0)/r)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=r*((t.filter.width||0)/s)),!a||!o)throw new Error("input cannot determine dimension");(!pt||(pt==null?void 0:pt.width)!==a||(pt==null?void 0:pt.height)!==o)&&(pt=Qn(a,o));let i=pt.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate!="undefined"?(i.translate(s,0),i.scale(-1,1),i.drawImage(e,0,0,s,r,0,0,pt==null?void 0:pt.width,pt==null?void 0:pt.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,s,r,0,0,pt==null?void 0:pt.width,pt==null?void 0:pt.height),(!Yt||pt.width!==Yt.width||(pt==null?void 0:pt.height)!==(Yt==null?void 0:Yt.height))&&(Yt=Qn(pt.width,pt.height)),t.filter.enabled&&xe.webgl.supported){if(Mt||(Mt=xe.browser?new o8:null),xe.filter=!!Mt,!Mt)return{tensor:null,canvas:pt};Mt.reset(),t.filter.brightness!==0&&Mt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Mt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Mt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Mt.add("blur",t.filter.blur),t.filter.saturation!==0&&Mt.add("saturation",t.filter.saturation),t.filter.hue!==0&&Mt.add("hue",t.filter.hue),t.filter.negative&&Mt.add("negative"),t.filter.sepia&&Mt.add("sepia"),t.filter.vintage&&Mt.add("brownie"),t.filter.sepia&&Mt.add("sepia"),t.filter.kodachrome&&Mt.add("kodachrome"),t.filter.technicolor&&Mt.add("technicolor"),t.filter.polaroid&&Mt.add("polaroid"),t.filter.pixelate!==0&&Mt.add("pixelate",t.filter.pixelate),Mt.get()>0?Yt=Mt.apply(pt):Yt=Mt.draw(pt)}else sb(pt,Yt),Mt&&(Mt=null),xe.filter=!!Mt;if(!n)return{tensor:null,canvas:Yt};if(!Yt)throw new Error("cannot create output canvas");let l,c=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(xe.browser&&Xs)l=Xs?Xs.fromPixels(e):null;else{c=e.data.length/e.height/e.width;let p=new Uint8Array(e.data.buffer);l=qt(p,[e.height,e.width,c],"int32")}else if((!Jo||Yt.width!==Jo.width||(Yt==null?void 0:Yt.height)!==(Jo==null?void 0:Jo.height))&&(Jo=Qn(Yt.width,Yt.height)),Xs&&xe.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=Xs.fromPixels(Yt):(Jo=sb(Yt),l=Xs.fromPixels(Jo));else{let f=sb(Yt).getContext("2d").getImageData(0,0,a,o);c=f.data.length/a/o;let m=new Uint8Array(f.data.buffer);l=qt(m,[a,o,c])}if(c===4){let p=Bu(l,[0,0,0],[-1,-1,3]);Q(l),l=p}if(!l)throw new Error("cannot create tensor from input");let u=de(l,"float32"),d=Xt(u,0);return Q([l,u]),{tensor:d,canvas:t.filter.return?Yt:null}}}var rb=0,ab=1,ob=0,Hge=async e=>{let t=48,n=$e.resizeBilinear(e,[Math.trunc((e.shape[1]||1)/t),Math.trunc((e.shape[2]||1)/t)]),s=async()=>{let o=Ie(n),i=await o.data();return Q(o),i[0]},r=async()=>{let o=await n.data(),i=0;for(let l=0;l<o.length/3;l++)i+=o[3*l+2];return i};if(ob===0){let o=We();await r();let i=We();await s();let l=We();ob=i-o<l-i?1:2}let a=ob===1?await r():await s();return Q(n),a};async function i8(e,t){if(e.cacheSensitivity===0)return!1;let n=await Hge(t),s=100*(Math.max(n,rb)/Math.min(n,rb)-1);rb=n;let r=s<Math.max(e.cacheSensitivity,ab);return ab=s>10*e.cacheSensitivity?0:s,r=r&&ab>0,r}var f0=class{constructor(){he(this,"browser");he(this,"node");he(this,"worker");he(this,"platform","");he(this,"agent","");he(this,"backends",[]);he(this,"initial");he(this,"filter");he(this,"tfjs");he(this,"offscreen");he(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});he(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});he(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});he(this,"cpu",{model:void 0,flags:[]});he(this,"kernels",[]);he(this,"Canvas");he(this,"Image");he(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined",this.tfjs={version:vd},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t&&t[0]){let n=t[0].match(/\(([^()]+)\)/g);this.platform=n&&n[0]?n[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){var s;this.backends=Object.keys(os().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&dr()==="wasm"&&(this.wasm.simd=await K().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let t=Qn(100,100),n=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof n!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(dr()==="webgl"||dr()==="humangl")){let r=Dr().gpgpu!=="undefined"?await Dr().getGPGPUContext().gl:null;r&&(this.webgl.version=r.getParameter(r.VERSION),this.webgl.renderer=r.getParameter(r.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu"),this.webgpu.supported&&(this.webgpu.adapter=(s=await navigator.gpu.requestAdapter())==null?void 0:s.name),this.kernels=da(dr()).map(r=>r.kernelName.toLowerCase())}async updateCPU(){var n;let t={model:"",flags:[]};if(this.node&&((n=this.platform)==null?void 0:n.startsWith("linux"))){let s=Oa("fs");try{let r=s.readFileSync("/proc/cpuinfo").toString();for(let a of r.split(`
`))a.startsWith("model name")&&(t.model=a.match(/:(.*)/g)[0].replace(":","").trim()),a.startsWith("flags")&&(t.flags=a.match(/:(.*)/g)[0].replace(":","").trim().split(" ").sort())}catch(r){}}this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},xe=new f0;var ib="2.4.0";var Qo;var D1e=Number.MAX_SAFE_INTEGER;async function l8(e){return xe.initial&&(Qo=null),Qo?e.debug&&oe("cached model:",Qo.modelUrl):(Qo=await at(lt(e.modelBasePath,e.face.agegenderrace.modelPath)),!Qo||!Qo.modelUrl?oe("load model failed:",e.face.agegenderrace.modelPath):e.debug&&oe("load model:",Qo.modelUrl)),Qo}var hn,m0=[],lb=Number.MAX_SAFE_INTEGER,u8=0;async function c8(e){var t,n;return xe.initial&&(hn=null),hn?e.debug&&oe("cached model:",hn.modelUrl):(hn=await at(lt(e.modelBasePath,((t=e.face.antispoof)==null?void 0:t.modelPath)||"")),!hn||!hn.modelUrl?oe("load model failed:",(n=e.face.antispoof)==null?void 0:n.modelPath):e.debug&&oe("load model:",hn.modelUrl)),hn}async function ub(e,t,n,s){var r;return hn?lb<(((r=t.face.antispoof)==null?void 0:r.skipFrames)||0)&&t.skipFrame&&u8===s&&m0[n]?(lb++,m0[n]):(lb=0,new Promise(async a=>{let o=$e.resizeBilinear(e,[(hn==null?void 0:hn.inputs[0].shape)?hn.inputs[0].shape[2]:0,(hn==null?void 0:hn.inputs[0].shape)?hn.inputs[0].shape[1]:0],!1),i=hn==null?void 0:hn.predict(o),l=(await i.data())[0];m0[n]=Math.round(100*l)/100,u8=s,Q([o,i]),a(m0[n])})):null}var Gr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},cb={count:468,mouth:13,symmetryLine:[13,Gr.midwayBetweenEyes[0]]},Dp={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},db=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],_p=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],$l=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var qge=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],Xge=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],Kge=[33,133,362,263,1,78,308],z1e=qge.map(e=>_p[e]),L1e=Xge.map(e=>_p[e]),B1e=Kge.map(e=>_p[e]);var d8=e=>({startPoint:De(e,[0,0],[-1,2]),endPoint:De(e,[0,2],[-1,2])});var Fp=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],g0=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2],pb=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],hb=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],p8=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s}},fb=(e,t,n)=>{let s=t.shape[1],r=t.shape[2];return $e.cropAndResize(t,[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]],[0],n)},Pp=(e,t=1.5)=>{let n=g0(e),s=Fp(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks}},Op=e=>{let t=g0(e),n=Fp(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks}},y0=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},A0=[[1,0,0],[0,1,0],[0,0,1]],Zge=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),Yge=(e,t)=>Zge(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var h8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Dl=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},Jge=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},f8=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Dl(e[r],Jge(t,a)))}return n},m8=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=h8(t[0],t[1]),o=f8(a,r),i=h8(-t[0],-t[1]);return f8(o,i)},Qge=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Dl(t[0],n),-Dl(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},e2e=(e,t)=>[Dl(e,t[0]),Dl(e,t[1])];function g8(e){let t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let c=r*(l+.5);for(let u=0;u<o;u++){let d=r*(u+.5);for(let p=0;p<i;p++)n.push([d,c])}}}return n}function y8(e,t,n,s,r){let a=Fp({startPoint:t.startPoint,endPoint:t.endPoint}),o=e.map(d=>[a[0]/r*(d[0]-r/2),a[1]/r*(d[1]-r/2),d[2]||0]),i=n!==0?m8(n,[0,0]):A0,l=n!==0?o.map(d=>[...e2e(d,i),d[2]]):o,c=n!==0?Qge(s):A0,u=[...g0({startPoint:t.startPoint,endPoint:t.endPoint}),1];return l.map(d=>[Math.round(d[0]+Dl(u,c[0])),Math.round(d[1]+Dl(u,c[1])),Math.round(d[2]||0)])}function mb(e,t,n){let s=e.landmarks.length>=cb.count?cb.symmetryLine:Dp.symmetryLine,r=Yge(e.landmarks[s[0]],e.landmarks[s[1]]),a=g0({startPoint:e.startPoint,endPoint:e.endPoint}),o=[a[0]/t.shape[2],a[1]/t.shape[1]],i=$e.rotateWithOffset(t,r,0,o),l=m8(-r,a),c=fb({startPoint:e.startPoint,endPoint:e.endPoint},i,[n,n]),u=fe(c,255);return Q(c),Q(i),[r,l,u]}var A8=6,Ws,gb=[],x8=null,Vs=0,Mp=()=>Vs;async function b8(e){var t,n;return xe.initial&&(Ws=null),Ws?e.debug&&oe("cached model:",Ws.modelUrl):(Ws=await at(lt(e.modelBasePath,((t=e.face.detector)==null?void 0:t.modelPath)||"")),!Ws||!Ws.modelUrl?oe("load model failed:",(n=e.face.detector)==null?void 0:n.modelPath):e.debug&&oe("load model:",Ws.modelUrl)),Vs=Ws.inputs[0].shape?Ws.inputs[0].shape[2]:0,Vs===-1&&(Vs=64),gb=g8(Vs),x8=hr(gb),Ws}function t2e(e){let t=De(e,[0,1],[-1,2]),n=le(t,x8),s=De(e,[0,3],[-1,2]),r=fe(s,Vs),a=fe(n,Vs),o=fe(r,2),i=Ae(a,o),l=le(a,o),c=B(i,Vs),u=B(l,Vs);return Du([c,u],1)}async function v8(e,t){var c,u,d,p;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return{boxes:[]};let[n,s,r]=j(()=>{let h=$e.resizeBilinear(e,[Vs,Vs]),f=Ae(fe(h,127.5),.5),m=Ws==null?void 0:Ws.execute(f),g;if(Array.isArray(m)){let b=m.sort((E,R)=>E.size-R.size),w=kt([b[0],b[2]],2),k=kt([b[1],b[3]],2),S=kt([k,w],1);g=dt(S,0)}else g=dt(m);let y=t2e(g),A=De(g,[0,0],[-1,1]),x=dt(is(A));return[g,y,x]}),a=await $e.nonMaxSuppressionAsync(s,r,((c=t.face.detector)==null?void 0:c.maxDetected)||0,((u=t.face.detector)==null?void 0:u.iouThreshold)||0,((d=t.face.detector)==null?void 0:d.minConfidence)||0),o=await a.array();Q(a);let i=[],l=await r.data();for(let h=0;h<o.length;h++){let f=l[o[h]];if(f>(((p=t.face.detector)==null?void 0:p.minConfidence)||0)){let m=De(s,[o[h],0],[1,-1]),g=j(()=>G(dt(De(n,[o[h],A8-1],[1,-1])),[A8,-1]));i.push({box:d8(m),landmarks:g,anchor:gb[o[h]],confidence:f}),Q(m)}}return Q(n),Q(s),Q(r),{boxes:i,scaleFactor:[e.shape[2]/Vs,e.shape[1]/Vs]}}var xb={};Bc(xb,{connected:()=>Ab,kpt:()=>yb});var yb=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPalm","rightPalm","leftIndex","rightIndex","leftPinky","rightPinky","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftThumb","leftHand","rightThumb","rightHand"],Ab={leftLeg:["leftHip","leftKnee","leftAnkle","leftHeel","leftFoot"],rightLeg:["rightHip","rightKnee","rightAnkle","rightHeel","rightFoot"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist","leftPalm"],rightArm:["rightShoulder","rightElbow","rightWrist","rightPalm"],leftHand:[],rightHand:[],head:[]};var w8={initial:!0},fn=[null,null],ei=[[0,0],[0,0]],bb=Number.MAX_SAFE_INTEGER,vb,x0=null,ti=[[0,0],[0,0],[0,0],[0,0]];async function k8(e){var t,n,s;if(w8.initial&&(fn[0]=null),!fn[0]&&((t=e.body.detector)==null?void 0:t.modelPath)){fn[0]=await at(lt(e.modelBasePath,((n=e.body.detector)==null?void 0:n.modelPath)||""));let r=Object.values(fn[0].modelSignature.inputs);ei[0][0]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[1].size):0,ei[0][1]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[2].size):0,!fn[0]||!fn[0].modelUrl?oe("load model failed:",(s=e.body.detector)==null?void 0:s.modelPath):e.debug&&oe("load model:",fn[0].modelUrl)}else e.debug&&fn[0]&&oe("cached model:",fn[0].modelUrl);return fn[0]}async function I8(e){var t;if(w8.initial&&(fn[1]=null),fn[1])e.debug&&oe("cached model:",fn[1].modelUrl);else{fn[1]=await at(lt(e.modelBasePath,e.body.modelPath||""));let n=Object.values(fn[1].modelSignature.inputs);ei[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,ei[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0,((t=e.body.modelPath)==null?void 0:t.includes("lite"))?vb=["ld_3d","output_segmentation","output_heatmap","world_3d","output_poseflag"]:vb=["Identity","Identity_2","Identity_3","Identity_4","Identity_1"],!fn[1]||!fn[1].modelUrl?oe("load model failed:",e.body.modelPath):e.debug&&oe("load model:",fn[1].modelUrl)}return fn[1]}function n2e(e,t){let n=e.map(o=>o.position[0]),s=e.map(o=>o.position[1]),r=[Math.min(...n),Math.min(...s),Math.max(...n)-Math.min(...n),Math.max(...s)-Math.min(...s)],a=[r[0]/t[0],r[1]/t[1],r[2]/t[0],r[3]/t[1]];return{keypointsBox:r,keypointsBoxRaw:a}}async function s2e(e){let t={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;ti=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],t.pad=Fs(e,ti),t.resize=$e.resizeBilinear(t.pad,[ei[1][0],ei[1][1]]);let n=fe(t.resize,255);return Object.keys(t).forEach(s=>Q(t[s])),n}function r2e(e,t){for(let n of e)n.position=[n.position[0]*(t[0]+ti[2][0]+ti[2][1])/t[0]-ti[2][0],n.position[1]*(t[1]+ti[1][0]+ti[1][1])/t[1]-ti[1][0],n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],n.position[2]];return e}var S8=e=>1-1/(1+Math.exp(e));async function a2e(e,t,n){var h;let s={};s.input=await s2e(e),[s.ld,s.segmentation,s.heatmap,s.world,s.poseflag]=await((h=fn[1])==null?void 0:h.execute(s.input,vb));let r=(await s.poseflag.data())[0],a=Math.max(0,(r-.8)/(1-.8)),o=await s.ld.data(),i=[],l=5;for(let f=0;f<o.length/l;f++){let m=S8(o[l*f+3]),g=S8(o[l*f+4]),y=Math.trunc(100*m*g*a)/100,A=[o[l*f+0]/ei[1][0],o[l*f+1]/ei[1][1],o[l*f+2]+0],x=[Math.trunc(n[0]*A[0]),Math.trunc(n[1]*A[1]),A[2]];i.push({part:yb[f],positionRaw:A,position:x,score:y})}if(a<(t.body.minConfidence||0))return null;let c=r2e(i,n),u=n2e(c,[n[0],n[1]]);Object.keys(s).forEach(f=>Q(s[f]));let d={};for(let[f,m]of Object.entries(Ab)){let g=[];for(let y=0;y<m.length-1;y++){let A=c.find(b=>b.part===m[y]),x=c.find(b=>b.part===m[y+1]);A&&x&&A.score>(t.body.minConfidence||0)&&x.score>(t.body.minConfidence||0)&&g.push([A.position,x.position])}d[f]=g}return{id:0,score:Math.trunc(100*a)/100,box:u.keypointsBox,boxRaw:u.keypointsBoxRaw,keypoints:c,annotations:d}}async function wb(e,t){let n=[e.shape[2]||0,e.shape[1]||0];return bb<(t.body.skipFrames||0)&&t.skipFrame&&x0!==null?bb++:(x0=await a2e(e,t,n),bb=0),x0?[x0]:[]}var vc=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var sr,_l=0,b0=[],kb=Number.MAX_SAFE_INTEGER;async function C8(e){if(xe.initial&&(sr=null),sr)e.debug&&oe("cached model:",sr.modelUrl);else{wc(["floormod"],e),sr=await at(lt(e.modelBasePath,e.object.modelPath||""));let t=Object.values(sr.modelSignature.inputs);_l=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!sr||!sr.modelUrl?oe("load model failed:",e.object.modelPath):e.debug&&oe("load model:",sr.modelUrl)}return sr}async function o2e(e,t,n){if(!e)return[];let s=[],r=await e.array(),a=dt(e);Q(e);let o=vn(a,6,1);Q(a);let i=En([o[1],o[0],o[3],o[2]],1),l=dt(i);Q(i);let c=dt(o[4]),u=dt(o[5]);o.forEach(f=>Q(f));let d=await $e.nonMaxSuppressionAsync(l,c,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);Q(l),Q(c),Q(u);let p=await d.data();Q(d);let h=0;for(let f of p){let m=Math.trunc(100*r[0][f][4])/100,g=r[0][f][5],y=vc[g].label,[A,x]=[r[0][f][0]/_l,r[0][f][1]/_l],b=[A,x,r[0][f][2]/_l-A,r[0][f][3]/_l-x],w=[Math.trunc(b[0]*t[0]),Math.trunc(b[1]*t[1]),Math.trunc(b[2]*t[0]),Math.trunc(b[3]*t[1])];s.push({id:h++,score:m,class:g,label:y,box:w,boxRaw:b})}return s}async function Ib(e,t){return kb<(t.object.skipFrames||0)&&t.skipFrame&&b0.length>0?(kb++,b0):(kb=0,!xe.kernels.includes("mod")||!xe.kernels.includes("sparsetodense")?b0:new Promise(async n=>{let s=[e.shape[2],e.shape[1]],r=$e.resizeBilinear(e,[_l,_l]),a=t.object.enabled?sr==null?void 0:sr.execute(r,["tower_0/detections"]):null;Q(r);let o=await o2e(a,s,t);b0=o,n(o)}))}var Tb={};Bc(Tb,{connected:()=>Cb,kpt:()=>Sb});var Sb=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],Cb={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var mn,es={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},Nb=Number.MAX_SAFE_INTEGER;async function Eb(e){return xe.initial&&(mn=null),mn?e.debug&&oe("cached model:",mn.modelUrl):(mn=await at(lt(e.modelBasePath,e.body.modelPath||"")),!mn||!mn.modelUrl?oe("load model failed:",e.body.modelPath):e.debug&&oe("load model:",mn.modelUrl)),mn}function i2e(e,t){let[n,s]=e.shape;return j(()=>{let r=(i,l)=>Ae(i,B(fe(i,Ee(l,"int32")),Ee(l,"int32"))),a=G(e,[s*n]),o=Gn(a,0).dataSync()[0];if(o>t){let i=Ds(a,0),l=r(i,n).dataSync()[0],c=fe(i,Ee(n,"int32")).dataSync()[0];return[l,c,o]}return[0,0,o]})}async function Rb(e,t){var n;return Nb<(((n=t.body)==null?void 0:n.skipFrames)||0)&&t.skipFrame&&Object.keys(es.keypoints).length>0?(Nb++,[es]):(Nb=0,new Promise(async s=>{var u;let r=j(()=>{if(!(mn==null?void 0:mn.inputs[0].shape))return null;let d=$e.resizeBilinear(e,[mn.inputs[0].shape[2],mn.inputs[0].shape[1]],!1);return B(d,2).sub(1)}),a;if(t.body.enabled&&(a=await(mn==null?void 0:mn.predict(r))),Q(r),a){es.keypoints.length=0;let d=a.squeeze();Q(a);let p=d.unstack(2);Q(d);for(let h=0;h<p.length;h++){let[f,m,g]=i2e(p[h],t.body.minConfidence);g>(((u=t.body)==null?void 0:u.minConfidence)||0)&&es.keypoints.push({score:Math.round(100*g)/100,part:Sb[h],positionRaw:[f/mn.inputs[0].shape[2],m/mn.inputs[0].shape[1]],position:[Math.round(e.shape[2]*f/mn.inputs[0].shape[2]),Math.round(e.shape[1]*m/mn.inputs[0].shape[1])]})}p.forEach(h=>Q(h))}es.score=es.keypoints.reduce((d,p)=>p.score>d?p.score:d,0);let o=es.keypoints.map(d=>d.position[0]),i=es.keypoints.map(d=>d.position[1]);es.box=[Math.min(...o),Math.min(...i),Math.max(...o)-Math.min(...o),Math.max(...i)-Math.min(...i)];let l=es.keypoints.map(d=>d.positionRaw[0]),c=es.keypoints.map(d=>d.positionRaw[1]);es.boxRaw=[Math.min(...l),Math.min(...c),Math.max(...l)-Math.min(...l),Math.max(...c)-Math.min(...c)];for(let[d,p]of Object.entries(Cb)){let h=[];for(let f=0;f<p.length-1;f++){let m=es.keypoints.find(y=>y.part===p[f]),g=es.keypoints.find(y=>y.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}es.annotations[d]=h}s([es])}))}var l2e=["angry","disgust","fear","happy","sad","surprise","neutral"],gn,v0=[],T8=0,$b=Number.MAX_SAFE_INTEGER,Db=[.2989,.587,.114];async function N8(e){var t,n;return xe.initial&&(gn=null),gn?e.debug&&oe("cached model:",gn.modelUrl):(gn=await at(lt(e.modelBasePath,((t=e.face.emotion)==null?void 0:t.modelPath)||"")),!gn||!gn.modelUrl?oe("load model failed:",(n=e.face.emotion)==null?void 0:n.modelPath):e.debug&&oe("load model:",gn.modelUrl)),gn}async function _b(e,t,n,s){var r;return gn?$b<(((r=t.face.emotion)==null?void 0:r.skipFrames)||0)&&t.skipFrame&&T8===s&&v0[n]&&v0[n].length>0?($b++,v0[n]):($b=0,new Promise(async a=>{var g,y;let o=$e.resizeBilinear(e,[(gn==null?void 0:gn.inputs[0].shape)?gn.inputs[0].shape[2]:0,(gn==null?void 0:gn.inputs[0].shape)?gn.inputs[0].shape[1]:0],!1),[i,l,c]=vn(o,3,3);Q(o);let u=B(i,Db[0]),d=B(l,Db[1]),p=B(c,Db[2]);Q(i),Q(l),Q(c);let h=pf([u,d,p]);Q(u),Q(d),Q(p);let f=j(()=>B(Ae(h,.5),2));Q(h);let m=[];if((g=t.face.emotion)==null?void 0:g.enabled){let A=await(gn==null?void 0:gn.predict(f)),x=await A.data();Q(A);for(let b=0;b<x.length;b++)x[b]>(((y=t.face.emotion)==null?void 0:y.minConfidence)||0)&&m.push({score:Math.min(.99,Math.trunc(100*x[b])/100),emotion:l2e[b]});m.sort((b,w)=>w.score-b.score)}Q(f),v0[n]=m,T8=s,a(m)})):null}var rr,ni=0,u2e=2.3,Fb=Gr.leftEyeLower0,Pb=Gr.rightEyeLower0,kc={leftBounds:[Fb[0],Fb[Fb.length-1]],rightBounds:[Pb[0],Pb[Pb.length-1]]},Ic={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function E8(e){var t,n;return xe.initial&&(rr=null),rr?e.debug&&oe("cached model:",rr.modelUrl):(rr=await at(lt(e.modelBasePath,((t=e.face.iris)==null?void 0:t.modelPath)||"")),!rr||!rr.modelUrl?oe("load model failed:",(n=e.face.iris)==null?void 0:n.modelPath):e.debug&&oe("load model:",rr.modelUrl)),ni=rr.inputs[0].shape?rr.inputs[0].shape[2]:0,ni===-1&&(ni=64),rr}function w0(e,t,n,s){for(let r=0;r<db.length;r++){let{key:a,indices:o}=db[r],i=Gr[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let c=o[l];e[i[l]]=[t[c][0],t[c][1],(t[c][2]+e[i[l]][2])/2]}}}var c2e=e=>{let t=e[kc.leftBounds[0]][2],n=e[kc.rightBounds[0]][2];return t-n},R8=(e,t,n,s,r=!1,a)=>{let o=Op(Pp(y0([e[n],e[s]]),u2e)),i=Fp(o),l=$e.cropAndResize(t,[[o.startPoint[1]/a,o.startPoint[0]/a,o.endPoint[1]/a,o.endPoint[0]/a]],[0],[ni,ni]);if(r&&xe.kernels.includes("flipleftright")){let c=$e.flipLeftRight(l);Q(l),l=c}return{box:o,boxSize:i,crop:l}},$8=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<Ic.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/ni:o/ni)*n[0]+t.startPoint[0],i/ni*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(Ic.index)}},D8=(e,t,n)=>{let s=e[Gr[`${n}EyeUpper0`][Ic.upperCenter]][2],r=e[Gr[`${n}EyeLower0`][Ic.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function _8(e,t,n,s){if(!rr)return n.debug&&oe("face mesh iris detection requested, but model is not loaded"),e;let{box:r,boxSize:a,crop:o}=R8(e,t,kc.leftBounds[0],kc.leftBounds[1],!0,s),{box:i,boxSize:l,crop:c}=R8(e,t,kc.rightBounds[0],kc.rightBounds[1],!0,s),u=kt([o,c]);Q(o),Q(c);let d=rr.predict(u);Q(u);let p=await d.data();Q(d);let h=p.slice(0,Ic.numCoordinates*3),{rawCoords:f,iris:m}=$8(h,r,a,!0),g=p.slice(Ic.numCoordinates*3),{rawCoords:y,iris:A}=$8(g,i,l),x=c2e(e);Math.abs(x)<30?(w0(e,f,"left",null),w0(e,y,"right",null)):x<1?w0(e,f,"left",["EyeUpper0","EyeLower0"]):w0(e,y,"right",["EyeUpper0","EyeLower0"]);let b=D8(e,m,"left"),w=D8(e,A,"right");return e.concat(b).concat(w)}var Hr=[],ar=null,kr=0,Ob=Number.MAX_SAFE_INTEGER,F8=0;async function P8(e,t){var a,o,i,l,c,u,d,p,h,f,m,g;if(!t.skipFrame||(F8!==((a=t.face.detector)==null?void 0:a.maxDetected)||!((o=t.face.mesh)==null?void 0:o.enabled))&&Ob>(((i=t.face.detector)==null?void 0:i.skipFrames)||0)){let y=await v8(e,t);Hr=[];for(let A of y.boxes){let x=await A.box.startPoint.data(),b=await A.box.endPoint.data(),w=await A.landmarks.array();Hr.push({startPoint:x,endPoint:b,landmarks:w,confidence:A.confidence})}y.boxes.forEach(A=>Q([A.box.startPoint,A.box.endPoint,A.landmarks]));for(let A=0;A<Hr.length;A++){let x=p8({startPoint:Hr[A].startPoint,endPoint:Hr[A].endPoint},y.scaleFactor),b=Pp(x),w=Op(b);Hr[A]={...w,confidence:Hr[A].confidence,landmarks:Hr[A].landmarks}}Ob=0}else Ob++;let n=[],s=[],r=0;for(let y of Hr){let A=0,x,b={id:r++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if(((l=t.face.detector)==null?void 0:l.rotation)&&((c=t.face.mesh)==null?void 0:c.enabled)&&xe.kernels.includes("rotatewithoffset"))[A,x,b.tensor]=mb(y,e,kr);else{x=A0;let w=fb({startPoint:y.startPoint,endPoint:y.endPoint},e,((u=t.face.mesh)==null?void 0:u.enabled)?[kr,kr]:[Mp(),Mp()]);b.tensor=fe(w,255),Q(w)}if(b.boxScore=Math.round(100*y.confidence)/100,(d=t.face.mesh)==null?void 0:d.enabled)if(!ar)t.debug&&oe("face mesh detection requested, but model is not loaded");else{let[w,k,S]=ar.execute(b.tensor);Q(w);let E=(await k.data())[0];Q(k);let R=G(S,[-1,3]),P=await R.array();if(Q(S),Q(R),E<(((p=t.face.detector)==null?void 0:p.minConfidence)||1))y.confidence=E;else{((h=t.face.iris)==null?void 0:h.enabled)&&(P=await _8(P,b.tensor,t,kr)),b.mesh=y8(P,y,A,x,kr),b.meshRaw=b.mesh.map($=>[$[0]/(e.shape[2]||0),$[1]/(e.shape[1]||0),($[2]||0)/kr]),y={...Pp(y0(b.mesh),1.5),confidence:y.confidence};for(let $ of Object.keys(Gr))b.annotations[$]=Gr[$].map(D=>b.mesh[D]);((f=t.face.detector)==null?void 0:f.rotation)&&t.face.mesh.enabled&&((m=t.face.description)==null?void 0:m.enabled)&&xe.kernels.includes("rotatewithoffset")&&(Q(b.tensor),[A,x,b.tensor]=mb(y,e,kr)),b.box=pb(y,e),b.boxRaw=hb(y,e),b.score=Math.round(100*E||100*y.confidence||0)/100,b.faceScore=Math.round(100*E)/100,y={...Op(y),confidence:y.confidence,faceConfidence:E}}}else{b.box=pb(y,e),b.boxRaw=hb(y,e),b.score=Math.round(100*y.confidence||0)/100,b.mesh=y.landmarks.map(w=>[(y.startPoint[0]+y.endPoint[0])/2+(y.endPoint[0]+y.startPoint[0])*w[0]/Mp(),(y.startPoint[1]+y.endPoint[1])/2+(y.endPoint[1]+y.startPoint[1])*w[1]/Mp()]),b.meshRaw=b.mesh.map(w=>[w[0]/(e.shape[2]||0),w[1]/(e.shape[1]||0),(w[2]||0)/kr]);for(let w of Object.keys(Dp))b.annotations[w]=[b.mesh[Dp[w]]]}n.push(b),s.push(y)}return((g=t.face.mesh)==null?void 0:g.enabled)&&(Hr=s.filter(y=>{var A;return y.confidence>(((A=t.face.detector)==null?void 0:A.minConfidence)||0)})),F8=n.length,n}async function O8(e){var t,n;return xe.initial&&(ar=null),ar?e.debug&&oe("cached model:",ar.modelUrl):(ar=await at(lt(e.modelBasePath,((t=e.face.mesh)==null?void 0:t.modelPath)||"")),!ar||!ar.modelUrl?oe("load model failed:",(n=e.face.mesh)==null?void 0:n.modelPath):e.debug&&oe("load model:",ar.modelUrl)),kr=ar.inputs[0].shape?ar.inputs[0].shape[2]:0,kr===-1&&(kr=64),ar}var M8=$l,z8=_p;var ts,k0=[],L8=0,Mb=Number.MAX_SAFE_INTEGER;async function B8(e){var n,s;let t=lt(e.modelBasePath,((n=e.face.description)==null?void 0:n.modelPath)||"");return xe.initial&&(ts=null),ts?e.debug&&oe("cached model:",t):(ts=await at(t),ts?e.debug&&oe("load model:",t):oe("load model failed:",((s=e.face.description)==null?void 0:s.modelPath)||"")),ts}function zb(e){return j(()=>{let n=e.image||e.tensor||e;if(!(n instanceof Ze))return null;let s=[[.05,.15,.85,.85]];if(!(ts==null?void 0:ts.inputs[0].shape))return null;let r=n.shape.length===3?$e.cropAndResize(Xt(n,0),s,[0],[ts.inputs[0].shape[2],ts.inputs[0].shape[1]]):$e.cropAndResize(n,s,[0],[ts.inputs[0].shape[2],ts.inputs[0].shape[1]]);return B(r,255)})}async function Lb(e,t,n,s){var r,a,o;return ts?Mb<(((r=t.face.description)==null?void 0:r.skipFrames)||0)&&t.skipFrame&&L8===s&&((a=k0[n])==null?void 0:a.age)&&((o=k0[n])==null?void 0:o.age)>0?(Mb++,k0[n]):(Mb=0,new Promise(async i=>{var d,p;let l=zb(e),c,u={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(((d=t.face.description)==null?void 0:d.enabled)&&(c=await(ts==null?void 0:ts.predict(l))),Q(l),c){let h=await c.find(b=>b.shape[1]===1).data(),f=Math.trunc(200*Math.abs(h[0]-.5))/100;f>(((p=t.face.description)==null?void 0:p.minConfidence)||0)&&(u.gender=h[0]<=.5?"female":"male",u.genderScore=Math.min(.99,f));let m=Ds(c.find(b=>b.shape[1]===100),1),g=(await m.data())[0];Q(m);let y=await c.find(b=>b.shape[1]===100).data();u.age=Math.round(y[g-1]>y[g+1]?10*g-100*y[g-1]:10*g+100*y[g+1])/10;let x=await c.find(b=>b.shape[1]===1024).data();u.descriptor=[...x],c.forEach(b=>Q(b))}k0[n]=u,L8=s,i(u)})):null}function I0(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function zp(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function W8(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return $e.cropAndResize(t,a,[0],n)}function V8(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function S0(e,t=1.5){let n=zp(e),s=I0(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function C0(e){let t=zp(e),n=I0(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function d2e(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function U8(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return d2e(n)}var G8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function si(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function p2e(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function H8(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(si(e[r],p2e(t,a)))}return n}function Bb(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=G8(t[0],t[1]),o=H8(a,r),i=G8(-t[0],-t[1]);return H8(o,i)}function j8(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-si(t[0],n),-si(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function Wb(e,t){return[si(e,t[0]),si(e,t[1])]}var q8=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var Vb=class{constructor(t){he(this,"model");he(this,"anchors");he(this,"anchorsTensor");he(this,"inputSize");he(this,"inputSizeTensor");he(this,"doubleInputSizeTensor");this.model=t,this.anchors=q8.map(n=>[n.x,n.y]),this.anchorsTensor=hr(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=tn([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=tn([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){return j(()=>{let n=De(t,[0,0],[-1,2]),s=De(t,[0,2],[-1,2]),r=le(fe(n,this.inputSizeTensor),this.anchorsTensor),a=fe(s,this.doubleInputSizeTensor),o=B(Ae(r,a),this.inputSizeTensor),i=B(le(r,a),this.inputSizeTensor);return Du([o,i],1)})}normalizeLandmarks(t,n){return j(()=>{let s=le(fe(G(t,[-1,7,2]),this.inputSizeTensor),this.anchors[n]);return B(s,this.inputSizeTensor)})}async getBoxes(t,n){let s={};s.batched=this.model.predict(t),s.predictions=dt(s.batched),s.scores=j(()=>dt(is(De(s.predictions,[0,0],[-1,1]))));let r=await s.scores.data();s.boxes=De(s.predictions,[0,1],[-1,4]),s.norm=this.normalizeBoxes(s.boxes),s.nms=await $e.nonMaxSuppressionAsync(s.norm,s.scores,3*n.hand.maxDetected,n.hand.iouThreshold,n.hand.minConfidence);let a=await s.nms.array(),o=[];for(let i of a){let l=De(s.norm,[i,0],[1,-1]),c=j(()=>G(this.normalizeLandmarks(De(s.predictions,[i,5],[1,14]),i),[-1,2]));o.push({box:l,palmLandmarks:c,confidence:r[i]})}for(let i of Object.keys(s))Q(s[i]);return o}async estimateHandBounds(t,n){let s=t.shape[1],r=t.shape[2],a=j(()=>Ae(fe($e.resizeBilinear(t,[this.inputSize,this.inputSize]),127.5),1)),o=await this.getBoxes(a,n);Q(a);let i=[];if(!o||o.length===0)return i;for(let l of o){let c=await l.box.data(),u=c.slice(0,2),d=c.slice(2,4),p=await l.palmLandmarks.array();Q(l.box),Q(l.palmLandmarks),i.push(V8({startPoint:u,endPoint:d,palmLandmarks:p,confidence:l.confidence},[r/this.inputSize,s/this.inputSize]))}return i}};var h2e=5,X8=1.65,K8=[0,5,9,13,17,1,2],f2e=0,m2e=2,Ub=class{constructor(t,n){he(this,"handDetector");he(this,"handPoseModel");he(this,"inputSize");he(this,"storedBoxes");he(this,"skipped");he(this,"detectedHands");this.handDetector=t,this.handPoseModel=n,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=0,this.detectedHands=0}calculateLandmarksBoundingBox(t){let n=t.map(o=>o[0]),s=t.map(o=>o[1]),r=[Math.min(...n),Math.min(...s)],a=[Math.max(...n),Math.max(...s)];return{startPoint:r,endPoint:a}}getBoxForPalmLandmarks(t,n){let s=t.map(a=>Wb([...a,1],n)),r=this.calculateLandmarksBoundingBox(s);return S0(C0(r),h2e)}getBoxForHandLandmarks(t){let n=this.calculateLandmarksBoundingBox(t),s=S0(C0(n),X8);s.palmLandmarks=[];for(let r=0;r<K8.length;r++)s.palmLandmarks.push(t[K8[r]].slice(0,2));return s}transformRawCoords(t,n,s,r){let a=I0(n),o=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=t.map(h=>[o[0]*(h[0]-this.inputSize/2),o[1]*(h[1]-this.inputSize/2),o[2]*h[2]]),l=Bb(s,[0,0]),c=i.map(h=>[...Wb(h,l),h[2]]),u=j8(r),d=[...zp(n),1],p=[si(d,u[0]),si(d,u[1])];return c.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2])])}async estimateHands(t,n){let s=!1,r;(this.skipped===0||this.skipped>n.hand.skipFrames||!n.hand.landmarks||!n.skipFrame)&&(r=await this.handDetector.estimateHandBounds(t,n),this.skipped=0),n.skipFrame&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==n.hand.maxDetected||!n.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(s=!0));let a=[];for(let o=0;o<this.storedBoxes.length;o++){let i=this.storedBoxes[o];if(!!i)if(n.hand.landmarks){let l=n.hand.rotation?U8(i.palmLandmarks[f2e],i.palmLandmarks[m2e]):0,c=zp(i),u=[c[0]/t.shape[2],c[1]/t.shape[1]],d=n.hand.rotation&&xe.kernels.includes("rotatewithoffset")?$e.rotateWithOffset(t,l,0,u):t.clone(),p=Bb(-l,c),h=s?this.getBoxForPalmLandmarks(i.palmLandmarks,p):i,f=W8(h,d,[this.inputSize,this.inputSize]),m=fe(f,255);Q(f),Q(d);let[g,y]=await this.handPoseModel.predict(m);Q(m);let A=(await g.data())[0];if(Q(g),A>=n.hand.minConfidence/4){let x=G(y,[-1,3]),b=await x.array();Q(y),Q(x);let w=this.transformRawCoords(b,h,l,p),k=this.getBoxForHandLandmarks(w);this.storedBoxes[o]={...k,confidence:A};let S={landmarks:w,confidence:A,boxConfidence:i.confidence,fingerConfidence:A,box:{topLeft:k.startPoint,bottomRight:k.endPoint}};a.push(S)}else this.storedBoxes[o]=null;Q(y)}else{let l=S0(C0(i),X8),c={confidence:i.confidence,boxConfidence:i.confidence,fingerConfidence:0,box:{topLeft:l.startPoint,bottomRight:l.endPoint},landmarks:[]};a.push(c)}}return this.storedBoxes=this.storedBoxes.filter(o=>o!==null),this.detectedHands=a.length,a.length>n.hand.maxDetected&&(a.length=n.hand.maxDetected),a}};var Je={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>Je.nameMapping[e],getPoints:e=>Je.pointsMapping[e]},fs={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>fs.nameMapping[e]},Ye={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Ye.nameMapping[e]},T0=class{constructor(t){he(this,"name");he(this,"curls");he(this,"directions");he(this,"weights");he(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}addCurl(t,n,s){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([n,s])}addDirection(t,n,s){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([n,s])}setWeight(t,n){this.weights[t]=n;let s=this.weights.reduce((r,a)=>r+a,0);this.weightsRelative=this.weights.map(r=>r*5/s)}matchAgainst(t,n){let s=0;for(let r in t){let a=t[r],o=this.curls[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}for(let r in n){let a=n[r],o=this.directions[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}return s/10}};var ri=new T0("thumbs up");ri.addCurl(Je.thumb,fs.none,1);ri.addDirection(Je.thumb,Ye.verticalUp,1);ri.addDirection(Je.thumb,Ye.diagonalUpLeft,.25);ri.addDirection(Je.thumb,Ye.diagonalUpRight,.25);for(let e of[Je.index,Je.middle,Je.ring,Je.pinky])ri.addCurl(e,fs.full,1),ri.addDirection(e,Ye.horizontalLeft,1),ri.addDirection(e,Ye.horizontalRight,1);var an=new T0("victory");an.addCurl(Je.thumb,fs.half,.5);an.addCurl(Je.thumb,fs.none,.5);an.addDirection(Je.thumb,Ye.verticalUp,1);an.addDirection(Je.thumb,Ye.diagonalUpLeft,1);an.addCurl(Je.index,fs.none,1);an.addDirection(Je.index,Ye.verticalUp,.75);an.addDirection(Je.index,Ye.diagonalUpLeft,1);an.addCurl(Je.middle,fs.none,1);an.addDirection(Je.middle,Ye.verticalUp,1);an.addDirection(Je.middle,Ye.diagonalUpLeft,.75);an.addCurl(Je.ring,fs.full,1);an.addDirection(Je.ring,Ye.verticalUp,.2);an.addDirection(Je.ring,Ye.diagonalUpLeft,1);an.addDirection(Je.ring,Ye.horizontalLeft,.2);an.addCurl(Je.pinky,fs.full,1);an.addDirection(Je.pinky,Ye.verticalUp,.2);an.addDirection(Je.pinky,Ye.diagonalUpLeft,1);an.addDirection(Je.pinky,Ye.horizontalLeft,.2);an.setWeight(Je.index,2);an.setWeight(Je.middle,2);var Z8=[ri,an];var g2e=.7,Fl={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function Y8(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function J8(e,t){if(!e||!t)return[0,0];let n=Y8(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=Y8(e[1],e[2],t[1],t[2]);return[n,s]}function Q8(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function y2e(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],c=e[2]-t[2],u=e[2]-n[2],d=t[2]-n[2],p=Math.sqrt(s*s+o*o+c*c),h=Math.sqrt(r*r+i*i+u*u),f=Math.sqrt(a*a+l*l+d*d),m=(f*f+p*p-h*h)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>Fl.NO_CURL_START_LIMIT?y=fs.none:g>Fl.HALF_CURL_START_LIMIT?y=fs.half:y=fs.full,y}function eT(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=Ye.horizontalLeft:r=Ye.horizontalRight:s===Math.abs(t)?t>0?r=Ye.horizontalLeft:r=Ye.horizontalRight:n>0?r=Ye.horizontalLeft:r=Ye.horizontalRight,r}function tT(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=Ye.verticalDown:r=Ye.verticalUp:s===Math.abs(t)?t<0?r=Ye.verticalDown:r=Ye.verticalUp:n<0?r=Ye.verticalDown:r=Ye.verticalUp,r}function A2e(e,t,n,s,r,a,o,i){let l,c=tT(e,t,n,s),u=eT(r,a,o,i);return c===Ye.verticalUp?u===Ye.horizontalLeft?l=Ye.diagonalUpLeft:l=Ye.diagonalUpRight:u===Ye.horizontalLeft?l=Ye.diagonalDownLeft:l=Ye.diagonalDownRight,l}function x2e(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],c=t[1]-n[1],u=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),d=Math.max(Math.abs(i),Math.abs(l),Math.abs(c)),p=0,h=0,f=0,m=d/(u+1e-5);m>1.5?p+=Fl.DISTANCE_VOTE_POWER:m>.66?h+=Fl.DISTANCE_VOTE_POWER:f+=Fl.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),y=Math.sqrt(a*a+l*l),A=Math.sqrt(o*o+c*c),x=Math.max(g,y,A),b=e[0],w=e[1],k=n[0],S=n[1];x===g?(k=n[0],S=n[1]):x===A&&(b=t[0],w=t[1]);let P=J8([b,w],[k,S]),$=Q8(P,Fl.TOTAL_ANGLE_VOTE_POWER);p+=$[0],h+=$[1],f+=$[2];for(let T of s){let O=Q8(T,Fl.SINGLE_ANGLE_VOTE_POWER);p+=O[0],h+=O[1],f+=O[2]}let D;return p===Math.max(p,h,f)?D=tT(l,i,c,d):f===Math.max(h,f)?D=eT(a,r,o,u):D=A2e(l,i,c,d,a,r,o,u),D}function nT(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of Je.all){let o=Je.getPoints(a),i=[],l=[];for(let c of o){let u=e[c[0]],d=e[c[1]],p=J8(u,d),h=p[0],f=p[1];i.push(h),l.push(f)}t.push(i),n.push(l)}for(let a of Je.all){let o=a===Je.thumb?1:0,i=Je.getPoints(a),l=e[i[o][0]],c=e[i[o+1][1]],u=e[i[3][1]],d=y2e(l,c,u),p=x2e(l,c,u,t[a].slice(o));s[a]=d,r[a]=p}return{curls:s,directions:r}}function N0(e){if(!e||e.length===0)return null;let t=nT(e),n={};for(let s of Je.all)n[Je.getName(s)]={curl:fs.getName(t.curls[s]),direction:Ye.getName(t.directions[s])};return n}function sT(e){let t=[];if(!e||e.length===0)return t;let n=nT(e);for(let s of Z8){let r=s.matchAgainst(n.curls,n.directions);r>=g2e&&t.push({name:s.name,confidence:r})}return t}var rT={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},Sa,Ca,aT;async function Gb(e,t){let n=await aT.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let u of Object.keys(rT))a[u]=rT[u].map(d=>n[r].landmarks[d]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let u of o)u[0]<i[0]&&(i[0]=u[0]),u[1]<i[1]&&(i[1]=u[1]),u[0]>i[2]&&(i[2]=u[0]),u[1]>i[3]&&(i[3]=u[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let c=N0(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:c})}return s}async function Hb(e){var n,s,r,a,o,i;xe.initial&&(Sa=null,Ca=null),!Sa||!Ca?([Sa,Ca]=await Promise.all([e.hand.enabled?at(lt(e.modelBasePath,((n=e.hand.detector)==null?void 0:n.modelPath)||""),{fromTFHub:(((s=e.hand.detector)==null?void 0:s.modelPath)||"").includes("tfhub.dev")}):null,e.hand.landmarks?at(lt(e.modelBasePath,((r=e.hand.skeleton)==null?void 0:r.modelPath)||""),{fromTFHub:(((a=e.hand.skeleton)==null?void 0:a.modelPath)||"").includes("tfhub.dev")}):null]),e.hand.enabled&&(!Sa||!Sa.modelUrl?oe("load model failed:",((o=e.hand.detector)==null?void 0:o.modelPath)||""):e.debug&&oe("load model:",Sa.modelUrl),!Ca||!Ca.modelUrl?oe("load model failed:",((i=e.hand.skeleton)==null?void 0:i.modelPath)||""):e.debug&&oe("load model:",Ca.modelUrl))):(e.debug&&oe("cached model:",Sa.modelUrl),e.debug&&oe("cached model:",Ca.modelUrl));let t=new Vb(Sa);return aT=new Ub(t,Ca),[Sa,Ca]}function Pl(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function oT(e,t=[1,1]){let n=[e.map(c=>c[0]),e.map(c=>c[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function E0(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}function jb(e){return[Math.max(0,e[1]),Math.max(0,e[0]),Math.min(1,e[3]+e[1]),Math.min(1,e[2]+e[0])]}var Rt=[null,null],b2e=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ai=[[0,0],[0,0]],v2e=["hand","fist","pinch","point","face","tip","pinchtip"],iT=4,lT=1.6,w2e=512,k2e=1.4,R0=0,Ta=[0,0],Jt={boxes:[],hands:[]},uT={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function cT(e){var t,n;if(xe.initial&&(Rt[0]=null),Rt[0])e.debug&&oe("cached model:",Rt[0].modelUrl);else{wc(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Rt[0]=await at(lt(e.modelBasePath,((t=e.hand.detector)==null?void 0:t.modelPath)||""));let s=Object.values(Rt[0].modelSignature.inputs);ai[0][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,ai[0][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Rt[0]||!Rt[0].modelUrl?oe("load model failed:",(n=e.hand.detector)==null?void 0:n.modelPath):e.debug&&oe("load model:",Rt[0].modelUrl)}return Rt[0]}async function dT(e){var t,n;if(xe.initial&&(Rt[1]=null),Rt[1])e.debug&&oe("cached model:",Rt[1].modelUrl);else{Rt[1]=await at(lt(e.modelBasePath,((t=e.hand.skeleton)==null?void 0:t.modelPath)||""));let s=Object.values(Rt[1].modelSignature.inputs);ai[1][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,ai[1][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Rt[1]||!Rt[1].modelUrl?oe("load model failed:",(n=e.hand.skeleton)==null?void 0:n.modelPath):e.debug&&oe("load model:",Rt[1].modelUrl)}return Rt[1]}async function I2e(e,t){let n=[];if(!e||!Rt[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,w2e),o=Math.round(a*r/8)*8;s.resize=$e.resizeBilinear(e,[a,o]),s.cast=de(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await Rt[0].executeAsync(s.cast,b2e),s.boxes=dt(s.rawBoxes,[0,2]),s.scores=dt(s.rawScores,[0]);let i=Hn(s.scores,1);Q(i[iT]),i.splice(iT,1),s.filtered=En(i,1),Q(i),s.max=Gn(s.filtered,1),s.argmax=Ds(s.filtered,1);let l=0;s.nms=await $e.nonMaxSuppressionAsync(s.boxes,s.max,t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);let c=await s.nms.data(),u=await s.max.data(),d=await s.argmax.data();for(let p of Array.from(c)){let h=De(s.boxes,p,1),f=await h.data();Q(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=E0(m,k2e),y=jb(g),A=[Math.trunc(m[0]*Ta[0]),Math.trunc(m[1]*Ta[1]),Math.trunc(m[2]*Ta[0]),Math.trunc(m[3]*Ta[1])],x=u[p],b=v2e[d[p]],w={id:l++,score:x,box:A,boxRaw:g,boxCrop:y,label:b};n.push(w)}return Object.keys(s).forEach(p=>Q(s[p])),n.sort((p,h)=>h.score-p.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function qb(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Rt[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={};r.crop=$e.cropAndResize(e,[t.boxCrop],[0],[ai[1][0],ai[1][1]],"bilinear"),r.cast=de(r.crop,"float32"),r.div=fe(r.cast,255),[r.score,r.keypoints]=Rt[1].execute(r.div);let a=(await r.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(a))))/100;if(o>=(n.hand.minConfidence||0)){s.fingerScore=o,r.reshaped=G(r.keypoints,[-1,3]);let c=(await r.reshaped.array()).map(u=>[u[0]/ai[1][1],u[1]/ai[1][0],u[2]||0]).map(u=>[u[0]*t.boxRaw[2],u[1]*t.boxRaw[3],u[2]||0]);s.keypoints=c.map(u=>[Ta[0]*(u[0]+t.boxRaw[0]),Ta[1]*(u[1]+t.boxRaw[1]),u[2]||0]),s.landmarks=N0(s.keypoints);for(let u of Object.keys(uT))s.annotations[u]=uT[u].map(d=>s.landmarks&&s.keypoints[d]?s.keypoints[d]:null)}Object.keys(r).forEach(i=>Q(r[i]))}return s}async function Xb(e,t){var n,s;return!Rt[0]||!Rt[1]||!((n=Rt[0])==null?void 0:n.inputs[0].shape)||!((s=Rt[1])==null?void 0:s.inputs[0].shape)?[]:(Ta=[e.shape[2]||0,e.shape[1]||0],R0++,t.skipFrame&&R0<=(t.hand.skipFrames||0)?Jt.hands:new Promise(async r=>{t.skipFrame&&Jt.hands.length===t.hand.maxDetected?Jt.hands=await Promise.all(Jt.boxes.map(o=>qb(e,o,t))):t.skipFrame&&R0<3*(t.hand.skipFrames||0)&&Jt.hands.length>0?Jt.hands=await Promise.all(Jt.boxes.map(o=>qb(e,o,t))):(Jt.boxes=await I2e(e,t),Jt.hands=await Promise.all(Jt.boxes.map(o=>qb(e,o,t))),R0=0);let a=[...Jt.boxes];if(Jt.boxes.length=0,t.cacheSensitivity>0)for(let o=0;o<Jt.hands.length;o++){let i=oT(Jt.hands[o].keypoints,Ta);if(i.box[2]/(e.shape[2]||1)>.05&&i.box[3]/(e.shape[1]||1)>.05&&Jt.hands[o].fingerScore&&Jt.hands[o].fingerScore>(t.hand.minConfidence||0)){let l=E0(i.box,lT),c=E0(i.boxRaw,lT),u=jb(c);Jt.boxes.push({...a[o],box:l,boxRaw:c,boxCrop:u})}}for(let o=0;o<Jt.hands.length;o++){let i=Pl(Jt.hands[o].keypoints,Ta);Jt.hands[o].box=i.box,Jt.hands[o].boxRaw=i.boxRaw}r(Jt.hands)}))}var Jb={};Bc(Jb,{connected:()=>D0,horizontal:()=>Kb,kpt:()=>$0,relative:()=>Yb,vertical:()=>Zb});var $0=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Kb=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],Zb=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],Yb=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],D0={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var pT=.005,Ts={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function Qb(e){for(let t of Kb){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of Zb){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of Yb){let s=e.keypoints.findIndex(c=>c&&c.part===t[0]),r=e.keypoints.findIndex(c=>c&&c.part===t[1]),a=e.keypoints.findIndex(c=>c&&c.part===n[0]),o=e.keypoints.findIndex(c=>c&&c.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let c=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=c}}}function hT(e){for(let t=0;t<e.length;t++)if(e[t]&&Ts.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-Ts.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Ts.keypoints[t].positionRaw[1])];n[0]<pT&&n[1]<pT?e[t]=Ts.keypoints[t]:Ts.keypoints[t]=e[t]}else Ts.keypoints[t]=e[t];return e}function fT(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Ts.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=Fs(e,Ts.padding),n.resize=$e.resizeBilinear(n.pad,[t,t]);let s=de(n.resize,"int32");return Object.keys(n).forEach(r=>Q(n[r])),s}function mT(e,t){e.keypoints=e.keypoints.filter(s=>s&&s.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+Ts.padding[2][0]+Ts.padding[2][1])/t[0]-Ts.padding[2][0],s.position[1]*(t[1]+Ts.padding[1][0]+Ts.padding[1][1])/t[1]-Ts.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=Pl(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Ln,_0=0,e5=Number.MAX_SAFE_INTEGER,Lp={boxes:[],bodies:[]};async function gT(e){return xe.initial&&(Ln=null),Ln?e.debug&&oe("cached model:",Ln.modelUrl):(wc(["size"],e),Ln=await at(lt(e.modelBasePath,e.body.modelPath||"")),!Ln||!Ln.modelUrl?oe("load model failed:",e.body.modelPath):e.debug&&oe("load model:",Ln.modelUrl)),_0=Ln.inputs[0].shape?Ln.inputs[0].shape[2]:0,_0===-1&&(_0=256),Ln}async function S2e(e,t,n,s){let r=e[0][0],a=[],o=0;for(let d=0;d<r.length;d++)if(o=r[d][2],o>t.body.minConfidence){let p=[(s[3]-s[1])*r[d][1]+s[1],(s[2]-s[0])*r[d][0]+s[0]];a.push({score:Math.round(100*o)/100,part:$0[d],positionRaw:p,position:[Math.round((n.shape[2]||0)*p[0]),Math.round((n.shape[1]||0)*p[1])]})}o=a.reduce((d,p)=>p.score>d?p.score:d,0);let i=[],l=Pl(a.map(d=>d.position),[n.shape[2],n.shape[1]]),c={};for(let[d,p]of Object.entries(D0)){let h=[];for(let f=0;f<p.length-1;f++){let m=a.find(y=>y.part===p[f]),g=a.find(y=>y.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}c[d]=h}let u={id:0,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:a,annotations:c};return Qb(u),i.push(u),i}async function C2e(e,t,n,s){let r=[];for(let a=0;a<e[0].length;a++){let o=e[0][a],i=Math.round(100*o[51+4])/100;if(i>t.body.minConfidence){let l=[];for(let p=0;p<17;p++){let h=o[3*p+2];if(h>t.body.minConfidence){let f=[(s[3]-s[1])*o[3*p+1]+s[1],(s[2]-s[0])*o[3*p+0]+s[0]];l.push({part:$0[p],score:Math.round(100*h)/100,positionRaw:f,position:[Math.round((n.shape[2]||0)*f[0]),Math.round((n.shape[1]||0)*f[1])]})}}let c=Pl(l.map(p=>p.position),[n.shape[2],n.shape[1]]),u={};for(let[p,h]of Object.entries(D0)){let f=[];for(let m=0;m<h.length-1;m++){let g=l.find(A=>A.part===h[m]),y=l.find(A=>A.part===h[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}u[p]=f}let d={id:a,score:i,box:c.box,boxRaw:c.boxRaw,keypoints:[...l],annotations:u};Qb(d),r.push(d)}}return r.sort((a,o)=>o.score-a.score),r.length>t.body.maxDetected&&(r.length=t.body.maxDetected),r}async function t5(e,t){return!Ln||!(Ln==null?void 0:Ln.inputs[0].shape)?[]:(t.skipFrame||(Lp.boxes.length=0),e5++,t.skipFrame&&e5<=(t.body.skipFrames||0)?Lp.bodies:new Promise(async n=>{let s={};e5=0,s.input=fT(e,_0),s.res=await(Ln==null?void 0:Ln.predict(s.input));let r=await s.res.array();Lp.bodies=s.res.shape[2]===17?await S2e(r,t,e,[0,0,1,1]):await C2e(r,t,e,[0,0,1,1]);for(let a of Lp.bodies)mT(a,[e.shape[2]||1,e.shape[1]||1]),hT(a.keypoints);Object.keys(s).forEach(a=>Q(s[a])),n(Lp.bodies)}))}var Ns,F0=[],n5=Number.MAX_SAFE_INTEGER,P0=2.5;async function yT(e){if(!Ns||xe.initial){Ns=await at(lt(e.modelBasePath,e.object.modelPath||""));let t=Object.values(Ns.modelSignature.inputs);if(Ns.inputSize=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):null,!Ns.inputSize)throw new Error(`cannot determine model inputSize: ${e.object.modelPath}`);!Ns||!Ns.modelUrl?oe("load model failed:",e.object.modelPath):e.debug&&oe("load model:",Ns.modelUrl)}else e.debug&&oe("cached model:",Ns.modelUrl);return Ns}async function T2e(e,t,n,s){let r=0,a=[];for(let c of[1,2,4])j(async()=>{var g,y;let u=c*13,d=(g=e.find(A=>A.shape[1]===u**2&&A.shape[2]===vc.length))==null?void 0:g.squeeze(),p=(y=e.find(A=>A.shape[1]===u**2&&A.shape[2]<vc.length))==null?void 0:y.squeeze(),f=await p.reshape([-1,4,p.shape[1]/4]).argMax(2).array(),m=await d.array();for(let A=0;A<d.shape[0];A++)for(let x=0;x<d.shape[1];x++){let b=m[A][x];if(b>s.object.minConfidence&&x!==61){let w=(.5+Math.trunc(A%u))/u,k=(.5+Math.trunc(A/u))/u,S=f[A].map(V=>V*(u/c/t)),[E,R]=[w-P0/c*S[0],k-P0/c*S[1]],[P,$]=[w+P0/c*S[2]-E,k+P0/c*S[3]-R],D=[E,R,P,$];D=D.map(V=>Math.max(0,Math.min(V,1)));let T=[D[0]*n[0],D[1]*n[1],D[2]*n[0],D[3]*n[1]],O={id:r++,score:Math.round(100*b)/100,class:x+1,label:vc[x].label,box:T.map(V=>Math.trunc(V)),boxRaw:D};a.push(O)}}});e.forEach(c=>Q(c));let o=a.map(c=>[c.boxRaw[1],c.boxRaw[0],c.boxRaw[3],c.boxRaw[2]]),i=a.map(c=>c.score),l=[];if(o&&o.length>0){let c=await $e.nonMaxSuppressionAsync(o,i,s.object.maxDetected,s.object.iouThreshold,s.object.minConfidence);l=await c.data(),Q(c)}return a=a.filter((c,u)=>l.includes(u)).sort((c,u)=>u.score-c.score),a}async function s5(e,t){return n5<(t.object.skipFrames||0)&&t.skipFrame&&F0.length>0?(n5++,F0):(n5=0,!xe.kernels.includes("mod")||!xe.kernels.includes("sparsetodense")?F0:new Promise(async n=>{let s=[e.shape[2],e.shape[1]],r=$e.resizeBilinear(e,[Ns.inputSize,Ns.inputSize],!1),a=fe(r,255),o=a.transpose([0,3,1,2]);Q(a),Q(r);let i;t.object.enabled&&(i=await Ns.predict(o)),Q(o);let l=await T2e(i,Ns.inputSize,s,t);F0=l,n(l)}))}var Bp=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],N2e=Bp.length,Wp=Bp.reduce((e,t,n)=>(e[t]=n,e),{}),E2e=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],EAe=E2e.map(([e,t])=>[Wp[e],Wp[t]]),AT=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function xT(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function bT(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(c,u)=>({id:u,score:c.score,boxRaw:[c.box[0]/r,c.box[1]/s,c.box[2]/r,c.box[3]/s],box:[Math.trunc(c.box[0]*o),Math.trunc(c.box[1]*a),Math.trunc(c.box[2]*o),Math.trunc(c.box[3]*a)],keypoints:c.keypoints.map(({score:d,part:p,position:h})=>({score:d,part:p,position:[Math.trunc(h.x*o),Math.trunc(h.y*a)],positionRaw:[h.x/s,h.y/s]}))});return e.map((c,u)=>i(c,u))}var r5=class{constructor(t,n){he(this,"priorityQueue");he(this,"numberOfElements");he(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=n}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let n=2*t;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(t,n))break;this.exchange(t,n),t=n}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,n){return this.getValueAt(t)<this.getValueAt(n)}exchange(t,n){let s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[n],this.priorityQueue[n]=s}};function a5(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+N2e)}}function o5(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=a5(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function i5(e,t,n){return e<t?t:e>n?n:e}function vT(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function l5(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Es,R2e=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],O0=1,Sc=16,$2e=50**2;function wT(e,t,n,s,r,a,o=2){let i=y=>({y:a.get(y.y,y.x,e),x:a.get(y.y,y.x,a.shape[2]/2+e)}),l=(y,A,x)=>({y:i5(Math.round(y.y/Sc),0,A-1),x:i5(Math.round(y.x/Sc),0,x-1)}),[c,u]=s.shape,d=l(t.position,c,u),p=i(d),f=l5(t.position,p);for(let y=0;y<o;y++){let A=l(f,c,u),x=a5(A.y,A.x,n,r);f=l5({x:A.x*Sc,y:A.y*Sc},{x:x.x,y:x.y})}let m=l(f,c,u),g=s.get(m.y,m.x,n);return{position:f,part:Bp[n],score:g}}function D2e(e,t,n,s,r){let a=AT.map(([p,h])=>[Wp[p],Wp[h]]),o=a.map(([,p])=>p),i=a.map(([p])=>p),l=t.shape[2],c=o.length,u=new Array(l),d=o5(e.part,Sc,n);u[e.part.id]={score:e.score,part:Bp[e.part.id],position:d};for(let p=c-1;p>=0;--p){let h=o[p],f=i[p];u[h]&&!u[f]&&(u[f]=wT(p,u[h],f,t,n,r))}for(let p=0;p<c;++p){let h=i[p],f=o[p];u[h]&&!u[f]&&(u[f]=wT(p,u[h],f,t,n,s))}return u}function _2e(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-O0,0),c=Math.min(n+O0+1,a);for(let u=l;u<c;++u){let d=Math.max(s-O0,0),p=Math.min(s+O0+1,o);for(let h=d;h<p;++h)if(r.get(u,h,e)>t){i=!1;break}if(!i)break}return i}function F2e(e,t){let[n,s,r]=t.shape,a=new r5(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let c=t.get(o,i,l);c<e||_2e(l,c,o,i,t)&&a.enqueue({score:c,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function kT(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var o;let a=(o=r[s])==null?void 0:o.position;return a?vT(n,t,a.y,a.x)<=$2e:!1})}function P2e(e,t){return t.reduce((s,{position:r,score:a},o)=>(kT(e,r,o)||(s+=a),s),0)/t.length}function O2e(e,t,n,s,r,a){let o=[],i=F2e(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),c=o5(l.part,Sc,e);if(kT(o,c,l.part.id))continue;let u=D2e(l,t,e,n,s);u=u.filter(h=>h.score>a);let d=P2e(o,u),p=xT(u);d>a&&o.push({keypoints:u,box:p,score:Math.round(100*d)/100})}return o}async function u5(e,t){let n=j(()=>{if(!Es.inputs[0].shape)return[];let o=$e.resizeBilinear(e,[Es.inputs[0].shape[2],Es.inputs[0].shape[1]]),i=Ae(fe(de(o,"float32"),127.5),1),c=Es.execute(i,R2e).map(u=>dt(u,[0]));return c[1]=c[1].sigmoid(),c}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)Q(o);let r=await O2e(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return Es.inputs[0].shape?bT(r,[e.shape[1],e.shape[2]],[Es.inputs[0].shape[2],Es.inputs[0].shape[1]]):[]}async function IT(e){return!Es||xe.initial?(Es=await at(lt(e.modelBasePath,e.body.modelPath||"")),!Es||!Es.modelUrl?oe("load model failed:",e.body.modelPath):e.debug&&oe("load model:",Es.modelUrl)):e.debug&&oe("cached model:",Es.modelUrl),Es}var Us,c5=!1;async function d5(e){return!Us||xe.initial?(Us=await at(lt(e.modelBasePath,e.segmentation.modelPath||"")),!Us||!Us.modelUrl?oe("load model failed:",e.segmentation.modelPath):e.debug&&oe("load model:",Us.modelUrl)):e.debug&&oe("cached model:",Us.modelUrl),Us}async function ST(e,t,n){var m,g;if(c5)return{data:[],canvas:null,alpha:null};c5=!0,Us||await d5(n);let s=bc(e,n),r=((m=s.canvas)==null?void 0:m.width)||0,a=((g=s.canvas)==null?void 0:g.height)||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};let o={};o.resize=$e.resizeBilinear(s.tensor,[Us.inputs[0].shape?Us.inputs[0].shape[1]:0,Us.inputs[0].shape?Us.inputs[0].shape[2]:0],!1),Q(s.tensor),o.norm=fe(o.resize,255),o.res=Us.predict(o.norm),o.squeeze=dt(o.res,0),o.squeeze.shape[2]===2?(o.softmax=il(o.squeeze),[o.bg,o.fg]=Hn(o.softmax,2),o.expand=Xt(o.fg,2),o.pad=Xt(o.expand,0),o.crop=$e.cropAndResize(o.pad,[[0,0,.5,.5]],[0],[r,a]),o.data=dt(o.crop,0)):o.data=$e.resizeBilinear(o.squeeze,[a,r]);let i=Array.from(await o.data.data());if(xe.node&&!xe.Canvas&&typeof ImageData=="undefined")return n.debug&&oe("canvas support missing"),Object.keys(o).forEach(y=>Q(o[y])),{data:i,canvas:null,alpha:null};let l=Qn(r,a);await Xs.toPixels(o.data,l);let c=l.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(c.filter=`blur(${n.segmentation.blur}px)`);let u=c.getImageData(0,0,r,a),d=Qn(r,a),p=d.getContext("2d");s.canvas&&p.drawImage(s.canvas,0,0),p.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(p.filter=`blur(${n.segmentation.blur}px)`),p.drawImage(l,0,0),p.globalCompositeOperation="source-over",p.filter="none";let h=p.getImageData(0,0,r,a);for(let y=0;y<r*a;y++)h.data[4*y+3]=u.data[4*y+0];p.putImageData(h,0,0);let f=null;if(t&&d){f=Qn(r,a);let y=bc(t,n);Q(y.tensor);let A=f.getContext("2d");A.drawImage(y.canvas,0,0,f.width,f.height),A.drawImage(d,0,0)}return Object.keys(o).forEach(y=>Q(o[y])),c5=!1,{data:i,canvas:f||d,alpha:l}}var Vp=class{constructor(){he(this,"age",null);he(this,"agegenderrace",null);he(this,"blazeposedetect",null);he(this,"blazepose",null);he(this,"centernet",null);he(this,"efficientpose",null);he(this,"embedding",null);he(this,"emotion",null);he(this,"facedetect",null);he(this,"faceiris",null);he(this,"facemesh",null);he(this,"faceres",null);he(this,"gender",null);he(this,"handpose",null);he(this,"handskeleton",null);he(this,"handtrack",null);he(this,"movenet",null);he(this,"nanodet",null);he(this,"posenet",null);he(this,"segmentation",null);he(this,"antispoof",null)}};function p5(e){for(let t of Object.keys(e.models))e.models[t]=null}async function CT(e){var t,n,s,r,a,o,i,l,c,u,d,p,h,f,m,g,y,A,x,b,w,k,S,E,R,P,$,D,T,O,V;xe.initial&&p5(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await Hb(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await Hb(e.config))),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=b8(e.config)),e.config.face.enabled&&((a=e.config.face.mesh)==null?void 0:a.enabled)&&!e.models.facemesh&&(e.models.facemesh=O8(e.config)),e.config.face.enabled&&((o=e.config.face.iris)==null?void 0:o.enabled)&&!e.models.faceiris&&(e.models.faceiris=E8(e.config)),e.config.face.enabled&&((i=e.config.face.antispoof)==null?void 0:i.enabled)&&!e.models.antispoof&&(e.models.antispoof=c8(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((c=(l=e.config.hand.detector)==null?void 0:l.modelPath)==null?void 0:c.includes("handtrack"))&&(e.models.handtrack=cT(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((d=(u=e.config.hand.detector)==null?void 0:u.modelPath)==null?void 0:d.includes("handtrack"))&&(e.models.handskeleton=dT(e.config)),e.config.body.enabled&&!e.models.posenet&&((h=(p=e.config.body)==null?void 0:p.modelPath)==null?void 0:h.includes("posenet"))&&(e.models.posenet=IT(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((m=(f=e.config.body)==null?void 0:f.modelPath)==null?void 0:m.includes("efficientpose"))&&(e.models.efficientpose=Eb(e.config)),e.config.body.enabled&&!e.models.blazepose&&((y=(g=e.config.body)==null?void 0:g.modelPath)==null?void 0:y.includes("blazepose"))&&(e.models.blazepose=I8(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&((A=e.config.body.detector)==null?void 0:A.modelPath)&&((b=(x=e.config.body)==null?void 0:x.modelPath)==null?void 0:b.includes("blazepose"))&&(e.models.blazeposedetect=k8(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((k=(w=e.config.body)==null?void 0:w.modelPath)==null?void 0:k.includes("efficientpose"))&&(e.models.efficientpose=Eb(e.config)),e.config.body.enabled&&!e.models.movenet&&((E=(S=e.config.body)==null?void 0:S.modelPath)==null?void 0:E.includes("movenet"))&&(e.models.movenet=gT(e.config)),e.config.object.enabled&&!e.models.nanodet&&((P=(R=e.config.object)==null?void 0:R.modelPath)==null?void 0:P.includes("nanodet"))&&(e.models.nanodet=yT(e.config)),e.config.object.enabled&&!e.models.centernet&&((D=($=e.config.object)==null?void 0:$.modelPath)==null?void 0:D.includes("centernet"))&&(e.models.centernet=C8(e.config)),e.config.face.enabled&&((T=e.config.face.emotion)==null?void 0:T.enabled)&&!e.models.emotion&&(e.models.emotion=N8(e.config)),e.config.face.enabled&&((O=e.config.face.description)==null?void 0:O.enabled)&&!e.models.faceres&&(e.models.faceres=B8(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=d5(e.config)),e.config.face.enabled&&((V=e.config.face.agegenderrace)==null?void 0:V.enabled)&&!e.models.agegenderrace&&(e.models.agegenderrace=l8(e.config));for await(let H of Object.keys(e.models))e.models[H]&&typeof e.models[H]!="undefined"&&(e.models[H]=await e.models[H])}async function TT(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let n of Object.keys(e.models))if(e.models[n]){let s=[];Array.isArray(e.models[n])?s=e.models[n].filter(r=>r!==null).map(r=>r&&r.executor?r:r.model):s=[e.models[n]];for(let r of s){if(!r){e.config.debug&&oe("model marked as loaded but not defined:",n);continue}let a=[],o=r==null?void 0:r.executor;if(o&&o.graph.nodes)for(let l of Object.values(o.graph.nodes)){let c=l.op.toLowerCase();a.includes(c)||a.push(c)}else!o&&e.config.debug&&oe("model signature not determined:",n);let i=[];for(let l of a)!t.includes(l)&&!e.env.kernels.includes(l)&&!e.env.kernels.includes(l.replace("_",""))&&!e.env.kernels.includes(l.replace("native",""))&&!e.env.kernels.includes(l.replace("v2",""))&&i.push(l);i.length>0&&e.config.debug&&oe("model validation:",n,i)}}}var Vt={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function M2e(){let e=Vt.gl;!e||(Vt.extensions=e.getSupportedExtensions())}async function NT(e){var t;if(e.config.backend==="humangl"&&(Vt.name in os().registry&&(!Vt.gl||!Vt.gl.getParameter(Vt.gl.VERSION))&&(oe("error: humangl backend invalid context"),p5(e)),!Q2(Vt.name))){try{Vt.canvas=await Qn(100,100)}catch(s){oe("error: cannot create canvas:",s);return}try{Vt.gl=(t=Vt.canvas)==null?void 0:t.getContext("webgl2",Vt.webGLattr),Vt.canvas&&(Vt.canvas.addEventListener("webglcontextlost",async s=>{throw oe("error: humangl:",s.type),oe("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("browser webgl error")}),Vt.canvas.addEventListener("webglcontextrestored",s=>{oe("error: humangl context restored:",s)}),Vt.canvas.addEventListener("webglcontextcreationerror",s=>{oe("error: humangl context create:",s)}))}catch(s){oe("error: cannot get WebGL context:",s);return}try{Mm(2,Vt.gl)}catch(s){oe("error: cannot set WebGL context:",s);return}try{let s=new jm(Vt.gl);Qi(Vt.name,()=>new uc(s),Vt.priority)}catch(s){oe("error: cannot register WebGL backend:",s);return}try{da("webgl").forEach(r=>{let a={...r,backendName:Vt.name};pa(a)})}catch(s){oe("error: cannot update WebGL backend registration:",s);return}let n=Dr().getGPGPUContext?Dr().getGPGPUContext().gl:null;if(n)oe(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);else{oe("error: no current gl context:",n,Vt.gl);return}try{Nr.set("WEBGL_VERSION",2)}catch(s){oe("error: cannot set WebGL backend flags:",s);return}M2e(),oe("backend registered:",Vt.name)}}async function M0(e,t=!1){if(e.state="backend",t||xe.initial||e.config.backend&&e.config.backend.length>0&&dr()!==e.config.backend){let n=We();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&oe("running inside web worker"),xe.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&oe("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),xe.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&oe(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),xe.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")oe("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let r=await navigator.gpu.requestAdapter();e.config.debug&&oe("enumerated webgpu adapter:",r)}e.config.backend==="humangl"&&await NT(e);let s=Object.keys(os().registryFactory);if(e.config.debug&&oe("available backends:",s),s.includes(e.config.backend)||(oe(`error: backend ${e.config.backend} not found in registry`),e.config.backend=xe.node?"tensorflow":"webgl",e.config.debug&&oe(`override: setting backend ${e.config.backend}`)),e.config.debug&&oe("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&oe("wasm path:",e.config.wasmPath),typeof(Rl==null?void 0:Rl.setWasmPaths)!="undefined")await qC(e.config.wasmPath);else throw new Error("wasm backend is not loaded");let r=await K().getAsync("WASM_HAS_SIMD_SUPPORT"),a=await K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&oe(`wasm execution: ${r?"SIMD":"no SIMD"} ${a?"multithreaded":"singlethreaded"}`),e.config.debug&&!r&&oe("warning: wasm simd support is not enabled")}try{await Q3(e.config.backend),await cf()}catch(r){return oe("error: cannot set backend:",e.config.backend,r),!1}}if(dr()==="humangl"&&(Nr.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Nr.set("WEBGL_CPU_FORWARD",!0),Nr.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Nr.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(oe("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Nr.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Dr().getGPGPUContext)){let s=await Dr().getGPGPUContext().gl;e.config.debug&&oe(`gl version:${s.getParameter(s.VERSION)} renderer:${s.getParameter(s.RENDERER)}`)}dr()==="webgpu",J3(),await cf(),e.performance.backend=Math.trunc(We()-n),e.config.backend=dr(),xe.updateBackend()}return!0}function wc(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&oe("kernelFunc",n,t.backend)}};pa(s)}xe.kernels=da(dr()).map(n=>n.kernelName.toLowerCase())}var Na={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 14px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1,bufferedOutput:!0},Ol=e=>{if(e&&e.getContext)return e.getContext("2d");throw new Error("invalid canvas")},Cc=e=>Math.round(e*180/Math.PI);function h5(e,t,n,s=0,r){e.fillStyle=r.useDepth&&s?`rgba(${127.5+2*s}, ${127.5-2*s}, 255, 0.3)`:r.color,e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function Up(e,t,n,s,r,a){if(e.beginPath(),a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.lineWidth=a.lineWidth,e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function ET(e,t=[],n){if(!(t===void 0||t.length===0)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t){let r=s[2]||0;e.strokeStyle=n.useDepth&&r?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&r?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.lineTo(s[0],Math.round(s[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function z2e(e,t=[],n){if(!(t===void 0||t.length===0)){if(!n.useCurves||t.length<=2){ET(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function RT(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}async function f5(e,t,n){let s=Pn(Na,n);if(!(!t||!e)&&s.drawGestures){let r=Ol(e);r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let c=i[1]>0?`#${i[1]}`:"",u=`${i[0]} ${c}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(u,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(u,6,0+a*s.lineHeight),a+=1}}}}async function m5(e,t,n){var a,o,i,l,c;let s=Pn(Na,n);if(!t||!e)return;let r=Ol(e);for(let u of t){if(r.font=s.font,r.strokeStyle=s.color,r.fillStyle=s.color,s.drawBoxes&&Up(r,u.box[0],u.box[1],u.box[2],u.box[3],s),s.drawLabels){let d=[];if(d.push(`face: ${Math.trunc(100*u.score)}%`),u.genderScore&&d.push(`${u.gender||""} ${Math.trunc(100*u.genderScore)}%`),u.age&&d.push(`age: ${u.age||""}`),u.iris&&d.push(`distance: ${u.iris}`),u.real&&d.push(`real: ${Math.trunc(100*u.real)}%`),u.emotion&&u.emotion.length>0){let p=u.emotion.map(h=>`${Math.trunc(100*h.score)}% ${h.emotion}`);p.length>3&&(p.length=3),d.push(p.join(" "))}u.rotation&&u.rotation.angle&&u.rotation.gaze&&(u.rotation.angle.roll&&d.push(`roll: ${Cc(u.rotation.angle.roll)}\xB0 yaw:${Cc(u.rotation.angle.yaw)}\xB0 pitch:${Cc(u.rotation.angle.pitch)}\xB0`),u.rotation.gaze.bearing&&d.push(`gaze: ${Cc(u.rotation.gaze.bearing)}\xB0`)),d.length===0&&d.push("face"),r.fillStyle=s.color;for(let p=d.length-1;p>=0;p--){let h=Math.max(u.box[0],0),f=p*s.lineHeight+u.box[1];s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(d[p],h+5,f+16)),r.fillStyle=s.labelColor,r.fillText(d[p],h+4,f+15)}}if(r.lineWidth=1,u.mesh&&u.mesh.length>0){if(s.drawPoints)for(let d of u.mesh)h5(r,d[0],d[1],d[2],s);if(s.drawPolygons){if(r.lineWidth=1,u.mesh.length>450)for(let d=0;d<$l.length/3;d++){let p=[$l[d*3+0],$l[d*3+1],$l[d*3+2]].map(h=>u.mesh[h]);ET(r,p,s)}if(u.annotations&&u.annotations.leftEyeIris&&u.annotations.leftEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.leftEyeIris[3][0]-u.annotations.leftEyeIris[1][0])/2,p=Math.abs(u.annotations.leftEyeIris[4][1]-u.annotations.leftEyeIris[2][1])/2;r.ellipse(u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(u.annotations&&u.annotations.rightEyeIris&&u.annotations.rightEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.rightEyeIris[3][0]-u.annotations.rightEyeIris[1][0])/2,p=Math.abs(u.annotations.rightEyeIris[4][1]-u.annotations.rightEyeIris[2][1])/2;r.ellipse(u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(s.drawGaze&&((a=u.rotation)==null?void 0:a.angle)){r.strokeStyle="pink";let d=u.box[0]+u.box[2]/2-u.box[3]*Cc(u.rotation.angle.yaw)/90,p=u.box[1]+u.box[3]/2+u.box[2]*Cc(u.rotation.angle.pitch)/90,h=new Path2D(`
            M ${u.box[0]+u.box[2]/2} ${u.box[1]}
            C
              ${d} ${u.box[1]},
              ${d} ${u.box[1]+u.box[3]},
              ${u.box[0]+u.box[2]/2} ${u.box[1]+u.box[3]}
          `),f=new Path2D(`
            M ${u.box[0]} ${u.box[1]+u.box[3]/2}
            C 
              ${u.box[0]} ${p},
              ${u.box[0]+u.box[2]} ${p},
              ${u.box[0]+u.box[2]} ${u.box[1]+u.box[3]/2}
          `);r.stroke(f),r.stroke(h)}if(s.drawGaze&&((i=(o=u.rotation)==null?void 0:o.gaze)==null?void 0:i.strength)&&((c=(l=u.rotation)==null?void 0:l.gaze)==null?void 0:c.bearing)&&u.annotations.leftEyeIris&&u.annotations.rightEyeIris&&u.annotations.leftEyeIris[0]&&u.annotations.rightEyeIris[0]){r.strokeStyle="pink",r.fillStyle="pink";let d=[u.annotations.leftEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.leftEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];RT(r,[u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1]],[d[0],d[1]],4);let p=[u.annotations.rightEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.rightEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];RT(r,[u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1]],[p[0],p[1]],4)}}}}}async function g5(e,t,n){var a;let s=Pn(Na,n);if(!t||!e)return;let r=Ol(e);r.lineJoin="round";for(let o=0;o<t.length;o++){if(r.strokeStyle=s.color,r.fillStyle=s.color,r.lineWidth=s.lineWidth,r.font=s.font,s.drawBoxes&&t[o].box&&((a=t[o].box)==null?void 0:a.length)===4&&(Up(r,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+3,1+t[o].box[1]+s.lineHeight,t[o].box[2])),r.fillStyle=s.labelColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+2,0+t[o].box[1]+s.lineHeight,t[o].box[2]))),s.drawPoints&&t[o].keypoints)for(let i=0;i<t[o].keypoints.length;i++)r.fillStyle=s.useDepth&&t[o].keypoints[i].position[2]?`rgba(${127.5+2*(t[o].keypoints[i].position[2]||0)}, ${127.5-2*(t[o].keypoints[i].position[2]||0)}, 255, 0.5)`:s.color,h5(r,t[o].keypoints[i].position[0],t[o].keypoints[i].position[1],0,s);if(s.drawLabels&&t[o].keypoints){r.font=s.font;for(let i of t[o].keypoints)r.fillStyle=s.useDepth&&i.position[2]?`rgba(${127.5+2*i.position[2]}, ${127.5-2*i.position[2]}, 255, 0.5)`:s.color,r.fillText(`${i.part} ${Math.trunc(100*i.score)}%`,i.position[0]+4,i.position[1]+4)}if(s.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let i of Object.values(t[o].annotations))for(let l of i)z2e(r,l,s)}}async function y5(e,t,n){let s=Pn(Na,n);if(!t||!e)return;let r=Ol(e);r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,Up(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=s.useDepth?`rgba(${127.5+2*(o[2]||0)}, ${127.5-2*(o[2]||0)}, 255, 0.5)`:s.color,h5(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{!i||i.length===0||!i[0]||(r.fillStyle=s.useDepth?`rgba(${127.5+2*i[i.length-1][2]}, ${127.5-2*i[i.length-1][2]}, 255, 0.5)`:s.color,r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4))};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++)r.beginPath(),r.strokeStyle=s.useDepth?`rgba(${127.5+2*i[l][2]}, ${127.5-2*i[l][2]}, 255, 0.5)`:s.color,r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}async function A5(e,t,n){let s=Pn(Na,n);if(!t||!e)return;let r=Ol(e);r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Up(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}async function $T(e,t,n){let s=Pn(Na,n);if(!t||!e)return;let r=Ol(e);r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Up(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}async function DT(e,t){if(!e||!t)return;Ol(t).drawImage(e,0,0)}async function _T(e,t,n){if(!t||!t.performance||!t||!e)return null;let s=We(),r=Pn(Na,n),a=Promise.all([m5(e,t.face,r),g5(e,t.body,r),y5(e,t.hand,r),A5(e,t.object,r),f5(e,t.gesture,r)]);return t.performance.draw=Math.trunc(We()-s),a}var L2e=e=>{let t=(d,p)=>Math.atan2(d[1]-p[1],d[0]-p[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=e.mesh[33][2]>e.mesh[263][2],a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],c=Math.sqrt(l[0]**2+l[1]**2);return c=Math.min(c,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:c}},FT=(e,t)=>{let n=g=>{let y=Math.sqrt(g[0]*g[0]+g[1]*g[1]+g[2]*g[2]);return g[0]/=y,g[1]/=y,g[2]/=y,g},s=(g,y)=>{let A=g[0]-y[0],x=g[1]-y[1],b=g[2]-y[2];return[A,x,b]},r=(g,y)=>{let A=g[1]*y[2]-g[2]*y[1],x=g[2]*y[0]-g[0]*y[2],b=g[0]*y[1]-g[1]*y[0];return[A,x,b]},a=g=>{let[y,A,x,b,w,k,S,E,R]=g,P,$,D;return b<1?b>-1?(D=Math.asin(b),$=Math.atan2(-S,y),P=Math.atan2(-k,w)):(D=-Math.PI/2,$=-Math.atan2(E,R),P=0):(D=Math.PI/2,$=Math.atan2(E,R),P=0),isNaN(P)&&(P=0),isNaN($)&&($=0),isNaN(D)&&(D=0),{pitch:2*-P,yaw:2*-$,roll:2*-D}},o=g=>{let y=(x,b,w,k)=>Math.atan2(k-b,w-x);return{pitch:y(g[10][1],g[10][2],g[152][1],g[152][2]),yaw:y(g[33][0],g[33][2],g[263][0],g[263][2]),roll:y(g[33][0],g[33][1],g[263][0],g[263][1])}},i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let l=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,c=[i[10],i[152],i[234],i[454]].map(g=>[g[0]*t[0]/l,g[1]*t[1]/l,g[2]]),u=n(s(c[1],c[0])),d=n(s(c[3],c[2])),p=n(r(d,u));d=r(u,p);let h=[d[0],d[1],d[2],u[0],u[1],u[2],p[0],p[1],p[2]],f=a(h),m=i.length===478?L2e(e):{bearing:0,strength:0};return{angle:f,matrix:h,gaze:m}};var x5=async(e,t)=>{var p,h,f,m;let n,s,r,a,o,i,l,c,u=[];e.state="run:face",n=We();let d=await P8(t,e.config);if(e.performance.face=Math.trunc(We()-n),!t.shape||t.shape.length!==4)return[];if(!d)return[];for(let g=0;g<d.length;g++){if(e.analyze("Get Face"),!d[g].tensor||d[g].tensor.isDisposedInternal){oe("Face object is disposed:",d[g].tensor);continue}let y=FT(d[g],[t.shape[2],t.shape[1]]);e.analyze("Start Emotion:"),e.config.async?o=e.config.face.emotion.enabled?_b(d[g].tensor||qt([]),e.config,g,d.length):null:(e.state="run:emotion",n=We(),o=e.config.face.emotion.enabled?await _b(d[g].tensor||qt([]),e.config,g,d.length):null,e.performance.emotion=Math.trunc(We()-n)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?l=e.config.face.antispoof.enabled?ub(d[g].tensor||qt([]),e.config,g,d.length):null:(e.state="run:antispoof",n=We(),l=e.config.face.antispoof.enabled?await ub(d[g].tensor||qt([]),e.config,g,d.length):null,e.performance.antispoof=Math.trunc(We()-n)),e.analyze("End AntiSpoof:"),e.analyze("Start Description:"),e.config.async?c=e.config.face.description.enabled?Lb(d[g].tensor||qt([]),e.config,g,d.length):null:(e.state="run:description",n=We(),c=e.config.face.description.enabled?await Lb(d[g].tensor||qt([]),e.config,g,d.length):null,e.performance.embedding=Math.trunc(We()-n)),e.analyze("End Description:"),e.config.async&&([s,a,o,i,c,r,l]=await Promise.all([s,a,o,i,c,r,l])),e.analyze("Finish Face:"),!e.config.face.iris.enabled&&((h=(p=d[g])==null?void 0:p.annotations)==null?void 0:h.leftEyeIris)&&((m=(f=d[g])==null?void 0:f.annotations)==null?void 0:m.rightEyeIris)&&(delete d[g].annotations.leftEyeIris,delete d[g].annotations.rightEyeIris);let A=d[g].annotations&&d[g].annotations.leftEyeIris&&d[g].annotations.leftEyeIris[0]&&d[g].annotations.rightEyeIris&&d[g].annotations.rightEyeIris[0]&&d[g].annotations.leftEyeIris.length>0&&d[g].annotations.rightEyeIris.length>0&&d[g].annotations.leftEyeIris[0]!==null&&d[g].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(d[g].annotations.leftEyeIris[3][0]-d[g].annotations.leftEyeIris[1][0]),Math.abs(d[g].annotations.rightEyeIris[4][1]-d[g].annotations.rightEyeIris[2][1]))/t.shape[2]:0,x=e.config.face.detector.return?dt(d[g].tensor):null;Q(d[g].tensor),d[g].tensor&&delete d[g].tensor,u.push({...d[g],id:g,age:c==null?void 0:c.age,gender:c==null?void 0:c.gender,genderScore:c==null?void 0:c.genderScore,embedding:c==null?void 0:c.descriptor,emotion:o,real:l,iris:A!==0?Math.trunc(500/A/11.7)/100:0,rotation:y,tensor:x}),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),u};var PT=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},OT=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=e[n].mesh[33][2]-e[n].mesh[263][2];Math.abs(s)<10?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let o=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));o>10&&t.push({face:n,gesture:`mouth ${Math.trunc(o)}% open`});let i=e[n].mesh[152][2];Math.abs(i)>10&&t.push({face:n,gesture:`head ${i<0?"up":"down"}`})}return t},MT=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let s=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(s*r),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),c=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(c=!0,t.push({iris:n,gesture:"facing center"}));let d=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2],p=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2];(p>.06||d>.06)&&(c=!1),p>.06&&t.push({iris:n,gesture:"looking right"}),d>.06&&t.push({iris:n,gesture:"looking left"});let h=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||h<.01||f>.022||h>.022)&&(c=!1),(f<.01||h<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||h>.022)&&t.push({iris:n,gesture:"looking up"}),c&&t.push({iris:n,gesture:"looking center"})}return t},zT=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>o.position[2]<i.position[2]?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=sT(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t};var Pe={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0};function LT(e,t){var o,i,l,c,u,d,p,h,f,m,g,y,A,x,b,w,k,S,E,R,P,$,D,T,O,V,H;let n=We();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0};let s=Date.now()-e.timestamp,r=s<1e3?8-Math.log(s+1):1;if(Pe.canvas=e.canvas,!Pe.body||e.body.length!==Pe.body.length)Pe.body=JSON.parse(JSON.stringify(e.body));else for(let z=0;z<e.body.length;z++){let X=e.body[z].box.map((J,te)=>((r-1)*Pe.body[z].box[te]+J)/r),ee=e.body[z].boxRaw.map((J,te)=>((r-1)*Pe.body[z].boxRaw[te]+J)/r),Y=e.body[z].keypoints.map((J,te)=>({score:J.score,part:J.part,position:[Pe.body[z].keypoints[te]?((r-1)*Pe.body[z].keypoints[te].position[0]+J.position[0])/r:J.position[0],Pe.body[z].keypoints[te]?((r-1)*Pe.body[z].keypoints[te].position[1]+J.position[1])/r:J.position[1]],positionRaw:[Pe.body[z].keypoints[te]?((r-1)*Pe.body[z].keypoints[te].positionRaw[0]+J.positionRaw[0])/r:J.position[0],Pe.body[z].keypoints[te]?((r-1)*Pe.body[z].keypoints[te].positionRaw[1]+J.positionRaw[1])/r:J.position[1]]})),se={},ne={connected:{}};((i=(o=t.body)==null?void 0:o.modelPath)==null?void 0:i.includes("efficientpose"))?ne=Tb:((c=(l=t.body)==null?void 0:l.modelPath)==null?void 0:c.includes("blazepose"))?ne=xb:((d=(u=t.body)==null?void 0:u.modelPath)==null?void 0:d.includes("movenet"))&&(ne=Jb);for(let[J,te]of Object.entries(ne.connected)){let ce=[];for(let pe=0;pe<te.length-1;pe++){let be=Y.find(Ce=>Ce.part===te[pe]),we=Y.find(Ce=>Ce.part===te[pe+1]);be&&we&&be.score>(t.body.minConfidence||0)&&we.score>(t.body.minConfidence||0)&&ce.push([be.position,we.position])}se[J]=ce}Pe.body[z]={...e.body[z],box:X,boxRaw:ee,keypoints:Y,annotations:se}}if(!Pe.hand||e.hand.length!==Pe.hand.length)Pe.hand=JSON.parse(JSON.stringify(e.hand));else for(let z=0;z<e.hand.length;z++){let X=e.hand[z].box.map((ne,J)=>((r-1)*Pe.hand[z].box[J]+ne)/r),ee=e.hand[z].boxRaw.map((ne,J)=>((r-1)*Pe.hand[z].boxRaw[J]+ne)/r);Pe.hand[z].keypoints.length!==e.hand[z].keypoints.length&&(Pe.hand[z].keypoints=e.hand[z].keypoints);let Y=e.hand[z].keypoints&&e.hand[z].keypoints.length>0?e.hand[z].keypoints.map((ne,J)=>ne.map((te,ce)=>((r-1)*(Pe.hand[z].keypoints[J][ce]||1)+(te||0))/r)):[],se={};if(Object.keys(Pe.hand[z].annotations).length!==Object.keys(e.hand[z].annotations).length)Pe.hand[z].annotations=e.hand[z].annotations,se=Pe.hand[z].annotations;else if(e.hand[z].annotations)for(let ne of Object.keys(e.hand[z].annotations))se[ne]=e.hand[z].annotations[ne]&&e.hand[z].annotations[ne][0]?e.hand[z].annotations[ne].map((J,te)=>J.map((ce,pe)=>((r-1)*Pe.hand[z].annotations[ne][te][pe]+ce)/r)):null;Pe.hand[z]={...e.hand[z],box:X,boxRaw:ee,keypoints:Y,annotations:se}}if(!Pe.face||e.face.length!==Pe.face.length)Pe.face=JSON.parse(JSON.stringify(e.face));else for(let z=0;z<e.face.length;z++){let X=e.face[z].box.map((se,ne)=>((r-1)*Pe.face[z].box[ne]+se)/r),ee=e.face[z].boxRaw.map((se,ne)=>((r-1)*Pe.face[z].boxRaw[ne]+se)/r),Y={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};Y.matrix=(p=e.face[z].rotation)==null?void 0:p.matrix,Y.angle={roll:((r-1)*(((f=(h=Pe.face[z].rotation)==null?void 0:h.angle)==null?void 0:f.roll)||0)+(((g=(m=e.face[z].rotation)==null?void 0:m.angle)==null?void 0:g.roll)||0))/r,yaw:((r-1)*(((A=(y=Pe.face[z].rotation)==null?void 0:y.angle)==null?void 0:A.yaw)||0)+(((b=(x=e.face[z].rotation)==null?void 0:x.angle)==null?void 0:b.yaw)||0))/r,pitch:((r-1)*(((k=(w=Pe.face[z].rotation)==null?void 0:w.angle)==null?void 0:k.pitch)||0)+(((E=(S=e.face[z].rotation)==null?void 0:S.angle)==null?void 0:E.pitch)||0))/r},Y.gaze={bearing:((r-1)*(((P=(R=Pe.face[z].rotation)==null?void 0:R.gaze)==null?void 0:P.bearing)||0)+(((D=($=e.face[z].rotation)==null?void 0:$.gaze)==null?void 0:D.bearing)||0))/r,strength:((r-1)*(((O=(T=Pe.face[z].rotation)==null?void 0:T.gaze)==null?void 0:O.strength)||0)+(((H=(V=e.face[z].rotation)==null?void 0:V.gaze)==null?void 0:H.strength)||0))/r},Pe.face[z]={...e.face[z],rotation:Y,box:X,boxRaw:ee}}if(!Pe.object||e.object.length!==Pe.object.length)Pe.object=JSON.parse(JSON.stringify(e.object));else for(let z=0;z<e.object.length;z++){let X=e.object[z].box.map((Y,se)=>((r-1)*Pe.object[z].box[se]+Y)/r),ee=e.object[z].boxRaw.map((Y,se)=>((r-1)*Pe.object[z].boxRaw[se]+Y)/r);Pe.object[z]={...e.object[z],box:X,boxRaw:ee}}if(e.persons){let z=e.persons;if(!Pe.persons||z.length!==Pe.persons.length)Pe.persons=JSON.parse(JSON.stringify(z));else for(let X=0;X<z.length;X++)Pe.persons[X].box=z[X].box.map((ee,Y)=>((r-1)*Pe.persons[X].box[Y]+ee)/r)}e.gesture&&(Pe.gesture=e.gesture);let a=We();return e.performance&&(Pe.performance={...e.performance,interpolate:Math.round(a-n)}),Pe}function z0(e,t,n={order:2}){let s=0;for(let r=0;r<e.length;r++){let a=n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=n.order===2?a*a:a**n.order}return s}function BT(e,t,n={order:2}){let s=z0(e,t,n),r=n.order===2?Math.sqrt(s):s**(1/n.order);return Math.max(0,100-r)/100}function WT(e,t,n={order:2,threshold:0}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let a=0;a<t.length;a++){let o=z0(e,t[a],{order:n.order});if(o<s&&(s=o,r=a),s<n.threshold)break}return s=n.order===2?Math.sqrt(s):s**(1/n.order),{index:r,distance:s,similarity:Math.max(0,100-s)/100}}function VT(e,t,n,s,r){var i,l,c,u,d,p,h,f,m,g,y,A,x,b,w,k;let a=0,o=[];for(let S of e){let E={id:a++,face:S,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let O of t)S.box[0]>O.box[0]&&S.box[0]<O.box[0]+O.box[2]&&S.box[1]+S.box[3]>O.box[1]&&S.box[1]+S.box[3]<O.box[1]+O.box[3]&&(E.body=O);if(E.body)for(let O of n)O.box[0]+O.box[2]>E.body.box[0]&&O.box[0]+O.box[2]<E.body.box[0]+E.body.box[2]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=O),O.box[0]<E.body.box[0]+E.body.box[2]&&O.box[0]>E.body.box[0]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=O);for(let O of s)O.face!==void 0&&O.face===S.id?(i=E.gestures)==null||i.push(O):O.iris!==void 0&&O.iris===S.id?(l=E.gestures)==null||l.push(O):O.body!==void 0&&O.body===((c=E.body)==null?void 0:c.id)?(u=E.gestures)==null||u.push(O):O.hand!==void 0&&O.hand===((p=(d=E.hands)==null?void 0:d.left)==null?void 0:p.id)?(h=E.gestures)==null||h.push(O):O.hand!==void 0&&O.hand===((m=(f=E.hands)==null?void 0:f.right)==null?void 0:m.id)&&((g=E.gestures)==null||g.push(O));let R=[],P=[],$=O=>{O&&O.length===4&&(R.push(O[0],O[0]+O[2]),P.push(O[1],O[1]+O[3]))};$((y=E.face)==null?void 0:y.box),$((A=E.body)==null?void 0:A.box),$((b=(x=E.hands)==null?void 0:x.left)==null?void 0:b.box),$((k=(w=E.hands)==null?void 0:w.right)==null?void 0:k.box);let D=Math.min(...R),T=Math.min(...P);E.box=[D,T,Math.max(...R)-D,Math.max(...P)-T],r&&r[1]&&r[2]&&(E.boxRaw=[E.box[0]/r[2],E.box[1]/r[1],E.box[2]/r[2],E.box[3]/r[1]]),o.push(E)}return o}var L0=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,B0=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function B2e(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(L0);break;case"body":case"full":n=await t(B0);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function W2e(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+L0;break;case"full":case"body":n="data:image/jpeg;base64,"+B0;break;default:n=null}let s;typeof Image!="undefined"?s=new Image:xe.Image&&(s=new xe.Image),s.onload=async()=>{let r=Qn(s.naturalWidth,s.naturalHeight);if(!r)oe("Warmup: Canvas not found"),t({});else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=await e.detect(o.tensor,e.config);t(i)}},n?s.src=n:t(null)})}async function V2e(e){let t=r=>Buffer.from(r,"base64"),n;if(e.config.warmup==="face"&&(n=t(L0)),(e.config.warmup==="body"||e.config.warmup==="full")&&(n=t(B0)),!n)return null;let s;if(typeof void 0!="undefined"){let r=(void 0).decodeJpeg(n),a=r.expandDims(0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&oe("Warmup tfjs-node not loaded");return s}async function UT(e,t){let n=We();if(e.state="warmup",t&&(e.config=Pn(e.config,t)),!e.config.warmup||e.config.warmup==="none")return{error:"null"};let s;return new Promise(async r=>{typeof createImageBitmap=="function"?s=await B2e(e):typeof Image!="undefined"||xe.Canvas!==void 0?s=await W2e(e):s=await V2e(e);let a=We();e.config.debug&&oe("Warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),r(s)})}var Tc,Gp,Hp,W0,HT=class{constructor(t){he(this,"version");he(this,"config");he(this,"result");he(this,"state");he(this,"process");he(this,"tf");he(this,"env");he(this,"draw");he(this,"models");he(this,"events");he(this,"faceTriangulation");he(this,"faceUVMap");he(this,"performance");Vc(this,Tc,void 0);Vc(this,Gp,void 0);Vc(this,Hp,void 0);he(this,"gl");he(this,"analyze",(...t)=>{if(!Wc(this,Gp))return;let n=this.tf.engine().state.numTensors,s=Wc(this,Tc);Uc(this,Tc,n);let r=n-s;r!==0&&oe(...t,r)});Vc(this,W0,t=>{if(!Wc(this,Hp))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof Ze))return"input must be a tensor";try{this.tf.getBackend()}catch(n){return"backend not loaded"}return null});he(this,"similarity",BT);he(this,"distance",z0);he(this,"match",WT);he(this,"emit",t=>{var n;this.events&&this.events.dispatchEvent&&((n=this.events)==null||n.dispatchEvent(new Event(t)))});this.env=xe,Ma.wasmPath=vd.includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${vd}/dist/`,Ma.modelBasePath=xe.browser?"../models/":"file://models/",Ma.backend=xe.browser?"humangl":"tensorflow",this.version=ib,Object.defineProperty(this,"version",{value:ib}),this.config=JSON.parse(JSON.stringify(Ma)),Object.seal(this.config),t&&(this.config=Pn(this.config,t)),this.tf=Rl,this.state="idle",Uc(this,Tc,0),Uc(this,Gp,!1),Uc(this,Hp,!1),this.performance={backend:0,load:0,image:0,frames:0,cached:0,changed:0,total:0,draw:0},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new Vp,this.draw={options:Na,canvas:(n,s)=>DT(n,s),face:(n,s,r)=>m5(n,s,r),body:(n,s,r)=>g5(n,s,r),hand:(n,s,r)=>y5(n,s,r),gesture:(n,s,r)=>f5(n,s,r),object:(n,s,r)=>A5(n,s,r),person:(n,s,r)=>$T(n,s,r),all:(n,s,r)=>_T(n,s,r)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[]},this.process={tensor:null,canvas:null},this.faceTriangulation=M8,this.faceUVMap=z8,this.gl=Vt,this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(Ma)),this.config.backend=t}validate(t){return f2(Ma,t||this.config)}now(){return We()}image(t,n=!0){return bc(t,this.config,n)}async segmentation(t,n){return ST(t,n,this.config)}enhance(t){return zb(t)}async init(){await M0(this,!0),await this.tf.ready()}async load(t){this.state="load";let n=We(),s=Object.values(this.models).filter(o=>o).length;t&&(this.config=Pn(this.config,t)),xe.initial&&(this.config.debug&&oe(`version: ${this.version}`),this.config.debug&&oe(`tfjs version: ${this.tf.version_core}`),await M0(this)||oe("error: backend check failed"),await cf(),this.env.browser&&(this.config.debug&&oe("configuration:",this.config),this.config.debug&&oe("tf flags:",this.tf.ENV.flags))),await CT(this),xe.initial&&this.config.debug&&oe("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),xe.initial=!1,Object.values(this.models).filter(o=>o).length!==s&&(await TT(this),this.emit("load"));let a=Math.trunc(We()-n);a>(this.performance.load||0)&&(this.performance.load=a)}next(t=this.result){return LT(t,this.config)}async warmup(t){return UT(this,t)}async detect(t,n){return this.state="detect",new Promise(async s=>{var y,A,x,b,w,k,S,E,R,P,$,D,T,O,V,H,z,X,ee,Y,se,ne;this.state="config";let r,a;this.config=Pn(this.config,n),this.state="check";let o=Wc(this,W0).call(this,t);o&&(oe(o,t),s({error:o}));let i=We();await M0(this),await this.load(),r=We(),this.state="image";let l=bc(t,this.config);if(this.process=l,this.performance.image=Math.trunc(We()-r),this.analyze("Get Image:"),!l.tensor){this.config.debug&&oe("could not convert input to tensor"),s({error:"could not convert input to tensor"});return}this.emit("image"),r=We(),this.config.skipFrame=await i8(this.config,l.tensor),this.performance.frames||(this.performance.frames=0),this.performance.cached||(this.performance.cached=0),this.performance.frames++,this.config.skipFrame&&this.performance.cached++,this.performance.changed=Math.trunc(We()-r),this.analyze("Check Changed:");let c=[],u=[],d=[],p=[];this.state="detect:face",this.config.async?(c=this.config.face.enabled?x5(this,l.tensor):[],this.performance.face&&delete this.performance.face):(r=We(),c=this.config.face.enabled?await x5(this,l.tensor):[],a=Math.trunc(We()-r),a>0&&(this.performance.face=a)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(c=await c),this.analyze("Start Body:"),this.state="detect:body";let h=this.config.body.maxDetected===-1?Pn(this.config,{body:{maxDetected:this.config.face.enabled?1*c.length:1}}):this.config;this.config.async?(((y=this.config.body.modelPath)==null?void 0:y.includes("posenet"))?u=this.config.body.enabled?u5(l.tensor,h):[]:((A=this.config.body.modelPath)==null?void 0:A.includes("blazepose"))?u=this.config.body.enabled?wb(l.tensor,h):[]:((x=this.config.body.modelPath)==null?void 0:x.includes("efficientpose"))?u=this.config.body.enabled?Rb(l.tensor,h):[]:((b=this.config.body.modelPath)==null?void 0:b.includes("movenet"))&&(u=this.config.body.enabled?t5(l.tensor,h):[]),this.performance.body&&delete this.performance.body):(r=We(),((w=this.config.body.modelPath)==null?void 0:w.includes("posenet"))?u=this.config.body.enabled?await u5(l.tensor,h):[]:((k=this.config.body.modelPath)==null?void 0:k.includes("blazepose"))?u=this.config.body.enabled?await wb(l.tensor,h):[]:((S=this.config.body.modelPath)==null?void 0:S.includes("efficientpose"))?u=this.config.body.enabled?await Rb(l.tensor,h):[]:((E=this.config.body.modelPath)==null?void 0:E.includes("movenet"))&&(u=this.config.body.enabled?await t5(l.tensor,h):[]),a=Math.trunc(We()-r),a>0&&(this.performance.body=a)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let f=this.config.hand.maxDetected===-1?Pn(this.config,{hand:{maxDetected:this.config.face.enabled?2*c.length:1}}):this.config;this.config.async?(((P=(R=this.config.hand.detector)==null?void 0:R.modelPath)==null?void 0:P.includes("handdetect"))?d=this.config.hand.enabled?Gb(l.tensor,f):[]:((D=($=this.config.hand.detector)==null?void 0:$.modelPath)==null?void 0:D.includes("handtrack"))&&(d=this.config.hand.enabled?Xb(l.tensor,f):[]),this.performance.hand&&delete this.performance.hand):(r=We(),((O=(T=this.config.hand.detector)==null?void 0:T.modelPath)==null?void 0:O.includes("handdetect"))?d=this.config.hand.enabled?await Gb(l.tensor,f):[]:((H=(V=this.config.hand.detector)==null?void 0:V.modelPath)==null?void 0:H.includes("handtrack"))&&(d=this.config.hand.enabled?await Xb(l.tensor,f):[]),a=Math.trunc(We()-r),a>0&&(this.performance.hand=a)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?(((z=this.config.object.modelPath)==null?void 0:z.includes("nanodet"))?p=this.config.object.enabled?s5(l.tensor,this.config):[]:((X=this.config.object.modelPath)==null?void 0:X.includes("centernet"))&&(p=this.config.object.enabled?Ib(l.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(r=We(),((ee=this.config.object.modelPath)==null?void 0:ee.includes("nanodet"))?p=this.config.object.enabled?await s5(l.tensor,this.config):[]:((Y=this.config.object.modelPath)==null?void 0:Y.includes("centernet"))&&(p=this.config.object.enabled?await Ib(l.tensor,this.config):[]),a=Math.trunc(We()-r),a>0&&(this.performance.object=a)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([c,u,d,p]=await Promise.all([c,u,d,p])),this.state="detect:gesture";let m=[];this.config.gesture.enabled&&(r=We(),m=[...OT(c),...PT(u),...zT(d),...MT(c)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=Math.trunc(We()-r)),this.performance.total=Math.trunc(We()-i);let g=((ne=(se=this.process)==null?void 0:se.tensor)==null?void 0:ne.shape)||[];this.result={face:c,body:u,hand:d,gesture:m,object:p,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),get persons(){return VT(c,u,d,m,g)}},Q(l.tensor),this.emit("detect"),this.state="idle",s(this.result)})}};Tc=new WeakMap,Gp=new WeakMap,Hp=new WeakMap,W0=new WeakMap;return U2e;})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
