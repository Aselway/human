/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var Human=(()=>{var Og=Object.defineProperty;var SN=(e,t,n)=>t in e?Og(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var IN=e=>Og(e,"__esModule",{value:!0});var Aa=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof require!="undefined"?require:t)[n]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var Rc=(e,t)=>{IN(e);for(var n in t)Og(e,n,{get:t[n],enumerable:!0})};var de=(e,t,n)=>(SN(e,typeof t!="symbol"?t+"":t,n),n),Qb=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var $c=(e,t,n)=>(Qb(e,t,"read from private field"),n?n.call(e):t.get(e)),Dc=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},_c=(e,t,n,s)=>(Qb(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);var s2e={};Rc(s2e,{Human:()=>CT,default:()=>CT,defaults:()=>ya,env:()=>ye});function at(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: ${r} expecting json file`);return r}function re(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}var ce=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function Mg(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")Mg(e[r],t[r],r,s);else{let a=e&&typeof e[r]!="undefined";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&re("invalid configuration",s),s}function Rn(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=Rn(a,o):n[r]=o}),n),{})}var ya={backend:"",modelBasePath:"",wasmPath:"",debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,filter:{enabled:!0,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",detector:{modelPath:""},maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var wl={};Rc(wl,{Abs:()=>ti,Acos:()=>Vl,Acosh:()=>Ul,AdadeltaOptimizer:()=>mf,AdagradOptimizer:()=>gf,AdamOptimizer:()=>Af,AdamaxOptimizer:()=>yf,Add:()=>Vr,AddN:()=>wa,All:()=>Gl,Any:()=>Hl,ArgMax:()=>ka,ArgMin:()=>jl,Asin:()=>ql,Asinh:()=>Xl,Atan:()=>Kl,Atan2:()=>Yl,Atanh:()=>Zl,AvgPool:()=>Sa,AvgPool3D:()=>Mc,AvgPool3DGrad:()=>sh,AvgPoolGrad:()=>nh,BackendWasm:()=>y6,BatchMatMul:()=>Ia,BatchToSpaceND:()=>ni,Bincount:()=>rh,BroadcastArgs:()=>ah,BroadcastTo:()=>m5,Callback:()=>Tk,CallbackList:()=>mw,Cast:()=>Ca,Ceil:()=>Ta,ClipByValue:()=>Ur,Complex:()=>zc,ComplexAbs:()=>Lc,Concat:()=>si,Conv2D:()=>Na,Conv2DBackpropFilter:()=>oh,Conv2DBackpropInput:()=>Ea,Conv3D:()=>Bc,Conv3DBackpropFilterV2:()=>ih,Conv3DBackpropInputV2:()=>lh,Cos:()=>Ra,Cosh:()=>$a,CropAndResize:()=>ai,Cumsum:()=>ri,CustomCallback:()=>Aw,DataStorage:()=>Pc,DenseBincount:()=>uh,DepthToSpace:()=>oi,DepthwiseConv2dNative:()=>Da,DepthwiseConv2dNativeBackpropFilter:()=>ch,DepthwiseConv2dNativeBackpropInput:()=>dh,Diag:()=>ph,Dilation2D:()=>Wc,Dilation2DBackpropFilter:()=>fh,Dilation2DBackpropInput:()=>hh,ENV:()=>wr,EarlyStopping:()=>Ek,Einsum:()=>Vc,Elu:()=>Pa,EluGrad:()=>mh,Environment:()=>h5,Equal:()=>ii,Erf:()=>Jl,Exp:()=>Fa,ExpandDims:()=>li,Expm1:()=>ui,FFT:()=>gh,Fill:()=>Ql,FlipLeftRight:()=>ci,Floor:()=>Oa,FloorDiv:()=>Ma,FromPixels:()=>Yc,FusedBatchNorm:()=>za,FusedConv2D:()=>mo,FusedDepthwiseConv2D:()=>go,GPGPUContext:()=>wm,GatherNd:()=>pi,GatherV2:()=>di,GraphModel:()=>i7,Greater:()=>hi,GreaterEqual:()=>La,History:()=>gw,IFFT:()=>Ah,Identity:()=>Ba,Imag:()=>Uc,InputSpec:()=>Zt,IsFinite:()=>eu,IsInf:()=>tu,IsNan:()=>nu,KernelBackend:()=>Ll,LRN:()=>Hc,LRNGrad:()=>xh,LayerVariable:()=>cw,LayersModel:()=>Qr,LeakyRelu:()=>fi,Less:()=>mi,LessEqual:()=>gi,LinSpace:()=>yh,Log:()=>Wa,Log1p:()=>su,LogSoftmax:()=>g5,LogicalAnd:()=>Ai,LogicalNot:()=>ru,LogicalOr:()=>Gc,MathBackendCPU:()=>by,MathBackendWebGL:()=>Yd,Max:()=>Va,MaxPool:()=>Ga,MaxPool3D:()=>jc,MaxPool3DGrad:()=>vh,MaxPoolGrad:()=>bh,MaxPoolWithArgmax:()=>wh,Maximum:()=>Ua,Mean:()=>Ha,Min:()=>ja,Minimum:()=>qa,MirrorPad:()=>Xa,Mod:()=>au,MomentumOptimizer:()=>xf,Multinomial:()=>kh,Multiply:()=>Ka,Neg:()=>yi,NonMaxSuppressionV3:()=>bi,NonMaxSuppressionV4:()=>ou,NonMaxSuppressionV5:()=>vi,NotEqual:()=>xi,OP_SCOPE_SUFFIX:()=>$5,OneHot:()=>ki,OnesLike:()=>wi,Optimizer:()=>Zr,OptimizerConstructors:()=>To,Pack:()=>Si,PadV2:()=>Za,Pool:()=>hE,Pow:()=>Ya,Prelu:()=>Ja,Prod:()=>Ii,RMSPropOptimizer:()=>bf,RNN:()=>ea,Range:()=>iu,Rank:()=>Xg,Real:()=>qc,RealDiv:()=>_a,Reciprocal:()=>lu,Reduction:()=>Wn,Relu:()=>Qa,Relu6:()=>to,Reshape:()=>Ci,ResizeBilinear:()=>eo,ResizeBilinearGrad:()=>Ih,ResizeNearestNeighbor:()=>uu,ResizeNearestNeighborGrad:()=>Sh,Reverse:()=>Ti,RotateWithOffset:()=>Wi,Round:()=>Ni,Rsqrt:()=>no,SGDOptimizer:()=>vd,ScatterNd:()=>Ei,Select:()=>Ri,Selu:()=>cu,Sequential:()=>Hf,Sigmoid:()=>ro,Sign:()=>du,Sin:()=>so,Sinh:()=>Di,Slice:()=>$i,Softmax:()=>io,Softplus:()=>pu,SpaceToBatchND:()=>_i,SparseFillEmptyRows:()=>Ch,SparseReshape:()=>Th,SparseSegmentMean:()=>Nh,SparseSegmentSum:()=>Eh,SparseToDense:()=>Xc,SplitV:()=>Pi,Sqrt:()=>ao,Square:()=>hu,SquaredDifference:()=>lo,Step:()=>ho,StridedSlice:()=>Fi,StringNGrams:()=>Kc,StringSplit:()=>Rh,StringToHashBucketFast:()=>$h,Sub:()=>uo,Sum:()=>oo,SymbolicTensor:()=>fr,Tan:()=>Oi,Tanh:()=>co,Tensor:()=>et,TensorBuffer:()=>nn,Tile:()=>Gr,TopK:()=>Mi,Transform:()=>zi,Transpose:()=>po,Unique:()=>Dh,Unpack:()=>Li,UnsortedSegmentSum:()=>Zc,Variable:()=>ad,ZerosLike:()=>Bi,_FusedMatMul:()=>fo,abs:()=>sn,acos:()=>A3,acosh:()=>y3,add:()=>le,addN:()=>Uh,all:()=>N2,any:()=>Gh,argMax:()=>Hs,argMin:()=>x3,asin:()=>b3,asinh:()=>v3,atan:()=>w3,atan2:()=>k3,atanh:()=>S3,avgPool:()=>jh,avgPool3d:()=>$2,backend:()=>Ir,backend_util:()=>N,basicLSTMCell:()=>e$,batchNorm:()=>vu,batchNorm2d:()=>N3,batchNorm3d:()=>E3,batchNorm4d:()=>R3,batchToSpaceND:()=>qh,bincount:()=>D2,booleanMaskAsync:()=>pP,broadcastArgs:()=>$3,broadcastTo:()=>dd,broadcast_util:()=>qi,browser:()=>Gs,buffer:()=>Be,callbacks:()=>TV,cast:()=>pe,ceil:()=>D3,clipByValue:()=>ps,clone:()=>or,complex:()=>xo,concat:()=>kt,concat1d:()=>_3,concat2d:()=>wu,concat3d:()=>P3,concat4d:()=>F3,constraints:()=>Uv,conv1d:()=>_2,conv2d:()=>So,conv2dTranspose:()=>F2,conv3d:()=>O2,conv3dTranspose:()=>M3,copyRegisteredKernels:()=>AE,cos:()=>Xh,cosh:()=>M2,cosineWindow:()=>l1,cumsum:()=>z2,customGrad:()=>Tr,data:()=>l7,denseBincount:()=>z3,deprecationWarn:()=>I2,depthToSpace:()=>L3,depthwiseConv2d:()=>pd,deregisterOp:()=>EV,device_util:()=>gu,diag:()=>R$,dilation2d:()=>B3,disableDeprecationWarnings:()=>gR,dispose:()=>ae,disposeVariables:()=>AR,div:()=>fe,divNoNan:()=>W3,dot:()=>M$,dropout:()=>Av,einsum:()=>V3,elu:()=>hd,enableDebugMode:()=>mR,enableProdMode:()=>m3,enclosingPowerOfTwo:()=>yv,engine:()=>ts,env:()=>K,equal:()=>Cs,erf:()=>U3,exp:()=>Ts,expandDims:()=>mn,expm1:()=>G3,eye:()=>L2,fft:()=>of,fill:()=>ku,findBackend:()=>C2,findBackendFactory:()=>vR,floor:()=>fd,floorDiv:()=>T2,forceHalfFloat:()=>zI,fused:()=>Co,gather:()=>Su,gatherND:()=>gv,gather_util:()=>A2,getBackend:()=>ir,getGradient:()=>Gg,getKernel:()=>_h,getKernelsForBackend:()=>Hr,getThreadsCount:()=>nge,gpgpu_util:()=>dI,grad:()=>lD,grads:()=>uD,greater:()=>hs,greaterEqual:()=>Ji,ifft:()=>yd,imag:()=>Kh,image:()=>$e,inTopKAsync:()=>kP,initializers:()=>Zv,input:()=>Bw,io:()=>es,irfft:()=>n1,isFinite:()=>J$,isInf:()=>eD,isNaN:()=>H3,keep:()=>fn,kernel_impls:()=>Xs,layers:()=>iw,leakyRelu:()=>Zh,less:()=>B2,lessEqual:()=>Qi,linalg:()=>Nv,linspace:()=>j3,loadGraphModel:()=>rt,loadLayersModel:()=>zB,localResponseNormalization:()=>q3,log:()=>Ns,log1p:()=>Yh,logSigmoid:()=>mD,logSoftmax:()=>W2,logSumExp:()=>J3,logicalAnd:()=>lr,logicalNot:()=>Qh,logicalOr:()=>G2,logicalXor:()=>TD,losses:()=>iO,matMul:()=>He,math:()=>K5,max:()=>ns,maxPool:()=>ef,maxPool3d:()=>H2,maxPoolWithArgmax:()=>Q3,maximum:()=>Xr,mean:()=>Wt,memory:()=>Wh,meshgrid:()=>_D,metrics:()=>Sk,min:()=>tf,minimum:()=>md,mirrorPad:()=>ev,mod:()=>tv,model:()=>OB,models:()=>Ik,moments:()=>nf,movingAverage:()=>mP,mul:()=>W,multiRNNCell:()=>WD,multinomial:()=>nv,neg:()=>Ot,nextFrame:()=>Ev,norm:()=>o1,notEqual:()=>Cu,oneHot:()=>ud,ones:()=>fs,onesLike:()=>Es,op:()=>V,outerProduct:()=>jD,pad:()=>qs,pad1d:()=>KD,pad2d:()=>YD,pad3d:()=>QD,pad4d:()=>t_,pool:()=>o_,pow:()=>Io,prelu:()=>rf,print:()=>U5,prod:()=>j2,profile:()=>yR,rand:()=>d_,randomGamma:()=>m_,randomNormal:()=>sv,randomUniform:()=>Tu,range:()=>Nu,ready:()=>Vh,real:()=>gd,reciprocal:()=>rv,registerBackend:()=>Zi,registerCallbackConstructor:()=>LB,registerGradient:()=>A5,registerKernel:()=>jr,registerOp:()=>NV,regularizers:()=>Ck,relu:()=>Nr,relu6:()=>K2,removeBackend:()=>bR,reshape:()=>G,reverse:()=>Rs,reverse1d:()=>S_,reverse2d:()=>C_,reverse3d:()=>N_,reverse4d:()=>R_,rfft:()=>lf,round:()=>Z2,rsqrt:()=>Y2,scalar:()=>Ee,scatterND:()=>mv,scatter_util:()=>y2,selu:()=>J2,separableConv2d:()=>av,sequential:()=>MB,serialization:()=>ue,setBackend:()=>g3,setPlatform:()=>wR,setThreadsCount:()=>tge,setWasmPath:()=>ege,setWasmPaths:()=>b6,setWebGLContext:()=>hm,setdiff1dAsync:()=>ov,shared:()=>im,sigmoid:()=>ds,sign:()=>iv,signal:()=>oO,sin:()=>Q2,sinh:()=>e1,slice:()=>_e,slice1d:()=>af,slice2d:()=>t1,slice3d:()=>Eu,slice4d:()=>Ad,slice_util:()=>Ft,softmax:()=>Ru,softplus:()=>Iu,spaceToBatchND:()=>sf,sparse:()=>bd,sparseToDense:()=>i1,spectral:()=>aO,split:()=>kn,sqrt:()=>Dn,square:()=>yt,squaredDifference:()=>s1,squeeze:()=>ct,stack:()=>_n,step:()=>xd,stridedSlice:()=>lv,string:()=>ff,sub:()=>xe,sum:()=>Se,sumOutType:()=>od,tan:()=>uv,tanh:()=>bu,tensor:()=>Gt,tensor1d:()=>Kt,tensor2d:()=>ur,tensor3d:()=>Y5,tensor4d:()=>nP,tensor5d:()=>sP,tensor6d:()=>rP,tensor_util:()=>rr,test_util:()=>p3,tidy:()=>q,tile:()=>js,time:()=>xR,topk:()=>cv,train:()=>tl,transpose:()=>tt,truncatedNormal:()=>uf,unique:()=>r1,unregisterGradient:()=>gE,unregisterKernel:()=>mE,unsortedSegmentSum:()=>dv,unstack:()=>ss,upcastType:()=>Ln,util:()=>v,valueAndGrad:()=>cD,valueAndGrads:()=>dD,variable:()=>pv,variableGrads:()=>X3,version:()=>w6,version_converter:()=>DU,version_core:()=>dp,version_cpu:()=>yH,version_layers:()=>G1,version_wasm:()=>sge,version_webgl:()=>HJ,webgl:()=>jJ,webgl_util:()=>FS,webgpu:()=>bC,where:()=>Bn,whereAsync:()=>a1,zeros:()=>Ht,zerosLike:()=>nt});var zl=(e=>typeof Aa!="undefined"?Aa:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof Aa!="undefined"?Aa:t)[n]}):e)(function(e){if(typeof Aa!="undefined")return Aa.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),CN=Object.create,Zp=Object.defineProperty,TN=Object.getOwnPropertyDescriptor,NN=Object.getOwnPropertyNames,EN=Object.getPrototypeOf,RN=Object.prototype.hasOwnProperty,e5=e=>Zp(e,"__esModule",{value:!0}),Ws=(e=>typeof zl!="undefined"?zl:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof zl!="undefined"?zl:t)[n]}):e)(function(e){if(typeof zl!="undefined")return zl.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),Qn=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},Me=(e,t)=>{e5(e);for(var n in t)Zp(e,n,{get:t[n],enumerable:!0})},$N=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of NN(t))!RN.call(e,s)&&s!=="default"&&Zp(e,s,{get:()=>t[s],enumerable:!(n=TN(t,s))||n.enumerable});return e},Jo=e=>$N(e5(Zp(e!=null?CN(EN(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),DN=Qn({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(P){}function s(P,T,M){this.low=P|0,this.high=T|0,this.unsigned=!!M}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(P){return(P&&P.__isLong__)===!0}s.isLong=r;var a={},o={};function i(P,T){var M,U,j;return T?(P>>>=0,(j=0<=P&&P<256)&&(U=o[P],U)?U:(M=c(P,(P|0)<0?-1:0,!0),j&&(o[P]=M),M)):(P|=0,(j=-128<=P&&P<128)&&(U=a[P],U)?U:(M=c(P,P<0?-1:0,!1),j&&(a[P]=M),M))}s.fromInt=i;function l(P,T){if(isNaN(P))return T?b:y;if(T){if(P<0)return b;if(P>=g)return R}else{if(P<=-A)return F;if(P+1>=A)return E}return P<0?l(-P,T).neg():c(P%m|0,P/m|0,T)}s.fromNumber=l;function c(P,T,M){return new s(P,T,M)}s.fromBits=c;var u=Math.pow;function d(P,T,M){if(P.length===0)throw Error("empty string");if(P==="NaN"||P==="Infinity"||P==="+Infinity"||P==="-Infinity")return y;if(typeof T=="number"?(M=T,T=!1):T=!!T,M=M||10,M<2||36<M)throw RangeError("radix");var U;if((U=P.indexOf("-"))>0)throw Error("interior hyphen");if(U===0)return d(P.substring(1),T,M).neg();for(var j=l(u(M,8)),z=y,X=0;X<P.length;X+=8){var Z=Math.min(8,P.length-X),J=parseInt(P.substring(X,X+Z),M);if(Z<8){var ee=l(u(M,Z));z=z.mul(ee).add(l(J))}else z=z.mul(j),z=z.add(l(J))}return z.unsigned=T,z}s.fromString=d;function p(P,T){return typeof P=="number"?l(P,T):typeof P=="string"?d(P,T):c(P.low,P.high,typeof T=="boolean"?T:P.unsigned)}s.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,A=g/2,x=i(f),y=i(0);s.ZERO=y;var b=i(0,!0);s.UZERO=b;var w=i(1);s.ONE=w;var k=i(1,!0);s.UONE=k;var C=i(-1);s.NEG_ONE=C;var E=c(4294967295|0,2147483647|0,!1);s.MAX_VALUE=E;var R=c(4294967295|0,4294967295|0,!0);s.MAX_UNSIGNED_VALUE=R;var F=c(0,2147483648|0,!1);s.MIN_VALUE=F;var D=s.prototype;D.toInt=function(){return this.unsigned?this.low>>>0:this.low},D.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},D.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(F)){var M=l(T),U=this.div(M),j=U.mul(M).sub(this);return U.toString(T)+j.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var z=l(u(T,6),this.unsigned),X=this,Z="";;){var J=X.div(z),ee=X.sub(J.mul(z)).toInt()>>>0,ne=ee.toString(T);if(X=J,X.isZero())return ne+Z;for(;ne.length<6;)ne="0"+ne;Z=""+ne+Z}},D.getHighBits=function(){return this.high},D.getHighBitsUnsigned=function(){return this.high>>>0},D.getLowBits=function(){return this.low},D.getLowBitsUnsigned=function(){return this.low>>>0},D.getNumBitsAbs=function(){if(this.isNegative())return this.eq(F)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,M=31;M>0&&(T&1<<M)==0;M--);return this.high!=0?M+33:M+1},D.isZero=function(){return this.high===0&&this.low===0},D.eqz=D.isZero,D.isNegative=function(){return!this.unsigned&&this.high<0},D.isPositive=function(){return this.unsigned||this.high>=0},D.isOdd=function(){return(this.low&1)==1},D.isEven=function(){return(this.low&1)==0},D.equals=function(T){return r(T)||(T=p(T)),this.unsigned!==T.unsigned&&this.high>>>31==1&&T.high>>>31==1?!1:this.high===T.high&&this.low===T.low},D.eq=D.equals,D.notEquals=function(T){return!this.eq(T)},D.neq=D.notEquals,D.ne=D.notEquals,D.lessThan=function(T){return this.comp(T)<0},D.lt=D.lessThan,D.lessThanOrEqual=function(T){return this.comp(T)<=0},D.lte=D.lessThanOrEqual,D.le=D.lessThanOrEqual,D.greaterThan=function(T){return this.comp(T)>0},D.gt=D.greaterThan,D.greaterThanOrEqual=function(T){return this.comp(T)>=0},D.gte=D.greaterThanOrEqual,D.ge=D.greaterThanOrEqual,D.compare=function(T){if(r(T)||(T=p(T)),this.eq(T))return 0;var M=this.isNegative(),U=T.isNegative();return M&&!U?-1:!M&&U?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},D.comp=D.compare,D.negate=function(){return!this.unsigned&&this.eq(F)?F:this.not().add(w)},D.neg=D.negate,D.add=function(T){r(T)||(T=p(T));var M=this.high>>>16,U=this.high&65535,j=this.low>>>16,z=this.low&65535,X=T.high>>>16,Z=T.high&65535,J=T.low>>>16,ee=T.low&65535,ne=0,Q=0,te=0,oe=0;return oe+=z+ee,te+=oe>>>16,oe&=65535,te+=j+J,Q+=te>>>16,te&=65535,Q+=U+Z,ne+=Q>>>16,Q&=65535,ne+=M+X,ne&=65535,c(te<<16|oe,ne<<16|Q,this.unsigned)},D.subtract=function(T){return r(T)||(T=p(T)),this.add(T.neg())},D.sub=D.subtract,D.multiply=function(T){if(this.isZero())return y;if(r(T)||(T=p(T)),n){var M=n.mul(this.low,this.high,T.low,T.high);return c(M,n.get_high(),this.unsigned)}if(T.isZero())return y;if(this.eq(F))return T.isOdd()?F:y;if(T.eq(F))return this.isOdd()?F:y;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(x)&&T.lt(x))return l(this.toNumber()*T.toNumber(),this.unsigned);var U=this.high>>>16,j=this.high&65535,z=this.low>>>16,X=this.low&65535,Z=T.high>>>16,J=T.high&65535,ee=T.low>>>16,ne=T.low&65535,Q=0,te=0,oe=0,he=0;return he+=X*ne,oe+=he>>>16,he&=65535,oe+=z*ne,te+=oe>>>16,oe&=65535,oe+=X*ee,te+=oe>>>16,oe&=65535,te+=j*ne,Q+=te>>>16,te&=65535,te+=z*ee,Q+=te>>>16,te&=65535,te+=X*J,Q+=te>>>16,te&=65535,Q+=U*ne+j*ee+z*J+X*Z,Q&=65535,c(oe<<16|he,Q<<16|te,this.unsigned)},D.mul=D.multiply,D.divide=function(T){if(r(T)||(T=p(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var M=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return c(M,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:y;var U,j,z;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return b;if(T.gt(this.shru(1)))return k;z=b}else{if(this.eq(F)){if(T.eq(w)||T.eq(C))return F;if(T.eq(F))return w;var X=this.shr(1);return U=X.div(T).shl(1),U.eq(y)?T.isNegative()?w:C:(j=this.sub(T.mul(U)),z=U.add(j.div(T)),z)}else if(T.eq(F))return this.unsigned?b:y;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();z=y}for(j=this;j.gte(T);){U=Math.max(1,Math.floor(j.toNumber()/T.toNumber()));for(var Z=Math.ceil(Math.log(U)/Math.LN2),J=Z<=48?1:u(2,Z-48),ee=l(U),ne=ee.mul(T);ne.isNegative()||ne.gt(j);)U-=J,ee=l(U,this.unsigned),ne=ee.mul(T);ee.isZero()&&(ee=w),z=z.add(ee),j=j.sub(ne)}return z},D.div=D.divide,D.modulo=function(T){if(r(T)||(T=p(T)),n){var M=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return c(M,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},D.mod=D.modulo,D.rem=D.modulo,D.not=function(){return c(~this.low,~this.high,this.unsigned)},D.and=function(T){return r(T)||(T=p(T)),c(this.low&T.low,this.high&T.high,this.unsigned)},D.or=function(T){return r(T)||(T=p(T)),c(this.low|T.low,this.high|T.high,this.unsigned)},D.xor=function(T){return r(T)||(T=p(T)),c(this.low^T.low,this.high^T.high,this.unsigned)},D.shiftLeft=function(T){return r(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?c(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):c(0,this.low<<T-32,this.unsigned)},D.shl=D.shiftLeft,D.shiftRight=function(T){return r(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?c(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):c(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},D.shr=D.shiftRight,D.shiftRightUnsigned=function(T){if(r(T)&&(T=T.toInt()),T&=63,T===0)return this;var M=this.high;if(T<32){var U=this.low;return c(U>>>T|M<<32-T,M>>>T,this.unsigned)}else return T===32?c(M,0,this.unsigned):c(M>>>T-32,0,this.unsigned)},D.shru=D.shiftRightUnsigned,D.shr_u=D.shiftRightUnsigned,D.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},D.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},D.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},D.toBytesLE=function(){var T=this.high,M=this.low;return[M&255,M>>>8&255,M>>>16&255,M>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},D.toBytesBE=function(){var T=this.high,M=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,M>>>24,M>>>16&255,M>>>8&255,M&255]},s.fromBytes=function(T,M,U){return U?s.fromBytesLE(T,M):s.fromBytesBE(T,M)},s.fromBytesLE=function(T,M){return new s(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,M)},s.fromBytesBE=function(T,M){return new s(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],M)}}}),_N=Qn({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),PN=Qn({"(disabled):util"(){}}),FN=Qn({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(c){var u=this,d=l();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(c),u.s0<0&&(u.s0+=1),u.s1-=d(c),u.s1<0&&(u.s1+=1),u.s2-=d(c),u.s2<0&&(u.s2+=1),d=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var d=new a(c),p=u&&u.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function l(){var c=4022871197,u=function(d){d=String(d);for(var p=0;p<d.length;p++){c+=d.charCodeAt(p);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),ON=Qn({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),MN=Qn({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,d==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),zN=Qn({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.x,p=c.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,c.i=p+1&7,f};function u(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}u(c,l)}function o(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.x&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),LN=Qn({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.w,p=c.X,h=c.i,f,m;return c.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,c.i=h,m+(d^d>>>16)|0};function u(d,p){var h,f,m,g,A,x=[],y=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,y=Math.max(y,p.length)),m=0,g=-32;g<y;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(A=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(A=A+1640531527|0,h=x[g&127]^=f+A,m=h==0?m+1:0);for(m>=128&&(x[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;d.w=A,d.X=x,d.i=m}u(c,l)}function o(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.X&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),BN=Qn({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.b,h=c.c,f=c.d,m=c.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,c.b=p=p<<20^p>>>12^h,c.c=h=h-f|0,c.d=f<<16^h>>>16^m,c.a=m-p|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var d=0;d<u.length+20;d++)c.b^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),WN=Qn({"(disabled):crypto"(){}}),VN=Qn({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",c=r.pow(a,o),u=r.pow(2,i),d=u*2,p=a-1,h;function f(w,k,C){var E=[];k=k==!0?{entropy:!0}:k||{};var R=x(A(k.entropy?[w,b(s)]:w==null?y():w,3),E),F=new m(E),D=function(){for(var P=F.g(o),T=c,M=0;P<u;)P=(P+M)*a,T*=a,M=F.g(1);for(;P>=d;)P/=2,T/=2,M>>>=1;return(P+M)/T};return D.int32=function(){return F.g(4)|0},D.quick=function(){return F.g(4)/4294967296},D.double=D,x(b(F.S),s),(k.pass||C||function(P,T,M,U){return U&&(U.S&&g(U,F),P.state=function(){return g(F,{})}),M?(r[l]=P,T):P})(D,R,"global"in k?k.global:this==r,k.state)}function m(w){var k,C=w.length,E=this,R=0,F=E.i=E.j=0,D=E.S=[];for(C||(w=[C++]);R<a;)D[R]=R++;for(R=0;R<a;R++)D[R]=D[F=p&F+w[R%C]+(k=D[R])],D[F]=k;(E.g=function(P){for(var T,M=0,U=E.i,j=E.j,z=E.S;P--;)T=z[U=p&U+1],M=M*a+z[p&(z[U]=z[j=p&j+T])+(z[j]=T)];return E.i=U,E.j=j,M})(a)}function g(w,k){return k.i=w.i,k.j=w.j,k.S=w.S.slice(),k}function A(w,k){var C=[],E=typeof w,R;if(k&&E=="object")for(R in w)try{C.push(A(w[R],k-1))}catch(F){}return C.length?C:E=="string"?w:w+"\0"}function x(w,k){for(var C=w+"",E,R=0;R<C.length;)k[p&R]=p&(E^=k[p&R]*19)+C.charCodeAt(R++);return b(k)}function y(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(w)),b(w)}catch(E){var k=n.navigator,C=k&&k.plugins;return[+new Date,n,C,n.screen,b(s)]}}function b(w){return String.fromCharCode.apply(0,w)}if(x(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=WN()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),Yp=Qn({"src/node_modules/seedrandom/index.js"(e,t){var n=FN(),s=ON(),r=MN(),a=zN(),o=LN(),i=BN(),l=VN();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),t5=Qn({"(disabled):src/node_modules/string_decoder/index.js"(){}}),UN=Qn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return te.buffer!=Tt&&vn(te.buffer),_t}function o(){return te.buffer!=Tt&&vn(te.buffer),ks}function i(){return te.buffer!=Tt&&vn(te.buffer),Fn}function l(){return te.buffer!=Tt&&vn(te.buffer),us}function c(){return te.buffer!=Tt&&vn(te.buffer),Ss}var u=typeof r!="undefined"?r:{},d,p;u.ready=new Promise(function(I,$){d=I,p=$});var h={},f;for(f in u)u.hasOwnProperty(f)&&(h[f]=u[f]);var m=[],g="./this.program",A=function(I,$){throw $},x=!1,y=!1,b=!1,w=!1;x=typeof window=="object",y=typeof importScripts=="function",b=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",w=!x&&!b&&!y;var k=u.ENVIRONMENT_IS_PTHREAD||!1;k&&(Tt=u.buffer);var C="";function E(I){return u.locateFile?u.locateFile(I,C):C+I}var R,F,D,P,T,M;if(b){y?C=Ws("path").dirname(C)+"/":C=__dirname+"/",R=function($,L){return T||(T=Ws("fs")),M||(M=Ws("path")),$=M.normalize($),T.readFileSync($,L?null:"utf8")},D=function($){var L=R($,!0);return L.buffer||(L=new Uint8Array(L)),we(L.buffer),L},process.argv.length>1&&(g=process.argv[1].replace(/\\/g,"/")),m=process.argv.slice(2),process.on("uncaughtException",function(I){if(!(I instanceof Ec))throw I}),process.on("unhandledRejection",Lr),A=function(I){process.exit(I)},u.inspect=function(){return"[Emscripten Module object]"};var U;try{U=Ws("worker_threads")}catch(I){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),I}global.Worker=U.Worker}else w?(typeof read!="undefined"&&(R=function($){return read($)}),D=function($){var L;return typeof readbuffer=="function"?new Uint8Array(readbuffer($)):(L=read($,"binary"),we(typeof L=="object"),L)},typeof scriptArgs!="undefined"?m=scriptArgs:typeof arguments!="undefined"&&(m=arguments),typeof quit=="function"&&(A=function(I){quit(I)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(x||y)&&(y?C=self.location.href:typeof document!="undefined"&&document.currentScript&&(C=document.currentScript.src),typeof s!="undefined"&&s&&(C=s),C.indexOf("blob:")!==0?C=C.substr(0,C.lastIndexOf("/")+1):C="",b?(R=function($,L){return T||(T=Ws("fs")),M||(M=Ws("path")),$=M.normalize($),T.readFileSync($,L?null:"utf8")},D=function($){var L=R($,!0);return L.buffer||(L=new Uint8Array(L)),we(L.buffer),L}):(R=function(I){var $=new XMLHttpRequest;return $.open("GET",I,!1),$.send(null),$.responseText},y&&(D=function(I){var $=new XMLHttpRequest;return $.open("GET",I,!1),$.responseType="arraybuffer",$.send(null),new Uint8Array($.response)}),F=function(I,$,L){var Y=new XMLHttpRequest;Y.open("GET",I,!0),Y.responseType="arraybuffer",Y.onload=function(){if(Y.status==200||Y.status==0&&Y.response){$(Y.response);return}L()},Y.onerror=L,Y.send(null)}),P=function(I){document.title=I});b&&typeof performance=="undefined"&&(global.performance=Ws("perf_hooks").performance);var j=u.print||console.log.bind(console),z=u.printErr||console.warn.bind(console);for(f in h)h.hasOwnProperty(f)&&(u[f]=h[f]);h=null,u.arguments&&(m=u.arguments),u.thisProgram&&(g=u.thisProgram),u.quit&&(A=u.quit);function X(I){X.shown||(X.shown={}),X.shown[I]||(X.shown[I]=1,z(I))}var Z=Atomics.load,J=Atomics.store,ee=Atomics.compareExchange,ne;u.wasmBinary&&(ne=u.wasmBinary);var Q=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Lr("no native wasm support detected");var te,oe,he=!1,be;function we(I,$){I||Lr("Assertion failed: "+$)}function Ce(I){var $=u["_"+I];return we($,"Cannot call unknown function "+I+", make sure it is exported"),$}function ze(I,$,L,Y,Ae){var me={string:function(On){var Ml=0;if(On!=null&&On!==0){var Jb=(On.length<<2)+1;Ml=Pl(Jb),ht(On,Ml,Jb)}return Ml},array:function(On){var Ml=Pl(On.length);return St(On,Ml),Ml}};function ge(On){return $==="string"?Ye(On):$==="boolean"?Boolean(On):On}var Te=Ce(I),dt=[],dn=0;if(Y)for(var tn=0;tn<Y.length;tn++){var ga=me[L[tn]];ga?(dn===0&&(dn=Nc()),dt[tn]=ga(Y[tn])):dt[tn]=Y[tn]}var Ol=Te.apply(null,dt);return Ol=ge(Ol),dn!==0&&_l(dn),Ol}function Ue(I,$,L,Y){L=L||[];var Ae=L.every(function(ge){return ge==="number"}),me=$!=="string";return me&&Ae&&!Y?Ce(I):function(){return ze(I,$,L,arguments,Y)}}function Xe(I,$,L){for(var Y=$+L,Ae="";!($>=Y);){var me=I[$++];if(!me)return Ae;if(!(me&128)){Ae+=String.fromCharCode(me);continue}var ge=I[$++]&63;if((me&224)==192){Ae+=String.fromCharCode((me&31)<<6|ge);continue}var Te=I[$++]&63;if((me&240)==224?me=(me&15)<<12|ge<<6|Te:me=(me&7)<<18|ge<<12|Te<<6|I[$++]&63,me<65536)Ae+=String.fromCharCode(me);else{var dt=me-65536;Ae+=String.fromCharCode(55296|dt>>10,56320|dt&1023)}}return Ae}function Ye(I,$){return I?Xe(o(),I,$):""}function pt(I,$,L,Y){if(!(Y>0))return 0;for(var Ae=L,me=L+Y-1,ge=0;ge<I.length;++ge){var Te=I.charCodeAt(ge);if(Te>=55296&&Te<=57343){var dt=I.charCodeAt(++ge);Te=65536+((Te&1023)<<10)|dt&1023}if(Te<=127){if(L>=me)break;$[L++]=Te}else if(Te<=2047){if(L+1>=me)break;$[L++]=192|Te>>6,$[L++]=128|Te&63}else if(Te<=65535){if(L+2>=me)break;$[L++]=224|Te>>12,$[L++]=128|Te>>6&63,$[L++]=128|Te&63}else{if(L+3>=me)break;$[L++]=240|Te>>18,$[L++]=128|Te>>12&63,$[L++]=128|Te>>6&63,$[L++]=128|Te&63}}return $[L]=0,L-Ae}function ht(I,$,L){return pt(I,o(),$,L)}function it(I){for(var $=0,L=0;L<I.length;++L){var Y=I.charCodeAt(L);Y>=55296&&Y<=57343&&(Y=65536+((Y&1023)<<10)|I.charCodeAt(++L)&1023),Y<=127?++$:Y<=2047?$+=2:Y<=65535?$+=3:$+=4}return $}function St(I,$){a().set(I,$)}function gt(I,$){return I%$>0&&(I+=$-I%$),I}var Tt,_t,ks,bn,nr,Fn,us,Ls,Ss;function vn(I){Tt=I,u.HEAP8=_t=new Int8Array(I),u.HEAP16=bn=new Int16Array(I),u.HEAP32=Fn=new Int32Array(I),u.HEAPU8=ks=new Uint8Array(I),u.HEAPU16=nr=new Uint16Array(I),u.HEAPU32=us=new Uint32Array(I),u.HEAPF32=Ls=new Float32Array(I),u.HEAPF64=Ss=new Float64Array(I)}var xr=u.INITIAL_MEMORY||16777216;if(k)te=u.wasmMemory,Tt=u.buffer;else if(u.wasmMemory)te=u.wasmMemory;else if(te=new WebAssembly.Memory({initial:xr/65536,maximum:2147483648/65536,shared:!0}),!(te.buffer instanceof SharedArrayBuffer))throw z("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");te&&(Tt=te.buffer),xr=Tt.byteLength,vn(Tt);var En,br=[],vr=[],ca=[],yc=[],sr=[],Ip=!1,f0=!1;k||vr.push({func:function(){Up()}});function Cp(){if(!k){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)m0(u.preRun.shift());Rl(br)}}function Tp(){Ip=!0,!k&&Rl(vr)}function Np(){k||Rl(ca)}function Yn(){k||(f0=!0)}function Ep(){if(!k){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)g0(u.postRun.shift());Rl(sr)}}function m0(I){br.unshift(I)}function g0(I){sr.unshift(I)}var Bs=0,xc=null,Xo=null;function A0(I){we(!k,"addRunDependency cannot be used in a pthread worker"),Bs++,u.monitorRunDependencies&&u.monitorRunDependencies(Bs)}function y0(I){if(Bs--,u.monitorRunDependencies&&u.monitorRunDependencies(Bs),Bs==0&&(xc!==null&&(clearInterval(xc),xc=null),Xo)){var $=Xo;Xo=null,$()}}u.preloadedImages={},u.preloadedAudios={};function Lr(I){u.onAbort&&u.onAbort(I),k&&console.error("Pthread aborting at "+new Error().stack),I+="",z(I),he=!0,be=1,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.";var $=new WebAssembly.RuntimeError(I);throw p($),$}function Ko(I,$){return String.prototype.startsWith?I.startsWith($):I.indexOf($)===0}var x0="data:application/octet-stream;base64,";function Rp(I){return Ko(I,x0)}var b0="file://";function $p(I){return Ko(I,b0)}var Jn="tfjs-backend-wasm-threaded-simd.wasm";Rp(Jn)||(Jn=E(Jn));function v0(I){try{if(I==Jn&&ne)return new Uint8Array(ne);if(D)return D(I);throw"both async and sync fetching of the wasm failed"}catch($){Lr($)}}function Dp(){if(!ne&&(x||y)){if(typeof fetch=="function"&&!$p(Jn))return fetch(Jn,{credentials:"same-origin"}).then(function(I){if(!I.ok)throw"failed to load wasm binary file at '"+Jn+"'";return I.arrayBuffer()}).catch(function(){return v0(Jn)});if(F)return new Promise(function(I,$){F(Jn,function(L){I(new Uint8Array(L))},$)})}return Promise.resolve().then(function(){return v0(Jn)})}function w0(){var I={a:fg};function $(ge,Te){var dt=ge.exports;if(u.asm=dt,En=u.asm.kb,oe=Te,!k){var dn=Re.unusedWorkers.length;Re.unusedWorkers.forEach(function(tn){Re.loadWasmModuleToWorker(tn,function(){--dn||y0("wasm-instantiate")})})}}k||A0("wasm-instantiate");function L(ge){$(ge.instance,ge.module)}function Y(ge){return Dp().then(function(Te){return WebAssembly.instantiate(Te,I)}).then(ge,function(Te){z("failed to asynchronously prepare wasm: "+Te),Lr(Te)})}function Ae(){return!ne&&typeof WebAssembly.instantiateStreaming=="function"&&!Rp(Jn)&&!$p(Jn)&&typeof fetch=="function"?fetch(Jn,{credentials:"same-origin"}).then(function(ge){var Te=WebAssembly.instantiateStreaming(ge,I);return Te.then(L,function(dt){return z("wasm streaming compile failed: "+dt),z("falling back to ArrayBuffer instantiation"),Y(L)})}):Y(L)}if(u.instantiateWasm)try{var me=u.instantiateWasm(I,$);return me}catch(ge){return z("Module.instantiateWasm callback failed with error: "+ge),!1}return Ae().catch(p),{}}var _p={10072:function(){throw"Canceled!"},10090:function(I,$){setTimeout(function(){jb(I,$)},0)}};function k0(){Re.initRuntime()}function Rl(I){for(;I.length>0;){var $=I.shift();if(typeof $=="function"){$(u);continue}var L=$.func;typeof L=="number"?$.arg===void 0?En.get(L)():En.get(L)($.arg):L($.arg===void 0?null:$.arg)}}var da={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function bc(I,$){if(I<=0||I>a().length||I&!0||$<0)return-28;if($==0)return 0;$>=2147483647&&($=1/0);var L=Atomics.load(i(),Fl>>2),Y=0;if(L==I){var Ae=Atomics.compareExchange(i(),Fl>>2,L,0);if(Ae==L&&(--$,Y=1,$<=0))return 1}var me=Atomics.notify(i(),I>>2,$);if(me>=0)return me+Y;throw"Atomics.notify returned an unexpected value "+me}u._emscripten_futex_wake=bc;function S0(I){if(k)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in killThread!";i()[I+12>>2]=0;var $=Re.pthreads[I];$.worker.terminate(),Re.freeThreadData($),Re.runningWorkers.splice(Re.runningWorkers.indexOf($.worker),1),$.worker.pthread=void 0}function I0(I){if(k)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cancelThread!";var $=Re.pthreads[I];$.worker.postMessage({cmd:"cancel"})}function Pp(I){if(k)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cleanupThread!";var $=Re.pthreads[I];if($){i()[I+12>>2]=0;var L=$.worker;Re.returnWorkerToPool(L)}}var Re={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var I=8,$=0;$<I;++$)Re.allocateUnusedWorker()},initRuntime:function(){for(var I=Yo(228),$=0;$<228/4;++$)l()[I/4+$]=0;i()[I+12>>2]=I;var L=I+152;i()[L>>2]=L;for(var Y=Yo(512),$=0;$<128;++$)l()[Y/4+$]=0;Atomics.store(l(),I+100>>2,Y),Atomics.store(l(),I+40>>2,I),Pg(I,!y,1),Gb(I)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Re.threadExitHandlers.length>0;)Re.threadExitHandlers.pop()();k&&ma()&&Ub()},runExitHandlersAndDeinitThread:function(I,$){Atomics.store(l(),I+56>>2,1),Atomics.store(l(),I+60>>2,0),Re.runExitHandlers(),Atomics.store(l(),I+4>>2,$),Atomics.store(l(),I+0>>2,1),bc(I+0,2147483647),Pg(0,0,0)},threadExit:function(I){var $=ma();$&&(Re.runExitHandlersAndDeinitThread($,I),k&&postMessage({cmd:"exit"}))},threadCancel:function(){Re.runExitHandlersAndDeinitThread(ma(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var I in Re.pthreads){var $=Re.pthreads[I];$&&$.worker&&Re.returnWorkerToPool($.worker)}Re.pthreads={};for(var L=0;L<Re.unusedWorkers.length;++L){var Y=Re.unusedWorkers[L];Y.terminate()}Re.unusedWorkers=[];for(var L=0;L<Re.runningWorkers.length;++L){var Y=Re.runningWorkers[L],$=Y.pthread;Re.freeThreadData($),Y.terminate()}Re.runningWorkers=[]},freeThreadData:function(I){if(!!I){if(I.threadInfoStruct){var $=i()[I.threadInfoStruct+100>>2];i()[I.threadInfoStruct+100>>2]=0,Tc($),Tc(I.threadInfoStruct)}I.threadInfoStruct=0,I.allocatedOwnStack&&I.stackBase&&Tc(I.stackBase),I.stackBase=0,I.worker&&(I.worker.pthread=null)}},returnWorkerToPool:function(I){Re.runWithoutMainThreadQueuedCalls(function(){delete Re.pthreads[I.pthread.threadInfoStruct],Re.unusedWorkers.push(I),Re.runningWorkers.splice(Re.runningWorkers.indexOf(I),1),Re.freeThreadData(I.pthread),I.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(I){i()[Yb>>2]=0;try{I()}finally{i()[Yb>>2]=1}},receiveObjectTransfer:function(I){},loadWasmModuleToWorker:function(I,$){I.onmessage=function(L){var Y=L.data,Ae=Y.cmd;if(I.pthread&&(Re.currentProxiedOperationCallerThread=I.pthread.threadInfoStruct),Y.targetThread&&Y.targetThread!=ma()){var me=Re.pthreads[Y.targetThread];me?me.worker.postMessage(L.data,Y.transferList):console.error('Internal error! Worker sent a message "'+Ae+'" to target pthread '+Y.targetThread+", but that thread no longer exists!"),Re.currentProxiedOperationCallerThread=void 0;return}if(Ae==="processQueuedMainThreadWork")Xp();else if(Ae==="spawnThread")Wp(L.data);else if(Ae==="cleanupThread")Pp(Y.thread);else if(Ae==="killThread")S0(Y.thread);else if(Ae==="cancelThread")I0(Y.thread);else if(Ae==="loaded")I.loaded=!0,$&&$(I),I.runPthread&&(I.runPthread(),delete I.runPthread);else if(Ae==="print")j("Thread "+Y.threadId+": "+Y.text);else if(Ae==="printErr")z("Thread "+Y.threadId+": "+Y.text);else if(Ae==="alert")alert("Thread "+Y.threadId+": "+Y.text);else if(Ae==="exit"){var ge=I.pthread&&Atomics.load(l(),I.pthread.threadInfoStruct+64>>2);ge&&Re.returnWorkerToPool(I)}else if(Ae==="exitProcess")try{kN(Y.returnCode)}catch(Te){if(Te instanceof Ec)return;throw Te}else Ae==="cancelDone"?Re.returnWorkerToPool(I):Ae==="objectTransfer"?Re.receiveObjectTransfer(L.data):L.data.target==="setimmediate"?I.postMessage(L.data):z("worker sent an unknown command "+Ae);Re.currentProxiedOperationCallerThread=void 0},I.onerror=function(L){z("pthread sent an error! "+L.filename+":"+L.lineno+": "+L.message)},b&&(I.on("message",function(L){I.onmessage({data:L})}),I.on("error",function(L){I.onerror(L)}),I.on("exit",function(L){})),I.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||s,wasmMemory:te,wasmModule:oe})},allocateUnusedWorker:function(){var I=E("tfjs-backend-wasm-threaded-simd.worker.js");Re.unusedWorkers.push(new Worker(I))},getNewWorker:function(){return Re.unusedWorkers.length==0&&(Re.allocateUnusedWorker(),Re.loadWasmModuleToWorker(Re.unusedWorkers[0])),Re.unusedWorkers.length>0?Re.unusedWorkers.pop():null},busySpinWait:function(I){for(var $=performance.now()+I;performance.now()<$;);}};function C0(I,$){Kb(I,$),_l(I)}u.establishStackSpace=C0;function T0(){return Q}u.getNoExitRuntime=T0;function N0(I,$){return En.get(I)($)}u.invokeEntryPoint=N0;function E0(I,$,L,Y){Lr("Assertion failed: "+Ye(I)+", at: "+[$?Ye($):"unknown filename",L,Y?Ye(Y):"unknown function"])}function R0(I,$){var L=_main(I,$)}var Zo;b?Zo=function(){var I=process.hrtime();return I[0]*1e3+I[1]/1e6}:k?Zo=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?Zo=dateNow:Zo=function(){return performance.now()};function $0(I){return i()[Wb()>>2]=I,I}function D0(I,$){if(k)return pa(1,1,I,$)}function _0(I,$){if(I==$)postMessage({cmd:"processQueuedMainThreadWork"});else if(k)postMessage({targetThread:I,cmd:"processThreadQueue"});else{var L=Re.pthreads[I],Y=L&&L.worker;if(!Y)return;Y.postMessage({cmd:"processThreadQueue"})}return 1}function P0(){Lr()}function F0(I,$,L){var Y=L0($,L);return _p[I].apply(null,Y)}function O0(I,$){}function Fp(I,$,L){if(I<=0||I>a().length||I&!0)return-28;if(x){if(Atomics.load(i(),I>>2)!=$)return-6;for(var Ae=performance.now(),me=Ae+L,ge=Atomics.exchange(i(),Fl>>2,I);;){if(Ae=performance.now(),Ae>me)return ge=Atomics.exchange(i(),Fl>>2,0),-73;if(ge=Atomics.exchange(i(),Fl>>2,0),ge==0)break;if(Xp(),Atomics.load(i(),I>>2)!=$)return-6;ge=Atomics.exchange(i(),Fl>>2,I)}return 0}else{var Y=Atomics.wait(i(),I>>2,$,L);if(Y==="timed-out")return-73;if(Y==="not-equal")return-6;if(Y==="ok")return 0;throw"Atomics.wait returned an unexpected value "+Y}}function M0(I,$,L){o().copyWithin(I,$,$+L)}function z0(){return b?Ws("os").cpus().length:navigator.hardwareConcurrency}function pa(I,$){for(var L=arguments.length-2,Y=Nc(),Ae=L,me=Pl(Ae*8),ge=me>>3,Te=0;Te<L;Te++){var dt=arguments[2+Te];c()[ge+Te]=dt}var dn=Xb(I,Ae,me,$);return _l(Y),dn}var vc=[],wc=[];function L0(I,$){wc.length=0;var L;for($>>=2;L=o()[I++];){var Y=L<105;Y&&$&1&&$++,wc.push(Y?c()[$++>>1]:i()[$]),++$}return wc}function B0(I,$,L){vc.length=$;for(var Y=L>>3,Ae=0;Ae<$;Ae++)vc[Ae]=c()[Y+Ae];var me=I<0,ge=me?_p[-I-1]:hg[I];return ge.apply(null,vc)}function W0(){return o().length}function V0(I){try{return te.grow(I-Tt.byteLength+65535>>>16),vn(te.buffer),1}catch($){}}function U0(I){var $=W0();if(I<=$)return!1;var L=2147483648;if(I>L)return!1;for(var Y=1;Y<=4;Y*=2){var Ae=$*(1+.2/Y);Ae=Math.min(Ae,I+100663296);var me=Math.min(L,gt(Math.max(I,Ae),65536)),ge=V0(me);if(ge)return!0}return!1}var Ge={inEventHandler:0,removeAllEventListeners:function(){for(var I=Ge.eventHandlers.length-1;I>=0;--I)Ge._removeHandler(I);Ge.eventHandlers=[],Ge.deferredCalls=[]},registerRemoveEventListeners:function(){Ge.removeEventListenersRegistered||(yc.push(Ge.removeAllEventListeners),Ge.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(I,$,L){function Y(ge,Te){if(ge.length!=Te.length)return!1;for(var dt in ge)if(ge[dt]!=Te[dt])return!1;return!0}for(var Ae in Ge.deferredCalls){var me=Ge.deferredCalls[Ae];if(me.targetFunction==I&&Y(me.argsList,L))return}Ge.deferredCalls.push({targetFunction:I,precedence:$,argsList:L}),Ge.deferredCalls.sort(function(ge,Te){return ge.precedence<Te.precedence})},removeDeferredCalls:function(I){for(var $=0;$<Ge.deferredCalls.length;++$)Ge.deferredCalls[$].targetFunction==I&&(Ge.deferredCalls.splice($,1),--$)},canPerformEventHandlerRequests:function(){return Ge.inEventHandler&&Ge.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Ge.canPerformEventHandlerRequests())for(var I=0;I<Ge.deferredCalls.length;++I){var $=Ge.deferredCalls[I];Ge.deferredCalls.splice(I,1),--I,$.targetFunction.apply(null,$.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(I,$){for(var L=0;L<Ge.eventHandlers.length;++L)Ge.eventHandlers[L].target==I&&(!$||$==Ge.eventHandlers[L].eventTypeString)&&Ge._removeHandler(L--)},_removeHandler:function(I){var $=Ge.eventHandlers[I];$.target.removeEventListener($.eventTypeString,$.eventListenerFunc,$.useCapture),Ge.eventHandlers.splice(I,1)},registerOrRemoveHandler:function(I){var $=function(Ae){++Ge.inEventHandler,Ge.currentEventHandler=I,Ge.runDeferredCalls(),I.handlerFunc(Ae),Ge.runDeferredCalls(),--Ge.inEventHandler};if(I.callbackfunc)I.eventListenerFunc=$,I.target.addEventListener(I.eventTypeString,$,I.useCapture),Ge.eventHandlers.push(I),Ge.registerRemoveEventListeners();else for(var L=0;L<Ge.eventHandlers.length;++L)Ge.eventHandlers[L].target==I.target&&Ge.eventHandlers[L].eventTypeString==I.eventTypeString&&Ge._removeHandler(L--)},queueEventHandlerOnThread_iiii:function(I,$,L,Y,Ae){var me=Nc(),ge=Pl(12);i()[ge>>2]=L,i()[ge+4>>2]=Y,i()[ge+8>>2]=Ae,_g(0,I,637534208,$,Y,ge),_l(me)},getTargetThreadForEventCallback:function(I){switch(I){case 1:return 0;case 2:return Re.currentProxiedOperationCallerThread;default:return I}},getNodeNameForTarget:function(I){return I?I==window?"#window":I==screen?"#screen":I&&I.nodeName?I.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function G0(I){var $=it(I)+1,L=Yo($);return ht(I,L,$),L}function H0(I,$,L,Y){var Ae=Nc(),me=Pl(12),ge=0;$&&(ge=G0($)),i()[me>>2]=ge,i()[me+4>>2]=L,i()[me+8>>2]=Y,_g(0,I,657457152,0,ge,me),_l(Ae)}function j0(I,$,L,Y){$=$?Ye($):"",H0(I,$,L,Y)}function q0(I){return I>2?Ye(I):I}var X0=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function K0(I){I=q0(I);var $=X0[I]||(typeof document!="undefined"?document.querySelector(I):void 0);return $}function kc(I){return K0(I)}function Op(I,$,L){var Y=kc(I);if(!Y)return-4;if(Y.canvasSharedPtr&&(i()[Y.canvasSharedPtr>>2]=$,i()[Y.canvasSharedPtr+4>>2]=L),Y.offscreenCanvas||!Y.controlTransferredOffscreen){Y.offscreenCanvas&&(Y=Y.offscreenCanvas);var Ae=!1;if(Y.GLctxObject&&Y.GLctxObject.GLctx){var me=Y.GLctxObject.GLctx.getParameter(2978);Ae=me[0]===0&&me[1]===0&&me[2]===Y.width&&me[3]===Y.height}Y.width=$,Y.height=L,Ae&&Y.GLctxObject.GLctx.viewport(0,0,$,L)}else if(Y.canvasSharedPtr){var ge=i()[Y.canvasSharedPtr+8>>2];return j0(ge,I,$,L),1}else return-4;return 0}function Mp(I,$,L){return k?pa(2,1,I,$,L):Op(I,$,L)}function Z0(I,$,L){var Y=kc(I);return Y?Op(I,$,L):Mp(I,$,L)}function Y0(I){}function J0(I,$){}function Q0(I){var $=I.getExtension("ANGLE_instanced_arrays");if($)return I.vertexAttribDivisor=function(L,Y){$.vertexAttribDivisorANGLE(L,Y)},I.drawArraysInstanced=function(L,Y,Ae,me){$.drawArraysInstancedANGLE(L,Y,Ae,me)},I.drawElementsInstanced=function(L,Y,Ae,me,ge){$.drawElementsInstancedANGLE(L,Y,Ae,me,ge)},1}function eg(I){var $=I.getExtension("OES_vertex_array_object");if($)return I.createVertexArray=function(){return $.createVertexArrayOES()},I.deleteVertexArray=function(L){$.deleteVertexArrayOES(L)},I.bindVertexArray=function(L){$.bindVertexArrayOES(L)},I.isVertexArray=function(L){return $.isVertexArrayOES(L)},1}function tg(I){var $=I.getExtension("WEBGL_draw_buffers");if($)return I.drawBuffers=function(L,Y){$.drawBuffersWEBGL(L,Y)},1}function ng(I){return!!(I.multiDrawWebgl=I.getExtension("WEBGL_multi_draw"))}var ut={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function($){ut.lastError||(ut.lastError=$)},getNewId:function(I){for(var $=ut.counter++,L=I.length;L<$;L++)I[L]=null;return $},getSource:function(I,$,L,Y){for(var Ae="",me=0;me<$;++me){var ge=Y?i()[Y+me*4>>2]:-1;Ae+=Ye(i()[L+me*4>>2],ge<0?void 0:ge)}return Ae},createContext:function(I,$){var L=I.getContext("webgl",$);if(!L)return 0;var Y=ut.registerContext(L,$);return Y},registerContext:function(I,$){var L=Yo(8);i()[L+4>>2]=ma();var Y={handle:L,attributes:$,version:$.majorVersion,GLctx:I};return I.canvas&&(I.canvas.GLctxObject=Y),ut.contexts[L]=Y,(typeof $.enableExtensionsByDefault=="undefined"||$.enableExtensionsByDefault)&&ut.initExtensions(Y),L},makeContextCurrent:function(I){return ut.currentContext=ut.contexts[I],u.ctx=ha=ut.currentContext&&ut.currentContext.GLctx,!(I&&!ha)},getContext:function(I){return ut.contexts[I]},deleteContext:function(I){ut.currentContext===ut.contexts[I]&&(ut.currentContext=null),typeof Ge=="object"&&Ge.removeAllHandlersOnTarget(ut.contexts[I].GLctx.canvas),ut.contexts[I]&&ut.contexts[I].GLctx.canvas&&(ut.contexts[I].GLctx.canvas.GLctxObject=void 0),Tc(ut.contexts[I].handle),ut.contexts[I]=null},initExtensions:function(I){if(I||(I=ut.currentContext),!I.initExtensionsDone){I.initExtensionsDone=!0;var $=I.GLctx;Q0($),eg($),tg($),$.disjointTimerQueryExt=$.getExtension("EXT_disjoint_timer_query"),ng($);var L=$.getSupportedExtensions()||[];L.forEach(function(Y){Y.indexOf("lose_context")<0&&Y.indexOf("debug")<0&&$.getExtension(Y)})}},populateUniformTable:function(I){for(var $=ut.programs[I],L=ut.programInfos[I]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},Y=L.uniforms,Ae=ha.getProgramParameter($,35718),me=0;me<Ae;++me){var ge=ha.getActiveUniform($,me),Te=ge.name;L.maxUniformLength=Math.max(L.maxUniformLength,Te.length+1),Te.slice(-1)=="]"&&(Te=Te.slice(0,Te.lastIndexOf("[")));var dt=ha.getUniformLocation($,Te);if(dt){var dn=ut.getNewId(ut.uniforms);Y[Te]=[ge.size,dn],ut.uniforms[dn]=dt;for(var tn=1;tn<ge.size;++tn){var ga=Te+"["+tn+"]";dt=ha.getUniformLocation($,ga),dn=ut.getNewId(ut.uniforms),ut.uniforms[dn]=dt}}}}},sg=["default","low-power","high-performance"];function rg(I,$){var L=$>>2,Y=i()[L+(24>>2)],Ae={alpha:!!i()[L+(0>>2)],depth:!!i()[L+(4>>2)],stencil:!!i()[L+(8>>2)],antialias:!!i()[L+(12>>2)],premultipliedAlpha:!!i()[L+(16>>2)],preserveDrawingBuffer:!!i()[L+(20>>2)],powerPreference:sg[Y],failIfMajorPerformanceCaveat:!!i()[L+(28>>2)],majorVersion:i()[L+(32>>2)],minorVersion:i()[L+(36>>2)],enableExtensionsByDefault:i()[L+(40>>2)],explicitSwapControl:i()[L+(44>>2)],proxyContextToMainThread:i()[L+(48>>2)],renderViaOffscreenBackBuffer:i()[L+(52>>2)]},me=kc(I);if(!me||Ae.explicitSwapControl)return 0;var ge=ut.createContext(me,Ae);return ge}function ag(I,$){return rg(I,$)}var $l={mappings:{},buffers:[null,[],[]],printChar:function(I,$){var L=$l.buffers[I];$===0||$===10?((I===1?j:z)(Xe(L,0)),L.length=0):L.push($)},varargs:void 0,get:function(){$l.varargs+=4;var I=i()[$l.varargs-4>>2];return I},getStr:function(I){var $=Ye(I);return $},get64:function(I,$){return I}};function zp(I){return k?pa(3,1,I):0}function Lp(I,$,L,Y,Ae){if(k)return pa(4,1,I,$,L,Y,Ae)}function Bp(I,$,L,Y){if(k)return pa(5,1,I,$,L,Y);for(var Ae=0,me=0;me<L;me++){for(var ge=i()[$+me*8>>2],Te=i()[$+(me*8+4)>>2],dt=0;dt<Te;dt++)$l.printChar(I,o()[ge+dt]);Ae+=Te}return i()[Y>>2]=Ae,0}function og(I){var $=Re.threadExitHandlers.pop();I&&$()}function ig(I,$){Re.threadExitHandlers.push(function(){En.get(I)($)})}function Wp(I){if(k)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var $=Re.getNewWorker();if($.pthread!==void 0)throw"Internal error!";if(!I.pthread_ptr)throw"Internal error, no pthread ptr!";Re.runningWorkers.push($);for(var L=Yo(128*4),Y=0;Y<128;++Y)i()[L+Y*4>>2]=0;var Ae=I.stackBase+I.stackSize,me=Re.pthreads[I.pthread_ptr]={worker:$,stackBase:I.stackBase,stackSize:I.stackSize,allocatedOwnStack:I.allocatedOwnStack,threadInfoStruct:I.pthread_ptr},ge=me.threadInfoStruct>>2;Atomics.store(l(),ge+(64>>2),I.detached),Atomics.store(l(),ge+(100>>2),L),Atomics.store(l(),ge+(40>>2),me.threadInfoStruct),Atomics.store(l(),ge+(80>>2),I.stackSize),Atomics.store(l(),ge+(76>>2),Ae),Atomics.store(l(),ge+(104>>2),I.stackSize),Atomics.store(l(),ge+(104+8>>2),Ae),Atomics.store(l(),ge+(104+12>>2),I.detached);var Te=Vb(),dt=Te+40;Atomics.store(l(),ge+(172>>2),dt),$.pthread=me;var dn={cmd:"run",start_routine:I.startRoutine,arg:I.arg,threadInfoStruct:I.pthread_ptr,stackBase:I.stackBase,stackSize:I.stackSize};$.runPthread=function(){dn.time=performance.now(),$.postMessage(dn,I.transferList)},$.loaded&&($.runPthread(),delete $.runPthread)}function lg(I,$,L,Y){if(typeof SharedArrayBuffer=="undefined")return z("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!I)return z("pthread_create called with a null thread pointer!"),28;var Ae=[],me=0;if(k&&(Ae.length===0||me))return qb(687865856,I,$,L,Y);if(me)return me;var ge=0,Te=0,dt=0;$&&$!=-1?(ge=i()[$>>2],ge+=81920,Te=i()[$+8>>2],dt=i()[$+12>>2]!==0):ge=2097152;var dn=Te==0;dn?Te=Zb(16,ge):(Te-=ge,we(Te>0));for(var tn=Yo(228),ga=0;ga<228>>2;++ga)l()[(tn>>2)+ga]=0;i()[I>>2]=tn,i()[tn+12>>2]=tn;var Ol=tn+152;i()[Ol>>2]=Ol;var On={stackBase:Te,stackSize:ge,allocatedOwnStack:dn,detached:dt,startRoutine:L,pthread_ptr:tn,arg:Y,transferList:Ae};return k?(On.cmd="spawnThread",postMessage(On,Ae)):Wp(On),0}function ug(){if(!!k){var I=ma();if(!!I){var $=Atomics.load(l(),I+56>>2);if(!$){var L=Atomics.load(l(),I+0>>2);if(L==2)throw"Canceled!"}}}}function cg(){b||y||X("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function dg(I,$,L){if(!I)return z("pthread_join attempted on a null thread pointer!"),da.ESRCH;if(k&&ma()==I)return z("PThread "+I+" is attempting to join to itself!"),da.EDEADLK;if(!k&&Hb()==I)return z("Main thread "+I+" is attempting to join to itself!"),da.EDEADLK;var Y=i()[I+12>>2];if(Y!==I)return z("pthread_join attempted on thread "+I+", which does not point to a valid thread, or does not exist anymore!"),da.ESRCH;var Ae=Atomics.load(l(),I+64>>2);if(Ae)return z("Attempted to join thread "+I+", which was already detached!"),da.EINVAL;for(L&&cg();;){var me=Atomics.load(l(),I+0>>2);if(me==1){var ge=Atomics.load(l(),I+4>>2);return $&&(i()[$>>2]=ge),Atomics.store(l(),I+64>>2,1),k?postMessage({cmd:"cleanupThread",thread:I}):Pp(I),0}if(!L)return da.EBUSY;ug(),k||Xp(),Fp(I+0,me,k?100:1)}}function pg(I,$){return dg(I,$,!0)}function Vp(I){if(k)return pa(6,1,I);switch(I){case 30:return 16384;case 85:var $=2147483648;return $/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return $0(28),-1}k||Re.initMainThreadBlock();var ha,hg=[null,D0,Mp,zp,Lp,Bp,Vp],fg={e:E0,r:R0,x:_0,b:P0,y:F0,j:O0,d:Fp,c:bc,f:Zo,p:M0,A:z0,u:B0,q:U0,v:Z0,i:Y0,s:J0,w:ag,l:zp,n:Lp,g:Bp,o:k0,a:te||u.wasmMemory,z:og,k:ig,h:lg,m:pg,t:Vp},Bb=w0(),Up=u.___wasm_call_ctors=function(){return(Up=u.___wasm_call_ctors=u.asm.B).apply(null,arguments)},mg=u._init=function(){return(mg=u._init=u.asm.C).apply(null,arguments)},gg=u._init_with_threads_count=function(){return(gg=u._init_with_threads_count=u.asm.D).apply(null,arguments)},Ag=u._get_threads_count=function(){return(Ag=u._get_threads_count=u.asm.E).apply(null,arguments)},yg=u._register_tensor=function(){return(yg=u._register_tensor=u.asm.F).apply(null,arguments)},xg=u._dispose_data=function(){return(xg=u._dispose_data=u.asm.G).apply(null,arguments)},bg=u._dispose=function(){return(bg=u._dispose=u.asm.H).apply(null,arguments)},vg=u._Abs=function(){return(vg=u._Abs=u.asm.I).apply(null,arguments)},wg=u._Add=function(){return(wg=u._Add=u.asm.J).apply(null,arguments)},kg=u._AddN=function(){return(kg=u._AddN=u.asm.K).apply(null,arguments)},Sg=u._All=function(){return(Sg=u._All=u.asm.L).apply(null,arguments)},Ig=u._Any=function(){return(Ig=u._Any=u.asm.M).apply(null,arguments)},Cg=u._ArgMax=function(){return(Cg=u._ArgMax=u.asm.N).apply(null,arguments)},Tg=u._AvgPool=function(){return(Tg=u._AvgPool=u.asm.O).apply(null,arguments)},Ng=u._BatchMatMul=function(){return(Ng=u._BatchMatMul=u.asm.P).apply(null,arguments)},Eg=u._Ceil=function(){return(Eg=u._Ceil=u.asm.Q).apply(null,arguments)},Rg=u._ClipByValue=function(){return(Rg=u._ClipByValue=u.asm.R).apply(null,arguments)},$g=u._Conv2D=function(){return($g=u._Conv2D=u.asm.S).apply(null,arguments)},Gp=u._Conv2DBackpropInput=function(){return(Gp=u._Conv2DBackpropInput=u.asm.T).apply(null,arguments)},Hp=u._Cos=function(){return(Hp=u._Cos=u.asm.U).apply(null,arguments)},Sc=u._Cosh=function(){return(Sc=u._Cosh=u.asm.V).apply(null,arguments)},Dl=u._CropAndResize=function(){return(Dl=u._CropAndResize=u.asm.W).apply(null,arguments)},Dg=u._Cumsum=function(){return(Dg=u._Cumsum=u.asm.X).apply(null,arguments)},Ic=u._DepthToSpace=function(){return(Ic=u._DepthToSpace=u.asm.Y).apply(null,arguments)},se=u._DepthwiseConv2dNative=function(){return(se=u._DepthwiseConv2dNative=u.asm.Z).apply(null,arguments)},ie=u._Elu=function(){return(ie=u._Elu=u.asm._).apply(null,arguments)},ke=u._Equal=function(){return(ke=u._Equal=u.asm.$).apply(null,arguments)},lt=u._Exp=function(){return(lt=u._Exp=u.asm.aa).apply(null,arguments)},Lt=u._FlipLeftRight=function(){return(Lt=u._FlipLeftRight=u.asm.ba).apply(null,arguments)},Nt=u._Floor=function(){return(Nt=u._Floor=u.asm.ca).apply(null,arguments)},Je=u._FloorDiv=function(){return(Je=u._FloorDiv=u.asm.da).apply(null,arguments)},Qe=u._FusedBatchNorm=function(){return(Qe=u._FusedBatchNorm=u.asm.ea).apply(null,arguments)},wn=u._FusedConv2D=function(){return(wn=u._FusedConv2D=u.asm.fa).apply(null,arguments)},Br=u._FusedDepthwiseConv2D=function(){return(Br=u._FusedDepthwiseConv2D=u.asm.ga).apply(null,arguments)},Wr=u._Gather=function(){return(Wr=u._Gather=u.asm.ha).apply(null,arguments)},jp=u._GatherNd=function(){return(jp=u._GatherNd=u.asm.ia).apply(null,arguments)},Cc=u._Greater=function(){return(Cc=u._Greater=u.asm.ja).apply(null,arguments)},cs=u._GreaterEqual=function(){return(cs=u._GreaterEqual=u.asm.ka).apply(null,arguments)},fa=u._LeakyRelu=function(){return(fa=u._LeakyRelu=u.asm.la).apply(null,arguments)},qp=u._Less=function(){return(qp=u._Less=u.asm.ma).apply(null,arguments)},TT=u._LessEqual=function(){return(TT=u._LessEqual=u.asm.na).apply(null,arguments)},NT=u._Log=function(){return(NT=u._Log=u.asm.oa).apply(null,arguments)},ET=u._LogicalAnd=function(){return(ET=u._LogicalAnd=u.asm.pa).apply(null,arguments)},RT=u._Max=function(){return(RT=u._Max=u.asm.qa).apply(null,arguments)},$T=u._MaxPool=function(){return($T=u._MaxPool=u.asm.ra).apply(null,arguments)},DT=u._Maximum=function(){return(DT=u._Maximum=u.asm.sa).apply(null,arguments)},_T=u._Mean=function(){return(_T=u._Mean=u.asm.ta).apply(null,arguments)},PT=u._Min=function(){return(PT=u._Min=u.asm.ua).apply(null,arguments)},FT=u._Minimum=function(){return(FT=u._Minimum=u.asm.va).apply(null,arguments)},OT=u._MirrorPad=function(){return(OT=u._MirrorPad=u.asm.wa).apply(null,arguments)},MT=u._Multiply=function(){return(MT=u._Multiply=u.asm.xa).apply(null,arguments)},zT=u._Neg=function(){return(zT=u._Neg=u.asm.ya).apply(null,arguments)},LT=u._NonMaxSuppressionV3=function(){return(LT=u._NonMaxSuppressionV3=u.asm.za).apply(null,arguments)},BT=u._NonMaxSuppressionV4=function(){return(BT=u._NonMaxSuppressionV4=u.asm.Aa).apply(null,arguments)},WT=u._NonMaxSuppressionV5=function(){return(WT=u._NonMaxSuppressionV5=u.asm.Ba).apply(null,arguments)},VT=u._NotEqual=function(){return(VT=u._NotEqual=u.asm.Ca).apply(null,arguments)},UT=u._OneHot=function(){return(UT=u._OneHot=u.asm.Da).apply(null,arguments)},GT=u._PadV2=function(){return(GT=u._PadV2=u.asm.Ea).apply(null,arguments)},HT=u._Pow=function(){return(HT=u._Pow=u.asm.Fa).apply(null,arguments)},jT=u._Prelu=function(){return(jT=u._Prelu=u.asm.Ga).apply(null,arguments)},qT=u._Prod=function(){return(qT=u._Prod=u.asm.Ha).apply(null,arguments)},XT=u._RealDiv=function(){return(XT=u._RealDiv=u.asm.Ia).apply(null,arguments)},KT=u._Relu=function(){return(KT=u._Relu=u.asm.Ja).apply(null,arguments)},ZT=u._Relu6=function(){return(ZT=u._Relu6=u.asm.Ka).apply(null,arguments)},YT=u._ResizeBilinear=function(){return(YT=u._ResizeBilinear=u.asm.La).apply(null,arguments)},JT=u._Reverse=function(){return(JT=u._Reverse=u.asm.Ma).apply(null,arguments)},QT=u._RotateWithOffset=function(){return(QT=u._RotateWithOffset=u.asm.Na).apply(null,arguments)},eN=u._Round=function(){return(eN=u._Round=u.asm.Oa).apply(null,arguments)},tN=u._Rsqrt=function(){return(tN=u._Rsqrt=u.asm.Pa).apply(null,arguments)},nN=u._ScatterNd=function(){return(nN=u._ScatterNd=u.asm.Qa).apply(null,arguments)},sN=u._SelectV2=function(){return(sN=u._SelectV2=u.asm.Ra).apply(null,arguments)},rN=u._Sigmoid=function(){return(rN=u._Sigmoid=u.asm.Sa).apply(null,arguments)},aN=u._Sin=function(){return(aN=u._Sin=u.asm.Ta).apply(null,arguments)},oN=u._Softmax=function(){return(oN=u._Softmax=u.asm.Ua).apply(null,arguments)},iN=u._Sqrt=function(){return(iN=u._Sqrt=u.asm.Va).apply(null,arguments)},lN=u._Square=function(){return(lN=u._Square=u.asm.Wa).apply(null,arguments)},uN=u._SquaredDifference=function(){return(uN=u._SquaredDifference=u.asm.Xa).apply(null,arguments)},cN=u._Step=function(){return(cN=u._Step=u.asm.Ya).apply(null,arguments)},dN=u._StridedSlice=function(){return(dN=u._StridedSlice=u.asm.Za).apply(null,arguments)},pN=u._Sub=function(){return(pN=u._Sub=u.asm._a).apply(null,arguments)},hN=u._Sum=function(){return(hN=u._Sum=u.asm.$a).apply(null,arguments)},fN=u._Tan=function(){return(fN=u._Tan=u.asm.ab).apply(null,arguments)},mN=u._Tanh=function(){return(mN=u._Tanh=u.asm.bb).apply(null,arguments)},gN=u._Tile=function(){return(gN=u._Tile=u.asm.cb).apply(null,arguments)},AN=u._TopK=function(){return(AN=u._TopK=u.asm.db).apply(null,arguments)},yN=u._Transform=function(){return(yN=u._Transform=u.asm.eb).apply(null,arguments)},xN=u._Transpose=function(){return(xN=u._Transpose=u.asm.fb).apply(null,arguments)},bN=u.__FusedMatMul=function(){return(bN=u.__FusedMatMul=u.asm.gb).apply(null,arguments)},Yo=u._malloc=function(){return(Yo=u._malloc=u.asm.hb).apply(null,arguments)},Tc=u._free=function(){return(Tc=u._free=u.asm.ib).apply(null,arguments)},Wb=u.___errno_location=function(){return(Wb=u.___errno_location=u.asm.jb).apply(null,arguments)},Vb=u._emscripten_get_global_libc=function(){return(Vb=u._emscripten_get_global_libc=u.asm.lb).apply(null,arguments)},ma=u._pthread_self=function(){return(ma=u._pthread_self=u.asm.mb).apply(null,arguments)},Ub=u.___pthread_tsd_run_dtors=function(){return(Ub=u.___pthread_tsd_run_dtors=u.asm.nb).apply(null,arguments)},Xp=u._emscripten_main_thread_process_queued_calls=function(){return(Xp=u._emscripten_main_thread_process_queued_calls=u.asm.ob).apply(null,arguments)},vN=u._emscripten_current_thread_process_queued_calls=function(){return(vN=u._emscripten_current_thread_process_queued_calls=u.asm.pb).apply(null,arguments)},Gb=u._emscripten_register_main_browser_thread_id=function(){return(Gb=u._emscripten_register_main_browser_thread_id=u.asm.qb).apply(null,arguments)},Hb=u._emscripten_main_browser_thread_id=function(){return(Hb=u._emscripten_main_browser_thread_id=u.asm.rb).apply(null,arguments)},jb=u.__emscripten_do_dispatch_to_thread=function(){return(jb=u.__emscripten_do_dispatch_to_thread=u.asm.sb).apply(null,arguments)},qb=u._emscripten_sync_run_in_main_thread_4=function(){return(qb=u._emscripten_sync_run_in_main_thread_4=u.asm.tb).apply(null,arguments)},Xb=u._emscripten_run_in_main_runtime_thread_js=function(){return(Xb=u._emscripten_run_in_main_runtime_thread_js=u.asm.ub).apply(null,arguments)},_g=u.__emscripten_call_on_thread=function(){return(_g=u.__emscripten_call_on_thread=u.asm.vb).apply(null,arguments)},wN=u._emscripten_tls_init=function(){return(wN=u._emscripten_tls_init=u.asm.wb).apply(null,arguments)},Pg=u.__emscripten_thread_init=function(){return(Pg=u.__emscripten_thread_init=u.asm.xb).apply(null,arguments)},Nc=u.stackSave=function(){return(Nc=u.stackSave=u.asm.yb).apply(null,arguments)},_l=u.stackRestore=function(){return(_l=u.stackRestore=u.asm.zb).apply(null,arguments)},Pl=u.stackAlloc=function(){return(Pl=u.stackAlloc=u.asm.Ab).apply(null,arguments)},Kb=u._emscripten_stack_set_limits=function(){return(Kb=u._emscripten_stack_set_limits=u.asm.Bb).apply(null,arguments)},Zb=u._memalign=function(){return(Zb=u._memalign=u.asm.Cb).apply(null,arguments)},Yb=u.__emscripten_allow_main_runtime_queued_calls=10064,Fl=u.__emscripten_main_thread_futex=10268;u.cwrap=Ue,u.PThread=Re,u.PThread=Re,u.wasmMemory=te,u.ExitStatus=Ec;var Kp;function Ec(I){this.name="ExitStatus",this.message="Program terminated with exit("+I+")",this.status=I}Xo=function I(){Kp||Fg(),Kp||(Xo=I)};function Fg(I){if(I=I||m,Bs>0)return;if(k){d(u),Tp(),postMessage({cmd:"loaded"});return}if(Cp(),Bs>0)return;function $(){Kp||(Kp=!0,u.calledRun=!0,!he&&(Tp(),Np(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Ep()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),$()},1)):$()}u.run=Fg;function kN(I,$){if(!($&&Q&&I===0)){if(!$&&k)throw postMessage({cmd:"exitProcess",returnCode:I}),new Ec(I);Q||(Re.terminateAllThreads(),be=I,Yn(),u.onExit&&u.onExit(I),he=!0),A(I,new Ec(I))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();return k&&(Q=!1,Re.initWorker()),Fg(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),GN=Qn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},o,i;a.ready=new Promise(function(se,ie){o=se,i=ie});var l={},c;for(c in a)a.hasOwnProperty(c)&&(l[c]=a[c]);var u=[],d="./this.program",p=function(se,ie){throw ie},h=!1,f=!1,m=!1,g=!1;h=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g=!h&&!m&&!f;var A="";function x(se){return a.locateFile?a.locateFile(se,A):A+se}var y,b,w,k,C,E;m?(f?A=Ws("path").dirname(A)+"/":A=__dirname+"/",y=function(ie,ke){return C||(C=Ws("fs")),E||(E=Ws("path")),ie=E.normalize(ie),C.readFileSync(ie,ke?null:"utf8")},w=function(ie){var ke=y(ie,!0);return ke.buffer||(ke=new Uint8Array(ke)),j(ke.buffer),ke},process.argv.length>1&&(d=process.argv[1].replace(/\\/g,"/")),u=process.argv.slice(2),process.on("uncaughtException",function(se){if(!(se instanceof Dg))throw se}),process.on("unhandledRejection",sr),p=function(se){process.exit(se)},a.inspect=function(){return"[Emscripten Module object]"}):g?(typeof read!="undefined"&&(y=function(ie){return read(ie)}),w=function(ie){var ke;return typeof readbuffer=="function"?new Uint8Array(readbuffer(ie)):(ke=read(ie,"binary"),j(typeof ke=="object"),ke)},typeof scriptArgs!="undefined"?u=scriptArgs:typeof arguments!="undefined"&&(u=arguments),typeof quit=="function"&&(p=function(se){quit(se)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(h||f)&&(f?A=self.location.href:typeof document!="undefined"&&document.currentScript&&(A=document.currentScript.src),s&&(A=s),A.indexOf("blob:")!==0?A=A.substr(0,A.lastIndexOf("/")+1):A="",y=function(se){var ie=new XMLHttpRequest;return ie.open("GET",se,!1),ie.send(null),ie.responseText},f&&(w=function(se){var ie=new XMLHttpRequest;return ie.open("GET",se,!1),ie.responseType="arraybuffer",ie.send(null),new Uint8Array(ie.response)}),b=function(se,ie,ke){var lt=new XMLHttpRequest;lt.open("GET",se,!0),lt.responseType="arraybuffer",lt.onload=function(){if(lt.status==200||lt.status==0&&lt.response){ie(lt.response);return}ke()},lt.onerror=ke,lt.send(null)},k=function(se){document.title=se});var R=a.print||console.log.bind(console),F=a.printErr||console.warn.bind(console);for(c in l)l.hasOwnProperty(c)&&(a[c]=l[c]);l=null,a.arguments&&(u=a.arguments),a.thisProgram&&(d=a.thisProgram),a.quit&&(p=a.quit);var D;a.wasmBinary&&(D=a.wasmBinary);var P=a.noExitRuntime||!0;typeof WebAssembly!="object"&&sr("no native wasm support detected");var T,M=!1,U;function j(se,ie){se||sr("Assertion failed: "+ie)}function z(se){var ie=a["_"+se];return j(ie,"Cannot call unknown function "+se+", make sure it is exported"),ie}function X(se,ie,ke,lt,Lt){var Nt={string:function(cs){var fa=0;if(cs!=null&&cs!==0){var qp=(cs.length<<2)+1;fa=Sc(qp),te(cs,fa,qp)}return fa},array:function(cs){var fa=Sc(cs.length);return oe(cs,fa),fa}};function Je(cs){return ie==="string"?ne(cs):ie==="boolean"?Boolean(cs):cs}var Qe=z(se),wn=[],Br=0;if(lt)for(var Wr=0;Wr<lt.length;Wr++){var jp=Nt[ke[Wr]];jp?(Br===0&&(Br=Gp()),wn[Wr]=jp(lt[Wr])):wn[Wr]=lt[Wr]}var Cc=Qe.apply(null,wn);return Cc=Je(Cc),Br!==0&&Hp(Br),Cc}function Z(se,ie,ke,lt){ke=ke||[];var Lt=ke.every(function(Je){return Je==="number"}),Nt=ie!=="string";return Nt&&Lt&&!lt?z(se):function(){return X(se,ie,ke,arguments,lt)}}var J=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function ee(se,ie,ke){for(var lt=ie+ke,Lt=ie;se[Lt]&&!(Lt>=lt);)++Lt;if(Lt-ie>16&&se.subarray&&J)return J.decode(se.subarray(ie,Lt));for(var Nt="";ie<Lt;){var Je=se[ie++];if(!(Je&128)){Nt+=String.fromCharCode(Je);continue}var Qe=se[ie++]&63;if((Je&224)==192){Nt+=String.fromCharCode((Je&31)<<6|Qe);continue}var wn=se[ie++]&63;if((Je&240)==224?Je=(Je&15)<<12|Qe<<6|wn:Je=(Je&7)<<18|Qe<<12|wn<<6|se[ie++]&63,Je<65536)Nt+=String.fromCharCode(Je);else{var Br=Je-65536;Nt+=String.fromCharCode(55296|Br>>10,56320|Br&1023)}}return Nt}function ne(se,ie){return se?ee(Ce,se,ie):""}function Q(se,ie,ke,lt){if(!(lt>0))return 0;for(var Lt=ke,Nt=ke+lt-1,Je=0;Je<se.length;++Je){var Qe=se.charCodeAt(Je);if(Qe>=55296&&Qe<=57343){var wn=se.charCodeAt(++Je);Qe=65536+((Qe&1023)<<10)|wn&1023}if(Qe<=127){if(ke>=Nt)break;ie[ke++]=Qe}else if(Qe<=2047){if(ke+1>=Nt)break;ie[ke++]=192|Qe>>6,ie[ke++]=128|Qe&63}else if(Qe<=65535){if(ke+2>=Nt)break;ie[ke++]=224|Qe>>12,ie[ke++]=128|Qe>>6&63,ie[ke++]=128|Qe&63}else{if(ke+3>=Nt)break;ie[ke++]=240|Qe>>18,ie[ke++]=128|Qe>>12&63,ie[ke++]=128|Qe>>6&63,ie[ke++]=128|Qe&63}}return ie[ke]=0,ke-Lt}function te(se,ie,ke){return Q(se,Ce,ie,ke)}function oe(se,ie){we.set(se,ie)}function he(se,ie){return se%ie>0&&(se+=ie-se%ie),se}var be,we,Ce,ze,Ue,Xe,Ye,pt,ht;function it(se){be=se,a.HEAP8=we=new Int8Array(se),a.HEAP16=ze=new Int16Array(se),a.HEAP32=Xe=new Int32Array(se),a.HEAPU8=Ce=new Uint8Array(se),a.HEAPU16=Ue=new Uint16Array(se),a.HEAPU32=Ye=new Uint32Array(se),a.HEAPF32=pt=new Float32Array(se),a.HEAPF64=ht=new Float64Array(se)}var St=a.INITIAL_MEMORY||16777216,gt,Tt=[],_t=[],ks=[],bn=[],nr=!1;_t.push({func:function(){Dp()}});function Fn(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)vn(a.preRun.shift());Bs(Tt)}function us(){nr=!0,Bs(_t)}function Ls(){Bs(ks)}function Ss(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)xr(a.postRun.shift());Bs(bn)}function vn(se){Tt.unshift(se)}function xr(se){bn.unshift(se)}var En=0,br=null,vr=null;function ca(se){En++,a.monitorRunDependencies&&a.monitorRunDependencies(En)}function yc(se){if(En--,a.monitorRunDependencies&&a.monitorRunDependencies(En),En==0&&(br!==null&&(clearInterval(br),br=null),vr)){var ie=vr;vr=null,ie()}}a.preloadedImages={},a.preloadedAudios={};function sr(se){a.onAbort&&a.onAbort(se),se+="",F(se),M=!0,U=1,se="abort("+se+"). Build with -s ASSERTIONS=1 for more info.";var ie=new WebAssembly.RuntimeError(se);throw i(ie),ie}function Ip(se,ie){return String.prototype.startsWith?se.startsWith(ie):se.indexOf(ie)===0}var f0="data:application/octet-stream;base64,";function Cp(se){return Ip(se,f0)}var Tp="file://";function Np(se){return Ip(se,Tp)}var Yn="tfjs-backend-wasm.wasm";Cp(Yn)||(Yn=x(Yn));function Ep(se){try{if(se==Yn&&D)return new Uint8Array(D);if(w)return w(se);throw"both async and sync fetching of the wasm failed"}catch(ie){sr(ie)}}function m0(){if(!D&&(h||f)){if(typeof fetch=="function"&&!Np(Yn))return fetch(Yn,{credentials:"same-origin"}).then(function(se){if(!se.ok)throw"failed to load wasm binary file at '"+Yn+"'";return se.arrayBuffer()}).catch(function(){return Ep(Yn)});if(b)return new Promise(function(se,ie){b(Yn,function(ke){se(new Uint8Array(ke))},ie)})}return Promise.resolve().then(function(){return Ep(Yn)})}function g0(){var se={a:Jn};function ie(Je,Qe){var wn=Je.exports;a.asm=wn,T=a.asm.h,it(T.buffer),gt=a.asm.Sa,yc("wasm-instantiate")}ca("wasm-instantiate");function ke(Je){ie(Je.instance)}function lt(Je){return m0().then(function(Qe){return WebAssembly.instantiate(Qe,se)}).then(Je,function(Qe){F("failed to asynchronously prepare wasm: "+Qe),sr(Qe)})}function Lt(){return!D&&typeof WebAssembly.instantiateStreaming=="function"&&!Cp(Yn)&&!Np(Yn)&&typeof fetch=="function"?fetch(Yn,{credentials:"same-origin"}).then(function(Je){var Qe=WebAssembly.instantiateStreaming(Je,se);return Qe.then(ke,function(wn){return F("wasm streaming compile failed: "+wn),F("falling back to ArrayBuffer instantiation"),lt(ke)})}):lt(ke)}if(a.instantiateWasm)try{var Nt=a.instantiateWasm(se,ie);return Nt}catch(Je){return F("Module.instantiateWasm callback failed with error: "+Je),!1}return Lt().catch(i),{}}function Bs(se){for(;se.length>0;){var ie=se.shift();if(typeof ie=="function"){ie(a);continue}var ke=ie.func;typeof ke=="number"?ie.arg===void 0?gt.get(ke)():gt.get(ke)(ie.arg):ke(ie.arg===void 0?null:ie.arg)}}function xc(){sr()}function Xo(se,ie,ke){Ce.copyWithin(se,ie,ie+ke)}function A0(){return Ce.length}function y0(se){try{return T.grow(se-be.byteLength+65535>>>16),it(T.buffer),1}catch(ie){}}function Lr(se){var ie=A0(),ke=2147483648;if(se>ke)return!1;for(var lt=1;lt<=4;lt*=2){var Lt=ie*(1+.2/lt);Lt=Math.min(Lt,se+100663296);var Nt=Math.min(ke,he(Math.max(se,Lt),65536)),Je=y0(Nt);if(Je)return!0}return!1}var Ko={mappings:{},buffers:[null,[],[]],printChar:function(se,ie){var ke=Ko.buffers[se];ie===0||ie===10?((se===1?R:F)(ee(ke,0)),ke.length=0):ke.push(ie)},varargs:void 0,get:function(){Ko.varargs+=4;var se=Xe[Ko.varargs-4>>2];return se},getStr:function(se){var ie=ne(se);return ie},get64:function(se,ie){return se}};function x0(se){return 0}function Rp(se,ie,ke,lt,Lt){}function b0(se,ie,ke,lt){for(var Lt=0,Nt=0;Nt<ke;Nt++){for(var Je=Xe[ie+Nt*8>>2],Qe=Xe[ie+(Nt*8+4)>>2],wn=0;wn<Qe;wn++)Ko.printChar(se,Ce[Je+wn]);Lt+=Qe}return Xe[lt>>2]=Lt,0}function $p(){return 28}var Jn={a:xc,d:Xo,e:Lr,f:x0,c:Rp,b:b0,g:$p},v0=g0(),Dp=a.___wasm_call_ctors=function(){return(Dp=a.___wasm_call_ctors=a.asm.i).apply(null,arguments)},w0=a._init=function(){return(w0=a._init=a.asm.j).apply(null,arguments)},_p=a._init_with_threads_count=function(){return(_p=a._init_with_threads_count=a.asm.k).apply(null,arguments)},k0=a._get_threads_count=function(){return(k0=a._get_threads_count=a.asm.l).apply(null,arguments)},Rl=a._register_tensor=function(){return(Rl=a._register_tensor=a.asm.m).apply(null,arguments)},da=a._dispose_data=function(){return(da=a._dispose_data=a.asm.n).apply(null,arguments)},bc=a._dispose=function(){return(bc=a._dispose=a.asm.o).apply(null,arguments)},S0=a._Abs=function(){return(S0=a._Abs=a.asm.p).apply(null,arguments)},I0=a._Add=function(){return(I0=a._Add=a.asm.q).apply(null,arguments)},Pp=a._AddN=function(){return(Pp=a._AddN=a.asm.r).apply(null,arguments)},Re=a._All=function(){return(Re=a._All=a.asm.s).apply(null,arguments)},C0=a._Any=function(){return(C0=a._Any=a.asm.t).apply(null,arguments)},T0=a._ArgMax=function(){return(T0=a._ArgMax=a.asm.u).apply(null,arguments)},N0=a._AvgPool=function(){return(N0=a._AvgPool=a.asm.v).apply(null,arguments)},E0=a._BatchMatMul=function(){return(E0=a._BatchMatMul=a.asm.w).apply(null,arguments)},R0=a._Ceil=function(){return(R0=a._Ceil=a.asm.x).apply(null,arguments)},Zo=a._ClipByValue=function(){return(Zo=a._ClipByValue=a.asm.y).apply(null,arguments)},$0=a._Conv2D=function(){return($0=a._Conv2D=a.asm.z).apply(null,arguments)},D0=a._Conv2DBackpropInput=function(){return(D0=a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},_0=a._Cos=function(){return(_0=a._Cos=a.asm.B).apply(null,arguments)},P0=a._Cosh=function(){return(P0=a._Cosh=a.asm.C).apply(null,arguments)},F0=a._CropAndResize=function(){return(F0=a._CropAndResize=a.asm.D).apply(null,arguments)},O0=a._Cumsum=function(){return(O0=a._Cumsum=a.asm.E).apply(null,arguments)},Fp=a._DepthToSpace=function(){return(Fp=a._DepthToSpace=a.asm.F).apply(null,arguments)},M0=a._DepthwiseConv2dNative=function(){return(M0=a._DepthwiseConv2dNative=a.asm.G).apply(null,arguments)},z0=a._Elu=function(){return(z0=a._Elu=a.asm.H).apply(null,arguments)},pa=a._Equal=function(){return(pa=a._Equal=a.asm.I).apply(null,arguments)},vc=a._Exp=function(){return(vc=a._Exp=a.asm.J).apply(null,arguments)},wc=a._FlipLeftRight=function(){return(wc=a._FlipLeftRight=a.asm.K).apply(null,arguments)},L0=a._Floor=function(){return(L0=a._Floor=a.asm.L).apply(null,arguments)},B0=a._FloorDiv=function(){return(B0=a._FloorDiv=a.asm.M).apply(null,arguments)},W0=a._FusedBatchNorm=function(){return(W0=a._FusedBatchNorm=a.asm.N).apply(null,arguments)},V0=a._FusedConv2D=function(){return(V0=a._FusedConv2D=a.asm.O).apply(null,arguments)},U0=a._FusedDepthwiseConv2D=function(){return(U0=a._FusedDepthwiseConv2D=a.asm.P).apply(null,arguments)},Ge=a._Gather=function(){return(Ge=a._Gather=a.asm.Q).apply(null,arguments)},G0=a._GatherNd=function(){return(G0=a._GatherNd=a.asm.R).apply(null,arguments)},H0=a._Greater=function(){return(H0=a._Greater=a.asm.S).apply(null,arguments)},j0=a._GreaterEqual=function(){return(j0=a._GreaterEqual=a.asm.T).apply(null,arguments)},q0=a._LeakyRelu=function(){return(q0=a._LeakyRelu=a.asm.U).apply(null,arguments)},X0=a._Less=function(){return(X0=a._Less=a.asm.V).apply(null,arguments)},K0=a._LessEqual=function(){return(K0=a._LessEqual=a.asm.W).apply(null,arguments)},kc=a._Log=function(){return(kc=a._Log=a.asm.X).apply(null,arguments)},Op=a._LogicalAnd=function(){return(Op=a._LogicalAnd=a.asm.Y).apply(null,arguments)},Mp=a._Max=function(){return(Mp=a._Max=a.asm.Z).apply(null,arguments)},Z0=a._MaxPool=function(){return(Z0=a._MaxPool=a.asm._).apply(null,arguments)},Y0=a._Maximum=function(){return(Y0=a._Maximum=a.asm.$).apply(null,arguments)},J0=a._Mean=function(){return(J0=a._Mean=a.asm.aa).apply(null,arguments)},Q0=a._Min=function(){return(Q0=a._Min=a.asm.ba).apply(null,arguments)},eg=a._Minimum=function(){return(eg=a._Minimum=a.asm.ca).apply(null,arguments)},tg=a._MirrorPad=function(){return(tg=a._MirrorPad=a.asm.da).apply(null,arguments)},ng=a._Multiply=function(){return(ng=a._Multiply=a.asm.ea).apply(null,arguments)},ut=a._Neg=function(){return(ut=a._Neg=a.asm.fa).apply(null,arguments)},sg=a._NonMaxSuppressionV3=function(){return(sg=a._NonMaxSuppressionV3=a.asm.ga).apply(null,arguments)},rg=a._NonMaxSuppressionV4=function(){return(rg=a._NonMaxSuppressionV4=a.asm.ha).apply(null,arguments)},ag=a._NonMaxSuppressionV5=function(){return(ag=a._NonMaxSuppressionV5=a.asm.ia).apply(null,arguments)},$l=a._NotEqual=function(){return($l=a._NotEqual=a.asm.ja).apply(null,arguments)},zp=a._OneHot=function(){return(zp=a._OneHot=a.asm.ka).apply(null,arguments)},Lp=a._PadV2=function(){return(Lp=a._PadV2=a.asm.la).apply(null,arguments)},Bp=a._Pow=function(){return(Bp=a._Pow=a.asm.ma).apply(null,arguments)},og=a._Prelu=function(){return(og=a._Prelu=a.asm.na).apply(null,arguments)},ig=a._Prod=function(){return(ig=a._Prod=a.asm.oa).apply(null,arguments)},Wp=a._RealDiv=function(){return(Wp=a._RealDiv=a.asm.pa).apply(null,arguments)},lg=a._Relu=function(){return(lg=a._Relu=a.asm.qa).apply(null,arguments)},ug=a._Relu6=function(){return(ug=a._Relu6=a.asm.ra).apply(null,arguments)},cg=a._ResizeBilinear=function(){return(cg=a._ResizeBilinear=a.asm.sa).apply(null,arguments)},dg=a._Reverse=function(){return(dg=a._Reverse=a.asm.ta).apply(null,arguments)},pg=a._RotateWithOffset=function(){return(pg=a._RotateWithOffset=a.asm.ua).apply(null,arguments)},Vp=a._Round=function(){return(Vp=a._Round=a.asm.va).apply(null,arguments)},ha=a._Rsqrt=function(){return(ha=a._Rsqrt=a.asm.wa).apply(null,arguments)},hg=a._ScatterNd=function(){return(hg=a._ScatterNd=a.asm.xa).apply(null,arguments)},fg=a._SelectV2=function(){return(fg=a._SelectV2=a.asm.ya).apply(null,arguments)},Bb=a._Sigmoid=function(){return(Bb=a._Sigmoid=a.asm.za).apply(null,arguments)},Up=a._Sin=function(){return(Up=a._Sin=a.asm.Aa).apply(null,arguments)},mg=a._Softmax=function(){return(mg=a._Softmax=a.asm.Ba).apply(null,arguments)},gg=a._Sqrt=function(){return(gg=a._Sqrt=a.asm.Ca).apply(null,arguments)},Ag=a._Square=function(){return(Ag=a._Square=a.asm.Da).apply(null,arguments)},yg=a._SquaredDifference=function(){return(yg=a._SquaredDifference=a.asm.Ea).apply(null,arguments)},xg=a._Step=function(){return(xg=a._Step=a.asm.Fa).apply(null,arguments)},bg=a._StridedSlice=function(){return(bg=a._StridedSlice=a.asm.Ga).apply(null,arguments)},vg=a._Sub=function(){return(vg=a._Sub=a.asm.Ha).apply(null,arguments)},wg=a._Sum=function(){return(wg=a._Sum=a.asm.Ia).apply(null,arguments)},kg=a._Tan=function(){return(kg=a._Tan=a.asm.Ja).apply(null,arguments)},Sg=a._Tanh=function(){return(Sg=a._Tanh=a.asm.Ka).apply(null,arguments)},Ig=a._Tile=function(){return(Ig=a._Tile=a.asm.La).apply(null,arguments)},Cg=a._TopK=function(){return(Cg=a._TopK=a.asm.Ma).apply(null,arguments)},Tg=a._Transform=function(){return(Tg=a._Transform=a.asm.Na).apply(null,arguments)},Ng=a._Transpose=function(){return(Ng=a._Transpose=a.asm.Oa).apply(null,arguments)},Eg=a.__FusedMatMul=function(){return(Eg=a.__FusedMatMul=a.asm.Pa).apply(null,arguments)},Rg=a._malloc=function(){return(Rg=a._malloc=a.asm.Qa).apply(null,arguments)},$g=a._free=function(){return($g=a._free=a.asm.Ra).apply(null,arguments)},Gp=a.stackSave=function(){return(Gp=a.stackSave=a.asm.Ta).apply(null,arguments)},Hp=a.stackRestore=function(){return(Hp=a.stackRestore=a.asm.Ua).apply(null,arguments)},Sc=a.stackAlloc=function(){return(Sc=a.stackAlloc=a.asm.Va).apply(null,arguments)};a.cwrap=Z;var Dl;function Dg(se){this.name="ExitStatus",this.message="Program terminated with exit("+se+")",this.status=se}vr=function se(){Dl||Ic(),Dl||(vr=se)};function Ic(se){if(se=se||u,En>0||(Fn(),En>0))return;function ie(){Dl||(Dl=!0,a.calledRun=!0,!M&&(us(),Ls(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Ss()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),ie()},1)):ie()}if(a.run=Ic,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return Ic(),r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),HN=1e-7,jN=1e-4,Pc=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Ll=class{refCount(e){return Vs("refCount")}incRef(e){return Vs("incRef")}timerAvailable(){return!0}time(e){return Vs("time")}read(e){return Vs("read")}readSync(e){return Vs("readSync")}numDataIds(){return Vs("numDataIds")}disposeData(e,t){return Vs("disposeData")}write(e,t,n){return Vs("write")}move(e,t,n,s,r){return Vs("move")}memory(){return Vs("memory")}floatPrecision(){return Vs("floatPrecision")}epsilon(){return this.floatPrecision()===32?HN:jN}dispose(){return Vs("dispose")}};function Vs(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function n5(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Jp(e,t,n)}function qN(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,Jp(e,n,s),Jp(t,n,s)}function Fc(e,t,n){return Math.max(e,Math.min(t,n))}function XN(e){return e%2==0?e:e+1}function Jp(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function KN(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function ZN(e,t){let n=Math.random();return t*n+(1-n)*e}function YN(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function O(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Mn(e,t,n=""){O(xa(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Qo(e){O(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ei(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||$n(e)&&!n)for(let s=0;s<e.length;++s)ei(e[s],t,n);else t.push(e);return t}function Ut(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function JN(e){return e.length===0}function xa(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function pn(e){return e%1==0}function QN(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function eE(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function tE(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return n5(t),t}function Oc(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function nE(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function sE(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function Us(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),O(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),O(e.every(s=>pn(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function s5(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:Us(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function r5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function a5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function o5(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function i5(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function rE(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function $n(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function zg(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function l5(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function ba(e){return typeof e=="string"||e instanceof String}function u5(e){return typeof e=="boolean"}function c5(e){return typeof e=="number"}function Qp(e){return Array.isArray(e)?Qp(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":c5(e)?"float32":ba(e)?"string":u5(e)?"bool":"float32"}function va(e){return!!(e&&e.constructor&&e.call&&e.apply)}function eh(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Bl(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function d5(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<a;l++)r[l]=d5(e+l*i,o,n,s)}return r}function Wl(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return d5(0,e,t,n)}function Lg(e,t){let n=th(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function th(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function aE(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Wl(e,new Float32Array(n));if(t==="int32")return Wl(e,new Int32Array(n));if(t==="bool")return Wl(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Bg(e){e.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function oE(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function iE(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function Wg(e){return e&&e.then&&typeof e.then=="function"}var p5="tfjsflags",h5=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=lE,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Wg(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);p5 in e&&e[p5].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=cE(s,r)})}};function lE(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(uE(t,s[0],s[1]),s.join("="))),t}function uE(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function cE(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function K(){return wr}var wr=null;function dE(e){wr=e}var Vg;function f5(){if(Vg==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");Vg=e}return Vg}function pE(){let e=f5();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Ug(e,t){let n=pE();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var ti="Abs",Vl="Acos",Ul="Acosh",Vr="Add",wa="AddN",Gl="All",Hl="Any",ka="ArgMax",jl="ArgMin",ql="Asin",Xl="Asinh",Kl="Atan",Zl="Atanh",Yl="Atan2",Sa="AvgPool",nh="AvgPoolGrad",Mc="AvgPool3D",sh="AvgPool3DGrad",Ia="BatchMatMul",ni="BatchToSpaceND",rh="Bincount",m5="BroadcastTo",ah="BroadcastArgs",Ca="Cast",Ta="Ceil",Ur="ClipByValue",zc="Complex",Lc="ComplexAbs",si="Concat",Na="Conv2D",oh="Conv2DBackpropFilter",Ea="Conv2DBackpropInput",Bc="Conv3D",ih="Conv3DBackpropFilterV2",lh="Conv3DBackpropInputV2",Ra="Cos",$a="Cosh",ri="Cumsum",ai="CropAndResize",uh="DenseBincount",oi="DepthToSpace",Da="DepthwiseConv2dNative",ch="DepthwiseConv2dNativeBackpropFilter",dh="DepthwiseConv2dNativeBackpropInput",ph="Diag",Wc="Dilation2D",hh="Dilation2DBackpropInput",fh="Dilation2DBackpropFilter",_a="RealDiv",Vc="Einsum",Pa="Elu",mh="EluGrad",Jl="Erf",ii="Equal",Fa="Exp",li="ExpandDims",ui="Expm1",gh="FFT",Ql="Fill",ci="FlipLeftRight",Oa="Floor",Ma="FloorDiv",za="FusedBatchNorm",di="GatherV2",pi="GatherNd",hi="Greater",La="GreaterEqual",Ba="Identity",Ah="IFFT",Uc="Imag",eu="IsFinite",tu="IsInf",nu="IsNan",fi="LeakyRelu",mi="Less",gi="LessEqual",yh="LinSpace",Wa="Log",su="Log1p",Ai="LogicalAnd",ru="LogicalNot",Gc="LogicalOr",g5="LogSoftmax",Hc="LRN",xh="LRNGrad",Va="Max",Ua="Maximum",Ga="MaxPool",bh="MaxPoolGrad",jc="MaxPool3D",vh="MaxPool3DGrad",wh="MaxPoolWithArgmax",Ha="Mean",ja="Min",qa="Minimum",Xa="MirrorPad",au="Mod",kh="Multinomial",Ka="Multiply",yi="Neg",xi="NotEqual",bi="NonMaxSuppressionV3",ou="NonMaxSuppressionV4",vi="NonMaxSuppressionV5",wi="OnesLike",ki="OneHot",Si="Pack",Za="PadV2",hE="Pool",Ya="Pow",Ja="Prelu",Ii="Prod",iu="Range",qc="Real",lu="Reciprocal",Qa="Relu",Ci="Reshape",uu="ResizeNearestNeighbor",Sh="ResizeNearestNeighborGrad",eo="ResizeBilinear",Ih="ResizeBilinearGrad",to="Relu6",Ti="Reverse",Ni="Round",no="Rsqrt",Ei="ScatterNd",Ri="Select",cu="Selu",$i="Slice",so="Sin",Di="Sinh",du="Sign",ro="Sigmoid",pu="Softplus",ao="Sqrt",oo="Sum",_i="SpaceToBatchND",Pi="SplitV",io="Softmax",Ch="SparseFillEmptyRows",Th="SparseReshape",Nh="SparseSegmentMean",Eh="SparseSegmentSum",Xc="SparseToDense",lo="SquaredDifference",hu="Square",Fi="StridedSlice",Kc="StringNGrams",Rh="StringSplit",$h="StringToHashBucketFast",uo="Sub",Oi="Tan",co="Tanh",Gr="Tile",Mi="TopK",zi="Transform",po="Transpose",Dh="Unique",Li="Unpack",Zc="UnsortedSegmentSum",Bi="ZerosLike",ho="Step",Yc="FromPixels",Wi="RotateWithOffset",fo="_FusedMatMul",mo="FusedConv2D",go="FusedDepthwiseConv2D";function Ao(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(...e)}function fE(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.log(...e)}var fu=Ug("kernelRegistry",()=>new Map),Jc=Ug("gradRegistry",()=>new Map);function _h(e,t){let n=Hg(e,t);return fu.get(n)}function Gg(e){return Jc.get(e)}function Hr(e){let t=fu.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function jr(e){let{kernelName:t,backendName:n}=e,s=Hg(t,n);fu.has(s)&&Ao(`The kernel '${t}' for backend '${n}' is already registered`),fu.set(s,e)}function A5(e){let{kernelName:t}=e;Jc.has(t)&&K().getBool("DEBUG")&&Ao(`Overriding the gradient for '${t}'`),Jc.set(t,e)}function mE(e,t){let n=Hg(e,t);if(!fu.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);fu.delete(n)}function gE(e){if(!Jc.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Jc.delete(e)}function AE(e,t){Hr(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});jr(r)})}function Hg(e,t){return`${t}_${e}`}var v={};Me(v,{arraysEqual:()=>xa,assert:()=>O,assertNonNegativeIntegerDimensions:()=>Bg,assertNonNull:()=>Qo,assertShapesMatch:()=>Mn,bytesFromStringArray:()=>l5,bytesPerElement:()=>zg,checkConversionForErrors:()=>o5,clamp:()=>Fc,computeStrides:()=>Bl,createScalarValue:()=>kE,createShuffledIndices:()=>tE,decodeString:()=>Oh,distSquared:()=>YN,encodeString:()=>td,fetch:()=>IE,fingerPrint64:()=>wE,flatten:()=>ei,getArrayFromDType:()=>a5,getTypedArrayFromDType:()=>r5,hasEncodingLoss:()=>rE,hexToLong:()=>Qc,indexToLoc:()=>iE,inferDtype:()=>Qp,inferFromImplicitShape:()=>sE,isBoolean:()=>u5,isFunction:()=>va,isInt:()=>pn,isNumber:()=>c5,isPromise:()=>Wg,isScalarShape:()=>JN,isString:()=>ba,isTypedArray:()=>$n,isValidDtype:()=>i5,locToIndex:()=>oE,makeOnesTypedArray:()=>Lg,makeZerosNestedTypedArray:()=>aE,makeZerosTypedArray:()=>th,nearestDivisor:()=>eh,nearestLargerEven:()=>XN,now:()=>ed,parseAxisParam:()=>Us,randUniform:()=>ZN,repeatedTry:()=>nE,rightPad:()=>Oc,shuffle:()=>n5,shuffleCombo:()=>qN,sizeFromShape:()=>Ut,sizeToSquarishShape:()=>eE,squeezeShape:()=>s5,sum:()=>KN,swap:()=>Jp,tanh:()=>QN,toNestedArray:()=>Wl,toTypedArray:()=>Fh});var y5=Jo(DN()),Vi=y5.default||y5;function Qc(e){return Vi.fromString(e,!0,16)}var x5=Qc("c3a5c85c97cb3127"),Ui=Qc("b492b66fbe98f273"),zn=Qc("9ae16a3b2f90404f");function jg(e){return e.xor(e.shru(47))}function b5(e,t,n){let s=e.slice(t,t+n);return Vi.fromBytes(Array.from(s),!0,!0)}function wt(e,t){return b5(e,t,8)}function v5(e,t){return b5(e,t,4)}function hn(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function yo(e,t,n=Qc("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function yE(e,t,n,s,r,a){r=r.add(e),a=hn(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(hn(r,44)),[r.add(s),a.add(o)]}function Ph(e,t,n,s){return yE(wt(e,t),wt(e,t+8),wt(e,t+16),wt(e,t+24),n,s)}function xE(e,t=e.length){if(t>=8){let n=zn.add(t*2),s=wt(e,0).add(zn),r=wt(e,t-8),a=hn(r,37).mul(n).add(s),o=hn(s,25).add(r).mul(n);return yo(a,o,n)}if(t>=4){let n=zn.add(t*2),s=v5(e,0);return yo(s.shl(3).add(t),v5(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return jg(zn.mul(a).xor(x5.mul(o))).mul(zn)}return zn}function bE(e,t=e.length){let n=zn.add(t*2),s=wt(e,0).mul(Ui),r=wt(e,8),a=wt(e,t-8).mul(n),o=wt(e,t-16).mul(zn);return yo(hn(s.add(r),43).add(hn(a,30)).add(o),s.add(hn(r.add(zn),18)).add(a),n)}function vE(e,t=e.length){let n=zn.add(t*2),s=wt(e,0).mul(zn),r=wt(e,8),a=wt(e,t-8).mul(n),o=wt(e,t-16).mul(zn),i=hn(s.add(r),43).add(hn(a,30)).add(o),l=yo(i,s.add(hn(r.add(zn),18)).add(a),n),c=wt(e,16).mul(n),u=wt(e,24),d=i.add(wt(e,t-32)).mul(n),p=l.add(wt(e,t-24)).mul(n);return yo(hn(c.add(u),43).add(hn(d,30)).add(p),c.add(hn(u.add(s),18)).add(d),n)}function wE(e,t=e.length){let n=Vi.fromNumber(81,!0);if(t<=32)return t<=16?xE(e,t):bE(e,t);if(t<=64)return vE(e,t);let s=n,r=n.mul(Ui).add(113),a=jg(r.mul(zn).add(113)).mul(zn),o=[Vi.UZERO,Vi.UZERO],i=[Vi.UZERO,Vi.UZERO];s=s.mul(zn).add(wt(e,0));let l=0,c=(t-1>>6)*64,u=c+(t-1&63)-63;do s=hn(s.add(r).add(o[0]).add(wt(e,l+8)),37).mul(Ui),r=hn(r.add(o[1]).add(wt(e,l+48)),42).mul(Ui),s=s.xor(i[1]),r=r.add(o[0]).add(wt(e,l+40)),a=hn(a.add(i[0]),33).mul(Ui),o=Ph(e,l,o[1].mul(Ui),s.add(i[0])),i=Ph(e,l+32,a.add(i[1]),r.add(wt(e,l+16))),[a,s]=[s,a],l+=64;while(l!==c);let d=Ui.add(a.and(255).shl(1));return l=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=hn(s.add(r).add(o[0]).add(wt(e,l+8)),37).mul(d),r=hn(r.add(o[1]).add(wt(e,l+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(wt(e,l+40))),a=hn(a.add(i[0]),33).mul(d),o=Ph(e,l,o[1].mul(d),s.add(i[0])),i=Ph(e,l+32,a.add(i[1]),r.add(wt(e,l+16))),[a,s]=[s,a],yo(yo(o[0],i[0],d).add(jg(r).mul(x5)).add(a),yo(o[1],i[1],d).add(s),d)}function kE(e,t){return t==="string"?td(e):Fh([e],t)}function SE(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Fh(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ei(e)),K().getBool("DEBUG")&&o5(e,t),SE(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function ed(){return K().platform.now()}function IE(e,t){return K().platform.fetch(e,t)}function td(e,t="utf-8"){return t=t||"utf-8",K().platform.encode(e,t)}function Oh(e,t="utf-8"){return t=t||"utf-8",K().platform.decode(e,t)}var CE=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new NE)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=ed();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:ed()-o})}if(K().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let c=s[l];c.data().then(u=>{TE(u,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function TE(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var NE=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?Oc(`${s}ms`,9):s.error,i=Oc(e,25),l=t.rank,c=t.size,u=Oc(t.shape.toString(),14),d="";for(let p in r){let h=r[p];if(h!=null){let f=h.shape||t.shape,m=f.length;d+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${u}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function EE(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let c=e[l],u=c.inputs;for(let d in u){let p=u[d],h=!1;for(let f=0;f<t.length;f++)if(s[p.id]){c.outputs.forEach(m=>s[m.id]=!0),h=!0,r[c.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let c=e[l],u=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(let p in u)a[u[p].id]=!0,o[c.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let c=e[l];if(r[c.id]&&o[c.id]){let u={};for(let p in c.inputs){let h=c.inputs[p];s[h.id]&&(u[p]=h)}let d=Object.assign({},c);d.inputs=u,d.outputs=c.outputs,i.push(d)}}return i}function RE(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let c=e[l.id];c!=null?o.push(c):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let c=n(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=a.inputs[l];if(!xa(c.shape,u.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=c;else{let d=e[u.id];e[u.id]=s(d,c),d.dispose()}}}}var w5=20,nd=3,qg=7;function $E(e,t,n,s){let r=Bl(t),a=DE(e,t,n,r),o=t.length,i=Mh(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function DE(e,t,n,s){let r=Ut(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?rd(e):e;if(i>1)for(let c=0;c<r/a;c++){let u=c*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],sd(l[u+d],0,n).length)}return o}function sd(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(qg))} + ${parseFloat(e[1].toFixed(qg))}j`:ba(e)?s=`'${e}'`:n==="bool"?s=k5(e):s=parseFloat(e.toFixed(qg)).toString(),Oc(s,t)}function k5(e){return e===0?"false":"true"}function Mh(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=rd(e);return[sd(m[0],0,n)]}return n==="bool"?[k5(e[0])]:[e[0].toString()]}if(l===1){if(i>w5){let g=nd*o,A=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-nd)*o,i*o));return n==="complex64"&&(A=rd(A),x=rd(x)),["["+A.map((y,b)=>sd(y,r[b],n)).join(", ")+", ..., "+x.map((y,b)=>sd(y,r[i-nd+b],n)).join(", ")+"]"]}let m=n==="complex64"?rd(e):Array.from(e);return["["+m.map((g,A)=>sd(g,r[A],n)).join(", ")+"]"]}let c=t.slice(1),u=s.slice(1),d=s[0]*o,p=[];if(i>w5){for(let m=0;m<nd;m++){let g=m*d,A=g+d;p.push(...Mh(e.slice(g,A),c,n,u,r,!1))}p.push("...");for(let m=i-nd;m<i;m++){let g=m*d,A=g+d;p.push(...Mh(e.slice(g,A),c,n,u,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,A=g+d;p.push(...Mh(e.slice(g,A),c,n,u,r,m===i-1))}let h=l===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function rd(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var nn=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ut(e),n!=null){let s=n.length;O(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a5(t,this.size),this.strides=Bl(e)}set(e,...t){t.length===0&&(t=[0]),O(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return kr().makeTensor(this.values,this.shape,this.dtype)}},kr=null,mu=null,_E=null;function PE(e){kr=e}function FE(e){mu=e}function OE(e){_E=e}var et=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ut(e),this.strides=Bl(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return mu.buffer(this.shape,this.dtype,e)}bufferSync(){return mu.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Wl(this.shape,e,this.dtype==="complex64")}arraySync(){return Wl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=kr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Oh(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=kr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Oh(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await kr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(kr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return mu.print(this,e)}clone(){return this.throwIfDisposed(),mu.clone(this)}toString(e=!1){let t=this.dataSync();return $E(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),mu.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),kr().makeVariable(this,e,t,n)}};Object.defineProperty(et,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function ME(){return Ug("Tensor",()=>et)}ME();var ad=class extends et{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!xa(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);kr().disposeTensor(this),this.dataId=e.dataId,kr().incRef(this,null)}dispose(){kr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(ad,Symbol.hasInstance,{value:e=>e instanceof et&&e.assign!=null&&e.assign instanceof Function});var rr={};Me(rr,{assertTypesMatch:()=>S5,getTensorsInContainer:()=>Qg,isTensorInList:()=>LE,makeTypesMatch:()=>Pt});var Xg;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(Xg||(Xg={}));var Kg;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(Kg||(Kg={}));var Zg;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(Zg||(Zg={}));var Yg;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(Yg||(Yg={}));var Jg;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(Jg||(Jg={}));var zE={float32:Yg,int32:Kg,bool:Zg,complex64:Jg};function Ln(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return zE[e][t]}function od(e){return Ln(e,"int32")}function Pt(e,t){if(e.dtype===t.dtype)return[e,t];let n=Ln(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function S5(e,t){O(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function LE(e,t){return t.some(n=>n.id===e.id)}function Qg(e){let t=[],n=new Set;return I5(e,t,n),t}function I5(e,t,n){if(e==null)return;if(e instanceof et){t.push(e);return}if(!BE(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),I5(a,t,n))}}function BE(e){return Array.isArray(e)||typeof e=="object"}function e2(e){return e.kernelName!=null}var C5=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},t2=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new C5}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ao(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new CE(this.backendInstance),!0}setupRegisteredKernels(){Hr(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Hr(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof Ll)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Ao(`Initialization of backend ${e} failed`),Ao(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Ao(`Initialization of backend ${e} failed`),Ao(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return t2.nextTensorId++}nextVariableId(){return t2.nextVariableId++}clone(e){let t=B.runKernel(Ba,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return B.runKernel(Ca,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(_h(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=e2(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(e2(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=_h(h,this.backendName);O(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let A=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,A,x);let y=x.map(b=>{if(b.rank!=null)return b;let{dataId:w,shape:k,dtype:C}=b;return this.makeTensorFromDataId(w,k,C)});if(s){let b=this.getTensorsForGradient(h,f,y);n=this.saveTensorsForBackwardMode(b)}return y}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:c,attrs:u}=e,d=e2(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(l,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(l,c,t,d,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(h=>c[h]!=null?c[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=Gg(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(O(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,c)=>a[c]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&ba(e[0])&&(r=e.map(i=>td(i)));let a=s.write(r,t,n),o=new et(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=l5(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r=new et(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new ad(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*zg(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ad||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*zg(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=Gg(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((c,u)=>{if(c==null){let d=n[u],p=th(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Qg(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(O(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));O(r instanceof et,()=>"The result y returned by f() must be a tensor.");let a=EE(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n==null?WE(r.shape):n,RE(o,a,l=>this.tidy(l),VE);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return O(va(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{O(t.every(o=>o instanceof et),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),O(n.value instanceof et,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(va(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),c=Array.isArray(l)?l:[l];O(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(c.every(d=>d instanceof et),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return c.forEach((d,p)=>{u[p]=()=>d}),u};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=ed(),n=await this.backend.time(e);return n.wallMs=ed()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new C5;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},n2=t2;n2.nextTensorId=0;n2.nextVariableId=0;function WE(e){let t=Lg(Ut(e),"float32");return B.makeTensor(t,e,"float32")}function T5(){let e=f5();if(e._tfengine==null){let t=new h5(e);e._tfengine=new n2(t)}return dE(e._tfengine.ENV),PE(()=>e._tfengine),e._tfengine}var B=T5();function VE(e,t){let n={a:e,b:t};return B.runKernel(Vr,n)}var gu={};Me(gu,{isBrowser:()=>N5,isMobile:()=>HE,mockIsMobile:()=>GE});function UE(){return typeof navigator!="undefined"&&navigator!=null}var s2;function GE(e){s2=e}function HE(e){if(s2!==void 0)return s2;if(e||UE()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function N5(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var ar=K();ar.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ar.registerFlag("IS_BROWSER",()=>N5());ar.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");ar.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ar.registerFlag("PROD",()=>!1);ar.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ar.getBool("DEBUG"));ar.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ar.registerFlag("IS_TEST",()=>!1);ar.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);ar.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Sr(e,t){let n=e;if($n(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||$n(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&K().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&E5(e,s,[]),s}function E5(e,t,n){if(n=n||[],!Array.isArray(e)&&!$n(e)){O(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),O(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)E5(e[r],s,n.concat(r))}function R5(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,n,s="numeric"){if(e instanceof et)return R5(s,e.dtype,t,n),e;let r=Qp(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),R5(s,r,t,n),e==null||!$n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=Sr(e,r);!$n(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?Fh(e,r):ei(e,[],!0);return B.makeTensor(i,a,r)}function id(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>_(a,`${t}[${o}]`,n,s))}var $5="__op";function V(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+$5;let r=(...a)=>{B.startScope(n);try{let o=s(...a);return Wg(o)&&console.error("Cannot return a Promise inside of tidy."),B.endScope(o),o}catch(o){throw B.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function jE(e,t){let n=_(e,"real","complex"),s=_(t,"imag","complex");Mn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return B.runKernel(zc,r)}var xo=V({complex_:jE});function bo(e,t,n,s){if(s==null&&(s=Qp(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!$n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Bg(t);let r=Ut(t),a=Ut(n);O(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==Ut(t.slice(o)):!0;O(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!$n(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?Fh(e,s):ei(e,[],!0),B.makeTensor(e,t,s)}function Gt(e,t,n){let s=Sr(e,n);return bo(e,t,s,n)}var r2={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},zh=4;async function qE(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async d=>{let p=await l.bytes(),h=p.reduce((g,A)=>g+A.length,0)+zh*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let A=p[g],x=new Uint8Array(new Uint32Array([A.length]).buffer);f.set(x,m),m+=zh,f.set(A,m),m+=A.length}d(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),n.push(c)}let a=await Promise.all(s);return{data:XE(a),specs:n}}function D5(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,c=Ut(l),u;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=r2[d.dtype],h=e.slice(r,r+c*p),f=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=e9()),u=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*p}else if(i==="string"){let d=Ut(a.shape);u=[];for(let p=0;p<d;p++){let h=new Uint32Array(e.slice(r,r+zh))[0];r+=zh;let f=new Uint8Array(e.slice(r,r+h));u.push(f),r+=h}}else{let d=r2[i],p=e.slice(r,r+c*d);if(i==="float32")u=new Float32Array(p);else if(i==="int32")u=new Int32Array(p);else if(i==="bool")u=new Uint8Array(p);else if(i==="complex64"){u=new Float32Array(p);let h=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let A=0;A<h.length;A++)h[A]=u[A*2],f[A]=u[A*2+1];let m=Gt(h,l,"float32"),g=Gt(f,l,"float32");n[o]=xo(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*d}i!=="complex64"&&(n[o]=Gt(u,l,i))}return n}function XE(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var a2=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function _5(e){return a2?Buffer.byteLength(e):new Blob([e]).size}function KE(e){if(a2)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function ZE(e){if(a2){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function o2(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function P5(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function F5(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function i2(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function ld(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:_5(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:_5(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function YE(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)==0;)r-=8388608,s<<=1;return s&=~8388608,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function JE(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function QE(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function e9(){let e=YE(),t=JE(),n=QE();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var Bt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Bt.instance==null&&(Bt.instance=new Bt),Bt.instance}static registerSaveRouter(e){Bt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Bt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Bt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Bt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?Bt.getInstance().loadRouters:Bt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},t9=e=>Bt.registerSaveRouter(e),n9=e=>Bt.registerLoadRouter(e),s9=e=>Bt.getSaveHandlers(e),r9=(e,t)=>Bt.getLoadHandlers(e,t),l2="tensorflowjs",u2=1,Gi="models_store",vo="model_info_store";function O5(){if(!K().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function c2(e){let t=e.result;t.createObjectStore(Gi,{keyPath:"modelPath"}),t.createObjectStore(vo,{keyPath:"modelPath"})}var Hi=class{constructor(e){if(this.indexedDB=O5(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(l2,u2);r.onupgradeneeded=()=>c2(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(Gi,"readonly"),l=o.objectStore(Gi).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=c=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=ld(t),i=a.transaction(vo,"readwrite"),l=i.objectStore(vo),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),u;c.onsuccess=()=>{u=a.transaction(Gi,"readwrite");let p=u.objectStore(Gi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});p.onsuccess=()=>n({modelArtifactsInfo:o}),p.onerror=h=>{l=i.objectStore(vo);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(p.error)),f.onerror=m=>(a.close(),s(p.error))}},c.onerror=d=>(a.close(),s(c.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};Hi.URL_SCHEME="indexeddb://";var M5=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Hi.URL_SCHEME)?a9(e.slice(Hi.URL_SCHEME.length)):null;Bt.registerSaveRouter(M5);Bt.registerLoadRouter(M5);function a9(e){return new Hi(e)}function o9(e){return e.startsWith(Hi.URL_SCHEME)?e.slice(Hi.URL_SCHEME.length):e}var i9=class{constructor(){this.indexedDB=O5()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(l2,u2);n.onupgradeneeded=()=>c2(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(vo,"readonly"),o=r.objectStore(vo).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=o9(e),new Promise((t,n)=>{let s=this.indexedDB.open(l2,u2);s.onupgradeneeded=()=>c2(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(vo,"readwrite"),o=a.objectStore(vo),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=o.delete(e),u=()=>{l=r.transaction(Gi,"readwrite");let p=l.objectStore(Gi).delete(e);p.onsuccess=()=>t(i.result.modelArtifactsInfo),p.onerror=h=>n(i.error)};c.onsuccess=u,c.onerror=d=>(u(),r.close(),n(i.error))}},i.onerror=c=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},qr="/",Au="tensorflowjs_models",z5="info",l9="model_topology",u9="weight_specs",c9="weight_data",d9="model_metadata";function L5(e){return{info:[Au,e,z5].join(qr),topology:[Au,e,l9].join(qr),weightSpecs:[Au,e,u9].join(qr),weightData:[Au,e,c9].join(qr),modelMetadata:[Au,e,d9].join(qr)}}function B5(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function p9(e){let t=e.split(qr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(qr)}function h9(e){return e.startsWith(ji.URL_SCHEME)?e.slice(ji.URL_SCHEME.length):e}var ji=class{constructor(e){if(!K().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=L5(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=ld(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,KE(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw B5(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=ZE(a),t}};ji.URL_SCHEME="localstorage://";var W5=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ji.URL_SCHEME)?f9(e.slice(ji.URL_SCHEME.length)):null;Bt.registerSaveRouter(W5);Bt.registerLoadRouter(W5);function f9(e){return new ji(e)}var m9=class{constructor(){O(K().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Au+qr,n=qr+z5;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=p9(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=h9(e);let t=L5(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return B5(t),n}},yu="://",Is=class{constructor(){this.managers={}}static getInstance(){return Is.instance==null&&(Is.instance=new Is),Is.instance}static registerManager(e,t){O(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(yu)&&(e=e.slice(0,e.indexOf(yu))),O(e.length>0,()=>"scheme must not be an empty string.");let n=Is.getInstance();O(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Lh(e){if(e.indexOf(yu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Is.getSchemes().join(",")}`);return{scheme:e.split(yu)[0],path:e.split(yu)[1]}}async function V5(e,t,n=!1){O(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=Bt.getLoadHandlers(e);O(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),O(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=Bt.getSaveHandlers(t);O(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=Lh(e).scheme,l=Lh(e).path,c=i===Lh(e).scheme,u=await r.load();n&&c&&await Is.getManager(i).removeModel(l);let d=await o.save(u);return n&&!c&&await Is.getManager(i).removeModel(l),d.modelArtifactsInfo}async function g9(){let e=Is.getSchemes(),t={};for(let n of e){let s=await Is.getManager(n).listModels();for(let r in s){let a=n+yu+r;t[a]=s[r]}}return t}async function A9(e){let t=Lh(e);return Is.getManager(t.scheme).removeModel(t.path)}async function y9(e,t){return V5(e,t,!1)}async function x9(e,t){return V5(e,t,!0)}var b9=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(K().get("IS_BROWSER")){K().setPlatform("browser",new b9);try{Is.registerManager(ji.URL_SCHEME,new m9)}catch(e){}try{Is.registerManager(Hi.URL_SCHEME,new i9)}catch(e){}}var v9={importFetch:()=>_N()},d2,w9=class{constructor(){this.util=PN(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return K().global.fetch!=null?K().global.fetch(e,t):(d2==null&&(d2=v9.importFetch()),d2(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};K().get("IS_NODE")&&K().setPlatform("node",new w9);function Be(e,t="float32",n){return t=t||"float32",Bg(e),new nn(e,t,n)}function k9(e,t){let n=_(e,"x","cast");if(!i5(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return B.runKernel(Ca,s,r)}var pe=V({cast_:k9});function S9(e){let n={x:_(e,"x","clone","string_or_numeric")};return B.runKernel(Ba,n)}var or=V({clone_:S9});function U5(e,t=!1){console.log(e.toString(t))}T5();var I9={buffer:Be,cast:pe,clone:or,print:U5};FE(I9);var es={};Me(es,{browserFiles:()=>D9,browserHTTPRequest:()=>M9,concatenateArrayBuffers:()=>o2,copyModel:()=>y9,decodeWeights:()=>D5,encodeWeights:()=>qE,fromMemory:()=>L9,getLoadHandlers:()=>r9,getModelArtifactsForJSON:()=>i2,getModelArtifactsInfoForJSON:()=>ld,getSaveHandlers:()=>s9,http:()=>m2,isHTTPScheme:()=>f2,listModels:()=>g9,loadWeights:()=>_9,moveModel:()=>x9,registerLoadRouter:()=>n9,registerSaveRouter:()=>t9,removeModel:()=>A9,weightsLoaderFactory:()=>q5,withSaveHandler:()=>B9});var C9="model",T9=".json",N9=".weights.bin";function G5(e){return new Promise(t=>setTimeout(t)).then(e)}var p2=class{constructor(e){if(!K().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(p2.URL_SCHEME)&&(e=e.slice(p2.URL_SCHEME.length)),(e==null||e.length===0)&&(e=C9),this.modelJsonFileName=e+T9,this.weightDataFileName=e+N9}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=F5(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await G5(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await G5(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ld(e)}}}},Bh=p2;Bh.URL_SCHEME="downloads://";var E9=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=i2(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,o2(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>P5(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=P5(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},R9=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Bh.URL_SCHEME)?$9(e.slice(Bh.URL_SCHEME.length)):null;Bt.registerSaveRouter(R9);function $9(e="model"){return new Bh(e)}function D9(e){return new E9(e)}function H5(e,t,n,s){o(e),n=n==null?0:n,s=s==null?1:s,i(n,s);let r=0,a=l=>(l.then(c=>{let u=n+ ++r/e.length*(s-n);return t(u),c}),l);function o(l){O(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){O(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),O(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),O(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(a))}async function j5(e,t){t==null&&(t={});let n=t.fetchFunc==null?K().platform.fetch:t.fetchFunc,s=e.map(d=>n(d,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await H5(s,t.onProgress,r,a)).map(d=>d.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(i):await H5(i,t.onProgress,l,c)}async function _9(e,t="",n,s){return q5(o=>j5(o,{requestInit:s}))(e,t,n)}function q5(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let A="quantization"in g?g.quantization.dtype:g.dtype,x=r2[A]*Ut(g.shape),y=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,w)=>{b===g.name&&(y(),o[w]=!0)}):y(),i.push(g.name),m+=x})}),!o.every(h=>h)){let h=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),c=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;c.push(m)})});let u=await e(c),d={},p=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let b=0;b<f;b++)m+=u[p+b].byteLength;let g=new ArrayBuffer(m),A=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let w=new Uint8Array(u[p+b]);A.set(w,x),x+=w.byteLength}a[h].forEach(b=>{let w=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),k=D5(w,[b.manifestEntry]);for(let C in k)d[C]=k[C]}),p+=f}),d}}var P9="application/octet-stream",F9="application/json",h2=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(O(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=K().platform.fetch,O(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&O(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=F5(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:F9}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:P9}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:ld(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return i2(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=O9(t),r=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let o=[],i=[];for(let c of e)for(let u of c.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(u)):o.push(r+u+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await j5(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,o2(l)]}};h2.URL_SCHEME_REGEX=/^https?:\/\//;function O9(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function f2(e){return e.match(h2.URL_SCHEME_REGEX)!=null}var X5=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>f2(s)):n=f2(e),n)return m2(e,t)}return null};Bt.registerSaveRouter(X5);Bt.registerLoadRouter(X5);function m2(e,t){return new h2(e,t)}function M9(e,t){return m2(e,t)}var g2=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},z9=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function L9(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new g2(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new g2({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new g2({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function B9(e){return new z9(e)}var K5={};Me(K5,{confusionMatrix:()=>H9});function W9(e,t,n=!1,s=!1){let r=_(e,"a","matMul"),a=_(t,"b","matMul");[r,a]=Pt(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return B.runKernel(Ia,o,i)}var He=V({matMul_:W9});function V9(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:_(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return B.runKernel(ki,a,o)}var ud=V({oneHot_:V9});function U9(e,t){let n=_(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{O(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return B.runKernel(po,s,r)}var tt=V({transpose_:U9});function G9(e,t,n){let s=_(e,"labels","confusionMatrix"),r=_(t,"predictions","confusionMatrix");O(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),O(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),O(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),O(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),O(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=ud(pe(s,"int32"),n),o=ud(pe(r,"int32"),n),i=tt(a),l=He(i,o);return pe(l,"int32")}var H9=V({confusionMatrix_:G9}),qi={};Me(qi,{assertAndGetBroadcastShape:()=>At,getBroadcastDims:()=>Z5,getReductionAxes:()=>Xt});function Z5(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function Xt(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function At(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var Gs={};Me(Gs,{fromPixels:()=>J9,fromPixelsAsync:()=>Z9,toPixels:()=>Y9});function Y5(e,t,n){if(Qo(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Sr(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return bo(e,t,s,n)}var Xi;function J5(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r){let f=2;if(r&&e.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(_h(Yc,B.backendName)!=null){let f={pixels:e},m={numChannels:t};return B.runKernel(Yc,f,m)}let[c,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(o)d=e.getContext("2d").getImageData(0,0,c,u).data;else if(s||n)d=e.data;else if(a||r||i){if(Xi==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Xi=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Xi=document.createElement("canvas").getContext("2d");Xi.canvas.width=c,Xi.canvas.height=u,Xi.drawImage(e,0,0,c,u),d=Xi.getImageData(0,0,c,u).data}let p;if(t===4)p=new Int32Array(d);else{let f=c*u;p=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)p[m*t+g]=d[m*4+g]}return Y5(p,[u,c,t],"int32")}function j9(e){return e!=null&&e.data instanceof Uint8Array}function q9(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function X9(e){return e!=null&&e.width!==0&&e.height!==0}function K9(e){return q9()&&!(e instanceof ImageBitmap)&&X9(e)&&!j9(e)}async function Z9(e,t=3){let n=null;if(K().getBool("WRAP_TO_IMAGEBITMAP")&&K9(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return J5(n,t)}async function Y9(e,t){let n=_(e,"img","toPixels");if(!(e instanceof et)){let c=n;n=pe(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){let u=[0,0,0,255];for(let p=0;p<a;p++){let h=o[c*a+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(u[0]=h*i,u[1]=h*i,u[2]=h*i):u[p]=h*i}let d=c*4;l[d+0]=Math.round(u[0]),l[d+1]=Math.round(u[1]),l[d+2]=Math.round(u[2]),l[d+3]=Math.round(u[3])}if(t!=null){t.width=r,t.height=s;let c=t.getContext("2d"),u=new ImageData(l,r,s);c.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var J9=V({fromPixels_:J5}),A2={};Me(A2,{prepareAndValidate:()=>Q5});function Q5(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(Ut(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let d=0;d<r.length-1;++d)o*=r[d];let i=e.shape,l=r.slice();l.pop();let c=1;for(let d=a;d<n;++d)c*=i[d],l.push(i[d]);let u=[...Bl(e.shape).map(d=>d/c),1].slice(0,a);return[l,o,c,u]}var y2={};Me(y2,{calculateShapes:()=>e3,validateInput:()=>b2,validateUpdateShape:()=>x2});function x2(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function b2(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}x2(n,t,e)}function e3(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let d=r;d<a;++d)o*=n[d];let i=r<1?1:r,l=Ut(t.shape)/i,c=[...Bl(n.slice(0,r)),1],u=Ut(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}var Ft={};Me(Ft,{assertParamsValid:()=>eR,computeFlatOffset:()=>aR,computeOutShape:()=>nR,getNormalizedAxes:()=>sR,isSliceContinous:()=>rR,maskToAxes:()=>tR,parseSliceParams:()=>u3,sliceInfo:()=>oR,startForAxis:()=>i3,startIndicesWithElidedDims:()=>r3,stopForAxis:()=>l3,stopIndicesWithElidedDims:()=>a3,stridesForAxis:()=>o3,stridesWithElidedDims:()=>t3});var v2=-2,Q9=-1;function eR(e,t,n){let s=e.shape.length;O(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),O(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)O(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function tR(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function nR(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function t3(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function n3(e,t,n){return n<=e?n:n-(t-1)}function s3(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function sR(e,t,n,s,r,a,o,i,l){let c=e.length,u=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){let h=t[0],f=n+1;u=r3(o,h,f,s,e),d=a3(i,h,f,r,e),p=t3(a,h,f,e)}else for(let h=0;h<c;h++)u[h]=i3(o,s,a,e,h,l),d[h]=l3(i,r,a,e,h,l),p[h]=o3(a,h,l);return{begin:u,end:d,strides:p}}function r3(e,t,n,s,r){let a=[...r],o=s3(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=n3(t,n,i),c=s[l];e&1<<l&&(c=0),a[i]=c}return a}function a3(e,t,n,s,r){let a=[...r],o=s3(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=n3(t,n,i),c=s[l];e&1<<l&&(c=Number.MAX_SAFE_INTEGER),a[i]=c}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=Fc(0,a[i],r[i])}return a}function o3(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function i3(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=Fc(0,o,l-1),o}function l3(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=Fc(0,o,l):o=Fc(-1,o,l-1),o}function rR(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function aR(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function u3(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{O(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(O(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function oR(e,t,n,s,r,a,o,i,l){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,o!=null&&(o&o-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let y=0;y<d.dims;y++)u&&(1<<y&i)!=0&&d.numAddAxisAfterEllipsis++,1<<y&o&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};iR(d,p);let h=!0,f=!0,m=!0,g=[],A=[];for(let y=0;y<e.length;++y){if(p.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);let b=!!(p.shrinkAxisMask&1<<y),w=e[y];if(w===-1){g.push(b?1:-1);continue}let k=[p.beginMask&1<<y,p.endMask&1<<y],C=[p.strides[y]>0?0:-1,p.strides[y]>0?w:w-1];if(b&&p.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[y]===1;let E=!!(p.beginMask&1<<y&&p.endMask&1<<y);if(p.beginValid&&p.endValid){if(b){let P=p.begin[y]<0?w+p.begin[y]:p.begin[y];if(p.begin[y]=P,p.end[y]=p.begin[y]+1,P<0||P>=w)throw Error(`slice index ${p.begin[y]} of dimension ${y} out of bounds.`)}else p.begin[y]=c3(p.begin[y],0,p.strides[y],w,k,C),p.end[y]=c3(p.end[y],1,p.strides[y],w,k,C);let D=p.strides[y]===1&&p.begin[y]===0&&p.end[y]===w;h=h&&D,f=f&&(y===0&&p.strides[y]===1||D)}else h=h&&p.strides[y]===1&&E,f=f&&(y===0&&p.strides[y]===1||E);let R,F=!1;if(p.beginValid&&p.endValid?(R=p.end[y]-p.begin[y],F=!0):b?(R=1,F=!0):E&&w>=0&&(p.strides[y]<0?R=-w:R=w,F=!0),F){let D;R===0||R<0!=p.strides[y]<0?D=0:D=Math.trunc(R/p.strides[y])+(R%p.strides[y]!=0?1:0),g.push(D)}else g.push(-1)}for(let y=0;y<p.finalShapeGatherIndices.length;++y){let b=p.finalShapeGatherIndices[y];b>=0?A.push(g[b]):b===v2&&A.push(1)}return{finalShapeSparse:A.filter((y,b)=>p.finalShapeGatherIndices[b]!==v2),finalShape:A,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function iR(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(v2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(Q9),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function c3(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var ue={};Me(ue,{Serializable:()=>d3,SerializationMap:()=>Ki,registerClass:()=>wo});var d3=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Ki=class{constructor(){this.classNameMap={}}static getMap(){return Ki.instance==null&&(Ki.instance=new Ki),Ki.instance}static register(e){Ki.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function wo(e){O(e.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),O(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ki.register(e)}var p3={};Me(p3,{TEST_EPSILON_FLOAT16:()=>h3,encodeStrings:()=>f3,expectArrayBuffersEqual:()=>fR,expectArraysClose:()=>uR,expectArraysEqual:()=>dR,expectNumbersClose:()=>pR,expectPromiseToFail:()=>cR,expectValuesInRange:()=>hR,testEpsilon:()=>w2});var lR=.001,h3=.1;function uR(e,t,n){return n==null&&(n=w2()),k2(e,t,(s,r)=>S2(s,r,n))}function w2(){return B.backend.floatPrecision()===32?lR:h3}function k2(e,t,n){let s=!0;if(($n(e)||$n(t))&&(s=!1),$n(e)&&$n(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Sr(e),i=Sr(t);if(!xa(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=$n(e)?e:ei(e),a=$n(t)?t:ei(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}}function cR(e,t){e().then(()=>t.fail(),()=>t())}function dR(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return ba(e)||ba(e[0])||ba(t)||ba(t[0])?k2(e,n,(s,r)=>s==r):k2(e,t,(s,r)=>S2(s,r,0))}function pR(e,t,n){if(n==null&&(n=w2()),!S2(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function S2(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function hR(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function fR(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function f3(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?f3(n):e[t]=td(n)}return e}function m3(){K().set("PROD",!0)}function mR(){K().set("DEBUG",!0)}function gR(){K().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function I2(e){K().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}OE(I2);function AR(){B.disposeVariables()}function ts(){return B}function Wh(){return B.memory()}function yR(e){return B.profile(e)}function q(e,t){return B.tidy(e,t)}function ae(e){Qg(e).forEach(n=>n.dispose())}function fn(e){return B.keep(e)}function xR(e){return B.time(e)}function g3(e){return B.setBackend(e)}function Vh(){return B.ready()}function ir(){return B.backendName}function bR(e){B.removeBackend(e)}function C2(e){return B.findBackend(e)}function vR(e){return B.findBackendFactory(e)}function Zi(e,t,n=1){return B.registerBackend(e,t,n)}function Ir(){return B.backend}function wR(e,t){K().setPlatform(e,t)}function kR(e,t){let n=_(e,"a","add"),s=_(t,"b","add");[n,s]=Pt(n,s);let r={a:n,b:s};return B.runKernel(Vr,r)}var le=V({add_:kR});function SR(e,t){let n=_(e,"a","floorDiv"),s=_(t,"b","floorDiv");[n,s]=Pt(n,s);let r={a:n,b:s};return B.runKernel(Ma,r)}var T2=V({floorDiv_:SR});function IR(e,t){let n=_(e,"a","div"),s=_(t,"b","div");if([n,s]=Pt(n,s),n.dtype==="int32"&&s.dtype==="int32")return T2(n,s);let r={a:n,b:s},a={};return B.runKernel(_a,r,a)}var fe=V({div_:IR});function CR(e,t){let n=_(e,"a","mul"),s=_(t,"b","mul");[n,s]=Pt(n,s);let r={a:n,b:s};return B.runKernel(Ka,r)}var W=V({mul_:CR});function TR(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return B.runKernel(Lc,n)}else{let n={x:t};return B.runKernel(ti,n)}}var sn=V({abs_:TR});function NR(e){let n={x:_(e,"x","acos")};return B.runKernel(Vl,n)}var A3=V({acos_:NR});function ER(e){let n={x:_(e,"x","acosh")};return B.runKernel(Ul,n)}var y3=V({acosh_:ER});function RR(e){O(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),O(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>_(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!xa(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return B.runKernel(wa,s)}var Uh=V({addN_:RR});function $R(e,t=null,n=!1){let r={x:_(e,"x","all","bool")},a={axis:t,keepDims:n};return B.runKernel(Gl,r,a)}var N2=V({all_:$R});function DR(e,t=null,n=!1){let r={x:_(e,"x","any","bool")},a={axis:t,keepDims:n};return B.runKernel(Hl,r,a)}var Gh=V({any_:DR});function _R(e,t=0){let s={x:_(e,"x","argMax")},r={axis:t};return B.runKernel(ka,s,r)}var Hs=V({argMax_:_R});function PR(e,t=0){let s={x:_(e,"x","argMin")},r={axis:t};return B.runKernel(jl,s,r)}var x3=V({argMin_:PR});function FR(e){let n={x:_(e,"x","asin")};return B.runKernel(ql,n)}var b3=V({asin_:FR});function OR(e){let n={x:_(e,"x","asinh")};return B.runKernel(Xl,n)}var v3=V({asinh_:OR});function MR(e){let n={x:_(e,"x","atan")};return B.runKernel(Kl,n)}var w3=V({atan_:MR});function zR(e,t){let n=_(e,"a","atan2"),s=_(t,"b","atan2");[n,s]=Pt(n,s);let r={a:n,b:s};return B.runKernel(Yl,r)}var k3=V({atan2_:zR});function LR(e){let n={x:_(e,"x","atanh")};return B.runKernel(Zl,n)}var S3=V({atanh_:LR});function BR(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=T3(r);return cd(e,i,n,a,s,null,null,l)}function I3(e,t,n,s,r,a,o="channelsLast"){let[i,l]=Hh(t),c;if(o==="channelsLast")c=[i,l,e[3],e[3]];else if(o==="channelsFirst")c=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return cd(e,c,n,s,r,a,!1,o)}function WR(e,t,n,s,r,a,o="NDHWC"){let[i,l,c]=R2(t),u,d;if(o==="NDHWC")d="channelsLast",u=[i,l,c,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",u=[i,l,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return C3(e,u,n,s,r,!1,d,a)}function cd(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,c,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,d]=e;else if(i==="channelsFirst")[l,d,c,u]=e;else throw new Error(`Unknown dataFormat ${i}`);let[p,h,,f]=t,[m,g]=Hh(n),[A,x]=Hh(s),y=xu(p,A),b=xu(h,x),{padInfo:w,outHeight:k,outWidth:C}=GR(r,c,u,m,g,y,b,a,i),E=o?f*d:f,R;return i==="channelsFirst"?R=[l,E,k,C]:i==="channelsLast"&&(R=[l,k,C,E]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:u,inChannels:d,outHeight:k,outWidth:C,outChannels:E,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:y,effectiveFilterWidth:b,dilationHeight:A,dilationWidth:x,inShape:e,outShape:R,filterShape:t}}function C3(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,c,u,d,p]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,d,p]=e;else if(o==="channelsFirst")[l,p,c,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[A,x,y]=R2(n),[b,w,k]=R2(s),C=xu(h,b),E=xu(f,w),R=xu(m,k),{padInfo:F,outDepth:D,outHeight:P,outWidth:T}=HR(r,c,u,d,A,x,y,C,E,R,i),M=a?g*p:g,U;return o==="channelsFirst"?U=[l,M,D,P,T]:o==="channelsLast"&&(U=[l,D,P,T,M]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:d,inChannels:p,outDepth:D,outHeight:P,outWidth:T,outChannels:M,padInfo:F,strideDepth:A,strideHeight:x,strideWidth:y,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:w,dilationWidth:k,inShape:e,outShape:U,filterShape:t}}function VR(e,t,n,s,r){s==null&&(s=E2(e,t,n));let a=e[0],o=e[1],i=Yi((a-t+2*s)/n+1,r),l=Yi((o-t+2*s)/n+1,r);return[i,l]}function UR(e,t,n,s,r,a){r==null&&(r=E2(e,t,s));let o=e[0],i=e[1],l=e[2],c=Yi((o-t+2*r)/s+1,a),u=Yi((i-t+2*r)/s+1,a),d=Yi((l-t+2*r)/s+1,a);return[c,u,d,n]}function E2(e,t,n,s=1){let r=xu(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Hh(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function R2(e){return typeof e=="number"?[e,e,e]:e}function xu(e,t){return t<=1?e:e+(e-1)*(t-1)}function GR(e,t,n,s,r,a,o,i,l){let c,u,d;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=VR([t,n],a,s,e,i);u=h[0],d=h[1]}else if(e==="same"){u=Math.ceil(t/s),d=Math.ceil(n/r);let p=Math.max(0,(u-1)*s+a-t),h=Math.max(0,(d-1)*r+o-n),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),A=h-g;c={top:f,bottom:m,left:g,right:A,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-a+1)/s),d=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=Yi((t-a+p+h)/s+1,i),d=Yi((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:u,outWidth:d}}function HR(e,t,n,s,r,a,o,i,l,c,u){let d,p,h,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=UR([t,n,s,1],i,1,r,e,u);p=g[0],h=g[1],f=g[2]}else if(e==="same"){p=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/o);let m=(p-1)*r+i-t,g=(h-1)*a+l-n,A=(f-1)*o+c-s,x=Math.floor(m/2),y=m-x,b=Math.floor(g/2),w=g-b,k=Math.floor(A/2),C=A-k;d={top:b,bottom:w,left:k,right:C,front:x,back:y,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/r),h=Math.ceil((n-l+1)/a),f=Math.ceil((s-c+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function Yi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ko(e){let[t,n,s]=Hh(e);return t===1&&n===1&&s===1}function Cr(e,t){return ko(e)||ko(t)}function T3(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function jR(e,t){let s={x:_(e,"x","reshape","string_or_numeric")},r={shape:t};return B.runKernel(Ci,s,r)}var G=V({reshape_:jR});function qR(e,t,n,s,r){let a=_(e,"x","avgPool","float32"),o=1;O(Cr(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=G(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),r!=null&&O(pn(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=B.runKernel(Sa,c,u);return d=pe(d,a.dtype),l?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var jh=V({avgPool_:qR});function XR(e,t,n,s,r,a="NDHWC"){let o=_(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),O(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),r!=null&&O(pn(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=B.runKernel(Mc,c,u);return d=pe(d,i.dtype),l?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var $2=V({avgPool3d_:XR});function KR(e,t=0){O(e.length>=1,()=>"Pass at least one tensor to concat");let n=id(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return or(n[0]);let s=n,r={axis:t};return B.runKernel(si,s,r)}var kt=V({concat_:KR});function ZR(e){let n={x:_(e,"x","sigmoid","float32")};return B.runKernel(ro,n)}var ds=V({sigmoid_:ZR});function YR(e,t,n){let s=_(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return B.runKernel($i,r,a)}var _e=V({slice_:YR});function JR(e){let n={x:_(e,"x","tanh","float32")};return B.runKernel(co,n)}var bu=V({tanh_:JR});function QR(e,t,n,s,r,a){let o=_(e,"forgetBias","basicLSTMCell"),i=_(t,"lstmKernel","basicLSTMCell"),l=_(n,"lstmBias","basicLSTMCell"),c=_(s,"data","basicLSTMCell"),u=_(r,"c","basicLSTMCell"),d=_(a,"h","basicLSTMCell"),p=kt([c,d],1),h=He(p,i),f=le(h,l),m=f.shape[0],g=f.shape[1]/4,A=[m,g],x=_e(f,[0,0],A),y=_e(f,[0,g],A),b=_e(f,[0,g*2],A),w=_e(f,[0,g*3],A),k=le(W(ds(x),bu(y)),W(u,ds(le(o,b)))),C=W(bu(k),ds(w));return[k,C]}var e$=V({basicLSTMCell_:QR});function t$(e,t,n){let s=_(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);O(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),O(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),O(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return B.runKernel(ni,a,o)}var qh=V({batchToSpaceND_:t$});function n$(e){let t;return e.rank===0||e.rank===1?t=G(e,[1,1,1,e.size]):e.rank===2?t=G(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function s$(e,t,n,s,r,a){a==null&&(a=.001);let o=_(e,"x","batchNorm"),i=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),c;r!=null&&(c=_(r,"scale","batchNorm"));let u;s!=null&&(u=_(s,"offset","batchNorm")),O(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:n$(o),scale:c,offset:u,mean:i,variance:l},h={varianceEpsilon:a},f=B.runKernel(za,p,h);return G(f,o.shape)}var vu=V({batchNorm_:s$});function r$(e,t,n,s,r,a){let o=_(e,"x","batchNorm"),i=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),c;r!=null&&(c=_(r,"scale","batchNorm"));let u;return s!=null&&(u=_(s,"offset","batchNorm")),O(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),O(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),vu(o,i,l,u,c,a)}var N3=V({batchNorm2d_:r$});function a$(e,t,n,s,r,a){let o=_(e,"x","batchNorm"),i=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),c;r!=null&&(c=_(r,"scale","batchNorm"));let u;return s!=null&&(u=_(s,"offset","batchNorm")),O(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),O(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),vu(o,i,l,u,c,a)}var E3=V({batchNorm3d_:a$});function o$(e,t,n,s,r,a){let o=_(e,"x","batchNorm"),i=_(t,"mean","batchNorm"),l=_(n,"variance","batchNorm"),c;r!=null&&(c=_(r,"scale","batchNorm"));let u;return s!=null&&(u=_(s,"offset","batchNorm")),O(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),O(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),vu(o,i,l,u,c,a)}var R3=V({batchNorm4d_:o$});function i$(e,t,n){let s=_(e,"x","bincount"),r=_(t,"weights","bincount");O(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return B.runKernel(rh,a,o)}var D2=V({bincount_:i$});function l$(e,t){let n=_(e,"s0","broadcastArgs","int32"),s=_(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return B.runKernel(ah,r)}var $3=V({broadcastArgs_:l$});function u$(e,t){let n=_(e,"broadcastTo","x"),s=n.shape;if(t.some(c=>!(c>0)||c%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let c=n.shape.slice();for(;c.length<t.length;)c.unshift(1);n=G(n,c)}let r=n.shape,a=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])a[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return or(n);let i={x:n},l={reps:a};return B.runKernel(Gr,i,l)}var dd=V({broadcastTo_:u$});function c$(e){let n={x:_(e,"x","ceil","float32")};return B.runKernel(Ta,n)}var D3=V({ceil_:c$});function d$(e,t,n){let s=_(e,"x","clipByValue");O(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return B.runKernel(Ur,r,a)}var ps=V({clipByValue_:d$});function p$(e){return kt(e,0)}var _3=V({concat1d_:p$});function h$(e,t){return kt(e,t)}var wu=V({concat2d_:h$});function f$(e,t){return kt(e,t)}var P3=V({concat3d_:f$});function m$(e,t){return kt(e,t)}var F3=V({concat4d_:m$});function g$(e,t,n,s,r="NHWC",a=[1,1],o){let i=_(e,"x","conv2d","float32"),l=_(t,"filter","conv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),O(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),o!=null&&O(pn(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let d=r==="NHWC"?c.shape[3]:c.shape[1];O(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),O(Cr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let p={x:c,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=B.runKernel(Na,p,h);return u?G(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var So=V({conv2d_:g$});function A$(e,t,n,s,r="NWC",a=1,o){let i=_(e,"x","conv1d"),l=_(t,"filter","conv1d"),c=i,u=!1;i.rank===2&&(u=!0,c=G(i,[1,i.shape[0],i.shape[1]])),O(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),O(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),o!=null&&O(pn(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`),O(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),O(Cr(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),O(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let d=G(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=G(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=So(p,d,[1,n],s,"NHWC",[1,a],o);return u?G(g,[g.shape[2],g.shape[3]]):G(g,[g.shape[0],g.shape[2],g.shape[3]])}var _2=V({conv1d_:A$});function y$(e,t,n,s,r,a="NHWC",o){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,c=!1;t.rank===3&&(c=!0,l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),O(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),O(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),O(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?l.shape[3]:l.shape[1];O(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),O(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),o!=null&&O(pn(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let p={dy:l,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=B.runKernel(Ea,p,h);return c?G(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var P2=V({conv2DBackpropInput_:y$});function x$(e,t,n,s,r,a){let o=_(e,"x","conv2dTranspose"),i=_(t,"filter","conv2dTranspose");return P2(n,o,i,s,r,"NHWC",a)}var F2=V({conv2dTranspose_:x$});function b$(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=_(e,"x","conv3d"),i=_(t,"filter","conv3d"),l=o,c=!1;o.rank===4&&(c=!0,l=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),O(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),O(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),O(Cr(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),O(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let u={x:l,filter:i},d={strides:n,pad:s,dataFormat:r,dilations:a},p=B.runKernel(Bc,u,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var O2=V({conv3d_:b$});function v$(e,t,n,s,r){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],c=o.shape[4];O(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),O(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),O(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),O(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),O(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let u={dy:o,filter:n},d={pad:r,strides:s,inputShape:a},p=B.runKernel(lh,u,d);return i?G(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var O3=V({conv3DBackpropInput_:v$});function w$(e,t,n,s,r){let a=_(e,"x","conv3dTranspose"),o=_(t,"filter","conv3dTranspose");return O3(n,a,o,s,r)}var M3=V({conv3dTranspose_:w$});function k$(e){let n={x:_(e,"x","cos","float32")};return B.runKernel(Ra,n)}var Xh=V({cos_:k$});function S$(e){let n={x:_(e,"x","cosh","float32")};return B.runKernel($a,n)}var M2=V({cosh_:S$});function I$(e,t=0,n=!1,s=!1){let a={x:_(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return B.runKernel(ri,a,o)}var z2=V({cumsum_:I$});function C$(e,t,n,s=!1){let r=_(e,"x","denseBincount"),a=_(t,"weights","denseBincount");O(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),O(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return B.runKernel(uh,o,i)}var z3=V({denseBincount_:C$});function T$(e,t,n="NHWC"){let s=_(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),O(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),O(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return B.runKernel(oi,i,l)}var L3=V({depthToSpace_:T$});function N$(e,t,n,s,r="NHWC",a=[1,1],o){let i=_(e,"x","depthwiseConv2d","float32"),l=_(t,"filter","depthwiseConv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),O(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),O(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),o!=null&&O(pn(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`);let d={x:c,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},h=B.runKernel(Da,d,p);return u?G(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var pd=V({depthwiseConv2d_:N$});function E$(e){let n={x:_(e,"x","diag")};return B.runKernel(ph,n)}var R$=V({diag_:E$});function $$(e,t,n,s,r=[1,1],a="NHWC"){let o=_(e,"x","dilation2d"),i=_(t,"filter","dilation2d");O(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),O(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),O(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,c=!1;o.rank===3&&(l=G(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);let u={x:l,filter:i},d={strides:n,pad:s,dilations:r},p=B.runKernel(Wc,u,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var B3=V({dilation2d_:$$});function D$(e,t){let n=_(e,"a","equal","string_or_numeric"),s=_(t,"b","equal","string_or_numeric");[n,s]=Pt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(ii,r)}var Cs=V({equal_:D$});function _$(e,t,n){let s=_(t,"a","where"),r=_(n,"b","where"),a=_(e,"condition","where","bool"),o=At(At(a.shape,s.shape),r.shape),i=dd(a,o),l=dd(s,o),c=dd(r,o),u={condition:i,t:l,e:c};return B.runKernel(Ri,u)}var Bn=V({where_:_$});function P$(e){let n={x:_(e,"x","zerosLike")};return B.runKernel(Bi,n)}var nt=V({zerosLike_:P$});function F$(e,t){let n=_(e,"a","div"),s=_(t,"b","div");[n,s]=Pt(n,s);let r=fe(n,s),a=nt(r),o=Cs(s,a);return Bn(o,a,r)}var W3=V({divNoNan_:F$});function O$(e,t){let n=_(e,"t1","dot"),s=_(t,"t2","dot");O((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(O(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=G(n,[1,-1]),i=G(s,[-1,1]),l=He(o,i);return G(l,[])}else if(n.rank===1&&s.rank===2){let o=G(n,[1,-1]),i=G(s,[s.shape[0],s.shape[1]]),l=He(o,i);return G(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=G(s,[-1,1]),i=He(n,o);return G(i,[i.size])}else{let o=G(s,[s.shape[0],s.shape[1]]);return He(n,o)}}var M$=V({dot_:O$});function z$(e,...t){let n=t.map((r,a)=>_(r,`tensors${a}`,"einsum")),s={equation:e};return B.runKernel(Vc,n,s)}var V3=V({einsum_:z$});function L$(e){let n={x:_(e,"x","elu","float32")};return B.runKernel(Pa,n)}var hd=V({elu_:L$});function B$(e){let t=_(e,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=pe(t,"float32"));let n={x:t};return B.runKernel(Jl,n)}var U3=V({erf_:B$});function W$(e){let n={x:_(e,"x","exp")};return B.runKernel(Fa,n)}var Ts=V({exp_:W$});function V$(e,t=0){let n=_(e,"x","expandDims","string_or_numeric");O(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return B.runKernel(li,s,r)}var mn=V({expandDims_:V$});function U$(e){let n={x:_(e,"x","expm1")};return B.runKernel(ui,n)}var G3=V({expm1_:U$});function G$(e,t){let n=_(e,"x","tile","string_or_numeric");O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return B.runKernel(Gr,s,r)}var js=V({tile_:G$});function H$(e,t,n,s="float32"){t==null&&(t=e);let r=Be([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=G(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return js(mn(o,0),[n[0],1,1]);if(n.length===2)return js(mn(mn(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return js(mn(mn(mn(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var L2=V({eye_:H$});function ku(e,t,n){let s={shape:e,value:t,dtype:n};return B.runKernel(Ql,{},s)}function j$(e){let n={x:_(e,"x","floor","float32")};return B.runKernel(Oa,n)}var fd=V({floor_:j$});function q$(e,t,n=0,s=0){let r=_(e,"x","gather"),a=_(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return B.runKernel(di,o,i)}var Su=V({gather_:q$});function X$(e,t){let n=_(e,"a","greater","string_or_numeric"),s=_(t,"b","greater","string_or_numeric");[n,s]=Pt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(hi,r)}var hs=V({greater_:X$});function K$(e,t){let n=_(e,"a","greaterEqual","string_or_numeric"),s=_(t,"b","greaterEqual","string_or_numeric");[n,s]=Pt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(La,r)}var Ji=V({greaterEqual_:K$});function Z$(e){let n={input:_(e,"input","imag")};return B.runKernel(Uc,n)}var Kh=V({imag_:Z$});function Y$(e){let n={x:_(e,"x","isFinite")};return B.runKernel(eu,n)}var J$=V({isFinite_:Y$});function Q$(e){let n={x:_(e,"x","isInf")};return B.runKernel(tu,n)}var eD=V({isInf_:Q$});function tD(e){let n={x:_(e,"x","isNaN")};return B.runKernel(nu,n)}var H3=V({isNaN_:tD});function nD(e,t=.2){let s={x:_(e,"x","leakyRelu")},r={alpha:t};return B.runKernel(fi,s,r)}var Zh=V({leakyRelu_:nD});function sD(e,t){let n=_(e,"a","less","string_or_numeric"),s=_(t,"b","less","string_or_numeric");[n,s]=Pt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(mi,r)}var B2=V({less_:sD});function rD(e,t){let n=_(e,"a","lessEqual","string_or_numeric"),s=_(t,"b","lessEqual","string_or_numeric");[n,s]=Pt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(gi,r)}var Qi=V({lessEqual_:rD});function j3(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return B.runKernel(yh,{},s)}function aD(e,t=5,n=1,s=1,r=.5){let a=_(e,"x","localResponseNormalization");O(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),O(pn(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=G(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},c={depthRadius:t,bias:n,alpha:s,beta:r},u=B.runKernel(Hc,l,c);return i?G(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var q3=V({localResponseNormalization_:aD});function oD(e){let n={x:_(e,"x","log","float32")};return B.runKernel(Wa,n)}var Ns=V({log_:oD});function iD(e){let n={x:_(e,"x","log1p")};return B.runKernel(su,n)}var Yh=V({log1p_:iD});function lD(e){return O(va(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=_(t,"x","tf.grad","string_or_numeric"),r=n!=null?_(n,"dy","tf.grad"):null;return B.tidy(()=>{let{value:a,grads:o}=B.gradients(()=>e(s),[s],r);return r!=null&&Mn(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Jh(o),o[0]})}}function uD(e){return O(va(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{O(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=id(t,"args","tf.grads","string_or_numeric"),r=n!=null?_(n,"dy","tf.grads"):null;return B.tidy(()=>{let{value:a,grads:o}=B.gradients(()=>e(...s),s,r);return r!=null&&Mn(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Jh(o),o})}}function cD(e){return O(va(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{O(t instanceof et,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),O(n==null||n instanceof et,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=B.gradients(()=>e(t),[t],n);return Jh(s),{grad:s[0],value:r}}}function dD(e){return O(va(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{O(Array.isArray(t)&&t.every(r=>r instanceof et),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),O(n==null||n instanceof et,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=B.gradients(()=>e(...t),t,n);return n!=null&&Mn(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Jh(s.grads),s}}function X3(e,t){O(va(e),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(c=>c instanceof ad),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in B.registeredVariables)t.push(B.registeredVariables[c])}let s=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=B.gradients(e,t,null,a);O(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((c,u)=>{i[u]!=null&&(l[c.name]=i[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Tr(e){return B.customGrad(e)}function Jh(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function pD(e){let n={x:_(e,"x","neg")};return B.runKernel(yi,n)}var Ot=V({neg_:pD});function hD(e){let n={x:_(e,"x","softplus")};return B.runKernel(pu,n)}var Iu=V({softplus_:hD});function fD(e){let t=_(e,"x","logSigmoid");return Tr(s=>({value:Ot(Iu(Ot(s))),gradFunc:o=>W(o,ds(Ot(s)))}))(t)}var mD=V({logSigmoid_:fD});function gD(e,t=null,n=!1){let r={x:_(e,"x","max")},a={reductionIndices:t,keepDims:n};return B.runKernel(Va,r,a)}var ns=V({max_:gD});function AD(e,t){let n=_(e,"a","sub"),s=_(t,"b","sub");[n,s]=Pt(n,s);let r={a:n,b:s};return B.runKernel(uo,r)}var xe=V({sub_:AD});function yD(e,t=null,n=!1){let s=_(e,"x","sum");s.dtype==="bool"&&(s=pe(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return B.runKernel(oo,r,a)}var Se=V({sum_:yD});function xD(e,t=-1){let n=_(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Tr((r,a)=>{let o=!0,i=ns(r,t,!0),l=xe(r,i),c=xe(pe(l,"float32"),Ns(Se(Ts(l),t,o)));return a([c]),{value:c,gradFunc:(d,p)=>{let[h]=p,f=!0,m=Ts(h);return xe(d,W(Se(d,t,f),m))}}})(n)}var W2=V({logSoftmax_:xD});function V2(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function K3(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function Z3(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function el(e,t){let n=t.map(s=>1);return K3(e,n,t)}function bD(e,t,n){O(V2(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Y3(e,t){if(V2(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function U2(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function vD(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function wD(e,t=null,n=!1){let s=_(e,"x","logSumExp"),r=Us(t,s.shape),a=ns(s,r,!0),o=xe(s,a),i=Ts(o),l=Se(i,r),c=Ns(l),u=le(G(a,c.shape),c);if(n){let d=el(u.shape,r);return G(u,d)}return u}var J3=V({logSumExp_:wD});function kD(e,t){let n=_(e,"a","logicalAnd","bool"),s=_(t,"b","logicalAnd","bool");At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Ai,r)}var lr=V({logicalAnd_:kD});function SD(e){let n={x:_(e,"x","logicalNot","bool")};return B.runKernel(ru,n)}var Qh=V({logicalNot_:SD});function ID(e,t){let n=_(e,"a","logicalOr","bool"),s=_(t,"b","logicalOr","bool");At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Gc,r)}var G2=V({logicalOr_:ID});function CD(e,t){let n=_(e,"a","logicalXor","bool"),s=_(t,"b","logicalXor","bool");return At(n.shape,s.shape),lr(G2(e,t),Qh(lr(e,t)))}var TD=V({logicalXor_:CD});function ND(e,t,n,s,r){let a=_(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=G(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),O(Cr(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),r!=null&&O(pn(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=B.runKernel(Ga,c,u);return l?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var ef=V({maxPool_:ND});function ED(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=_(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),O(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),r!=null&&O(pn(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=B.runKernel(jc,c,u);return l?G(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var H2=V({maxPool3d_:ED});function RD(e,t,n,s,r=!1){let o={x:_(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=B.runKernel(wh,o,i);return{result:l[0],indexes:l[1]}}var Q3=V({maxPoolWithArgmax_:RD});function $D(e,t){let n=_(e,"a","maximum"),s=_(t,"b","maximum");[n,s]=Pt(n,s),n.dtype==="bool"&&(n=pe(n,"int32"),s=pe(s,"int32")),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Ua,r)}var Xr=V({maximum_:$D});function DD(e,t=null,n=!1){let r={x:_(e,"x","mean")},a={axis:t,keepDims:n};return B.runKernel(Ha,r,a)}var Wt=V({mean_:DD});function Ht(e,t="float32"){if(t==="complex64"){let s=Ht(e,"float32"),r=Ht(e,"float32");return xo(s,r)}let n=th(Ut(e),t);return B.makeTensor(n,e,t)}function fs(e,t="float32"){if(t==="complex64"){let s=fs(e,"float32"),r=Ht(e,"float32");return xo(s,r)}let n=Lg(Ut(e),t);return B.makeTensor(n,e,t)}function _D(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=_(e,"x","meshgrid",e instanceof et?e.dtype:"float32");if(t===void 0)return[s];let r=_(t,"y","meshgrid",t instanceof et?t.dtype:"float32"),a=Ut(s.shape),o=Ut(r.shape);return n==="xy"?(s=G(s,[1,-1]),r=G(r,[-1,1]),[He(fs([o,1],s.dtype),s),He(r,fs([1,a],r.dtype))]):(s=G(s,[-1,1]),r=G(r,[1,-1]),[He(s,fs([1,o],s.dtype)),He(fs([a,1],r.dtype),r)])}function PD(e,t=null,n=!1){let r={x:_(e,"x","min")},a={axis:t,keepDims:n};return B.runKernel(ja,r,a)}var tf=V({min_:PD});function FD(e,t){let n=_(e,"a","minimum"),s=_(t,"b","minimum");[n,s]=Pt(n,s),n.dtype==="bool"&&(n=pe(n,"int32"),s=pe(s,"int32")),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(qa,r)}var md=V({minimum_:FD});function OD(e,t,n){O(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=_(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)O(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return B.runKernel(Xa,o,a)}var ev=V({mirrorPad_:OD});function MD(e,t){let n=_(e,"a","mod"),s=_(t,"b","mod");[n,s]=Pt(n,s);let r={a:n,b:s};return B.runKernel(au,r)}var tv=V({mod_:MD});function zD(e){let t=_(e,"x","square"),n={};return B.runKernel("Square",{x:t},n)}var yt=V({square_:zD});function LD(e,t=null,n=!1){e=_(e,"x","moments");let s=Us(t,e.shape),r=Wt(e,s,n),a=r.shape;n||(a=el(r.shape,s));let o=yt(xe(pe(e,"float32"),G(r,a))),i=Wt(o,s,n);return{mean:r,variance:i}}var nf=V({moments_:LD});function BD(e,t,n,s){let r=_(t,"data","multiRNNCell"),a=id(n,"c","multiRNNCell"),o=id(s,"h","multiRNNCell"),i=r,l=[];for(let d=0;d<e.length;d++){let p=e[d](i,a[d],o[d]);l.push(p[0]),l.push(p[1]),i=p[1]}let c=[],u=[];for(let d=0;d<l.length;d+=2)c.push(l[d]),u.push(l[d+1]);return[c,u]}var WD=V({multiRNNCell_:BD});function VD(e,t,n,s=!1){let r=_(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?G(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:s},u=B.runKernel(kh,l,c);return o===1?G(u,[u.size]):u}var nv=V({multinomial_:VD});function UD(e,t){let n=_(e,"a","notEqual","string_or_numeric"),s=_(t,"b","notEqual","string_or_numeric");[n,s]=Pt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(xi,r)}var Cu=V({notEqual_:UD});function GD(e){let n={x:_(e,"x","onesLike")};return B.runKernel(wi,n)}var Es=V({onesLike_:GD});function HD(e,t){let n=_(e,"v1","outerProduct"),s=_(t,"v2","outerProduct");O(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=G(n,[-1,1]),a=G(s,[1,-1]);return He(r,a)}var jD=V({outerProduct_:HD});function qD(e,t,n=0){let s=_(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return B.runKernel(Za,a,r)}var qs=V({pad_:qD});function XD(e,t,n=0){return O(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),qs(e,[t],n)}var KD=V({pad1d_:XD});function ZD(e,t,n=0){return O(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qs(e,t,n)}var YD=V({pad2d_:ZD});function JD(e,t,n=0){return O(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qs(e,t,n)}var QD=V({pad3d_:JD});function e_(e,t,n=0){return O(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qs(e,t,n)}var t_=V({pad4d_:e_});function n_(e,t,n){let s=_(e,"x","spaceToBatchND");O(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),O(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),O(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]==0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return B.runKernel(_i,r,a)}var sf=V({spaceToBatchND_:n_});function s_(e,t,n,s,r,a){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let o=_(e,"x","maxPool"),i=o,l=!1;o.rank===3&&(l=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(Cr(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=I3(i.shape,t,a,r,s),u=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=a_([c.filterHeight,c.filterWidth],u):d=[[0,0],[0,0]];let p=u[0]===1&&u[1]===1,[h,f]=r_([c.inHeight,c.inWidth],u,d),m=p?s:"valid",g=p?i:sf(i,u,h),x=(n==="avg"?()=>jh(g,t,a,m):()=>ef(g,t,a,m))(),y=p?x:qh(x,u,f);return l?G(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function r_(e,t,n){let s=n.map(u=>u[0]),r=n.map(u=>u[1]),a=e.concat(s,r),o=t.map((u,d)=>(u-a[d]%u)%u),i=r.map((u,d)=>u+o[d]),l=t.map((u,d)=>[s[d],i[d]]),c=t.map((u,d)=>[0,o[d]]);return[l,c]}function a_(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var o_=V({pool_:s_});function i_(e,t){let n=_(e,"base","pow"),s=_(t,"exp","pow");[n,s]=Pt(n,s);let r={a:n,b:s};return B.runKernel(Ya,r)}var Io=V({pow_:i_});function l_(e,t){let n=_(e,"x","prelu"),s=_(t,"alpha","prelu"),r={x:n,alpha:s};return B.runKernel(Ja,r)}var rf=V({prelu_:l_});function u_(e,t=null,n=!1){let s=_(e,"x","prod");s.dtype==="bool"&&(s=pe(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return B.runKernel(Ii,r,a)}var j2=V({prod_:u_});function c_(e,t,n){let s=Ut(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return B.makeTensor(r,e,n)}var d_=V({rand_:c_}),q2=Jo(Yp()),X2=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=q2.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},p_=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=q2.alea(r.toString()),this.randn=new X2(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},h_=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=q2.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function f_(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new p_(t,n,s,r),o=Be(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var m_=V({randomGamma_:f_});function g_(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new X2(t,n,s,!1,r),o=Be(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var sv=V({randomNormal_:g_});function A_(e,t=0,n=1,s="float32",r){let a=Be(e,s),o=new h_(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var Tu=V({randomUniform_:A_});function Nu(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return B.runKernel(iu,{},r)}function y_(e){let n={input:_(e,"input","real")};return B.runKernel(qc,n)}var gd=V({real_:y_});function x_(e){let n={x:_(e,"x","reciprocal")};return B.runKernel(lu,n)}var rv=V({reciprocal_:x_});function b_(e){let n={x:_(e,"x","relu")};return B.runKernel(Qa,n)}var Nr=V({relu_:b_});function v_(e){let n={x:_(e,"x","relu6")};return B.runKernel(to,n)}var K2=V({relu6_:v_});function w_(e,t){let s={x:_(e,"x","reverse")},r={dims:t};return B.runKernel(Ti,s,r)}var Rs=V({reverse_:w_});function k_(e){let t=_(e,"x","reverse");return O(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Rs(t,0)}var S_=V({reverse1d_:k_});function I_(e,t){let n=_(e,"x","reverse");return O(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Rs(n,t)}var C_=V({reverse2d_:I_});function T_(e,t){let n=_(e,"x","reverse");return O(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Rs(n,t)}var N_=V({reverse3d_:T_});function E_(e,t){let n=_(e,"x","reverse");return O(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Rs(n,t)}var R_=V({reverse4d_:E_});function $_(e){let n={x:_(e,"x","round")};return B.runKernel(Ni,n)}var Z2=V({round_:$_});function D_(e){let n={x:_(e,"x","rsqrt","float32")};return B.runKernel(no,n)}var Y2=V({rsqrt_:D_});function Ee(e,t){if(($n(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&$n(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return bo(e,[],[],t)}function __(e){let n={x:_(e,"x","selu")};return B.runKernel(cu,n)}var J2=V({selu_:__});function P_(e,t,n,s,r,a=[1,1],o="NHWC"){let i=_(e,"x","separableConv2d"),l=_(t,"depthwiseFilter","separableConv2d"),c=_(n,"pointwiseFilter","separableConv2d"),u=i,d=!1;if(i.rank===3&&(d=!0,u=G(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),O(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),O(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),O(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let p=l.shape[2],h=l.shape[3];O(c.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`);let f=pd(u,l,s,r,o,a),g=So(f,c,1,"valid",o);return d?G(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var av=V({separableConv2d_:P_});async function F_(e,t){let n=_(e,"x","setdiff1d"),s=_(t,"y","setdiff1d");O(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),O(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),O(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;let l=new nn([i],n.dtype),c=new nn([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(l.values[d]=r[u],c.values[d]=u,d++);return[l.toTensor(),c.toTensor()]}var ov=F_;function O_(e){let n={x:_(e,"x","sign")};return B.runKernel(du,n)}var iv=V({sign_:O_});function M_(e){let n={x:_(e,"x","sin","float32")};return B.runKernel(so,n)}var Q2=V({sin_:M_});function z_(e){let n={x:_(e,"x","sinh")};return B.runKernel(Di,n)}var e1=V({sinh_:z_});function L_(e,t,n){let s=_(e,"x","slice1d");return O(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),_e(s,[t],[n])}var af=V({slice1d_:L_});function B_(e,t,n){let s=_(e,"x","slice2d");return O(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),_e(s,t,n)}var t1=V({slice2d_:B_});function W_(e,t,n){let s=_(e,"x","slice3d");return O(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),_e(s,t,n)}var Eu=V({slice3d_:W_});function V_(e,t,n){let s=_(e,"x","slice4d");return O(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),_e(s,t,n)}var Ad=V({slice4d_:V_});function U_(e,t=-1){let n=_(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return B.runKernel(io,s,r)}var Ru=V({softmax_:U_});function G_(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(gh,t)}var of=V({fft_:G_});function H_(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(Ah,t)}var yd=V({ifft_:H_});function j_(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=G(e,[n,t]);s=yd(r)}else{let r=[n,2*(t-1)],a=G(gd(e),[n,t]),o=G(Kh(e),[n,t]),i=Rs(_e(a,[0,1],[n,t-2]),1),l=W(Rs(_e(o,[0,1],[n,t-2]),1),Ee(-1)),c=kt([a,i],1),u=kt([o,l],1),d=G(xo(c,u),[r[0],r[1]]);s=yd(d)}if(s=gd(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=G(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var n1=V({irfft_:j_});function q_(e,t,n=0){let r={x:_(e,"x","split")},a={numOrSizeSplits:t,axis:n};return B.runKernel(Pi,r,a)}var kn=V({split_:q_});function X_(e,t){O(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=_e(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=kt([e,Ht(f)],e.shape.length-1),n=t}else r=e;let a=nt(r),o=G(xo(r,a),[s,n]),i=of(o),l=Math.floor(n/2)+1,c=gd(i),u=Kh(i),d=kn(c,[l,n-l],c.shape.length-1),p=kn(u,[l,n-l],u.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,G(xo(d[0],p[0]),h)}var lf=V({rfft_:X_});function K_(e){let n={x:_(e,"x","sqrt","float32")};return B.runKernel(ao,n)}var Dn=V({sqrt_:K_});function Z_(e,t){let n=_(e,"a","squaredDifference"),s=_(t,"b","squaredDifference");[n,s]=Pt(n,s),At(n.shape,s.shape);let r={a:n,b:s},a={};return B.runKernel(lo,r,a)}var s1=V({squaredDifference_:Z_});function Y_(e,t){let n=_(e,"x","squeeze");return G(n,s5(n.shape,t).newShape)}var ct=V({squeeze_:Y_});function J_(e,t=0){let n=id(e,"tensors","stack","string_or_numeric");O(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&O(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return B.runKernel(Si,s,r)}var _n=V({stack_:J_});function Q_(e,t=0){let s={x:_(e,"x","step")},r={alpha:t};return B.runKernel(ho,s,r)}var xd=V({step_:Q_});function eP(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let u={x:_(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return B.runKernel(Fi,u,d)}var lv=V({stridedSlice_:eP});function tP(e){let n={x:_(e,"x","tan","float32")};return B.runKernel(Oi,n)}var uv=V({tan_:tP});function Kt(e,t){Qo(e);let n=Sr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return bo(e,null,n,t)}function ur(e,t,n){if(Qo(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Sr(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return bo(e,t,s,n)}function nP(e,t,n){if(Qo(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Sr(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return bo(e,t,s,n)}function sP(e,t,n){if(Qo(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Sr(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return bo(e,t,s,n)}function rP(e,t,n){if(Qo(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Sr(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,bo(e,t,s,n)}function aP(e,t=1,n=!0){let s=_(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=B.runKernel(Mi,a,o);return{values:i,indices:l}}var cv=V({topk_:aP});function oP(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new X2(t,n,s,!0,r),o=Be(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var uf=V({truncatedNormal_:oP});function iP(e,t=0){let n=_(e,"x","unique","string_or_numeric");O(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=B.runKernel(Dh,s,r);return{values:a,indices:o}}var r1=V({unique_:iP});function lP(e,t,n){let s=_(e,"x","unsortedSegmentSum"),r=_(t,"segmentIds","unsortedSegmentSum","int32");O(pn(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return B.runKernel(Zc,a,o)}var dv=V({unsortedSegmentSum_:lP});function uP(e,t=0){let n=_(e,"x","unstack","string_or_numeric");O(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return B.runKernel(Li,s,r)}var ss=V({unstack_:uP});function pv(e,t=!0,n,s){return B.makeVariable(e,t,n,s)}function hv(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=Be(e,"int32"),r=Be([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function cP(e){let t=_(e,"condition","whereAsync","bool"),n=await t.data(),s=hv(t.shape,n);return e!==t&&t.dispose(),s}var a1=cP;async function dP(e,t,n){let s=_(e,"tensor","boolMask"),r=_(t,"mask","boolMask","bool"),a=n==null?0:n,o=r.rank,i=s.shape;O(o>0,()=>"mask cannot be scalar"),Mn(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let c=i.slice(0,a).concat([l],i.slice(a+o)),u=G(s,c),d=G(r,[-1]),p=await a1(d),h=ct(p,[1]),f=Su(u,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),u.dispose(),d.dispose(),p.dispose(),f}var pP=dP;function hP(e,t="euclidean",n=null,s=!1){e=_(e,"x","norm");let r=fv(e,t,n),a=r.shape;if(s){let o=Us(n,e.shape);a=el(r.shape,o)}return G(r,a)}function fv(e,t,n=null){if(e.rank===0)return sn(e);if(e.rank!==1&&n===null)return fv(G(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return Se(sn(e),n);if(t===1/0)return ns(sn(e),n);if(t===-1/0)return tf(sn(e),n);if(t==="euclidean"||t===2)return Dn(Se(Io(sn(e),Ee(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return ns(Se(sn(e),n[0]),n[1]-1);if(t===1/0)return ns(Se(sn(e),n[1]),n[0]);if(t===-1/0)return tf(Se(sn(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Dn(Se(yt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var o1=V({norm_:hP});function fP(e,t,n,s,r=!0){let a=_(e,"v","movingAverage"),o=_(t,"x","movingAverage"),i=_(n,"decay","movingAverage");S5(a,o),O(xa(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Ee(1),c=xe(l,i),u=W(xe(o,a),c);if(r){O(s!=null,()=>"When using zeroDebias: true, step is required.");let d=_(s,"step","movingAverage");u=fe(u,xe(l,Io(i,d)))}return le(a,u)}var mP=V({movingAverage_:fP});function gP(e,t,n){let s=_(e,"indices","scatterND","int32"),r=_(t,"updates","scatterND");b2(r,s,n);let a={indices:s,updates:r},o={shape:n};return B.runKernel(Ei,a,o)}var mv=V({scatterND_:gP});function AP(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function yP(e,t,n,s=0){let r=_(e,"sparseIndices","sparseToDense","int32"),a=_(t,"sparseValues","sparseToDense"),o=_(s,"defaultValue","sparseToDense",a.dtype);AP(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return B.runKernel(Xc,i,l)}var i1=V({sparseToDense_:yP});function xP(e,t){let n=_(t,"indices","gatherND","int32"),r={params:_(e,"x","gatherND","string_or_numeric"),indices:n};return B.runKernel(pi,r)}var gv=V({gatherND_:xP});function bP(e,t){if(t==null)return e.shape.slice();if(xa(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function vP(e,t,n,s){let r=_(e,"x","dropout");if(O(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof et?r.clone():r;let a=bP(r,n),o=1-t,i=fe(fd(le(Tu(a,0,1,"float32",s),o)),o);return W(r,i)}var Av=V({dropout_:vP});function yv(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function l1(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return Kt(r,"float32")}async function wP(e,t,n=1){let s=_(e,"predictions","inTopK"),r=_(t,"targets","inTopK");O(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),O(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Mn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];O(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,c]=[o.length/a,a],u=r5("bool",l);for(let d=0;d<l;d++){let p=d*c,h=o.subarray(p,p+c),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),u[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){u[d]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),Gt(u,r.shape,"bool")}var kP=wP,Co={};Me(Co,{conv2d:()=>CP,depthwiseConv2d:()=>RP,matMul:()=>DP});function SP(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),O(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),O(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=a==="NHWC"?i.shape[3]:i.shape[1],u=a==="NHWC"?l.shape[3]:l.shape[1];O(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),O(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),o!=null&&O(pn(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);let d={x:i,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return B.runKernel(oh,d,p)}var u1=V({conv2DBackpropFilter_:SP});function cf(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return W(e,xd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function df(e,t){let n=t,s=Xt(e.shape,t.shape);return s.length>0&&(n=Se(n,s)),G(n,e.shape)}function pf(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Nr(e);if(t==="elu")return hd(e);if(t==="relu6")return K2(e);if(t==="prelu")return rf(e,n);if(t==="leakyrelu")return Zh(e,s);if(t==="sigmoid")return ds(e);throw new Error(`Unknown fused activation ${t}.`)}var hf=(e,t)=>!(e>0)||t==="linear";function IP({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",hf(B.state.gradientDepth,l)===!1){let w=So(e,t,n,s,r,a,o);return i!=null&&(w=le(w,i)),pf(w,l,c,u)}let d=_(e,"x","conv2d","float32"),p=_(t,"filter","conv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=G(d,[1,d.shape[0],d.shape[1],d.shape[2]])),O(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),O(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),o!=null&&O(pn(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`),O(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),O(Cr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),O(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=cd(h.shape,p.shape,n,a,s,o),g;i!=null&&(g=_(i,"bias","fused conv2d"),[g]=Pt(g,d),At(m.outShape,g.shape));let A;c!=null&&(A=_(c,"prelu weights","fused conv2d"));let x=(w,k)=>{let[C,E,R,F]=k,D=cf(w,R,l);O(ko(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let P=P2(E.shape,D,C,n,s),T=u1(E,D,C.shape,n,s),M=[P,T];if(F!=null){let U=df(F,D);M.push(U)}return M},y={x:h,filter:p,bias:g,preluActivationWeights:A},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Tr((k,C,E)=>{let R=B.runKernel(mo,y,b);return E([C,k,R]),f&&(R=G(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):Tr((k,C,E,R)=>{let F=B.runKernel(mo,y,b);return R([C,k,F,E]),f&&(F=G(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(h,p,g)}var CP=V({fusedConv2d_:IP});function TP(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=G(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:i,dy:l},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return B.runKernel(ch,c,u)}var xv=V({depthwiseConv2dNativeBackpropFilter_:TP});function NP(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=G(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:i,filter:n},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},d=B.runKernel(dh,c,u);return l?G(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var bv=V({depthwiseConv2dNativeBackpropInput_:NP});function EP({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(hf(B.state.gradientDepth,l)===!1){let w=pd(e,t,n,s,r,a,o);return i!=null&&(w=le(w,i)),pf(w,l,c,u)}let d=_(e,"x","depthwiseConv2d","float32"),p=_(t,"filter","depthwiseConv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=G(d,[1,d.shape[0],d.shape[1],d.shape[2]])),O(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),O(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),O(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),O(Cr(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),o!=null&&O(pn(s),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${s}.`);let m=cd(h.shape,p.shape,n,a,s,o,!0),g;i!=null&&(g=_(i,"bias","fused conv2d"),[g]=Pt(g,d),At(m.outShape,g.shape));let A;c!=null&&(A=_(c,"prelu weights","fused depthwiseConv2d"));let x=(w,k)=>{O(ko(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[C,E,R,F]=k,D=cf(w,R,l),P=bv(E.shape,D,C,n,s,a,o),T=xv(E,D,C.shape,n,s,a,o);if(F!=null){let M=df(g,D);return[P,T,M]}return[P,T]},y={x:h,filter:p,bias:g,preluActivationWeights:A},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Tr((k,C,E)=>{let R=B.runKernel(go,y,b);return E([C,k,R]),f&&(R=G(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):Tr((k,C,E,R)=>{let F=B.runKernel(go,y,b);return R([C,k,F,E]),f&&(F=G(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(h,p,g)}var RP=V({fusedDepthwiseConv2d_:EP});function $P({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(hf(B.state.gradientDepth,a)===!1){let D=He(e,t,n,s);return r!=null&&(D=le(D,r)),pf(D,a,o,i)}let l=_(e,"a","fused matMul"),c=_(t,"b","fused matMul");[l,c]=Pt(l,c);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=Ut(f),A=Ut(m);O(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);let y=At(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,h]),b=n?G(l,[g,u,p]):G(l,[g,p,u]),w=s?G(c,[A,h,d]):G(c,[A,d,h]),k;r!=null&&(k=_(r,"bias","fused matMul"),[k]=Pt(k,l),At(y,k.shape));let C;o!=null&&(C=_(o,"prelu weights","fused matMul"));let E=(D,P)=>{let[T,M,U,j]=P,z=cf(G(D,U.shape),U,a),X,Z;if(!n&&!s?(X=He(z,M,!1,!0),Z=He(T,z,!0,!1)):!n&&s?(X=He(z,M,!1,!1),Z=He(z,T,!0,!1)):n&&!s?(X=He(M,z,!1,!0),Z=He(T,z,!1,!1)):(X=He(M,z,!0,!0),Z=He(z,T,!0,!0)),r!=null){let J=df(j,z);return[X,Z,J]}else return[X,Z]},R={a:b,b:w,bias:k,preluActivationWeights:C},F={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?Tr((P,T,M)=>{let U=B.runKernel(fo,R,F);return M([P,T,U]),{value:G(U,y),gradFunc:E}})(b,w):Tr((P,T,M,U)=>{let j=B.runKernel(fo,R,F);return U([P,T,j,M]),{value:G(j,y),gradFunc:E}})(b,w,k)}var DP=V({fusedMatMul_:$P});function _P(e){return l1(e,.54,.46)}var PP=V({hammingWindow_:_P});function FP(e){return l1(e,.5,.5)}var vv=V({hannWindow_:FP});function OP(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(_e(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=kt([_e(e,a,t-i),ku([i],r)]);o.push(l),a+=n}return o.length===0?ur([],[0,t]):G(kt(o),[o.length,t])}var wv=V({frame_:OP});function MP(e,t,n,s,r=vv){s==null&&(s=yv(t));let a=wv(e,t,n),o=W(a,r(t));return lf(o,s)}var zP=V({stft_:MP});function LP(e,t,n,s,r="bilinear",a=0){let o=_(e,"image","cropAndResize"),i=_(t,"boxes","cropAndResize","float32"),l=_(n,"boxInd","cropAndResize","int32"),c=i.shape[0];O(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),O(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),O(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),O(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),O(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),O(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let u={image:o,boxes:i,boxInd:l},d={method:r,extrapolationValue:a,cropSize:s};return B.runKernel(ai,u,d)}var BP=V({cropAndResize_:LP});function WP(e){let t=_(e,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return B.runKernel(ci,n,{})}var VP=V({flipLeftRight_:WP});function UP(e){let t=_(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,js(t,r)}var GP=V({grayscaleToRGB_:UP});function HP(e,t,n=0,s=.5){let r=_(e,"image","rotateWithOffset","float32");O(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return B.runKernel(Wi,a,o)}var jP=V({rotateWithOffset_:HP});function $u(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),O(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),O(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),O(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function qP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=_(e,"boxes","nonMaxSuppression","float32"),o=_(t,"scores","nonMaxSuppression","float32"),i=$u(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return B.runKernel(bi,{boxes:a,scores:o},l)}var XP=V({nonMaxSuppression_:qP});function KP(e,t,n){let s=ZP(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function ZP(e,t,n){return JP(e,t,n||YP)}function YP(e,t){return e>t?1:e<t?-1:0}function JP(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function kv(e,t,n,s,r){return c1(e,t,n,s,r,0)}function Sv(e,t,n,s,r,a){return c1(e,t,n,s,r,0,!1,a,!0)}function Iv(e,t,n,s,r,a){return c1(e,t,n,s,r,a,!0)}function c1(e,t,n,s,r,a,o=!1,i=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Cv);let u=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&c.length>0;){let g=c.pop(),{score:A,boxIndex:x,suppressBeginIndex:y}=g;if(A<r)break;let b=!1;for(let w=d.length-1;w>=y;--w){let k=QP(e,x,d[w]);if(k>=s){b=!0;break}if(g.score=g.score*eF(s,u,k),g.score<=r)break}g.suppressBeginIndex=d.length,b||(g.score===A?(d.push(x),p.push(g.score)):g.score>r&&KP(c,g,Cv))}let h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=p),l&&(m.validOutputs=h),m}function QP(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(i-a)*(l-o),f=(d-c)*(p-u);if(h<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(o,u),A=Math.min(i,d),x=Math.min(l,p),y=Math.max(A-m,0)*Math.max(x-g,0);return y/(h+f-y)}function eF(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function Cv(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function tF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),i=$u(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:d}=kv(c,u,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),Kt(d,"int32")}var nF=tF;function sF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=_(e,"boxes","nonMaxSuppression"),i=_(t,"scores","nonMaxSuppression"),l=$u(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},d=B.runKernel(vi,c,u);return{selectedIndices:d[0],selectedScores:d[1]}}var rF=V({nonMaxSuppressionWithScore_:sF});async function aF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),l=$u(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c=await Promise.all([o.data(),i.data()]),u=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=Iv(u,d,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Kt(p,"int32"),selectedScores:Kt(h)}}var oF=aF;function iF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=_(e,"boxes","nonMaxSuppression"),i=_(t,"scores","nonMaxSuppression"),l=$u(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,p={boxes:o,scores:i},h={maxOutputSize:c,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:a},f=B.runKernel(ou,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var lF=V({nonMaxSuppressionPadded_:iF});async function uF(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),l=$u(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Sv(p,h,c,u,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Kt(f,"int32"),validOutputs:Ee(m,"int32")}}var cF=uF;function dF(e,t,n=!1,s=!1){let r=_(e,"images","resizeBilinear");O(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=G(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=B.runKernel(eo,i,l);return o?G(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var pF=V({resizeBilinear_:dF});function hF(e,t,n=!1,s=!1){let r=_(e,"images","resizeNearestNeighbor");O(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=G(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=B.runKernel(uu,i,l);return o?G(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var fF=V({resizeNearestNeighbor_:hF});function mF(e,t="binary",n=!1,s=.5){let r=_(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],c=W(Kt([s]),255),u,d,p,h;if(O(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),O(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),O(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[u,d,p]=kn(r,[1,1,1],-1);let g=W(u,a),A=W(d,o),x=W(p,i);h=le(le(g,A),x)}else h=e;if(t==="otsu"){let g=D2(pe(Z2(h),"int32"),Gt([]),256);c=gF(g,l)}let f=n?Qi(h,c):hs(h,c);return pe(W(f,255),"int32")}function gF(e,t){let n=Kt([-1]),s=Kt([0]),r=Kt([0]),a,o,i,l,c,u;for(let d=0;d<e.size-1;d++){a=_e(e,0,d+1),o=_e(e,d+1),c=fe(Se(a),t),u=fe(Se(o),t);let p=Se(W(a,Nu(0,a.size)));i=fe(p,Se(a));let h=ku(o.shape,a.size),f=le(Nu(0,o.size),h),m=W(o,f);l=fe(Se(m),Se(o));let g=xe(i,l),A=xe(i,l),x=W(c,u);r=W(W(x,g),A);let y=hs(r,s);s=Bn(y,r,s),n=Bn(y,Kt([d]),n)}return n}var AF=V({threshold_:mF});function yF(e,t,n="nearest",s="constant",r=0,a){let o=_(e,"image","transform","float32"),i=_(t,"transforms","transform","float32");O(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),O(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},c={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return B.runKernel(zi,l,c)}var xF=V({transform_:yF});function bF(e,t,n){O(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=_(e,"a","bandPart");O(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=G(Nu(0,a,1,"int32"),[-1,1]),l=Nu(0,o,1,"int32"),c=xe(i,l),u=lr(Qi(c,Ee(+t,"int32")),Ji(c,Ee(-n,"int32"))),d=Ht([a,o],s.dtype);return G(_n(ss(G(s,[-1,a,o])).map(p=>Bn(u,p,d))),r)}var vF=V({bandPart_:bF});function wF(e){let t;if(Array.isArray(e)){t=!1,O(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)O(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=kn(e,e.shape[0],0).map(r=>ct(r,[0]));O(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(B.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=W(Se(W(n[o],a)),n[o]);a=xe(a,i)}return fe(a,o1(a,"euclidean"))}));return t?_n(n,0):n}var kF=V({gramSchmidt_:wF});function SF(e,t=!1){if(O(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Tv(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c),s=ss(G(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[c,u]=Tv(l,t);r.push(c),a.push(u)});let o=G(_n(r,0),e.shape),i=G(_n(a,0),e.shape);return[o,i]}}function Tv(e,t=!1){return B.tidy(()=>{O(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=L2(n),a=or(e),o=ur([[1]],[1,1]),i=or(o),l=n>=s?s:n;for(let c=0;c<l;++c){let u=a,d=i,p=r;[i,a,r]=B.tidy(()=>{let h=_e(a,[c,c],[n-c,1]),f=o1(h),m=_e(a,[c,c],[1,1]),g=Bn(hs(m,0),ur([[-1]]),ur([[1]])),A=xe(m,W(g,f)),x=fe(h,A);x.shape[0]===1?i=or(o):i=kt([o,_e(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let y=Ot(fe(He(g,A),f)),b=_e(a,[c,0],[n-c,s]),w=W(y,i),k=tt(i);if(c===0)a=xe(b,He(w,He(k,b)));else{let R=xe(b,He(w,He(k,b)));a=kt([_e(a,[0,0],[c,s]),R],0)}let C=tt(w),E=_e(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=xe(E,He(He(E,i),C));else{let R=xe(E,He(He(E,i),C));r=kt([_e(r,[0,0],[n,c]),R],1)}return[i,a,r]}),ae([u,d,p])}return!t&&n>s&&(r=_e(r,[0,0],[n,s]),a=_e(a,[0,0],[s,s])),[r,a]})}var IF=V({qr_:SF}),Wn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Wn||(Wn={}));function CF(e,t,n=Wn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=_(t,"weights","computeWeightedLoss"));let a=r==null?s:W(s,r);if(n===Wn.NONE)return a;if(n===Wn.SUM)return Se(a);if(n===Wn.MEAN){if(r==null)return Wt(a);{let o=s.size/r.size,i=fe(Se(a),Se(r));return o>1?fe(i,Ee(o)):i}}if(n===Wn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return fe(Se(a),Ee(s.size));{let o=W(r,fs(s.shape)),i=pe(Se(Cu(o,Ee(0))),"float32");return fe(Se(a),i)}}throw Error(`Unknown reduction: ${n}`)}var Kr=V({computeWeightedLoss_:CF});function TF(e,t,n,s=Wn.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"labels","absoluteDifference"),a=_(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=_(n,"weights","absoluteDifference")),Mn(r.shape,a.shape,"Error in absoluteDifference: ");let i=sn(xe(r,a));return Kr(i,o,s)}var NF=V({absoluteDifference_:TF});function EF(e,t,n,s,r=Wn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","cosineDistance"),o=_(t,"predictions","cosineDistance"),i=null;s!=null&&(i=_(s,"weights","cosineDistance")),Mn(a.shape,o.shape,"Error in cosineDistance: ");let l=Ee(1),c=xe(l,Se(W(a,o),n,!0));return Kr(c,i,r)}var RF=V({cosineDistance_:EF});function $F(e,t,n,s=Wn.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"labels","hingeLoss"),a=_(t,"predictions","hingeLoss"),o=null;n!=null&&(o=_(n,"weights","hingeLoss")),Mn(r.shape,a.shape,"Error in hingeLoss: ");let i=Ee(1);r=xe(W(Ee(2),r),i);let l=Nr(xe(i,W(r,a)));return Kr(l,o,s)}var DF=V({hingeLoss_:$F});function _F(e,t,n,s=1,r=Wn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","huberLoss"),o=_(t,"predictions","huberLoss"),i=null;n!=null&&(i=_(n,"weights","huberLoss")),Mn(a.shape,o.shape,"Error in huberLoss: ");let l=Ee(s),c=sn(xe(o,a)),u=md(c,l),d=xe(c,u),p=le(W(Ee(.5),yt(u)),W(l,d));return Kr(p,i,r)}var PF=V({huberLoss_:_F});function FF(e,t,n,s=1e-7,r=Wn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","logLoss"),o=_(t,"predictions","logLoss"),i=null;n!=null&&(i=_(n,"weights","logLoss")),Mn(a.shape,o.shape,"Error in logLoss: ");let l=Ee(1),c=Ee(s),u=Ot(W(a,Ns(le(o,c)))),d=W(xe(l,a),Ns(le(xe(l,o),c))),p=xe(u,d);return Kr(p,i,r)}var OF=V({logLoss_:FF});function MF(e,t,n,s=Wn.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"labels","meanSquaredError"),a=_(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=_(n,"weights","meanSquaredError")),Mn(r.shape,a.shape,"Error in meanSquaredError: ");let i=s1(r,a);return Kr(i,o,s)}var zF=V({meanSquaredError_:MF});function LF(e,t){let n=_(e,"labels","sigmoidCrossEntropyWithLogits"),s=_(t,"logits","sigmoidCrossEntropyWithLogits");Mn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Nr(s),a=W(s,n),o=Yh(Ts(Ot(sn(s))));return le(xe(r,a),o)}function BF(e,t,n,s=0,r=Wn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"multiClassLabels","sigmoidCrossEntropy"),o=_(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=_(n,"weights","sigmoidCrossEntropy")),Mn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let c=Ee(s),u=Ee(1),d=Ee(.5);a=le(W(a,xe(u,c)),W(d,c))}let l=LF(a,o);return Kr(l,i,r)}var WF=V({sigmoidCrossEntropy_:BF});function VF(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Tr((r,a,o)=>{let l=J3(a,[n],!0),c=xe(pe(a,"float32"),l);o([r,c]);let u=Ot(W(c,r));return{value:Se(u,[n]),gradFunc:(h,f)=>{let[m,g]=f,A=el(h.shape,[n]);return[W(G(h,A),xe(pe(m,"float32"),Ts(g))),W(G(h,A),xe(Ts(g),pe(m,"float32")))]}}})(e,t)}function UF(e,t,n,s=0,r=Wn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"onehotLabels","softmaxCrossEntropy"),o=_(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=_(n,"weights","softmaxCrossEntropy")),Mn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let c=Ee(s),u=Ee(1),d=Ee(a.shape[1]);a=le(W(a,xe(u,c)),fe(c,d))}let l=VF(a,o);return Kr(l,i,r)}var GF=V({softmaxCrossEntropy_:UF});function HF(e,t,n,s){let r=_(e,"indices","sparseFillEmptyRows"),a=_(t,"values","sparseFillEmptyRows"),o=_(n,"denseShape","sparseFillEmptyRows"),i=_(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},c=B.runKernel(Ch,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}var jF=V({sparseFillEmptyRows_:HF});function qF(e,t,n){let s=_(e,"inputIndices","sparseReshape"),r=_(t,"inputShape","sparseReshape"),a=_(n,"newShape","sparseReshape");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=B.runKernel(Th,o);return{outputIndices:i[0],outputShape:i[1]}}var XF=V({sparseReshape_:qF});function KF(e,t,n){let s=_(e,"data","sparseSegmentMean"),r=_(t,"indices","sparseSegmentMean"),a=_(n,"segmentIds","sparseSegmentMean");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return B.runKernel(Nh,o)}var ZF=V({sparseSegmentMean_:KF});function YF(e,t,n){let s=_(e,"data","sparseSegmentSum"),r=_(t,"indices","sparseSegmentSum"),a=_(n,"segmentIds","sparseSegmentSum");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return B.runKernel(Eh,o)}var JF=V({sparseSegmentSum_:YF});function QF(e,t,n,s,r,a,o,i){let l=_(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let c=_(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:l,dataSplits:c},p=B.runKernel(Kc,d,u);return{nGrams:p[0],nGramsSplits:p[1]}}var eO=V({stringNGrams_:QF});function tO(e,t,n=!0){let s=_(e,"input","stringSplit","string"),r=_(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=B.runKernel(Rh,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var nO=V({stringSplit_:tO});function sO(e,t){let n=_(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return B.runKernel($h,r,s)}var rO=V({stringToHashBucketFast_:sO}),aO={fft:of,ifft:yd,rfft:lf,irfft:n1},oO={hammingWindow:PP,hannWindow:vv,frame:wv,stft:zP},$e={flipLeftRight:VP,grayscaleToRGB:GP,resizeNearestNeighbor:fF,resizeBilinear:pF,rotateWithOffset:jP,cropAndResize:BP,nonMaxSuppression:XP,nonMaxSuppressionAsync:nF,nonMaxSuppressionWithScore:rF,nonMaxSuppressionWithScoreAsync:oF,nonMaxSuppressionPadded:lF,nonMaxSuppressionPaddedAsync:cF,threshold:AF,transform:xF},Nv={bandPart:vF,gramSchmidt:kF,qr:IF},iO={absoluteDifference:NF,computeWeightedLoss:Kr,cosineDistance:RF,hingeLoss:DF,huberLoss:PF,logLoss:OF,meanSquaredError:zF,sigmoidCrossEntropy:WF,softmaxCrossEntropy:GF},bd={sparseFillEmptyRows:jF,sparseReshape:XF,sparseSegmentMean:ZF,sparseSegmentSum:JF},ff={stringNGrams:eO,stringSplit:nO,stringToHashBucketFast:rO},Zr=class extends d3{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return ae(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return X3(e,t)}dispose(){this.iterations_!=null&&ae(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ee(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Zr,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var mf=class extends Zr{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:q(()=>nt(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:q(()=>nt(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;q(()=>{let c=le(W(i,this.rho),W(yt(o),1-this.rho)),u=W(fe(Dn(le(l,this.epsilon)),Dn(le(i,this.epsilon))),o),d=le(W(l,this.rho),W(yt(u),1-this.rho));i.assign(c),l.assign(d);let p=le(W(u,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ae(this.accumulatedGrads.map(e=>e.variable)),ae(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};mf.className="Adadelta";wo(mf);var gf=class extends Zr{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n];if(this.accumulatedGrads[s]==null){let i=!1;this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:q(()=>ku(r.shape,this.initialAccumulatorValue).variable(i))}}let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;q(()=>{let i=le(o,yt(a));o.assign(i);let l=le(W(fe(a,Dn(le(i,B.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ae(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};gf.className="Adagrad";wo(gf);var Af=class extends Zr{constructor(e,t,n,s=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],q(()=>{this.accBeta1=Ee(t).variable(),this.accBeta2=Ee(n).variable()}),s==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);q(()=>{let n=xe(1,this.accBeta1),s=xe(1,this.accBeta2);t.forEach((r,a)=>{let o=B.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:q(()=>nt(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:q(()=>nt(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=le(W(c,this.beta1),W(l,1-this.beta1)),p=le(W(u,this.beta2),W(yt(l),1-this.beta2)),h=fe(d,n),f=fe(p,s);c.assign(d),u.assign(p);let m=le(W(fe(h,le(Dn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(W(this.accBeta1,this.beta1)),this.accBeta2.assign(W(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ae(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),q(()=>{this.accBeta1.assign(Io(this.beta1,this.iterations_+1)),this.accBeta2.assign(Io(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Af.className="Adam";wo(Af);var yf=class extends Zr{constructor(e,t,n,s=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],q(()=>{this.iteration=Ee(0).variable(),this.accBeta1=Ee(t).variable()}),s==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);q(()=>{let n=xe(1,this.accBeta1),s=fe(-this.learningRate,le(W(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=B.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:nt(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:nt(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=le(W(c,this.beta1),W(l,1-this.beta1)),p=W(u,this.beta2),h=sn(l),f=Xr(p,h);c.assign(d),u.assign(f);let m=le(W(fe(s,n),fe(d,le(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(le(this.iteration,1)),this.accBeta1.assign(W(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ae(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};yf.className="Adamax";wo(yf);var vd=class extends Zr{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=B.registeredVariables[n];q(()=>{let o=le(W(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=fn(Ee(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};vd.className="SGD";wo(vd);var xf=class extends vd{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ee(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n];if(this.accumulations[s]==null){let i=!1;this.accumulations[s]={originalName:`${n}/momentum`,variable:q(()=>nt(r).variable(i))}}let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&q(()=>{let i,l=le(W(this.m,a),o);this.useNesterov?i=le(W(this.c,le(o,W(l,this.m))),r):i=le(W(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ae(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};xf.className="Momentum";wo(xf);var bf=class extends Zr{constructor(e,t=.9,n=0,s=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=B.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:q(()=>nt(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:q(()=>nt(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:q(()=>nt(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;q(()=>{let c=le(W(i,this.decay),W(yt(o),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[s].variable,d=le(W(u,this.decay),W(o,1-this.decay)),p=fe(W(o,this.learningRate),Dn(xe(c,le(yt(d),this.epsilon)))),h=le(W(l,this.momentum),p);i.assign(c),u.assign(d),l.assign(h);let f=xe(r,h);r.assign(f)}else{let u=le(W(i,this.decay),W(yt(o),1-this.decay)),d=le(W(l,this.momentum),fe(W(o,this.learningRate),Dn(le(u,this.epsilon))));i.assign(u),l.assign(d);let p=xe(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ae(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ae(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ae(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};bf.className="RMSProp";wo(bf);var To=class{static sgd(e){return new vd(e)}static momentum(e,t,n=!1){return new xf(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new bf(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Af(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new mf(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new yf(e,t,n,s,r)}static adagrad(e,t=.1){return new gf(e,t)}},tl={sgd:To.sgd,momentum:To.momentum,adadelta:To.adadelta,adagrad:To.adagrad,rmsprop:To.rmsprop,adamax:To.adamax,adam:To.adam},lO=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function Ev(){return new Promise(e=>lO(()=>e()))}var N={};Me(N,{ERF_A1:()=>xO,ERF_A2:()=>bO,ERF_A3:()=>vO,ERF_A4:()=>wO,ERF_A5:()=>kO,ERF_P:()=>yO,PARALLELIZE_THRESHOLD:()=>d1,SELU_SCALE:()=>$v,SELU_SCALEALPHA:()=>Rv,applyActivation:()=>pf,assertAndGetBroadcastShape:()=>At,assertAxesAreInnerMostDims:()=>bD,assertParamsConsistent:()=>uO,assignToTypedArray:()=>EO,axesAreInnerMostDims:()=>V2,calculateShapes:()=>e3,checkEinsumDimSizes:()=>FO,combineLocations:()=>K3,complexWithEvenIndex:()=>CO,complexWithOddIndex:()=>TO,computeConv2DInfo:()=>cd,computeConv3DInfo:()=>C3,computeDefaultPad:()=>E2,computeDilation2DInfo:()=>BR,computeOptimalWindowSize:()=>dO,computeOutAndReduceShapes:()=>Z3,computeOutShape:()=>cO,computePool2DInfo:()=>I3,computePool3DInfo:()=>WR,convertConv2DDataFormat:()=>T3,decodeEinsumEquation:()=>_O,eitherStridesOrDilationsAreOne:()=>Cr,expandShapeToKeepDim:()=>el,exponent:()=>$O,exponents:()=>RO,fromStringArrayToUint8:()=>GO,fromUint8ToStringArray:()=>UO,getAxesPermutation:()=>Y3,getBroadcastDims:()=>Z5,getComplexWithIndex:()=>NO,getEinsumComputePath:()=>OO,getEinsumPermutation:()=>PO,getFusedBiasGradient:()=>df,getFusedDyActivation:()=>cf,getImageCenter:()=>pO,getInnerMostAxes:()=>vD,getPermuted:()=>fO,getReductionAxes:()=>Xt,getReshaped:()=>hO,getReshapedPermuted:()=>mO,getSliceBeginCoords:()=>gO,getSliceSize:()=>AO,getUndoAxesPermutation:()=>U2,isIdentityPermutation:()=>MO,log:()=>fE,mergeRealAndImagArrays:()=>SO,prepareAndValidate:()=>Q5,prepareSplitSize:()=>LO,segment_util:()=>Pv,shouldFuse:()=>hf,slice_util:()=>Ft,splitRealAndImagArrays:()=>IO,tupleValuesAreOne:()=>ko,upcastType:()=>Ln,validateInput:()=>b2,validateUpdateShape:()=>x2,warn:()=>Ao});function uO(e,t){let n=e[0].length;e.forEach((r,a)=>{O(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),O(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)O(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function cO(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var d1=30;function dO(e){return e<=d1?e:eh(e,Math.floor(Math.sqrt(e)))}function pO(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function hO(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function fO(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2==1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function mO(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function gO(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function AO(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var Rv=1.7580993408473768,$v=1.0507009873554805,yO=.3275911,xO=.254829592,bO=-.284496736,vO=1.421413741,wO=-1.453152027,kO=1.061405429;function SO(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function IO(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function CO(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function TO(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function NO(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function EO(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function RO(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function $O(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var p1="->",DO=/->/g,Dv=",",_v="...";function _O(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(DO,"").length)/p1.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${p1}").`);let[s,r]=e.split(p1);O(s.indexOf(_v)===-1,()=>`The ellipsis notation ("${_v}") is not supported yet.`);let a=s.split(Dv),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let p=0;p<r.length;++p){let h=r[p];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let p=0;p<s.length;++p){let h=s[p];i.indexOf(h)===-1&&h!==Dv&&i.push(h)}let l=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let h=0;h<a[p].length;++h)l[p].push(i.indexOf(a[p][h]))}let c=i.length,u=r.length,d=[];for(let p=u;p<c;++p)d.push(p);return{allDims:i,summedDims:d,idDims:l}}function PO(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function FO(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:O(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function OO(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=zO(t,i);for(let c of l)a.indexOf(c)===-1&&(s[o].push(c),a.push(c))}return{path:n,steps:s}}function MO(e){return e.every((t,n)=>t===n)}function zO(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function LO(e,t,n=0){let s=[];if(typeof t=="number")O(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);O(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}O(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}var Pv={};Me(Pv,{collectGatherOpShapeInfo:()=>VO,computeOutShape:()=>WO,segOpComputeOptimalWindowSize:()=>BO});function BO(e,t){let n=!1,s;for(e<=d1?(s=e,n=!0):s=eh(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=eh(e,s+1);return s}function WO(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function VO(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],l=1,c=1,u=1;for(let d=0;d<s;++d)i.push(e.shape[d]),l*=e.shape[d];for(let d=s;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=s;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:i}}function UO(e){try{return e.map(t=>Oh(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function GO(e){return e.map(t=>td(t))}var Xs={};Me(Xs,{nonMaxSuppressionV3Impl:()=>kv,nonMaxSuppressionV4Impl:()=>Sv,nonMaxSuppressionV5Impl:()=>Iv,whereImpl:()=>hv});var Fv={kernelName:ti,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,xd(pe(n,"float32"),-1))}}},HO={kernelName:Vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=yt(pe(n,"float32")),r=Dn(xe(Ee(1),s));return Ot(fe(e,r))}}}},jO={kernelName:Ul,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Dn(xe(yt(pe(n,"float32")),1));return fe(e,s)}}}},qO={kernelName:Vr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=e,l=Xt(n.shape,r);return l.length>0&&(i=Se(i,l)),G(i,n.shape)},b:()=>{let i=e,l=Xt(s.shape,r);return l.length>0&&(i=Se(i,l)),G(i,s.shape)}}}},XO={kernelName:wa,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},KO={kernelName:ka,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>nt(n)}}},ZO={kernelName:jl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>nt(n)}}},YO={kernelName:ql,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,Dn(xe(Ee(1),yt(pe(n,"float32")))))}}},JO={kernelName:Xl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Dn(le(Ee(1),yt(pe(n,"float32"))));return fe(e,s)}}}},QO={kernelName:Yl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=le(yt(n),yt(s)),l=W(e,fe(s,i)),c=Xt(n.shape,r);return c.length>0&&(l=Se(l,c)),G(l,n.shape)},b:()=>{let i=le(yt(n),yt(s)),l=Ot(W(e,fe(n,i))),c=Xt(s.shape,r);return c.length>0&&(l=Se(l,c)),G(l,s.shape)}}}},eM={kernelName:Kl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,le(yt(pe(n,"float32")),1))}}},tM={kernelName:Zl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,xe(Ee(1),yt(pe(n,"float32"))))}}};function nM(e,t,n,s,r,a){let o=_(e,"dy","avgPool3dGrad"),i=_(t,"input","avgPool3dGrad"),l=o,c=i,u=!1;i.rank===4&&(u=!0,l=G(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),O(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),a!=null&&O(pn(r),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let d={dy:l,input:c},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=B.runKernel(sh,d,p);return u?G(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var sM=V({avgPool3dGrad_:nM}),rM={kernelName:Mc,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>sM(e,s,r,a,o,i)}}};function aM(e,t,n,s,r){let a=_(e,"dy","avgPoolGrad"),o=_(t,"input","avgPoolGrad");O(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,c=!1;o.rank===3&&(c=!0,i=G(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=G(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),O(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let u={dy:l,input:i},d={filterSize:n,strides:s,pad:r},p=B.runKernel(nh,u,d);return c?G(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var oM=V({avgPoolGrad_:aM}),iM={kernelName:Sa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>oM(e,s,r,a,o)}}},lM={kernelName:Ia,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>He(e,r,!1,!0),b:()=>He(s,e,!0,!1)}:!a&&o?{a:()=>He(e,r,!1,!1),b:()=>He(e,s,!0,!1)}:a&&!o?{a:()=>He(r,e,!1,!0),b:()=>He(s,e,!1,!1)}:{a:()=>He(r,e,!0,!0),b:()=>He(e,s,!0,!0)}}},uM={kernelName:ni,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>sf(e,s,r)}}},cM={kernelName:m5,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>Se(e,i,!0)}}},dM={kernelName:Ca,gradFunc:e=>({x:()=>e.clone()})},pM={kernelName:Ta,gradFunc:e=>({x:()=>nt(e)})},hM={kernelName:Ur,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Bn(lr(Ji(s,r),Qi(s,a)),e,nt(e))}}},fM={kernelName:Lc,inputsToSave:["x"],gradFunc:Fv.gradFunc},mM={kernelName:si,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=Us(r,t[0].shape)[0],o=s.map(l=>l[a]);return kn(e,o,a).map(l=>()=>l)}},gM={kernelName:Na,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return O(ko(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>P2(s.shape,e,r,o,i,l),filter:()=>u1(s,e,r.shape,o,i,l)}}},AM={kernelName:Ea,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>So(e,r,a,o,i,1,l),filter:()=>u1(e,s,r.shape,a,o,i,l)}}};function yM(e,t,n,s,r){let a=e;e.rank===4&&(a=G(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=G(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),O(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),O(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),O(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),O(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return B.runKernel(ih,i,l)}var xM=V({conv3DBackpropFilter_:yM}),bM={kernelName:Bc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;O(ko(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>O3(o.shape,e,i,r,a),filter:()=>xM(o,e,i.shape,r,a)}}},vM={kernelName:Ra,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(Ot(Q2(pe(n,"float32"))),e)}}},wM={kernelName:$a,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e1(pe(n,"float32")),e)}}},kM={kernelName:ri,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=Y3([r],s.rank),l=z2(e,r,a,!o);return i!=null&&(l=tt(l,i)),l}}}},SM={kernelName:Da,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s==null?[1,1]:s;O(ko(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,c]=t;return O(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),O(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),O(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),O(Cr(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),o!=null&&O(pn(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`),{x:()=>bv(l.shape,e,c,r,a,i,o),filter:()=>xv(l,e,c.shape,r,a,i,o)}}},IM={kernelName:Wc,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>B.runKernel(hh,a,n),filter:()=>B.runKernel(fh,o,n)}}},CM={kernelName:Pa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>B.runKernel(mh,s)}}},TM={kernelName:Jl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=W(Ts(Ot(yt(n))),2/Math.sqrt(Math.PI));return{x:()=>W(e,s)}}},NM={kernelName:Fa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,n)}}},EM={kernelName:li,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>G(e,n.shape)}}},RM={kernelName:ui,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,Ts(n))}}},$M={kernelName:Oa,gradFunc:e=>({x:()=>nt(e)})},DM={kernelName:Ma,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=fe(e,pe(s,"float32")),l=Xt(n.shape,r);return l.length>0?G(Se(i,l),n.shape):i},b:()=>{let i=W(e,pe(n,"float32")),l=Xt(s.shape,r);l.length>0&&(i=G(Se(i,l),s.shape));let c=yt(s);return Ot(fe(i,pe(c,"float32")))}}}},_M={kernelName:za,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i==null?Ee(1):i,c=Xt(a.shape,r.shape),u=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)u.push(r.shape[b]);u.push(1)}let d=xe(r,a),p=W(e,l),h=Y2(le(o,Ee(s))),f=W(W(W(h,h),h),Ee(-.5));return{x:()=>a.rank===1?G(W(W(e,js(G(h,[1,1,1,a.shape[0]]),u)),l),r.shape):G(W(W(e,h),l),r.shape),mean:()=>{let b=W(W(h,Ee(-1)),p);return a.rank===1&&(b=Se(b,c)),G(b,a.shape)},variance:()=>{let b=W(W(f,d),p);return a.rank===1&&(b=Se(b,c)),G(b,a.shape)},scale:()=>{let b=W(d,h),w=W(e,b);return a.rank===1&&(w=Se(w,c)),G(w,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=Se(b,c)),G(b,a.shape)}}}},PM={kernelName:di,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=Us(a,s.shape)[0];return{x:()=>{let l=s.shape,c=r.size,u=l.slice(0,o),d=u.length,p=l.slice(a,l.length).slice(1),h=p.length,f=Ov(0,d),m=Ov(d+1,d+1+h),g=Mv([u,[c],p]),A=G(e,g),x=G(r,[c]),y=Mv([[d],f,m]),b=tt(A,y),w=dv(b,x,s.shape[o]),k=U2(y);return w=tt(w,k),w},indices:()=>r}}};function Ov(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Mv(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var FM={kernelName:La,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>nt(n),b:()=>nt(s)}}},OM={kernelName:Ba,gradFunc:e=>({x:()=>pe(e,"float32")})},MM={kernelName:eu,gradFunc:e=>({x:()=>nt(e)})},zM={kernelName:tu,gradFunc:e=>({x:()=>nt(e)})},LM={kernelName:nu,gradFunc:e=>({x:()=>nt(e)})},BM={kernelName:fi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=hs(s,0);return{x:()=>Bn(a,e,W(e,r))}}},WM={kernelName:su,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,le(n,1))}}},VM={kernelName:Wa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,pe(n,"float32"))}}},UM={kernelName:g5,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let a=!0,o=Ts(s);return xe(e,W(Se(e,r,a),o))}}}};function GM(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return B.runKernel(xh,i,l)}var HM=V({localResponseNormalizationBackprop_:GM}),jM={kernelName:Hc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>HM(s,r,e,a,o,i,l)}}};function zv(e,t,n,s){return t.rank<n.rank&&(t=G(t,el(t.shape,s))),e.rank<n.rank&&(e=G(e,el(e.shape,s))),{x:()=>W(e,pe(Cs(n,t),e.dtype))}}var Lv={kernelName:Va,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=Us(r,a.shape),l=zv(e,o,a,i);return{x:()=>l.x()}}},qM={kernelName:Ua,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>W(e,pe(Ji(n,s),"float32")),b:()=>W(e,pe(B2(n,s),"float32"))}}};function XM(e,t,n,s,r,a,o){let i=_(e,"dy","maxPool3dGrad"),l=_(t,"input","maxPool3dGrad"),c=_(n,"output","maxPool3dGrad"),u=i,d=l,p=c,h=!1;l.rank===4&&(h=!0,u=G(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=G(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=G(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),O(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),O(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),O(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),o!=null&&O(pn(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let f={dy:u,input:d,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=B.runKernel(vh,f,m);return h?G(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var KM=V({maxPool3dGrad_:XM}),ZM={kernelName:jc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>KM(e,s,r,a,o,i,l)}}};function YM(e,t,n,s,r,a,o){let i=_(e,"dy","maxPoolGrad"),l=_(t,"input","maxPoolGrad"),c=_(n,"output","maxPoolGrad");O(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),O(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),O(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),o!=null&&O(pn(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);let u={dy:i,input:l,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return B.runKernel(bh,u,d)}var JM=V({maxPoolGrad_:YM}),QM={kernelName:Ga,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>JM(e,s,r,a,o,i)}}},ez={kernelName:Ha,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=Us(r,s.shape),i=Z3(s.shape,a)[1],l=Ut(i);return{x:()=>{let u=s.shape.slice();a.forEach(h=>{u[h]=1});let d=G(e,u);return fe(W(d,fs(s.shape,"float32")),l)}}}},tz={kernelName:ja,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=Us(r,a.shape),l=zv(e,o,a,i);return{x:()=>l.x()}}},nz={kernelName:qa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>W(e,pe(Qi(n,s),"float32")),b:()=>W(e,pe(hs(n,s),"float32"))}}},sz={kernelName:Xa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>_e(e,a,s.shape)}}},rz={kernelName:au,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=Xt(n.shape,r);return i.length>0?G(Se(e,i),n.shape):e},b:()=>{let i=W(e,Ot(fd(fe(n,s)))),l=Xt(s.shape,r);return l.length>0?G(Se(i,l),s.shape):i}}}},az={kernelName:Ka,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=W(e,pe(s,"float32")),l=Xt(n.shape,r);return l.length>0?G(Se(i,l),n.shape):i},b:()=>{let i=W(e,pe(n,"float32")),l=Xt(s.shape,r);return l.length>0?G(Se(i,l),s.shape):i}}}},oz={kernelName:yi,gradFunc:e=>({x:()=>Ot(e)})},iz={kernelName:ki,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Ht(n.shape,"float32")}}},lz={kernelName:wi,gradFunc:e=>({x:()=>nt(e)})},uz={kernelName:Si,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return ss(e,s).map(a=>()=>a)}},Bv={kernelName:Za,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>_e(e,a,s.shape)}}},cz={kernelName:Ya,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=At(a.shape,o.shape);return{a:()=>{let u=pe(o,"float32"),d=W(e,W(u,Io(a,xe(u,Ee(1))))),p=Xt(a.shape,i);return p.length>0&&(d=Se(d,p)),G(d,a.shape)},b:()=>{let u=hs(a,0),d=Bn(u,Ns(a),nt(a)),p=W(e,W(r,d)),h=Xt(o.shape,i);return h.length>0&&(p=Se(p,h)),G(p,o.shape)}}}},dz={kernelName:Ja,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=hs(n,0);return{x:()=>Bn(r,e,W(e,s)),alpha:()=>{let a=Bn(r,nt(e),W(e,n)),o=Xt(s.shape,e.shape);return o.length>0&&(a=Se(a,o)),G(a,s.shape)}}}},pz={kernelName:_a,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=fe(e,pe(s,"float32")),l=Xt(n.shape,r);return l.length>0?G(Se(i,l),n.shape):i},b:()=>{let i=W(e,pe(n,"float32")),l=Xt(s.shape,r);l.length>0&&(i=G(Se(i,l),s.shape));let c=yt(s);return Ot(fe(i,pe(c,"float32")))}}}},hz={kernelName:lu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,Ot(yt(n)))}}},fz={kernelName:to,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=W(Qi(n,6),xd(n));return{x:()=>W(e,pe(s,"float32"))}}},mz={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,pe(xd(n),"float32"))}}},gz={kernelName:Ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>G(e,n.shape)}}},Az={kernelName:eo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>B.runKernel(Ih,r,n)}}},yz={kernelName:uu,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>B.runKernel(Sh,r,n)}}},xz={kernelName:Ti,gradFunc:(e,t,n)=>{let{dims:s}=n,r=Us(s,e.shape);return{x:()=>Rs(e,r)}}},bz={kernelName:Ni,gradFunc:e=>({x:()=>nt(e)})},vz={kernelName:no,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ot(fe(e,W(Io(n,1.5),2)))}}},wz={kernelName:Ri,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>pe(nt(n),"float32"),t:()=>W(e,pe(n,e.dtype)),e:()=>W(e,pe(Qh(n),e.dtype))}}},kz={kernelName:cu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=hs(n,Ee(0)),r=Ee(Rv),a=Ee($v),o=W(e,a),i=W(W(e,r),Ts(pe(n,"float32")));return Bn(s,o,i)}}}},Sz={kernelName:ro,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,W(n,xe(Ee(1),n)))}}},Iz={kernelName:du,gradFunc:e=>({x:()=>nt(e)})},Cz={kernelName:so,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(Xh(pe(n,"float32")),e)}}},Tz={kernelName:Di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(M2(pe(n,"float32")),e)}}},Nz={kernelName:$i,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=u3(s,r,a),c=[];for(let u=0;u<e.rank;u++)c.push([i[u],o[u]-i[u]-l[u]]);return{x:()=>qs(e,c)}}},Ez={kernelName:io,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=W(e,s);return{logits:()=>xe(o,W(Se(o,[r],a),s))}}},Rz={kernelName:pu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,ds(n))}}},Wv={kernelName:_i,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>qh(e,s,r)}}},Vv={kernelName:Pi,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>kt(e,s)}}},$z={kernelName:ao,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,W(Dn(pe(n,"float32")),2))}}},Dz={kernelName:hu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(e,W(pe(n,"float32"),2))}}},_z={kernelName:lo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ee(2);return{a:()=>W(e,W(r,xe(n,s))),b:()=>W(e,W(r,xe(s,n)))}}},Pz={kernelName:ho,gradFunc:e=>({x:()=>nt(e)})},Fz={kernelName:uo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=e,l=Xt(n.shape,r);return l.length>0&&(i=Se(i,l)),G(i,n.shape)},b:()=>{let i=e,l=Xt(s.shape,r);return l.length>0&&(i=Se(i,l)),G(Ot(i),s.shape)}}}},Oz={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;Us(a,s.shape).forEach(c=>{r[c]=1});let i=G(e,r),l=W(i,fs(s.shape,"float32"));return{x:()=>l}}},Mz={kernelName:Oi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,yt(Xh(n)))}}},zz={kernelName:co,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>W(xe(Ee(1),yt(n)),e)}}},Lz={kernelName:Gr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=nt(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=le(o,_e(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=le(o,_e(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)o=le(o,_e(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)o=le(o,_e(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},Bz={kernelName:po,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=U2(r);return{x:()=>tt(e,a)}}},Wz={kernelName:Li,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>_n(e,r)}}},Vz={kernelName:Zc,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Uz(e,n)}}};function Uz(e,t){let n=Xr(t,nt(t)),s=Su(e,n),r=Ji(t,Ee(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=mn(r,i+1);r=lr(r,fs(s.shape,"bool"));let o=nt(s);return Bn(r,s,o)}var Gz={kernelName:Bi,gradFunc:e=>({x:()=>nt(e)})},Hz=[Fv,HO,jO,qO,XO,KO,ZO,YO,JO,QO,eM,tM,rM,iM,lM,uM,cM,dM,pM,hM,fM,mM,AM,gM,bM,vM,wM,kM,SM,IM,pz,CM,TM,NM,EM,RM,DM,$M,_M,PM,FM,OM,MM,zM,LM,BM,WM,VM,UM,jM,Lv,Lv,qM,ZM,QM,ez,tz,nz,sz,rz,az,oz,iz,lz,uz,Bv,Bv,cz,dz,hz,fz,mz,gz,Az,yz,xz,bz,vz,wz,kz,Sz,Iz,Cz,Tz,Nz,Ez,Rz,Wv,Wv,Vv,Vv,$z,_z,Dz,Pz,Fz,Oz,Mz,zz,Lz,Bz,Wz,Vz,Gz];for(let e of Hz)A5(e);var Uv={};Me(Uv,{maxNorm:()=>Kz,minMaxNorm:()=>Jz,nonNeg:()=>Yz,unitNorm:()=>Zz});var h1;function rn(){return h1==null&&(h1=Ir().epsilon()),h1}function cr(){return"channelsLast"}var Yr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Yr.prototype)}},dr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,dr.prototype)}},H=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,H.prototype)}},We=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,We.prototype)}},Gv=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Gv.prototype)}};function nl(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Er(e,t){if(!e)throw new Gv(t)}function Hv(e,t){let n=0;for(let s of e)s===t&&n++;return n}function rs(e){return e.length===1?e[0]:e}function It(e){return Array.isArray(e)?e:[e]}function Jr(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function sl(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Ks={};function f1(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function m1(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>m1(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:m1(s))}}}function wd(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in Ks)o=Ks[a];else if(o=t[a],o==null)throw new H(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new H(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in Ks?[i,l]=Ks.className:o in t&&([i,l]=t[o]),i==null)throw new H(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let h of Object.keys(Ks))c[h]=Ks[h];for(let h of Object.keys(n))c[h]=n[h];let u=a.config;u.customObjects=c;let d={...Ks};for(let h of Object.keys(n))Ks[h]=n[h];m1(a.config);let p=l(i,a.config,n,r);return Ks={...d},p}else{let c={...Ks};for(let d of Object.keys(n))Ks[d]=n[d];let u=new i(a.config);return Ks={...c},u}}}function jz(e,t){return e<t?-1:e>t?1:0}function vf(e,t){return-1*jz(e,t)}function No(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function qz(e){if(e==null)throw new H(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function rl(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new H(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function g1(e,t,n=0,s=1/0){return Er(n>=0),Er(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function gn(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>gn(n,`element ${s+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${jv(e)}.`)}function jv(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>jv(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function Xz(e,t,n){let s=n!=null?n():v.now(),r;return(...o)=>{let i=n!=null?n():v.now();return i-s<t||(s=i,r=e(...o)),r}}function qv(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function A1(e,t){return q(()=>Dn(Se(W(e,e),t,!0)))}var kd=class extends ue.Serializable{getConfig(){return{}}},y1=class extends kd{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return q(()=>{let t=A1(e,this.axis),n=ps(t,0,this.maxValue);return W(e,fe(n,le(rn(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};y1.className="MaxNorm";ue.registerClass(y1);var x1=class extends kd{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return q(()=>fe(e,le(rn(),A1(e,this.axis))))}getConfig(){return{axis:this.axis}}};x1.className="UnitNorm";ue.registerClass(x1);var b1=class extends kd{apply(e){return Nr(e)}};b1.className="NonNeg";ue.registerClass(b1);var v1=class extends kd{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return q(()=>{let t=A1(e,this.axis),n=le(W(this.rate,ps(t,this.minValue,this.maxValue)),W(1-this.rate,t));return W(e,fe(n,le(rn(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};v1.className="MinMaxNorm";ue.registerClass(v1);var Xv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function an(e){return f1(e)}function Kv(e,t={}){return wd(e,ue.SerializationMap.getMap().classNameMap,t,"constraint")}function on(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Xv?Xv[e]:e,config:{}};return Kv(n)}else return e instanceof kd?e:Kv(e)}function Kz(e){return new y1(e)}function Zz(e){return new x1(e)}function Yz(){return new b1}function Jz(e){return new v1(e)}var Zv={};Me(Zv,{constant:()=>vL,glorotNormal:()=>NL,glorotUniform:()=>TL,heNormal:()=>EL,heUniform:()=>RL,identity:()=>IL,leCunNormal:()=>$L,leCunUniform:()=>DL,ones:()=>bL,orthogonal:()=>_L,randomNormal:()=>kL,randomUniform:()=>wL,truncatedNormal:()=>SL,varianceScaling:()=>CL,zeros:()=>xL});var Qz=["channelsFirst","channelsLast"],eL=["nearest","bilinear"],tL=["valid","same","causal"],nL=["max","avg"],sL=["sum","mul","concat","ave"],Du=new Map;function jt(e){rl(Qz,"DataFormat",e)}function rL(e){rl(eL,"InterpolationFormat",e)}function $s(e){rl(tL,"PaddingMode",e)}function Yv(e){rl(nL,"PoolMode",e)}var Sd=[],Jv="/";function al(e,t){Sd.push(e);try{let n=t();return Sd.pop(),n}catch(n){throw Sd.pop(),n}}function aL(){return Sd.length===0?"":Sd.join(Jv)+Jv}function Qv(e){if(!tw(e))throw new Error("Not a valid tensor name: '"+e+"'");return aL()+e}function ew(e){if(!tw(e))throw new Error("Not a valid tensor name: '"+e+"'");Du.has(e)||Du.set(e,0);let t=Du.get(e);if(Du.set(e,Du.get(e)+1),t>0){let n=`${e}_${t}`;return Du.set(n,1),n}else return e}var oL=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tw(e){return!!e.match(oL)}function iL(e){return e===parseInt(e.toString(),10)}function Eo(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function _u(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function Ro(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function pr(e,t){if(t<e)throw new H(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}function wf(e,t){return pe(e,t)}function Id(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),G(e,n)}function lL(e,t){return q(()=>{if(e.shape.length!==2)throw new H(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Id(e,1);return S1(n,[1,t,1])})}function uL(e){let t=[Eo(e.shape)];return G(e,t)}function cL(e){if(e.rank<=1)throw new H(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Eo(e.shape,1)];return G(e,t)}function ol(e,t,n){return q(()=>{switch(e.rank){case 1:return af(e,t,n);case 2:return t1(e,[t,0],[n,e.shape[1]]);case 3:return Eu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Ad(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return _e(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return _e(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new H(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function w1(e,t,n){return q(()=>{switch(e.rank){case 1:return af(e,t,n);case 2:return t1(e,[0,t],[e.shape[0],n]);case 3:return Eu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Ad(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function kf(e,t,n,s){return q(()=>{switch(e.rank){case 1:return af(e,t,n);case 2:switch(s){case 1:return ol(e,t,n);case 2:return w1(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ol(e,t,n);case 2:return Eu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return w1(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ol(e,t,n);case 2:return Ad(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Ad(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return w1(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function k1(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),kt(e,t)}function nw(e,t){switch(e.rank){case 1:return _3([e,t]);case 2:return wu([e,t],0);case 3:return P3([e,t],0);case 4:return F3([e,t],0);default:throw new H(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function S1(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new H(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return js(e,t)}function Sf(e,t=0,n=1,s,r){return sv(e,t,n,s,r)}function Rr(e,t,n,s){if(e.rank<2||t.rank<2)throw new We(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new We(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let r=!1,a=!1;return Co.matMul({a:e,b:t,transposeA:r,transposeB:a,bias:s?I1(e.rank,s,cr()):null,activation:n})}else{let r=e.shape.slice(),a=r.pop();e=G(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),c=[...o,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=G(tt(t,u),[l,-1]);let d=[...r,...c],p=!1,h=!1;return G(Co.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:s?I1(e.rank,s,cr()):null,activation:n}),d)}}function sw(e,t,n){return q(()=>(Array.isArray(t)?t=Kt(t,"int32"):t=pe(t,"int32"),Su(e,t,n)))}function Cd(e){return W(e,e)}function I1(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new H(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?G(t,[1,s[0],1,1,1]):G(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?G(t,[1,1,1,1,s[0]]):G(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?G(t,[1,s[0],1,1]):G(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?G(t,[1,1,1,s[0]]):G(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?G(t,[1,s[0],1]):G(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?G(t,[1,1,s[0]]):G(t,[1].concat(s))}else if(e<3)return t;throw new H(`Unsupported input rank by biasAdd: ${t.rank}`)}function hr(e,t,n){return q(()=>(n==null&&(n=cr()),jt(n),le(e,I1(e.rank,t,n))))}function dL(e,t=1){if(t!==1)throw new We(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return hd(e)}function pL(e){return q(()=>fe(e,le(sn(e),1)))}function rw(e,t,n,s){return q(()=>Av(e,t,n,s))}function hL(e){return q(()=>{let t=le(.5,W(.2,e));return ps(t,0,1)})}function Td(e,t,n=!1){return n?e():t()}var fL=["fanIn","fanOut","fanAvg"],mL=["normal","uniform","truncatedNormal"];function gL(e){rl(fL,"FanMode",e)}function AL(e){rl(mL,"Distribution",e)}var Zs=class extends ue.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},C1=class extends Zs{apply(e,t){return Ht(e,t)}};C1.className="Zeros";ue.registerClass(C1);var If=class extends Zs{apply(e,t){return fs(e,t)}};If.className="Ones";ue.registerClass(If);var T1=class extends Zs{constructor(e){super();if(typeof e!="object")throw new H(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new H(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return q(()=>W(Ee(this.value),fs(e,t)))}getConfig(){return{value:this.value}}};T1.className="Constant";ue.registerClass(T1);var N1=class extends Zs{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Tu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};N1.className="RandomUniform";ue.registerClass(N1);var E1=class extends Zs{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new We(`randomNormal does not support dType ${t}.`);return Sf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};E1.className="RandomNormal";ue.registerClass(E1);var R1=class extends Zs{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new We(`truncatedNormal does not support dType ${t}.`);return uf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};R1.className="TruncatedNormal";ue.registerClass(R1);var $1=class extends Zs{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return q(()=>{if(e.length!==2||e[0]!==e[1])throw new H("Identity matrix initializer can only be used for 2D square matrices.");return W(this.gain,L2(e[0]))})}getConfig(){return{gain:this.gain}}};$1.className="Identity";ue.registerClass($1);function yL(e,t="channelsLast"){let n,s;if(jt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=Eo(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=Eo(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=Eo(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var as=class extends Zs{constructor(e){super();if(e.scale<0)throw new H(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,gL(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,AL(this.distribution),this.seed=e.seed}apply(e,t){let n=yL(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new We(`${this.getClassName()} does not support dType ${t}.`);return uf(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return Tu(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};as.className="VarianceScaling";ue.registerClass(as);var Cf=class extends as{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return as.className}};Cf.className="GlorotUniform";ue.registerClass(Cf);var Tf=class extends as{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return as.className}};Tf.className="GlorotNormal";ue.registerClass(Tf);var Nf=class extends as{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return as.className}};Nf.className="HeNormal";ue.registerClass(Nf);var Ef=class extends as{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return as.className}};Ef.className="HeUniform";ue.registerClass(Ef);var Rf=class extends as{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return as.className}};Rf.className="LeCunNormal";ue.registerClass(Rf);var $f=class extends as{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return as.className}};$f.className="LeCunNormal";ue.registerClass($f);var D1=class extends Zs{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new We("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return q(()=>{if(e.length<2)throw new We("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=Sf(n,0,1,"float32"),r=Nv.gramSchmidt(s);return e[0]>e[1]&&(r=tt(r)),W(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};D1.className="Orthogonal";ue.registerClass(D1);var aw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ow(e,t={}){return wd(e,ue.SerializationMap.getMap().classNameMap,t,"initializer")}function Mt(e){return f1(e)}function Et(e){if(typeof e=="string"){let t=e in aw?aw[e]:e;if(t==="GlorotNormal")return new Tf;if(t==="GlorotUniform")return new Cf;if(t==="HeNormal")return new Nf;if(t==="HeUniform")return new Ef;if(t==="LeCunNormal")return new Rf;if(t==="LeCunUniform")return new $f;{let n={};return n.className=t,n.config={},ow(n)}}else return e instanceof Zs?e:ow(e)}function xL(){return new C1}function bL(){return new If}function vL(e){return new T1(e)}function wL(e){return new N1(e)}function kL(e){return new E1(e)}function SL(e){return new R1(e)}function IL(e){return new $1(e)}function CL(e){return new as(e)}function TL(e){return new Cf(e)}function NL(e){return new Tf(e)}function EL(e){return new Nf(e)}function RL(e){return new Ef(e)}function $L(e){return new Rf(e)}function DL(e){return new $f(e)}function _L(e){return new D1(e)}var iw={};Me(iw,{Layer:()=>st,RNN:()=>ea,RNNCell:()=>Pd,activation:()=>fW,add:()=>kW,alphaDropout:()=>oV,average:()=>SW,averagePooling1d:()=>QA,averagePooling2d:()=>ey,averagePooling3d:()=>ty,avgPool1d:()=>_W,avgPool2d:()=>FW,avgPool3d:()=>MW,avgPooling1d:()=>PW,avgPooling2d:()=>OW,avgPooling3d:()=>zW,batchNormalization:()=>RW,bidirectional:()=>JW,concatenate:()=>IW,conv1d:()=>aW,conv2d:()=>oW,conv2dTranspose:()=>iW,conv3d:()=>lW,conv3dTranspose:()=>uW,convLstm2d:()=>XW,convLstm2dCell:()=>KW,cropping2D:()=>dW,dense:()=>mW,depthwiseConv2d:()=>hW,dot:()=>EW,dropout:()=>gW,elu:()=>QB,embedding:()=>wW,flatten:()=>yW,gaussianDropout:()=>aV,gaussianNoise:()=>rV,globalAveragePooling1d:()=>LW,globalAveragePooling2d:()=>BW,globalMaxPool1d:()=>eV,globalMaxPool2d:()=>tV,globalMaxPooling1d:()=>bk,globalMaxPooling2d:()=>vk,gru:()=>VW,gruCell:()=>UW,input:()=>Bw,inputLayer:()=>JB,layerNormalization:()=>$W,leakyReLU:()=>tW,lstm:()=>GW,lstmCell:()=>HW,masking:()=>iV,maxPool1d:()=>nV,maxPool2d:()=>sV,maxPooling1d:()=>wk,maxPooling2d:()=>kk,maxPooling3d:()=>WW,maximum:()=>CW,minimum:()=>TW,multiply:()=>NW,permute:()=>vW,prelu:()=>nW,reLU:()=>eW,repeatVector:()=>xW,reshape:()=>bW,rnn:()=>ZW,separableConv2d:()=>cW,simpleRNN:()=>jW,simpleRNNCell:()=>qW,softmax:()=>sW,spatialDropout1d:()=>AW,stackedRNNCells:()=>YW,thresholdedReLU:()=>rW,timeDistributed:()=>QW,upSampling2d:()=>pW,zeroPadding2d:()=>DW});var PL=0;function lw(){return PL++}var Df={};function _f(e=""){return e in Df||(Df[e]=0),Df[e]+=1,e+Df[e].toString()}function _1(e){return Array.isArray(e)&&Array.isArray(e[0])}function Pf(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ve(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new H(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ft(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new H(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Ff(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var uw="Variable",cw=class{constructor(e,t="float32",n=uw,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=lw(),n=n==null?uw:n,this.originalName=Qv(n),this.name=ew(this.originalName),this.trainable_=s,this.constraint=r,this.val=pv(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),FL(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function FL(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function P1(e){return e.map(t=>t.read())}function F1(e){e.forEach(t=>{t[0].write(t[1])})}var Zt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},fr=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=lw(),a!=null&&(this.originalName=Qv(a),this.name=ew(this.originalName)),this.rank=t.length}},OL=0,Of=class{constructor(e,t){this.callArgs=t,this.id=OL++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},ML=0,st=class extends ue.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ML++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Jr(n)+"_"+_f(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new dr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new H(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return rs(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return rs(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Yr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Yr(`Layer ${this.name} is not connected, no input to return.`);return rs(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Yr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Yr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return rs(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=It(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=It(this.inputSpec);if(e.length!==t.length)throw new H(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new H(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),c=r.axes[i],u=l>=0?o[l]:o[o.length+l];if(c!=null&&[c,null].indexOf(u)===-1)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=It(e),s=!0;for(let a of n)if(!(a instanceof fr)){s=!1;break}let r=!0;for(let a of n)if(a instanceof fr){r=!1;break}if(s===r)throw new H("Arguments to apply() must be all SymbolicTensors or all Tensors");return al(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of It(e))a.push(o.shape);this.build(rs(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=It(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=rs(i),this.activityRegularizer!=null)throw new We("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=zL(e),o=this.computeOutputShape(a),i,l=LL(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((c,u)=>new fr(l,c,this,It(e),t,this.name,u)):i=new fr(l,o,this,It(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new We("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Yr(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Yr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new dr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ff(this.weights)}build(e){this.built=!0}getWeights(e=!1){return P1(e?this.trainableWeights:this.weights)}setWeights(e){q(()=>{let t=this.weights;if(t.length!==e.length)throw new H(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=P1(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!v.arraysEqual(a.shape,i.shape))throw new H(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}F1(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new H(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():Et("zeros"));let l=s.apply(t,n),c=new cw(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=It(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=It(e);t=It(t),n=It(n),s=It(s),r=Pf(r),a=Pf(a);let l=[],c=[],u=[];for(let d of i)l.push(d.sourceLayer),c.push(d.nodeIndex),u.push(d.tensorIndex);new Of({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function zL(e){e=It(e);let t=[];for(let n of e)t.push(n.shape);return rs(t)}function LL(e){return"float32"}function dw(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],c=dw(o,i,l);for(let u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}var Pu=class extends st{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:_f("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new H("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new H("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new H("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new fr(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Of({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new H(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Pu.className="InputLayer";ue.registerClass(Pu);function pw(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new H("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Pu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function $o(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];ae(s)}}function hw(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var fw;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(fw||(fw={}));var BL=125,Fu=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},mw=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},WL=class extends Fu{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=q(()=>le(this.totals[s],W(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:q(()=>{let s=W(fe(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),fn(t[n])}))}},gw=class extends Fu{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},Aw=class extends Fu{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ev,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=BL),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=Xz(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await $o(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await $o(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await $o(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await $o(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await $o(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await $o(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await $o(e),await this.trainEnd(e))}};function yw(e,t){return e==null&&(e={}),e instanceof Fu?[e]:Array.isArray(e)&&e[0]instanceof Fu?e:It(e).map(s=>new Aw(s,t))}var $r=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),$r.checkForDuplicate(t),$r.constructors[e]==null&&($r.constructors[e]=[]),$r.constructors[e].push(t)}static checkForDuplicate(e){for(let t in $r.constructors)$r.constructors[+t].forEach(s=>{if(s===e)throw new H("Duplicate callback constructor.")})}static clear(){$r.constructors={}}static createCallbacks(e){let t=[];for(let n in $r.constructors){let s=+n;e>=s&&t.push(...$r.constructors[s])}return t.map(n=>new n)}},O1=$r;O1.constructors={};function xw(e,t,n,s,r,a,o,i,l){let c=new gw,u=[new WL,...O1.createCallbacks(t)];e!=null&&u.push(...e),u.push(c);let d=new mw(u);return d.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:d,history:c}}function mr(e,t={},n=!1){return wd(e,ue.SerializationMap.getMap().classNameMap,t,"layer",n)}function Mf(e,t){return q(()=>{e.dtype!=="float32"&&(e=pe(e,"float32"));let n=Se(Cd(e),t,!0),s=ku(n.shape,rn()),r=Dn(Xr(n,s));return fe(e,r)})}function il(e,t){return q(()=>Wt(Cd(xe(t,e)),-1))}function zf(e,t){return q(()=>Wt(sn(xe(t,e)),-1))}function Ou(e,t){return q(()=>{let n=xe(e,t),s=ps(sn(e),rn(),Number.MAX_VALUE),r=sn(fe(n,s));return W(100,Wt(r,-1))})}function VL(e,t){return q(()=>{let n=ps(t,rn(),Number.MAX_VALUE),s=Ns(le(1,n)),r=ps(e,rn(),Number.MAX_VALUE),a=Ns(le(1,r));return Wt(Cd(xe(s,a)),-1)})}function UL(e,t){return q(()=>{let n=Xr(0,xe(1,W(e,t)));return Wt(Cd(n),-1)})}function GL(e,t){return q(()=>{let n=Xr(0,xe(1,W(e,t)));return Wt(n,-1)})}function HL(e,t){return q(()=>{let n=Se(W(e,t),-1),s=ns(W(xe(1,e),t),-1);return Xr(0,le(1,xe(s,n)))})}function jL(e,t){return q(()=>{let n=Math.log(2),s=xe(t,e),r=xe(le(s,Iu(W(-2,s))),n);return Wt(r,-1)})}function Nd(e,t,n=!1){return q(()=>{if(n)t=Ru(t);else{let s=Se(t,t.shape.length-1,!0);t=fe(t,s)}return t=ps(t,rn(),1-rn()),Ot(Se(W(pe(e,"float32"),Ns(t)),t.shape.length-1))})}function Lf(e,t,n=!1){return q(()=>{let s=pe(fd(uL(e)),"int32");t=ps(t,rn(),1-rn());let r=t.shape,a=G(ud(s,r[r.length-1]),r);return Nd(a,t,n)})}function qL(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new H(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return q(()=>{let n=Nr(t),s=Ot(sn(t));return le(xe(n,W(t,e)),Yh(Ts(s)))})}function Bf(e,t){return q(()=>{let n;return n=ps(t,rn(),1-rn()),n=Ns(fe(n,xe(1,n))),Wt(qL(e,n),-1)})}function XL(e,t){return q(()=>{let n=ps(e,rn(),1),s=ps(t,rn(),1);return Se(W(e,Ns(fe(n,s))),-1)})}function KL(e,t){return q(()=>{let n=Ns(le(rn(),t));return Wt(xe(t,W(e,n)),-1)})}function M1(e,t){return q(()=>{let n=Mf(e,-1),s=Mf(t,-1),r=W(n,s);return Ot(Se(r,-1))})}var Wf={meanSquaredError:il,meanAbsoluteError:zf,meanAbsolutePercentageError:Ou,meanSquaredLogarithmicError:VL,squaredHinge:UL,hinge:GL,categoricalHinge:HL,logcosh:jL,categoricalCrossentropy:Nd,sparseCategoricalCrossentropy:Lf,binaryCrossentropy:Bf,kullbackLeiblerDivergence:XL,poisson:KL,cosineProximity:M1};function z1(e){if(typeof e=="string"){if(e in Wf)return Wf[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new H(t)}else return e}function L1(e,t){return q(()=>{let n=W(.5,Es(t)),s=wf(hs(t,n),e.dtype);return Wt(Cs(e,s),-1)})}function B1(e,t){return q(()=>wf(Cs(Hs(e,-1),Hs(t,-1)),"float32"))}function bw(e,t){return q(()=>pe(Se(lr(Cs(e,1),Cs(t,1))),"float32"))}function ZL(e,t){return q(()=>pe(Se(lr(Cs(e,1),Cs(t,0))),"float32"))}function YL(e,t){return q(()=>pe(Se(lr(Cs(e,0),Cs(t,1))),"float32"))}function vw(e,t){return q(()=>{let n=bw(e,t),s=YL(e,t),r=le(n,s);return pe(Bn(hs(r,0),fe(n,r),0),"float32")})}function JL(e,t){return q(()=>{let n=bw(e,t),s=ZL(e,t),r=le(n,s);return pe(Bn(hs(r,0),fe(n,r),0),"float32")})}function ww(e,t){return Bf(e,t)}function kw(e,t){return e.rank===t.rank&&(e=ct(e,[e.rank-1])),t=Hs(t,-1),t.dtype!==e.dtype&&(t=pe(t,e.dtype)),pe(Cs(e,t),"float32")}var QL=il,eB=il,tB=zf,nB=zf,sB=Ou,rB=Ou,W1=Nd,aB=M1,Sw=Lf,Vf={binaryAccuracy:L1,categoricalAccuracy:B1,precision:vw,categoricalCrossentropy:W1,sparseCategoricalCrossentropy:Sw,mse:QL,MSE:eB,mae:tB,MAE:nB,mape:sB,MAPE:rB,cosine:aB};function oB(e){if(typeof e=="string"&&e in Vf)return Vf[e];if(typeof e!="string"&&e!=null)return e;throw new H(`Unknown metric ${e}`)}function Uf(e){if(Er(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Wf))if(Wf[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Vf))if(Vf[n]===e){t=n;break}return t!==void 0?t:e.name}}function iB(e){let t={Adagrad:()=>tl.adagrad(.01),Adadelta:()=>tl.adadelta(1,.95,rn()),Adam:()=>tl.adam(.001,.9,.999,rn()),Adamax:()=>tl.adamax(.002,.9,.999,rn(),0),RMSProp:()=>tl.rmsprop(.001,.9,0,rn()),SGD:()=>tl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new H(`Unknown Optimizer ${e}`)}var Iw=1*1024*1024;function Cw(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!V1(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>Iw&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Iw}.`)}}function V1(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!V1(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!V1(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function lB(e,t,n,s=console.log){let r=cB(e),a=["Layer (type)","Output shape","Param #"];r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let o;if(!r){a.push("Receives inputs"),o=[];for(let u in e.nodesByDepth)o.push(...e.nodesByDepth[u])}s("_".repeat(t)),Gf(a,n,s),s("=".repeat(t));let i=e.layers;for(let u=0;u<i.length;++u)r?dB(i[u],n,s):pB(i[u],n,o,s),s((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=uB(e),c=Ff(e.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function uB(e){let t;return e.collectedTrainableWeights!=null?t=Ff(e.collectedTrainableWeights):t=Ff(e.trainableWeights),t}function cB(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Gf(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function dB(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(i){s="multiple"}let r=e.name,a=e.getClassName(),o=[`${r} (${a})`,s,e.countParams().toString()];Gf(o,t,n)}function pB(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}let a=[];for(let u of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(u)===-1))for(let d=0;d<u.inboundLayers.length;++d){let p=u.inboundLayers[d].name,h=u.nodeIndices[d],f=u.tensorIndices[d];a.push(`${p}[${h}][${f}]`)}let o=e.name,i=e.getClassName(),l=a.length===0?"":a[0],c=[`${o} (${i})`,r,e.countParams().toString(),l];Gf(c,t,s);for(let u=1;u<a.length;++u)Gf(["","","",a[u]],t,s)}function Tw(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Ed(e,t){if(e===null)return null;if(typeof e=="string")return sl(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];Tw(t,r,a)?n.push(a):n.push(Ed(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=sl(s);n[a]=Ed(r,a)}}return n}}function U1(e,t){if(e==null)return null;if(typeof e=="string")return Jr(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];Tw(t,r,a)?n.push(a):n.push(U1(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=Jr(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=U1(r,s)}return n}}var G1="0.0.0";function hB(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return pe(t,e.dtype)}catch(n){throw new H(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var ll=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ll)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=hB(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new H(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof fr){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof fr){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ae(this.id2Mask)}},H1={},Nw={};function Rd(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],c=t.names();for(let f of i)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let u=i.join(",")+"|"+t.names().join(","),d,p;if(H1[u]==null){let f=fB(o,t);d=f.sorted,p=f.recipientCounts,H1[u]=d,Nw[u]=p}d=H1[u],p={},r||Object.assign(p,Nw[u]);let h=new ll(t);for(let f=0;f<d.length;++f){if(s!=null){let R=Wh().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}let m=d[f],g=m.sourceLayer;if(g instanceof Pu)continue;let A=[],x=[],y=[],b=!1;for(let R of m.inputs){let F=h.getValue(R),D=h.getMask(R);A.push(F),x.push(D),D!=null&&(b=!0),r||(p[R.name]--,p[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!F.isDisposed&&R.sourceLayer.stateful!==!0&&y.push(F))}b&&(n=n||{},n.mask=x[0]);let w=It(g.apply(A,n)),k=null;g.supportsMasking&&(k=g.computeMask(A,x));let C=gB(m),E=Array.isArray(C)?C:[C];for(let R=0;R<E.length;++R){h.hasKey(E[R])||h.add(E[R],w[R],Array.isArray(k)?k[0]:k);let F=i.indexOf(E[R].name);F!==-1&&(l[F]=w[R])}r||ae(y)}return h.disposeMasks(),a?l:l[0]}function fB(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=Ew(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=Ew(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(c=>s[l].add(c))}}return{sorted:n,recipientCounts:mB(s)}}function mB(e){let t={};for(let n in e)t[n]=e[n].size;return t}function Ew(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!n.has(c.name)&&a.push(c)}}return{sorted:s,recipientMap:r}}function gB(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var Dr=class extends st{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let A=this.getClassName().toLowerCase();this.name=_f(A)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],No(this.inputs).length!==this.inputs.length)throw new H(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(A=>A.name)}`);No(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(A=>A.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let A of this.outputs){let x=A.sourceLayer,y=A.nodeIndex,b=A.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(b)}for(let A of this.inputs){let x=A.sourceLayer,y=A.nodeIndex,b=A.tensorIndex;Er(y===0,"input layer has >1 nodes"),Er(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let A=0;A<this.inputLayers.length;A++){let x=this.inputLayers[A];if(!(x instanceof Pu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${A} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let A of this.outputLayers)this.outputNames.push(A.name);this.internalInputShapes=this.inputs.map(A=>A.shape),this.internalOutputShapes=this.outputs.map(A=>A.shape);let t={},n={},s={},r={},a={},o=[],i=(A,x,y,b,w,k)=>{(b==null||w==null||k==null)&&(b=A.sourceLayer,w=A.nodeIndex,k=A.tensorIndex);let C=b.inboundNodes[w];if(y.indexOf(C)!==-1)throw new dr(`The tensor ${A.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(C)!==-1)return;this.containerNodes.add(Dr.nodeKey(b,w)),b.id in a||(a[b.id]=Object.keys(a).length),y.indexOf(C)===-1&&y.push(C);let E=C.inboundLayers.length;for(let R=0;R<E;R++){let F=C.inputTensors[R],D=C.inboundLayers[R],P=C.nodeIndices[R],T=C.tensorIndices[R];i(F,x,y,D,P,T)}for(x.push(C);y.indexOf(C)>=0;)y.splice(y.indexOf(C),1);o.push(C)},l=[],c=[];for(let A of this.outputs)i(A,l,c);let u=o.slice().reverse();for(let A of u){n[A.id]=A,A.id in t||(t[A.id]=0);let x=t[A.id],y=s[A.outboundLayer.id]==null?0:s[A.outboundLayer.id];x=Math.max(x,y),s[A.outboundLayer.id]=x,r[A.outboundLayer.id]=A.outboundLayer,t[A.id]=x;for(let b=0;b<A.inboundLayers.length;b++){let w=A.inboundLayers[b],k=A.nodeIndices[b],C=w.inboundNodes[k],E=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(x+1,E),n[C.id]=C}}let d={};for(let A in t){let x=t[A];x in d||(d[x]=[]),d[x].push(n[A])}let p={};for(let A in s){let x=s[A];x in p||(p[x]=[]),p[x].push(r[A])}let h=Object.keys(p).map(A=>parseInt(A,10)).sort(vf);this.layers=[];for(let A of h){let x=p[A];x.sort((y,b)=>{let w=a[y.id],k=a[b.id];return w<k?-1:w>k?1:0});for(let y of x)y instanceof Dr&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=p,h=Object.keys(d).map(A=>parseInt(A,10)).sort(vf);let f=this.inputs.slice(),m=[];for(let A of h)for(let x of d[A]){let y=x.outboundLayer;if(y!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new dr(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${y.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(y.name)}}this.nodesByDepth=d;let g=this.layers.map(A=>A.name);for(let A of g){let x=g.filter(y=>y===A).length;if(x!==1)throw new dr(`The name "${A}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Of({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(A=>null),outputMasks:this.outputs.map(A=>null),inputShapes:this.inputs.map(A=>A.shape),outputShapes:this.outputs.map(A=>A.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new H("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new H(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new H(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new H(`${a.length} of ${s} weights are not set: ${a}`)}F1(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${G1}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=U1(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return q(()=>{e=It(e);let n=new ll;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return Rd(this.outputs,n,t)})}computeMask(e,t){return q(()=>{e=It(e);let n;return t==null?n=nl(null,e.length):n=It(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Pf(e);if(t.length!==this.inputLayers.length)throw new H(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],c=i.name+"_0_0";n[c]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(vf);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let c=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;let u=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],A=l.tensorIndices[f],x=`${m.name}_${g}_${A}`,y=n[x];u.push(y)}let d=c.computeOutputShape(rs(u)),p=Pf(d),h=c.inboundNodes.indexOf(l);for(let f=0;f<p.length;f++){let m=`${c.name}_${h}_${f}`;n[m]=p[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],u=`${i.name}_${l}_${c}`;a.push(u)}for(let o=0;o<a.length;o++){let i=a[o];Er(i in n),r.push(n[i])}return rs(r)}runInternalGraph(e,t){t==null&&(t=nl(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],c=e[i],u=t[i];n[l.id]=[c,u]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(vf);for(let i of s){let l=this.nodesByDepth[i];for(let c of l){let u=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,h=new Array;for(let f of d)f.id in n&&h.push(n[f.id]);if(h.length===d.length){let f={},m,g,A,x;if(c.callArgs!=null&&(f=c.callArgs),h.length===1){let[y,b]=h[0];f.mask==null&&(f.mask=b),A=It(u.call(y,f)),x=It(u.computeMask(y,b)),m=[y],g=[b]}else m=h.map(y=>y[0]),g=h.map(y=>y[1]),f.mask==null&&(f.mask=g),A=It(u.call(m,f)),x=It(u.computeMask(m,g));if(u.activityRegularizer)throw new We("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<p.length;++y){let b=p[y],w=A[y],k=x[y];n[b.id]=[w,k]}}}}let r=[],a=[],o=[];for(let i of this.outputs){Er(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,c]=n[i.id];o.push(l.shape),r.push(l),a.push(c)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Dr?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Dr.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new H(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new H("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new H(`No such layer: ${e}`)}calculateLosses(){return q(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Dr.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let u=0;u<a.inboundNodes.length;u++){let d=a.inboundNodes[u],p=Dr.nodeKey(a,u),h={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],A=d.nodeIndices[m],x=d.tensorIndices[m],y=Dr.nodeKey(g,A),b=t[y];b==null&&(b=0),f.push([g.name,b,x,h])}l.push(f)}}}let c={};c.name=a.name,c.className=o,c.config=i,c.inboundNodes=l,n.push(c)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=Dr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.inputLayersTensorIndices[a];s.push([o.name,c,u])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=Dr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.outputLayersTensorIndices[a];r.push([o.name,c,u])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let A=[],x;for(let y of g){let b=y[0],w=y[1],k=y[2];if(x=y[3]==null?{}:y[3],!(b in r)){o(m,g);return}let C=r[b];if(C.inboundNodes.length<=w){o(m,g);return}let E=C.inboundNodes[w];A.push(E.outputTensors[k])}A.length>0&&m.apply(rs(A),x)}function l(m){let g=m.name,A=mr(m,t.customObjects!=null?t.customObjects:{});A.setFastWeightInitDuringBuild(s),r[g]=A,m.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new H(`Corrupted configuration, expected array for nodeData: ${y}`);o(A,y)})}let c=t.name,u=t.layers;for(let m of u)l(m);for(;!qz(a);)for(let m of u){let g=r[m.name];if(g.name in a){let A=a[g.name];delete a[g.name];for(let x of A)i(g,x)}}let d=[],p=[],h=t.inputLayers;for(let m of h){let g=m[0],A=m[1],x=m[2];Er(g in r);let b=r[g].inboundNodes[A].outputTensors;d.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],A=m[1],x=m[2];Er(g in r);let b=r[g].inboundNodes[A].outputTensors;p.push(b[x])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new H("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){q(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function AB(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Rw(e,t){return AB(e,t,"classWeight")}async function $w(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=q(()=>{if(e.shape.length===1)return or(e);if(e.shape.length===2){if(e.shape[1]>1)return Hs(e,1);if(e.shape[1]===1)return G(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());ae(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),Kt(o,"float32")}else return null}function yB(e,t){return W(e,t)}var xB=32;function Dw(e,t){let n,s,r=t;n=r.xs,s=r.ys,v.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=_w("input",e.inputNames,n),o=_w("output",e.outputNames,s),i=a[0].shape[0];v.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)v.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)v.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function _w(e,t,n){if(n instanceof et)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new H(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function bB(e){if(e.length===3)throw new We("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function vB(e,t,n){let s=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(Pw(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=bB(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=yw(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:h}=xw(u,d,n.epochs,null,null,wB(t,n),null,r,c);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await p.onEpochBegin(f);let A=0,x=0;for(s||(m=await t.iterator());s?A<n.batchesPerEpoch:!0;){let y=await m.next();if(s&&y.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${A} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(y.value!=null){let{xs:b,ys:w}=Dw(e,y.value),k={};k.batch=x,k.size=b[0].shape[0],await p.onBatchBegin(x,k);let C=[];if(n.classWeight!=null){let F=Rw(n.classWeight,e.outputNames);for(let D=0;D<F.length;++D)C.push(await $w(w[D],null,F[D]))}let E=b.concat(w).concat(C),R=i(E);ae(E);for(let F=0;F<l.length;++F){let D=l[F],P=R[F];k[D]=P,fn(P)}await p.onBatchEnd(x,k),hw(k),x++,A++}if(s?A>=n.batchesPerEpoch:y.done){if(r){let b;Pw(n.validationData)?b=It(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=It(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?xB:n.validationBatchSize,verbose:0}));for(let w=0;w<e.metricsNames.length;++w)g[`val_${e.metricsNames[w]}`]=b[w]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function wB(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Pw(e){return typeof e.iterator=="function"}function kB(e){return typeof e.next=="function"}async function SB(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new We("Verbose mode is not implemented yet.");v.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=kB(t)?t:await t.iterator(),i=0,l=0;for(;s?l<n.batches:!0;){let c=await o.next();if(a=q(()=>{if(c.value){let{xs:u,ys:d}=Dw(e,c.value),p=u.concat(d),h=q(()=>r(p));if(ae(p),l===0)for(let m=0;m<h.length;++m)a.push(Ee(0));let f=p[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],A=a[m];a[m]=q(()=>le(a[m],W(f,g))),l>0&&ae(A)}ae(h),i+=f,++l}return a}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){let u=a[c];a[c]=fe(a[c],i),ae(u)}return rs(a)}function j1(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function $d(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>ol(s,t,n-t)):ol(e,t,n-t)}function q1(e,t){return q(()=>e==null?null:Array.isArray(e)?e.map(n=>q1(n,t)):sw(e,t.dtype==="int32"?t:pe(t,"int32")))}function X1(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function IB(e,t,n,s,r,a,o,i,l,c,u,d,p,h,f){r==null&&(r=32),a==null&&(a=1),u==null&&(u=!0),p==null&&(p=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new H("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),A;g!=null&&(A=pr(0,g)),o==null&&(o=1);let{callbackList:x,history:y}=xw(i,o,a,p,g,h,r,m,d);x.setModel(e),e.history=y,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=p;b<a;++b){await x.onEpochBegin(b);let w={};if(h!=null)throw new We("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new We("batch shuffling is not implemneted yet");u&&v.shuffle(A);let k=Kt(A),C=X1(g,r);for(let E=0;E<C.length;++E){let R={};if(await x.onBatchBegin(E,R),q(()=>{let F=C[E][0],D=C[E][1],P=ol(k,F,D-F);R.batch=E,R.size=D-F;let T=q1(n,P),M=t(T);for(let U=0;U<s.length;++U){let j=s[U],z=M[U];R[j]=z,fn(z)}if(E===C.length-1&&m){let U=e.testLoop(l,c,r);for(let j=0;j<s.length;++j){let z=s[j],X=U[j];fn(X),w["val_"+z]=X}}}),await x.onBatchEnd(E,R),hw(R),e.stopTraining_)break}k.dispose()}if(await x.onEpochEnd(b,w),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function CB(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,c,u;try{let d=s.batchSize==null?32:s.batchSize;j1(d);let p=!1,h=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,p,d);r=h[0],a=h[1],u=h[2];let f=!1,m;if(s.validationData!=null&&s.validationData.length>0){if(f=!0,s.validationData.length===2)o=s.validationData[0],i=s.validationData[1];else throw s.validationData.length===3?new We("validationData including sample weights is not supported yet."):new H(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let C=!0,E=await e.standardizeUserData(o,i,null,null,C,d);l=E[0],c=E[1],m=l.concat(c)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){f=!0;let C=Math.floor(r[0].shape[0]*(1-s.validationSplit)),E=r[0].shape[0];l=$d(r,C,E),r=$d(r,0,C),c=$d(a,C,E),a=$d(a,0,C),m=l.concat(c)}else s.validationSteps!=null&&(f=!0);let g=r.concat(a).concat(u);e.checkTrainableWeightsConsistency();let A=e.makeTrainFunction(),x=e.getDedupedMetricsNames(),y,b;f?(e.makeTestFunction(),y=e.testFunction,b=x.slice().concat(x.map(C=>"val_"+C))):(y=null,m=[],b=x.slice());let w=yw(s.callbacks,s.yieldEvery);return await IB(e,A,g,x,d,s.epochs,s.verbose,w,y,m,s.shuffle,b,s.initialEpoch,null,null)}finally{e.isTraining=!1,ul(r,t),ul(a,n),ul(l,o),ul(c,i),u!=null&&ae(u)}}function Fw(e){let t=[];e instanceof et&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(Id(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function ul(e,t){if(e==null)return;let n=[];if(t instanceof et)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof et)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function TB(e){return e instanceof et}function K1(e){return Array.isArray(e)}function Ow(e){return!TB(e)&&!K1(e)}function Mw(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(K1(e)&&e.length>0)o=!0;else if(Ow(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new H(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(Ow(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new H(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(K1(e)){if(e=e,e.length!==t.length)throw new H(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new H(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Fw(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new H(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u>=0&&c!==u)throw new H(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function NB(e,t,n){let s=No(e.map(a=>a.shape[0]));s.sort();let r=No(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new H(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new H(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!v.arraysEqual(s,r))throw new H(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function EB(e,t,n){let s=[il,Bf,Nd];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===Nd&&a.shape[a.shape.length-1]===1)throw new H(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),c=i.slice(1);for(let u=0;u<l.length;++u){let d=l[u],p=c[u];if(p!=null&&d!==p)throw new H(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function zw(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new H(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new H(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new H(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u!==c)throw new H(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function RB(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var $B="layers-model",Qr=class extends Dr{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new H("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");lB(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=iB(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Zr))throw new H("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new H(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(z1(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new H(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>z1(o))}else{let a=z1(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],al("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=RB(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};al("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let c="",u,d,p;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===Bf?["accuracy","acc"].indexOf(h)!==-1?d=L1:["crossentropy","ce"].indexOf(h)!==-1&&(d=ww):this.lossFunctions[a]===Lf?["accuracy","acc"].indexOf(h)!==-1?d=kw:["crossentropy","ce"].indexOf(h)!==-1&&(d=Sw):["accuracy","acc"].indexOf(h)!==-1?d=B1:["crossentropy","ce"].indexOf(h)!==-1&&(d=W1);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),p=d,u=c+g}else p=oB(h),u=c+Uf(h);let f;al(u,()=>{f=p}),r(a,u,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;j1(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return rs(l)}finally{ul(a[0],e),ul(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),SB(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new H(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new H(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new H("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new ll;if(e instanceof et&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new H(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new H(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=Rd(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=nl(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new H(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return q(()=>{let s=this.checkNumSamples(e);if(n)throw new We("Verbose predictLoop() is not implemented yet.");let r=X1(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)q(()=>{let l=r[o][0],c=r[o][1],u=$d(e,l,c),d=[];if(Array.isArray(u))for(let h=0;h<u.length;++h)d.push({key:this.inputs[h],value:u[h]});else d.push({key:this.inputs[0],value:u});let p=new ll(d);return Rd(this.outputs,p)}).forEach((l,c)=>a[c].push(l));return rs(a.map(o=>kt(o,0)))})}predict(e,t={}){let n=Fw(e);zw(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return j1(s),this.predictLoop(n,s)}finally{ul(n,e)}}predictOnBatch(e){zw(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new dr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===Lf?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=Mw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Mw(t,this.feedOutputNames,r,!1,"target"),NB(e,t,null),EB(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!=0)throw new H(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let c=Rw(s,this.outputNames);l=[];for(let u=0;u<c.length;++u)l.push(await $w(i[u],null,c[u]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return q(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new We("Verbose mode is not implemented yet.");if(r!=null)throw new We("steps mode in testLoop() is not implemented yet");{let i=X1(a,n),l=Kt(pr(0,a));for(let c=0;c<i.length;++c){let u=i[c][0],d=i[c][1],p=ol(l,u,d-u),h=q1(t,p),f=e(h);if(c===0)for(let m=0;m<f.length;++m)o.push(Ee(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=le(o[m],W(d-u,g))}}for(let c=0;c<o.length;++c)o[c]=fe(o[c],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;Hv(e,s)>1&&(r+=`_${Hv(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let u=[];for(let f=0;f<this.inputs.length;++f)u.push({key:this.inputs[f],value:n[f]});let d=new ll(u),p=Rd(this.outputs,d,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],p[f]);r[f]!=null&&(g=yB(g,r[f]));let A=Wt(g);t.push(A),f===0?h=g:h=le(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],A=this.metricsTensors[f][1];m=Wt(g(s[A],p[A]))}fn(m),a.push(m)}return h=Wt(h),this.calculateLosses().forEach(f=>{h=le(h,f)}),h},i=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>q(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new ll(a),i=Rd(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],u=Wt(c(r[l],i[l]));l===0?n=u:n=le(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],u=this.metricsTensors[l][1],d=Wt(c(r[u],i[u]));t.push(d)}return t})}async fit(e,t,n={}){return CB(this,e,t,n)}async fitDataset(e,t){return vB(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let c=await l.data();i.push(c[0])}return ae(o),rs(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Wh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Wh().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Jr(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Jr(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=Jr(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Jr(Uf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Jr(Uf(e)));{let e={};for(let t in this.metrics)e[t]=Jr(Uf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Ed(e.optimizer_config),n=mr(t),s;if(typeof e.loss=="string")s=sl(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>sl(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=sl(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>sl(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=sl(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=es.getSaveHandlers(e);if(l.length===0)throw new H(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new H(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new H("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await es.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:$B,generatedBy:`TensorFlow.js tfjs-layers v${G1}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:c,specs:u}=await es.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...u),n.data=es.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let l=!0;Cw(this.userDefinedMetadata,this.name,l),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){Cw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Qr.className="Model";ue.registerClass(Qr);var Lw=class extends Qr{};Lw.className="Functional";ue.registerClass(Lw);async function DB(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=Ed(n),r=mr(s,t);if(e.weightsManifest!=null){let a=await es.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),ae(a)}return r}async function _B(e,t){if(t==null&&(t={}),typeof e=="string"){let n=es.getLoadHandlers(e,t);if(n.length===0)n.push(es.browserHTTPRequest(e,t));else if(n.length>1)throw new H(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return PB(e,void 0,t)}async function PB(e,t,n){if(n==null&&(n={}),e.load==null)throw new H("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=mr(Ed(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new H("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:u}=FB(s.weightData,s.weightSpecs);i.loadWeights(c,a),i.optimizer!=null&&u.length>0&&await i.optimizer.setWeights(u),ae(c),ae(u.map(d=>d.tensor))}return i}function FB(e,t){let n=es.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var Z1=class extends Qr{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:_f("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new H(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Z1||e instanceof Qr,n;if(t){if(n=e,n.outputs.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new H("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new H("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=pw({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new H(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=dw(this.outputs[0])}this.inboundNodes=[],new Of({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:nl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(ft(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Qr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new dr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new dr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new dr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new dr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new H("Legacy serialization format not supported yet.");r=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof Z1))throw new We(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let c=mr(i,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new H("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new H("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},Hf=Z1;Hf.className="Sequential";ue.registerClass(Hf);function OB(e){return new Qr(e)}function MB(e){return new Hf(e)}function zB(e,t){return t==null&&(t={}),_B(e,t)}function Bw(e){return pw(e)}function LB(e,t){O1.registerCallbackConstructor(e,t)}var os=class extends ue.Serializable{getConfig(){return{}}},Ww=class extends os{apply(e,t=1){return dL(e,t)}};Ww.className="elu";ue.registerClass(Ww);var Vw=class extends os{apply(e){return J2(e)}};Vw.className="selu";ue.registerClass(Vw);var Uw=class extends os{apply(e){return Nr(e)}};Uw.className="relu";ue.registerClass(Uw);var Gw=class extends os{apply(e){return q(()=>md(6,Nr(e)))}};Gw.className="relu6";ue.registerClass(Gw);var Hw=class extends os{apply(e){return e}};Hw.className="linear";ue.registerClass(Hw);var jw=class extends os{apply(e){return ds(e)}};jw.className="sigmoid";ue.registerClass(jw);var qw=class extends os{apply(e){return hL(e)}};qw.className="hardSigmoid";ue.registerClass(qw);var Xw=class extends os{apply(e){return Iu(e)}};Xw.className="softplus";ue.registerClass(Xw);var Kw=class extends os{apply(e){return pL(e)}};Kw.className="softsign";ue.registerClass(Kw);var Zw=class extends os{apply(e){return bu(e)}};Zw.className="tanh";ue.registerClass(Zw);var Y1=class extends os{apply(e,t=-1){return Ru(e,t)}};Y1.className="softmax";ue.registerClass(Y1);var Yw=class extends os{apply(e,t=-1){return W2(e,t)}};Yw.className="logSoftmax";ue.registerClass(Yw);var Jw=class extends os{apply(e,t=1){return q(()=>W(ds(W(e,t)),e))}};Jw.className="swish";ue.registerClass(Jw);var Qw=class extends os{apply(e){return q(()=>W(e,bu(Iu(e))))}};Qw.className="mish";ue.registerClass(Qw);function Do(e){return e.getClassName()}function J1(e,t={}){return wd(e,ue.SerializationMap.getMap().classNameMap,t,"activation")}function _o(e){if(e==null){let t={};return t.className="linear",t.config={},J1(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},J1(t)}else return e instanceof os?e:J1(e)}function Q1(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var ek=class extends ue.Serializable{},Dd=class extends ek{constructor(e){super();Q1(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return q(()=>{let t=Ht([1]);return this.hasL1&&(t=le(t,Se(W(this.l1,sn(e))))),this.hasL2&&(t=le(t,Se(W(this.l2,Cd(e))))),G(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Dd.className="L1L2";ue.registerClass(Dd);function BB(e){return Q1(e),new Dd({l1:e!=null?e.l1:null,l2:0})}function WB(e){return Q1(e),new Dd({l2:e!=null?e.l2:null,l1:0})}var tk={l1l2:"L1L2"};function xt(e){return f1(e)}function nk(e,t={}){return wd(e,ue.SerializationMap.getMap().classNameMap,t,"regularizer")}function Rt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in tk?tk[e]:e,config:{}};return nk(n)}else return e instanceof ek?e:nk(e)}var eA=class extends st{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ve(e);let n=Nr(e);return this.maxValue!=null&&(n=ps(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};eA.className="ReLU";ue.registerClass(eA);var tA=class extends st{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ve(e);return Zh(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};tA.className="LeakyReLU";ue.registerClass(tA);var nA=class extends st{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Et(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Rt(e.alphaRegularizer),this.alphaConstraint=on(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new H(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=ft(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Zt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ve(e),rf(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Mt(this.alphaInitializer),alphaRegularizer:xt(this.alphaRegularizer),alphaConstraint:an(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};nA.className="PReLU";ue.registerClass(nA);var sA=class extends st{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new We(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ve(e);return hd(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};sA.className="ELU";ue.registerClass(sA);var rA=class extends st{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ve(e);return W(n,pe(hs(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};rA.className="ThresholdedReLU";ue.registerClass(rA);var aA=class extends st{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Y1().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ve(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};aA.className="Softmax";ue.registerClass(aA);function Mu(e,t,n){if(typeof e=="number")return nl(e,t);if(e.length!==t)throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!iL(r))throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function gr(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function _r(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+Ro([n-t,0]);else if(s==="same")e=e*t;else throw new H(`Unsupport padding mode: ${s}.`);return e}function oA(e,t){return q(()=>(jt(t),t==="channelsFirst"?tt(e,[0,2,3,1]):e))}function sk(e,t){return q(()=>(jt(t),t==="channelsFirst"?tt(e,[0,2,3,4,1]):e))}function VB(e,t,n,s=1,r="valid",a,o=1){return q(()=>{if(a==null&&(a=cr()),jt(a),e.shape.length!==3)throw new H(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new H(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new H(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=tt(e,[0,2,1])),r==="causal")throw new We("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=_2(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=hr(i,n)),i})}function rk(e,t,n,s=[1,1],r="valid",a,o,i=null){return q(()=>{if(a==null&&(a=cr()),jt(a),e.rank!==3&&e.rank!==4)throw new H(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new H(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=oA(e,a);if(r==="causal")throw new We("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Co.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=tt(l,[0,3,1,2])),l})}function UB(e,t,n,s=[1,1,1],r="valid",a,o){return q(()=>{if(a==null&&(a=cr()),jt(a),e.rank!==4&&e.rank!==5)throw new H(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new H(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=sk(e,a);if(r==="causal")throw new We("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=O2(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=hr(i,n)),a==="channelsFirst"&&(i=tt(i,[0,4,1,2,3])),i})}var iA=class extends st{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",iA.verifyArgs(t),this.rank=e,gn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new We(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Mu(t.kernelSize,e,"kernelSize"),this.strides=Mu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,$s(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,jt(this.dataFormat),this.activation=_o(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Et(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=on(t.biasConstraint),this.biasRegularizer=Rt(t.biasRegularizer),this.activityRegularizer=Rt(t.activityRegularizer),this.dilationRate=Mu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new H(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new H(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new H(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Er("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!g1(e.kernelSize,"number",1,3))throw new H(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Do(this.activation),useBias:this.useBias,biasInitializer:Mt(this.biasInitializer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),biasConstraint:an(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},_d=class extends iA{constructor(e,t){super(e,t);this.kernel=null,_d.verifyArgs(t),this.filters=t.filters,gn(this.filters,"filters"),this.kernelInitializer=Et(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=on(t.kernelConstraint),this.kernelRegularizer=Rt(t.kernelRegularizer)}build(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return q(()=>{e=Ve(e);let n,s=this.bias==null?null:this.bias.read(),r=qv(this.activation.getClassName());if(r!=null&&this.rank===2)n=rk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=VB(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=rk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=UB(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new We("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=ft(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=gr(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Mt(this.kernelInitializer),kernelRegularizer:xt(this.kernelRegularizer),kernelConstraint:an(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new H(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},ak=class extends _d{constructor(e){super(2,e);ak.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!g1(e.kernelSize,"number",1,2))throw new H(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},jf=ak;jf.className="Conv2D";ue.registerClass(jf);var ok=class extends _d{constructor(e){super(3,e);ok.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new H(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},qf=ok;qf.className="Conv3D";ue.registerClass(qf);var lA=class extends jf{constructor(e){super(e);if(this.inputSpec=[new Zt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ft(e),e.length!==4)throw new H("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Zt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return q(()=>{let n=Ve(e);if(n.shape.length!==4)throw new H(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],c=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=_r(i,d,c,this.padding),f=_r(l,p,u,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=tt(n,[0,2,3,1]));let g=F2(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=tt(g,[0,3,1,2])),this.bias!=null&&(g=hr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=ft(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=_r(t[s],i,a,this.padding),t[r]=_r(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};lA.className="Conv2DTranspose";ue.registerClass(lA);var uA=class extends qf{constructor(e){super(e);if(this.inputSpec=[new Zt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ft(e),e.length!==5)throw new H("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Zt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return q(()=>{let n=Ve(e);if(n.shape.length!==5)throw new H(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],c=s[a],u=s[o],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],A=_r(l,f,d,this.padding),x=_r(c,m,p,this.padding),y=_r(u,g,h,this.padding),b=[r,A,x,y,this.filters];this.dataFormat!=="channelsLast"&&(n=tt(n,[0,2,3,4,1]));let w=M3(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=tt(w,[0,4,1,2,3])),this.bias!==null&&(w=hr(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=ft(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[s]=_r(t[s],c,o,this.padding),t[r]=_r(t[r],u,i,this.padding),t[a]=_r(t[a],d,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};uA.className="Conv3DTranspose";ue.registerClass(uA);var ik=class extends _d{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new H("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new H("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new H(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Et(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Rt(t.depthwiseRegularizer),this.depthwiseConstraint=on(t.depthwiseConstraint),this.pointwiseInitializer=Et(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Rt(t.pointwiseRegularizer),this.pointwiseConstraint=on(t.pointwiseConstraint)}build(e){if(e=ft(e),e.length<this.rank+2)throw new H(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Zt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return q(()=>{e=Ve(e);let n;if(this.rank===1)throw new We("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=tt(e,[0,2,3,1])),n=av(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=hr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=tt(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Mt(this.depthwiseInitializer),e.pointwiseInitializer=Mt(this.pointwiseInitializer),e.depthwiseRegularizer=xt(this.depthwiseRegularizer),e.pointwiseRegularizer=xt(this.pointwiseRegularizer),e.depthwiseConstraint=an(this.depthwiseConstraint),e.pointwiseConstraint=an(this.pointwiseConstraint),e}};ik.className="SeparableConv";var cA=class extends ik{constructor(e){super(2,e)}};cA.className="SeparableConv2D";ue.registerClass(cA);var lk=class extends _d{constructor(e){super(1,e);lk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!g1(e.kernelSize,"number",1,1))throw new H(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},dA=lk;dA.className="Conv1D";ue.registerClass(dA);var pA=class extends st{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return q(()=>{if(e=Ve(e),this.dataFormat==="channelsLast"){let n=kf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return kf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=kf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return kf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};pA.className="Cropping2D";ue.registerClass(pA);var hA=class extends st{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,rL(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return q(()=>{let n=Ve(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=tt(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?$e.resizeNearestNeighbor(n,[r,a]):$e.resizeBilinear(n,[r,a]);return tt(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?$e.resizeNearestNeighbor(n,[r,a]):$e.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};hA.className="UpSampling2D";ue.registerClass(hA);function GB(e,t,n=[1,1],s="valid",r,a){return q(()=>{r==null&&(r=cr()),jt(r);let o=oA(e,r);if(e.rank!==4)throw new H(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new H(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=pd(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=tt(o,[0,3,1,2])),o})}var fA=class extends iA{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Et(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=on(e.depthwiseConstraint),this.depthwiseRegularizer=Rt(e.depthwiseRegularizer)}build(e){if(e=ft(e),e.length<4)throw new H(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return q(()=>{e=Ve(e);let n=GB(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=hr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=gr(t,this.kernelSize[0],this.padding,this.strides[0]),a=gr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Mt(this.depthwiseInitializer),e.depthwiseRegularizer=xt(this.depthwiseRegularizer),e.depthwiseConstraint=an(this.depthwiseRegularizer),e}};fA.className="DepthwiseConv2D";ue.registerClass(fA);function uk(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new H("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function ck(e,t,n,s=!1,r,a,o=!1,i=!1){return q(()=>{let l=t.shape.length;if(l<3)throw new H(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(pr(2,l));if(t=tt(t,c),a!=null)throw new We("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=pe(pe(r,"bool"),"float32"),r.rank===l-1&&(r=mn(r,-1)),r=tt(r,c)),s&&(t=Rs(t,0),r!=null&&(r=Rs(r,0)));let u=[],d,p=n,h=t.shape[0],f=ss(t),m;r!=null&&(m=ss(r));for(let A=0;A<h;++A){let x=f[A],y=q(()=>e(x,p));if(r==null)d=y[0],p=y[1];else{let b=q(()=>{let w=m[A],k=xe(Es(w),w),C=le(W(y[0],w),W(p[0],k)),E=p.map((R,F)=>le(W(y[1][F],w),W(R,k)));return{output:C,newStates:E}});d=b.output,p=b.newStates}i&&u.push(d)}let g;return i&&(g=_n(u,1)),[d,g,p]})}var dk=class extends st{constructor(e){super(e);let t;if(e.cell==null)throw new H("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Zf({cells:e.cell}):t=e.cell,t.stateSize==null)throw new H("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Zt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return pr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){_1(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return q(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new We("Constants support is not implemented in RNN yet.");_1(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Zt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));if(t!=null)throw new We("Constants support is not implemented in RNN yet.");this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new H(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new Zt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){q(()=>{if(!this.stateful)throw new Yr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ht([n,s])):this.states_=[Ht([n,this.cell.stateSize])];else if(e==null)ae(this.states_),this.keptStates!=null&&(ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ht([n,s])):this.states_[0]=Ht([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ae(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!v.arraysEqual(r.shape,o))throw new H(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>fn(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=uk(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Zt({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof fr){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return q(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=Ve(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new H(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=ck((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=l[0],u=l[1],d=l[2];this.stateful&&this.resetStates(d,s);let p=this.returnSequences?u:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return q(()=>{let t=Ht(e.shape);return t=Se(t,[1,2]),t=Id(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?S1(t,[1,n]):t):this.cell.stateSize>1?[S1(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===dk.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=mr(s,n);return new e(Object.assign(t,{cell:r}))}},ea=dk;ea.className="RNN";ue.registerClass(ea);var Pd=class extends st{},Xf=class extends Pd{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gn(this.units,"units"),this.activation=_o(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Et(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Rt(e.kernelRegularizer),this.recurrentRegularizer=Rt(e.recurrentRegularizer),this.biasRegularizer=Rt(e.biasRegularizer),this.kernelConstraint=on(e.kernelConstraint),this.recurrentConstraint=on(e.recurrentConstraint),this.biasConstraint=on(e.biasConstraint),this.dropout=_u([1,Ro([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=_u([1,Ro([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ft(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return q(()=>{if(e=e,e.length!==2)throw new H(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Po({ones:()=>Es(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Po({ones:()=>Es(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=Rr(W(e,a),this.kernel.read()):r=Rr(e,this.kernel.read()),this.bias!=null&&(r=hr(r,this.bias.read())),o!=null&&(n=W(n,o));let i=le(r,Rr(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Do(this.activation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),recurrentInitializer:Mt(this.recurrentInitializer),biasInitializer:Mt(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:an(this.kernelConstraint),recurrentConstraint:an(this.recurrentConstraint),biasConstraint:an(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};Xf.className="SimpleRNNCell";ue.registerClass(Xf);var mA=class extends ea{constructor(e){e.cell=new Xf(e);super(e)}call(e,t){return q(()=>{this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};mA.className="SimpleRNN";ue.registerClass(mA);var Kf=class extends Pd{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new H("GRUCell does not support reset_after parameter set to true.");this.units=e.units,gn(this.units,"units"),this.activation=_o(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=_o(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Et(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Rt(e.kernelRegularizer),this.recurrentRegularizer=Rt(e.recurrentRegularizer),this.biasRegularizer=Rt(e.biasRegularizer),this.kernelConstraint=on(e.kernelConstraint),this.recurrentConstraint=on(e.recurrentConstraint),this.biasConstraint=on(e.biasConstraint),this.dropout=_u([1,Ro([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=_u([1,Ro([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ft(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return q(()=>{if(e=e,e.length!==2)throw new H(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Po({ones:()=>Es(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Po({ones:()=>Es(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=W(e,r[0]));let c=Rr(e,this.kernel.read());this.useBias&&(c=hr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=W(s,a[0]));let u=this.recurrentKernel.read(),[d,p]=kn(u,[2*this.units,this.units],u.rank-1),h=Rr(s,d),[f,m,g]=kn(c,3,c.rank-1),[A,x]=kn(h,2,h.rank-1);o=this.recurrentActivation.apply(le(f,A)),i=this.recurrentActivation.apply(le(m,x));let y=Rr(W(i,s),p);l=this.activation.apply(le(g,y));let b=le(W(o,s),W(le(1,Ot(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Do(this.activation),recurrentActivation:Do(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),recurrentInitializer:Mt(this.recurrentInitializer),biasInitializer:Mt(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:an(this.kernelConstraint),recurrentConstraint:an(this.recurrentConstraint),biasConstraint:an(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Kf.className="GRUCell";ue.registerClass(Kf);var gA=class extends ea{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kf(e);super(e)}call(e,t){return q(()=>{this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};gA.className="GRU";ue.registerClass(gA);var Fd=class extends Pd{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gn(this.units,"units"),this.activation=_o(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=_o(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Et(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Rt(e.kernelRegularizer),this.recurrentRegularizer=Rt(e.recurrentRegularizer),this.biasRegularizer=Rt(e.biasRegularizer),this.kernelConstraint=on(e.kernelConstraint),this.recurrentConstraint=on(e.recurrentConstraint),this.biasConstraint=on(e.biasConstraint),this.dropout=_u([1,Ro([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=_u([1,Ro([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=ft(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends Zs{apply(o,i){let l=r.apply([a]),c=new If().apply([a]),u=r.apply([a*2]);return nw(nw(l,c),u)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return q(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new H(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Po({ones:()=>Es(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Po({ones:()=>Es(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,c,u;0<this.dropout&&this.dropout<1&&(e=W(e,a[0]));let d=Rr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=W(s,o[0])),d=le(d,Rr(s,this.recurrentKernel.read())),this.useBias&&(d=hr(d,this.bias.read()));let[p,h,f,m]=kn(d,4,d.rank-1);i=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(h),c=le(W(l,r),W(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=W(u,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Do(this.activation),recurrentActivation:Do(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),recurrentInitializer:Mt(this.recurrentInitializer),biasInitializer:Mt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:an(this.kernelConstraint),recurrentConstraint:an(this.recurrentConstraint),biasConstraint:an(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};Fd.className="LSTMCell";ue.registerClass(Fd);var AA=class extends ea{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Fd(e);super(e)}call(e,t){return q(()=>{this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};AA.className="LSTM";ue.registerClass(AA);var Zf=class extends Pd{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return q(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){_1(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{al(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(mr(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return P1(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}F1(t)}};Zf.className="StackedRNNCells";ue.registerClass(Zf);function Po(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):rw(t(),n),i=()=>Td(o,t,s);return!r||r<=1?fn(i().clone()):Array(r).fill(void 0).map(i).map(c=>fn(c.clone()))}var pk=class extends ea{constructor(e){if(e.unroll)throw new We("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new We("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Zt({ndim:5})]}call(e,t){return q(()=>{if(this.cell.dropoutMask!=null&&(ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new H("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return q(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Ht(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){q(()=>{if(!this.stateful)throw new Yr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_=[Ht(r)];else if(e==null)ae(this.states_),this.keptStates!=null&&(ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_[0]=Ht(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ae(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!v.arraysEqual(i.shape,l))throw new H(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>fn(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],c=e[i?4:3],u=gr(l,s[0],r,a[0],o[0]),d=gr(c,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}};pk.className="ConvRNN2D";var Yf=class extends Fd{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super({...e,units:t});this.filters=t,gn(this.filters,"filters"),this.kernelSize=Mu(n,2,"kernelSize"),this.kernelSize.forEach(i=>gn(i,"kernelSize")),this.strides=Mu(s||1,2,"strides"),this.strides.forEach(i=>gn(i,"strides")),this.padding=r||"valid",$s(this.padding),this.dataFormat=a||"channelsLast",jt(this.dataFormat),this.dilationRate=Mu(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>gn(i,"dilationRate"))}build(e){var t;e=ft(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;i=new(t=class extends Zs{apply(u,d){let p=l.apply([c]),h=fs([c]),f=l.apply([c*2]);return k1([p,h,f])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return q(()=>{if(e.length!==3)throw new H(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Po({ones:()=>Es(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(Z,J,ee)=>!J||!J[ee]?Z:W(J[ee],Z),c=l(s,i,0),u=l(s,i,1),d=l(s,i,2),p=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Po({ones:()=>Es(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=l(r,h,0),m=l(r,h,1),g=l(r,h,2),A=l(r,h,3),x=3,[y,b,w,k]=kn(this.kernel.read(),o,x),[C,E,R,F]=this.useBias?kn(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,y,C,this.padding),u=this.inputConv(u,b,E,this.padding),d=this.inputConv(d,w,R,this.padding),p=this.inputConv(p,k,F,this.padding);let[D,P,T,M]=kn(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,D),m=this.recurrentConv(m,P),g=this.recurrentConv(g,T),A=this.recurrentConv(A,M);let U=this.recurrentActivation.apply(le(c,f)),j=this.recurrentActivation.apply(le(u,m)),z=le(W(j,a),W(U,this.activation.apply(le(d,g)))),X=W(this.recurrentActivation.apply(le(p,A)),this.activation.apply(z));return[X,X,z]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=So(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?hr(r,n,this.dataFormat):r}recurrentConv(e,t){return So(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Yf.className="ConvLSTM2DCell";ue.registerClass(Yf);var yA=class extends pk{constructor(e){let t=new Yf(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};yA.className="ConvLSTM2D";ue.registerClass(yA);var Jf=class extends st{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Ve(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Td(()=>rw(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Jf.className="Dropout";ue.registerClass(Jf);var xA=class extends Jf{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};xA.className="SpatialDropout1D";ue.registerClass(xA);var bA=class extends st{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,gn(this.units,"units"),this.activation=_o(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=on(e.kernelConstraint),this.biasConstraint=on(e.biasConstraint),this.kernelRegularizer=Rt(e.kernelRegularizer),this.biasRegularizer=Rt(e.biasRegularizer),this.activityRegularizer=Rt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=ft(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=ft(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Ve(e),s=qv(this.activation.getClassName()),r;return s!=null?r=Rr(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Rr(n,this.kernel.read()),this.bias!=null&&(r=hr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:Do(this.activation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),biasInitializer:Mt(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:an(this.kernelConstraint),biasConstraint:an(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};bA.className="Dense";ue.registerClass(bA);var vA=class extends st{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ft(e);for(let t of e.slice(1))if(t==null)throw new H(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Eo(e,1)]}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Ve(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=tt(n,s)}return cL(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};vA.className="Flatten";ue.registerClass(vA);var wA=class extends st{constructor(e){super(e);this.supportsMasking=!0,this.activation=_o(e.activation)}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Ve(e);return this.activation.apply(n)})}getConfig(){let e={activation:Do(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};wA.className="Activation";ue.registerClass(wA);var kA=class extends st{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return q(()=>(e=Ve(e),lL(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};kA.className="RepeatVector";ue.registerClass(kA);var SA=class extends st{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new H("Can only specifiy one unknown dimension.");else r*=l}let o=Eo(e);if(a!==null){if(r===0||o%r!=0)throw new H(n);s[a]=o/r}else if(o!==r)throw new H(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Ve(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return G(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};SA.className="Reshape";ue.registerClass(SA);var IA=class extends st{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=pr(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Zt({ndim:this.dims.length+1})]}computeOutputShape(e){e=ft(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return tt(Ve(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};IA.className="Permute";ue.registerClass(IA);var CA=class extends st{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ve(e),s=-1;return Gh(Cu(n,this.maskValue),s)}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Ve(e),s=-1,r=!0,a=Gh(Cu(n,this.maskValue),s,r);return W(n,pe(a,n.dtype))})}};CA.className="Masking";ue.registerClass(CA);var TA=class extends st{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(It(e.inputLength))}this.inputDim=e.inputDim,gn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,gn(this.outputDim,"outputDim"),this.embeddingsInitializer=Et(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Rt(e.embeddingsRegularizer),this.activityRegularizer=Rt(e.activityRegularizer),this.embeddingsConstraint=on(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return q(()=>this.maskZero?(e=Ve(e),Cu(e,nt(e))):null)}computeOutputShape(e){if(e=ft(e),this.inputLength==null)return[...e,this.outputDim];let t=It(this.inputLength);if(t.length!==e.length-1)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Ve(e);n.dtype!=="int32"&&(n=wf(n,"int32"));let s=sw(this.embeddings.read(),G(n,[n.size]));return G(s,ft(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Mt(this.embeddingsInitializer),embeddingsRegularizer:xt(this.embeddingsRegularizer),activityRegularizer:xt(this.activityRegularizer),embeddingsConstraint:an(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};TA.className="Embedding";ue.registerClass(TA);var cl=class extends st{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new We}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new H("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ft(e)]),e=e,e.length<2)throw new H(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=No(t),t.length>1)throw new H(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&No(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return q(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=Ro(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=Id(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let c=i.shape,u=c[0],d=c.slice(1).concat([u]),p=G(i,[u].concat(Eo(c.slice(1))));p=tt(p,[1,0]),p=G(p,d),n.push(p),r=!0}else if(l>1){let c=pr(1,l).concat([0]);n.push(tt(i,c)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,c=i[l-1],u=[c].concat(i.slice(0,i.length-1));a=G(tt(G(a,[-1,c]),[1,0]),u)}else if(o>1){let i=[o-1].concat(pr(0,o-1));a=tt(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=No(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return q(()=>{if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an Array");if(!Array.isArray(e))throw new H("`inputs` should be an Array");if(t.length!==e.length)throw new H(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:mn(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=lr(n,t[s]);return n})}},NA=class extends cl{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=le(t,e[n]);return t})}};NA.className="Add";ue.registerClass(NA);var EA=class extends cl{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=W(t,e[n]);return t})}};EA.className="Multiply";ue.registerClass(EA);var RA=class extends cl{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=le(t,e[n]);return W(1/e.length,t)})}};RA.className="Average";ue.registerClass(RA);var $A=class extends cl{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Xr(t,e[n]);return t})}};$A.className="Maximum";ue.registerClass($A);var DA=class extends cl{constructor(e){super(e)}mergeFunction(e){return q(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=md(t,e[n]);return t})}};DA.className="Minimum";ue.registerClass(DA);var _A=class extends cl{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new H("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(v.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new H("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return q(()=>k1(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new H("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new H("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new H(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return q(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(pe(Es(e[a]),"bool")):t[a].rank<e[a].rank?s.push(mn(t[a],-1)):s.push(t[a]);let r=kt(s,this.axis);return N2(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};_A.className="Concatenate";ue.registerClass(_A);function Od(e,t){for(;e<0;)e+=t;return e}function HB(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new We("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new We("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return q(()=>{let o;if(s>r){o=s-r;let l=[];for(let c=0;c<o;++c)l.push(1);t=G(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let c=0;c<o;++c)l.push(1);e=G(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=Se(W(e,t),a[0]):i=Se(W(tt(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,c=a[1]===t.shape.length-1;i=He(e,t,l,c)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let c=[];for(let u=l;u<l+o;++u)c.push(u);i=ct(i,c)}return i.shape.length===1&&(i=mn(i,1)),i})}var PA=class extends cl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new We("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new H(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new H(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>Od(r,e[a].shape.length)):s=[Od(this.axes,t.shape.length),Od(this.axes,n.shape.length)],this.normalize&&(t=Mf(t,s[0]),n=Mf(n,s[1])),HB(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Od(this.axes,e.length),Od(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new We("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};PA.className="Dot";ue.registerClass(PA);var FA=class extends st{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Ve(e);return Td(()=>le(Sf(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};FA.className="GaussianNoise";ue.registerClass(FA);var OA=class extends st{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return q(()=>{this.invokeCallHook(e,t);let n=Ve(e);return this.rate>0&&this.rate<1?Td(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return W(n,Sf(n.shape,1,r))},()=>n,t.training||!1):n})}};OA.className="GaussianDropout";ue.registerClass(OA);var MA=class extends st{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ve(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return q(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Td(()=>{let r=Ve(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=Ji(Tu(n),this.rate);l=wf(l,"float32");let c=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-c*i*this.rate,d=le(W(r,l),W(le(l,-1),i));return le(W(d,c),u)},()=>Ve(e),t.training||!1)}return e})}};MA.className="AlphaDropout";ue.registerClass(MA);function Md(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=N3(e,t,n,s,r,a);else if(e.rank===3)o=E3(e,t,n,s,r,a);else if(e.rank===4)o=R3(e,t,n,s,r,a);else throw new We(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function jB(e,t,n,s,r=.001){return q(()=>{let a=nf(e,s),o=a.mean,i=a.variance;return[Md(e,o,i,n,t,r),o,i]})}function qB(e,t,n,s,r=.001){return q(()=>{let a=nf(e,s),o=a.mean,i=a.variance,l=[];for(let f of pr(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let c=G(o,l),u=G(i,l),d=t==null?null:G(t,l),p=n==null?null:G(n,l);return[Md(e,c,u,p,d,r),o,i]})}function XB(e,t,n,s,r=.001){return v.arraysEqual(s.slice().sort(),pr(0,e.rank-1))?jB(e,t,n,s,r):qB(e,t,n,s,r)}var zA=class extends st{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Et(e.betaInitializer||"zeros"),this.gammaInitializer=Et(e.gammaInitializer||"ones"),this.movingMeanInitializer=Et(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Et(e.movingVarianceInitializer||"ones"),this.betaConstraint=on(e.betaConstraint),this.gammaConstraint=on(e.gammaConstraint),this.betaRegularizer=Rt(e.betaRegularizer),this.gammaRegularizer=Rt(e.gammaRegularizer)}build(e){e=ft(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new H(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Zt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return q(()=>{let n=t.training==null?!1:t.training,s=Ve(e),r=s.shape,a=r.length,o=pr(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=nl(1,a);l[i]=r[i];let c=o.slice();c.sort();let u=!v.arraysEqual(c,pr(0,a).slice(0,a-1)),d=()=>{if(u){let A=G(this.movingMean.read(),l),x=G(this.movingVariance.read(),l),y=this.center?G(this.beta.read(),l):null,b=this.scale?G(this.gamma.read(),l):null;return Md(s,A,x,y,b,this.epsilon)}else return Md(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[p,h,f]=XB(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(A,x,y)=>{q(()=>{let b=1-y,w=A.read(),k=W(xe(w,x),b);A.write(xe(w,k))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Mt(this.betaInitializer),gammaInitializer:Mt(this.gammaInitializer),movingMeanInitializer:Mt(this.movingMeanInitializer),movingVarianceInitializer:Mt(this.movingVarianceInitializer),betaRegularizer:xt(this.betaRegularizer),gammaRegularizer:xt(this.gammaRegularizer),betaConstraint:an(this.betaConstraint),gammaConstraint:an(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};zA.className="BatchNormalization";ue.registerClass(zA);var LA=class extends st{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Et(e.betaInitializer||"zeros"),this.gammaInitializer=Et(e.gammaInitializer||"ones"),this.betaRegularizer=Rt(e.betaRegularizer),this.gammaRegularizer=Rt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=ft(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==No(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=Ve(e),s=n.shape,r=s.length;return q(()=>{let a=!0,{mean:o,variance:i}=nf(n,this.axis,a),l=nl(1,r);for(let f of this.axis)l[f]=s[f];let c=f=>f!=null&&f.shape.length!==r?G(f,l):f,u=c(this.gamma.read()),d=c(this.beta.read()),p=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(p.push(s[f]),h.push(1)):(p.push(1),h.push(s[f]));return o=js(o,p),i=js(i,p),u=js(u,h),d=js(d,h),Md(n,o,i,d,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Mt(this.betaInitializer),gammaInitializer:Mt(this.gammaInitializer),betaRegularizer:xt(this.betaRegularizer),gammaRegularizer:xt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};LA.className="LayerNormalization";ue.registerClass(LA);function KB(e,t,n){return q(()=>{if(e.rank!==4)throw new H(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new H("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=cr()),n!=="channelsLast"&&n!=="channelsFirst")throw new H(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],qs(e,s)})}var BA=class extends st{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?cr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new H(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new H(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new H(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Zt({ndim:4})]}computeOutputShape(e){e=ft(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return q(()=>KB(Ve(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};BA.className="ZeroPadding2D";ue.registerClass(BA);function Qf(e,t,n,s,r,a){return q(()=>{jt(r),Yv(a),$s(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=cr()),a==null&&(a="max"),e=oA(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=ef(e,t,n,i):o=jh(e,t,n,i),r==="channelsFirst"&&(o=tt(o,[0,3,1,2])),o})}function hk(e,t,n,s,r,a){return q(()=>{jt(r),Yv(a),$s(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=cr()),a==null&&(a="max"),e=sk(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=H2(e,t,n,i):o=$2(e,t,n,i),r==="channelsFirst"&&(o=tt(o,[0,4,1,2,3])),o})}var fk=class extends st{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new H(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(gn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new H(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);gn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,$s(this.padding),this.inputSpec=[new Zt({ndim:3})]}computeOutputShape(e){e=ft(e);let t=gr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return q(()=>{this.invokeCallHook(e,t),e=Id(Ve(e),2);let n=this.poolingFunction(Ve(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ct(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},WA=class extends fk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),$s(s),Qf(e,t,n,s,r,"max")}};WA.className="MaxPooling1D";ue.registerClass(WA);var VA=class extends fk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),$s(s),Qf(e,t,n,s,r,"avg")}};VA.className="AveragePooling1D";ue.registerClass(VA);var mk=class extends st{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new H(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];gn(this.poolSize,"poolSize"),gn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),$s(this.padding),this.inputSpec=[new Zt({ndim:4})]}computeOutputShape(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=gr(t,this.poolSize[0],this.padding,this.strides[0]),n=gr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},UA=class extends mk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),$s(s),Qf(e,t,n,s,r,"max")}};UA.className="MaxPooling2D";ue.registerClass(UA);var GA=class extends mk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),$s(s),Qf(e,t,n,s,r,"avg")}};GA.className="AveragePooling2D";ue.registerClass(GA);var gk=class extends st{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new H(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];gn(this.poolSize,"poolSize"),gn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),$s(this.padding),this.inputSpec=[new Zt({ndim:5})]}computeOutputShape(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=gr(t,this.poolSize[0],this.padding,this.strides[0]),n=gr(n,this.poolSize[1],this.padding,this.strides[1]),s=gr(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},HA=class extends gk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),$s(s),hk(e,t,n,s,r,"max")}};HA.className="MaxPooling3D";ue.registerClass(HA);var jA=class extends gk{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return jt(r),$s(s),hk(e,t,n,s,r,"avg")}};jA.className="AveragePooling3D";ue.registerClass(jA);var Ak=class extends st{constructor(e){super(e);this.inputSpec=[new Zt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new We}},qA=class extends Ak{constructor(e){super(e||{})}call(e,t){return q(()=>{let n=Ve(e);return Wt(n,1)})}};qA.className="GlobalAveragePooling1D";ue.registerClass(qA);var XA=class extends Ak{constructor(e){super(e||{})}call(e,t){return q(()=>{let n=Ve(e);return ns(n,1)})}};XA.className="GlobalMaxPooling1D";ue.registerClass(XA);var yk=class extends st{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.inputSpec=[new Zt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new We}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},KA=class extends yk{call(e,t){return q(()=>{let n=Ve(e);return this.dataFormat==="channelsLast"?Wt(n,[1,2]):Wt(n,[2,3])})}};KA.className="GlobalAveragePooling2D";ue.registerClass(KA);var ZA=class extends yk{call(e,t){return q(()=>{let n=Ve(e);return this.dataFormat==="channelsLast"?ns(n,[1,2]):ns(n,[2,3])})}};ZA.className="GlobalMaxPooling2D";ue.registerClass(ZA);var xk=class extends st{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=mr(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},YA=class extends xk{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=ft(e),e.length<3)throw new H(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=ft(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return q(()=>(e=Ve(e),ck((a,o)=>[Ve(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};YA.className="TimeDistributed";ue.registerClass(YA);function ZB(e){rl(sL,"BidirectionalMergeMode",e)}var YB="concat",JA=class extends xk{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=mr(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=mr(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?YB:e.mergeMode,ZB(this.mergeMode),e.weights)throw new We("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):rs(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=uk(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new H("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(u=>new Zt({shape:u.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),o.push(...c)}if(s!=null)throw new We("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof fr;for(let l of a)if(l instanceof fr!==i)throw new H("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return q(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Rs(r,1));let o;return this.mergeMode==="concat"?o=k1([s,r]):this.mergeMode==="sum"?o=le(s,r):this.mergeMode==="ave"?o=W(.5,le(s,r)):this.mergeMode==="mul"?o=W(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){al(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),al(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=mr(t.layer);if(delete t.layer,t.numConstants!=null)throw new We("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};JA.className="Bidirectional";ue.registerClass(JA);function JB(e){return new Pu(e)}function QB(e){return new sA(e)}function eW(e){return new eA(e)}function tW(e){return new tA(e)}function nW(e){return new nA(e)}function sW(e){return new aA(e)}function rW(e){return new rA(e)}function aW(e){return new dA(e)}function oW(e){return new jf(e)}function iW(e){return new lA(e)}function lW(e){return new qf(e)}function uW(e){return new uA(e)}function cW(e){return new cA(e)}function dW(e){return new pA(e)}function pW(e){return new hA(e)}function hW(e){return new fA(e)}function fW(e){return new wA(e)}function mW(e){return new bA(e)}function gW(e){return new Jf(e)}function AW(e){return new xA(e)}function yW(e){return new vA(e)}function xW(e){return new kA(e)}function bW(e){return new SA(e)}function vW(e){return new IA(e)}function wW(e){return new TA(e)}function kW(e){return new NA(e)}function SW(e){return new RA(e)}function IW(e){return new _A(e)}function CW(e){return new $A(e)}function TW(e){return new DA(e)}function NW(e){return new EA(e)}function EW(e){return new PA(e)}function RW(e){return new zA(e)}function $W(e){return new LA(e)}function DW(e){return new BA(e)}function QA(e){return new VA(e)}function _W(e){return QA(e)}function PW(e){return QA(e)}function ey(e){return new GA(e)}function FW(e){return ey(e)}function OW(e){return ey(e)}function ty(e){return new jA(e)}function MW(e){return ty(e)}function zW(e){return ty(e)}function LW(e){return new qA(e)}function BW(e){return new KA(e)}function bk(e){return new XA(e)}function vk(e){return new ZA(e)}function wk(e){return new WA(e)}function kk(e){return new UA(e)}function WW(e){return new HA(e)}function VW(e){return new gA(e)}function UW(e){return new Kf(e)}function GW(e){return new AA(e)}function HW(e){return new Fd(e)}function jW(e){return new mA(e)}function qW(e){return new Xf(e)}function XW(e){return new yA(e)}function KW(e){return new Yf(e)}function ZW(e){return new ea(e)}function YW(e){return new Zf(e)}function JW(e){return new JA(e)}function QW(e){return new YA(e)}var eV=bk,tV=vk,nV=wk,sV=kk;function rV(e){return new FA(e)}function aV(e){return new OA(e)}function oV(e){return new MA(e)}function iV(e){return new CA(e)}var Sk={};Me(Sk,{MAPE:()=>yV,MSE:()=>vV,binaryAccuracy:()=>lV,binaryCrossentropy:()=>uV,categoricalAccuracy:()=>dV,categoricalCrossentropy:()=>pV,cosineProximity:()=>mV,mape:()=>xV,meanAbsoluteError:()=>gV,meanAbsolutePercentageError:()=>AV,meanSquaredError:()=>bV,mse:()=>wV,precision:()=>hV,recall:()=>fV,sparseCategoricalAccuracy:()=>cV});function lV(e,t){return L1(e,t)}function uV(e,t){return ww(e,t)}function cV(e,t){return kw(e,t)}function dV(e,t){return B1(e,t)}function pV(e,t){return W1(e,t)}function hV(e,t){return vw(e,t)}function fV(e,t){return JL(e,t)}function mV(e,t){return M1(e,t)}function gV(e,t){return zf(e,t)}function AV(e,t){return Ou(e,t)}function yV(e,t){return Ou(e,t)}function xV(e,t){return Ou(e,t)}function bV(e,t){return il(e,t)}function vV(e,t){return il(e,t)}function wV(e,t){return il(e,t)}var Ik={};Me(Ik,{modelFromJSON:()=>DB});var Ck={};Me(Ck,{l1:()=>SV,l1l2:()=>kV,l2:()=>IV});function kV(e){return new Dd(e)}function SV(e){return BB(e)}function IV(e){return WB(e)}var Tk=class extends Fu{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Qr))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function em(e,t){return e<t}function Nk(e,t){return e>t}var Ek=class extends Tk{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new We("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=em:this.mode==="max"?this.monitorFunc=Nk:this.monitor.indexOf("acc")!==-1?this.monitorFunc=Nk:this.monitorFunc=em,this.monitorFunc===em&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===em?1/0:-1/0}async onEpochEnd(e,t){await $o(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function CV(e){return new Ek(e)}var TV={earlyStopping:CV},Ar;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Ar||(Ar={}));var Rk;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Rk||(Rk={}));var ny={};function NV(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};ny[e]=n}function $k(e){return ny[e]}function EV(e){delete ny[e]}function S(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return Vn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(p=>Vn(p,n,s,r));let c=Vn(t.inputNames.slice(i)[0],n,s,r),u=c.dataSync();return a.type==="number"?u[0]:v.toNestedArray(c.shape,u)}let o=t.attrParams[e];return o&&o.value}function Vn(e,t,n,s){let[r,a]=ms(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[tm(r,i)]);return o!==void 0?t[tm(r,o)][a]:void 0}function RV(e,t,n){return t[tm(e,n.currentContextId)]}function ta(e,t){let[n,s,r]=ms(e);return[tm(n,t&&t.currentContextId),s,r]}function tm(e,t){return t?`${e}-${t}`:e}function ms(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function nm(e,t,n){let s=S("pad",e,t,n);if(s==="explicit"){s=S("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function na(e){return e.kept?e:or(e)}var Dk={};Me(Dk,{json:()=>$V});var $V=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_k={};Me(_k,{json:()=>DV});var DV=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Pk={};Me(Pk,{json:()=>_V});var _V=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Fk={};Me(Fk,{json:()=>PV});var PV=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Ok={};Me(Ok,{json:()=>FV});var FV=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Mk={};Me(Mk,{json:()=>OV});var OV=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],zk={};Me(zk,{json:()=>MV});var MV=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Lk={};Me(Lk,{json:()=>zV});var zV=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Bk={};Me(Bk,{json:()=>LV});var LV=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Wk={};Me(Wk,{json:()=>BV});var BV=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],Vk={};Me(Vk,{json:()=>WV});var WV=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Uk={};Me(Uk,{json:()=>VV});var VV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Gk={};Me(Gk,{json:()=>UV});var UV=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Hk={};Me(Hk,{json:()=>GV});var GV=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],jk={};Me(jk,{json:()=>HV});var HV=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],qk={};Me(qk,{json:()=>jV});var jV=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Xk={};Me(Xk,{json:()=>qV});var qV=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Kk={};Me(Kk,{json:()=>XV});var XV=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Zk={};Me(Zk,{json:()=>KV});var KV=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Yk=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[Dk,_k,Pk,Fk,Ok,Mk,zk,Lk,Bk,Wk,Vk,Uk,Gk,Hk,jk,qk,Xk,Kk,Zk],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],c={},u={};t!=null&&(c=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let d=Object.keys(o);d.forEach(f=>{let m=o[f];m.inputNames.forEach((g,A)=>{let[x,,y]=ta(g),b=o[x];if(b.outputs!=null){let w=b.outputs.indexOf(y);if(w!==-1){let k=`${x}:${w}`;m.inputNames[A]=k}}m.inputs.push(b),b.children.push(m)})}),Object.keys(u).length===0?d.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(u).forEach(f=>{let[m]=ta(f),g=o[m];g!=null&&(g.signatureKey=u[f],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(f=>{let[m]=ta(f),g=o[m];g&&(g.signatureKey=c[f],i.push(g))}):i=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=$k(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.substr(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=sy(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=sy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=dy(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=dy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=ay(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=ay(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=cy(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=cy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=ry(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=ry(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=hy(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=hy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=uy(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=uy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=py(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=py(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=iy(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=iy(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=ly(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=ly(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=Qk(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Qk(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&s.push(u[d.name]),u),{}));let a=[],o=[];e.signature.inputArg.forEach(u=>{let[d]=ta(u.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:oy(u.type),type:"dtype"}},children:[]};p.signatureKey=u.name,a.push(p),r[d]=p}),Object.keys(r).forEach(u=>{let d=r[u];d.inputNames.forEach((p,h)=>{let[f,,m]=ta(p),g=r[f];if(g.outputs!=null){let A=g.outputs.indexOf(m);if(A!==-1){let x=`${f}:${A}`;d.inputNames[h]=x}}d.inputs.push(g),g.children.push(d)})});let l=e.ret;e.signature.outputArg.forEach(u=>{let[d,p]=ta(l[u.name]),h=r[d];h!=null&&(h.defaultOutput=p,o.push(h))});let c=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function ZV(e){let t=K().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Jk(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):ZV(e);return t?n:n.toLowerCase()}function sy(e,t,n,s=!1){let r=e[t];return r!=null?Jk(r.s,s):n}function ry(e,t,n){let s=e[t];return s?s.b:n}function ay(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function oy(e){switch(typeof e=="string"&&(e=Ar[e]),e){case Ar.DT_FLOAT:return"float32";case Ar.DT_INT32:case Ar.DT_INT64:case Ar.DT_INT8:case Ar.DT_UINT8:return"int32";case Ar.DT_BOOL:return"bool";case Ar.DT_DOUBLE:return"float32";case Ar.DT_STRING:return"string";default:return null}}function Qk(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function iy(e,t,n){let s=e[t];return s&&s.type?oy(s.type):n}function ly(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>oy(r)):n}function e7(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function uy(e,t,n){let s=e[t];return s&&s.shape?e7(s.shape):n}function cy(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function dy(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>Jk(a,s)):n}function py(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>e7(r)):n}function hy(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var YV=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return Vn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Vn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return ay(this.node.rawAttrs,e,t);if(n.s!=null)return sy(this.node.rawAttrs,e,t);if(n.b!=null)return ry(this.node.rawAttrs,e,t);if(n.shape!=null)return uy(this.node.rawAttrs,e,t);if(n.type!=null)return iy(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return cy(this.node.rawAttrs,e,t);if(n.list.s!=null)return dy(this.node.rawAttrs,e,t);if(n.list.shape!=null)return py(this.node.rawAttrs,e,t);if(n.list.b!=null)return hy(this.node.rawAttrs,e,t);if(n.list.type!=null)return ly(this.node.rawAttrs,e,t)}return t}},JV=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[le(S("a",e,t,n),S("b",e,t,n))];case"AddN":return[Uh(S("tensors",e,t,n))];case"FloorMod":case"Mod":return[tv(S("a",e,t,n),S("b",e,t,n))];case"Mul":return[W(S("a",e,t,n),S("b",e,t,n))];case"RealDiv":case"Div":return[fe(S("a",e,t,n),S("b",e,t,n))];case"DivNoNan":return[W3(S("a",e,t,n),S("b",e,t,n))];case"FloorDiv":return[T2(S("a",e,t,n),S("b",e,t,n))];case"Sub":return[xe(S("a",e,t,n),S("b",e,t,n))];case"Minimum":return[md(S("a",e,t,n),S("b",e,t,n))];case"Maximum":return[Xr(S("a",e,t,n),S("b",e,t,n))];case"Pow":return[Io(S("a",e,t,n),S("b",e,t,n))];case"SquaredDifference":return[s1(S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},QV=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[sn(S("x",e,t,n))];case"Acos":return[A3(S("x",e,t,n))];case"Acosh":return[y3(S("x",e,t,n))];case"Asin":return[b3(S("x",e,t,n))];case"Asinh":return[v3(S("x",e,t,n))];case"Atan":return[w3(S("x",e,t,n))];case"Atan2":return[k3(S("x",e,t,n),S("y",e,t,n))];case"Atanh":return[S3(S("x",e,t,n))];case"Ceil":return[D3(S("x",e,t,n))];case"Complex":return[xo(S("real",e,t,n),S("imag",e,t,n))];case"Cos":return[Xh(S("x",e,t,n))];case"Cosh":return[M2(S("x",e,t,n))];case"Elu":return[hd(S("x",e,t,n))];case"Erf":return[U3(S("x",e,t,n))];case"Exp":return[Ts(S("x",e,t,n))];case"Expm1":return[G3(S("x",e,t,n))];case"Floor":return[fd(S("x",e,t,n))];case"Log":return[Ns(S("x",e,t,n))];case"Log1p":return[Yh(S("x",e,t,n))];case"Imag":return[Kh(S("x",e,t,n))];case"Neg":return[Ot(S("x",e,t,n))];case"Reciprocal":return[rv(S("x",e,t,n))];case"Real":return[gd(S("x",e,t,n))];case"Relu":return[Nr(S("x",e,t,n))];case"Round":return[Z2(S("x",e,t,n))];case"Selu":return[J2(S("x",e,t,n))];case"Sigmoid":return[ds(S("x",e,t,n))];case"Sin":return[Q2(S("x",e,t,n))];case"Sign":return[iv(S("x",e,t,n))];case"Sinh":return[e1(S("x",e,t,n))];case"Softplus":return[Iu(S("x",e,t,n))];case"Sqrt":return[Dn(S("x",e,t,n))];case"Square":return[yt(S("x",e,t,n))];case"Tanh":return[bu(S("x",e,t,n))];case"Tan":return[uv(S("x",e,t,n))];case"ClipByValue":return[ps(S("x",e,t,n),S("clipValueMin",e,t,n),S("clipValueMax",e,t,n))];case"Relu6":return[K2(S("x",e,t,n))];case"Rsqrt":return[Y2(Vn(e.inputNames[0],t,n))];case"Prod":return[j2(S("x",e,t,n),S("axes",e,t,n))];case"LeakyRelu":return[Zh(S("x",e,t,n),S("alpha",e,t,n))];case"Prelu":return[rf(S("x",e,t,n),S("alpha",e,t,n))];case"IsNan":return[H3(Vn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ys(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];v.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function t7(e){return!(typeof e=="number"||e.some(t=>t<0))}function zd(e,t,n){let s=fy(e,n),r=!t7(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=fy(a.shape,s)}),!t7(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function fy(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var eU=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ee(0),fn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Ys(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,fn(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return Gt([],[0].concat(this.elementShape));let n=this.readMany(e);return Ys(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),_n(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Gt([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return Ys(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),kt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ss(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];q(()=>{t=G(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],c=[0,l,0],u=[1,e[i],r];a[i]=G(_e(t,c,u),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},Ld=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);Ys(t,r.shape,"TensorList shape mismatch: "),fn(r)}),this.idTensor=Ee(0),this.maxNumElements=s,fn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ld([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Ys(e,this.elementShape,"TensorList shape mismatch: ");let s=zd(this.elementShape,this.tensors,e);return q(()=>{let r=this.tensors.map(a=>G(a,s));return _n(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=zd(this.elementShape,this.tensors,e),s=this.tensors.pop();return Ys(s.shape,e,"TensorList shape mismatch: "),G(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ys(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");fn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ys(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=zd(this.elementShape,this.tensors,t);return G(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ys(this.elementShape,t.shape,"TensorList shape mismatch: "),fn(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Ys(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=zd(this.elementShape,this.tensors,n);return e.length===0?Gt([],[0].concat(s)):q(()=>{let r=e.map(a=>G(this.tensors[a],s));return _n(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ys(this.elementShape,t,"TensorList shape mismatch: ");let n=zd(this.elementShape,this.tensors,t);return this.size()===0?Gt([],[0].concat(n)):q(()=>{let s=this.tensors.map(r=>G(r,n));return kt(s,0)})}};function tU(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);Ys(r,t,"TensorList shape mismatch: ");let a=ss(e);return new Ld(a,t,s)}function nU(e,t,n){return new Ld([],e,t,n)}function sU(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new Ld([],n,e.dtype,s),o=ss(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function rU(e,t,n){let s=0,r=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=fy(a,n),i=s===0?0:e.size/s,l=q(()=>{let u=[];e=G(e,[1,s,i]);for(let d=0;d<t.length;++d){let p=d===0?0:r[d-1],h=[0,p,0],f=[1,t[d],i];u[d]=G(_e(e,h,f),o)}return e.dispose(),u}),c=new Ld([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}var aU=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=S("thenBranch",e,t,n),r=S("elseBranch",e,t,n),a=S("cond",e,t,n),o=S("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=S("body",e,t,n),r=S("cond",e,t,n),a=S("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(u=>u.id),l=await o[0].data();o.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let c=a;for(;l[0];){let u=c;c=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let d=c.map(h=>h.id);u.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});let p=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await p[0].data(),p.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{let s=S("pred",e,t,n);return[na(s)]}case"Switch":{let s=S("pred",e,t,n),r=S("data",e,t,n);return r.kept||(r=na(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>Vn(r,t,n)!==void 0);if(s){let r=Vn(s,t,n);return[na(r)]}return}case"Enter":{let s=S("frameName",e,t,n),r=S("tensor",e,t,n);return n.enterFrame(s),[na(r)]}case"Exit":{let s=S("tensor",e,t,n);return n.exitFrame(),[na(s)]}case"NextIteration":{let s=S("tensor",e,t,n);return n.nextIteration(),[na(s)]}case"TensorArrayV3":{let s=S("size",e,t,n),r=S("dtype",e,t,n),a=S("elementShape",e,t,n),o=S("dynamicSize",e,t,n),i=S("clearAfterRead",e,t,n),l=S("identicalElementShapes",e,t,n),c=S("name",e,t,n),u=new eU(c,r,s,a,l,o,i);return n.addTensorArray(u),[u.idTensor,Ee(1)]}case"TensorArrayWriteV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=S("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=S("tensorArrayId",e,t,n),r=S("tensor",e,t,n),a=S("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ee(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("elementShape",e,t,n),o=S("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=S("indices",e,t,n),r=S("tensor",e,t,n),a=S("elementShape",e,t,n),o=S("numElements",e,t,n),i=sU(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=S("elementShape",e,t,n),r=S("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=S(a,e,t,n),i=nU(s,r,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let s=S("tensorListId",e,t,n),r=S("indices",e,t,n),a=S("elementShape",e,t,n),o=S("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),o=S("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),o=tU(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id),a=S("dtype",e,t,n),o=S("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=S("tensorListId",e,t,n),r=S("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("lengths",e,t,n),o=rU(s,a,r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function n7(e,t,n){let[s,r]=S("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",c=S("numArgs",e,t,n);if(a){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=S("strides",e,t,n),d=nm(e,t,n),p=S("dataFormat",e,t,n).toUpperCase(),h=S("dilations",e,t,n),[f,m]=S("args",e,t,n);o&&(m=f,f=void 0);let g=S("leakyreluAlpha",e,t,n);return{stride:u,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var oU=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=S("stride",e,t,n),r=S("pad",e,t,n),a=S("dataFormat",e,t,n).toUpperCase(),o=S("dilation",e,t,n);return[_2(S("x",e,t,n),S("filter",e,t,n),s,r,a,o)]}case"Conv2D":{let s=S("strides",e,t,n),r=nm(e,t,n),a=S("dataFormat",e,t,n).toUpperCase(),o=S("dilations",e,t,n);return[So(S("x",e,t,n),S("filter",e,t,n),[s[1],s[2]],r,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=n7(e,t,n);return[Co.conv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=n7(e,t,n);return[Co.depthwiseConv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=S("outputShape",e,t,n),r=S("strides",e,t,n),a=nm(e,t,n);return[F2(S("x",e,t,n),S("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=S("strides",e,t,n),r=nm(e,t,n),a=S("dilations",e,t,n),o=S("dataFormat",e,t,n).toUpperCase();return[pd(S("input",e,t,n),S("filter",e,t,n),[s[1],s[2]],r,o,[a[1],a[2]])]}case"Conv3D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("dataFormat",e,t,n).toUpperCase(),o=S("dilations",e,t,n);return[O2(S("x",e,t,n),S("filter",e,t,n),[s[1],s[2],s[3]],r,a,[o[1],o[2],o[3]])]}case"AvgPool":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[jh(S("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[ef(S("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n),o=S("includeBatchInIndex",e,t,n),{result:i,indexes:l}=Q3(S("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,o);return[i,l]}case"AvgPool3D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[$2(S("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[H2(S("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("dilations",e,t,n),o=s[1],i=s[2],l=a[1],c=a[2];return[B3(S("x",e,t,n),S("filter",e,t,n),[o,i],r,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},iU=(e,t,n)=>{switch(e.op){case"Fill":{let s=S("shape",e,t,n),r=S("dtype",e,t,n),a=S("value",e,t,n);return[ku(s,a,r)]}case"LinSpace":{let s=S("start",e,t,n),r=S("stop",e,t,n),a=S("num",e,t,n);return[j3(s,r,a)]}case"Multinomial":{let s=S("logits",e,t,n),r=S("numSamples",e,t,n),a=S("seed",e,t,n);return[nv(s,r,a)]}case"OneHot":{let s=S("indices",e,t,n),r=S("depth",e,t,n),a=S("onValue",e,t,n),o=S("offValue",e,t,n);return[ud(s,r,a,o)]}case"Ones":return[fs(S("shape",e,t,n),S("dtype",e,t,n))];case"OnesLike":return[Es(S("x",e,t,n))];case"RandomUniform":return[Tu(S("shape",e,t,n),S("minval",e,t,n),S("maxval",e,t,n),S("dtype",e,t,n))];case"Range":{let s=S("start",e,t,n),r=S("stop",e,t,n),a=S("step",e,t,n);return[Nu(s,r,a,S("dtype",e,t,n))]}case"TruncatedNormal":{let s=S("shape",e,t,n),r=S("mean",e,t,n),a=S("stdDev",e,t,n),o=S("seed",e,t,n);return[uf(s,r,a,S("dtype",e,t,n),o)]}case"Zeros":return[Ht(S("shape",e,t,n),S("dtype",e,t,n))];case"ZerosLike":return[nt(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function my(e,t,n){let s=S("boxes",e,t,n),r=S("scores",e,t,n),a=S("maxOutputSize",e,t,n),o=S("iouThreshold",e,t,n),i=S("scoreThreshold",e,t,n),l=S("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var lU=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=my(e,t,n),c=await $e.nonMaxSuppressionWithScoreAsync(s,r,a,o,i,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=my(e,t,n),l=S("padToMaxOutputSize",e,t,n),c=await $e.nonMaxSuppressionPaddedAsync(s,r,a,o,i,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=my(e,t,n);return[await $e.nonMaxSuppressionAsync(s,r,a,o,i)]}case"Where":{let s=pe(S("condition",e,t,n),"bool"),r=[await a1(s)];return s.dispose(),r}case"ListDiff":return ov(S("x",e,t,n),S("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},uU=(e,t,n)=>{switch(e.op){case"TopKV2":{let s=S("x",e,t,n),r=S("k",e,t,n),a=S("sorted",e,t,n),o=cv(s,r,a);return[o.values,o.indices]}case"Unique":{let s=S("x",e,t,n),r=r1(s);return[r.values,r.indices]}case"UniqueV2":{let s=S("x",e,t,n),r=S("axis",e,t,n),a=r1(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},cU=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=S("default",e,t,n);return[Vn(e.name,t,n)||s];case"Placeholder":return[Vn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=S("x",e,t,n);return[na(c)]}case"IdentityN":return S("x",e,t,n).map(c=>na(c));case"Snapshot":let r=S("x",e,t,n);return[na(r)];case"Shape":return[Kt(S("x",e,t,n).shape,"int32")];case"ShapeN":return S("x",e,t,n).map(c=>Kt(c.shape));case"Size":return[Ee(S("x",e,t,n).size,"int32")];case"Rank":return[Ee(S("x",e,t,n).rank,"int32")];case"NoOp":return[Ee(1)];case"Print":let a=S("x",e,t,n),o=S("data",e,t,n),i=S("message",e,t,n),l=S("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},dU=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ee(0),this.tensorMap=new Map,fn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ee(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),q(()=>{let s=ss(t),r=n.length,a=s.length;v.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];fn(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return q(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return _n(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},pU=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=S("keyDType",e,t,n),a=S("valueDType",e,t,n),o=new dU(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),o=S("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),o=S("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=S("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},hU=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=S("images",e,t,n),r=S("size",e,t,n),a=S("alignCorners",e,t,n),o=S("halfPixelCenters",e,t,n);return[$e.resizeBilinear(s,[r[0],r[1]],a,o)]}case"ResizeNearestNeighbor":{let s=S("images",e,t,n),r=S("size",e,t,n),a=S("alignCorners",e,t,n),o=S("halfPixelCenters",e,t,n);return[$e.resizeNearestNeighbor(s,[r[0],r[1]],a,o)]}case"CropAndResize":{let s=S("image",e,t,n),r=S("boxes",e,t,n),a=S("boxInd",e,t,n),o=S("cropSize",e,t,n),i=S("method",e,t,n),l=S("extrapolationValue",e,t,n);return[$e.cropAndResize(s,r,a,o,i,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},fU=(e,t,n)=>{switch(e.op){case"Equal":return[Cs(S("a",e,t,n),S("b",e,t,n))];case"NotEqual":return[Cu(S("a",e,t,n),S("b",e,t,n))];case"Greater":return[hs(S("a",e,t,n),S("b",e,t,n))];case"GreaterEqual":return[Ji(S("a",e,t,n),S("b",e,t,n))];case"Less":return[B2(S("a",e,t,n),S("b",e,t,n))];case"LessEqual":return[Qi(S("a",e,t,n),S("b",e,t,n))];case"LogicalAnd":return[lr(S("a",e,t,n),S("b",e,t,n))];case"LogicalNot":return[Qh(S("a",e,t,n))];case"LogicalOr":return[G2(S("a",e,t,n),S("b",e,t,n))];case"Select":case"SelectV2":return[Bn(S("condition",e,t,n),S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},mU=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[He(S("a",e,t,n),S("b",e,t,n),S("transposeA",e,t,n),S("transposeB",e,t,n))];case"Einsum":return[V3(S("equation",e,t,n),...S("tensors",e,t,n))];case"Transpose":return[tt(S("x",e,t,n),S("perm",e,t,n))];case"_FusedMatMul":let[s,r]=S("fusedOps",e,t,n),a=s==="biasadd",o=r==="prelu",i=S("numArgs",e,t,n),l=S("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,u]=S("args",e,t,n);return[Co.matMul({a:S("a",e,t,n),b:S("b",e,t,n),transposeA:S("transposeA",e,t,n),transposeB:S("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},gU=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[vu(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"FusedBatchNormV3":return[vu(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"LRN":return[q3(S("x",e,t,n),S("radius",e,t,n),S("bias",e,t,n),S("alpha",e,t,n),S("beta",e,t,n))];case"Softmax":return[Ru(S("x",e,t,n))];case"LogSoftmax":return[W2(S("x",e,t,n))];case"SparseToDense":return[i1(S("sparseIndices",e,t,n),S("outputShape",e,t,n),S("sparseValues",e,t,n),S("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},AU=(e,t,n)=>{switch(e.op){case"Max":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[ns(S("x",e,t,n),o,i)]}case"Mean":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[Wt(S("x",e,t,n),o,i)]}case"Min":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[tf(S("x",e,t,n),o,i)]}case"Sum":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[Se(S("x",e,t,n),o,i)]}case"All":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[N2(S("x",e,t,n),o,i)]}case"Any":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[Gh(S("x",e,t,n),o,i)]}case"ArgMax":{let o=S("axis",e,t,n);return[Hs(S("x",e,t,n),o)]}case"ArgMin":{let o=S("axis",e,t,n);return[x3(S("x",e,t,n),o)]}case"Prod":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[j2(S("x",e,t,n),o,i)]}case"Cumsum":{let o=S("axis",e,t,n),i=S("exclusive",e,t,n),l=S("reverse",e,t,n);return[z2(S("x",e,t,n),o,i,l)]}case"Bincount":let s=S("x",e,t,n),r=S("weights",e,t,n),a=S("size",e,t,n);return[D2(s,r,a)];case"DenseBincount":{let o=S("x",e,t,n),i=S("weights",e,t,n),l=S("size",e,t,n),c=S("binaryOutput",e,t,n);return[z3(o,i,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},yU=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=S("n",e,t,n),r=S("axis",e,t,n),a=S("tensors",e,t,n);return a=a.slice(0,s),[kt(a,r)]}case"Gather":{let s=S("x",e,t,n),r=S("indices",e,t,n);return[Su(s,pe(r,"int32"),0)]}case"GatherV2":{let s=S("axis",e,t,n),r=S("batchDims",e,t,n),a=S("x",e,t,n),o=S("indices",e,t,n);return[Su(a,pe(o,"int32"),s,r)]}case"Reverse":{let s=S("dims",e,t,n),r=[];for(let o=0;o<s.length;o++)s[o]&&r.push(o);let a=S("x",e,t,n);return[Rs(a,r)]}case"ReverseV2":{let s=S("axis",e,t,n),r=S("x",e,t,n);return[Rs(r,s)]}case"Slice":{let s=S("begin",e,t,n),r=S("size",e,t,n);return[_e(S("x",e,t,n),s,r)]}case"StridedSlice":{let s=S("begin",e,t,n),r=S("end",e,t,n),a=S("strides",e,t,n),o=S("beginMask",e,t,n),i=S("endMask",e,t,n),l=S("ellipsisMask",e,t,n),c=S("newAxisMask",e,t,n),u=S("shrinkAxisMask",e,t,n),d=S("x",e,t,n);return[lv(d,s,r,a,o,i,l,c,u)]}case"Pack":return q(()=>{let s=S("axis",e,t,n),r=S("tensors",e,t,n),a=r[0].shape,o=ct(r[0]).shape,i=r.map(l=>{let c=v.arraysEqual(l.shape,a);if(!c&&!v.arraysEqual(ct(l).shape,o))throw new Error("the input tensors shape does not match");return c?l:G(l,a)});return[_n(i,s)]});case"Unpack":{let s=S("axis",e,t,n),r=S("tensor",e,t,n);return ss(r,s)}case"Tile":{let s=S("reps",e,t,n);return[js(S("x",e,t,n),s)]}case"Split":case"SplitV":{let s=S("axis",e,t,n),r=S("numOrSizeSplits",e,t,n),a=S("x",e,t,n);return kn(a,r,s)}case"ScatterNd":{let s=S("indices",e,t,n),r=S("values",e,t,n),a=S("shape",e,t,n);return[mv(s,r,a)]}case"GatherNd":{let s=S("x",e,t,n),r=S("indices",e,t,n);return[gv(s,r)]}case"SparseToDense":{let s=S("sparseIndices",e,t,n),r=S("outputShape",e,t,n),a=S("sparseValues",e,t,n),o=S("defaultValue",e,t,n);return[i1(s,a,r,a.dtype===o.dtype?o:pe(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},xU=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:o}=bd.sparseFillEmptyRows(S("indices",e,t,n),S("values",e,t,n),S("denseShape",e,t,n),S("defaultValue",e,t,n));return[s,r,a,o]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=bd.sparseReshape(S("inputIndices",e,t,n),S("inputShape",e,t,n),S("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[bd.sparseSegmentMean(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];case"SparseSegmentSum":return[bd.sparseSegmentSum(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},bU=(e,t,n)=>{switch(e.op){case"FFT":return[of(S("x",e,t,n))];case"IFFT":return[yd(S("x",e,t,n))];case"RFFT":return[lf(S("x",e,t,n))];case"IRFFT":return[n1(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vU=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=ff.stringNGrams(S("data",e,t,n),S("dataSplits",e,t,n),S("separator",e,t,n),S("nGramWidths",e,t,n),S("leftPad",e,t,n),S("rightPad",e,t,n),S("padWidth",e,t,n),S("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=ff.stringSplit(S("input",e,t,n),S("delimiter",e,t,n),S("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[ff.stringToHashBucketFast(S("input",e,t,n),S("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},wU=(e,t,n)=>{switch(e.op){case"Cast":return[pe(S("x",e,t,n),S("dtype",e,t,n))];case"ExpandDims":{let s=S("axis",e,t,n);return[mn(S("x",e,t,n),s)]}case"Squeeze":{let s=S("axis",e,t,n);return[ct(S("x",e,t,n),s)]}case"Reshape":return[G(S("x",e,t,n),S("shape",e,t,n))];case"MirrorPad":return[ev(S("x",e,t,n),S("padding",e,t,n),S("mode",e,t,n))];case"PadV2":case"Pad":return[qs(S("x",e,t,n),S("padding",e,t,n),S("constantValue",e,t,n))];case"SpaceToBatchND":{let s=S("blockShape",e,t,n),r=S("paddings",e,t,n);return[sf(S("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=S("blockShape",e,t,n),r=S("crops",e,t,n);return[qh(S("x",e,t,n),s,r)]}case"DepthToSpace":{let s=S("blockSize",e,t,n),r=S("dataFormat",e,t,n).toUpperCase();return[L3(S("x",e,t,n),s,r)]}case"BroadcastTo":return[dd(S("x",e,t,n),S("shape",e,t,n))];case"BroadcastArgs":return[$3(S("s0",e,t,n),S("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function s7(e,t,n,s){let r=((a,o,i)=>{switch(a.category){case"arithmetic":return q(()=>JV(a,o,i));case"basic_math":return q(()=>QV(a,o,i));case"control":return aU(a,o,i);case"convolution":return q(()=>oU(a,o,i));case"creation":return q(()=>iU(a,o,i));case"dynamic":return lU(a,o,i);case"evaluation":return q(()=>uU(a,o,i));case"image":return q(()=>hU(a,o,i));case"graph":return q(()=>cU(a,o,i));case"logical":return q(()=>fU(a,o,i));case"matrices":return q(()=>mU(a,o,i));case"normalization":return q(()=>gU(a,o,i));case"reduction":return q(()=>AU(a,o,i));case"slice_join":return q(()=>yU(a,o,i));case"sparse":return q(()=>xU(a,o,i));case"spectral":return q(()=>bU(a,o,i));case"string":return q(()=>vU(a,o,i));case"transformation":return q(()=>wU(a,o,i));case"hash_table":return pU(a,o,i,s);case"custom":let l=$k(a.op);if(l&&l.customExecutor)return l.customExecutor(new YV(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var r7=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function a7(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,c=Object.keys(e).map(p=>ms(p)[0]),u=[];s!=null&&(u=s.map(p=>ms(p.name)[0]));let d=[...t];for(;d.length>0;){let p=d.pop();if((o7(p)||TU(p)||NU(p))&&o==null&&(o=p,i=o.children.map(h=>h.name).filter(h=>r.has(h))),r.add(p.name),n[p.name]==null&&c.indexOf(p.name)===-1&&u.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),d.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function kU(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(u=>ms(u)[0]).map(u=>e.nodes[u]),i=e.initNodes;o.forEach(u=>{s.has(u.name)&&a.push(u)}),e.weights.forEach(u=>{s.has(u.name)&&a.push(u)}),i!=null&&i.forEach(u=>{s.has(u.name)&&a.push(u)});let l=new Set,c=[];for(;a.length>0;){let u=a.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(d=>{!l.has(d.name)&&s.has(d.name)&&d.inputs.every(p=>l.has(p.name))&&a.push(d)})}return c}var SU=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],IU=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],CU=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function o7(e){return SU.indexOf(e.op)>=0}function TU(e){return IU.indexOf(e.op)>=0}function NU(e){return CU.indexOf(e.op)>=0}var gy=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new gy(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=a7(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return kU(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(u=>this.graph.nodes[ms(u)[0]]),r=t.map(u=>ms(u)[0]),a=r.map(u=>this.graph.nodes[u]);a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},c={};return q(()=>{let u=new r7(this.weightMap,l,c,this.functionExecutorMap),d={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=ms(f),A=[];A[g]=e[f],d[m]=A});let p=this.getFrozenTensorIds(d),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!d[m.name]){let g=s7(m,d,u,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,u,p,r,h)}}return this.parent==null&&u.dispose(p),t.map(f=>Vn(f,d,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=RV(i.name,n,s);l!=null&&l.forEach(c=>{if(c&&!c.kept&&!r.has(c.id)){let u=o[c.id];u===1?(c.dispose(),delete o[c.id]):u!=null&&o[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let a=new r7(this.weightMap,s,r,this.functionExecutorMap),o=await this.executeWithControlFlow(e,a,t,n),i=t.map(d=>Vn(d,o,a)),l=i.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),u=new Set([...l,...c,...this.weightIds]);return Object.keys(o).forEach(d=>{o[d].forEach(h=>{h&&!h.kept&&!h.isDisposed&&!u.has(h.id)&&h.dispose()})}),this.parent==null&&a.dispose(u),i}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(x=>this.graph.nodes[ms(x)[0]]),o=n.map(x=>ms(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:u,syncInputs:d}=a7(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(x=>{let[y,b]=ms(x),w=[];w[b]=e[x],h[y]=w});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let x=this.processStack(a,p,t,h,g,m,o,f,l);await Promise.all(x)}u==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let A=i.filter(x=>!o7(x)&&!Vn(x.name,h,t)).map(x=>x.name);if(A.length>0){let x="";throw u!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${A}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${x}`)}return h}processStack(e,t,n,s,r,a,o,i,l){let c=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let d="";if(u.node.op==="Enter"&&S("isConstant",u.node,s,n)&&([d]=ta(u.node.name,n)),s[u.node.name]==null){let p=s7(u.node,s,n,this._resourceManager);d||([d]=ta(u.node.name,n));let h=n.currentContext;v.isPromise(p)?c.push(p.then(f=>(s[d]=f,n.currentContext=h,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l),f))):(s[d]=p,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l))}else this.processChildNodes(u.node,t,n,s,r,l)}return c}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=ta(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Vn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!Vn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=ms(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);v.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&v.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=ms(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=ms(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},EU=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},RU="?tfjs-format=file",$U="model.json",i7=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new EU}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=es.browserHTTPRequest(e,this.loadOptions);else{let t=es.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(es.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=es.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new gy(Yk.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=Yk.Instance.transformGraph(e.modelInitializer);this.initializer=new gy(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=es.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof et)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function rt(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${$U}${RU}`);let n=new i7(e,t);return await n.load(),n}var DU="0.0.0",l7={};Me(l7,{CSVDataset:()=>w7,Dataset:()=>Lu,FileDataSource:()=>E7,TextLineDataset:()=>x7,URLDataSource:()=>R7,array:()=>tG,csv:()=>pG,func:()=>hG,generator:()=>fG,microphone:()=>gG,version_data:()=>AG,webcam:()=>mG,zip:()=>nG});var _U=Jo(Yp()),PU=Jo(Yp());function FU(e,t){return sm(e,t)}function sm(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(zu(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=sm(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function OU(e,t=c7){return u7(e,t)}function u7(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(zu(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(c=>c[o]),l=u7(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function c7(e){return e===null?null:zu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function d7(e,t){let n=new Map;sm(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let o=await a;n.set(r,o)}}return sm(e,t,n)}function zu(e){let t=!1;if(K().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=t5();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof et)&&!(e instanceof Promise)&&!t)}function MU(e){return e==null||zU(e)||Array.isArray(e)||typeof e=="object"&&e instanceof et||v.isTypedArray(e)}function zU(e){return e===null||typeof e!="object"&&typeof e!="function"}function LU(e){return FU(e,BU)}function BU(e){return e instanceof et?{value:e.clone(),recurse:!1}:zu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var p7=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},h7=class extends p7{constructor(){super(h7.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},f7=h7;f7.INITIAL_CAPACITY=32;function m7(e){return new UU(e)}function Ay(e){return new GU(e)}function WU(e,t){return new A7(e,t)}function VU(e,t=rm.FAIL){return new QU(e,t)}var An=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new YU(this,e)}filter(e){return new KU(this,e)}map(e){return new ZU(this,e)}mapAsync(e){return new g7(this,e)}serialMapAsync(e){return new g7(this,e).serial()}flatmap(e){return new JU(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new XU(this,e,t)}columnMajorBatch(e,t=!0,n=c7){return this.rowMajorBatch(e,t).map(r=>OU(r,n))}concatenate(e,t){return new A7(m7([this,e]),t)}take(e){return e<0||e==null?this:new qU(this,e)}skip(e){return e<0||e==null?this:new jU(this,e)}prefetch(e){return new y7(this,e)}shuffle(e,t){return new eG(this,e,t)}serial(){return new HU(this)}},UU=class extends An{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:LU(e),done:!1}}},GU=class extends An{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},HU=class extends An{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},jU=class extends An{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ae(e.value)}return this.upstream.next()}},qU=class extends An{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},XU=class extends An{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},KU=class extends An{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ae(e.value)}}},ZU=class extends An{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=rr.getTensorsInContainer(e.value),n=this.transform(e.value),s=rr.getTensorsInContainer(n);for(let r of t)rr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},YU=class extends An{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},g7=class extends An{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=rr.getTensorsInContainer(e.value),n=await this.transform(e.value),s=rr.getTensorsInContainer(n);for(let r of t)rr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},yy=class extends An{constructor(){super();this.outputQueue=new f7,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},JU=class extends yy{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=rr.getTensorsInContainer(e.value),n=this.transform(e.value),s=rr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)rr.isTensorInList(r,s)||r.dispose();return!0}},A7=class extends An{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},rm;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(rm||(rm={}));var QU=class extends An{constructor(e,t=0){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof An?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await d7(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},y7=class extends An{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new p7(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},eG=class extends y7{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=PU.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Lu=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),gs(async()=>(await n.iterator()).columnMajorBatch(e,t,sG),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,gs(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,gs(async()=>(await t.iterator()).filter(s=>q(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return gs(async()=>(await t.iterator()).map(n=>q(()=>e(n))),this.size)}mapAsync(e){let t=this;return gs(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return gs(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,gs(async()=>{let s=Ay(async()=>({value:await t.iterator(),done:!1}));return WU(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,gs(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=_U.alea(t||v.now().toString());return gs(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,gs(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Lu.MAX_BUFFER_SIZE=1e4;function gs(e,t=null){return new class extends Lu{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function tG(e){return gs(async()=>m7(e),e.length)}function nG(e){if(!zu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return gs(async()=>{let n=await d7(e,s=>{if(s instanceof Lu)return{value:s.iterator(),recurse:!1};if(zu(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return VU(n,rm.SHORTEST)},t)}function sG(e){if(e===null)return null;let t=e[0];return MU(t)?{value:rG(e),recurse:!1}:{value:null,recurse:!0}}function rG(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof et?_n(e):Gt(e)}var x7=class extends Lu{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},am='"',Bd=Symbol("out"),b7=Symbol("field"),om=Symbol("quote"),xy=Symbol("quoteafterquote"),v7=Symbol("quoteinquote"),w7=class extends Lu{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new x7(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let c=Number(i);if(isNaN(c))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=c;else switch(o.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(i);break;default:l=c}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=Bd;for(let o=0;o<r;o++)switch(a){case Bd:switch(e.charAt(o)){case am:s=o+1,a=om;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Bd;break;default:a=b7,s=o;break}break;case b7:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=Bd,s=o+1;break;default:}break;case om:switch(e.charAt(o)){case am:a=xy;break;default:}break;case xy:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=Bd,s=o+1;break;case am:a=om;break;default:a=v7;break}break;case v7:switch(e.charAt(o)){case am:a=om;break;default:}break;default:}if(a===xy?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},k7=class extends An{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(K().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new k7(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(v.sizeFromShape(t));return n.set(e,n.length-e.length),Gt(n,t)}},S7=class extends An{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Kt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=ur([a,r,i,o],[1,4])}else this.cropBox=ur([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(K().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new S7(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Gs.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return q(()=>{let t=mn(pe(e,"float32"),0),n;n=$e.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return G(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},I7=class{},C7=class extends An{split(e){return new aG(this,e)}},aG=class extends C7{constructor(e,t){super();this.upstream=e,this.impl=new oG(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},oG=class extends yy{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},iG=class extends An{decodeUTF8(){return new lG(this)}},lG=class extends C7{constructor(e){super();this.upstream=e,this.impl=new uG(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},uG=class extends yy{constructor(e){super();if(this.upstream=e,K().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=t5();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return K().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},T7=class extends iG{constructor(e,t={}){super();this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(K().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function cG(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=dG(e));let a=await(n||v.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new T7(o,t)}else throw new Error(a.statusText)}var dG=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function N7(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var E7=class extends I7{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(N7(this.input)&&K().get("IS_NODE")){let e=Ws("fs");this.input=e.readFileSync(this.input.substr(7))}return new T7(this.input,this.options)}},R7=class extends I7{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return N7(this.url)?new E7(this.url,this.fileOptions).iterator():cG(this.url,this.fileOptions)}};function pG(e,t={}){return new w7(new R7(e),t)}function hG(e){let t=Ay(e);return gs(async()=>t)}function fG(e){return gs(async()=>{let t=await e();return Ay(()=>t.next())})}async function mG(e,t){return S7.create(e,t)}async function gG(e){return k7.create(e)}var AG="0.0.0";function Ne(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var yG=Xs.whereImpl,$7=class extends Ll{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Pc(this,ts())}nextDataId(){return $7.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,K().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,n)}makeOutput(e,t,n){let s=this.write(e,t,n);return ts().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ne([e],"where");let t=this.readSync(e.dataId);return yG(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},by=$7;by.nextDataId=0;var im={};Me(im,{addImpl:()=>_7,bincountImpl:()=>wy,bincountReduceImpl:()=>P7,ceilImpl:()=>F7,concatImpl:()=>ky,equalImpl:()=>O7,expImpl:()=>z7,expm1Impl:()=>B7,floorImpl:()=>W7,gatherNdImpl:()=>V7,gatherV2Impl:()=>U7,greaterEqualImpl:()=>H7,greaterImpl:()=>G7,lessEqualImpl:()=>q7,lessImpl:()=>j7,linSpaceImpl:()=>X7,logImpl:()=>K7,maxImpl:()=>Z7,maximumImpl:()=>Y7,minimumImpl:()=>J7,multiplyImpl:()=>Sy,negImpl:()=>Q7,notEqualImpl:()=>eS,prodImpl:()=>tS,rangeImpl:()=>Cy,rsqrtImpl:()=>nS,sigmoidImpl:()=>oH,simpleAbsImpl:()=>D7,sliceImpl:()=>cm,sparseFillEmptyRowsImpl:()=>rS,sparseReshapeImpl:()=>aS,sparseSegmentReductionImpl:()=>Ty,sqrtImpl:()=>uH,squaredDifferenceImpl:()=>oS,stridedSliceImpl:()=>iS,stringNGramsImpl:()=>lS,stringSplitImpl:()=>uS,stringToHashBucketFastImpl:()=>cS,subImpl:()=>dS,tileImpl:()=>pS,topKImpl:()=>fS,transposeImpl:()=>Iy,uniqueImpl:()=>mS});function D7(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var xG=e=>{let{x:t}=e.inputs,n=e.backend;Ne(t,"abs");let s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=D7(r),n.makeOutput(s,t.shape,t.dtype)},bG={kernelName:ti,backendName:"cpu",kernelFunc:xG};function Yt(e){return(t,n,s,r,a)=>{let o=N.assertAndGetBroadcastShape(t,n),i=o.length,l=v.computeStrides(o),c=v.sizeFromShape(o),u=v.getTypedArrayFromDType(a,c),d=t.length,p=n.length,h=v.computeStrides(t),f=v.computeStrides(n),m=N.getBroadcastDims(t,o),g=N.getBroadcastDims(n,o);if(m.length+g.length===0)for(let A=0;A<u.length;++A)u[A]=e(s[A%s.length],r[A%r.length]);else for(let A=0;A<u.length;++A){let x=v.indexToLoc(A,i,l),y=x.slice(-d);m.forEach(C=>y[C]=0);let b=v.locToIndex(y,d,h),w=x.slice(-p);g.forEach(C=>w[C]=0);let k=v.locToIndex(w,p,f);u[A]=e(s[b],r[k])}return[u,o]}}function As(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var vG={kernelName:zc,backendName:"cpu",kernelFunc:As};function lm(e,t,n="float32"){if(n==="complex64"){let r=lm(e,t,"float32"),a=lm(e,t,"float32");return As({inputs:{real:r,imag:a},backend:e})}let s=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Pr(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var wG={kernelName:Ba,backendName:"cpu",kernelFunc:Pr};function dl(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var kG={kernelName:qc,backendName:"cpu",kernelFunc:dl};function Fo(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Pr({inputs:{x:r},backend:n});let o=lm(n,r.shape,r.dtype),i=Fo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=As({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=dl({inputs:{input:r},backend:n}),i=Fo({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Pr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=v.toTypedArray([0],r.dtype),[l,c]=Yt((u,d)=>u!==d?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var SG={kernelName:Ca,backendName:"cpu",kernelFunc:Fo};function yn(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Ne([o,i],e);let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=o.dtype==="string"?N.fromUint8ToStringArray(c):c,p=o.dtype==="string"?N.fromUint8ToStringArray(u):u,h=s||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let c=Fo({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,h=l.data.get(d.dataId).values,f=l.data.get(p.dataId).values,m=Fo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),A=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,y=l.data.get(A.dataId).values,b=l.data.get(x.dataId).values,[w,k,C]=n(o.shape,i.shape,h,f,y,b),E=l.makeTensorInfo(C,"float32",w),R=l.makeTensorInfo(C,"float32",k),F=As({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),F}else{let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=s||o.dtype,[p,h]=t(o.shape,i.shape,c,u,d);return l.makeTensorInfo(h,d,p)}}}function vy(e){return(t,n,s,r,a,o)=>{let i=N.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(i),c=i.length,u=v.computeStrides(i),d=v.getTypedArrayFromDType("float32",l),p=v.getTypedArrayFromDType("float32",l),h=N.getBroadcastDims(t,i),f=N.getBroadcastDims(n,i),m=N.mergeRealAndImagArrays(s,r),g=N.mergeRealAndImagArrays(a,o),A=t.length,x=v.computeStrides(t),y=n.length,b=v.computeStrides(n);if(h.length+f.length===0)for(let w=0;w<d.length;w++){let k=w%m.length,C=w%g.length,E=e(m[k*2],m[k*2+1],g[C*2],g[C*2+1]);d[w]=E.real,p[w]=E.imag}else for(let w=0;w<d.length;w++){let k=v.indexToLoc(w,c,u),C=k.slice(-A);h.forEach(P=>C[P]=0);let E=v.locToIndex(C,A,x),R=k.slice(-y);f.forEach(P=>R[P]=0);let F=v.locToIndex(R,y,b),D=e(m[E*2],m[E*2+1],g[F*2],g[F*2+1]);d[w]=D.real,p[w]=D.imag}return[d,p,i]}}var _7=Yt((e,t)=>e+t),IG=vy((e,t,n,s)=>({real:e+n,imag:t+s})),Wd=yn(Vr,_7,IG),CG={kernelName:Vr,backendName:"cpu",kernelFunc:Wd};function wy(e,t,n,s,r){let a=v.sizeFromShape(s),o=v.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function P7(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=Be([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let c=e.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?o.set(1,i,c):t.size>0?o.set(o.get(i,c)+t.get(i,l),i,c):o.set(o.get(i,c)+1,i,c))}return o}function Oo(e){return(t,n,s)=>{let r=v.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function mt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ne(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=v.sizeFromShape(o.shape),u=n||o.dtype,d=v.getArrayFromDType(u,c);for(let p=0;p<c;++p)d[p]=t(l[p],r);return i.makeTensorInfo(o.shape,u,d)}}function Bu(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ne(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=n||o.dtype,u=t(l,c,r);return i.makeTensorInfo(o.shape,c,u)}}var F7=Oo(e=>Math.ceil(e)),TG=Bu(Ta,F7),NG={kernelName:Ta,backendName:"cpu",kernelFunc:TG};function ky(e,t,n,s){let r=v.getArrayFromDType(n,v.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=v.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?N.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let c=0;c<o.shape[0];++c){let u=c*t[1]+a;for(let d=0;d<o.shape[1];++d)r[u+d]=i[l++]}a+=o.shape[1]})}return r}var O7=Yt((e,t)=>e===t?1:0),M7=yn(ii,O7,null,"bool"),EG={kernelName:ii,backendName:"cpu",kernelFunc:M7},z7=Oo(e=>Math.exp(e)),L7=Bu(Fa,z7,"float32"),RG={kernelName:Fa,backendName:"cpu",kernelFunc:L7},B7=Oo(e=>Math.expm1(e)),$G=Bu(ui,B7),DG={kernelName:ui,backendName:"cpu",kernelFunc:$G},W7=Oo(e=>Math.floor(e)),_G=Bu(Oa,W7),PG={kernelName:Oa,backendName:"cpu",kernelFunc:_G};function V7(e,t,n,s,r,a,o,i,l){let c=Be([s,a],n);for(let u=0;u<s;u++){let d=[],p=0;for(let h=0;h<r;h++){let f=e[u*r+h];p+=f*o[h],d.push(f)}if(p<0||p>=l/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<a;h++)c.values[u*a+h]=t.get(...t.indexToLoc(p*a+h))}return c}function U7(e,t,n){let s=Be(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],c=t.locToIndex([i,l]);o[2]=t.values[c];let u=e.locToIndex(o);s.values[r]=e.values[u]}return s}var G7=Yt((e,t)=>e>t?1:0),FG=yn(hi,G7,null,"bool"),OG={kernelName:hi,backendName:"cpu",kernelFunc:FG},H7=Yt((e,t)=>e>=t?1:0),MG=yn(La,H7,null,"bool"),zG={kernelName:La,backendName:"cpu",kernelFunc:MG},j7=Yt((e,t)=>e<t?1:0),LG=yn(mi,j7,null,"bool"),BG={kernelName:mi,backendName:"cpu",kernelFunc:LG},q7=Yt((e,t)=>e<=t?1:0),WG=yn(gi,q7,null,"bool"),VG={kernelName:gi,backendName:"cpu",kernelFunc:WG};function X7(e,t,n){let s=(t-e)/(n-1),r=v.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var K7=Oo(e=>Math.log(e)),UG=Bu(Wa,K7),GG={kernelName:Wa,backendName:"cpu",kernelFunc:UG};function Z7(e,t,n,s){let r=v.getTypedArrayFromDType(s,v.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let c=e[o+l];(Number.isNaN(c)||c>i)&&(i=c)}r[a]=i}return r}var Y7=Yt((e,t)=>Math.max(e,t)),HG=yn(Ua,Y7),jG={kernelName:Ua,backendName:"cpu",kernelFunc:HG},J7=Yt((e,t)=>Math.min(e,t)),qG=yn(qa,J7),XG={kernelName:qa,backendName:"cpu",kernelFunc:qG},Sy=Yt((e,t)=>e*t),KG=vy((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),um=yn(Ka,Sy,KG),ZG={kernelName:Ka,backendName:"cpu",kernelFunc:um};function Q7(e,t,n){let s=v.createScalarValue(-1,n);return Sy([],t,s,e,n)}function YG(e){let{inputs:t,backend:n}=e,{x:s}=t;Ne(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=Q7(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var JG={kernelName:yi,backendName:"cpu",kernelFunc:YG},eS=Yt((e,t)=>e!==t?1:0),QG=yn(xi,eS,null,"bool"),eH={kernelName:xi,backendName:"cpu",kernelFunc:QG};function Iy(e,t,n,s,r){let a=t.length,o=v.sizeFromShape(t),i=v.computeStrides(t),l=v.computeStrides(r),c=v.getTypedArrayFromDType(n,v.sizeFromShape(r));for(let u=0;u<o;++u){let d=v.indexToLoc(u,a,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[s[f]];let h=v.locToIndex(p,a,l);c[h]=e[u]}return c}function Ds(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Ne(r,"transpose");let o=r.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=r.shape[a[d]];let l=s.data.get(r.dataId).values,c=Iy(l,r.shape,r.dtype,a,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}var tH={kernelName:po,backendName:"cpu",kernelFunc:Ds};function tS(e,t,n,s){let[r,a]=N.computeOutAndReduceShapes(e,s),o=Ln(t,"int32"),i=v.makeZerosTypedArray(v.sizeFromShape(r),o),l=v.sizeFromShape(a);for(let c=0;c<i.length;++c){let u=c*l,d=1;for(let p=0;p<l;++p)d*=n[u+p];i[c]=d}return{outVals:i,outShape:r,outDtype:o}}function nH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"prod");let i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=N.getAxesPermutation(l,i),u=l,d=r,p=[];c!=null&&(d=Ds({inputs:{x:r},backend:n,attrs:{perm:c}}),p.push(d),u=N.getInnerMostAxes(u.length,i));let h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=tS(d.shape,d.dtype,h,u),A=m;return o&&(A=N.expandShapeToKeepDim(m,l)),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(A,g,f)}var sH={kernelName:Ii,backendName:"cpu",kernelFunc:nH};function Cy(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return v.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var nS=Oo(e=>1/Math.sqrt(e)),rH=Bu(no,nS),aH={kernelName:no,backendName:"cpu",kernelFunc:rH},oH=Oo(e=>1/(1+Math.exp(-e))),sS=mt(ro,e=>1/(1+Math.exp(-e))),iH={kernelName:ro,backendName:"cpu",kernelFunc:sS};function cm(e,t,n,s,r){let a=Ft.isSliceContinous(s,t,n),o=v.sizeFromShape(n),i=v.computeStrides(s);if(a){let d=Ft.computeFlatOffset(t,i);return r==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let l=r==="string"?N.fromUint8ToStringArray(e):e,c=Be(s,r,l),u=Be(n,r);for(let d=0;d<u.size;++d){let p=u.indexToLoc(d),h=p.map((f,m)=>f+t[m]);u.set(c.get(...h),...p)}return r==="string"?N.fromStringArrayToUint8(u.values):u.values}function pl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Ne(r,"slice");let[i,l]=Ft.parseSliceParams(r,a,o);Ft.assertParamsValid(r,i,l);let c=n.data.get(r.dataId).values,u=cm(c,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var lH={kernelName:$i,backendName:"cpu",kernelFunc:pl};function rS(e,t,n,s,r,a,o){let i=t[0],l=a[0],c=new Array(l),u=new Array(i),d=t[1];if(l===0){if(i!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${i}`);let g=v.getArrayFromDType(n,0),A=v.getArrayFromDType(r,0);return[g,[0,d],A,c,u]}let p=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let A=e[g*d];if(A<0)throw new Error(`indices(${g}, 0) is invalid: ${A} < 0`);if(A>=l)throw new Error(`indices(${g}, 0) is invalid: ${A} >= ${l}`);++f[A],p=p&&A>=h,h=A}let m=!0;for(let g=0;g<l;++g){let A=f[g]===0;c[g]=A,m=m&&!A,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,A=s;for(let x=0;x<i;++x)u[x]=x;return[g,[i,d],A,c,u]}else{let g=f[l-1],A=v.getArrayFromDType(n,g*d),x=v.getArrayFromDType(r,g),y=new Array(l).fill(0);for(let b=0;b<i;++b){let w=e[b*d],k=y[w],C=(w===0?0:f[w-1])+k;y[w]++;for(let E=0;E<d;++E)A[C*d+E]=e[b*d+E];x[C]=s[b],u[b]=C}for(let b=0;b<l;++b)if(y[b]===0){let k=b===0?0:f[b-1];A[k*d+0]=b;for(let C=1;C<d;++C)A[k*d+C]=0;x[k]=o}return[A,[g,d],x,c,u]}}function aS(e,t,n,s,r){let a=v.sizeFromShape(s),o=t[0],i=r.length,l=[],c=1,u=-1;for(let g=0;g<i;++g){let A=r[g];if(A===-1){if(u!==-1)throw new Error(`only one output dimension may be -1, not both ${u} and ${g}`);u=g,l.push(1)}else{if(A<0)throw new Error(`size ${g} must be non-negative, not ${A}`);c*=A,l.push(A)}}if(u!==-1){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");let g=Math.trunc(a/c);if(c*g!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}
          dense values, but the requested shape requires a multiple of ${c}. inputShape=${s} outputShape= ${l}`);l[u]=g}let d=v.sizeFromShape(l);if(d!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${d}. inputShape=${s} outputShape=${l}`);let p=s.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=v.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let A=0;for(let x=0;x<p;++x)A+=e[g*p+x]*h[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(A/f[x]),A%=f[x]}return[m,[o,i],l]}function Ty(e,t,n,s,r,a=!1,o=0){let i=s.length;if(i!==r.length)throw new Error("segmentIds and indices should have same size.");let l=[t[0],e.length/t[0]],c=l[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");let p=t.slice();p[0]=d;let h=p.reduce((y,b)=>y*b,1),f=v.getArrayFromDType(n,h);if(i===0)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,A=0,x=r[m];for(;;){let y=0;if(g<i){if(y=r[g],x===y){++g;continue}if(x>=y)throw new Error("segment ids are not increasing")}if(x<0||x>=d)throw new Error(`Segment id ${x} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);x>A&&f.fill(o,A*c,x*c);for(let b=m;b<g;++b){let w=s[b];if(w<0||w>=l[0])throw new Error(`Bad: indices[${b}] == ${s[b]} out of range [0, ${l[0]})`);for(let k=0;k<c;k++)f[x*c+k]+=e[w*c+k]}if(a)for(let b=0;b<c;b++)f[x*c+b]/=g-m;if(m=g,++g,A=x+1,x=y,g>i)break}return A<d&&f.fill(o,A*c,d*c),[f,p]}var uH=Oo(e=>Math.sqrt(e)),cH=mt(ao,e=>Math.sqrt(e)),dH={kernelName:ao,backendName:"cpu",kernelFunc:cH},oS=Yt((e,t)=>{let n=e-t;return n*n}),pH=yn(lo,oS),hH={kernelName:lo,backendName:"cpu",kernelFunc:pH};function iS(e,t,n,s){let r=Be(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var fH=class{constructor(e,t,n,s,r,a){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),u=a-(l+c),d=t+(l>0?0:o-i),p=0;p+=l*this.leftPad.length;for(let A=0;A<u;++A)p+=e[d+A].length;p+=c*this.rightPad.length,p+=(l+c+u-1)*this.separator.length,n[s+o]=new Uint8Array(p);let f=n[s+o],m=0,g=A=>A.forEach(x=>f[m++]=x);for(let A=0;A<l;++A)g(this.leftPad),g(this.separator);for(let A=0;A<u-1;++A)g(e[d+A]),g(this.separator);if(u>0){g(e[d+u-1]);for(let A=0;A<c;++A)g(this.separator),g(this.rightPad)}else{for(let A=0;A<c-1;++A)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let c=t[l]>=i;if(c=c&&t[l]<=n,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=v.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],c=0;this.nGramWidths.forEach(u=>{c+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&c===0&&(c=1),a[i]=a[i-1]+c}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],c=a[i];if(this.nGramWidths.forEach(u=>{let d=t[i+1]-t[i],p=this.getNumNGrams(d,u);this.createNGrams(e,l,o,c,p,u),c+=p}),this.preserveShort&&c===a[i]){let u=t[i+1]-t[i];if(u===0)continue;let d=u+2*this.padWidth,p=1;this.createNGrams(e,l,o,c,p,d)}}return[o,a]}};function lS(e,t,n,s,r,a,o,i){return new fH(n,s,r,a,o,i).compute(e,t)}function mH(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function uS(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let p=0;p<s;++p){let h=r.length;mH(e[p],t,n,r);let f=r.length-h;i[p]=f,a+=f,o=Math.max(o,f)}let l=v.getArrayFromDType("int32",a*2),c=new Array(a),u=[s,o],d=0;for(let p=0;p<s;++p)for(let h=0;h<i[p];++h)l[d*2]=p,l[d*2+1]=h,c[d]=r[d],++d;return[l,c,u]}function cS(e,t){let n=v.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=v.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var dS=Yt((e,t)=>e-t),gH=vy((e,t,n,s)=>({real:e-n,imag:t-s})),Ny=yn(uo,dS,gH),AH={kernelName:uo,backendName:"cpu",kernelFunc:Ny};function pS(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=Be(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var Vd=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function hS(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,c=Math.log(i),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(i-u)/i)*Math.sign(l-i/2),p=Math.max(n,Math.floor(t-l*u/i+d)),h=Math.min(s,Math.floor(t+(i-l)*u/i+d));hS(e,t,p,h)}let r=e[t],a=n,o=s;for(v.swap(e,n,t),Vd(e[s],r)>0&&v.swap(e,n,s);a<o;){for(v.swap(e,a,o),a++,o--;Vd(e[a],r)<0;)a=a+1;for(;Vd(e[o],r)>0;)o=o-1}Vd(e[n],r)===0?v.swap(e,n,o):(o=o+1,v.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function fS(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=v.getTypedArrayFromDType(n,o*s),c=v.getTypedArrayFromDType("int32",o*s);for(let d=0;d<o;d++){let p=d*i,h=e.subarray(p,p+i),f=new Array(h.length);h.forEach((x,y)=>f[y]={value:x,index:y}),s<f.length&&(hS(f,s),f=f.slice(0,s)),r&&f.sort(Vd);let m=d*s,g=l.subarray(m,m+s),A=c.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,A[x]=f[x].index}let u=t.slice();return u[u.length-1]=s,[Be(u,n,l),Be(u,"int32",c)]}function mS(e,t,n,s){let r=v.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new nn(a,s,e),c=[],u=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let A=0;A<a[0];A++)for(let x=0;x<a[2];x++)g.push(l.get(A,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let p=new nn(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let A=0;A<a[2];A++)p.set(l.get(g,f,A),g,m,A)});let h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:i}}var yH="0.0.0";Zi("cpu",()=>new by,1);var gS=mt(Pa,e=>e>=0?e:Math.exp(e)-1),xH={kernelName:Pa,backendName:"cpu",kernelFunc:gS};function AS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Ne([r],"leakyRelu");let o=v.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=v.getTypedArrayFromDType("float32",o);for(let c=0;c<i.length;c++)l[c]=i[c]<0?a*i[c]:i[c];return n.makeTensorInfo(r.shape,"float32",l)}var bH={kernelName:fi,backendName:"cpu",kernelFunc:AS},vH=Yt((e,t)=>e<0?t*e:e);function yS(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Ne([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=vH(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var wH={kernelName:Ja,backendName:"cpu",kernelFunc:yS},xS=mt(Qa,e=>Math.max(0,e)),kH={kernelName:Qa,backendName:"cpu",kernelFunc:xS},bS=mt(to,e=>Math.min(Math.max(0,e),6)),SH={kernelName:to,backendName:"cpu",kernelFunc:bS};function Ey(e,t,n,s,r){if(n==="linear")return Pr({inputs:{x:t},backend:e});if(n==="relu")return xS({inputs:{x:t},backend:e});if(n==="elu")return gS({inputs:{x:t},backend:e});if(n==="relu6")return bS({inputs:{x:t},backend:e});if(n==="prelu")return yS({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return AS({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return sS({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function $t(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,o),l=v.sizeFromShape(i);v.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var IH={kernelName:Ci,backendName:"cpu",kernelFunc:$t};function vS(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Ne([r,a],"matMul");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),A=v.sizeFromShape(m),y=qi.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);v.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],w=i?[A,h,d]:[A,d,h],k=$t({inputs:{x:r},backend:n,attrs:{shape:b}}),C=$t({inputs:{x:a},backend:n,attrs:{shape:w}}),E=o?k.shape[1]:k.shape[2],R=o?k.shape[2]:k.shape[1],F=i?C.shape[1]:C.shape[2],D=Math.max(g,A),P=n.data.get(k.dataId).values,T=n.data.get(C.dataId).values,M=v.computeStrides(k.shape),U=v.computeStrides(C.shape),[j,z,X]=o?[M[0],1,M[1]]:[M[0],M[1],1],[Z,J,ee]=i?[1,U[1],U[0]]:[U[1],1,U[0]],ne=R*F,Q=Be([D,R,F],k.dtype),te=Q.values,oe=n.blockSize;for(let he=0;he<D;he++)for(let be=0;be<R;be+=oe)for(let we=0;we<F;we+=oe)for(let Ce=0;Ce<E;Ce+=oe){let ze=Math.min(be+oe,R),Ue=Math.min(we+oe,F),Xe=Math.min(Ce+oe,E);for(let Ye=be;Ye<ze;Ye++)for(let pt=we;pt<Ue;pt++){let ht=0;for(let it=Ce;it<Xe;it++){let St=Math.min(he,g-1)*j,gt=Math.min(he,A-1)*ee,Tt=P[St+Ye*z+it*X],_t=T[it*Z+pt*J+gt];ht+=Tt*_t}te[he*ne+(Ye*F+pt)]+=ht}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(y,Q.dtype,Q.values)}var CH={kernelName:Ia,backendName:"cpu",kernelFunc:vS};function TH(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p,h,f,m=[];p=vS({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:c},backend:n}),o&&(h=Wd({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),u&&(f=Ey(n,p,u,i,d),m.push(p),p=f);for(let A of m)n.disposeIntermediateTensorInfo(A);return p}var NH={kernelName:fo,backendName:"cpu",kernelFunc:TH},EH=mt(Vl,e=>Math.acos(e)),RH={kernelName:Vl,backendName:"cpu",kernelFunc:EH},$H=mt(Ul,e=>Math.acosh(e)),DH={kernelName:Ul,backendName:"cpu",kernelFunc:$H};function _H(e){let{inputs:t,backend:n}=e,s=t;Ne(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=Be(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let c=0;c<o.length;c++)o[c]+=l[c]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var PH={kernelName:wa,backendName:"cpu",kernelFunc:_H};function FH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"all");let i=v.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Ds({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("all",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let A=0;A<f.length;++A){let x=A*h,y=m[x];for(let b=0;b<h;++b){let w=m[x+b];y=y&&w}f[A]=y}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let A=N.expandShapeToKeepDim(d,i),x=$t({inputs:{x:g},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(g),x}return g}var OH={kernelName:Gl,backendName:"cpu",kernelFunc:FH};function MH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"any");let i=v.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Ds({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("any",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let A=0;A<f.length;++A){let x=A*h,y=m[x];for(let b=0;b<h;++b){let w=m[x+b];y=y||w}f[A]=y}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let A=N.expandShapeToKeepDim(d,i),x=$t({inputs:{x:g},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(g),x}return g}var zH={kernelName:Hl,backendName:"cpu",kernelFunc:MH};function LH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ne(r,"argMax");let o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ds({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=v.sizeFromShape(u),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let A=g*f,x=m[A],y=0;for(let b=0;b<f;++b){let w=m[A+b];w>x&&(x=w,y=b)}h[g]=y}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var BH={kernelName:ka,backendName:"cpu",kernelFunc:LH};function WH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ne(r,"argMin");let o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ds({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=v.sizeFromShape(u),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let A=g*f,x=m[A],y=0;for(let b=0;b<f;++b){let w=m[A+b];w<x&&(x=w,y=b)}h[g]=y}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var VH={kernelName:jl,backendName:"cpu",kernelFunc:WH},UH=mt(ql,e=>Math.asin(e)),GH={kernelName:ql,backendName:"cpu",kernelFunc:UH},HH=mt(Xl,e=>Math.asinh(e)),jH={kernelName:Xl,backendName:"cpu",kernelFunc:HH},qH=mt(Kl,e=>Math.atan(e)),XH={kernelName:Kl,backendName:"cpu",kernelFunc:qH},KH=Yt((e,t)=>Math.atan2(e,t)),ZH=yn(Yl,KH),YH={kernelName:Yl,backendName:"cpu",kernelFunc:ZH},JH=mt(Zl,e=>Math.atanh(e)),QH={kernelName:Zl,backendName:"cpu",kernelFunc:JH};function Ry(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Be(r.outShape,n),g=m.values,A=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let b=0;b<r.batchSize;++b){let w=b*A,k=b*s[0];for(let C=0;C<r.inChannels;++C)for(let E=0;E<r.outHeight;++E){let R=E*o-p,F=Math.max(0,R),D=Math.min(r.inHeight,u+R),P=w+E*x;for(let T=0;T<r.outWidth;++T){let M=T*i-h,U=Math.max(0,M),j=Math.min(r.inWidth,d+M),z=f,X=0,Z=0;for(let ee=F;ee<D;ee+=l){let ne=k+ee*s[1];for(let Q=U;Q<j;Q+=c){let te=ne+Q*s[2],oe=e[te+C];a==="max"&&oe>z?z=oe:a==="avg"&&(X+=oe,Z++)}if(isNaN(z))break}let J=P+T*y+C;g[J]=a==="avg"?X/Z:z}}}return m}function wS(e,t,n,s,r=!1,a=!1){let o=Be(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=Be(t,n,e);for(let g=0;g<s.batchSize;++g)for(let A=0;A<s.inChannels;++A)for(let x=0;x<s.outHeight;++x){let y=x*i-h,b=y;for(;b<0;)b+=c;let w=Math.min(s.inHeight,d+y);for(let k=0;k<s.outWidth;++k){let C=k*l-f,E=C;for(;E<0;)E+=u;let R=Math.min(s.inWidth,p+C),F=Number.NEGATIVE_INFINITY,D=-1;for(let P=b;P<w;P+=c){let T=P-y;for(let M=E;M<R;M+=u){let U=M-C,j=m.get(g,P,M,A);j>F&&(F=j,r?D=a?((g*s.inHeight+P)*s.inWidth+M)*s.inChannels+A:(P*s.inWidth+M)*s.inChannels+A:D=T*p+U)}}o.set(D,g,x,k,A)}}return o}function kS(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,A=r.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=Be(r.outShape,n),b=y.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){let F=R*w,D=R*s[0];for(let P=0;P<r.inChannels;++P)for(let T=0;T<r.outDepth;++T){let M=T*o-m,U=M;for(;U<0;)U+=c;let j=Math.min(r.inDepth,p+M),z=F+T*k;for(let X=0;X<r.outHeight;++X){let Z=X*i-g,J=Z;for(;J<0;)J+=u;let ee=Math.min(r.inHeight,h+Z),ne=z+X*C;for(let Q=0;Q<r.outWidth;++Q){let te=Q*l-A,oe=te;for(;oe<0;)oe+=d;let he=Math.min(r.inWidth,f+te),be=ne+Q*E,we=x,Ce=0,ze=0;for(let Xe=U;Xe<j;Xe+=c){let Ye=D+Xe*s[1];for(let pt=J;pt<ee;pt+=u){let ht=Ye+pt*s[2];for(let it=oe;it<he;it+=d){let St=ht+it*s[3],gt=e[St+P];if(a==="max"&&gt>we?we=gt:a==="avg"&&(Ce+=gt,ze++),isNaN(we))break}if(isNaN(we))break}if(isNaN(we))break}let Ue=be+P;b[Ue]=a==="avg"?Ce/ze:we}}}}return y}function ej(e,t){let n=Be(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let A=0;A<t.outDepth;++A){let x=A*s-p,y=x;for(;y<0;)y+=o;let b=Math.min(t.inDepth,c+x);for(let w=0;w<t.outHeight;++w){let k=w*r-h,C=k;for(;C<0;)C+=i;let E=Math.min(t.inHeight,u+k);for(let R=0;R<t.outWidth;++R){let F=R*a-f,D=F;for(;D<0;)D+=l;let P=Math.min(t.inWidth,d+F),T=Number.NEGATIVE_INFINITY,M=-1;for(let U=y;U<b;U+=o){let j=U-x;for(let z=C;z<E;z+=i){let X=z-k;for(let Z=D;Z<P;Z+=l){let J=Z-F,ee=e.get(m,U,z,Z,g);ee>=T&&(T=ee,M=j*u*d+X*u+J)}}}n.set(M,m,A,w,R,g)}}}return n}function tj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ne(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))d=Pr({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=Ry(p,r.shape,r.dtype,h,u,"avg");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var nj={kernelName:Sa,backendName:"cpu",kernelFunc:tj};function sj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Ne(r,"avgPool3d");let u=N.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=kS(d,r.shape,r.dtype,v.computeStrides(r.shape),u,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var rj={kernelName:Mc,backendName:"cpu",kernelFunc:sj};function aj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Ne([r,a],"avgPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=u.strideDepth,p=u.strideHeight,h=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,A=u.dilationDepth,x=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,C=b-1-u.padInfo.front,E=k-1-u.padInfo.left,R=w-1-u.padInfo.top,F=Be(a.shape,"float32"),D=1/(f*m*g),P=n.bufferSync(r);for(let T=0;T<u.batchSize;++T)for(let M=0;M<u.inChannels;++M)for(let U=0;U<u.inDepth;++U)for(let j=0;j<u.inHeight;++j)for(let z=0;z<u.inWidth;++z){let X=U-C,Z=j-R,J=z-E,ee=0;for(let ne=0;ne<b;ne+=A){let Q=(X+ne)/d;if(!(Q<0||Q>=u.outDepth||Math.floor(Q)!==Q))for(let te=0;te<w;te+=x){let oe=(Z+te)/p;if(!(oe<0||oe>=u.outHeight||Math.floor(oe)!==oe))for(let he=0;he<k;he+=y){let be=(J+he)/h;if(be<0||be>=u.outWidth||Math.floor(be)!==be)continue;ee+=P.get(T,Q,oe,be,M)}}}F.set(ee*D,T,U,j,z,M)}return n.makeTensorInfo(F.shape,F.dtype,F.values)}var oj={kernelName:sh,backendName:"cpu",kernelFunc:aj};function ij(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Ne([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=N.computePool2DInfo(o.shape,i,l,1,c),d=u.strideHeight,p=u.strideWidth,h=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,A=u.effectiveFilterHeight,x=u.effectiveFilterWidth,y=x-1-u.padInfo.left,b=A-1-u.padInfo.top,w=Be(o.shape,"float32"),k=1/(h*f),C=n.data.get(r.dataId).values,E=Be(r.shape,"float32",C);for(let R=0;R<u.batchSize;++R)for(let F=0;F<u.inChannels;++F)for(let D=0;D<u.inHeight;++D)for(let P=0;P<u.inWidth;++P){let T=D-b,M=P-y,U=0;for(let j=0;j<A;j+=m){let z=(T+j)/d;if(!(z<0||z>=u.outHeight||Math.floor(z)!==z))for(let X=0;X<x;X+=g){let Z=(M+X)/p;if(Z<0||Z>=u.outWidth||Math.floor(Z)!==Z)continue;U+=E.get(R,z,Z,F)}}w.set(U*k,R,D,P,F)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var lj={kernelName:nh,backendName:"cpu",kernelFunc:ij};function uj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;v.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ne([r,i,l,a,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);let u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(l.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,A=h.length,x=p.length,y=d.length,b=0,w=0,k=0,C=0;for(let E=0;E<u.length;++E)m[E]=f[b++]+(u[E]-d[w++])*h[k++]/Math.sqrt(p[C++]+c),b>=g&&(b=0),w>=y&&(w=0),k>=A&&(k=0),C>=x&&(C=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var cj={kernelName:za,backendName:"cpu",kernelFunc:uj};function dj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Ne([r],"batchToSpaceND");let i=a.reduce((A,x)=>A*x),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=$t({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Ds({inputs:{x:h},backend:n,attrs:{perm:c}}),m=$t({inputs:{x:f},backend:n,attrs:{shape:u}}),g=pl({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var pj={kernelName:ni,backendName:"cpu",kernelFunc:dj};function hj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=wy(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var fj={kernelName:rh,backendName:"cpu",kernelFunc:hj};function mj(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var gj={kernelName:ah,backendName:"cpu",kernelFunc:mj},Aj=mt(Ur,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),yj={kernelName:Ur,backendName:"cpu",kernelFunc:Aj},xj=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){let u=i[c],d=l[c];s[c]=Math.hypot(u,d)}return n.makeOutput(s,t.shape,"float32")},bj={kernelName:Lc,backendName:"cpu",kernelFunc:xj};function Wu(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var vj={kernelName:Uc,backendName:"cpu",kernelFunc:Wu};function Vu(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(m=>m.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>v.sizeFromShape(m.shape)>0);if(i.length===1)return Pr({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(N.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>dl({inputs:{input:b},backend:n})),g=i.map(b=>Wu({inputs:{input:b},backend:n})),A=Vu({inputs:m,backend:n,attrs:{axis:a}}),x=Vu({inputs:g,backend:n,attrs:{axis:a}}),y=As({inputs:{real:A,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(x),y}let c=i.map(m=>{let g=v.sizeFromShape(m.shape.slice(a));return $t({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=N.computeOutShape(c.map(m=>m.shape),1);let d=c[0].shape[0]===1,p=ky(u,o,t[0].dtype,d),h=N.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,p);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var wj={kernelName:si,backendName:"cpu",kernelFunc:Vu};function SS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s;Ne([r,a],"conv2d");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,A=p.padInfo.left,x=p.padInfo.top,y=p.dataFormat==="channelsLast",b=new nn(p.outShape,r.dtype),w=v.computeStrides(r.shape),k=v.computeStrides(a.shape),C=w[0],E=y?w[1]:w[2],R=y?w[2]:1,F=y?1:w[1],D=b.strides[0],P=y?b.strides[1]:b.strides[2],T=y?b.strides[2]:1,M=y?1:b.strides[1],U=n.data.get(r.dataId).values,j=n.data.get(a.dataId).values,z=b.values;for(let X=0;X<p.batchSize;++X){let Z=X*C,J=X*D;for(let ee=0;ee<p.outHeight;++ee){let ne=J+ee*P,Q=ee*p.strideHeight-x;for(let te=0;te<h;++te){let oe=Q+te*m;if(oe<0||oe>=p.inHeight)continue;let he=te*k[0],be=Z+oe*E;for(let we=0;we<p.outWidth;++we){let Ce=ne+we*T,ze=we*p.strideWidth-A;for(let Ue=0;Ue<f;++Ue){let Xe=ze+Ue*g;if(Xe<0||Xe>=p.inWidth)continue;let Ye=he+Ue*k[1],pt=be+Xe*R,ht=Ye;for(let it=0;it<p.inChannels;++it){let St=U[pt+it*F];for(let gt=0;gt<p.outChannels;++gt)z[Ce+gt*M]+=St*j[ht+gt];ht+=p.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,z)}var kj={kernelName:Na,backendName:"cpu",kernelFunc:SS};function Sj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;Ne([r,a],"conv2dBackpropFilter");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,A=p.dataFormat==="channelsLast",x=new nn(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,C=new nn(r.shape,r.dtype,w),E=new nn(a.shape,a.dtype,k);for(let R=0;R<m;++R){let F=Math.max(0,Math.ceil((b-R)/h)),D=Math.min(p.outHeight,(p.inHeight+b-R)/h);for(let P=0;P<g;++P){let T=Math.max(0,Math.ceil((y-P)/f)),M=Math.min(p.outWidth,(p.inWidth+y-P)/f);for(let U=0;U<p.inChannels;++U)for(let j=0;j<p.outChannels;++j){let z=0;for(let X=0;X<p.batchSize;++X)for(let Z=F;Z<D;++Z){let J=R+Z*h-b;for(let ee=T;ee<M;++ee){let ne=P+ee*f-y;A?z+=C.get(X,J,ne,U)*E.get(X,Z,ee,j):z+=C.get(X,U,J,ne)*E.get(X,j,Z,ee)}}x.set(z,R,P,U,j)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var Ij={kernelName:oh,backendName:"cpu",kernelFunc:Sj};function Cj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s;Ne([r,a],"conv2dBackpropInput");let d=v.computeStrides(a.shape),p=v.computeStrides(r.shape),h=N.convertConv2DDataFormat(c),f=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,h),m=new nn(f.inShape,"float32"),g=m.values,A=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[y,b,w]=d,{batchSize:k,filterHeight:C,filterWidth:E,inChannels:R,inHeight:F,inWidth:D,outChannels:P,outHeight:T,outWidth:M,strideHeight:U,strideWidth:j}=f;h=f.dataFormat;let z=C-1-f.padInfo.top,X=E-1-f.padInfo.left,Z=h==="channelsLast",J=m.strides[0],ee=Z?m.strides[1]:m.strides[2],ne=Z?m.strides[2]:1,Q=Z?1:m.strides[1],te=p[0],oe=Z?p[1]:p[2],he=Z?p[2]:1,be=Z?1:p[1];for(let we=0;we<k;++we)for(let Ce=0;Ce<R;++Ce)for(let ze=0;ze<F;++ze){let Ue=ze-z,Xe=Math.max(0,Math.ceil(Ue/U)),Ye=Math.min(T,(C+Ue)/U);for(let pt=0;pt<D;++pt){let ht=pt-X,it=Math.max(0,Math.ceil(ht/j)),St=Math.min(M,(E+ht)/j),gt=0;for(let _t=Xe;_t<Ye;++_t){let ks=_t*U-Ue;for(let bn=it;bn<St;++bn){let nr=bn*j-ht,Fn=te*we+oe*_t+he*bn,us=y*(C-1-ks)+b*(E-1-nr)+w*Ce;for(let Ls=0;Ls<P;++Ls){let Ss=A[Fn+be*Ls],vn=x[us+Ls];gt+=Ss*vn}}}let Tt=J*we+ee*ze+ne*pt+Q*Ce;g[Tt]=gt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var Tj={kernelName:Ea,backendName:"cpu",kernelFunc:Cj};function Nj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Ne([r,a],"conv3d");let c=N.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:u,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=c,A=g.front,x=g.left,y=g.top,b=new nn(c.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,C=b.values,E=v.computeStrides(r.shape),R=v.computeStrides(a.shape);for(let F=0;F<c.batchSize;++F){let D=F*E[0],P=F*b.strides[0];for(let T=0;T<c.outDepth;++T){let M=P+T*b.strides[1],U=T*c.strideDepth-A;for(let j=0;j<u;++j){let z=U+j*h;if(z<0||z>=c.inDepth)continue;let X=j*R[0],Z=D+z*E[1];for(let J=0;J<c.outHeight;++J){let ee=M+J*b.strides[2],ne=J*c.strideHeight-y;for(let Q=0;Q<d;++Q){let te=ne+Q*f;if(te<0||te>=c.inHeight)continue;let oe=X+Q*R[1],he=Z+te*E[2];for(let be=0;be<c.outWidth;++be){let we=ee+be*c.outChannels,Ce=be*c.strideWidth-x;for(let ze=0;ze<p;++ze){let Ue=Ce+ze*m;if(Ue<0||Ue>=c.inWidth)continue;let Xe=oe+ze*R[2],Ye=he+Ue*c.inChannels,pt=Xe;for(let ht=0;ht<c.inChannels;++ht){let it=w[Ye+ht];for(let St=0;St<c.outChannels;++St)C[we+St]+=it*k[pt+St];pt+=c.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var Ej={kernelName:Bc,backendName:"cpu",kernelFunc:Nj};function Rj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Ne([r,a],"conv3dBackpropFilterV2");let c=v.computeStrides(r.shape),u=v.computeStrides(a.shape),d=N.computeConv3DInfo(r.shape,l,o,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,A=d.filterWidth,x=new nn(d.filterShape,"float32"),y=x.values,[b,w,k,C]=x.strides,E=n.data.get(a.dataId).values,[R,F,D,P]=u,T=n.data.get(r.dataId).values,[M,U,j,z]=c,X=d.padInfo.front,Z=d.padInfo.left,J=d.padInfo.top;for(let ee=0;ee<m;++ee){let ne=Math.max(0,Math.ceil((X-ee)/p)),Q=Math.min(d.outDepth,(d.inDepth+X-ee)/p),te=ee*b;for(let oe=0;oe<g;++oe){let he=Math.max(0,Math.ceil((J-oe)/h)),be=Math.min(d.outHeight,(d.inHeight+J-oe)/h),we=oe*w+te;for(let Ce=0;Ce<A;++Ce){let ze=Math.max(0,Math.ceil((Z-Ce)/f)),Ue=Math.min(d.outWidth,(d.inWidth+Z-Ce)/f),Xe=Ce*k+we;for(let Ye=0;Ye<d.inChannels;++Ye){let pt=Ye*C+Xe;for(let ht=0;ht<d.outChannels;++ht){let it=0;for(let St=0;St<d.batchSize;++St){let gt=St*M,Tt=St*R;for(let _t=ne;_t<Q;++_t){let bn=(ee+_t*p-X)*U+gt,nr=_t*F+Tt;for(let Fn=he;Fn<be;++Fn){let Ls=(oe+Fn*h-J)*j+bn,Ss=Fn*D+nr;for(let vn=ze;vn<Ue;++vn){let En=(Ce+vn*f-Z)*z+Ls,br=vn*P+Ss;it+=T[En+Ye]*E[br+ht]}}}}y[pt+ht]=it}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var $j={kernelName:ih,backendName:"cpu",kernelFunc:Rj};function Dj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Ne([r],"conv3dBackpropInputV2");let c=v.computeStrides(r.shape),u=v.computeStrides(a.shape),d=N.computeConv3DInfo(l,a.shape,i,1,o),p=new nn(d.inShape,"float32"),h=p.values,[f,m,g,A]=p.strides,x=n.data.get(r.dataId).values,[y,b,w,k]=c,C=n.data.get(a.dataId).values,[E,R,F,D]=u,{batchSize:P,filterDepth:T,filterHeight:M,filterWidth:U,inChannels:j,inDepth:z,inHeight:X,inWidth:Z,outChannels:J,outDepth:ee,outHeight:ne,outWidth:Q,strideDepth:te,strideHeight:oe,strideWidth:he}=d,be=T-1-d.padInfo.front,we=M-1-d.padInfo.top,Ce=U-1-d.padInfo.left;for(let ze=0;ze<P;++ze)for(let Ue=0;Ue<j;++Ue)for(let Xe=0;Xe<z;++Xe){let Ye=Xe-be,pt=Math.max(0,Math.ceil(Ye/te)),ht=Math.min(ee,(T+Ye)/te);for(let it=0;it<X;++it){let St=it-we,gt=Math.max(0,Math.ceil(St/oe)),Tt=Math.min(ne,(M+St)/oe);for(let _t=0;_t<Z;++_t){let ks=_t-Ce,bn=Math.max(0,Math.ceil(ks/he)),nr=Math.min(Q,(U+ks)/he),Fn=0;for(let us=pt;us<ht;++us){let Ls=us*te-Ye;for(let Ss=gt;Ss<Tt;++Ss){let vn=Ss*oe-St;for(let xr=bn;xr<nr;++xr){let En=xr*he-ks,br=y*ze+b*us+w*Ss+k*xr,vr=E*(T-1-Ls)+R*(M-1-vn)+F*(U-1-En)+D*Ue;for(let ca=0;ca<J;++ca){let yc=x[br+ca],sr=C[vr+ca];Fn+=yc*sr}}}}h[f*ze+m*Xe+g*it+A*_t+Ue]=Fn}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var _j={kernelName:lh,backendName:"cpu",kernelFunc:Dj},Pj=mt(Ra,e=>Math.cos(e)),Fj={kernelName:Ra,backendName:"cpu",kernelFunc:Pj},Oj=mt($a,e=>Math.cosh(e)),Mj={kernelName:$a,backendName:"cpu",kernelFunc:Oj};function zj(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,[u,d,p,h]=r.shape,f=a.shape[0],[m,g]=i,A=Be([f,m,g,h],"float32"),x=n.data.get(a.dataId).values,y=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,w=v.computeStrides(r.shape),k=v.computeStrides(A.shape);for(let C=0;C<f;C++){let E=C*4,R=x[E],F=x[E+1],D=x[E+2],P=x[E+3],T=y[C];if(T>=u)continue;let M=m>1?(D-R)*(d-1)/(m-1):0,U=g>1?(P-F)*(p-1)/(g-1):0;for(let j=0;j<m;j++){let z=m>1?R*(d-1)+j*M:.5*(R+D)*(d-1);if(z<0||z>d-1){for(let X=0;X<g;X++)for(let Z=0;Z<h;Z++){let J=Z+X*k[2]+j*k[1]+C*k[0];A.values[J]=c}continue}if(l==="bilinear"){let X=Math.floor(z),Z=Math.ceil(z),J=z-X;for(let ee=0;ee<g;ee++){let ne=g>1?F*(p-1)+ee*U:.5*(F+P)*(p-1);if(ne<0||ne>p-1){for(let he=0;he<h;he++){let be=he+ee*k[2]+j*k[1]+C*k[0];A.values[be]=c}continue}let Q=Math.floor(ne),te=Math.ceil(ne),oe=ne-Q;for(let he=0;he<h;he++){let be=he+Q*w[2]+X*w[1]+T*w[0],we=b[be];be=he+te*w[2]+X*w[1]+T*w[0];let Ce=b[be];be=he+Q*w[2]+Z*w[1]+T*w[0];let ze=b[be];be=he+te*w[2]+Z*w[1]+T*w[0];let Ue=b[be],Xe=we+(Ce-we)*oe,Ye=ze+(Ue-ze)*oe;be=he+ee*k[2]+j*k[1]+C*k[0],A.values[be]=Xe+(Ye-Xe)*J}}}else for(let X=0;X<g;++X){let Z=g>1?F*(p-1)+X*U:.5*(F+P)*(p-1);if(Z<0||Z>p-1){for(let ne=0;ne<h;ne++){let Q=ne+X*k[2]+j*k[1]+C*k[0];A.values[Q]=c}continue}let J=Math.round(Z),ee=Math.round(z);for(let ne=0;ne<h;ne++){let Q=ne+J*w[2]+ee*w[1]+T*w[0],te=ne+X*k[2]+j*k[1]+C*k[0];A.values[te]=b[Q]}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var Lj={kernelName:ai,backendName:"cpu",kernelFunc:zj};function Bj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Ne(r,"cumsum");let l=N.getAxesPermutation([a],r.shape.length),c=r;l!=null&&(c=Ds({inputs:{x:r},backend:n,attrs:{perm:l}}));let u=N.getInnerMostAxes(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let d=Ln(c.dtype,"int32"),p=v.makeZerosTypedArray(v.sizeFromShape(c.shape),d),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(A,x)=>A+f-x-1:(A,x)=>A+x;for(let A=0;A<h.length;A+=f)for(let x=0;x<f;x++){let y=m(A,x);if(x===0)p[y]=o?0:h[y];else{let b=m(A,x-1);p[y]=o?h[b]+p[b]:h[y]+p[b]}}let g=n.makeTensorInfo(c.shape,d,p);if(l!=null){let A=N.getUndoAxesPermutation(l),x=Ds({inputs:{x:g},backend:n,attrs:{perm:A}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),x}return g}var Wj={kernelName:ri,backendName:"cpu",kernelFunc:Bj};function Vj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=wy(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=P7(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var Uj={kernelName:uh,backendName:"cpu",kernelFunc:Vj};function Gj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;v.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],d=l*a,p=c*a,h=u/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*d*p*h),g=0;for(let A=0;A<i;++A)for(let x=0;x<d;++x){let y=Math.floor(x/a),b=x%a;for(let w=0;w<p;++w){let k=Math.floor(w/a),C=w%a,E=(b*a+C)*h;for(let R=0;R<h;++R){let D=R+E+u*(k+c*(y+l*A));m[g++]=f[D]}}}return n.makeTensorInfo([i,d,p,h],r.dtype,m)}var Hj={kernelName:oi,backendName:"cpu",kernelFunc:Gj};function IS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s;Ne([r,a],"depthwiseConv2DNative");let u=v.computeStrides(r.shape),d=v.computeStrides(a.shape),p=l;p==null&&(p=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let h=N.computeConv2DInfo(r.shape,a.shape,o,p,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:A,padInfo:x}=h,y=x.left,b=x.top,w=h.outChannels/h.inChannels,k=new nn(h.outShape,r.dtype),C=n.data.get(r.dataId).values,E=n.data.get(a.dataId).values,R=k.values;for(let F=0;F<h.batchSize;++F){let D=F*u[0],P=F*k.strides[0];for(let T=0;T<h.outHeight;++T){let M=P+T*k.strides[1],U=T*h.strideHeight-b;for(let j=0;j<f;++j){let z=U+j*g;if(z<0||z>=h.inHeight)continue;let X=j*d[0],Z=D+z*u[1];for(let J=0;J<h.outWidth;++J){let ee=M+J*k.strides[2],ne=J*h.strideWidth-y;for(let Q=0;Q<m;++Q){let te=ne+Q*A;if(te<0||te>=h.inWidth)continue;let oe=X+Q*d[1],he=Z+te*h.inChannels,be=ee,we=oe;for(let Ce=0;Ce<h.inChannels;++Ce){let ze=C[he+Ce];for(let Ue=0;Ue<w;++Ue)R[be+Ue]+=ze*E[we+Ue];be+=w,we+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var jj={kernelName:Da,backendName:"cpu",kernelFunc:IS};function qj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s;Ne([r,a],"depthwiseConv2dNativeBackpropFilter");let d=N.computeConv2DInfo(r.shape,u,o,i,l,c,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new nn(d.filterShape,"float32"),A=d.padInfo.left,x=d.padInfo.top,y=d.outChannels/d.inChannels,b=n.data.get(r.dataId).values,w=new nn(r.shape,r.dtype,b),k=n.data.get(a.dataId).values,C=new nn(a.shape,a.dtype,k);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((x-E)/p)),F=Math.min(d.outHeight,(d.inHeight+x-E)/p);for(let D=0;D<m;++D){let P=Math.max(0,Math.ceil((A-D)/h)),T=Math.min(d.outWidth,(d.inWidth+A-D)/h);for(let M=0;M<d.outChannels;++M){let U=Math.trunc(M/y),j=M%y,z=0;for(let X=0;X<d.batchSize;++X)for(let Z=R;Z<F;++Z){let J=E+Z*p-x;for(let ee=P;ee<T;++ee){let ne=D+ee*h-A;z+=w.get(X,J,ne,U)*C.get(X,Z,ee,M)}}g.set(z,E,D,U,j)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var Xj={kernelName:ch,backendName:"cpu",kernelFunc:qj};function Kj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s;Ne([r,a],"depthwiseConv2DNativeBackpropInput");let d=v.computeStrides(r.shape),p=v.computeStrides(a.shape),h=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),f=new nn(h.inShape,"float32"),m=f.values,[g,A,x]=f.strides,y=n.data.get(r.dataId).values,[b,w,k]=d,C=n.data.get(a.dataId).values,[E,R,F]=p,{batchSize:D,filterHeight:P,filterWidth:T,inChannels:M,inHeight:U,inWidth:j,outChannels:z,outHeight:X,outWidth:Z,strideHeight:J,strideWidth:ee}=h,ne=P-1-h.padInfo.top,Q=T-1-h.padInfo.left,te=z/M;for(let oe=0;oe<D;++oe)for(let he=0;he<M;++he)for(let be=0;be<U;++be){let we=be-ne,Ce=Math.max(0,Math.ceil(we/J)),ze=Math.min(X,(P+we)/J);for(let Ue=0;Ue<j;++Ue){let Xe=Ue-Q,Ye=Math.max(0,Math.ceil(Xe/ee)),pt=Math.min(Z,(T+Xe)/ee),ht=0;for(let it=Ce;it<ze;++it){let St=it*J-we;for(let gt=Ye;gt<pt;++gt){let Tt=gt*ee-Xe,_t=b*oe+w*it+k*gt,ks=E*(P-1-St)+R*(T-1-Tt)+F*he;for(let bn=0;bn<te;++bn){let nr=he*te+bn,Fn=y[_t+nr],us=C[ks+bn];ht+=Fn*us}}}m[g*oe+A*be+x*Ue+he]=ht}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var Zj={kernelName:dh,backendName:"cpu",kernelFunc:Kj};function Yj(e){let{inputs:t,backend:n}=e,{x:s}=t,r=v.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=Be([r,r],s.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*r+c]=a[c];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var Jj={kernelName:ph,backendName:"cpu",kernelFunc:Yj},Qj={kernelName:Wc,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,d=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:A,outWidth:x,padInfo:y,strideHeight:b,strideWidth:w,filterHeight:k,filterWidth:C,dilationHeight:E,dilationWidth:R,outShape:F}=N.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),D=v.sizeFromShape(F),P=F.length,T=v.getArrayFromDType(s.dtype,D);for(let U=0;U<h;++U)for(let j=0;j<A;++j){let z=j*b-y.top;for(let X=0;X<x;++X){let Z=X*w-y.left;for(let J=0;J<g;++J){let ee=Number.MIN_SAFE_INTEGER;for(let Q=0;Q<k;++Q){let te=z+Q*E;if(te>=0&&te<f)for(let oe=0;oe<C;++oe){let he=Z+oe*R;if(he>=0&&he<m){let be=v.locToIndex([U,te,he,J],u,v.computeStrides(s.shape)),we=v.locToIndex([Q,oe,J],p,v.computeStrides(r.shape)),Ce=c[be]+d[we];Ce>ee&&(ee=Ce)}}}let ne=v.locToIndex([U,j,X,J],P,v.computeStrides(F));T[ne]=ee}}}return{dataId:l.write(v.toTypedArray(T,s.dtype),F,s.dtype),shape:F,dtype:s.dtype}}},eq={kernelName:fh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=v.toNestedArray(s.shape,c.data.get(s.dataId).values),d=v.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:A,padInfo:x,strideHeight:y,strideWidth:b,filterHeight:w,filterWidth:k,dilationHeight:C,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${fh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let F=v.toNestedArray(R,c.data.get(a.dataId).values),D=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<p;++T)for(let M=0;M<g;++M){let U=M*y-x.top;for(let j=0;j<A;++j){let z=j*b-x.left;for(let X=0;X<m;++X){let Z=Number.MIN_SAFE_INTEGER,J=0,ee=0;for(let ne=0;ne<w;++ne){let Q=U+ne*C;if(Q>=0&&Q<h)for(let te=0;te<k;++te){let oe=z+te*E;if(oe>=0&&oe<f){let he=u[T][Q][oe][X]+d[ne][te][X];he>Z&&(Z=he,J=ne,ee=te)}}}D[J][ee][X]+=F[T][M][j][X]}}}return{dataId:c.write(v.toTypedArray(D,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},tq={kernelName:hh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=v.toNestedArray(s.shape,c.data.get(s.dataId).values),d=v.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:A,padInfo:x,strideHeight:y,strideWidth:b,filterHeight:w,filterWidth:k,dilationHeight:C,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${hh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let F=v.toNestedArray(R,c.data.get(a.dataId).values),D=v.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<p;++T)for(let M=0;M<g;++M){let U=M*y-x.top;for(let j=0;j<A;++j){let z=j*b-x.left;for(let X=0;X<m;++X){let Z=Number.MIN_SAFE_INTEGER,J=U<0?0:U,ee=z<0?0:z;for(let ne=0;ne<w;++ne){let Q=U+ne*C;if(Q>=0&&Q<h)for(let te=0;te<k;++te){let oe=z+te*E;if(oe>=0&&oe<f){let he=u[T][Q][oe][X]+d[ne][te][X];he>Z&&(Z=he,J=Q,ee=oe)}}}D[T][J][ee][X]+=F[T][M][j][X]}}}return{dataId:c.write(v.toTypedArray(D,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function Ud(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"sum");let i;r.dtype==="bool"?i=Fo({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Pr({inputs:{x:r},backend:n});let l=i.shape.length,c=v.parseAxisParam(a,i.shape),u=N.getAxesPermutation(c,l),d=c,p=i;u!=null&&(p=Ds({inputs:{x:i},backend:n,attrs:{perm:u}}),d=N.getInnerMostAxes(d.length,l)),N.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=N.computeOutAndReduceShapes(p.shape,d),m=N.upcastType(p.dtype,"int32"),g=lm(n,h,m),A=v.sizeFromShape(f),x=n.data.get(g.dataId).values,y=n.data.get(p.dataId).values;for(let b=0;b<x.length;++b){let w=b*A,k=0;for(let C=0;C<A;++C)k+=y[w+C];x[b]=k}if(o){let b=N.expandShapeToKeepDim(g.shape,c),w=g;g=$t({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(w)}return n.disposeIntermediateTensorInfo(i),u!=null&&n.disposeIntermediateTensorInfo(p),g}var nq={kernelName:oo,backendName:"cpu",kernelFunc:Ud};function sq(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:A,expandDims:x}=N.getEinsumPermutation(h,l[g]),y;N.isIdentityPermutation(A)?y=a[g]:(y=Ds({inputs:{x:a[g]},backend:n,attrs:{perm:A}}),f.push(y));let b=y.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(y.shape,b)||(y=$t({inputs:{x:y},backend:n,attrs:{shape:b}}),f.push(y)),p===null?p=y:(p=um({inputs:{a:y,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Ud({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var rq={kernelName:Vc,backendName:"cpu",kernelFunc:sq};function aq(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Ne([s,r],"eluGrad");let a=new Float32Array(v.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let c=o[l];c>=1?a[l]=i[l]:a[l]=i[l]*(c+1)}return n.makeTensorInfo(r.shape,"float32",a)}var oq={kernelName:mh,backendName:"cpu",kernelFunc:aq},iq=N.ERF_P,lq=N.ERF_A1,uq=N.ERF_A2,cq=N.ERF_A3,dq=N.ERF_A4,pq=N.ERF_A5,hq=mt(Jl,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+iq*n);return t*(1-((((pq*s+dq)*s+cq)*s+uq)*s+lq)*s*Math.exp(-n*n))}),fq={kernelName:Jl,backendName:"cpu",kernelFunc:hq};function dm(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),$t({inputs:{x:r},backend:n,attrs:{shape:i}})}var mq={kernelName:li,backendName:"cpu",kernelFunc:dm},gq=Yt((e,t)=>e/t),$y=yn(_a,gq),Dy={kernelName:_a,backendName:"cpu",kernelFunc:$y};function CS(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[r,a],u=v.sizeFromShape(c),d=v.getTypedArrayFromDType("float32",u),p=v.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){let A=pl({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=pl({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=As({inputs:{real:A,imag:x},backend:n}),{real:b,imag:w}=Aq(y,t,n),k=N.mergeRealAndImagArrays(b,w);for(let C=0;C<a;C++){let E=N.getComplexWithIndex(k,C);d[g*a+C]=E.real,p[g*a+C]=E.imag}n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(y)}let h=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",p),m=As({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function Aq(e,t,n){let s=v.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(yq(s)){let i=_y(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(l,"float32",i.real),u=n.makeTensorInfo(l,"float32",i.imag),d=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),p=Pr({inputs:{x:d},backend:n}),h=Dy.kernelFunc({inputs:{a:c,b:d},backend:n}),f=Dy.kernelFunc({inputs:{a:u,b:p},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=N.mergeRealAndImagArrays(a,o),l=xq(i,s,t);return N.splitRealAndImagArrays(l)}}function yq(e){return(e&e-1)==0}function _y(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=N.mergeRealAndImagArrays(e,t),o=n/2,i=N.complexWithEvenIndex(a),l=i.real,c=i.imag,u=[l.length],d=r.makeTensorInfo(u,"float32",l),p=r.makeTensorInfo(u,"float32",c),h=As({inputs:{real:d,imag:p},backend:r}),f=N.complexWithOddIndex(a),m=f.real,g=f.imag,A=[m.length],x=r.makeTensorInfo(A,"float32",m),y=r.makeTensorInfo(A,"float32",g),b=As({inputs:{real:x,imag:y},backend:r}),w=_y(l,c,o,s,r),k=w.real,C=w.imag,E=[k.length],R=r.makeTensorInfo(E,"float32",k),F=r.makeTensorInfo(E,"float32",C),D=As({inputs:{real:R,imag:F},backend:r}),P=_y(m,g,o,s,r),T=P.real,M=P.imag,U=[T.length],j=r.makeTensorInfo(U,"float32",T),z=r.makeTensorInfo(U,"float32",M),X=As({inputs:{real:j,imag:z},backend:r}),Z=N.exponents(n,s),J=[Z.real.length],ee=r.makeTensorInfo(J,"float32",Z.real),ne=r.makeTensorInfo(J,"float32",Z.imag),Q=As({inputs:{real:ee,imag:ne},backend:r}),te=um({inputs:{a:Q,b:X},backend:r}),oe=Wd({inputs:{a:D,b:te},backend:r}),he=Ny({inputs:{a:D,b:te},backend:r}),be=dl({inputs:{input:oe},backend:r}),we=dl({inputs:{input:he},backend:r}),Ce=Wu({inputs:{input:oe},backend:r}),ze=Wu({inputs:{input:he},backend:r}),Ue=Vu({inputs:[be,we],backend:r,attrs:{axis:0}}),Xe=Vu({inputs:[Ce,ze],backend:r,attrs:{axis:0}}),Ye=r.data.get(Ue.dataId).values,pt=r.data.get(Xe.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(he),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(Ce),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(ze),r.disposeIntermediateTensorInfo(Ue),r.disposeIntermediateTensorInfo(Xe),{real:Ye,imag:pt}}function xq(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=N.exponent(r*i,t,n),c=N.getComplexWithIndex(e,i);a+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}n&&(a/=t,o/=t),N.assignToTypedArray(s,a,o,r)}return s}function bq(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=$t({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=CS(i,!1,n),c=$t({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var vq={kernelName:gh,backendName:"cpu",kernelFunc:bq};function Py(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||v.inferDtype(r),i=v.getArrayFromDType(o,v.sizeFromShape(s));return kq(i,r,o),t.makeTensorInfo(s,o,i)}var wq={kernelName:Ql,backendName:"cpu",kernelFunc:Py};function kq(e,t,n){e.fill(t)}var Sq={kernelName:ci,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[o,i,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let p=0;p<o;p++){let h=p*l*i*c;for(let f=0;f<i;f++){let m=f*(l*c);for(let g=0;g<l;g++){let A=g*c;for(let x=0;x<c;x++){let y=Math.round(l-g-1),b=h+m+A+x,w=u[b];if(y>=0&&y<l){let k=y*c,C=h+m+k+x;w=u[C]}a[b]=w}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Iq=Yt((e,t)=>Math.floor(e/t)),Cq=yn(Ma,Iq,null,"int32"),Tq={kernelName:Ma,backendName:"cpu",kernelFunc:Cq};function Nq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=SS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=Wd({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=Ey(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var Eq={kernelName:mo,backendName:"cpu",kernelFunc:Nq};function Rq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=IS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=Wd({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=Ey(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var $q={kernelName:go,backendName:"cpu",kernelFunc:Rq};function Dq(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=v.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,c,u,d]=N.prepareAndValidate(s,r);if(c===0)return n.makeTensorInfo(l,s.dtype,[]);let p=n.data.get(r.dataId).values,h=n.bufferSync(s),f=V7(p,h,s.dtype,c,i,u,d,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var _q={kernelName:pi,backendName:"cpu",kernelFunc:Dq};function Pq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Ne([r,a],"gatherV2");let l=v.parseAxisParam(o,r.shape)[0],c=n.data.get(a.dataId).values,u=r.shape[l];for(let b=0;b<c.length;++b){let w=c[b];v.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);let p=v.sizeFromShape(a.shape),h=N.segment_util.collectGatherOpShapeInfo(r,a,l,d),f=$t({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=$t({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],A=n.bufferSync(m),x=n.bufferSync(f),y=U7(x,A,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,y.dtype,y.values)}var Fq={kernelName:di,backendName:"cpu",kernelFunc:Pq};function Oq(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=$t({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=CS(i,!0,n),c=$t({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var Mq={kernelName:Ah,backendName:"cpu",kernelFunc:Oq},zq=mt(eu,e=>Number.isFinite(e)?1:0,"bool"),Lq={kernelName:eu,backendName:"cpu",kernelFunc:zq},Bq=mt(tu,e=>Math.abs(e)===1/0?1:0,"bool"),Wq={kernelName:tu,backendName:"cpu",kernelFunc:Bq},Vq=mt(nu,e=>Number.isNaN(e)?1:0,"bool"),Uq={kernelName:nu,backendName:"cpu",kernelFunc:Vq};function Gq(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=X7(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var Hq={kernelName:yh,backendName:"cpu",kernelFunc:Gq},jq=mt(su,e=>Math.log1p(e)),qq={kernelName:su,backendName:"cpu",kernelFunc:jq},Xq=Yt((e,t)=>e&&t),Kq=yn(Ai,Xq,null,"bool"),Zq={kernelName:Ai,backendName:"cpu",kernelFunc:Kq},Yq=mt(ru,e=>e?0:1,"bool"),Jq={kernelName:ru,backendName:"cpu",kernelFunc:Yq},Qq=Yt((e,t)=>e||t),eX=yn(Gc,Qq,null,"bool"),tX={kernelName:Gc,backendName:"cpu",kernelFunc:eX};function nX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Ne(r,"LRN");let c=r.shape[3],u=c-1,d=n.data.get(r.dataId).values,p=v.sizeFromShape(r.shape),h=new Float32Array(p);function f(m){let g=m%c,A=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,u),y=0;for(;A<=x;A++){let b=d[A];y+=b*b}return y}for(let m=0;m<p;m++){let g=f(m),A=d[m]*Math.pow(o+i*g,-l);h[m]=A}return n.makeTensorInfo(r.shape,r.dtype,h)}var sX={kernelName:Hc,backendName:"cpu",kernelFunc:nX};function rX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s;Ne(o,"LRNGrad");let d=v.sizeFromShape(o.shape),p=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),A=d;for(let x=0;x<A;x++){let y=x%p,b=x-y+Math.max(0,y-i),w=x-y+Math.min(p,y+i+1),k=0;for(let C=b;C<w;C++)k+=Math.pow(f[C],2);k=c*k+l;for(let C=b;C<w;C++){let E=-2*c*u*f[C]*m[x]/k;x===C&&(E+=Math.pow(k,-u)),E*=h[x],g[C]+=E}}return n.makeTensorInfo(o.shape,r.dtype,g)}var aX={kernelName:xh,backendName:"cpu",kernelFunc:rX};function TS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,c=l.length,u=v.parseAxisParam(a,l),d=u,p=N.getAxesPermutation(d,c),h=i.data.get(r.dataId).values;if(p!=null){let b=new Array(c);for(let w=0;w<b.length;w++)b[w]=l[p[w]];h=Iy(h,l,r.dtype,p,b),d=N.getInnerMostAxes(d.length,c),l=b}Ne(r,"max"),N.assertAxesAreInnerMostDims("max",d,c);let[f,m]=N.computeOutAndReduceShapes(l,d),g=v.sizeFromShape(m),A=Z7(h,g,f,r.dtype),x=i.write(A,f,r.dtype),y=f;return o&&(y=N.expandShapeToKeepDim(f,u)),{dataId:x,shape:y,dtype:r.dtype}}var oX={kernelName:Va,backendName:"cpu",kernelFunc:TS};function iX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ne(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))d=Pr({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=Ry(p,r.shape,r.dtype,h,u,"max");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var lX={kernelName:Ga,backendName:"cpu",kernelFunc:iX};function uX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Ne(r,"maxPool3d");let u=N.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=kS(d,r.shape,r.dtype,v.computeStrides(r.shape),u,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var cX={kernelName:jc,backendName:"cpu",kernelFunc:uX};function dX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Ne([r,a],"maxPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=n.bufferSync(a),p=ej(d,u),h=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,A=u.dilationHeight,x=u.dilationWidth,y=u.effectiveFilterDepth,b=u.effectiveFilterHeight,w=u.effectiveFilterWidth,k=y-1-u.padInfo.front,C=w-1-u.padInfo.left,E=b-1-u.padInfo.top,R=Be(a.shape,"float32"),F=n.bufferSync(r);for(let D=0;D<u.batchSize;++D)for(let P=0;P<u.inChannels;++P)for(let T=0;T<u.inDepth;++T)for(let M=0;M<u.inHeight;++M)for(let U=0;U<u.inWidth;++U){let j=T-k,z=M-E,X=U-C,Z=0;for(let J=0;J<y;J+=g){let ee=(j+J)/h;if(!(ee<0||ee>=u.outDepth||Math.floor(ee)!==ee))for(let ne=0;ne<b;ne+=A){let Q=(z+ne)/f;if(!(Q<0||Q>=u.outHeight||Math.floor(Q)!==Q))for(let te=0;te<w;te+=x){let oe=(X+te)/m;if(oe<0||oe>=u.outWidth||Math.floor(oe)!==oe)continue;let he=y*b*w-1-p.get(D,ee,Q,oe,P),be=J*b*w+ne*w+te,we=he===be?1:0;if(we===0)continue;Z+=F.get(D,ee,Q,oe,P)*we}}}R.set(Z,D,T,M,U,P)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var pX={kernelName:vh,backendName:"cpu",kernelFunc:dX};function hX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Ne([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=n.data.get(i.dataId).values,f=Be(p.outShape,i.dtype,wS(h,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,A=p.dilationHeight,x=p.dilationWidth,y=p.effectiveFilterHeight,b=p.effectiveFilterWidth,w=b-1-p.padInfo.left,k=y-1-p.padInfo.top,C=Be(i.shape,"float32"),E=n.data.get(r.dataId).values,R=Be(r.shape,"float32",E);for(let F=0;F<p.batchSize;++F)for(let D=0;D<p.inChannels;++D)for(let P=0;P<p.inHeight;++P)for(let T=0;T<p.inWidth;++T){let M=P-k,U=T-w,j=0;for(let z=0;z<y;z+=A){let X=(M+z)/m;if(!(X<0||X>=p.outHeight||Math.floor(X)!==X))for(let Z=0;Z<b;Z+=x){let J=(U+Z)/g;if(J<0||J>=p.outWidth||Math.floor(J)!==J)continue;let ee=y*b-1-f.get(F,X,J,D),ne=z*b+Z,Q=ee===ne?1:0;if(Q===0)continue;j+=R.get(F,X,J,D)*Q}}C.set(j,F,P,T,D)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var fX={kernelName:bh,backendName:"cpu",kernelFunc:hX};function mX(e,t,n,s,r){let a=v.computeStrides(t),o=Ry(e,t,n,a,r,"max"),i=wS(e,t,n,r,!0,s);return[o.values,i.values]}var gX={kernelName:wh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Ne(s,"MaxPoolWithArgmax");let c=l.data.get(s.dataId).values,u=N.computePool2DInfo(s.shape,r,a,[1,1],o),[d,p]=mX(c,s.shape,s.dtype,i,u),h=l.write(d,u.outShape,s.dtype),f=l.write(p,u.outShape,s.dtype);return[{dataId:h,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function AX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=v.parseAxisParam(a,r.shape),c=N.computeOutAndReduceShapes(r.shape,i)[1],u=v.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=Fo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(h);let f=$y({inputs:{a:h,b:p},backend:n});d.push(f);let m=Ud({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var yX={kernelName:Ha,backendName:"cpu",kernelFunc:AX};function xX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ne(r,"min");let i=v.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Ds({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let A=0;A<f.length;++A){let x=A*h,y=m[x];for(let b=0;b<h;++b){let w=m[x+b];(Number.isNaN(w)||w<y)&&(y=w)}f[A]=y}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let A=N.expandShapeToKeepDim(d,i),x=$t({inputs:{x:g},backend:n,attrs:{shape:A}});return n.disposeIntermediateTensorInfo(g),x}return g}var bX={kernelName:ja,backendName:"cpu",kernelFunc:xX};function vX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Ne(r,"mirrorPad");let i=a.map((y,b)=>y[0]+r.shape[b]+y[1]),l=a.map(y=>y[0]),c=a.map((y,b)=>y[0]+r.shape[b]),u=o==="reflect"?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,h=v.computeStrides(r.shape),f=v.sizeFromShape(i),m=i.length,g=v.computeStrides(i),A=v.getTypedArrayFromDType(r.dtype,f);for(let y=0;y<f;y++){let b=v.indexToLoc(y,m,g);for(let k=0;k<m;k++)b[k]<l[k]?b[k]=l[k]*2-b[k]-u:b[k]>=c[k]&&(b[k]=(c[k]-1)*2-b[k]+u);b=b.map((k,C)=>k-l[C]);let w=v.locToIndex(b,p,h);A[y]=d[w]}return{dataId:n.write(A,i,r.dtype),shape:i,dtype:r.dtype}}var wX={kernelName:Xa,backendName:"cpu",kernelFunc:vX},kX=Yt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),SX=yn(au,kX),IX={kernelName:au,backendName:"cpu",kernelFunc:SX},CX=Jo(Yp());function NS(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=v.parseAxisParam([i],r.shape),c=TS({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=N.expandShapeToKeepDim(c.shape,l),d=$t({inputs:{x:c},backend:n,attrs:{shape:u}}),p=Ny({inputs:{a:r,b:d},backend:n}),h=L7({inputs:{x:p},backend:n}),f=Ud({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=$t({inputs:{x:f},backend:n,attrs:{shape:u}}),g=$y({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var TX={kernelName:io,backendName:"cpu",kernelFunc:NS};function NX(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Ne(r,"multinomial");let l=i?r:NS({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],d=n.data.get(l.dataId).values,p=[c,a],h=v.makeZerosTypedArray(v.sizeFromShape(p),"int32");for(let f=0;f<c;++f){let m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let y=1;y<g.length;++y)g[y]=g[y-1]+d[m+y];let A=CX.alea(o.toString()),x=f*a;for(let y=0;y<a;++y){let b=A();h[x+y]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){h[x+y]=w;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",h)}var EX={kernelName:kh,backendName:"cpu",kernelFunc:NX},RX=Xs.nonMaxSuppressionV3Impl;function $X(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Ne(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,{selectedIndices:d}=RX(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var DX={kernelName:bi,backendName:"cpu",kernelFunc:$X},_X=Xs.nonMaxSuppressionV4Impl;function PX(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s;Ne(r,"NonMaxSuppressionPadded");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:h}=_X(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var FX={kernelName:ou,backendName:"cpu",kernelFunc:PX},OX=Xs.nonMaxSuppressionV5Impl;function MX(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s;Ne(r,"NonMaxSuppressionWithScore");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:A}=OX(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var zX={kernelName:vi,backendName:"cpu",kernelFunc:MX};function LX(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;Ne(r,"oneHot");let l=v.sizeFromShape(r.shape),c=new Float32Array(l*a);c.fill(i);let u=n.data.get(r.dataId).values;for(let d=0;d<l;++d)u[d]>=0&&u[d]<a&&(c[d*a+u[d]]=o);return n.makeTensorInfo([...r.shape,a],"int32",c)}var BX={kernelName:ki,backendName:"cpu",kernelFunc:LX};function pm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=dl({inputs:{input:s},backend:n}),a=pm({inputs:{x:r},backend:n}),o=Wu({inputs:{input:s},backend:n}),i=pm({inputs:{x:o},backend:n}),l=As({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Py({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var WX={kernelName:Bi,backendName:"cpu",kernelFunc:pm};function ES(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=dl({inputs:{input:s},backend:n}),a=ES({inputs:{x:r},backend:n}),o=Wu({inputs:{input:s},backend:n}),i=pm({inputs:{x:o},backend:n}),l=As({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Py({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var VX={kernelName:wi,backendName:"cpu",kernelFunc:ES};function RS(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return dm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=dm({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=Vu({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var UX={kernelName:Si,backendName:"cpu",kernelFunc:RS};function GX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Ne(r,"pad");let i=a.map((x,y)=>x[0]+r.shape[y]+x[1]),l=a.map(x=>x[0]),c=n.data.get(r.dataId).values,u=v.sizeFromShape(r.shape),d=r.shape.length,p=v.computeStrides(r.shape),h=v.sizeFromShape(i),f=i.length,m=v.computeStrides(i),g=v.getTypedArrayFromDType(r.dtype,h);o!==0&&g.fill(o);for(let x=0;x<u;x++){let b=v.indexToLoc(x,d,p).map((k,C)=>k+l[C]),w=v.locToIndex(b,f,m);g[w]=c[x]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var $S={kernelName:Za,backendName:"cpu",kernelFunc:GX},HX=Yt((e,t)=>Math.pow(e,t)),jX=yn(Ya,HX),qX={kernelName:Ya,backendName:"cpu",kernelFunc:jX};function XX(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=Cy(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var KX={kernelName:iu,backendName:"cpu",kernelFunc:XX},ZX=mt(lu,e=>1/e),YX={kernelName:lu,backendName:"cpu",kernelFunc:ZX};function JX(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ne(r,"resizeBilinear");let l=v.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(v.sizeFromShape([d,c,u,f])),A=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],y=0,b=A[0]/x[0],w=A[1]/x[1];for(let k=0;k<d;k++)for(let C=0;C<c;C++){let E;o?E=b*(C+.5)-.5:E=b*C;let R=Math.max(0,Math.floor(E)),F=E-R,D=Math.min(p-1,Math.ceil(E)),P=k*l[0]+R*l[1],T=k*l[0]+D*l[1];for(let M=0;M<u;M++){let U;o?U=w*(M+.5)-.5:U=w*M;let j=Math.max(0,Math.floor(U)),z=U-j,X=Math.min(h-1,Math.ceil(U)),Z=P+j*l[2],J=T+j*l[2],ee=P+X*l[2],ne=T+X*l[2];for(let Q=0;Q<f;Q++){let te=m[Z+Q],oe=m[J+Q],he=m[ee+Q],be=m[ne+Q],we=te+(he-te)*z,Ce=oe+(be-oe)*z,ze=we+(Ce-we)*F;g[y++]=ze}}}return n.makeTensorInfo([d,c,u,f],"float32",g)}var QX={kernelName:eo,backendName:"cpu",kernelFunc:JX};function eK(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ne([a,r],"resizeBilinearGrad");let i=v.computeStrides(r.shape),[l,c,u,d]=r.shape,[,p,h]=a.shape,f=new Float32Array(l*c*u*d),m=[o&&p>1?c-1:c,o&&h>1?u-1:u],g=[o&&p>1?p-1:p,o&&h>1?h-1:h],A=m[0]/g[0],x=m[1]/g[1],y=n.data.get(a.dataId).values,b=0;for(let w=0;w<l;w++){let k=w*i[0];for(let C=0;C<p;C++){let E=C*A,R=Math.floor(E),F=Math.min(Math.ceil(E),c-1),D=k+R*i[1],P=k+F*i[1],T=E-R,M=1-T;for(let U=0;U<h;U++){let j=U*x,z=Math.floor(j),X=Math.min(Math.ceil(j),u-1),Z=j-z,J=1-Z,ee=D+z*i[2],ne=D+X*i[2],Q=P+z*i[2],te=P+X*i[2],oe=M*J,he=M*Z,be=T*J,we=T*Z;for(let Ce=0;Ce<d;Ce++){let ze=y[b++];f[ee+Ce]+=ze*oe,f[ne+Ce]+=ze*he,f[Q+Ce]+=ze*be,f[te+Ce]+=ze*we}}}}return n.makeTensorInfo([l,u,c,d],"float32",f)}var tK={kernelName:Ih,backendName:"cpu",kernelFunc:eK};function nK(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ne(r,"resizeNearestNeighbor");let l=v.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*c*u*f),A=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],y=A[0]/x[0],b=A[1]/x[1],w=0;for(let k=0;k<d;k++){let C=k*l[0];for(let E=0;E<c;E++){let R=o?y*(E+.5):y*E,F=Math.min(p-1,a?Math.round(R):Math.floor(R));o&&(F=Math.max(0,F));let D=C+F*l[1];for(let P=0;P<u;P++){let T=o?b*(P+.5):b*P,M=Math.min(h-1,a?Math.round(T):Math.floor(T));o&&(M=Math.max(0,M));let U=D+M*l[2];for(let j=0;j<f;j++){let z=m[U+j];g[w++]=z}}}}return n.makeTensorInfo([d,c,u,f],r.dtype,g)}var sK={kernelName:uu,backendName:"cpu",kernelFunc:nK};function rK(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ne([a,r],"resizeNearestNeighborGrad");let i=v.computeStrides(r.shape),l=v.computeStrides(a.shape),[c,u,d,p]=r.shape,[,h,f]=a.shape,m=new Float32Array(c*u*d*p),g=n.data.get(a.dataId).values,A=[o&&h>1?u-1:u,o&&f>1?d-1:d],x=[o&&h>1?h-1:h,o&&f>1?f-1:f],y=A[0]/x[0],b=A[1]/x[1],w=1/y,k=1/b,C=Math.ceil(w)*2+2,E=Math.ceil(k)*2+2;for(let R=0;R<c;R++){let F=R*i[0];for(let D=0;D<u;D++){let P=F+D*i[1],T=Math.floor(D*w),M=Math.floor(T-C/2);for(let U=0;U<d;U++){let j=P+U*i[2],z=Math.floor(U*k),X=Math.floor(z-E/2);for(let Z=0;Z<p;Z++){let J=0;for(let ee=0;ee<C;ee++){let ne=ee+M;if(ne<0||ne>=h)continue;let Q=F+ne*l[1],te=ne*y,oe=Math.min(u-1,o?Math.round(te):Math.floor(te));if(D===oe)for(let he=0;he<E;he++){let be=he+X;if(be<0||be>=f)continue;let we=Q+be*l[2],Ce=be*b,ze=Math.min(d-1,o?Math.round(Ce):Math.floor(Ce));U===ze&&(J+=g[we+Z])}}m[j+Z]=J}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var aK={kernelName:Sh,backendName:"cpu",kernelFunc:rK};function oK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Ne(r,"reverse");let o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Pr({inputs:{x:r},backend:n});let l=new nn(r.shape,r.dtype),c=n.bufferSync(r);for(let u=0;u<l.size;u++){let d=l.indexToLoc(u),p=d.slice();i.forEach(h=>p[h]=r.shape[h]-1-p[h]),l.set(c.get(...p),...d)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var iK={kernelName:Ti,backendName:"cpu",kernelFunc:oK},lK={kernelName:Wi,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[c,u,d,p]=s.shape,[h,f]=N.getImageCenter(o,u,d),m=255,g=Math.sin(r),A=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<c;b++){let w=b*d*u*p;for(let k=0;k<u;k++){let C=k*(d*p);for(let E=0;E<d;E++){let R=E*p;for(let F=0;F<p;F++){let D=[c,k,E,F],P=D[2],T=D[1],M=(P-h)*A-(T-f)*g,U=(P-h)*g+(T-f)*A;M=Math.round(M+h),U=Math.round(U+f);let j=a;if(typeof a!="number"&&(F===3?j=m:j=a[F]),M>=0&&M<d&&U>=0&&U<u){let X=U*(d*p),Z=M*p,J=w+X+Z+F;j=x[J]}let z=w+C+R+F;l[z]=j}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},uK=mt(Ni,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),cK={kernelName:Ni,backendName:"cpu",kernelFunc:uK};function DS(e,t,n,s,r,a,o,i,l,c){let u=[s/r,r],d=e.values,p=t.values;if(s===0)return Be(n,t.dtype);let h=Be(u,t.dtype);h.values.fill(l);for(let f=0;f<a;f++){let m=[],g=0;for(let A=0;A<o;A++){let x=d[f*o+A];m.push(x),g+=x*i[A]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let A=0;A<r;A++)c?h.values[g*r+A]+=p[f*r+A]:h.values[g*r+A]=t.rank===0?p[0]:p[f*r+A]}return h}function dK(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=DS(h,f,o,d,c,l,i,u,0,p);return n.makeTensorInfo(o,m.dtype,m.values)}var pK={kernelName:Ei,backendName:"cpu",kernelFunc:dK};function hK(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Ne([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=Ln(r.dtype,a.dtype),d=v.makeZerosTypedArray(v.sizeFromShape(r.shape),u),p=0,h=o===0||o>1||r.shape.length===1?1:v.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?d[p++]=l[f]:d[p++]=c[f];return n.makeTensorInfo(r.shape,u,d)}var fK={kernelName:Ri,backendName:"cpu",kernelFunc:hK},mK=N.SELU_SCALEALPHA,gK=N.SELU_SCALE,AK=mt(cu,e=>e>=0?gK*e:mK*(Math.exp(e)-1)),yK={kernelName:cu,backendName:"cpu",kernelFunc:AK},xK=mt(du,e=>e<0?-1:e>0?1:0),bK={kernelName:du,backendName:"cpu",kernelFunc:xK},vK=mt(so,e=>Math.sin(e)),wK={kernelName:so,backendName:"cpu",kernelFunc:vK},kK=mt(Di,e=>Math.sinh(e)),SK={kernelName:Di,backendName:"cpu",kernelFunc:kK},IK=11920928955078125e-23,_S=Math.log(IK)+2,CK=mt(pu,e=>{let t=e>-_S,n=e<_S,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),TK={kernelName:pu,backendName:"cpu",kernelFunc:CK};function NK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Ne([r],"spaceToBatchND");let i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let c=$S.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=$t({inputs:{x:c},backend:n,attrs:{shape:u}}),x=Ds({inputs:{x:m},backend:n,attrs:{perm:d}}),w=$t({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),w}var EK={kernelName:_i,backendName:"cpu",kernelFunc:NK};function RK(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[d,p,h,f,m]=rS(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var $K={kernelName:Ch,backendName:"cpu",kernelFunc:RK};function DK(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[c,u,d]=aS(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var _K={kernelName:Th,backendName:"cpu",kernelFunc:DK};function PK(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=Ty(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var FK={kernelName:Nh,backendName:"cpu",kernelFunc:PK};function OK(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=Ty(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var MK={kernelName:Eh,backendName:"cpu",kernelFunc:OK};function zK(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=N.calculateShapes(a,r,i),h=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],A=DS(f,m,i,p,u,c,l,d,g,h);return n.makeTensorInfo(i,A.dtype,A.values)}var LK={kernelName:Xc,backendName:"cpu",kernelFunc:zK};function BK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=pl({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[i]+=d,h})}var WK={kernelName:Pi,backendName:"cpu",kernelFunc:BK},VK={kernelName:hu,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Ne(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},UK=mt(ho,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),GK={kernelName:ho,backendName:"cpu",kernelFunc:UK};function HK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s;Ne(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=Ft.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=$t({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ft.computeOutShape(x,y,b),C=pl({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});w=$t({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(C)}else{let k=n.bufferSync(r),C=iS(h,k,b,x);w=n.makeTensorInfo(f,C.dtype,C.values)}return w}var jK={kernelName:Fi,backendName:"cpu",kernelFunc:HK};function qK(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.data.get(u.dataId).values,h=n.data.get(d.dataId).values,[f,m]=lS(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var XK={kernelName:Kc,backendName:"cpu",kernelFunc:qK};function KK(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[c,u,d]=uS(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var ZK={kernelName:Rh,backendName:"cpu",kernelFunc:KK};function YK(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=cS(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var JK={kernelName:$h,backendName:"cpu",kernelFunc:YK},QK=mt(Oi,e=>Math.tan(e)),eZ={kernelName:Oi,backendName:"cpu",kernelFunc:QK},tZ=mt(co,e=>Math.tanh(e)),nZ={kernelName:co,backendName:"cpu",kernelFunc:tZ};function sZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Ne(r,"tile");let o=pS(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var rZ={kernelName:Gr,backendName:"cpu",kernelFunc:sZ};function aZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Ne(r,"topk");let i=n.data.get(r.dataId).values,[l,c]=fS(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var oZ={kernelName:Mi,backendName:"cpu",kernelFunc:aZ};function iZ(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=n,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],A=v.computeStrides(r.shape),x=A[0],y=A[1],b=A[2],w=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(g));w.fill(l);let k=s.data.get(r.dataId).values,C=s.data.get(a.dataId).values;for(let R=0;R<u;++R){let F=a.shape[0]===1?C:C.subarray(R*8,R*8+8);for(let D=0;D<f;++D)for(let P=0;P<m;++P)for(let T=0;T<h;++T){let M,U=F[6]*P+F[7]*D+1;if(U===0)continue;let j=(F[0]*P+F[1]*D+F[2])/U,z=(F[3]*P+F[4]*D+F[5])/U,X=PS(j,p,i),Z=PS(z,d,i);switch(o){case"nearest":M=hZ(k,d,p,x,y,b,R,Z,X,T,l);break;case"bilinear":M=fZ(k,d,p,x,y,b,R,Z,X,T,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let J=R*x+D*y+P*b+T;w[J]=M}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}var lZ={kernelName:zi,backendName:"cpu",kernelFunc:iZ};function PS(e,t,n){switch(n){case"reflect":return uZ(e,t);case"wrap":return cZ(e,t);case"nearest":return pZ(e,t);case"constant":default:return dZ(e,t)}}function uZ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return v.clamp(0,n,t-1)}function cZ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return v.clamp(0,n,t-1)}function dZ(e,t){return e}function pZ(e,t){return v.clamp(0,e,t-1)}function Gd(e,t,n,s,r,a,o,i,l,c,u){let d=o*s+i*r+l*a+c;return 0<=i&&i<t&&0<=l&&l<n?e[d]:u}function hZ(e,t,n,s,r,a,o,i,l,c,u){let d=Math.round(i),p=Math.round(l);return Gd(e,t,n,s,r,a,o,d,p,c,u)}function fZ(e,t,n,s,r,a,o,i,l,c,u){let d=Math.floor(i),p=Math.floor(l),h=d+1,f=p+1,m=(f-l)*Gd(e,t,n,s,r,a,o,d,p,c,u)+(l-p)*Gd(e,t,n,s,r,a,o,d,f,c,u),g=(f-l)*Gd(e,t,n,s,r,a,o,h,p,c,u)+(l-p)*Gd(e,t,n,s,r,a,o,h,f,c,u);return(h-i)*m+(i-d)*g}function mZ(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Ne(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:c}=mS(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var gZ={kernelName:Dh,backendName:"cpu",kernelFunc:mZ};function AZ(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),c=0;for(let h=0;h<o;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o).fill(0),d=r.shape.slice();d[a]=1;let p=new Array(i);for(let h=0;h<p.length;h++){u[a]=h;let f=pl({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});p[h]=$t({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return p}var yZ={kernelName:Li,backendName:"cpu",kernelFunc:AZ};function xZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Ne(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,c=[],u=[],d=i-l,p=a;for(let f=0;f<d;++f){let m=dm({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,u.push(m)}for(let f=0;f<o;++f){let m=v.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),A=M7({inputs:{a:g,b:p},backend:n}),x=Fo({inputs:{x:A},backend:n,attrs:{dtype:"float32"}}),y=um({inputs:{a:x,b:r},backend:n}),b=Ud({inputs:{x:y},backend:n,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(g),u.push(A),u.push(x),u.push(y),u.push(b)}let h=RS({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var bZ={kernelName:Zc,backendName:"cpu",kernelFunc:xZ},vZ=[NH,bG,RH,DH,CG,PH,OH,zH,BH,VH,GH,jH,XH,YH,QH,nj,rj,oj,lj,CH,cj,pj,fj,gj,SG,NG,yj,vG,bj,wj,Ij,Tj,kj,$j,_j,Ej,Fj,Mj,Lj,Wj,Uj,Hj,jj,Xj,Zj,Jj,Qj,tq,eq,Dy,rq,xH,oq,EG,fq,RG,mq,DG,vq,wq,Sq,PG,Tq,Eq,$q,_q,Fq,OG,zG,wG,Mq,vj,Lq,Wq,Uq,bH,BG,VG,Hq,GG,qq,Zq,Jq,tX,sX,aX,jG,lX,cX,pX,fX,gX,oX,yX,bX,XG,wX,IX,EX,ZG,JG,DX,FX,zX,eH,BX,VX,UX,$S,qX,wH,sH,KX,kG,YX,kH,SH,IH,QX,tK,sK,aK,iK,lK,cK,aH,pK,fK,yK,iH,bK,wK,SK,lH,TX,TK,EK,$K,_K,FK,MK,LK,WK,dH,VK,hH,GK,jK,XK,ZK,JK,AH,nq,eZ,nZ,rZ,oZ,tH,lZ,gZ,yZ,bZ,WX];for(let e of vZ)jr(e);var FS={};Me(FS,{assertNotComplex:()=>Gu,bindCanvasToFramebuffer:()=>_Z,bindColorTextureToFramebuffer:()=>gm,bindTextureToProgramUniformSampler:()=>ZS,bindTextureUnit:()=>qS,bindVertexBufferToProgramAttribute:()=>My,callAndCheck:()=>Ie,canBeRepresented:()=>OS,createFragmentShader:()=>LS,createFramebuffer:()=>jS,createProgram:()=>BS,createStaticIndexBuffer:()=>US,createStaticVertexBuffer:()=>VS,createTexture:()=>GS,createVertexShader:()=>zS,getBatchDim:()=>fl,getExtensionOrThrow:()=>qd,getFramebufferErrorMessage:()=>YS,getMaxTexturesInShader:()=>tI,getNumChannels:()=>$Z,getProgramUniformLocation:()=>KS,getProgramUniformLocationOrThrow:()=>XS,getRowsCols:()=>ml,getShapeAs3D:()=>Am,getTextureShapeFromLogicalShape:()=>QS,getWebGLDisjointQueryTimerVersion:()=>nI,getWebGLErrorMessage:()=>MS,getWebGLMaxTextureSize:()=>eI,hasExtension:()=>Ps,isCapableOfRenderingToFloatTexture:()=>sI,isDownloadFloatTextureEnabled:()=>rI,isReshapeFree:()=>Kd,isWebGLFenceEnabled:()=>aI,isWebGLVersionEnabled:()=>Ly,linkProgram:()=>WS,resetMaxTextureSize:()=>PZ,resetMaxTexturesInShader:()=>FZ,unbindColorTextureFromFramebuffer:()=>zy,unbindTextureUnit:()=>DZ,validateFramebuffer:()=>Xd,validateProgram:()=>mm,validateTextureSize:()=>HS});var hl={},Fy={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function hm(e,t){hl[e]=t}function Fr(e){if(!(e in hl)){let n=kZ(e);if(n!==null)hl[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=hl[e];return t.isContextLost()?(delete hl[e],Fr(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),hl[e])}function wZ(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function kZ(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=wZ(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete hl[e]},!1),e===1?t.getContext("webgl",Fy)||t.getContext("experimental-webgl",Fy):t.getContext("webgl2",Fy)}var Hd;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(Hd||(Hd={}));var _s;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(_s||(_s={}));var Sn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Sn||(Sn={}));function jd(e,t){return[t,e]}function SZ(e,t){return e*t}function fm(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function Uu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function IZ(e,t){let[n,s]=Uu(e,t);return n*s*4}function Oy(e,t){let n=e,s,r,a,o,i,l,c,u,d,p;return K().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,u=1,d=n.HALF_FLOAT,p=n.FLOAT):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT),l=e.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function Ie(e,t){let n=t();return K().getBool("DEBUG")&&CZ(e),n}function CZ(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+MS(e,t))}var TZ=596e-10,NZ=65504;function OS(e){return!!(K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||TZ<Math.abs(e)&&Math.abs(e)<NZ)}function MS(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function qd(e,t){return sa(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function zS(e,t){let n=sa(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function LS(e,t){let n=sa(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ie(e,()=>e.shaderSource(n,t)),Ie(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw RZ(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var EZ=/ERROR: [0-9]+:([0-9]+):/g;function RZ(e,t){let n=EZ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((d,p)=>v.rightPad((p+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let l=o.slice(0,s-1),c=o.slice(s-1,s),u=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function BS(e){return sa(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function WS(e,t){if(Ie(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function mm(e,t){if(Ie(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function VS(e,t){let n=sa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function US(e,t){let n=sa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Ie(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function $Z(){return K().getNumber("WEBGL_VERSION")===2?1:4}function GS(e){return sa(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function HS(e,t){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function jS(e){return sa(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function My(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),Ie(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),Ie(e,()=>e.enableVertexAttribArray(i)),!0)}function qS(e,t,n){JS(e,n),Ie(e,()=>e.activeTexture(e.TEXTURE0+n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function DZ(e,t){JS(e,t),Ie(e,()=>e.activeTexture(e.TEXTURE0+t)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function XS(e,t,n){return sa(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function KS(e,t,n){return e.getUniformLocation(t,n)}function ZS(e,t,n,s){Ie(e,()=>qS(e,t,s)),Ie(e,()=>e.uniform1i(n,s))}function _Z(e){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ie(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),Ie(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function gm(e,t,n){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function zy(e,t){Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Ie(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Xd(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+YS(e,t))}function YS(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function sa(e,t,n){let s=Ie(e,()=>t());if(s==null)throw new Error(n);return s}function JS(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function fl(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function ml(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Am(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[fl(e),...ml(e)]),t}function QS(e,t=!1){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?v.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let s=v.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=fl(e),a=2,o=2;return e.length&&([a,o]=ml(e)),s=r*(a/2)*(o/2),v.sizeToSquarishShape(s).map(i=>i*2)}return v.sizeToSquarishShape(s)}function ym(e){return e%2==0}function Kd(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||ym(n)&&ym(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&ym(e[0])&&ym(t[0])}var xm,bm;function eI(e){if(xm==null){let t=Fr(e);xm=t.getParameter(t.MAX_TEXTURE_SIZE)}return xm}function PZ(){xm=null}function FZ(){bm=null}function tI(e){if(bm==null){let t=Fr(e);bm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,bm)}function nI(e){if(e===0)return 0;let t,n=Fr(e);return Ps(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Ps(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Ps(e,t){return e.getExtension(t)!=null}function Ly(e){try{if(Fr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function sI(e){if(e===0)return!1;let t=Fr(e);if(e===1){if(!Ps(t,"OES_texture_float"))return!1}else if(!Ps(t,"EXT_color_buffer_float"))return!1;return By(t)}function rI(e){if(e===0)return!1;let t=Fr(e);if(e===1){if(!Ps(t,"OES_texture_float")||!Ps(t,"WEBGL_color_buffer_float"))return!1}else{if(Ps(t,"EXT_color_buffer_float"))return By(t);let s="EXT_color_buffer_half_float";if(Ps(t,s)){let r=t.getExtension(s);return OZ(t,r)}return!1}return By(t)}function By(e){let t=Oy(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function OZ(e,t){let n=Oy(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function aI(e){return e!==2?!1:Fr(e).fenceSync!=null}function Gu(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var De=K();De.registerFlag("HAS_WEBGL",()=>De.getNumber("WEBGL_VERSION")>0);De.registerFlag("WEBGL_VERSION",()=>Ly(2)?2:Ly(1)?1:0);De.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);De.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>De.get("WEBGL_VERSION")===2);De.registerFlag("WEBGL_CPU_FORWARD",()=>!0);De.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);De.registerFlag("WEBGL_PACK",()=>De.getBool("HAS_WEBGL"));De.registerFlag("WEBGL_PACK_NORMALIZATION",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_CLIP",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_REDUCE",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_LAZILY_UNPACK",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_CONV_IM2COL",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>eI(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>tI(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=De.getNumber("WEBGL_VERSION");return e===0?0:nI(e)});De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>De.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!gu.isMobile());De.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>sI(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>De.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:De.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));De.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>rI(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_FENCE_API_ENABLED",()=>aI(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>De.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);De.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});De.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>gu.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});De.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);De.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);De.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);De.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Un(){let e,t,n,s,r,a,o,i,l,c;return K().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}function gl(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function vm(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function MZ(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function zZ(e,t,n="index"){let s=e.map((a,o)=>o),r=MZ(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function Wy(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Vy(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var oI=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:iI}=N;function LZ(e,t,n){let s=[];if(e.forEach(h=>{let f=v.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Uy(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>BZ(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=Un(),l=UZ(i),c,u,d=jZ(i);return t.isPacked?(c=WZ(t.logicalShape,o,n.enableShapeUniforms),u=HZ(i)):(c=VZ(t.logicalShape,o,n.enableShapeUniforms),u=GZ(i)),n.packedInputs&&(d+=ZZ),[d,l,u,r,c,a,n.userCode].join(`
`)}function Hu(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return lY(e,t);case 1:return cY(e,t);case 2:return pY(e,t);case 3:return fY(e,t);case 4:return gY(e,t);case 5:return AY(e);case 6:return yY(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function lI(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return iY(e);case 1:return uY(e,t);case 2:return dY(e,t);case 3:return hY(e,t);default:return mY(e,t)}}function BZ(e,t,n=!1,s){let r="";n?r+=lI(e,s):r+=Hu(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=xY(e,t):r+=bY(e,t)),r}function WZ(e,t,n){switch(e.length){case 0:return uI();case 1:return YZ(e,t,n);case 2:return aY(e,t,n);case 3:return QZ(e,t,n);default:return tY(e,t,n)}}function VZ(e,t,n){switch(e.length){case 0:return uI();case 1:return JZ(e,t,n);case 2:return oY(e,t,n);case 3:return eY(e,t,n);case 4:return nY(e,t,n);case 5:return sY(e,t);case 6:return rY(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function UZ(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function GZ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function HZ(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function jZ(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${qZ}
    ${XZ}
    ${KZ}
  `}var qZ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,XZ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,KZ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ZZ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function uI(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function YZ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function JZ(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function QZ(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function eY(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${vm(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=gl(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function tY(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+i,l=`b${c}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function nY(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${vm(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=gl(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function sY(e,t){let n=gl(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function rY(e,t){let n=gl(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function aY(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function oY(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Al(e){return`offset${e}`}function iY(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Un();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function lY(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Al(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function uY(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=Un();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function cY(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ju(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Al(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function dY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=Un();if(a!=null&&v.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function pY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&v.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let p=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=v.squeezeShape(n),l=o;if(l.length<n.length){let p=qu(e,l),h=["row","col"];return`
      ${Hu(p,t)}
      float ${r}(int row, int col) {
        return ${r}(${Xu(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${ju(e)}
      }
    `;let c=a[0],u=a[1],d=Al(s);return u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function hY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let p=n.slice(1),h=[1,2],f=qu(e,p),m=["b","row","col"];return`
        ${lI(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Xu(m,h)});
        }
      `}let i=Un();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],c=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function fY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=v.squeezeShape(n),c=i;if(c.length<n.length){let m=qu(e,c),g=["row","col","depth"];return`
        ${Hu(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Xu(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${ju(e)}
      }
    `;let u=e.shapeInfo.texShape,d=u[0],p=u[1],h=e.shapeInfo.flatOffset;if(p===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(p===o&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=Al(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${s}, uv);
      }
  `}function mY(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Un();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=l[0],u=l[1],d=Math.ceil(a[o-1]/2),p=d*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${n}, uv);
    }
  `}function gY(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:c}=v.squeezeShape(n);if(l.length<n.length){let x=qu(e,l),y=["row","col","depth","depth2"];return`
      ${Hu(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Xu(y,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${ju(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===i&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;let A=Al(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${A});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${A});
      return sampleTexture(${s}, uv);
    }
  `}function AY(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:c}=v.squeezeShape(t);if(l.length<t.length){let m=qu(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${Hu(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Xu(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${ju(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Al(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function yY(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=v.squeezeShape(t);if(r.length<t.length){let g=qu(e,r),A=["row","col","depth","depth2","depth3","depth4"];return`
      ${Hu(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Xu(A,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${ju(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Al(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function ju(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function xY(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=iI(e.shapeInfo.logicalShape,t.logicalShape),l=bt(o),c=o-a,u,d=["x","y","z","w","u","v"];a===0?u="":o<2&&i.length>=1?u="coords = 0;":u=i.map(x=>`coords.${d[x+c]} = 0;`).join(`
`);let p="";o<2&&a>0?p="coords":p=e.shapeInfo.logicalShape.map((x,y)=>`coords.${d[y+c]}`).join(", ");let h="return outputValue;",m=v.sizeFromShape(e.shapeInfo.logicalShape)===1,A=v.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!A)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!A)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,y=a-1;i.indexOf(x)>-1&&i.indexOf(y)>-1?h="return vec4(outputValue.x);":i.indexOf(x)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(y)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${p});
      ${h}
    }
  `}function bY(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=bt(l),u=iI(e.shapeInfo.logicalShape,t.logicalShape),d=l-i,p,h=["x","y","z","w","u","v"];i===0?p="":l<2&&u.length>=1?p="coords = 0;":p=u.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${p}
      return get${s}(${f});
    }
  `}function bt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Uy(e,t,n){let{newShape:s,keptDims:r}=v.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!v.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function qu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Xu(e,t){return t.map(n=>e[n]).join(", ")}function vY(e,t,n,s){let r=n.map((b,w)=>{let k={logicalShape:b.shape,texShape:b.isUniform?null:b.texData.texShape,isUniform:b.isUniform,isPacked:b.isUniform?!1:b.texData.isPacked,flatOffset:null};return b.texData!=null&&b.texData.slice!=null&&b.texData.slice.flatOffset>0&&(k.flatOffset=b.texData.slice.flatOffset),{name:t.variableNames[w],shapeInfo:k}}),a=r.map(b=>b.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=LZ(r,o,t),l=LS(e.gl,i),c=e.createProgram(l),u=null,d=e.getUniformLocation(c,"NAN",!1);K().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(c,"INFINITY",!1));let p=!1,h={},f={},m={};for(let b=0;b<t.variableNames.length;b++){let w=t.variableNames[b];h[w]=e.getUniformLocation(c,w,p),h[`offset${w}`]=e.getUniformLocation(c,`offset${w}`,p),t.enableShapeUniforms&&(f[`${w}Shape`]=e.getUniformLocation(c,`${w}Shape`,p),m[`${w}TexShape`]=e.getUniformLocation(c,`${w}TexShape`,p))}let g,A,x;t.enableShapeUniforms&&(g=e.getUniformLocation(c,"outShape",p),x=e.getUniformLocation(c,"outShapeStrides",p),A=e.getUniformLocation(c,"outTexShape",p));let y=[];return t.customUniforms&&t.customUniforms.forEach((b,w)=>{y[w]=e.getUniformLocation(c,b.name,p)}),{program:t,fragmentShader:l,source:i,webGLProgram:c,uniformLocations:h,customUniformLocations:y,inShapeInfos:a,outShapeInfo:o,infLoc:u,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:A}}function cI(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!v.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!v.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function wY(e,t,n,s,r){t.program.enableShapeUniforms||(cI(t.inShapeInfos,n),cI([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a,o[0],o[1]):e.setOutputMatrixTexture(a,o[0],o[1]),e.setProgram(t.webGLProgram),K().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,c)=>{let u=t.program.variableNames[c],d=t.uniformLocations[u],p=t.uniformLocations[`offset${u}`],h=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(h){let{uniformShape:m}=Uy(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),d!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(d,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}l.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture,d,c)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,c)=>{let u=t.customUniformLocations[c],d=r[c];if(l.type==="float")e.gl.uniform1fv(u,d);else if(l.type==="vec2")e.gl.uniform2fv(u,d);else if(l.type==="vec3")e.gl.uniform3fv(u,d);else if(l.type==="vec4")e.gl.uniform4fv(u,d);else if(l.type==="int")e.gl.uniform1iv(u,d);else if(l.type==="ivec2")e.gl.uniform2iv(u,d);else if(l.type==="ivec3")e.gl.uniform3iv(u,d);else if(l.type==="ivec4")e.gl.uniform4iv(u,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function kY(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:d}=Uy(e.packedInputs,o.shape,l),p="",h="",f="";if(u.length===1&&e.packedInputs){let w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!e.packedInputs)h=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let w=v.computeStrides(u);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}let m=o.shape.length,g=u.length===2&&v.arraysEqual(o.shape,l),A=v.sizeFromShape(o.shape)===1,x=N.getBroadcastDims(o.shape,n.shape),y=!e.packedInputs&&m===n.shape.length&&v.arraysEqual(l,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${y}_${c?d:""}_${u.length}_${A}_${x}_${g}_${p}_${h}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${K().getNumber("WEBGL_VERSION")}`,a}function Fs(e){return K().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var SY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Hd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Un();this.outputShape=e,this.enableShapeUniforms=Fs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?vm(["r","c","d"],e):gl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},IY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Hd.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Un();this.outputShape=e,this.enableShapeUniforms=Fs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?vm(["r","c","d"],e):gl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},CY=class{constructor(e){this.variableNames=["A"],this.outTexUsage=_s.DOWNLOAD;let t=Un();this.outputShape=e,this.userCode=`
      ${oI}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},TY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=_s.DOWNLOAD;let t=Un();this.outputShape=e,this.userCode=`
      ${oI}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},NY=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Un();this.outputShape=e,this.enableShapeUniforms=Fs(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Vy():Wy(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},EY=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Un();this.outputShape=e,this.enableShapeUniforms=Fs(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Vy():Wy(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},dI={};Me(dI,{bindVertexProgramAttributeStreams:()=>bI,createBufferFromOutputTexture:()=>kI,createFloat16MatrixTexture:()=>gI,createFloat16PackedMatrixTexture:()=>xI,createFloat32MatrixTexture:()=>mI,createIndexBuffer:()=>fI,createPackedMatrixTexture:()=>yI,createUnsignedBytesMatrixTexture:()=>AI,createVertexBuffer:()=>hI,createVertexShader:()=>pI,downloadByteEncodedFloatMatrixFromOutputTexture:()=>II,downloadFloat32MatrixFromBuffer:()=>SI,downloadMatrixFromPackedOutputTexture:()=>TI,downloadPackedMatrixFromBuffer:()=>CI,getInternalFormatForFloat16MatrixTexture:()=>Hy,getInternalFormatForFloat16PackedMatrixTexture:()=>Xy,getInternalFormatForFloat32MatrixTexture:()=>Gy,getInternalFormatForPackedMatrixTexture:()=>qy,getInternalFormatForUnsignedBytesMatrixTexture:()=>jy,uploadDenseMatrixToTexture:()=>vI,uploadPixelDataToTexture:()=>wI});function pI(e){let t=Un(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return zS(e,n)}function hI(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return VS(e,t)}function fI(e){let t=new Uint16Array([0,1,2,2,1,3]);return US(e,t)}function Zd(e,t,n,s,r,a){HS(t,n);let o=GS(e),i=e.TEXTURE_2D;return Ie(e,()=>e.bindTexture(i,o)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),Ie(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Ie(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null)),o}function Gy(e){return e.internalFormatFloat}function mI(e,t,n,s){let[r,a]=jd(t,n);return Zd(e,r,a,Gy(s),s.textureFormatFloat,e.FLOAT)}function Hy(e){return e.internalFormatHalfFloat}function gI(e,t,n,s){let[r,a]=jd(t,n);return Zd(e,r,a,Hy(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function jy(e){return e.downloadTextureFormat}function AI(e,t,n,s){let[r,a]=jd(t,n);return Zd(e,r,a,jy(s),e.RGBA,e.UNSIGNED_BYTE)}function qy(e){return e.internalFormatPackedFloat}function yI(e,t,n,s){let[r,a]=Uu(t,n);return Zd(e,r,a,qy(s),e.RGBA,e.FLOAT)}function Xy(e){return e.internalFormatPackedHalfFloat}function xI(e,t,n,s){let[r,a]=Uu(t,n);return Zd(e,r,a,Xy(s),e.RGBA,s.textureTypeHalfFloat)}function bI(e,t,n){let s=0,r=3*4,a=3*4+2*4;return Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),My(e,t,"clipSpacePos",n,3,a,s)&&My(e,t,"uv",n,2,a,r)}function vI(e,t,n,s,r,a){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function wI(e,t,n){Ie(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Ie(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Ie(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function kI(e,t,n,s){let r=e.createBuffer();Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return Ie(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Ie(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function SI(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function II(e,t,n,s){let[r,a]=jd(t,n),o=4,i=new Uint8Array(SZ(t*n,o));return Ie(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function CI(e,t,n,s,r,a,o,i){let l=e,c=new Float32Array(IZ(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function TI(e,t,n){let s=new Float32Array(t*n*4);return Ie(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var wm=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=K().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,hm(t,e)):this.gl=Fr(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(K().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=qd(this.gl,r),Ps(this.gl,a))this.textureHalfFloatExtension=qd(this.gl,a);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ps(this.gl,s))this.colorBufferHalfFloatExtension=qd(this.gl,s);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ps(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Ps(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=hI(this.gl),this.indexBuffer=fI(this.gl),this.framebuffer=jS(this.gl),this.textureConfig=Oy(this.gl,this.textureHalfFloatExtension)}get debug(){return K().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Ie(e,()=>e.finish()),Ie(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ie(e,()=>e.deleteFramebuffer(this.framebuffer)),Ie(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ie(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ie(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),mI(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),gI(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),AI(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),wI(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),vI(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),xI(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),yI(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(zy(this.gl,this.framebuffer),this.outputTexture=null),Ie(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>II(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return CI(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return SI(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=kI(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(K().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>TI(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=pI(t));let n=BS(t);return Ie(t,()=>t.attachShader(n,this.vertexShader)),Ie(t,()=>t.attachShader(n,e)),WS(t,n),this.debug&&mm(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=bI(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ie(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&mm(this.gl,this.program),Ie(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?XS(this.gl,e,t):KS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ie(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),ZS(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=Uu(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&mm(this.gl,this.program),Xd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Ie(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=qd(this.gl,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=RY(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),gm(this.gl,e,this.framebuffer),this.debug&&Xd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(gm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Xd(this.gl)):zy(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;gm(s,e,this.framebuffer),this.debug&&Xd(s),this.outputTexture=e,Ie(s,()=>s.viewport(0,0,t,n)),Ie(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),Ie(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function RY(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:$Y,bincountImpl:NI,bincountReduceImpl:DY,ceilImpl:_Y,concatImpl:PY,equalImpl:FY,expImpl:OY,expm1Impl:MY,floorImpl:zY,gatherNdImpl:LY,gatherV2Impl:BY,greaterImpl:WY,greaterEqualImpl:VY,lessImpl:UY,lessEqualImpl:GY,linSpaceImpl:HY,logImpl:jY,maxImpl:qY,maximumImpl:XY,minimumImpl:KY,multiplyImpl:ZY,negImpl:YY,notEqualImpl:JY,prodImpl:QY,rangeImpl:eJ,rsqrtImpl:tJ,sigmoidImpl:nJ,simpleAbsImpl:EI,sliceImpl:sJ,sparseFillEmptyRowsImpl:rJ,sparseReshapeImpl:aJ,sparseSegmentReductionImpl:RI,sqrtImpl:oJ,stridedSliceImpl:iJ,stringNGramsImpl:lJ,stringSplitImpl:uJ,stringToHashBucketFastImpl:cJ,subImpl:dJ,tileImpl:pJ,topKImpl:hJ,transposeImpl:Ky,uniqueImpl:fJ}=im;function $I(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Gn(e,t){return t===1?[e]:$I(e,t)}function mJ(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var gJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=Gn("rc",t),s=bt(t),r=yJ(t,e,n),a=xJ(t,e[e.length-1],e[e.length-2],n),o=bJ(e,n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${o}));
          }
        }
      `}}};function AJ(e,t){let n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<e;o++)a=`${t[t.length-1-o]},`+a;n.push(a)}return n}function yJ(e,t,n){if(e===1)return`rc > ${t[0]}`;let s="";for(let r=e-2;r<e;r++)s+=`${n[r]} >= ${t[r]}`,r<e-1&&(s+="||");return s}function xJ(e,t,n,s){if(e===1)return"";let r=s.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function bJ(e,t){let n=e.length,s=AJ(n,t);return n===1?`getA(rc),
            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${s[0]}),
          cEdge ? 0. : getA(${s[1]}),
          rEdge ? 0. : getA(${s[2]}),
          rEdge || cEdge ? 0. : getA(${s[3]})`}var DI=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Fs(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2==1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${vJ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Vy():Wy(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function vJ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?zZ(["r","c","d"],"inputShape"):gl(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var wJ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=PI(t,n),r=FI(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=_I(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===Sn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Sn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Sn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Sn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Sn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=PI(n,s),a=FI(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=_I(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=K().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function kJ(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function _I(e,t,n,s,r){let a=SJ(t,s),o;if(r){let[l,c]=Uu(e[0],e[1]);o=l*c}else{let[l,c]=jd(e[0],e[1]);o=l*c}let i=kJ(n,a);return o*i}function SJ(e,t){switch(e){case Sn.PACKED_2X2_FLOAT32:return qy(t);case Sn.PACKED_2X2_FLOAT16:return Xy(t);case Sn.UNPACKED_FLOAT32:return Gy(t);case Sn.UNPACKED_FLOAT16:return Hy(t);case Sn.PACKED_4X1_UNSIGNED_BYTE:return jy(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function IJ(e){return K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Sn.PACKED_2X2_FLOAT32:Sn.UNPACKED_FLOAT32:e?Sn.PACKED_2X2_FLOAT16:Sn.UNPACKED_FLOAT16}function PI(e,t){if(e===_s.UPLOAD)return Sn.PACKED_2X2_FLOAT32;if(e===_s.RENDER||e==null)return IJ(t);if(e===_s.DOWNLOAD||e===_s.PIXELS)return Sn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function FI(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Mo=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Fs(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},yr="if (isnan(x)) return x;",CJ="return x;",OI="return abs(x);",TJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",NJ=yr+`
  return (x < 0.0) ? 0.0 : x;
`,EJ=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,km="return x;",RJ="return 1.0 / (1.0 + exp(-1.0 * x));",$J="return x;",DJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,_J=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,PJ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,FJ="return 1.0 / (1.0 + exp(-1.0 * x));",Ku=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Fs(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},OJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=Gn("rc",t),s=bt(t),r=mJ(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},MJ=Xs.whereImpl,zJ=1e-7,LJ=1e-4,Sm={};function BJ(e){return e in Sm||(Sm[e]={}),Sm[e]}var WJ=K().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),VJ=600;function UJ(){return K().global.screen==null?1024:K().global.screen.height*K().global.screen.width*window.devicePixelRatio*VJ/1024/1024}var MI=class extends Ll{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!K().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Fr(K().getNumber("WEBGL_VERSION"));this.binaryCache=BJ(K().getNumber("WEBGL_VERSION")),this.gpgpu=new wm(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new wJ(this.gpgpu),this.numMBBeforeWarning=UJ(),this.texData=new Pc(this,ts())}nextDataId(){return MI.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((K().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||K().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:_s.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(K().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:_s.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new Ku(o,km):d=new Mo(o,km);let p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:s}],s),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,c;l&&(c=v.now());let u;if(s==="complex64"){let d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);u=N.mergeRealAndImagArrays(d,p)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let h;i?h=new Ku(s,km):h=new Mo(s,km);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(K().getBool("DEBUG")&&!K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&K().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(a!=="complex64"&&K().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let h=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(h.texture,...fm(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];u=N.mergeRealAndImagArrays(f,m)}else if(l==null)u=this.getValuesFromTexture(e);else{let h=v.sizeFromShape(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){let h=this.gpgpu.gl;Ie(h,()=>h.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ts().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!OS(n))throw K().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=v.sizeFromShape(t);if(K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),p=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture,...fm(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),h}let a=K().getBool("WEBGL_PACK")&&s===!0,o=a?Am(t):t,i=a?new TY(o):new CY(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=v.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=WJ){return K().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return MJ(e.shape,t)}packedUnaryOp(e,t,n){let s=new Ku(e.shape,t),r=this.compileAndRun(s,[e],n);return ts().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=EI(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(K().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,OI,e.dtype);let t=new Mo(e.shape,OI),n=this.compileAndRun(t,[e]);return ts().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:s}=this.makeTensorInfo(e,t,n);return ts().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){let t=new OJ(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new gJ(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[fl(e.shape),...ml(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[fl(t),...ml(t)],a=new DI(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=Am(s),o,i=fm(a);n?o=new IY(a):o=new SY(a);let l=!0,c=[i],u=this.runWebGLProgram(o,[{shape:a,dtype:r,dataId:e}],r,c,l);return{dtype:r,shape:s,dataId:u.dataId}}runWebGLProgram(e,t,n,s,r=!1){let a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Hd.DENSE){let m=fm(e.outputShape);o.texShape=m.map(g=>g*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),v.sizeFromShape(a.shape)===0)return o.values=v.getTypedArrayFromDType(a.dtype,0),a;let i=[],l=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(m.dataId);if(g.texture==null){if(!e.packedInputs&&v.sizeFromShape(m.shape)<=K().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=m.shape)}else if(!!g.isPacked!=!!e.packedInputs)m=g.isPacked?this.unpackTensor(m):this.packTensor(m),i.push(m),g=this.texData.get(m.dataId);else if(g.isPacked&&!Kd(g.shape,m.shape)){let A=m,x=m.shape;m.shape=g.shape,m=this.packedReshape(m,x),i.push(m),g=this.texData.get(m.dataId),A.shape=x}return this.uploadToGPU(m.dataId),{shape:m.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let c={shape:a.shape,texData:o,isUniform:!1},u=kY(e,l,c),d=this.getAndSaveBinary(u,()=>vY(this.gpgpu,e,l,c)),p=this.activeTimers!=null,h;p&&(h=this.startTimer()),wY(this.gpgpu,d,l,c,s),i.forEach(m=>this.disposeIntermediateTensorInfo(m)),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let f=K().get("WEBGL_FLUSH_THRESHOLD");if(f>0){let m=v.now();m-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!K().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(K().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=q(()=>{if(!K().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=K().getBool("DEBUG");K().set("DEBUG",!1);let t=this.abs(Ee(1e-8)).dataSync()[0];if(K().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?zJ:LJ}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,c;l&&(c=v.now());let u=t.texShape;if(u==null&&(u=QS(n,i),t.texShape=u),r!=null){let d=Am(n),p,h=u[1],f=u[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;i?([h,f]=Uu(u[0],u[1]),p=new EY(d,m)):p=new NY(d,m);let g=this.makeTensorInfo([f,h],s);m?this.texData.get(g.dataId).usage=_s.PIXELS:this.texData.get(g.dataId).usage=_s.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),h,f,r);let A=[[f,h]],x=!0,y=this.runWebGLProgram(p,[g],s,A,x),b=this.texData.get(y.dataId);t.texture=b.texture,t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(y.dataId),t.values=null,l&&(this.uploadWaitMs+=v.now()-c)}else{let d=this.acquireTexture(u,o,s,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=GJ(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}},Yd=MI;Yd.nextDataId=0;function GJ(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var HJ="0.0.0";function zI(){K().set("WEBGL_FORCE_F16_TEXTURES",!0)}gu.isBrowser()&&Zi("webgl",()=>new Yd,2);var jJ={forceHalfFloat:zI},LI=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Zu=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Fs(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Im=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Jd=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=Fs(r);let a="";if(s)if(r===0||v.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${bt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Gn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function ys(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var qJ={kernelName:Ba,backendName:"webgl",kernelFunc:ys};function zo(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=ys({inputs:{x:s},backend:n}),l=ys({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var XJ={kernelName:zc,backendName:"webgl",kernelFunc:zo},BI="return (a < 0.) ? b * a : a;",WI=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function KJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",v.createScalarValue(a,"float32")),i=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jd(WI,r.shape,o.shape):new Zu(BI,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var ZJ={kernelName:fi,backendName:"webgl",kernelFunc:KJ},VI="return (a < 0.) ? b * a : a;",UI=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function YJ(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jd(UI,s.shape,r.shape):new Zu(VI,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var JJ={kernelName:Ja,backendName:"webgl",kernelFunc:YJ},GI="if (isnan(x)) return x;",QJ=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,eQ=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function ot({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),p=n(d.values,l);return i.makeTensorInfo(o.shape,l,p)}let c=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new Ku(o.shape,t):u=new Mo(o.shape,e),i.runWebGLProgram(u,[o],l)}}function In({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:c}=o,u=i;if(s&&l.dtype==="complex64"){let f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,A]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(y=>{let[b,w]=y,k={dataId:b.dataId,dtype:b.dtype,shape:l.shape},C={dataId:w.dataId,dtype:w.dtype,shape:c.shape},E=new Zu(e,l.shape,c.shape);return u.runWebGLProgram(E,[k,C],Ln(b.dtype,w.dtype))}),x=zo({inputs:{real:g,imag:A},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(A),x}let d=a||Ln(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){let f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?N.fromUint8ToStringArray(f):f,A=l.dtype==="string"?N.fromUint8ToStringArray(m):m,[x,y]=r(l.shape,c.shape,g,A,d),b=u.makeTensorInfo(y,d),w=u.texData.get(b.dataId);return w.values=x,b}let p=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new Jd(t,l.shape,c.shape,n):h=new Zu(e,l.shape,c.shape),u.runWebGLProgram(h,[l,c],d)}}function Cm(e,t=!1){if(e==="linear")return t?$J:CJ;if(e==="relu")return t?_J:NJ;if(e==="elu")return t?DJ:TJ;if(e==="relu6")return t?PJ:EJ;if(e==="prelu")return t?UI:VI;if(e==="leakyrelu")return t?WI:BI;if(e==="sigmoid")return t?FJ:RJ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var HI=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Fs(this.outputShape.length);let c=s?e[1]:e[2],u=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let A=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${x};
          int batchB = ${y};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${A}

        ${g}

        setOutput(result);
      }
    `}},jI={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},qI=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},XI="return a * b;";function Zy(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=N.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),c=new qI(jI.REAL,s.shape,r.shape),u=new qI(jI.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=zo({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[c,u]=ZY(s.shape,r.shape,i.values,l.values,a),d=n.makeTensorInfo(u,a),p=n.texData.get(d.dataId);return p.values=c,d}let o;return K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Jd(XI,s.shape,r.shape):o=new Zu(XI,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var tQ={kernelName:Ka,backendName:"webgl",kernelFunc:Zy};function nQ(e,t,n){let s=[fl(e.shape),...ml(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[fl(t),...ml(t)],o=new DI(a,s),i=!0,l=[s],c=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function ve(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=v.sizeFromShape(r.shape),l=v.inferFromImplicitShape(a,i),c=v.sizeFromShape(l);v.assert(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=o.texData.get(r.dataId);return u.isPacked&&!Kd(r.shape,l)&&!(u.texture!==null&&Kd(u.shape,l))?nQ(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var sQ={kernelName:Ci,backendName:"webgl",kernelFunc:ve},KI=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${v.isInt(u)?u.toPrecision(2):u}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},rQ=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,u=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function aQ(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=N.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function yl(e,t,n,s){let r=aQ(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:c}=r[o],u,d;n==="mean"?u=o===0?new KI({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},i):new KI({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c}):u=new rQ({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},n),d=a,a=s.runWebGLProgram(u,[a],t),d.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(d)}return a}var oQ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=bt(this.rank),r=iQ(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function iQ(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var lQ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=bt(this.rank),r=$I("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=r[c];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Tm(e,t,n){let s=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lQ(e.shape,t):new oQ(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function uQ(e,t,n,s){let r=t,a=e.shape.length,o=v.parseAxisParam(r,e.shape),i=o,l=N.getAxesPermutation(i,a),c=l!=null,u=e;c&&(u=Tm(e,l,s),i=N.getInnerMostAxes(i.length,a)),N.assertAxesAreInnerMostDims("sum",i,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,i),h=d;n&&(h=N.expandShapeToKeepDim(d,o));let f=v.sizeFromShape(p),g=v.sizeFromShape(e.shape)/f,A=ve({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),x=od(e.dtype),y=yl(A,x,"sum",s),b=ve({inputs:{x:y},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(y),c&&s.disposeIntermediateTensorInfo(u),b}function Nm(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return uQ(r,a,o,n)}var cQ={kernelName:oo,backendName:"webgl",kernelFunc:Nm};function Hn(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];let c;if(o.shouldExecuteOnCPU([r])){let d=o.texData.get(r.dataId).values,p=Ky(d,r.shape,r.dtype,a,l);c=o.makeTensorInfo(l,r.dtype);let h=o.texData.get(c.dataId);h.values=p}else c=Tm(r,a,o);return c}var dQ={kernelName:po,backendName:"webgl",kernelFunc:Hn},ZI=1e3;function Em({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),A=v.sizeFromShape(m),x=v.sizeFromShape(g),b=qi.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[A,d,h]:[A,h,d],k=s?[x,f,p]:[x,p,f],C=ve({inputs:{x:e},backend:r,attrs:{shape:w}}),E=ve({inputs:{x:t},backend:r,attrs:{shape:k}}),R=[C,E],F=Math.max(A,x),D=n?C.shape[1]:C.shape[2],P=a!=null,T=o!=null,M=l==="leakyrelu",U=l!=null?Cm(l,!0):null,j=P||T||M||U!=null,z;if((h===1||f===1)&&D>ZI&&j===!1){let Z=C,J=E;n&&(Z=Hn({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),R.push(Z)),s&&(J=Hn({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(J));let ee=f!==1,ne=f===1,Q=Z;ee&&(Q=ve({inputs:{x:Z},backend:r,attrs:{shape:[F,D,1]}}),R.push(Q));let te=f===1?2:1,oe=J;ne&&(oe=ve({inputs:{x:J},backend:r,attrs:{shape:[F,1,D]}}),R.push(oe));let he=Zy({inputs:{a:Q,b:oe},backend:r});z=Nm({inputs:{x:he},backend:r,attrs:{axis:te,keepDims:!0}}),R.push(he)}else{let Z=Ln(e.dtype,t.dtype),J=new HI(w,k,[F,h,f],n,s,P,U,T,M),ee=[C,E];if(a!=null&&ee.push(a),T&&ee.push(o),M){let ne=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));ee.push(ne),R.push(ne)}z=r.runWebGLProgram(J,ee,Z)}let X=ve({inputs:{x:z},backend:r,attrs:{shape:b}});R.push(z);for(let Z of R)r.disposeIntermediateTensorInfo(Z);return X}function pQ(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return Em({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var hQ={kernelName:fo,backendName:"webgl",kernelFunc:pQ},YI="return abs(x);";function fQ(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=EI(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ku(s.shape,YI):r=new Mo(s.shape,YI),n.runWebGLProgram(r,[s],s.dtype)}var mQ={kernelName:ti,backendName:"webgl",kernelFunc:fQ},gQ=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,AQ=ot({opSnippet:gQ}),yQ={kernelName:Vl,backendName:"webgl",kernelFunc:AQ},xQ=yr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,bQ=ot({opSnippet:xQ}),vQ={kernelName:Ul,backendName:"webgl",kernelFunc:bQ},JI="return a + b;",wQ=In({opSnippet:JI,packedOpSnippet:JI,supportsComplex:!0,cpuKernelImpl:$Y}),kQ={kernelName:Vr,backendName:"webgl",kernelFunc:wQ},SQ=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},IQ=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function Rm(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return ys({inputs:{x:s[0]},backend:n});if(s.length>K().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),c=Rm({inputs:s.slice(0,l),backend:n}),u=Rm({inputs:s.slice(l),backend:n});return Rm({inputs:[c,u],backend:n})}let r=s.map(l=>l.dtype).reduce((l,c)=>Ln(l,c)),a=s.map(l=>l.shape),i=K().getBool("WEBGL_PACK")?new IQ(s[0].shape,a):new SQ(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var CQ={kernelName:wa,backendName:"webgl",kernelFunc:Rm};function TQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=Hn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("all",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=yl(m,m.dtype,"all",n),A;if(o){let x=N.expandShapeToKeepDim(p,l);A=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else A=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),A}var NQ={kernelName:Gl,backendName:"webgl",kernelFunc:TQ};function EQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=Hn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("any",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=yl(m,m.dtype,"any",n),A;if(o){let x=N.expandShapeToKeepDim(p,l);A=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else A=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),A}var RQ={kernelName:Hl,backendName:"webgl",kernelFunc:EQ},$Q=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},DQ=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=bt(i),c=Gn("coords",i),u,d;if(a===1){d=i+1;let C=bt(d);u=`
        ${C} sourceLocR = ${C}(${c.join()}, 0);
        ++${c[i-1]};
        ${C} sourceLocG = ${C}(${c.join()}, 0);
        ++${c[i-2]};
        ${C} sourceLocA = ${C}(${c.join()}, 0);
        --${c[i-1]};
        ${C} sourceLocB = ${C}(${c.join()}, 0);
        --${c[i-2]};`}else d=i,u=`
        ${l} sourceLocR = coords;
        ++${c[i-1]};
        ${l} sourceLocG = coords;
        ++${c[i-2]};
        ${l} sourceLocA = coords;
        --${c[i-1]};
        ${l} sourceLocB = coords;
        --${c[i-2]};`;let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(C=>"int "+C),m=Gn("sourceLocR",d-1).concat("inIdx.r"),g=Gn("sourceLocG",d-1).concat("inIdx.g"),A=Gn("sourceLocB",d-1).concat("inIdx.b"),x=Gn("sourceLocA",d-1).concat("inIdx.a"),y=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${A.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${A.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function QI(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=N.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new $Q(i,n,s==null),c=[t];s!=null&&c.push(s);let u=e.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let d=QI(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function e4(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=N.computeOptimalWindowSize(a),i=new DQ(r,o,n,s==null),l=s==null?[t]:[t,s],c=e.runWebGLProgram(i,l,"int32");if(c.shape.length===t.shape.length){let u=e4(e,t,n,c);return e.disposeIntermediateTensorInfo(c),u}return c}function t4(e,t,n,s){let r=[n];if(N.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!K().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[c,u]=N.computeOutAndReduceShapes(l.shape,r),d=v.sizeFromShape(u),p=ve({inputs:{x:l},backend:e,attrs:{shape:[-1,d]}});a.push(p);let h=QI(e,p,s);a.push(h);let f=ve({inputs:{x:h},backend:e,attrs:{shape:c}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return e4(e,t,s)}function _Q(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Hn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=t4(n,l,o[0],"max");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var PQ={kernelName:ka,backendName:"webgl",kernelFunc:_Q};function FQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Hn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=t4(n,l,o[0],"min");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var OQ={kernelName:jl,backendName:"webgl",kernelFunc:FQ},MQ=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,zQ=ot({opSnippet:MQ}),LQ={kernelName:ql,backendName:"webgl",kernelFunc:zQ},BQ=yr+"return log(x + sqrt(x * x + 1.0));",WQ=ot({opSnippet:BQ}),VQ={kernelName:Xl,backendName:"webgl",kernelFunc:WQ},UQ=yr+`
  return atan(x);
`,GQ=ot({opSnippet:UQ}),HQ={kernelName:Kl,backendName:"webgl",kernelFunc:GQ},jQ=QJ+`
  return atan(a, b);
`,qQ=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+eQ+`
  return result;
`,XQ=In({opSnippet:jQ,packedOpSnippet:qQ}),KQ={kernelName:Yl,backendName:"webgl",kernelFunc:XQ},ZQ=yr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,YQ=ot({opSnippet:ZQ}),JQ={kernelName:Zl,backendName:"webgl",kernelFunc:YQ},Qd=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,A="0.0";if(f||(A="-1.0 / 1e-20"),n){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(y="avgValue / count");let b=Math.floor(a/4)*4,w=a%4,k=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${y});
      }
    `}},Yy=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,A=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",y="0.0";if(x||(y="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${A});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let k=Math.floor(a/4)*4,C=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${A});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${k};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${w});
        }
      }
    `}};function QQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Gu(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return ys({inputs:{x:r},backend:n});let d=new Qd(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var eee={kernelName:Sa,backendName:"webgl",kernelFunc:QQ};function tee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],d=N.computePool3DInfo(r.shape,a,o,u,i,l,c),p=new Yy(d,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var nee={kernelName:Mc,backendName:"webgl",kernelFunc:tee},see=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.top,u=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},ree=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function aee(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new ree(p);return n.runWebGLProgram(h,[r],o.dtype)}var oee={kernelName:sh,backendName:"webgl",kernelFunc:aee};function iee(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Gu([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=N.computePool2DInfo(o.shape,i,l,1,c),d=new see(u);return n.runWebGLProgram(d,[r],o.dtype)}var lee={kernelName:nh,backendName:"webgl",kernelFunc:iee};function uee(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Em({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var cee={kernelName:Ia,backendName:"webgl",kernelFunc:uee},dee=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},pee=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},hee=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;v.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=[s,r,a],u=null;o!=null&&(u=o.shape,c.push(o));let d=null;i!=null&&(d=i.shape,c.push(i));let p=K().getBool("WEBGL_PACK_NORMALIZATION")?new pee(s.shape,r.shape,a.shape,u,d,l):new dee(s.shape,r.shape,a.shape,u,d,l);return t.runWebGLProgram(p,c,c[0].dtype)},fee={kernelName:za,backendName:"webgl",kernelFunc:hee},mee=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=bt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=gee(this.rank),s,r=e.map((a,o)=>`sourceLoc.${Jy[o]} = start[${o}] + coords.${Jy[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Jy=["x","y","z","w","u","v"];function gee(e){if(e===1)return"sourceLoc";if(e<=6)return Jy.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var Aee=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=bt(this.rank),n=Gn("coords",this.rank),s=Gn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,u)=>`start[${u}]`).join()});`:e.map((c,u)=>`${s[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function yee(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Ft.computeFlatOffset(t,v.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function Yu(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Ft.parseSliceParams(r,a,o);if(Ft.assertParamsValid(r,i,l),v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.texData.get(r.dataId),p=sJ(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}let{isPacked:c}=n.texData.get(r.dataId),u=Ft.isSliceContinous(r.shape,i,l);if(c||!u){let d=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Aee(l):new mee(l),p=[i];return n.runWebGLProgram(d,[r],r.dtype,p)}return n.uploadToGPU(r.dataId),yee(r,i,l,n)}var xee={kernelName:$i,backendName:"webgl",kernelFunc:Yu},bee=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,y)=>x*y),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:l}}),m=Hn({inputs:{x:f},backend:n,attrs:{perm:c}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:u}}),A=Yu({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),A},vee={kernelName:ni,backendName:"webgl",kernelFunc:bee};function wee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),c=NI(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var kee={kernelName:rh,backendName:"webgl",kernelFunc:wee};function See(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var Iee={kernelName:ah,backendName:"webgl",kernelFunc:See},Cee="return float(a != b);",n4=In({opSnippet:Cee,cpuKernelImpl:JY,dtype:"bool"}),Tee={kernelName:xi,backendName:"webgl",kernelFunc:n4};function ep(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return ys({inputs:{x:r.complexTensorInfos.real},backend:n})}var Nee={kernelName:qc,backendName:"webgl",kernelFunc:ep},Eee="return float(int(x));";function Ree(e,t){let n=new Mo(e.shape,Eee),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Qy(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return ys({inputs:{x:r},backend:n});let o=Ht(r.shape),i=Qy({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=zo({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=ep({inputs:{input:r},backend:n}),i=Qy({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=ys({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Ree(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=n4({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var $ee={kernelName:Ca,backendName:"webgl",kernelFunc:Qy},s4="return ceil(x);",Dee=ot({opSnippet:s4,packedOpSnippet:s4,cpuKernelImpl:_Y}),_ee={kernelName:Ta,backendName:"webgl",kernelFunc:Dee},Pee=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},Fee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Oee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;K().getBool("WEBGL_PACK_CLIP")?i=new Fee(r.shape):i=new Pee(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var Mee={kernelName:Ur,backendName:"webgl",kernelFunc:Oee},zee=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function r4(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Lee(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new zee(s.shape),o=[r4(s,r.complexTensorInfos.real),r4(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var Bee={kernelName:Lc,backendName:"webgl",kernelFunc:Lee},Wee=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},Vee=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=bt(s),a=Gn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],c=o.slice(-2),u=o.join(),d=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${u}), vec2(${c.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${$m(o,l,m)}),
            vec2(${$m(c,l,m)}));
        }`}let p=i.length,h=i[i.length-1];d+=`
        return getChannel(
          getT${p}(${$m(o,l,h)}),
          vec2(${$m(c,l,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function $m(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function Dm(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return ys({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Uee={kernelName:Uc,backendName:"webgl",kernelFunc:Dm};function Ju(e,t,n){let s=e[0].dtype;if(s==="complex64"){let u=e.map(m=>ep({inputs:{input:m},backend:n})),d=e.map(m=>Dm({inputs:{input:m},backend:n})),p=Ju(u,t,n),h=Ju(d,t,n),f=zo({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let u=e.map(A=>{let x=v.sizeFromShape(A.shape.slice(t));return ve({inputs:{x:A},backend:n,attrs:{shape:[-1,x]}})}),d=u.map(A=>({vals:n.readSync(A.dataId),shape:A.shape})),p=N.computeOutShape(u.map(A=>A.shape),1),h=u[0].shape[0]===1,f=PY(d,p,s,h),m=N.computeOutShape(e.map(A=>A.shape),t),g=n.makeTensorInfo(m,s,f);return u.forEach(A=>n.disposeIntermediateTensorInfo(A)),g}if(e.length>K().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),d=Ju(e.slice(0,u),t,n),p=Ju(e.slice(u),t,n),h=Ju([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}if(K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new Vee(e.map(d=>d.shape),t);return n.runWebGLProgram(u,e,s)}let{tensors2D:a,outShape:o}=Gee(e,t,n),i=new Wee(a.map(u=>u.shape)),l=n.runWebGLProgram(i,a,s);a.forEach(u=>n.disposeIntermediateTensorInfo(u));let c=ve({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function Gee(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ve({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function a4(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return ys({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),Ju(i,a,n)}var Hee={kernelName:si,backendName:"webgl",kernelFunc:a4},o4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,A=m?2:3,x=m?3:1,y="",b="";n&&(s?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:y=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${A}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},jee=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},qee=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Fs(this.outputShape.length);let{dataFormat:n}=t,s=Un(),r=n==="channelsLast",a=r?0:1,o=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.y + ${u};
          pos = rc.x + ${c};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+u}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+u}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function i4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=s.texData.get(e.dataId),u=n.inChannels,d=l[0]*l[1]*l[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,A=[];if(!((d===1||p===1)&&u>ZI)&&c.isPacked&&h&&c.texture!=null&&l[2]%2!=0&&v.arraysEqual(c.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),w={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},k=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,v.assert(Kd(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);let C=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});A.push(C);let E=Em({a:w,b:C,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=s.texData.get(E.dataId);v.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=k,R.shape=n.outShape,g=ys({inputs:{x:E},backend:s}),g.shape=n.outShape,A.push(E)}else{let b=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],w=ve({inputs:{x:e},backend:s,attrs:{shape:[1,b,n.inChannels]}}),k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),C=Em({a:w,b:k,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=ve({inputs:{x:C},backend:s,attrs:{shape:n.outShape}}),A.push(w),A.push(k),A.push(C)}for(let b of A)s.disposeIntermediateTensorInfo(b);return g}function l4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=l*c*u,g=p*d,A=[m,g],x=!0,y=!1,b=[],w=ve({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w),b.push(k);let C=new qee(A,n),E=[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=s.runWebGLProgram(C,[w],"float32",E),F=ve({inputs:{x:R},backend:s,attrs:{shape:[1,A[0],A[1]]}});b.push(R),b.push(F);let D=r!=null,P=a!=null,T=i==="leakyrelu",M=i?Cm(i,!0):null,U=new HI(F.shape,k.shape,[1,g,n.outChannels],x,y,D,M,P,T),j=[F,k];if(r&&j.push(r),P&&j.push(a),T){let J=s.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));j.push(J),b.push(J)}let z=s.runWebGLProgram(U,j,"float32"),X=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],Z=ve({inputs:{x:z},backend:s,attrs:{shape:X}});b.push(z);for(let J of b)s.disposeIntermediateTensorInfo(J);return Z}function Xee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=i4({x:r,filter:a,convInfo:p,backend:n});else if(K().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=l4({x:r,filter:a,convInfo:p,backend:n});else{let m=new o4(p);h=n.runWebGLProgram(m,[r,a],"float32")}let f=ve({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}var Kee={kernelName:Na,backendName:"webgl",kernelFunc:Xee},Zee=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Yee=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,c=a?2:3,u=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Jee=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Qee=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function ete(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),h=new Zee(p);return n.runWebGLProgram(h,[r,a],"float32")}var tte={kernelName:oh,backendName:"webgl",kernelFunc:ete};function nte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=new Yee(p);return n.runWebGLProgram(h,[r,a],"float32")}var ste={kernelName:Ea,backendName:"webgl",kernelFunc:nte};function rte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=N.computeConv3DInfo(r.shape,a.shape,o,l,i),u=new jee(c);return n.runWebGLProgram(u,[r,a],"float32")}var ate={kernelName:Bc,backendName:"webgl",kernelFunc:rte};function ote(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,c=N.computeConv3DInfo(r.shape,l,o,1,i),u=new Jee(c);return n.runWebGLProgram(u,[r,a],"float32")}var ite={kernelName:ih,backendName:"webgl",kernelFunc:ote};function lte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,c=N.computeConv3DInfo(l,a.shape,i,1,o),u=new Qee(c);return n.runWebGLProgram(u,[r,a],"float32")}var ute={kernelName:lh,backendName:"webgl",kernelFunc:lte},cte=GI+`
  return cos(x);
`,dte=ot({opSnippet:cte}),pte={kernelName:Ra,backendName:"webgl",kernelFunc:dte},hte=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,fte=ot({opSnippet:hte}),mte={kernelName:$a,backendName:"webgl",kernelFunc:fte},gte=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[c]=t,[u,d]=n;this.outputShape=[c,u,d,l];let p=s==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,A]=u>1?[`${(o-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,y,b]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${y};

        float in_y = ${A};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},Ate=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new gte(r.shape,a.shape,i,l,c);return n.runWebGLProgram(u,[r,a,o],"float32")},yte={kernelName:ai,backendName:"webgl",kernelFunc:Ate},u4=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let s=e.length,r=t?"0.0":`getX(${c4(s,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${bt(s)} coords = getOutputCoords();
        int end = ${d4(s,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${d4(s,"coords")} = idx;
          val += getX(${c4(s,"coords")});
        }
        setOutput(val);
      }
    `}};function c4(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function d4(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function xte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length,c=N.getAxesPermutation([a],l),u=r;c!=null&&(u=Hn({inputs:{x:r},backend:n,attrs:{perm:c}}));let d=N.getInnerMostAxes(1,l)[0];if(d!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);let p=u.shape[d],h=ys({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new u4(u.shape,!1,i),g=[[f]],A=h;h=n.runWebGLProgram(m,[h],h.dtype,g),n.disposeIntermediateTensorInfo(A)}if(o){let f=new u4(u.shape,o,i),m=h;h=n.runWebGLProgram(f,[h],h.dtype),n.disposeIntermediateTensorInfo(m)}if(c!=null){let f=N.getUndoAxesPermutation(c),m=Hn({inputs:{x:h},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),m}return h}var bte={kernelName:ri,backendName:"webgl",kernelFunc:xte};function vte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=NI(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=DY(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var wte={kernelName:uh,backendName:"webgl",kernelFunc:vte},kte=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Ste(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=new kte(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var Ite={kernelName:oi,backendName:"webgl",kernelFunc:Ste},p4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Fs(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",c="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${c}
        setOutput(result);
      }
    `}},h4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Fs(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,d=u,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<u;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let A=g*2;if(p+=`
          xC = xCCorner + ${A*l};
          `,i===1){if(A<u&&(o%2==1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }
              `,l===1&&A>0?p+=`
                xC${A} = vec4(xTexelC${A-2}.zw, xTexelC${A}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${A} = vec4(previous.zw, xTexelC${A}.xy);
                  } else {
                    xC${A} = vec4(0.0, 0.0, xTexelC${A}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xC${A} = xTexelC${A};
                `,A+1<u)){let x=o%2==0?v.nearestLargerEven(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                    xTexelC${A+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${A+1}.zw = vec2(0.0);
                    }
                    xTexelC${A+1}Ready = 1;
                  }
                  `,l>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                      xTexelC${A} = getX(batch, xR, xCOffset, d1);
                      xTexelC${A}Ready = 1;
                    }
                    `),p+=`
                  xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.xy);
                  `):x===1?p+=`
                    xC${A+1} = xTexelC${A};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                      xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${A+1}.zw = vec2(0.0);
                      }
                      xTexelC${A+1}Ready = 1;
                    }

                    xC${A+1} = xTexelC${A+1};
                    `}}else A<u&&(o%2==1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.0);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
              `,A+1<u&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${A+1} = vec4(xTexelC${A+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(
                  xTexelC${A}.xy, xTexelC${A+1}.xy);
              `,A+1<u&&(p+=`
                  xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
                `)));A<u&&(p+=`
            wTexel = getW(r, ${A}, d1, q);
            dotProd += xC${A} * vec4(wTexel.xz, wTexel.xz);
          `,A+1<u&&(p+=`
              wTexel = getW(r, ${A+1}, d1, q);
              dotProd += xC${A+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function Cte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let d=N.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p;K().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?p=new h4(d):p=new p4(d);let h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",h)}var Tte={kernelName:Da,backendName:"webgl",kernelFunc:Cte},Nte=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ete=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Rte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s,d=N.computeConv2DInfo(r.shape,u,o,i,l,c,!0),p=new Nte(d);return n.runWebGLProgram(p,[r,a],"float32")}var $te={kernelName:ch,backendName:"webgl",kernelFunc:Rte};function Dte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s,d=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),p=new Ete(d);return n.runWebGLProgram(p,[r,a],"float32")}var _te={kernelName:dh,backendName:"webgl",kernelFunc:Dte},Pte=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Fte(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=v.sizeFromShape(s.shape),o=ve({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new Pte(a),l=n.runWebGLProgram(i,[o],o.dtype),c=ve({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var Ote={kernelName:ph,backendName:"webgl",kernelFunc:Fte},Mte=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:c}=e,{top:u,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${u}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function zte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=N.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),u,d=new Mte(c);u=n.runWebGLProgram(d,[r,a],"float32");let p=ve({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),p}var Lte={kernelName:Wc,backendName:"webgl",kernelFunc:zte};function Bte(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:A,expandDims:x}=N.getEinsumPermutation(h,l[g]),y;N.isIdentityPermutation(A)?y=a[g]:(y=Hn({inputs:{x:a[g]},backend:n,attrs:{perm:A}}),f.push(y));let b=y.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(y.shape,b)||(y=ve({inputs:{x:y},backend:n,attrs:{shape:b}}),f.push(y)),p===null?p=y:(p=Zy({inputs:{a:y,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Nm({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var Wte={kernelName:Vc,backendName:"webgl",kernelFunc:Bte},Vte="return (x >= 0.0) ? x : (exp(x) - 1.0);",Ute=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Gte=ot({opSnippet:Vte,packedOpSnippet:Ute}),Hte={kernelName:Pa,backendName:"webgl",kernelFunc:Gte},jte="return (b >= 1.0) ? a : a * (b + 1.0);",qte=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Xte=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jd(qte,s.shape,r.shape):new Zu(jte,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},Kte={kernelName:mh,backendName:"webgl",kernelFunc:Xte},Zte=`
  return vec4(equal(a, b));
`,Yte="return float(a == b);",Jte=In({opSnippet:Yte,packedOpSnippet:Zte,dtype:"bool",cpuKernelImpl:FY}),Qte={kernelName:ii,backendName:"webgl",kernelFunc:Jte},ene=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,tne=ot({opSnippet:ene}),nne={kernelName:Jl,backendName:"webgl",kernelFunc:tne},f4="return exp(x);",m4=ot({opSnippet:f4,packedOpSnippet:f4,cpuKernelImpl:OY,dtype:"float32"}),sne={kernelName:Fa,backendName:"webgl",kernelFunc:m4};function ex(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),ve({inputs:{x:a},backend:s,attrs:{shape:i}})}var rne={kernelName:li,backendName:"webgl",kernelFunc:ex},g4="return exp(x) - 1.0;",ane=ot({opSnippet:g4,packedOpSnippet:g4,cpuKernelImpl:MY}),one={kernelName:ui,backendName:"webgl",kernelFunc:ane},A4=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function y4(e,t,n){let s=n.texData.get(e.dataId),r=v.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=ve({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,c=new A4("real",l,t),u=new A4("imag",l,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=zo({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let m=ve({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function ine(e){let{inputs:t,backend:n}=e,{input:s}=t;return y4(s,!1,n)}var lne={kernelName:gh,backendName:"webgl",kernelFunc:ine},une=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function tp(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new une(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var cne={kernelName:Ql,backendName:"webgl",kernelFunc:tp},dne=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},pne={kernelName:ci,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new dne(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},x4="return floor(x);",hne=ot({opSnippet:x4,packedOpSnippet:x4,cpuKernelImpl:zY}),fne={kernelName:Oa,backendName:"webgl",kernelFunc:hne},mne=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,gne=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Ane=In({opSnippet:mne,packedOpSnippet:gne,dtype:"int32"}),yne={kernelName:Ma,backendName:"webgl",kernelFunc:Ane},xne=class{constructor(e){this.variableNames=["A"];let t=Un(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},bne=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Un(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},vne={kernelName:Yc,backendName:"webgl",kernelFunc:wne},Qu;function wne(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],d=[c,l,a];(i||o)&&(Qu==null&&(Qu=document.createElement("canvas").getContext("2d")),Qu.canvas.width=l,Qu.canvas.height=c,Qu.drawImage(r,0,0,l,c),r=Qu.canvas);let p=n.makeTensorInfo(u,"int32");n.texData.get(p.dataId).usage=_s.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);let h=K().getBool("WEBGL_PACK")?new bne(d):new xne(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}function kne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),A,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))A=i4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(K().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)A=l4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,w=i!=null,k=h==="leakyrelu",C=h?Cm(h,!1):null,E=new o4(g,b,C,w,k),R=[r,a];if(o&&R.push(o),i&&R.push(i),k){let F=n.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));R.push(F),x.push(F)}A=n.runWebGLProgram(E,R,"float32")}let y=ve({inputs:{x:A},backend:n,attrs:{shape:g.outShape}});return x.push(A),x.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var Sne={kernelName:mo,backendName:"webgl",kernelFunc:kne};function Ine(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=s,f=[],m=u;m==null&&(m=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=N.computeConv2DInfo(r.shape,a.shape,l,m,c,d,!0),A=K().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=p?Cm(p,A):null,y=[r,a],b=o!=null,w=i!=null,k=p==="leakyrelu";if(b&&y.push(o),w&&y.push(i),k){let F=n.makeTensorInfo([],"float32",v.createScalarValue(h,"float32"));y.push(F),f.push(F)}let C;A?C=new h4(g,b,x,w,k):C=new p4(g,b,x,w,k);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(C,y,"float32",E);return f.forEach(F=>n.disposeIntermediateTensorInfo(F)),R}var Cne={kernelName:go,backendName:"webgl",kernelFunc:Ine},Tne=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=bt(t.length),r=bt(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Nne(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,c,u,d]=N.prepareAndValidate(s,r),p=ve({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=ve({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let A=n.readSync(r.dataId),x=n.bufferSync(s),y=LY(A,x,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,y.values)}let f=new Tne(o,d,[c,u]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var Ene={kernelName:pi,backendName:"webgl",kernelFunc:Nne},Rne=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=bt(this.rank),s=$ne(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function $ne(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[r]}`);return s.join()}function b4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=n.readSync(a.dataId),u=r.shape[l];for(let b=0;b<c.length;++b){let w=c[b];v.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=v.sizeFromShape(a.shape),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=ve({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}});h.push(f),h.push(m);let g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let b=n.bufferSync(m),w=n.bufferSync(f),k=BY(w,b,g);return h.forEach(C=>n.disposeIntermediateTensorInfo(C)),n.makeTensorInfo(d.outputShape,k.dtype,k.values)}let A=new Rne(f.shape,g),x=n.runWebGLProgram(A,[f,m],f.dtype);h.push(x);let y=ve({inputs:{x},backend:n,attrs:{shape:d.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var Dne={kernelName:di,backendName:"webgl",kernelFunc:b4},_ne="return float(a > b);",Pne=`
  return vec4(greaterThan(a, b));
`,Fne=In({opSnippet:_ne,packedOpSnippet:Pne,cpuKernelImpl:WY,dtype:"bool"}),One={kernelName:hi,backendName:"webgl",kernelFunc:Fne},Mne="return float(a >= b);",zne=`
  return vec4(greaterThanEqual(a, b));
`,Lne=In({opSnippet:Mne,packedOpSnippet:zne,dtype:"bool",cpuKernelImpl:VY}),Bne={kernelName:La,backendName:"webgl",kernelFunc:Lne};function Wne(e){let{inputs:t,backend:n}=e,{input:s}=t;return y4(s,!0,n)}var Vne={kernelName:Ah,backendName:"webgl",kernelFunc:Wne},Une="return float(!isnan(x) && !isinf(x));",Gne=ot({opSnippet:Une,dtype:"bool"}),Hne={kernelName:eu,backendName:"webgl",kernelFunc:Gne},jne="return float(isinf(x));",qne=ot({opSnippet:jne,dtype:"bool"}),Xne={kernelName:tu,backendName:"webgl",kernelFunc:qne},Kne="return float(isnan(x));",Zne=ot({opSnippet:Kne,dtype:"bool"}),Yne={kernelName:nu,backendName:"webgl",kernelFunc:Zne},Jne="return float(a < b);",Qne=`
  return vec4(lessThan(a, b));
`,ese=In({opSnippet:Jne,packedOpSnippet:Qne,cpuKernelImpl:UY,dtype:"bool"}),tse={kernelName:mi,backendName:"webgl",kernelFunc:ese},nse="return float(a <= b);",sse=`
  return vec4(lessThanEqual(a, b));
`,rse=In({opSnippet:nse,packedOpSnippet:sse,cpuKernelImpl:GY,dtype:"bool"}),ase={kernelName:gi,backendName:"webgl",kernelFunc:rse};function ose(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=HY(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var ise={kernelName:yh,backendName:"webgl",kernelFunc:ose},lse=`if (x < 0.0) return NAN;
  return log(x);`,use=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,cse=ot({opSnippet:lse,packedOpSnippet:use,cpuKernelImpl:jY}),dse={kernelName:Wa,backendName:"webgl",kernelFunc:cse},pse="return log(1.0 + x);",hse=ot({opSnippet:pse}),fse={kernelName:su,backendName:"webgl",kernelFunc:hse},mse="return float(a >= 1.0 && b >= 1.0);",gse=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Ase=In({opSnippet:mse,packedOpSnippet:gse,dtype:"bool"}),yse={kernelName:Ai,backendName:"webgl",kernelFunc:Ase},xse="return float(!(x >= 1.0));",bse=ot({opSnippet:xse}),vse={kernelName:ru,backendName:"webgl",kernelFunc:bse},wse="return float(a >= 1.0 || b >= 1.0);",kse=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Sse=In({opSnippet:wse,packedOpSnippet:kse,dtype:"bool"}),Ise={kernelName:Gc,backendName:"webgl",kernelFunc:Sse},Cse=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Tse=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},Nse=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,c=K().getBool("WEBGL_PACK_NORMALIZATION")?new Tse(r.shape,a,o,i,l):new Cse(r.shape,a,o,i,l);return n.runWebGLProgram(c,[r],r.dtype)},Ese={kernelName:Hc,backendName:"webgl",kernelFunc:Nse},Rse=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},$se=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s,d=new Rse(r.shape,i,l,c,u);return n.runWebGLProgram(d,[r,a,o],r.dtype)},Dse={kernelName:xh,backendName:"webgl",kernelFunc:$se};function _se(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=yl(i,e.dtype,"max",s),c=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}function v4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=n.shouldExecuteOnCPU([r]),h=r;if(d){if(p){let y=n.texData.get(h.dataId).values,b=new Array(i);for(let C=0;C<b.length;C++)b[C]=r.shape[u[C]];let w=Ky(y,r.shape,r.dtype,u,b);h=n.makeTensorInfo(b,r.dtype);let k=n.texData.get(h.dataId);k.values=w}else h=Tm(r,u,n);c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("max",c,i);let[f,m]=N.computeOutAndReduceShapes(h.shape,c),g=f;o&&(g=N.expandShapeToKeepDim(f,l));let A;if(p){let y=n.texData.get(h.dataId).values,b=qY(y,v.sizeFromShape(m),g,r.dtype);A=n.makeTensorInfo(g,r.dtype);let w=n.texData.get(A.dataId);w.values=b}else A=_se(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),A}var Pse={kernelName:Va,backendName:"webgl",kernelFunc:v4},Fse=LI+`
  return max(a, b);
`,Ose=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Im+`
  return result;
`,Mse=In({opSnippet:Fse,packedOpSnippet:Ose,cpuKernelImpl:XY}),zse={kernelName:Ua,backendName:"webgl",kernelFunc:Mse};function Lse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Gu(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return ys({inputs:{x:r},backend:n});let d=new Qd(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var Bse={kernelName:Ga,backendName:"webgl",kernelFunc:Lse};function Wse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],d=N.computePool3DInfo(r.shape,a,o,u,i,c,l),p=new Yy(d,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var Vse={kernelName:jc,backendName:"webgl",kernelFunc:Wse},Use=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Gse=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=l-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Hse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new Yy(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new Gse(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var jse={kernelName:vh,backendName:"webgl",kernelFunc:Hse};function qse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Gu([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=!0,f=new Qd(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new Use(p),A=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),A}var Xse={kernelName:bh,backendName:"webgl",kernelFunc:qse};function Kse(e,t,n,s){let r=new Qd(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new Qd(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var Zse={kernelName:wh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;v.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let c=[1,1];v.assert(N.eitherStridesOrDilationsAreOne(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let u=N.computePool2DInfo(s.shape,r,a,c,o),[d,p]=Kse(s,i,u,l);return[d,p]}};function Yse(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=yl(i,"float32","mean",s),c=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}var Jse={kernelName:Ha,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=v.parseAxisParam(a,s.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=o.shouldExecuteOnCPU([s]),h=[],f=s;if(d){if(p){let b=o.texData.get(f.dataId).values,w=new Array(i);for(let E=0;E<w.length;E++)w[E]=s.shape[u[E]];let k=Ky(b,s.shape,s.dtype,u,w);f=o.makeTensorInfo(w,s.dtype);let C=o.texData.get(f.dataId);C.values=k}else f=Tm(s,u,o);h.push(f),c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("sum",c,i);let[m,g]=N.computeOutAndReduceShapes(f.shape,c),A=m;r&&(A=N.expandShapeToKeepDim(m,l));let x=Yse(f,g,A,o);for(let y of h)o.disposeIntermediateTensorInfo(y);return x}};function Qse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=Hn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=yl(m,m.dtype,"min",n),A;if(o){let x=N.expandShapeToKeepDim(p,l);A=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else A=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),A}var ere={kernelName:ja,backendName:"webgl",kernelFunc:Qse},tre=LI+`
  return min(a, b);
`,nre=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Im+`
  return result;
`,sre=In({opSnippet:tre,packedOpSnippet:nre,cpuKernelImpl:KY}),rre={kernelName:qa,backendName:"webgl",kernelFunc:sre},are=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let s=e.length,r=bt(s),a=t.map(c=>c[0]).join(","),o=t.map((c,u)=>c[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},ore=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=bt(s),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=Gn("rc",s),l=Gn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=n==="reflect"?0:1,p="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${i[s-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},ire=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ore(s.shape,r,a):new are(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},lre={kernelName:Xa,backendName:"webgl",kernelFunc:ire},ure=`if (b == 0.0) return NAN;
  return mod(a, b);`,cre=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Im+`
  return result;
`,dre=In({opSnippet:ure,packedOpSnippet:cre}),pre={kernelName:au,backendName:"webgl",kernelFunc:dre},hre=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},fre=`
if (a == b) {
  return 1.0;
};
return a / b;`,mre=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,w4=In({opSnippet:fre,packedOpSnippet:mre,checkOutOfBounds:!0}),gre={kernelName:_a,backendName:"webgl",kernelFunc:w4},k4="return a - b;",S4=In({opSnippet:k4,packedOpSnippet:k4,supportsComplex:!0,cpuKernelImpl:dJ}),Are={kernelName:uo,backendName:"webgl",kernelFunc:S4};function I4(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=v4({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=ve({inputs:{x:i},backend:n,attrs:{shape:l}}),u=S4({inputs:{a:r,b:c},backend:n}),d=m4({inputs:{x:u},backend:n}),p=Nm({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=ve({inputs:{x:p},backend:n,attrs:{shape:l}}),f=w4({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var yre={kernelName:io,backendName:"webgl",kernelFunc:I4};function xre(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:I4({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],d=new hre(c,u,a),p=[[o]],h=n.runWebGLProgram(d,[l],"int32",p);return i||n.disposeIntermediateTensorInfo(l),h}var bre={kernelName:kh,backendName:"webgl",kernelFunc:xre},C4="return -x;";function vre(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=YY(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ku(s.shape,C4):r=new Mo(s.shape,C4),n.runWebGLProgram(r,[s],s.dtype)}var wre={kernelName:yi,backendName:"webgl",kernelFunc:vre},kre=Xs.nonMaxSuppressionV3Impl;function Sre(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=kre(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Ire={kernelName:bi,backendName:"webgl",kernelFunc:Sre},Cre=Xs.nonMaxSuppressionV4Impl;function Tre(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:h}=Cre(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Nre={kernelName:ou,backendName:"webgl",kernelFunc:Tre},Ere=Xs.nonMaxSuppressionV5Impl;function Rre(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:A}=Ere(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var $re={kernelName:vi,backendName:"webgl",kernelFunc:Rre},Dre=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},_re=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=v.sizeFromShape(r.shape),c=new Dre(l,a,o,i),u=ve({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[u],r.dtype);n.disposeIntermediateTensorInfo(u);let p=[...r.shape,a],h=ve({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},Pre={kernelName:ki,backendName:"webgl",kernelFunc:_re};function _m(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=ep({inputs:{input:s},backend:n}),a=_m({inputs:{x:r},backend:n}),o=Dm({inputs:{input:s},backend:n}),i=_m({inputs:{x:o},backend:n}),l=zo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return tp({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Fre={kernelName:Bi,backendName:"webgl",kernelFunc:_m};function T4(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=ep({inputs:{input:s},backend:n}),a=T4({inputs:{x:r},backend:n}),o=Dm({inputs:{input:s},backend:n}),i=_m({inputs:{x:o},backend:n}),l=zo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return tp({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Ore={kernelName:wi,backendName:"webgl",kernelFunc:T4};function Mre(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return ex({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=ex({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=a4({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var zre={kernelName:Si,backendName:"webgl",kernelFunc:Mre},Lre=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let s=e.length,r=bt(s),a=t.map(l=>l[0]).join(","),o=t.map((l,c)=>l[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Bre=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=bt(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=Gn("rc",s),l=Gn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${c}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${d[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${u});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},N4=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(v.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return tp({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bre(r.shape,a,o):new Lre(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},Wre={kernelName:Za,backendName:"webgl",kernelFunc:N4},Vre=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Ure=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Im+`
  return result;
`,Gre=In({opSnippet:Vre,packedOpSnippet:Ure}),Hre={kernelName:Ya,backendName:"webgl",kernelFunc:Gre};function jre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],c=v.parseAxisParam(a,r.shape),u=c,d=N.getAxesPermutation(u,i),p=r;d!=null&&(p=Hn({inputs:{x:r},backend:n,attrs:{perm:d}}),u=N.getInnerMostAxes(u.length,i),l.push(p)),N.assertAxesAreInnerMostDims("prod",u,i);let h;if(n.shouldExecuteOnCPU([p])){let f=n.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:A}=QY(p.shape,p.dtype,f,u);h=n.makeTensorInfo(g,A,m)}else{let[f,m]=N.computeOutAndReduceShapes(p.shape,u),g=v.sizeFromShape(m),A=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),x=od(r.dtype),y=yl(A,x,"prod",n);h=ve({inputs:{x:y},backend:n,attrs:{shape:f}}),l.push(A),l.push(y)}if(o){l.push(h);let f=N.expandShapeToKeepDim(h.shape,c);h=ve({inputs:{x:h},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var qre={kernelName:Ii,backendName:"webgl",kernelFunc:jre},E4=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=eJ(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Xre={kernelName:iu,backendName:"webgl",kernelFunc:E4},Kre="return 1.0 / x;",Zre=ot({opSnippet:Kre}),Yre={kernelName:lu,backendName:"webgl",kernelFunc:Zre},Jre=yr+`
  return (x < 0.0) ? 0.0 : x;
`,Qre=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eae=ot({opSnippet:Jre,packedOpSnippet:Qre}),tae={kernelName:Qa,backendName:"webgl",kernelFunc:eae},nae=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,sae=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rae=ot({opSnippet:nae,packedOpSnippet:sae}),aae={kernelName:to,backendName:"webgl",kernelFunc:rae},oae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},iae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function lae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new iae(r.shape,l,c,a,o):new oae(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],"float32")}var uae={kernelName:eo,backendName:"webgl",kernelFunc:lae},cae=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function dae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new cae(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var pae={kernelName:Ih,backendName:"webgl",kernelFunc:dae},hae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},fae=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function mae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fae(r.shape,l,c,a,o):new hae(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],r.dtype)}var gae={kernelName:uu,backendName:"webgl",kernelFunc:mae},Aae=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function yae(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Aae(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var xae={kernelName:Sh,backendName:"webgl",kernelFunc:yae},bae=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=bt(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},vae=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=Gn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=bt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${r}) {
              result.a = ${u(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return d(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",d(h)}function c(h){return h[n-2]="("+h[n-2]+" + 1)",d(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",d(h)}function d(h){let f=e.map((A,x)=>p(x,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function wae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return ys({inputs:{x:r},backend:n});let l=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vae(r.shape,i):new bae(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var kae={kernelName:Ti,backendName:"webgl",kernelFunc:wae},Sae=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Iae={kernelName:Wi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Sae(s.shape,a),[c,u]=N.getImageCenter(o,s.shape[1],s.shape[2]),d=[[c,u,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,d)}},Cae=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Tae=ot({opSnippet:Cae}),Nae={kernelName:Ni,backendName:"webgl",kernelFunc:Tae},Eae="return inversesqrt(x);",Rae=ot({opSnippet:Eae,cpuKernelImpl:tJ}),$ae={kernelName:no,backendName:"webgl",kernelFunc:Rae},R4=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=bt(r.length),l=bt(a.length),c="";n===1?c="i":n===2&&(c="i, j");let u=`getIndices(${c})`,d="";s===1?d="i":s===2&&(d="i, coords[1]");let p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Dae(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=ve({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=ve({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new R4(l,i,h.shape.length,f.shape.length,u,p),A=n.runWebGLProgram(g,[f,h,m],f.dtype),x=ve({inputs:{x:A},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(m),x}var _ae={kernelName:Ei,backendName:"webgl",kernelFunc:Dae},Pae=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let c=0;c<t.length;c++)l.push(`${o[c]}`),c<e&&i.push(`${o[c]}`);s=i.join(),r=l.join()}let a=bt(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Fae(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new Pae(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],Ln(r.dtype,a.dtype))}var Oae={kernelName:Ri,backendName:"webgl",kernelFunc:Fae},Mae=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,zae=ot({opSnippet:Mae}),Lae={kernelName:cu,backendName:"webgl",kernelFunc:zae},$4="return 1.0 / (1.0 + exp(-1.0 * x));",Bae=ot({opSnippet:$4,packedOpSnippet:$4,cpuKernelImpl:nJ}),Wae={kernelName:ro,backendName:"webgl",kernelFunc:Bae},Vae=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Uae=ot({opSnippet:Vae}),Gae={kernelName:du,backendName:"webgl",kernelFunc:Uae},Hae=GI+`
  return sin(x);
`,jae=ot({opSnippet:Hae}),qae={kernelName:so,backendName:"webgl",kernelFunc:jae},Xae=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Kae=ot({opSnippet:Xae}),Zae={kernelName:Di,backendName:"webgl",kernelFunc:Kae},Yae=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Jae=ot({opSnippet:Yae}),Qae={kernelName:pu,backendName:"webgl",kernelFunc:Jae},eoe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((A,x)=>A*x),l=[[0,0]];l.push(...o);for(let A=1+a.length;A<r.shape.length;++A)l.push([0,0]);let c=[],u=N4({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=ve({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Hn({inputs:{x:f},backend:n,attrs:{perm:p}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(A=>n.disposeIntermediateTensorInfo(A)),g},toe={kernelName:_i,backendName:"webgl",kernelFunc:eoe};function noe(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[d,p,h,f,m]=rJ(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var soe={kernelName:Ch,backendName:"webgl",kernelFunc:noe};function roe(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[c,u,d]=aJ(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var aoe={kernelName:Th,backendName:"webgl",kernelFunc:roe};function ooe(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=RI(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var ioe={kernelName:Nh,backendName:"webgl",kernelFunc:ooe};function loe(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=RI(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var uoe={kernelName:Eh,backendName:"webgl",kernelFunc:loe};function coe(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,r,i),p=!1,h=new R4(c,l,r.shape.length,a.shape.length,u,[d,1],p),f=n.runWebGLProgram(h,[a,r,o],a.dtype),m=ve({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var doe={kernelName:Xc,backendName:"webgl",kernelFunc:coe};function poe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=Yu({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var hoe={kernelName:Pi,backendName:"webgl",kernelFunc:poe},D4="return sqrt(x);",foe=ot({opSnippet:D4,packedOpSnippet:D4,cpuKernelImpl:oJ}),moe={kernelName:ao,backendName:"webgl",kernelFunc:foe},goe="return x * x;",Aoe=ot({opSnippet:goe}),yoe={kernelName:hu,backendName:"webgl",kernelFunc:Aoe},_4="return (a - b) * (a - b);",xoe=In({opSnippet:_4,packedOpSnippet:_4}),boe={kernelName:lo,backendName:"webgl",kernelFunc:xoe};function voe({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=yr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Mo(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var woe={kernelName:ho,backendName:"webgl",kernelFunc:voe},koe=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=bt(n.length),a=bt(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,c)=>(i++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${i-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function Soe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=Ft.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=ve({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=Ft.computeOutShape(x,y,b),E=Yu({inputs:{x:r},backend:n,attrs:{begin:x,size:C}});w=ve({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([r])){let E=n.readSync(r.dataId),R=Be(r.shape,r.dtype,E),F=iJ(h,R,b,x);w=n.makeTensorInfo(f,r.dtype,F.values)}else{let E=new koe(x,b,h);w=n.runWebGLProgram(E,[r],r.dtype)}let k=ve({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}var Ioe={kernelName:Fi,backendName:"webgl",kernelFunc:Soe};function Coe(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=lJ(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Toe={kernelName:Kc,backendName:"webgl",kernelFunc:Coe};function Noe(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[c,u,d]=uJ(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var Eoe={kernelName:Rh,backendName:"webgl",kernelFunc:Noe};function Roe(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=cJ(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var $oe={kernelName:$h,backendName:"webgl",kernelFunc:Roe},Doe="return tan(x);",_oe=ot({opSnippet:Doe}),Poe={kernelName:Oi,backendName:"webgl",kernelFunc:_oe},Foe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Ooe=ot({opSnippet:Foe}),Moe={kernelName:co,backendName:"webgl",kernelFunc:Ooe},zoe=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=bt(this.rank),r=Loe(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Loe(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function P4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>v.decodeString(p)):l,u=Be(r.shape,r.dtype,c),d=pJ(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new zoe(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var Boe={kernelName:Gr,backendName:"webgl",kernelFunc:P4},Woe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Voe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function xl(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function F4(e){let t=1;for(;t<e;)t*=2;return t}function Uoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=K().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=K().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(n.shouldExecuteOnCPU([r])||u<i||a>l){let F=n.readSync(r.dataId),[D,P]=hJ(F,c,r.dtype,a,o);return[n.makeTensorInfo(D.shape,D.dtype,D.values),n.makeTensorInfo(P.shape,P.dtype,P.values)]}if(a===0)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(u===1)return[r,tp({attrs:{shape:c,dtype:"int32",value:0},backend:n})];let d=n.texData.get(r.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(r):r,m=v.sizeFromShape(c)/u,g=ve({inputs:{x:h},attrs:{shape:[m,u]},backend:n});p&&xl(n,h);let A=F4(a),x=F4(u),y=null,b=()=>y===null?[g,g]:[g,y],w=(F,D,P)=>{let T=b(),M=new Woe(P),j=[[u],[y===null?1:0],[Number.NEGATIVE_INFINITY],[F],[D]],z=y;y=n.runWebGLProgram(M,T,"int32",j),xl(n,z)};for(let F=1;F<A;F*=2){let D=F*2;for(let P=F;P>=1;P/=2)w(D,P,[m,x])}for(let F=x;F>A;F/=2){let D=b(),P=new Voe([m,F/2]),M=[[u],[y===null?1:0],[A]],U=y;y=n.runWebGLProgram(P,D,"int32",M),xl(n,U);let j=A/2,z=j*2;for(let X=j;X>=1;X/=2)w(z,X,y.shape)}let k=y;y=Yu({inputs:{x:y},backend:n,attrs:{begin:0,size:[m,a]}}),xl(n,k);let C=b4({inputs:{x:g,indices:y},backend:n,attrs:{axis:1,batchDims:1}});xl(n,g);let E=c.slice(0,-1);E.push(a),k=y,y=ve({inputs:{x:y},attrs:{shape:E},backend:n}),xl(n,k);let R=C;return C=ve({inputs:{x:C},attrs:{shape:E},backend:n}),xl(n,R),[C,y]}var Goe={kernelName:Mi,backendName:"webgl",kernelFunc:Uoe},Hoe=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function joe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],A=new Hoe(d,p,o,i,l,g);return n.runWebGLProgram(A,[r,a],"float32")}var qoe={kernelName:zi,backendName:"webgl",kernelFunc:joe};function Xoe(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Gu(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:c}=fJ(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var Koe={kernelName:Dh,backendName:"webgl",kernelFunc:Xoe};function Zoe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=Yu({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),A=ve({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=A,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Yoe={kernelName:Li,backendName:"webgl",kernelFunc:Zoe},Joe=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",c=Math.floor(n/4)*4,u=n%4,d=`
        sumValue += dot(values, segFilter);
    `,p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function Qoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],c=0,u=N.getAxesPermutation([c],i),d=r;u!=null&&(d=Hn({inputs:{x:r},backend:n,attrs:{perm:u}}),l.push(d),c=N.getInnerMostAxes(1,i)[0]);let p=N.segment_util.computeOutShape(d.shape,c,o),h=v.sizeFromShape([d.shape[c]]),f=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=od(r.dtype),g=(b,w,k,C,E)=>{let R=b.shape[0],F=b.shape[1],D=N.segment_util.segOpComputeOptimalWindowSize(F,E),P={windowSize:D,inSize:F,batchSize:R,numSegments:E},T=new Joe(P,w),M=n.compileAndRun(T,[b,k],C);if(l.push(M),M.shape[1]===E)return M;let U=E4({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),j=P4({inputs:{x:U},backend:n,attrs:{reps:[F/D]}});return l.push(U),l.push(j),g(M,w,j,C,E)},A=g(f,"unsortedSegmentSum",a,m,o),x=ve({inputs:{x:A},backend:n,attrs:{shape:p}}),y=x;if(u!=null){l.push(x);let b=N.getUndoAxesPermutation(u);y=Hn({inputs:{x:y},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var eie={kernelName:Zc,backendName:"webgl",kernelFunc:Qoe},tie=[Ese,Dse,hQ,mQ,yQ,vQ,kQ,CQ,NQ,RQ,PQ,OQ,LQ,VQ,KQ,HQ,JQ,nee,eee,oee,lee,cee,fee,vee,kee,Iee,$ee,_ee,Mee,Bee,XJ,Hee,tte,ste,Kee,ite,ute,ate,pte,mte,yte,bte,wte,Ite,$te,_te,Tte,Ote,Lte,Wte,Hte,Kte,Qte,nne,sne,rne,one,lne,cne,pne,fne,yne,vne,Sne,Cne,Ene,Dne,One,Bne,qJ,Vne,Uee,Hne,Xne,Yne,ZJ,tse,ase,ise,fse,dse,yse,vse,Ise,Pse,Vse,Bse,jse,Xse,Zse,zse,Jse,ere,rre,lre,pre,bre,tQ,wre,Ire,Nre,$re,Tee,Pre,Ore,zre,Wre,Hre,JJ,qre,Xre,Nee,gre,Yre,aae,tae,sQ,uae,pae,gae,xae,kae,Iae,Nae,$ae,_ae,Oae,Lae,Wae,Gae,qae,Zae,xee,yre,Qae,toe,soe,aoe,ioe,uoe,doe,hoe,moe,yoe,boe,woe,Ioe,Toe,Eoe,$oe,Are,cQ,Poe,Moe,Boe,Goe,qoe,dQ,Koe,Yoe,eie,Fre];for(let e of tie)jr(e);var Or=K();Or.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Or.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Or.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Or.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Or.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Or.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Or.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Or.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Or.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Or.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function nie(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function Jt(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function Pm(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function Le(){return`
  let index = getGlobalIndex(globalId, localId);
`}function Fe(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
  fn main([[builtin(local_invocation_id)]] localId : vec3<u32>, [[builtin(global_invocation_id)]] globalId : vec3<u32>)
`}function sie(e,t,n,s=!1){let r=`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;`;if(s===!0){let h=z4(t.shape),f=`
      [[block]] struct Matrix0 {
        numbers: array<${Pm(t.dtype,n.isVec4)}>;
      };
      [[block]] struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `;return[O4,f,r,M4,h,n.getUserCode()].join(`
`)}let a=[],o="[[block]] struct Uniforms { NAN : f32; ";n.variableNames.forEach((h,f)=>{o+=`${h.charAt(0).toLowerCase()+h.slice(1)}Shape : ${Jt(e[f].shape.length)}; `}),o+=`outShape : ${Jt(t.shape.length)} ; `;let i=t.shape.length-1;o+=`
       outShapeStrides: ${Jt(i)}; `,n.size!=null&&(o+="size : i32; "),o+="dispatchSize : vec3<u32>; ",n.uniforms&&(o+=n.uniforms),o+="};",a.push(o),n.atomic?a.push(`
    [[block]] struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):a.push(`
    [[block]] struct Matrix0 {
        numbers: array<${Pm(t.dtype,n.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),n.variableNames.forEach((h,f)=>{a.push(`
    [[block]] struct Matrix${1+f} {
      numbers: array<${Pm(e[f].dtype,n.isVec4)}>;
    };
    [[group(0), binding(${1+f})]] var<storage, read> ${h} : Matrix${1+f};
    `)}),o!==""&&a.push(`
    [[group(0), binding(${1+n.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `),a.push(r);let[l,c]=uie(t.shape,n.dispatchLayout),u=z4(t.shape),d=[O4,a.join(`
`),M4,u,l,rie(t.shape.length)];if(n.atomic||d.push(aie(t.shape,t.dtype,n.isVec4)),c===t.shape.length){let h=e.map(f=>oie(f,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);d.push(h)}return d.push(n.getUserCode()),d.join(`
`)}var O4=`
  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }

  fn isNanCustomVec4F32(val : vec4<f32>) -> vec4<f32> {
    var res = vec4<f32> (0.0);
    for (var i = 0u; i < 4u; i = i + 1u) {
      if (isNanCustom(val[i])) {
        res[i] = 1.0;
      } else {
        res[i] = 0.0;
      }
    }
    return res;
  }

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) &&
        all(coord < shape);
  }
  `,M4=`
  fn getFlatIndex1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }

  fn getFlatIndex2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return i32(dot(vec2<f32>(coords), vec2<f32>(f32(shape.y), 1.0)));
  }

  fn getFlatIndex3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return i32(dot(vec3<f32>(coords), vec3<f32>(f32(shape.y) * f32(shape.z), f32(shape.z), 1.0)));
  }

  fn getFlatIndex4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return i32(dot(vec4<f32>(coords), vec4<f32>(
        f32(shape.y) * f32(shape.z) * f32(shape.w), f32(shape.z) * f32(shape.w), f32(shape.w), 1.0)));
  }

  // Only used when the y/z dimension of workgroup size is 1.
  fn getGlobalIndex(globalId : vec3<u32>, localId : vec3<u32>) -> i32 {
    if (uniforms.dispatchSize.y == 1u && uniforms.dispatchSize.z == 1u) {
      return i32(globalId.x);
    }
    let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
      localId.y * workGroupSizeX + localId.x;
    let workGroupID = (globalId - localId)/vec3<u32>(
      workGroupSizeX, workGroupSizeY, workGroupSizeZ);
    return i32((workGroupID.z * uniforms.dispatchSize.x * uniforms.dispatchSize.y +
      workGroupID.y * uniforms.dispatchSize.x + workGroupID.x) *
      (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
      localInvocationIndex);
  }
`;function rie(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputFlatIndex(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputFlatIndex(coords : vec2<i32>) -> i32 {
          return i32(dot(vec2<f32>(coords), vec2<f32>(f32(uniforms.outShapeStrides), 1.0)));
        }
        `;break;case 3:t+=`
        fn getOutputFlatIndex(coords : vec3<i32>) -> i32 {
          return i32(dot(vec3<f32>(coords), vec3<f32>(f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), 1.0)));
        }
        `;break;case 4:t+=`
        fn getOutputFlatIndex(coords : vec4<i32>) -> i32 {
          return i32(dot(vec4<f32>(coords), vec4<f32>(
            f32(uniforms.outShapeStrides.x), f32(uniforms.outShapeStrides.y), f32(uniforms.outShapeStrides.z), 1.0)));
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function aie(e,t,n){let s=e.length,r=Pm(t,n),a;if(n?a=`fn setOutputFlat(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${r}(value);
    }`:a=`fn setOutputFlat(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3"].slice(0,s),i=Jt(s);n?a+=`
      fn setOutput(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex / 4, value);
      }
      fn setOutputI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutput(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex, value);
      }
      fn setOutputI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex, value);
      }
    `}return a}function oie(e,t,n,s){let r=iie(e,n);return e.shape.length<=t.length&&(r+=lie(e,t,n,s)),r}function iie(e,t){let n=e.name,s=e.shape.length,r=Jt(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3"].slice(0,s),i=o.map(u=>`${u} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}.numbers[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}.numbers[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,c=`${s}D`;return s===0&&(c="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function lie(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"AtOutCoords",i=e.shape.length,l=t.length,c=Jt(l);if(v.arraysEqual(e.shape,t)&&s)return n?`
        fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[globalIndex]);
        }

        fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
        return f32(${r}.numbers[globalIndex]);
      }

      fn ${o}ByCoords(coords : ${c}) -> f32 {
        return f32(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"}]);
      }
      `;let u=N.getBroadcastDims(e.shape,t),d=l-i,p="";if(i===0)return n?`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> f32{
        return get${a}();
      }
    `;l<2&&u.length>=1?p="coords = 0;":p=u.map(g=>`coords[${g+d}] = 0;`).join(`
`);let h="";if(l<2&&i>0)h="coords";else if(l>1){let g=Jt(i),A=e.shape.map((x,y)=>`coords[${y+d}]`).join(", ");h=`${g}(${A})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
        var coords = getOutputCoords(globalId, globalIndex);
        ${p}
        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];
      }

      fn ${o}ByCoords(coordsIn : ${c}) -> vec4<f32> {
        var coords = coordsIn;
        ${p}
        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${o}ByGlobalId(globalId : vec3<u32>, globalIndex : i32) -> f32 {
      var coords = getOutputCoords(globalId, globalIndex);
      ${p}
      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);
    }

    fn ${o}ByCoords(coordsIn : ${c}) -> f32 {
      var coords = coordsIn;
      ${p}
      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);
    }
  `}function uie(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${Jt(a)}{
      return getCoordsFromFlatIndex(i32(globalIndex));
    }
    `,a];let o="",i=[n,s,r],l=0;for(let p=0;p<i.length;p++){let h=i[p];if(h.length!==0)if(l+=h.length,h.length===1)o+=`let d${h[0]} = i32(globalId[${p}]);`;else{let f=nie(h,"uniforms.outShape");o+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${p} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${p} - d${h[m]} * ${f[m]};`:o+=`index${p} = index${p} - d${h[m]} * ${f[m]};`}}let c=[];for(let p=0;p<l;p++)c.push(`d${p}`);let u=Jt(l),d=`fn getOutputCoords(globalId : vec3<u32>, globalIndex : i32) -> ${u} {
    ${o}
  `;return c.length===0?d+=`return ${u}(0); }`:d+=`return ${u}(${c.join(",")}); }`,[d,l]}function z4(e){let t=e.length;if(t<=1)return"fn getCoordsFromFlatIndex(index : i32) -> i32 { return index; }";let n=v.computeStrides(e),s=Jt(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromFlatIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides[${i}]`,c=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`;return`${l}; ${c};`}).join("");return`
    fn getCoordsFromFlatIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var L4={};Me(L4,{ArrayBufferToTypedArray:()=>B4,GPUBytesPerElement:()=>rx,computeDispatch:()=>Oe,computeWorkGroupSizeForConv2d:()=>tx,computeWorkGroupSizeForMatMul:()=>nx,computeWorkPerThreadForConv2d:()=>sx,flatDispatchLayout:()=>Ke,isWebGPUSupported:()=>ax,tilesFitEvenlyIntoShape:()=>ra});var ec=65535,bl=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function ra(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]==0)}function Oe(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(bl(e.x.map(l=>t[l]))/(n[0]*s[0])),e.y?Math.ceil(bl(e.y.map(l=>t[l]))/(n[1]*s[1])):1,e.z?Math.ceil(bl(e.z.map(l=>t[l]))/(n[2]*s[2])):1];if(r<=ec&&a<=ec&&o<=ec)return[r,a,o];v.assert(r>ec&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r));return i>ec?(i=Math.ceil(Math.cbrt(r)),v.assert(i<=ec,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function tx(e,t){let n=bl(e.x.map(r=>t[r])),s=bl(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function nx(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function sx(e,t){let n=bl(e.x.map(r=>t[r])),s=bl(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function Ke(e){return{x:e.map((t,n)=>n)}}function rx(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function B4(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string"){let n=new Int32Array(e),s=new ArrayBuffer(n.length),r=new Uint8Array(s);for(let a=0;a<n.length;a++)r[a]=n[a];return r}else throw new Error(`Unknown dtype ${t}`)}function ax(){return!!navigator.gpu}var Vt;(function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG"})(Vt||(Vt={}));var cie="return a + b;",die="return areal * breal - aimag * bimag;",pie="return areal * bimag + aimag * breal;",hie="return a / b;",fie="return a * b;",mie="return (a - b) * (a - b);",gie="return a - b;",Aie="return f32(a == b);",yie="return vec4<f32>(a == b);",xie="return f32(a > b);",bie="return vec4<f32>(a > b);",vie="return f32(a >= b);",wie="return vec4<f32>(a >= b);",kie="return f32(a < b);",Sie="return vec4<f32>(a < b);",Iie="return f32(a <= b);",Cie="return vec4<f32>(a <= b);",Tie="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Nie=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Eie=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,W4=`
  if (isNaN.r > 0.) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g > 0.) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b > 0.) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a > 0.) {
    resultTemp.a = uniforms.NAN;
  }
  `,Rie=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,$ie=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Die="return f32(a != b);",_ie="return vec4<f32>(a != b);",Pie=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Fie=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = vec4<f32>(a < vec4<f32>(0.0)) * vec4<f32>(floor(b) < b);
  ${W4}
  return resultTemp;
  `,Oie="if (a < 0.0) { return b * a; }  return a;",Mie=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function V4(e,t){let n=t?W4:Eie;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = min(vec4<f32>(isNanCustomVec4F32(a)) + vec4<f32>(isNanCustomVec4F32(b)), vec4<f32>(1.0));
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function np(e,t){switch(e){case 0:return fie;case 1:return cie;case 2:return gie;case 3:return hie;case 4:return t?yie:Aie;case 5:return t?bie:xie;case 6:return t?wie:vie;case 7:return t?Sie:kie;case 8:return t?Cie:Iie;case 9:return t?Nie:Tie;case 10:return t?_ie:Die;case 11:return mie;case 12:return t?$ie:Rie;case 14:return t?Mie:Oie;case 15:return V4("max",t);case 16:return V4("min",t);case 13:return t?Fie:Pie;case 17:return die;case 18:return pie;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var vt;(function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.PRELU=12]="PRELU",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.RSQRT=15]="RSQRT",e[e.SIN=16]="SIN",e[e.SINH=17]="SINH",e[e.SIGMOID=18]="SIGMOID",e[e.SQRT=19]="SQRT",e[e.SQUARE=20]="SQUARE",e[e.TANH=21]="TANH",e[e.TO_INT=22]="TO_INT"})(vt||(vt={}));var zie="return abs(a);",Lie="return ceil(a);",Bie="return cos(a);",Wie=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Vie="return exp(a) - 1.0;",Uie="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Gie=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Hie="return exp(a);",jie="return floor(a);",qie="return a;",Xie=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Kie="return f32(!(a >= 1.0));",Zie="return -a;",Yie="return (a < 0.0) ? b * a : a;",Jie="return max(a, 0.0);",Qie="return clamp(a, 0.0, 6.0);",ele="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",tle=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNan(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,nle="return 1.0/sqrt(a);",sle="return 1.0 / (1.0 + exp(-1.0 * a));",rle="return sin(a);",ale=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,ole="return sqrt(a);",ile="return a * a;",lle=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,ule="return f32(i32((a)));";function tc(e,t){switch(e){case 0:return zie;case 2:return Bie;case 3:return Wie;case 1:return Lie;case 4:return t?Gie:Uie;case 5:return Hie;case 6:return Vie;case 7:return jie;case 8:return qie;case 9:return Xie;case 10:return Kie;case 11:return Zie;case 12:return Yie;case 13:return t?tle:Jie;case 14:return t?ele:Qie;case 15:return nle;case 18:return sle;case 16:return rle;case 17:return ale;case 19:return ole;case 20:return ile;case 21:return lle;case 22:return ule;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function aa(e,t=!1){if(e===null)return null;if(e==="linear")return tc(vt.LINEAR);if(e==="relu")return tc(vt.RELU,t);if(e==="elu")return tc(vt.ELU,t);if(e==="relu6")return tc(vt.RELU6,t);if(e==="prelu")return np(Vt.PRELU,t);if(e==="sigmoid")return tc(vt.SIGMOID);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function U4(e,t){let n={RowPerThread:e[1],ColPerThread:e[0],TileAOuter:t[1]*e[1],TileBOuter:t[0]*e[0],TileInner:t[0]*e[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${n.TileInner/n.ColPerThread}>, ${n.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n.TileBOuter/n.ColPerThread}>, ${n.TileInner}>;

  let RowPerThread = ${n.RowPerThread};
  let ColPerThread = ${n.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${n.TileAOuter};
  let TileBOuter = ${n.TileBOuter};
  let TileInner = ${n.TileInner};

  ${Fe()} {

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${n.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${t[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
}`}function cle(e){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;
  let tileSize = ${e[0]*4};
  ${Fe()} {
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var dle=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.isVec4=!0,this.vecSize=4,this.outputShape=t,this.workGroupSize=nx(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.vecSize,a=r,o=[s,a],i=[a,r];return[ra(o,this.aShape.slice(1)),ra(i,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let o=aa(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutput(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?U4([this.vecSize,this.workPerThread,1],this.workGroupSize):cle(this.workGroupSize)}

    `}};function ox(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${Fe()} {
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function ple(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Fe()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var G4=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=s?e[1]:e[2];this.workGroupSize=nx(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),v.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=a!=null,u=i!=null;c&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=u;let d=this.outputShape[2],p=this.transposeB?[this.outputShape[0],d,l]:[this.outputShape[0],l,d];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${s}_${r}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),v.assert(s%this.workGroupSize[0]==0&&s%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[ra(r,this.aShape.slice(1)),ra(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let o=aa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutput(batch, row, col, value);
      }
      ${this.outputShape[1]>1?ox([this.workPerThread,this.workPerThread,1],this.workGroupSize):ple(this.workGroupSize)}
    `}};function hle(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Fe()} {
      ${Le()}
      let coords = getOutputCoords(globalId, index);
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var fle=class{constructor(e,t=!1,n=!1,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",s="";if(this.activation){let o=aa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutput(batch, row, col, value);
      }
      ${hle()}
    `}};function mle(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Fe()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var gle=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],v.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=s!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let o=aa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutput(batch, row, col, value);
        }
      }
      ${mle(this.workGroupSize)}
    `}};function je(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a),i=v.sizeFromShape(o);return v.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var Ale={kernelName:Ci,backendName:"webgpu",kernelFunc:je};function ix({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),A=v.sizeFromShape(m),x=v.sizeFromShape(g),b=qi.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[A,d,h]:[A,h,d],k=s?[x,f,p]:[x,p,f],C=je({inputs:{x:e},backend:r,attrs:{shape:w}}),E=je({inputs:{x:t},backend:r,attrs:{shape:k}}),R=[C,E],F=Math.max(A,x),D=d%4==0&&f%4==0&&!n&&!s&&f>=32,P;h*f<=32?P=new fle([F,h,f],n,s,a,l,o):!n&&!s&&(h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||d>=2*h))?P=new gle(w,k,[F,h,f],a,l,o):D?P=new dle(w,[F,h,f],K().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,l,o):P=new G4(w,[F,h,f],K().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,s,a,l,o);let T=[C,E];a&&T.push(a),o&&T.push(o);let M=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[d]}],U=r.runWebGPUProgram(P,T,e.dtype,M),j=je({inputs:{x:U},backend:r,attrs:{shape:b}});R.push(U);for(let z of R)r.disposeData(z.dataId);return j}function yle(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return ix({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var xle={kernelName:fo,backendName:"webgpu",kernelFunc:yle},H4=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${np(this.op,!1)}
      }

      ${Fe()} {
        ${Le()}
        if(index < uniforms.size) {
          let areal = getARealAtOutCoordsByGlobalId(globalId, index);
          let aimag = getAImagAtOutCoordsByGlobalId(globalId, index);
          let breal = getBRealAtOutCoordsByGlobalId(globalId, index);
          let bimag = getBImagAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},ble=class{constructor(e,t,n,s){this.variableNames=["A","B"];let r=256;this.workGroupSize=[r,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ke(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.size=v.sizeFromShape(this.outputShape),this.sizeFit=this.size%(this.workGroupSize[0]*this.workPerThread)==0,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}_${this.sizeFit}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAAtOutCoordsByCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBAtOutCoordsByCoords(coords);`,n=this.sizeFit?`let coords = getCoordsFromFlatIndex(flatIndex);

         ${t}
         setOutputFlat(flatIndex, binaryOperation(a, b));`:`if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            ${t}
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${np(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Fe()} {
          ${Le()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;

            ${n}
          }
        }
        `}},vle=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.fitShape=this.size%this.workGroupSize[0]==0,this.shaderKey=`binaryVec4_${e}_${this.fitShape}`,this.size=v.sizeFromShape(this.outputShape)/this.workPerThread}getUserCode(){let e,n=`fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
          ${np(this.op,this.isVec4)}
        }`;return this.fitShape?e=`
      ${n}
      ${Fe()} {
        ${Le()}
        let a = vec4<f32>(A.numbers[index]);
        let b = vec4<f32>(B.numbers[index]);
        setOutputFlat(index, binaryOperation(a, b));
      }
    `:e=`
      ${n}
      ${Fe()} {
        ${Le()}
        if (index < uniforms.size) {
          let a = vec4<f32>(A.numbers[index]);
          let b = vec4<f32>(B.numbers[index]);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
    `,e}},j4=class{constructor(e,t,n){this.variableNames=["A","B"];let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Ke(this.outputShape),this.size=v.sizeFromShape(this.outputShape),this.sizeFit=this.size%s==0,this.shapesFit=v.arraysEqual(t,n)&&this.sizeFit,this.workPerThread=this.sizeFit||this.shapesFit?1:2,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey=`binary_${e}_${this.sizeFit}_${this.shapesFit}`,this.op=e}getUserCode(){let e,n=`          fn binaryOperation(a : f32, b : f32) -> f32 {
      ${np(this.op,!1)}
    }`;return this.shapesFit?e=`
          ${n}
          ${Fe()} {
            ${Le()}

            let a = f32(A[index]);
            let b = f32(B[index]);
            setOutputFlat(index, binaryOperation(a, b));
          }
        `:this.sizeFit?e=`
      ${n}
      ${Fe()} {
        ${Le()}

        let coords = getCoordsFromFlatIndex(index);

        let a = getAAtOutCoordsByCoords(coords);
        let b = getBAtOutCoordsByCoords(coords);
        setOutputFlat(index, binaryOperation(a, b));
      }
      `:e=`
      ${n}
      ${Fe()} {
        ${Le()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1 ) {
          let flatIndex = index * ${this.workPerThread} + i;

          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);

            let a = getAAtOutCoordsByCoords(coords);
            let b = getBAtOutCoordsByCoords(coords);
            setOutputFlat(flatIndex, binaryOperation(a, b));
          }
        }
      }
      `,e}};function q4(e,t,n){if(v.arraysEqual(t,n)&&v.sizeFromShape(t)%4==0)return new vle(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new ble(e,t,n,a):new j4(e,t,n)}function Js(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var wle={kernelName:Ba,backendName:"webgpu",kernelFunc:Js};function nc(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=Js({inputs:{x:s},backend:n}),l=Js({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var kle={kernelName:zc,backendName:"webgpu",kernelFunc:nc},Fm=class{constructor(e,t){this.variableNames=["A"];let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.size=v.sizeFromShape(this.outputShape),this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${tc(this.op,!1)}
      }
      ${Fe()} {
        ${Le()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalId(globalId, index);
          setOutputFlat(index, unaryOperation(a));
        }
      }
      `}};function Cn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let c=o.tensorMap.get(a.dataId),u=t(c.values,i);return o.makeTensorInfo(a.shape,i,u)}let l=new Fm(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function jn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let d=l.tensorMap.get(o.dataId),p=l.tensorMap.get(i.dataId),h,f;if(e!==Vt.MUL)[h,f]=[[d.complexTensorInfos.real,p.complexTensorInfos.real],[d.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(g=>{let[A,x]=g,y={dataId:A.dataId,dtype:A.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},w=q4(e,o.shape,i.shape);return l.runWebGPUProgram(w,[y,b],Ln(A.dtype,x.dtype))});else{let g=new H4(Vt.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),A=new H4(Vt.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),x=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape}];h=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(A,x,"float32")}let m=nc({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let c=s||Ln(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let d=l.tensorMap.get(o.dataId).values,p=l.tensorMap.get(i.dataId).values,h=o.dtype==="string"?N.fromUint8ToStringArray(d):d,f=o.dtype==="string"?N.fromUint8ToStringArray(p):p,[m,g]=t(o.shape,i.shape,h,f,c);return l.makeTensorInfo(g,c,m)}let u=q4(e,o.shape,i.shape);return l.runWebGPUProgram(u,[o,i],c)}}var{addImpl:Sle,ceilImpl:Ile,concatImpl:Cle,equalImpl:Tle,expImpl:Nle,expm1Impl:Ele,floorImpl:Rle,gatherNdImpl:$le,gatherV2Impl:Dle,greaterEqualImpl:_le,greaterImpl:Ple,lessEqualImpl:Fle,lessImpl:Ole,logImpl:Mle,maxImpl:zle,maximumImpl:Lle,minimumImpl:Ble,multiplyImpl:Wle,negImpl:Vle,notEqualImpl:Ule,prodImpl:Gle,rangeImpl:Hle,rsqrtImpl:jle,simpleAbsImpl:qle,sliceImpl:Xle,stridedSliceImpl:Kle,stringNGramsImpl:Zle,subImpl:Yle,tileImpl:Jle,topKImpl:Qle,transposeImpl:eue,uniqueImpl:i2e}=im,tue=Cn({opType:vt.ABS,cpuKernelImpl:qle}),nue={kernelName:ti,backendName:"webgpu",kernelFunc:tue},sue=jn({opSnippet:Vt.ADD,cpuKernelImpl:Sle,supportsComplex:!0}),rue={kernelName:Vr,backendName:"webgpu",kernelFunc:sue},aue=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}AtOutCoordsByCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Fe()} {
        ${Le()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputFlat(flatIndex, ${t});
          }
        }
      }
    `}};function oue(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Js({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>Ln(i,l)),a=s.map(i=>i.shape),o=new aue(a);return n.runWebGPUProgram(o,s,r)}var iue={kernelName:wa,backendName:"webgpu",kernelFunc:oue},X4=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="axis : i32;";let s=[t];N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r,a]=N.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r;let o=v.sizeFromShape(a);this.reductionFactor=2;let i=256,l=Math.min(Math.ceil(o/this.reductionFactor),i);this.workGroupSize=[l,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((c,u)=>u)},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=this.workGroupSize[0]>1,t=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,n=`
      xBestIndices[localId.x] = bestIndex;
      xBestValues[localId.x] = bestValue;

      for(var currentSize = WorkGroupSize; currentSize > 1; currentSize = DIV_CEIL(currentSize, ${this.reductionFactor})) {
        workgroupBarrier();

        for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
          let i = i32(localId.x) * ${this.reductionFactor} + w;
          if (i < currentSize) {
            let candidateIndex = xBestIndices[i];
            let candidate = xBestValues[i];
            if(candidate ${this.op} bestValue && !isNanCustom(candidate)) {
              bestValue = candidate;
              bestIndex = candidateIndex;
            }
          }
        }

        xBestIndices[localId.x] = bestIndex;
        xBestValues[localId.x] = bestValue;
      }

      if (localId.x == 0u) {
        setOutputFlatI32(flatOutputIndex, i32(bestIndex));
      }
    `,s=Jt(this.outputShape.length),r=(i,l)=>this.outputShape.length===1?i:`${i}[${l}]`,a=i=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${i}]`;return`
      fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
      }

      let WorkGroupSize = ${this.workGroupSize[0]};

      ${e?t:""}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(globalId : vec3<u32>, globalIndex : i32) -> vec2<i32>{
        let outputCoords : ${s} = getOutputCoords(globalId, globalIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${a(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${r("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Fe()} {
        ${Le()}
        let coordInfo = getInputCoordInfo(globalId, index);

        var bestIndex = 0;
        var bestValue = f32(x.numbers[getInputIndex(coordInfo, bestIndex)]);

        let Length = ${a("uniforms.axis")};
        let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);

        for (var w = 0; w < WorkPerThread; w = w + 1) {
          let i = i32(globalId.x) * WorkPerThread + w;
          if (i < Length) {
            let candidate = f32(x.numbers[getInputIndex(coordInfo, i)]);
            if (candidate ${this.op} bestValue && !isNanCustom(f32(candidate))) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
        }

        let flatOutputIndex = i32(globalId.y);
        ${e?n:"setOutputFlatI32(flatOutputIndex, bestIndex);"}
      }
    `}},lue=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Fe()} {
        ${Le()}
        let workGroupID = (globalId - localId)/vec3<u32>(${this.workGroupSize[0]}u, ${this.workGroupSize[1]}u, ${this.workGroupSize[2]}u);
        var x = i32(workGroupID.x) * TILE_DIM + i32(localId.x);
        var y = i32(workGroupID.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workGroupID.y) * TILE_DIM + i32(localId.x);
        y = i32(workGroupID.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputFlat((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},uue=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=Jt(this.outputShape.length),t=cue(this.newDim);return`
      ${Fe()} {
        ${Le()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromFlatIndex(flatIndex);
            setOutputFlat(flatIndex, A.numbers[getFlatIndex${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function cue(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC[${s}]`;return n.join()}function vl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];if(n.shouldExecuteOnCPU([r])){let d=o.tensorMap.get(r.dataId).values,p=eue(d,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,p)}if(r.shape.length===2&&v.arraysEqual(a,[1,0])){let u=new lue(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}let c=new uue(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}var due={kernelName:po,backendName:"webgpu",kernelFunc:vl};function pue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=vl({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=new X4(l.shape,o[0],"max"),d=[{type:"int32",data:[o[0]]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var hue={kernelName:ka,backendName:"webgpu",kernelFunc:pue};function fue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=vl({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=new X4(l.shape,o[0],"min"),d=[{type:"int32",data:[o[0]]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var mue={kernelName:jl,backendName:"webgpu",kernelFunc:fue},K4=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Fe()} {
        ${Le()}
        let coords = getOutputCoords(globalId, index);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutput(batch, coords[1], coords[2], coords[3], ${t});
        }
      }
    `}},Z4=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Fe()} {
        ${Le()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let d = coords[3];

        if (all(coords < uniforms.outShape)) {
          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutput(batch, coords[1], coords[2], d, value);
        }
      }
    `}};function gue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return Js({inputs:{x:r},backend:n});let d,p=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return u.filterHeight===1&&u.filterWidth===1?d=new Z4(u):(d=new K4(u,"avg"),p.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[r],r.dtype,p)}var Aue={kernelName:Sa,backendName:"webgpu",kernelFunc:gue};function yue(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return ix({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var xue={kernelName:Ia,backendName:"webgpu",kernelFunc:yue},bue=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Jt(e.length)}; `,this.shaderKey="slice",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=Jt(this.rank),t=vue(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${lx[a]} = uniforms.start[${a}] + coords.${lx[a]};`),`
      ${Fe()} {
        ${Le()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getOutputCoords(globalId, index);
          ${n.join(`
`)}
          setOutputFlat(index, getSource(${t}));
        }
      }
    `}},lx=["x","y","z","w","u","v"];function vue(e){if(e===1)return"sourceLoc";if(e<=6)return lx.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function sc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Ft.parseSliceParams(r,a,o);if(Ft.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.tensorMap.get(r.dataId),p=Xle(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}if(v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let c=new bue(i,l),u=[{type:"int32",data:i}];return n.runWebGPUProgram(c,[r],r.dtype,u)}var wue={kernelName:$i,backendName:"webgpu",kernelFunc:sc},kue=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,y)=>x*y),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=je({inputs:{x:r},backend:n,attrs:{shape:l}}),m=vl({inputs:{x:f},backend:n,attrs:{perm:c}}),g=je({inputs:{x:m},backend:n,attrs:{shape:u}}),A=sc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeData(x.dataId)),A},Sue={kernelName:ni,backendName:"webgpu",kernelFunc:kue},Y4=jn({opSnippet:Vt.NOT_EQUAL,dtype:"bool",cpuKernelImpl:Ule}),Iue={kernelName:xi,backendName:"webgpu",kernelFunc:Y4};function sp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Js({inputs:{x:r.complexTensorInfos.real},backend:n})}var Cue={kernelName:qc,backendName:"webgpu",kernelFunc:sp};function Tue(e,t){let n=new Fm(e.shape,vt.TO_INT),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function ux(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Js({inputs:{x:r},backend:n});let o=Ht(r.shape),i=ux({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=nc({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=sp({inputs:{input:r},backend:n}),i=ux({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Js({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Tue(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=Y4({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Nue={kernelName:Ca,backendName:"webgpu",kernelFunc:ux},Eue=Cn({opType:vt.CEIL,cpuKernelImpl:Ile}),Rue={kernelName:Ta,backendName:"webgpu",kernelFunc:Eue},$ue=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4",this.size=v.sizeFromShape(this.outputShape)/4}getUserCode(){return`
      ${Fe()} {
        ${Le()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputFlat(index, clampedValue);
        }
      }
    `}},Due=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${Fe()} {
        ${Le()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalId(globalId, index);
          if (isNanCustom(value)) {
            setOutputFlat(index, value);
            return;
          }
          setOutputFlat(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function _ue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return v.sizeFromShape(r.shape)%4==0?i=new $ue(r.shape):i=new Due(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var Pue={kernelName:Ur,backendName:"webgpu",kernelFunc:_ue},Fue=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shapes=e,this.shaderKey=`concat${e}`,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=new Array(this.shapes.length-1),t=[];if(e.length>0){e[0]=this.shapes[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+this.shapes[a][1];t.push(`if (yC < ${e[0]}){ setOutput(coords.x, coords.y, getT0(yR, yC)); }`);for(let a=1;a<e.length;a++){let o=e[a-1];t.push(`elseif (yC < ${e[a]}){ setOutput(coords.x, coords.y, getT${a}(yR, yC - ${o})); }`)}let s=e.length,r=e[e.length-1];t.push(`else { setOutput(coords.x, coords.y, getT${s}(yR, yC - ${r})); }`)}else t.push("setOutput(coords.x, coords.y, getT0(yR, yC));");return`
      ${Fe()} {
        ${Le()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function Om(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Js({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Oue={kernelName:Uc,backendName:"webgpu",kernelFunc:Om};function cx(e,t,n){let s=e[0].dtype;if(s==="complex64"){let u=e.map(m=>sp({inputs:{input:m},backend:n})),d=e.map(m=>Om({inputs:{input:m},backend:n})),p=cx(u,t,n),h=cx(d,t,n),f=nc({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeData(m.dataId)),d.forEach(m=>n.disposeData(m.dataId)),n.disposeData(p.dataId),n.disposeData(h.dataId),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let u=e.map(A=>{let x=v.sizeFromShape(A.shape.slice(t));return je({inputs:{x:A},backend:n,attrs:{shape:[-1,x]}})}),d=u.map(A=>({vals:n.readSync(A.dataId),shape:A.shape})),p=N.computeOutShape(u.map(A=>A.shape),1),h=u[0].shape[0]===1,f=Cle(d,p,s,h),m=N.computeOutShape(e.map(A=>A.shape),t),g=n.makeTensorInfo(m,s,f);return u.forEach(A=>n.disposeData(A.dataId)),g}let{tensors2D:a,outShape:o}=Mue(e,t,n),i=new Fue(a.map(u=>u.shape)),l=n.runWebGPUProgram(i,a,a[0].dtype);a.forEach(u=>n.disposeData(u.dataId));let c=je({inputs:{x:l},backend:n,attrs:{shape:o}});return n.disposeData(l.dataId),c}function Mue(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>je({inputs:{x:a},backend:n,attrs:{shape:[v.sizeFromShape(a.shape.slice(0,t)),v.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function J4(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return Js({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),cx(i,a,n)}var zue={kernelName:si,backendName:"webgpu",kernelFunc:J4},Lue=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Fe()} {
      ${Le()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromFlatIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputFlat(flatIndex, value);
        }
      }
    }
  `}};function Q4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=n.dataFormat==="channelsLast",u=!1,d=!1,p=c?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],h=je({inputs:{x:e},backend:s,attrs:{shape:[1,p,n.inChannels]}}),f=je({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),m=ix({a:h,b:f,transposeA:u,transposeB:d,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=je({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});return s.disposeData(h.dataId),s.disposeData(f.dataId),s.disposeData(m.dataId),g}function Bue({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,strideWidth:d,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:A,dataFormat:x}=n,y=x==="channelsLast",b=l*c*u,w=m*f,k=[w,b],C=!1,E=!1,R=[],F=je({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),D=je({inputs:{x:t},backend:s,attrs:{shape:[1,b,-1]}});R.push(F),R.push(D);let P=new Lue(k,y),T=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[d,p]},{type:"int32",data:[g,A]},{type:"int32",data:[f]},{type:"int32",data:[u*l]},{type:"int32",data:[u]}],M=s.runWebGPUProgram(P,[F],F.dtype,T),U=je({inputs:{x:M},backend:s,attrs:{shape:[1,k[0],k[1]]}});R.push(M),R.push(U);let j=[1,k[0],k[1]],z=new G4(j,[1,w,n.outChannels],K().get("WEBGPU_MATMUL_WORK_PER_THREAD"),C,E),X=j[1],Z=j[2],J=n.outChannels,ee=[{type:"int32",data:[X]},{type:"int32",data:[J]},{type:"int32",data:[Z]}],ne=s.runWebGPUProgram(z,[U,D],U.dtype,ee),Q=y?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],te=je({inputs:{x:ne},backend:s,attrs:{shape:Q}});R.push(ne);for(let oe of R)s.disposeData(oe.dataId);return te}var eC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.isVec4=!0,this.outputShape=e.outShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let a=[4,4,1];this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,a),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(a),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],s=n,r=[t,s],a=[s,n],o=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ra(r,[o,l]),ra(a,[l,i])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getFlatIndex4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } elseif (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } elseif (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=U4([4,4,1],this.workGroupSize),r=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getFlatIndex4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } elseif (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${r}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${r}
         }
         return vec4<f32>(0.0);
        `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,i="",l="";if(this.activation){let d=aa(this.activation,this.isVec4);if(this.hasPreluActivationWeights)i=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${d}
        }`;else{if(this.hasLeakyreluAlpha)throw i=`fn activation(a: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaAtOutCoords();
          ${d}
        }`,new Error("Leakyrelu is not supported.");i=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${d}
        }`}l="value = activation(value, outCoord);"}let c=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
        ${i}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${o}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${c}
            ${l}
            setOutput(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}},tC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=tx(this.dispatchLayout,this.outputShape),this.elementsPerThread=sx(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;v.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ra(s,[a,i]),ra(r,[i,o])]}getUserCode(){let e=ox(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,s=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,r="",a="";if(this.activation){let l=aa(this.activation,!1);this.hasPreluActivationWeights?r=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${l}
                }`:r=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,a="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
    ${r}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${s}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${o}
      ${a}
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},nC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=aa(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutput(batch, row, col, chan, value);
        }
      }

      ${Fe()} {
        ${Le()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function Wue(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=n,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d);if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))return Q4({x:r,filter:a,convInfo:p,backend:s});if(K().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&r.shape[0]===1)return Bue({x:r,filter:a,convInfo:p,backend:s});let h,f=[p.padInfo.top,p.padInfo.left],m=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]}],g=K().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?h=new nC(p):(p.inChannels%4==0||p.inChannels===3&&p.padInfo.type==="VALID")&&p.outChannels%4==0&&p.outChannels>=64?h=new eC(p):h=new tC(p),!g){let A=p.outShape[1]*p.outShape[2],x=p.outShape[3],y=p.filterHeight*p.filterWidth*p.inShape[3];m.push({type:"int32",data:[A]},{type:"int32",data:[x]},{type:"int32",data:[y]})}return s.runWebGPUProgram(h,[r,a],r.dtype,m)}var Vue={kernelName:Na,backendName:"webgpu",kernelFunc:Wue},Uue=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=tx(this.dispatchLayout,this.outputShape),this.elementsPerThread=sx(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getFlatIndex4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }

    ${ox(this.elementsPerThread,this.workGroupSize)}
  `}},Gue=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.outputShape=e.inShape,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Fe()} {
      ${Le()}
      let coords = getOutputCoords(globalId, index);
      if (coordsInBounds4D(coords, uniforms.outShape)) {
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutput(coords[0], coords[1], coords[2], coords[3], dotProd);
      }
    }
  `}};function Hue(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}],f;if(K().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new Gue(p);else{f=new Uue(p);let m=p.inShape[1]*p.inShape[2],g=p.inShape[3],A=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[A]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var jue={kernelName:Ea,backendName:"webgpu",kernelFunc:Hue},que=Cn({opType:vt.COS}),Xue={kernelName:Ra,backendName:"webgpu",kernelFunc:que},Kue=Cn({opType:vt.COSH}),Zue={kernelName:$a,backendName:"webgpu",kernelFunc:Kue},Yue=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1];let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      fn writeResult(coords : vec4<i32>, value : f32) {
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutput(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
      ${Fe()} {
        ${Le()}
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let coords = getOutputCoords(globalId, index);
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          writeResult(coords, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          writeResult(coords, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          writeResult(coords,newValue);
        }
      }
    `}},Jue=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new Yue(r.shape[3],a.shape,i,l),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(u,[r,a,o],"float32",d)},Que={kernelName:ai,backendName:"webgpu",kernelFunc:Jue},ece=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.size=v.sizeFromShape(this.outputShape),this.dataFormat=t}getUserCode(){return`
      ${Fe()} {
        ${Le()}
        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputFlat(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function tce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=[{type:"int32",data:[a]}],g=new ece(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var nce={kernelName:oi,backendName:"webgpu",kernelFunc:tce},sC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=aa(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, globalIndex);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, globalId : vec3<u32>, globalIndex : i32) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], globalId, index);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${e}

      ${Fe()} {
        ${Le()}
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutput(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},rC=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.activation}_${this.convInfo.outChannels/this.convInfo.inChannels}`}getUserCode(){let e=this.convInfo.outChannels/this.convInfo.inChannels,t="",n="";if(this.activation){let a=aa(this.activation,!1);this.hasPreluActivation?t=`fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
          let b = getPreluActivationWeightsAtOutCoordsByGlobalId(globalId, index);
          ${a}
        }`:t=`
          fn activation(a : f32, globalId : vec3<u32>, index : i32) -> f32 {
            ${a}
          }
        `,n="dotProd = activation(dotProd, globalId, index);"}let s=this.addBias?"dotProd = dotProd + getBiasAtOutCoordsByGlobalId(globalId, index);":"";return`
      ${t}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutput(batch, row, col, chan, value);
        }
      }

      ${Fe()} {
        ${Le()}
        let coords = getOutputCoords(globalId, index);
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / ${e};
        let q = d2 - d1 * ${e};

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + ${this.convInfo.filterHeight} * uniforms.dilation[0];
        let inputColEnd = inputColStart + ${this.convInfo.filterWidth} * uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] && inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${s}
        ${n}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function sce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]);let d=N.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p;d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4==0?p=new sC(d):p=new rC(d);let h=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}];return n.runWebGPUProgram(p,[r,a],r.dtype,h)}var rce={kernelName:Da,backendName:"webgpu",kernelFunc:sce},aC=jn({opSnippet:Vt.MUL,cpuKernelImpl:Wle,supportsComplex:!0}),ace={kernelName:Ka,backendName:"webgpu",kernelFunc:aC},oce=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.inputShape=[e.batchSize,e.inSize];let[s]=N.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=s.length===0?[1]:s,this.reductionFactor=2;let r=256,a=Math.min(Math.ceil(e.inSize/this.reductionFactor),r);this.workGroupSize=[a,1,1],this.dispatchLayout={x:[],y:this.outputShape.map((o,i)=>i)},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.reduceType=t,this.shaderKey=`reduce_${t}_${n}`}getUserCode(){let e=this.workGroupSize[0]>1,t="",n="0.0";this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } elseif (candidate ${this.reduceType==="min"?"<":">"}
           bestValue)
           {  bestValue = candidate; }`,n="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(t=" bestValue = bestValue * candidate; ",n="1.0");let s=this.reduceType==="mean"?"setOutputFlat(flatOutputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputFlat(flatOutputIndex, bestValue);",r=`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `,a=`
       xBestValues[localId.x] = bestValue;
       ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`bestValue = ${n};`:" "}
       var currentSize = WorkGroupSize;
       for(; currentSize > 1;) {
         workgroupBarrier();
         for (var w = 0; w < ${this.reductionFactor}; w = w + 1) {
           let i = i32(localId.x) * ${this.reductionFactor} + w;
           if (i < currentSize) {
             let candidate = xBestValues[i];
             ${t}
           }
         }
         workgroupBarrier();
         xBestValues[localId.x] = bestValue;
         currentSize = DIV_CEIL(currentSize, ${this.reductionFactor});
         ${this.reduceType==="sum"||this.reduceType==="mean"||this.reduceType==="prod"?`if(currentSize > 1) { bestValue = ${n}; }`:""}
       }
       if (localId.x == 0u) {
         ${s}
       }
     `;return`
       fn DIV_CEIL(a : i32, b : i32) -> i32 {
        return ((a - 1) / b + 1);
       }
       let WorkGroupSize = ${this.workGroupSize[0]};
       ${e?r:""}
       fn getOffset(globalId : vec3<u32>, index : i32) -> i32 {
         let outputCoords = getOutputCoords(globalId, index);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
         return offset;
       }
       ${Fe()} {
         ${Le()}
         let offset= getOffset(globalId, index);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(Length, WorkGroupSize);
         for (var w = 0; w < WorkPerThread; w = w + 1) {
           let i = i32(globalId.x) * WorkPerThread + w;
           if (i < Length) {
             let candidate = f32(x.numbers[offset + i]);
             ${t}
           }
         }
         let flatOutputIndex = i32(globalId.y);
         ${e?a:s}
       }
     `}};function rp(e,t,n,s,r){let a=e.shape.length,o=[],i=v.parseAxisParam(t,e.shape),l=i,c=N.getAxesPermutation(l,a),u=e;c!=null&&(u=vl({inputs:{x:e},attrs:{perm:c},backend:r}),l=N.getInnerMostAxes(l.length,a),o.push(u)),N.assertAxesAreInnerMostDims(s,l,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=d;n&&(h=N.expandShapeToKeepDim(d,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([u])){let m=r.tensorMap.get(u.dataId).values;switch(s){case"max":let g=zle(m,v.sizeFromShape(p),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:A,outShape:x,outDtype:y}=Gle(u.shape,u.dtype,m,l);f=r.makeTensorInfo(x,y,A);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(p),A=v.sizeFromShape(u.shape)/m,x={windowSize:m,inSize:m,batchSize:A,outSize:1},y=s==="mean"?"float32":od(e.dtype),b=[{type:"int32",data:[m]}],w=new oce(x,s,y),k=r.runWebGPUProgram(w,[u],y,b);o.push(k),f=je({inputs:{x:k},attrs:{shape:h},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function dx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return rp(r,a,o,"sum",n)}var ice={kernelName:oo,backendName:"webgpu",kernelFunc:dx};function lce(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:A,expandDims:x}=N.getEinsumPermutation(h,l[g]),y;N.isIdentityPermutation(A)?y=a[g]:(y=vl({inputs:{x:a[g]},backend:n,attrs:{perm:A}}),f.push(y));let b=y.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(y.shape,b)||(y=je({inputs:{x:y},backend:n,attrs:{shape:b}}),f.push(y)),p===null?p=y:(p=aC({inputs:{a:y,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=dx({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeData(m.dataId);return p}var uce={kernelName:Vc,backendName:"webgpu",kernelFunc:lce},cce=Cn({opType:vt.ELU}),dce={kernelName:Pa,backendName:"webgpu",kernelFunc:cce},pce=jn({opSnippet:Vt.EQUAL,dtype:"bool",cpuKernelImpl:Tle}),hce={kernelName:ii,backendName:"webgpu",kernelFunc:pce},oC=Cn({opType:vt.EXP,cpuKernelImpl:Nle,dtype:"float32"}),fce={kernelName:Fa,backendName:"webgpu",kernelFunc:oC};function px(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),je({inputs:{x:a},backend:s,attrs:{shape:i}})}var mce={kernelName:li,backendName:"webgpu",kernelFunc:px},gce=Cn({opType:vt.EXPM1,cpuKernelImpl:Ele}),Ace={kernelName:ui,backendName:"webgpu",kernelFunc:gce},yce=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
    ${Fe()} {
      ${Le()}
      if (index < uniforms.size) {
        setOutputFlat(index, uniforms.value);
      }
    }
  `}};function rc(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new yce(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var xce={kernelName:Ql,backendName:"webgpu",kernelFunc:rc},bce=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
      ${Fe()} {
        ${Le()}

        if (index < uniforms.size) {
          let coords = getOutputCoords(globalId, index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputFlat(index, outputValue);
        }
      }
    `}},vce={kernelName:ci,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new bce(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},wce=Cn({opType:vt.FLOOR,cpuKernelImpl:Rle}),kce={kernelName:Oa,backendName:"webgpu",kernelFunc:wce},Sce=jn({opSnippet:Vt.INT_DIV,dtype:"int32"}),Ice={kernelName:Ma,backendName:"webgpu",kernelFunc:Sce},Cce=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},iC=(e,t,n,s,r,a=!1)=>{let o={dtype:r.dtype,shape:r.shape},i=sie(s,o,t,a),l=e.createShaderModule({code:i});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"}})};function lC(e,t,n,s="",r=""){return(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r+e.shaderKey}function uC(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:o}=s,i=v.sizeFromShape(r),l=v.computeStrides(r),c=n.makeTensorInfo(r,"int32"),u=n.getFromPixelsProgram(a?"import":"copyExternal");u.updateOutputShape(r);let d=[c.shape],p=[c.dtype,a?"import":"copyExternal"],h=lC(u,d,p),f=u.getLayout(n.device),m=n.getAndSavePipeline(h,()=>iC(n.device,u,f.pipelineLayout,[],c,!0));u.setPipeline(m),a||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:u.makeInputTexture(n.device,r[1],r[0])},[r[1],r[0]]);let g=n.tensorMap.get(c.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let A=[i,o,...l,...u.dispatch];u.setUniform(n.device,A);let x;if(a){let y={source:t};x=n.device.importExternalTexture(y)}else x=u.inputTexture.createView();return n.runFromPixelsProgram(u,g.bufferInfo.buffer,f,x,c.dataId),c}var Tce={kernelName:Yc,backendName:"webgpu",kernelFunc:Nce},ac;function Nce(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,c=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[u,d]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[d,u,a];if(K().getBool("WEBGPU_USE_IMPORT")&&o)return uC({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!0});if((o||i)&&(ac==null&&(ac=document.createElement("canvas").getContext("2d")),ac.canvas.width=u,ac.canvas.height=d,ac.drawImage(r,0,0,u,d),r=ac.canvas),c||l||o||i)return uC({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!1});let h=r.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let A=h.length,x=0;for(let y=0;y<A;y++)y%4<a&&(f[x++]=h[y])}let m=n.makeTensorInfo(p,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}var Ece=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetAtOutCoordsByGlobalId(globalId, index)");let t="1.0";this.scaleShape!=null&&(t="getScaleAtOutCoordsByGlobalId(globalId, index)");let n=this.outputShape.length,s=Jt(n),r="setOutput(coords[0], coords[1], coords[2], coords[3], value);";return n===2&&(r="setOutput(coords[0], coords[1], value);"),n===3&&(r="setOutput(coords[0], coords[1], coords[2], value);"),`
      fn writeResult(coords : ${s}, value : f32) {
        if (coordsInBounds${n}D(coords, uniforms.outShape)) {
          ${r}
        }
      }
      ${Fe()} {
        ${Le()}
        let coords = getOutputCoords(globalId, index);
        let xValue = getXAtOutCoordsByGlobalId(globalId, index);
        let meanValue = getMeanAtOutCoordsByGlobalId(globalId, index);
        let varianValue = getVarianceAtOutCoordsByGlobalId(globalId, index);
        let offsetValue = ${e};
        let scaleValue = ${t};
        let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
        writeResult(coords,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
      }
  `}},Rce={kernelName:za,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,c=n,u=[s,o,i],d=null;a!=null&&(d=a.shape,u.push(a));let p=null;r!=null&&(p=r.shape,u.push(r));let h=new Ece(s.shape,o.shape,i.shape,d,p),f=[{type:"float32",data:[l]}];return c.runWebGPUProgram(h,u,s.dtype,f)}};function $ce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),A=o!=null,x=i!=null,y;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return Q4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});let b=K().getBool("WEBGPU_USE_NAIVE_CONV2D"),w=g.inChannels%4==0&&g.outChannels%4==0,k=[g.padInfo.top,g.padInfo.left],C=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...k]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(b)y=new nC(g,A,h,x);else{w?y=new eC(g,A,h,x):y=new tC(g,A,h,x);let R=g.outShape[1]*g.outShape[2],F=g.outShape[3],D=g.filterHeight*g.filterWidth*g.inShape[3];C.push({type:"int32",data:[R]},{type:"int32",data:[F]},{type:"int32",data:[D]})}let E=[r,a];return A&&E.push(o),x&&E.push(i),n.runWebGPUProgram(y,E,r.dtype,C)}var Dce={kernelName:mo,backendName:"webgpu",kernelFunc:$ce};function _ce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p}=s,h=u;h==null&&(h=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let f=N.computeConv2DInfo(r.shape,a.shape,l,h,c,d,!0),m=[r,a],g=o!=null,A=i!=null;g&&m.push(o),A&&m.push(i);let x;f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4==0?x=new sC(f,g,p,A):x=new rC(f,g,p,A);let y=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}];return n.runWebGPUProgram(x,m,"float32",y)}var Pce={kernelName:go,backendName:"webgpu",kernelFunc:_ce},Fce=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.outputShape=t,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.size=v.sizeFromShape(this.outputShape),this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${Jt(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Fe()} {
          ${Le()}
          let coords = getOutputCoords(globalId, index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }
          if (index < uniforms.size) {
            setOutputFlat(index, getA(flattenIndex, coords[1]));
          }
        }
      `}};function Oce(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,c,u,d]=N.prepareAndValidate(s,r),p=je({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=je({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let x=n.readSync(r.dataId),y=n.bufferSync(s),b=$le(x,y,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new Fce(o,[c,u]),m=[{type:"int32",data:[o]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),A=je({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),A}var Mce={kernelName:pi,backendName:"webgpu",kernelFunc:Oce},zce=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=Lce(this.aShape,"i32");return`
      ${Fe()} {
        ${Le()}
        let resRC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Lce(e,t="int"){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push(`${t}(getIndices(resRC.x, resRC.z))`):s.push(`${n[r]}`);return s.join()}function cC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),u=v.sizeFromShape(a.shape),d=[],p=je({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=je({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(p),d.push(h);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let y=n.tensorMap.get(h.dataId).values,b=Be(h.shape,h.dtype,y),k=n.tensorMap.get(p.dataId).values,C=Be(p.shape,p.dtype,k),E=Dle(C,b,f);return d.forEach(R=>n.disposeData(R.dataId)),n.makeTensorInfo(c.outputShape,E.dtype,E.values)}let m=new zce(p.shape,f),g=n.runWebGPUProgram(m,[p,h],p.dtype);d.push(g);let A=je({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(x=>n.disposeData(x.dataId)),A}var Bce={kernelName:di,backendName:"webgpu",kernelFunc:cC},Wce=jn({opSnippet:Vt.GREATER,cpuKernelImpl:Ple,dtype:"bool"}),Vce={kernelName:hi,backendName:"webgpu",kernelFunc:Wce},Uce=jn({opSnippet:Vt.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:_le}),Gce={kernelName:La,backendName:"webgpu",kernelFunc:Uce},Hce=jn({opSnippet:Vt.LESS,dtype:"bool",cpuKernelImpl:Ole}),jce={kernelName:mi,backendName:"webgpu",kernelFunc:Hce},qce=jn({opSnippet:Vt.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Fle}),Xce={kernelName:gi,backendName:"webgpu",kernelFunc:qce},Kce=Cn({opType:vt.LOG,cpuKernelImpl:Mle}),Zce={kernelName:Wa,backendName:"webgpu",kernelFunc:Kce},Yce=jn({opSnippet:Vt.LOGICAL_AND,dtype:"bool"}),Jce={kernelName:Ai,backendName:"webgpu",kernelFunc:Yce},Qce=Cn({opType:vt.LOGICAL_NOT}),ede={kernelName:ru,backendName:"webgpu",kernelFunc:Qce};function dC(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return rp(r,a,o,"max",n)}var tde={kernelName:Va,backendName:"webgpu",kernelFunc:dC},nde=jn({opSnippet:Vt.MAX,cpuKernelImpl:Lle}),sde={kernelName:Ua,backendName:"webgpu",kernelFunc:nde};function rde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=N.computePool2DInfo(r.shape,a,o,c,i,l),d,p=[];if(u.filterHeight===1&&u.filterWidth===1){if(v.arraysEqual(u.inShape,u.outShape))return Js({inputs:{x:r},backend:n});d=new Z4(u),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else d=new K4(u,"max"),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return n.runWebGPUProgram(d,[r],r.dtype,p)}var ade={kernelName:Ga,backendName:"webgpu",kernelFunc:rde};function ode(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return rp(r,o,a,"mean",n)}var ide={kernelName:Ha,backendName:"webgpu",kernelFunc:ode};function lde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return rp(r,a,o,"min",n)}var ude={kernelName:ja,backendName:"webgpu",kernelFunc:lde},cde=jn({opSnippet:Vt.MIN,cpuKernelImpl:Ble}),dde={kernelName:qa,backendName:"webgpu",kernelFunc:cde},pde=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`,this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((l,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=Jt(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Fe()} {
        ${Le()}
        let start = ${o}(${t});
        let end = ${o}(${n});
        var outC = getOutputCoords(globalId, index);
        if (index < uniforms.size) {
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } elseif(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputFlat(index, getX(${i}));
        }
      }
    `}},hde={kernelName:Xa,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new pde(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function fde(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=Vle(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new Fm(s.shape,vt.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}var mde={kernelName:yi,backendName:"webgpu",kernelFunc:fde};function gde(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=Xs.nonMaxSuppressionV3Impl(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Ade={kernelName:bi,backendName:"webgpu",kernelFunc:gde};function yde(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:A}=Xs.nonMaxSuppressionV5Impl(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var xde={kernelName:vi,backendName:"webgpu",kernelFunc:yde};function Mm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=sp({inputs:{input:s},backend:n}),a=Mm({inputs:{x:r},backend:n}),o=Om({inputs:{input:s},backend:n}),i=Mm({inputs:{x:o},backend:n}),l=nc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return rc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var bde={kernelName:Bi,backendName:"webgpu",kernelFunc:Mm};function pC(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=sp({inputs:{input:s},backend:n}),a=pC({inputs:{x:r},backend:n}),o=Om({inputs:{input:s},backend:n}),i=Mm({inputs:{x:o},backend:n}),l=nc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return rc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var vde={kernelName:wi,backendName:"webgpu",kernelFunc:pC};function wde(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return px({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=px({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=J4({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var kde={kernelName:Si,backendName:"webgpu",kernelFunc:wde},Sde=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=this.xShape.length,t=Jt(e),n=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Fe()} {
        ${Le()}
        let start = ${r};
        let end = ${a};
        if (index < uniforms.size) {
          let outC = getOutputCoords(globalId, index);

          if (${o} || ${i}) {
            setOutputFlat(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputFlat(index, getX(${l}));
          }
        }
      }
    `}},hC=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(c=>v.arraysEqual(c,[0,0])))return Js({inputs:{x:r},backend:n});if(v.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return rc({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(c=>i.push({type:"int32",data:[c[0],c[1]]}));let l=new Sde(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},Ide={kernelName:Za,backendName:"webgpu",kernelFunc:hC},Cde=jn({opSnippet:Vt.POW}),Tde={kernelName:Ya,backendName:"webgpu",kernelFunc:Cde};function Nde(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new j4(Vt.PRELU,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var Ede={kernelName:Ja,backendName:"webgpu",kernelFunc:Nde};function Rde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return rp(r,a,o,"prod",n)}var $de={kernelName:Ii,backendName:"webgpu",kernelFunc:Rde},Dde=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Hle(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},_de={kernelName:iu,backendName:"webgpu",kernelFunc:Dde},fC=jn({opSnippet:Vt.DIV}),Pde={kernelName:_a,backendName:"webgpu",kernelFunc:fC},Fde=Cn({opType:vt.RELU}),Ode={kernelName:Qa,backendName:"webgpu",kernelFunc:Fde},Mde=Cn({opType:vt.RELU6}),zde={kernelName:to,backendName:"webgpu",kernelFunc:Mde},Lde=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=s,this.halfPixelCenters=r,this.shaderKey=`resizeBilinear_${s}_${r}_${this.outputShape[1]>1}_${this.outputShape[2]>1}`}getUserCode(){let e=this.alignCorners&&this.outputShape[1]>1,t=this.alignCorners&&this.outputShape[2]>1;return`
      ${Fe()} {
        ${Le()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${e?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${t?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${e?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${t?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${this.halfPixelCenters?"(vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC - vec2<f32>(0.5)":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC"};

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function Bde(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,c]=o,u=new Lde(r.shape,l,c,a,i);return n.runWebGPUProgram(u,[r],"float32")}var Wde={kernelName:eo,backendName:"webgpu",kernelFunc:Bde},Vde=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.alignCorners=s,this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${s}_${this.outputShape[1]>1}_${this.outputShape[2]>1}_${r}`}getUserCode(){let e=this.alignCorners?"0.5":"0.0",t;this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC";let n=this.alignCorners&&this.outputShape[1]>1,s=this.alignCorners&&this.outputShape[2]>1;return`
      ${Fe()} {
        ${Le()}
        let coords = getOutputCoords(globalId, index);
        if (all(coords < uniforms.outShape)) {
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            ${n?"f32(uniforms.xShape.y) - 1.0":"f32(uniforms.xShape.y)"},
            ${s?"f32(uniforms.xShape.z) - 1.0":"f32(uniforms.xShape.z)"});

          let effectiveOutSize = vec2<f32>(
            ${n?"f32(uniforms.outShape.y) - 1.0":"f32(uniforms.outShape.y)"},
            ${s?"f32(uniforms.outShape.z) - 1.0":"f32(uniforms.outShape.z)"});

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${e})));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutput(b, coords[1], coords[2], d, newValue);
        }
      }
    `}};function Ude(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=new Vde(r.shape,l,c,a,o);return n.runWebGPUProgram(u,[r],r.dtype)}var Gde={kernelName:uu,backendName:"webgpu",kernelFunc:Ude},Hde=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.size=v.sizeFromShape(this.outputShape),this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Fe()} {
          ${Le()}

          if (index < uniforms.size) {
            let coords = getOutputCoords(globalId, index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputFlat(index, outputValue);
          }
        }
      `}},jde={kernelName:Wi,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Hde(s.shape,a),[c,u]=N.getImageCenter(o,s.shape[1],s.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[u]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,d)}},qde=Cn({opType:vt.RSQRT,cpuKernelImpl:jle}),Xde={kernelName:no,backendName:"webgpu",kernelFunc:qde},Kde=class{constructor(e,t,n,s,r,a,o){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.dispatchLayout=Ke(e),this.dispatch=Oe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}`,this.size=v.sizeFromShape(e);let i=Jt(r.length);this.uniforms=`sliceDim : i32; strides: ${i};`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${s})`,i=this.type==="int32"?"ignore(atomicAdd(&(result.numbers[flatIndex]), i32(updateValue)));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${Fe()} {
        ${Le()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${o};
          let flatIndex = getOutputFlatIndex(${r});

         ${i}
        }
      }`}};function Zde(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=je({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=je({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=f.dtype,g=rc({backend:n,attrs:{shape:p,value:0,dtype:m}}),A=[{type:"int32",data:[i]},{type:"int32",data:u}],x=new Kde(f.shape,i,h.shape.length,f.shape.length,u,p,m),y=n.runWebGPUProgram(x,[f,h],m,A,g),b=je({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(y.dataId),b}var Yde={kernelName:Ei,backendName:"webgpu",kernelFunc:Zde},Jde=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.outputShape=t,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${Fe()} {
        ${Le()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputFlat(index, getA(${t}));
          } else {
            setOutputFlat(index, getB(${t}));
          }
        }
      }
    `}};function Qde(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new Jde(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],Ln(r.dtype,a.dtype))}var epe={kernelName:Ri,backendName:"webgpu",kernelFunc:Qde},tpe=Cn({opType:vt.SIGMOID}),npe={kernelName:ro,backendName:"webgpu",kernelFunc:tpe},spe=Cn({opType:vt.SIN}),rpe={kernelName:so,backendName:"webgpu",kernelFunc:spe},ape=Cn({opType:vt.SINH}),ope={kernelName:Di,backendName:"webgpu",kernelFunc:ape},mC=jn({opSnippet:Vt.SUB,cpuKernelImpl:Yle,supportsComplex:!0}),ipe={kernelName:uo,backendName:"webgpu",kernelFunc:mC};function lpe(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=dC({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=je({inputs:{x:i},backend:n,attrs:{shape:l}}),u=mC({inputs:{a:r,b:c},backend:n}),d=oC({inputs:{x:u},backend:n}),p=dx({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=je({inputs:{x:p},backend:n,attrs:{shape:l}}),f=fC({inputs:{a:d,b:h},backend:n});return n.disposeData(i.dataId),n.disposeData(c.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),f}var upe={kernelName:io,backendName:"webgpu",kernelFunc:lpe},cpe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((A,x)=>A*x),l=[[0,0]];l.push(...o);for(let A=1+a.length;A<r.shape.length;++A)l.push([0,0]);let c=[],u=hC({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=je({inputs:{x:u},backend:n,attrs:{shape:d}}),m=vl({inputs:{x:f},backend:n,attrs:{perm:p}}),g=je({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(A=>n.disposeData(A.dataId)),g},dpe={kernelName:_i,backendName:"webgpu",kernelFunc:cpe},ppe=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.outputShape=a,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${s}_${i}`,this.size=v.sizeFromShape(this.outputShape);let l=Jt(r.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let c="";n===1?c="i":n===2&&(c="i, j"),this.indicesSnippet=`getIndices(${c})`;let u="";s===1?u="i":s===2&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Fe()} {
        ${Le()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromFlatIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputFlat(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function hpe(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,r,i),p=!1,h=[{type:"int32",data:[c]},{type:"int32",data:[l]},{type:"int32",data:u}],f=new ppe(c,l,r.shape.length,a.shape.length,u,[d,1],p),m=n.runWebGPUProgram(f,[a,r,o],a.dtype,h),g=je({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),g}var fpe={kernelName:Xc,backendName:"webgpu",kernelFunc:hpe};function mpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=sc({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var gpe={kernelName:Pi,backendName:"webgpu",kernelFunc:mpe},Ape=Cn({opType:vt.SQRT}),ype={kernelName:ao,backendName:"webgpu",kernelFunc:Ape},xpe={kernelName:hu,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new Fm(n.shape,vt.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}},bpe=jn({opSnippet:Vt.SQUARED_DIFFERENCE}),vpe={kernelName:lo,backendName:"webgpu",kernelFunc:bpe},wpe=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Jt(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Fe()} {
         ${Le()}
         if (index < uniforms.size) {
           let coords = getOutputCoords(globalId, index);
           setOutputFlat(index, getX(${t}));
         }
       }
     `}};function kpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=Ft.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=je({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ft.computeOutShape(x,y,b),C=sc({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});w=je({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeData(C.dataId)}else if(n.shouldExecuteOnCPU([r])){let C=n.readSync(r.dataId),E=Be(r.shape,r.dtype,C),R=Kle(h,E,b,x);w=n.makeTensorInfo(f,r.dtype,R.values)}else{let C=new wpe(h),E=[{type:"int32",data:x},{type:"int32",data:b}],R=n.runWebGPUProgram(C,[r],r.dtype,E);w=je({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}return w}var Spe={kernelName:Fi,backendName:"webgpu",kernelFunc:kpe};function Ipe(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=Zle(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Cpe={kernelName:Kc,backendName:"webgpu",kernelFunc:Ipe},Tpe=Cn({opType:vt.TANH}),Npe={kernelName:co,backendName:"webgpu",kernelFunc:Tpe},Epe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.size=v.sizeFromShape(this.outputShape),this.shaderKey="tile"}getUserCode(){let e=Rpe(this.rank,"uniforms.");return`
      ${Fe()} {
        ${Le()}
        if (index < uniforms.size) {
          let resRC = getOutputCoords(globalId, index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function Rpe(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function $pe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>v.decodeString(p)):l,u=Be(r.shape,r.dtype,c),d=Jle(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Epe(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var Dpe={kernelName:Gr,backendName:"webgpu",kernelFunc:$pe},_pe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
        ${Fe()} {
          ${Le()}
          if (index < uniforms.size) {
            let outC = getOutputCoords(globalId, index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}},Ppe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge",this.size=v.sizeFromShape(this.outputShape)}getUserCode(){return`
        ${Fe()} {
          ${Le()}
          if (index < uniforms.size) {
            let outC = getOutputCoords(globalId, index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}};function oc(e,t){t!==null&&e.disposeData(t.dataId)}function gC(e){let t=1;for(;t<e;)t*=2;return t}function Fpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let w=n.readSync(r.dataId),[k,C]=Qle(w,i,r.dtype,a,o);return[n.makeTensorInfo(k.shape,k.dtype,k.values),n.makeTensorInfo(C.shape,C.dtype,C.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[r,rc({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let u=v.sizeFromShape(i)/l,d=je({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),p=gC(a),h=gC(l),f=null,m=()=>f===null?[d,d]:[d,f],g=(w,k,C)=>{let E=m(),R=new _pe(C),D=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[w]},{type:"int32",data:[k]}],P=f;f=n.runWebGPUProgram(R,E,"int32",D),oc(n,P)};for(let w=1;w<p;w*=2){let k=w*2;for(let C=w;C>=1;C/=2)g(k,C,[u,h])}for(let w=h;w>p;w/=2){let k=m(),C=new Ppe([u,w/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[p]}],F=f;f=n.runWebGPUProgram(C,k,"int32",R),oc(n,F);let D=p/2,P=D*2;for(let T=D;T>=1;T/=2)g(P,T,f.shape)}let A=f;f=sc({inputs:{x:f},backend:n,attrs:{begin:0,size:[u,a]}}),oc(n,A);let x=cC({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});oc(n,d);let y=i.slice(0,-1);y.push(a),A=f,f=je({inputs:{x:f},attrs:{shape:y},backend:n}),oc(n,A);let b=x;return x=je({inputs:{x},attrs:{shape:y},backend:n}),oc(n,b),[x,f]}var Ope={kernelName:Mi,backendName:"webgpu",kernelFunc:Fpe},Mpe=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.outputShape=e,this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Fe()} {
            ${Le()}
            let coords = getOutputCoords(globalId, index);
            if (coordsInBounds4D(coords, uniforms.outShape)) {
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(coords[0], coords[1], coords[2], coords[3], outputValue);
            }
          }
        `}};function zpe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],A=new Mpe(g),x=o==="nearest"?1:2,y;switch(i){case"constant":y=1;break;case"reflect":y=2;break;case"wrap":y=3;break;case"nearest":y=4;break;default:y=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[y]},{type:"float32",data:[l]}];return n.runWebGPUProgram(A,[r,a],"float32",b)}var Lpe={kernelName:zi,backendName:"webgpu",kernelFunc:zpe};function Bpe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=sc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),A=je({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=A,d.push(g)}return d.forEach(m=>n.disposeData(m.dataId)),f}var Wpe={kernelName:Li,backendName:"webgpu",kernelFunc:Bpe},Vpe=[xle,nue,rue,iue,hue,mue,Aue,xue,Sue,Nue,Rue,Pue,kle,zue,Vue,jue,Xue,Zue,Que,nce,rce,uce,dce,hce,mce,fce,Ace,xce,vce,Tce,kce,Ice,Rce,Dce,Pce,Mce,Bce,Vce,Gce,wle,Oue,jce,Xce,Zce,Jce,ede,tde,sde,ade,ide,ude,dde,hde,ace,mde,Ade,xde,Iue,vde,kde,Ide,Ede,$de,Tde,_de,Cue,Pde,Ode,zde,Ale,Wde,Gde,jde,Xde,Yde,epe,npe,rpe,ope,wue,Spe,Cpe,upe,dpe,gpe,fpe,ype,xpe,vpe,ipe,ice,Npe,Dpe,Ope,Lpe,due,Wpe,bde];for(let e of Vpe)jr(e);var Upe=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n=AC(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let r=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(r),r}this.numBytesAllocated+=e;let s=this.device.createBuffer({size:e,usage:t});return this.usedBuffers.get(n).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers==null)return;let s=AC(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}reset(){this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}dispose(){this.freeBuffers==null&&this.usedBuffers==null||(this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=null,this.usedBuffers=null,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0)}};function AC(e,t){return`${e}_${t}`}var yC=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){v.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=Ke(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Fe()} {
        ${Le()}
        let flatIndexBase = index * uniforms.numChannels;
        let coords = getCoordsFromFlatIndex(flatIndexBase);
        let values = ${e};
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,s)=>n===this.lastUniformData[s])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Gpe=class extends yC{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},Hpe=K().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),xC=class extends Ll{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!ax())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new Upe(this.device),this.tensorMap=new Pc(this,ts()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return xC.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=v.sizeFromShape(t)*rx(n);return n==="bool"&&e instanceof Uint8Array&&(e=Int32Array.from(e)),this.tensorMap.set(s,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=v.sizeFromShape(n)*rx(s);this.tensorMap.set(e,{dtype:s,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new yC),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new Gpe),this.fromPixelImportProgram;default:v.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=N.mergeRealAndImagArrays(a,o)}else{let r=await this.getBufferData(t);s=B4(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values&&this.queue.writeBuffer(t.bufferInfo.buffer,0,t.values))}makeUniformsDataView(e){let t=this.acquireBuffer(e.byteLength,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(t,0,e),{offset:0,size:e.byteLength,buffer:t}}arrayToDataView(e,t){let n=4,s=new DataView(new ArrayBuffer(t*n)),r=0;return e.forEach(a=>{let o=a.data;if(a.type!=="int32"&&a.type!=="float32"&&a.type!=="uint32")throw new Error(`${a.type} not supported!`);a.type==="int32"?o.forEach(i=>{s.setInt32(r*n,i,!0),r++}):a.type==="uint32"?o.forEach(i=>{s.setUint32(r*n,i,!0),r++}):o.forEach(i=>{s.setFloat32(r*n,i,!0),r++})}),s}computePadding(e){let t=0,n=0,s=0,r=[];return e.forEach((a,o)=>{a.data.length===0&&(a.data=[1]);let i;switch(a.data.length){case 0:i=1;break;case 1:i=1;break;case 2:i=2;break;case 3:i=4;break;case 4:i=4;break;default:v.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}n=Math.ceil(t/i)*i-t;for(let l=0;l<n;++l)r.push({type:a.type,data:[0]}),s++;r.push({type:a.type,data:a.data}),s=s+a.data.length,t+=a.data.length+n}),this.arrayToDataView(r,s)}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),v.sizeFromShape(r.shape)===0){let E=this.tensorMap.get(r.dataId);return E.values=v.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}let a=[{type:"float32",data:[NaN]}],o=t.concat(r).map(E=>E.shape),i="int32";o.map(E=>{a.push({type:i,data:E})});let l=v.computeStrides(r.shape);a.push({type:i,data:l}),e.size!=null&&a.push({type:i,data:[e.size]}),a.push({type:"uint32",data:e.dispatch}),s&&(a=[...a,...s]);let c=null,u=this.computePadding(a),d=u.byteLength;c=this.makeUniformsDataView(u);let p=t.map((E,R)=>{if(E.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(E.dataId),{dtype:this.tensorMap.get(E.dataId).dtype,shape:E.shape,name:e.variableNames[R]}}),h=p.map(E=>E.dtype).concat(r.dtype),f=p.map(E=>N.getBroadcastDims(E.shape,r.shape)),m=p.map(E=>v.arraysEqual(E.shape,r.shape)).join("_"),g=f.map(E=>E.join("_")).join(";"),A=lC(e,o,h,g,m),{bindGroupLayout:x,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),b=this.getAndSavePipeline(A,()=>iC(this.device,e,y,p,r)),w=this.activeTimers!=null,k=Cce(this.device,x,t.map(E=>this.tensorToBinding(E)),this.tensorToBinding(r),c);this.ensureCommandEncoderReady();let C=this.getComputePass();if(w&&this.supportTimeQuery&&C.writeTimestamp(this.querySet,0),C.setPipeline(b),C.setBindGroup(0,k),C.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),w&&this.supportTimeQuery&&C.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(E=>{this.commandQueueOwnedIds.add(E.dataId)}),this.commandQueueOwnedIds.add(r.dataId),c){let E={byteSize:d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:c.buffer};this.uniformDisposalQueue.push(E)}return K().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),w&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}runFromPixelsProgram(e,t,n,s,r){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:s},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let o=this.getComputePass(),i=this.activeTimers!=null;i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,0),o.setPipeline(e.pipeline),o.setBindGroup(0,a),o.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(r),this.submitQueue(),i&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=Hpe){return K().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&v.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},hx=xC;hx.nextDataId=0;var bC={};Me(bC,{WebGPUBackend:()=>hx,webgpu_util:()=>L4});gu.isBrowser()&&ax()&&Zi("webgpu",async()=>{K().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:K().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},s=t.features.has("timestamp-query");s?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let r=await t.requestDevice(n);return new hx(r,s)},3);var Qt;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Qt||(Qt={}));var ap;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(ap||(ap={}));var vC;function jpe(e){vC=e.wasm.cwrap(fo,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function qpe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let E=n.dataIdMap.get(o.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=ap[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let A=l?r.shape[2]:r.shape[1],x=c?a.shape[1]:a.shape[2],y=qi.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...y,A,x],r.dtype),w=n.dataIdMap.get(b.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),C=new Uint8Array(new Int32Array(a.shape).buffer);return vC(p,k,r.shape.length,h,C,a.shape.length,l,c,g,f,m,d||0,w),b}var Xpe={kernelName:fo,backendName:"wasm",setupFunc:jpe,kernelFunc:qpe};function Tn(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,c=o.makeOutput(i.shape,t||i.dtype),u=o.dataIdMap.get(c.dataId).id;return v.sizeFromShape(c.shape)===0||n(l,Qt[i.dtype],u),c}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var Kpe=Tn(ti);function qn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:c,b:u}=l,d=i.dataIdMap.get(c.dataId).id,p=i.dataIdMap.get(u.dataId).id,h=n!=null?n:c.dtype,f=N.assertAndGetBroadcastShape(c.shape,u.shape),m=i.makeOutput(f,h);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(c.shape).buffer),A=new Uint8Array(new Int32Array(u.shape).buffer),x=i.dataIdMap.get(m.dataId).id,y=()=>s(d,g,c.shape.length,p,A,u.shape.length,Qt[c.dtype],x);if(t&&c.dtype==="float32")return y(),m;let b=N.getBroadcastDims(c.shape,f),w=N.getBroadcastDims(u.shape,f),k=b.every((E,R)=>E===R),C=w.every((E,R)=>E===R);if(k&&C)return y(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${c.dtype} ${e}.`)}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Zpe=!0,Ype=qn(Vr,Zpe),wC;function Jpe(e){wC=e.wasm.cwrap(wa,null,["array","number","number","number"])}function Qpe(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return wC(a,r.length,Qt[s.dtype],o),s}var ehe={kernelName:wa,backendName:"wasm",setupFunc:Jpe,kernelFunc:Qpe};function zm(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var the={kernelName:Ba,backendName:"wasm",kernelFunc:zm},kC;function nhe(e){kC=e.wasm.cwrap(po,null,["number","array","number","number","number","array","number"])}function ic(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=rhe(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=she(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=zm({inputs:t,backend:n});return f.shape=i,f}let c=n.makeOutput(i,l.dtype),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(c.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return kC(u,h,l.shape.length,Qt[l.dtype],d,p,a.length),c}function she(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function rhe(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var ahe={kernelName:po,backendName:"wasm",kernelFunc:ic,setupFunc:nhe};function Lo(e,t,n){let s=e.shape,r=e.shape.length,a=v.parseAxisParam(t,s),o=a,i=N.getAxesPermutation(o,r),l=null,c=!1;if(i!=null){let u=new Array(r);for(let h=0;h<u.length;h++)u[h]=s[i[h]];o=N.getInnerMostAxes(o.length,r),l=ic({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==d&&(c=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:c}}var SC;function ohe(e){SC=e.wasm.cwrap(Gl,null,["number, number, number"])}function ihe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Lo(o,r,t);if(h){let y=t.dataIdMap.get(u.dataId).id;c=u,l=y}let f=c.shape.length;N.assertAxesAreInnerMostDims("all",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),A=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;SC(l,A,y)}if(h&&t.disposeData(u.dataId),a){let y=N.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var lhe={kernelName:Gl,backendName:"wasm",setupFunc:ohe,kernelFunc:ihe},IC;function uhe(e){IC=e.wasm.cwrap(Hl,null,["number, number, number"])}function che(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Lo(o,r,t);if(h){let y=t.dataIdMap.get(u.dataId).id;c=u,l=y}let f=c.shape.length;N.assertAxesAreInnerMostDims("any",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),A=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;IC(l,A,y)}if(h&&t.disposeData(u.dataId),a){let y=N.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var dhe={kernelName:Hl,backendName:"wasm",setupFunc:uhe,kernelFunc:che},CC;function phe(e){CC=e.wasm.cwrap(ka,null,["number","number","number","number","number"])}function hhe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:c,axes:u,inputWasTransposed:d}=Lo(a,r,t);if(d){let A=t.dataIdMap.get(c.dataId).id;A!==o&&(l=c,i=A)}let p=l.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=v.sizeFromShape(h.shape),g=l.shape[u[0]];return CC(i,Qt[l.dtype],m,g,f),d&&t.disposeData(c.dataId),h}var fhe={kernelName:ka,backendName:"wasm",kernelFunc:hhe,setupFunc:phe},TC;function mhe(e){TC=e.wasm.cwrap(Sa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ghe(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,A=u.strideHeight,x=u.strideWidth,y=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let b=s.makeOutput(u.outShape,"float32"),w=s.dataIdMap.get(b.dataId).id;return TC(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,A,x,y,w),b}var Ahe={kernelName:Sa,backendName:"wasm",setupFunc:mhe,kernelFunc:ghe};function is(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a);return v.assert(a===v.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var yhe={kernelName:Ci,backendName:"wasm",kernelFunc:is},NC;function xhe(e){NC=e.wasm.cwrap(Ia,null,["number","array","number","number","array","number","number","number","number"])}function bhe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),A=v.sizeFromShape(m),y=qi.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);v.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],w=i?[A,h,d]:[A,d,h],k=is({inputs:{x:r},backend:n,attrs:{shape:b}}),C=is({inputs:{x:a},backend:n,attrs:{shape:w}}),E=n.dataIdMap.get(k.dataId).id,R=n.dataIdMap.get(C.dataId).id,F=o?k.shape[2]:k.shape[1],D=i?C.shape[1]:C.shape[2],P=Math.max(g,A),T=n.makeOutput([P,F,D],k.dtype),M=n.dataIdMap.get(T.dataId).id,U=new Uint8Array(new Int32Array(k.shape).buffer),j=new Uint8Array(new Int32Array(C.shape).buffer);return NC(E,U,k.shape.length,R,j,C.shape.length,o,i,M),n.disposeData(k.dataId),n.disposeData(C.dataId),T.shape=y,T}var vhe={kernelName:Ia,backendName:"wasm",setupFunc:xhe,kernelFunc:bhe};function op(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=Ft.parseSliceParams(t,n,s),i=Ft.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),c=r.makeOutput(o,t.dtype),u=v.computeStrides(t.shape),d=r.dataIdMap.get(c.dataId);if(i){let f=Ft.computeFlatOffset(a,u);return t.dtype==="string"?d.stringBytes=l.slice(f,f+v.sizeFromShape(o)):r.typedArrayFromHeap(c).set(l.subarray(f,f+v.sizeFromShape(o))),c}if(t.dtype==="string"){let f=cm(l,a,o,t.shape,t.dtype);return d.stringBytes=f,c}let p=r.typedArrayFromHeap(c),h=t.shape.length;if(h===2)whe(l,u[0],p,a,o);else if(h===3)khe(l,u[0],u[1],p,a,o);else if(h===4)She(l,u[0],u[1],u[2],p,a,o);else{let f=cm(l,a,o,t.shape,t.dtype);p.set(f)}return c}function whe(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let c=o;c<l;c++){let u=c*t+i;n.set(e.subarray(u,u+r[1]),a),a+=r[1]}}function khe(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],c=r[2],u=i+a[0],d=l+a[1];for(let p=i;p<u;p++)for(let h=l;h<d;h++){let f=p*t+h*n+c;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function She(e,t,n,s,r,a,o){let i=0,l=a[0],c=a[1],u=a[2],d=l+o[0],p=c+o[1],h=u+o[2],f=a[3];for(let m=l;m<d;m++)for(let g=c;g<p;g++)for(let A=u;A<h;A++){let x=m*t+g*n+A*s+f;r.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var Ihe={kernelName:$i,backendName:"wasm",kernelFunc:op};function Che(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((A,x)=>A*x),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=is({inputs:{x:r},backend:n,attrs:{shape:l}}),f=ic({inputs:{x:h},backend:n,attrs:{perm:c}}),m=is({inputs:{x:f},backend:n,attrs:{shape:u}}),g=op({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var The={kernelName:ni,backendName:"wasm",kernelFunc:Che};function ip(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var Nhe={kernelName:Ca,backendName:"wasm",kernelFunc:ip},Ehe=Tn(Ta),EC;function Rhe(e){EC=e.wasm.cwrap(Ur,null,["number","number","number","number"])}function $he(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id;return EC(i,a,o,c),l}var Dhe={kernelName:Ur,backendName:"wasm",setupFunc:Rhe,kernelFunc:$he};function RC(e){let{inputs:t,backend:n}=e,s=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=N.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>v.sizeFromShape(h.shape)>0);if(a.length===1)return zm({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(v.sizeFromShape(r)===0)return o;let i=a.map(h=>h.shape);if(N.assertParamsConsistent(i,s),a[0].dtype==="string"){let h=a.map(y=>{let b=v.sizeFromShape(y.shape.slice(s));return is({inputs:{x:y},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(y=>({vals:n.readSync(y.dataId),shape:y.shape}));r=N.computeOutShape(h.map(y=>y.shape),1);let m=h[0].shape[0]===1,g=ky(f,r,t[0].dtype,m),A=N.computeOutShape(a.map(y=>y.shape),s);o.shape=A;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=N.fromStringArrayToUint8(g),h.forEach(y=>n.disposeData(y.dataId)),o}let l=v.sizeFromShape(a[0].shape.slice(0,s)),c=0,u=a.map(h=>{let f=v.sizeFromShape(h.shape.slice(s));return c+=f,f}),d=a.map(h=>n.typedArrayFromHeap(h)),p=n.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*c;for(let m=0;m<d.length;m++){let g=u[m],A=h*g,x=d[m].subarray(A,A+g);p.set(x,f),f+=g}}return o}var _he={kernelName:si,backendName:"wasm",kernelFunc:RC},$C;function Phe(e){$C=e.wasm.cwrap(Na,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Fhe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d,dataFormat:p}=n,h=N.convertConv2DDataFormat(p),f=N.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!1,h),m=f.filterHeight,g=f.filterWidth,A=f.padInfo.top,x=f.padInfo.right,y=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,C=f.strideHeight,E=f.strideWidth,R=f.inChannels,F=f.outChannels,D=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let P=s.makeOutput(f.outShape,"float32"),T=s.dataIdMap.get(P.dataId).id;return $C(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,A,x,y,b,D,w,k,C,E,R,F,T),P}var Ohe={kernelName:Na,backendName:"wasm",setupFunc:Phe,kernelFunc:Fhe},DC;function Mhe(e){DC=e.wasm.cwrap(Ea,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zhe(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,inputShape:u}=s,d=1,p=N.convertConv2DDataFormat(l),h=N.computeConv2DInfo(u,a.shape,o,d,i,c,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:A,inHeight:x,inWidth:y,outChannels:b,outHeight:w,outWidth:k,strideHeight:C,strideWidth:E}=h,R=m-1-h.padInfo.top,F=g-1-h.padInfo.left,D=h.dataFormat==="channelsLast",P=v.computeStrides(h.inShape),T=v.computeStrides(r.shape),[M,U,j]=v.computeStrides(a.shape),z=P[0],X=D?P[1]:P[2],Z=D?P[2]:1,J=D?1:P[1],ee=T[0],ne=D?T[1]:T[2],Q=D?T[2]:1,te=D?1:T[1],oe=t.makeOutput(h.inShape,"float32"),he=t.dataIdMap.get(oe.dataId).id,be=t.dataIdMap.get(r.dataId).id,we=t.dataIdMap.get(a.dataId).id;return DC(be,we,f,m,g,x,y,A,w,k,b,C,E,R,F,M,U,j,z,X,Z,J,ee,ne,Q,te,he),oe}var Lhe={kernelName:Ea,backendName:"wasm",setupFunc:Mhe,kernelFunc:zhe},Bhe=Tn(Ra),Whe=Tn($a),fx;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(fx||(fx={}));var _C;function Vhe(e){_C=e.wasm.cwrap(ai,null,["number","number","number","number","array","number","number","number","number","number"])}function Uhe(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:c}=n,u=l.shape[0],[d,p]=o,h=[u,d,p,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=ip({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,A=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(c.dataId).id,y=t.makeOutput(h,"float32"),b=t.dataIdMap.get(y.dataId).id,w=new Uint8Array(new Int32Array(i.shape).buffer);return _C(g,A,x,u,w,d,p,fx[r],a,b),m!=null&&t.disposeData(m.dataId),y}var Ghe={kernelName:ai,backendName:"wasm",setupFunc:Vhe,kernelFunc:Uhe},PC;function Hhe(e){PC=e.wasm.cwrap(ri,null,["number","number","number","number","number","number"])}function jhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=N.getAxesPermutation([a],l),u=r;c!==null&&(u=ic({inputs:{x:r},attrs:{perm:c},backend:n}));let d=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[d],l);let p=n.makeOutput(u.shape,u.dtype),h=u.shape[d],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(p.dataId).id;PC(f,o?1:0,i?1:0,h,m,Qt[r.dtype]);let g=p;if(c!==null){let A=N.getUndoAxesPermutation(c);g=ic({inputs:{x:p},attrs:{perm:A},backend:n}),n.disposeData(u.dataId),n.disposeData(p.dataId)}return g}var qhe={kernelName:ri,backendName:"wasm",setupFunc:Hhe,kernelFunc:jhe},FC;function Xhe(e){FC=e.wasm.cwrap(oi,null,["number","number","number","array","number","array","array","number","number"])}function Khe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=t.makeOutput(f,"float32"),A=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),y=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return FC(A,a,o==="NHWC"?1:0,x,r.shape.length-1,y,b,f.length,w),m}var Zhe={kernelName:oi,backendName:"wasm",setupFunc:Xhe,kernelFunc:Khe},OC;function Yhe(e){OC=e.wasm.cwrap(Da,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Jhe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d}=n,p=c==null?[1,1]:c,h=N.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,A=h.padInfo.right,x=h.padInfo.bottom,y=h.padInfo.left,b=h.dilationHeight,w=h.dilationWidth,k=h.strideHeight,C=h.strideWidth,E=h.inChannels,R=h.outChannels,F=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let D=s.makeOutput(h.outShape,"float32"),P=s.dataIdMap.get(D.dataId).id;return OC(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,A,x,y,F,b,w,k,C,E,R,P),D}var Qhe={kernelName:Da,backendName:"wasm",setupFunc:Yhe,kernelFunc:Jhe},efe=Tn(Pa),tfe=!1,nfe=qn(ii,tfe,"bool"),sfe=Tn(Fa,"float32");function mx(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),is({inputs:{x:r},backend:s,attrs:{shape:i}})}var rfe={kernelName:li,backendName:"wasm",kernelFunc:mx};function MC(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var afe={kernelName:Ql,backendName:"wasm",kernelFunc:MC},zC;function ofe(e){zC=e.wasm.cwrap(ci,null,["number","number","number","number","number","number"])}function ife(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,c,u]=s.shape;return zC(a,i,l,c,u,o),r}var lfe={kernelName:ci,backendName:"wasm",kernelFunc:ife,setupFunc:ofe},ufe=Tn(Oa),cfe=!1,dfe=qn(Ma,cfe),LC;function pfe(e){LC=e.wasm.cwrap(za,null,["number","number","number","number","number","number","number"])}function hfe(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:c}=n,u=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(v.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return LC(u,d,p,h,f,r,g),m}var ffe={kernelName:za,backendName:"wasm",setupFunc:pfe,kernelFunc:hfe},BC;function mfe(e){BC=e.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gfe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,l,u,c,p),g=ap[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let A=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,y=m.outChannels,b=0;if(o!=null){let Q=s.dataIdMap.get(o.dataId);if(Q.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${Q.shape.length}.`);if(Q.shape[0]!==y)throw new Error(`FusedConv2D bias shape (${Q.shape}) does not match the number of output channels (${y})`);b=Q.id}let w=m.filterHeight,k=m.filterWidth,C=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,D=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,M=m.strideWidth,U=m.inChannels,j=m.padInfo.type==="SAME"?1:0,z=m.batchSize,X=m.inHeight,Z=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let J=s.makeOutput(m.outShape,"float32"),ee=s.dataIdMap.get(J.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return BC(A,z,X,Z,x,w,k,b,C,E,R,F,j,D,P,T,M,U,y,g,ne,f||0,ee),J}var Afe={kernelName:mo,backendName:"wasm",setupFunc:mfe,kernelFunc:gfe},WC;function yfe(e){WC=e.wasm.cwrap(go,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function xfe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,l,u,c,p,!0),g=ap[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let A=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,y=m.outChannels,b=0;if(o!=null){let Q=s.dataIdMap.get(o.dataId);if(Q.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${Q.shape.length}.`);if(Q.shape[0]!==y)throw new Error(`FusedDepthwiseConv2D bias shape (${Q.shape}) does not match the number of output channels (${y})`);b=Q.id}let w=m.filterHeight,k=m.filterWidth,C=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,D=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,M=m.strideWidth,U=m.inChannels,j=m.padInfo.type==="SAME"?1:0,z=m.batchSize,X=m.inHeight,Z=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let J=s.makeOutput(m.outShape,"float32"),ee=s.dataIdMap.get(J.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return WC(A,z,X,Z,x,w,k,b,C,E,R,F,j,D,P,T,M,U,y,g,ne,f||0,ee),J}var bfe={kernelName:go,backendName:"wasm",setupFunc:yfe,kernelFunc:xfe},VC;function vfe(e){VC=e.wasm.cwrap(pi,null,["number","number","number","number","number","number","array","number"])}function wfe(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=A2.prepareAndValidate(s,r),c=t.makeOutput(a,s.dtype);if(o===0)return c;let u=r.shape,d=u[u.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),A=t.dataIdMap.get(c.dataId).id;return VC(h,Qt[s.dtype],m,o,d,i,g,A),c}var kfe={kernelName:pi,backendName:"wasm",setupFunc:vfe,kernelFunc:wfe},UC;function Sfe(e){UC=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Ife(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=t.readSync(a.dataId),u=r.shape[l];for(let R=0;R<c.length;++R){let F=c[R];v.assert(F<=u-1&&F>=0,()=>`GatherV2: the index value ${F} is not in [0, ${u-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=is({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=v.sizeFromShape(a.shape),f=is({inputs:{x:a},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(v.sizeFromShape(r.shape)===0)return g;let A=p.shape.length-1,y=t.dataIdMap.get(p.dataId).id,w=t.dataIdMap.get(f.dataId).id,k=t.dataIdMap.get(g.dataId).id,C=new Uint8Array(new Int32Array(v.computeStrides(p.shape)).buffer),E=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return UC(y,Qt[r.dtype],C,A,w,d.batchSize,E,k),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var Cfe={kernelName:di,backendName:"wasm",setupFunc:Sfe,kernelFunc:Ife},Tfe=!1,Nfe=qn(hi,Tfe,"bool"),Efe=!1,Rfe=qn(La,Efe,"bool"),GC;function $fe(e){GC=e.wasm.cwrap(fi,null,["number","number","number","number"])}function Dfe(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;GC(r,Qt[t.dtype],n,o)}return a}var _fe={kernelName:fi,backendName:"wasm",setupFunc:$fe,kernelFunc:Dfe},Pfe=!1,Ffe=qn(mi,Pfe,"bool"),Ofe=!1,Mfe=qn(gi,Ofe,"bool"),zfe=Tn(Wa),Lfe=!1,Bfe=qn(Ai,Lfe,"bool"),HC;function Wfe(e){HC=e.wasm.cwrap(Va,null,["number","number","number","number"])}function Vfe(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Lo(o,r,t);if(h){let y=t.dataIdMap.get(u.dataId).id;c=u,l=y}let f=c.shape.length;N.assertAxesAreInnerMostDims("max",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),A=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;HC(l,Qt[o.dtype],A,y)}if(h&&t.disposeData(u.dataId),a){let y=N.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var Ufe={kernelName:Va,backendName:"wasm",setupFunc:Wfe,kernelFunc:Vfe},Gfe=!1,Hfe=qn(Ua,Gfe),jC;function jfe(e){jC=e.wasm.cwrap(Ga,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qfe(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;v.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,A=u.dilationHeight,x=u.dilationWidth,y=u.strideHeight,b=u.strideWidth,w=u.inChannels,k=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let C=s.makeOutput(u.outShape,"float32"),E=s.dataIdMap.get(C.dataId).id;return jC(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,A,x,y,b,w,k,E),C}var Xfe={kernelName:Ga,backendName:"wasm",setupFunc:jfe,kernelFunc:qfe},qC;function Kfe(e){qC=e.wasm.cwrap(Ha,null,["number, number, number"])}function Zfe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Lo(o,r,t),f=d;if(h){let b=t.dataIdMap.get(u.dataId).id;b!==i&&(c=u,l=b,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("mean",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),A=v.sizeFromShape(g),x=c;c.dtype!=="float32"&&(x=ip({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let y=t.makeOutput(m,"float32");if(v.sizeFromShape(c.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;qC(l,A,b)}if(h&&t.disposeData(u.dataId),a){let b=N.expandShapeToKeepDim(y.shape,p);y.shape=b}return c.dtype!=="float32"&&t.disposeData(x.dataId),y}var Yfe={kernelName:Ha,backendName:"wasm",setupFunc:Kfe,kernelFunc:Zfe},XC;function Jfe(e){XC=e.wasm.cwrap(ja,null,["number","number","number","number"])}function Qfe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Lo(o,r,t);if(h){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y)}let f=c.shape.length;N.assertAxesAreInnerMostDims("min",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),A=v.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;XC(l,Qt[o.dtype],A,y)}if(h&&t.disposeData(u.dataId),a){let y=N.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var eme={kernelName:ja,backendName:"wasm",setupFunc:Jfe,kernelFunc:Qfe},tme=!1,nme=qn(qa,tme),gx;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(gx||(gx={}));var KC;function sme(e){KC=e.wasm.cwrap(Xa,null,["number","array","number","number","array","array","number","number"])}function rme(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=s.map(f=>f[0]),d=s.map(f=>f[1]),p=new Uint8Array(new Int32Array(u).buffer),h=new Uint8Array(new Int32Array(d).buffer);return KC(o,c,t.shape.length,Qt[t.dtype],p,h,gx[r],l),i}var ame={kernelName:Xa,backendName:"wasm",kernelFunc:rme,setupFunc:sme},ome=!0,ime=qn(Ka,ome),lme=Tn(yi);function Ax(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var ZC;function ume(e){ZC=e.wasm.cwrap(bi,"number",["number","number","number","number","number"])}function cme(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,c=t.dataIdMap.get(i.dataId).id,u=t.dataIdMap.get(l.dataId).id,d=ZC(c,u,a,r,o),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=Ax(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var dme={kernelName:bi,backendName:"wasm",setupFunc:ume,kernelFunc:cme},YC;function pme(e){YC=e.wasm.cwrap(ou,"number",["number","number","number","number","number","bool"])}function hme(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=YC(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ax(t,p);t.wasm._free(m);let A=t.makeOutput([f],"int32",h),x=t.makeOutput([],"int32",g);return[A,x]}var fme={kernelName:ou,backendName:"wasm",setupFunc:pme,kernelFunc:hme},JC;function mme(e){JC=e.wasm.cwrap(vi,"number",["number","number","number","number","number","number"])}function gme(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=JC(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ax(t,p);t.wasm._free(g);let A=t.makeOutput([f],"int32",h),x=t.makeOutput([f],"float32",m);return[A,x]}var Ame={kernelName:vi,backendName:"wasm",setupFunc:mme,kernelFunc:gme},yme=!1,xme=qn(xi,yme,"bool"),QC;function bme(e){QC=e.wasm.cwrap(ki,null,["number","number","number","number","number"])}function vme(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=n.makeOutput([...r.shape,a],"int32"),c=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(r.dataId).id;return QC(d,a,o,i,c),l}var wme={kernelName:ki,backendName:"wasm",setupFunc:bme,kernelFunc:vme};function kme(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var Sme={kernelName:wi,backendName:"wasm",kernelFunc:kme};function Ime(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return mx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=mx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=RC({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var Cme={kernelName:Si,backendName:"wasm",kernelFunc:Ime},e6;function Tme(e){e6=e.wasm.cwrap(Za,null,["number","array","number","number","array","array","number","number"])}function Nme(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(v.sizeFromShape(t.shape)===0)return MC({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),p=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return e6(o,u,t.shape.length,Qt[t.dtype],h,f,r,c),i}var t6={kernelName:Za,backendName:"wasm",kernelFunc:Nme,setupFunc:Tme},Eme=!1,Rme=qn(Ya,Eme),n6;function $me(e){n6=e.wasm.cwrap(Ja,null,["number","number","number"])}function Dme(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,c=l;l.dtype!=="float32"&&(c=ip({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(c.dataId).id);let u=n.makeOutput(s.shape,"float32"),d=n.dataIdMap.get(u.dataId).id;return n6(i,o,d),l.dtype!=="float32"&&n.disposeData(c.dataId),u}var _me={kernelName:Ja,backendName:"wasm",setupFunc:$me,kernelFunc:Dme},s6;function Pme(e){s6=e.wasm.cwrap(Ii,null,["number","number","number","number"])}function Fme(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Lo(o,r,t),f=d;if(h){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("prod",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),A=v.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;s6(l,A,Qt[x.dtype],y)}if(h&&t.disposeData(u.dataId),a){let y=N.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var Ome={kernelName:Ii,backendName:"wasm",setupFunc:Pme,kernelFunc:Fme},Mme=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Cy(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},zme={kernelName:iu,backendName:"wasm",kernelFunc:Mme},Lme=!0,Bme=qn(_a,Lme),Wme=Tn(Qa),Vme=Tn(to),r6;function Ume(e){r6=e.wasm.cwrap(eo,null,["number","number","number","number","number","number","number","number","number","number"])}function Gme(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,[u,d,p,h]=r.shape,f=[u,l,c,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=ip({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let A=m.id,x=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return x;let y=t.dataIdMap.get(x.dataId).id;return r6(A,u,d,p,h,l,c,a?1:0,o?1:0,y),g!=null&&t.disposeData(g.dataId),x}var Hme={kernelName:eo,backendName:"wasm",setupFunc:Ume,kernelFunc:Gme},a6;function jme(e){a6=e.wasm.cwrap(Ti,null,["number","array","number","array","number","number"])}function qme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=v.parseAxisParam(a,r.shape);if(r.shape.length===0)return zm({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);a6(l,u,o.length,d,r.shape.length,c);let p=is({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),p}var Xme={kernelName:Ti,backendName:"wasm",kernelFunc:qme,setupFunc:jme},o6;function Kme(e){o6=e.wasm.cwrap(Wi,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Zme(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(l.dataId).id,[d,p,h,f]=r.shape,[m,g]=N.getImageCenter(i,p,h),A=o===0,x=255,y=typeof o=="number"?[o,o,o,A?0:x]:[...o,x],b=new Uint8Array(new Int32Array(y).buffer);return o6(c,d,p,h,f,a,m,g,b,y.length,u),l}var Yme={kernelName:Wi,backendName:"wasm",kernelFunc:Zme,setupFunc:Kme},Jme=Tn(Ni),Qme=Tn(no),i6;function e0e(e){i6=e.wasm.cwrap(Ei,null,["number","number","number","number","number","number","array","number","number"])}function t0e(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(v.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=y2.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,A=new Uint8Array(new Int32Array(d).buffer),x=t.dataIdMap.get(i.dataId).id;return i6(f,g,Qt[a.dtype],l,c,u,A,p,x),i}var n0e={kernelName:Ei,backendName:"wasm",setupFunc:e0e,kernelFunc:t0e},l6;function s0e(e){l6=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function r0e(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(c.dataId).id,d=s.shape.length,p=r.shape.length,h=d===0||d>1||p===1?1:v.sizeFromShape(r.shape.slice(1));return l6(o,i,l,h,u),c}var a0e={kernelName:Ri,backendName:"wasm",kernelFunc:r0e,setupFunc:s0e},u6;function o0e(e){u6=e.wasm.cwrap(ro,null,["number","number"])}function i0e(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return v.sizeFromShape(r.shape)===0||u6(s,a),r}var l0e={kernelName:"Sigmoid",backendName:"wasm",setupFunc:o0e,kernelFunc:i0e},u0e=Tn(so),c6;function c0e(e){c6=e.wasm.cwrap(io,null,["number","number","number","number"])}function d0e(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=v.sizeFromShape(n.shape)/i;return v.sizeFromShape(a.shape)===0||c6(r,o,i,l),a}var p0e={kernelName:io,backendName:"wasm",setupFunc:c0e,kernelFunc:d0e};function h0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let c=t6.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=is({inputs:{x:c},backend:n,attrs:{shape:u}}),x=ic({inputs:{x:m},backend:n,attrs:{perm:d}}),w=is({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),w}var f0e={kernelName:_i,backendName:"wasm",kernelFunc:h0e};function m0e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=op({inputs:{x:r},attrs:{begin:c,size:p},backend:s});return c[i]+=d,h})}var g0e={kernelName:Pi,backendName:"wasm",kernelFunc:m0e},A0e=Tn(ao),y0e=Tn(hu),x0e=!0,b0e=qn(lo,x0e),d6;function v0e(e){d6=e.wasm.cwrap(ho,null,["number","number","number","number"])}function w0e(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return d6(o,r,Qt[a.dtype],l),i}var k0e={kernelName:ho,backendName:"wasm",setupFunc:v0e,kernelFunc:w0e},p6;function S0e(e){p6=e.wasm.cwrap(Fi,null,["number","array","number","array","array","array","array","array","number","number"])}function I0e(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:x,end:y,strides:b}=Ft.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=is({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Ft.computeOutShape(x,y,b),C=op({inputs:{x:r},backend:t,attrs:{begin:x,size:k}});w=is({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}else{let k=t.makeOutput(h,"float32"),C=t.dataIdMap.get(r.dataId).id,E=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(y).buffer),D=new Uint8Array(new Int32Array(b).buffer),P=new Uint8Array(new Int32Array(h).buffer),T=new Uint8Array(new Int32Array(v.computeStrides(h)).buffer),M=t.dataIdMap.get(k.dataId).id;p6(C,E,r.shape.length,R,F,D,P,T,h.length,M),w=is({inputs:{x:k},backend:t,attrs:{shape:f}}),t.disposeData(k.dataId)}return w}var C0e={kernelName:Fi,backendName:"wasm",setupFunc:S0e,kernelFunc:I0e},T0e=!0,N0e=qn(uo,T0e),h6;function E0e(e){h6=e.wasm.cwrap(oo,null,["number","number","number","number"])}function R0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Lo(o,r,t),f=d;if(h){let y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("sum",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),A=v.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let y=t.dataIdMap.get(x.dataId).id;h6(l,A,Qt[x.dtype],y)}if(h&&t.disposeData(u.dataId),a){let y=N.expandShapeToKeepDim(x.shape,p);x.shape=y}return x}var $0e={kernelName:oo,backendName:"wasm",setupFunc:E0e,kernelFunc:R0e},D0e=Tn(Oi),_0e=Tn(co),f6;function P0e(e){f6=e.wasm.cwrap(Gr,null,["number","array","number","array","number","number"])}function F0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let p=0;p<i.length;p++)i[p]=r.shape[p]*o[p];let l=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),u=n.makeOutput(i,r.dtype),d=n.dataIdMap.get(u.dataId).id;return f6(a,l,r.shape.length,c,i.length,Qt[u.dtype],d),u}var O0e={kernelName:Gr,backendName:"wasm",setupFunc:P0e,kernelFunc:F0e},m6;function M0e(e){m6=e.wasm.cwrap(Mi,null,["number","array","number","number","number","bool","number","number"])}var z0e=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let c=t.makeOutput(l,s.dtype),u=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(l,"int32"),p=t.dataIdMap.get(d.dataId).id;return m6(o,i,s.shape.length,Qt[s.dtype],r,a,u,p),[c,d]},L0e={kernelName:Mi,backendName:"wasm",setupFunc:M0e,kernelFunc:z0e},g6;function B0e(e){g6=e.wasm.cwrap(zi,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function W0e(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],A=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),x=t.makeOutput(g,r.dtype),y=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(r.dataId).id,C=t.dataIdMap.get(a.dataId).id,E=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return g6(w,C,a.shape[0]>1,u,f,m,h,p,d,A,r.shape.length-1,E,R,l,y),x}var V0e={kernelName:zi,backendName:"wasm",setupFunc:B0e,kernelFunc:W0e};function U0e(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o),d=new Array(i).fill(0),p=r.shape.slice();p[a]=1;for(let h=0;h<u.length;h++)d[a]=h,u[h]=op({inputs:{x:r},attrs:{begin:d,size:p},backend:n});return u.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var G0e={kernelName:Li,backendName:"wasm",kernelFunc:U0e};function H0e(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var j0e={kernelName:Bi,backendName:"wasm",kernelFunc:H0e},q0e=[Kpe,Ype,ehe,lhe,dhe,fhe,Ahe,vhe,The,Nhe,Ehe,Dhe,_he,Ohe,Lhe,Bhe,Whe,Ghe,qhe,Zhe,Qhe,efe,nfe,sfe,rfe,afe,lfe,ufe,dfe,Xpe,ffe,Afe,bfe,kfe,Cfe,Nfe,Rfe,the,_fe,Ffe,Mfe,zfe,Bfe,Ufe,Hfe,Xfe,Yfe,eme,nme,ame,ime,lme,dme,fme,Ame,xme,wme,Sme,Cme,t6,Rme,_me,Ome,zme,Bme,Wme,Vme,yhe,Hme,Xme,Yme,Qme,Jme,n0e,a0e,l0e,u0e,Ihe,p0e,f0e,g0e,A0e,y0e,b0e,k0e,C0e,N0e,$0e,D0e,_0e,O0e,L0e,V0e,ahe,G0e,j0e];for(let e of q0e)jr(e);var yx=K();yx.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));yx.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(yx.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var A6=Jo(UN()),X0e='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',K0e=Jo(GN()),y6=class extends Ll{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(v6),bx=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Pc(this,ts())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=v.sizeFromShape(n),i=o*v.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:s,stringBytes:r}=this.dataIdMap.get(e);if(n==="string")return r;let a=this.wasm.HEAPU8.slice(t,t+v.sizeFromShape(s)*v.bytesPerElement(n));return J0e(a.buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Z0e(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function x6(e,t,n){if(Lm!=null)return Lm;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),up!=null&&up[s]!=null?up[s]:n+s}async function Y0e(){let[e,t]=await Promise.all([K().getAsync("WASM_HAS_SIMD_SUPPORT"),K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let c=X0e,u=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(u)}return i.endsWith(".wasm")?x6(e,t,lp!=null?lp:l):l+i},xx&&(r.instantiateWasm=Z0e(x6(e,t,lp!=null?lp:"")));let a=!1;r.onAbort=()=>{if(a||cp)return;cp=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&Lm==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+A6.default.toString()],{type:"text/javascript"}),o=(0,A6.default)(r)):o=(0,K0e.default)(r),o.then(i=>{a=!0,cp=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})})})}function J0e(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Q0e=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Lm=null,lp=null,up={},cp=!1,xx=!1;function ege(e,t=!1){if(I2("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),cp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Lm=e,xx=t}function b6(e,t=!1){if(cp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")lp=e;else{up=e;let n=Q0e.filter(s=>up[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}xx=t}var v6=-1,bx=-1;function tge(e){v6=e}function nge(){if(bx===-1)throw new Error("WASM backend not initialized.");return bx}var sge="0.0.0",rge=2;Zi("wasm",async()=>{let{wasm:e}=await Y0e();return new y6(e)},rge);var Bo="3.11.0-20211102",w6={tfjs:Bo,"tfjs-core":Bo,"tfjs-data":Bo,"tfjs-layers":Bo,"tfjs-converter":Bo,"tfjs-backend-cpu":Bo,"tfjs-backend-webgl":Bo,"tfjs-backend-wasm":Bo},dp=w6["tfjs-core"];var k6=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var S6=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,I6=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,C6=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,T6=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,N6=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var vx=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},E6=class{constructor(t,n,s){de(this,"uniform",{});de(this,"attribute",{});de(this,"gl");de(this,"id");de(this,"compile",(t,n)=>{let s=this.gl.createShader(n);if(this.gl.shaderSource(s,t),this.gl.compileShader(s),!this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS))throw new Error(`filter: gl compile failed: ${this.gl.getShaderInfoLog(s)}`);return s});this.gl=t;let r=this.compile(n,this.gl.VERTEX_SHADER),a=this.compile(s,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS))throw new Error(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);this.gl.useProgram(this.id),vx(n,"attribute",this.attribute);for(let o in this.attribute)this.attribute[o]=this.gl.getAttribLocation(this.id,o);vx(n,"uniform",this.uniform),vx(s,"uniform",this.uniform);for(let o in this.uniform)this.uniform[o]=this.gl.getUniformLocation(this.id,o)}};function R6(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=Xn(100,100),c={},u={INTERMEDIATE:1},d=l.getContext("webgl");if(!d)throw new Error("filter: cannot get webgl context");function p(x,y){if(!(x===l.width&&y===l.height)){if(l.width=x,l.height=y,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,o),d.bufferData(d.ARRAY_BUFFER,b,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),r=[null,null]}}function h(x,y){let b=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,b);let w=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,w);let k=d.createTexture();return d.bindTexture(d.TEXTURE_2D,k),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,x,y,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,k,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:b,texture:k}}function f(x){return r[x]=r[x]||h(l.width,l.height),r[x]}function m(x=0){if(!i)return;let y=null,b=null,w=!1;e===0?y=t:y=f(s).texture||null,e++,n&&!(x&u.INTERMEDIATE)?(b=null,w=e%2==0):(s=(s+1)%2,b=f(s).fbo||null),d.bindTexture(d.TEXTURE_2D,y),d.bindFramebuffer(d.FRAMEBUFFER,b),d.uniform1f(i.uniform.flipY,w?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function g(x){if(c[x])return i=c[x],d.useProgram((i?i.id:null)||null),i;i=new E6(d,k6,x);let y=Float32Array.BYTES_PER_ELEMENT,b=4*y;return d.enableVertexAttribArray(i.attribute.pos),d.vertexAttribPointer(i.attribute.pos,2,d.FLOAT,!1,b,0*y),d.enableVertexAttribArray(i.attribute.uv),d.vertexAttribPointer(i.attribute.uv,2,d.FLOAT,!1,b,2*y),c[x]=i,i}let A={colorMatrix:x=>{let y=new Float32Array(x);y[4]/=255,y[9]/=255,y[14]/=255,y[19]/=255;let b=y[18]===1&&y[3]===0&&y[8]===0&&y[13]===0&&y[15]===0&&y[16]===0&&y[17]===0&&y[19]===0?I6:S6,w=g(b);d.uniform1fv(w.uniform.m,y),m()},brightness:x=>{let y=(x||0)+1;A.colorMatrix([y,0,0,0,0,0,y,0,0,0,0,0,y,0,0,0,0,0,1,0])},saturation:x=>{let y=(x||0)*2/3+1,b=(y-1)*-.5;A.colorMatrix([y,b,b,0,0,b,y,b,0,0,b,b,y,0,0,0,0,0,1,0])},desaturate:()=>{A.saturation(-1)},contrast:x=>{let y=(x||0)+1,b=-128*(y-1);A.colorMatrix([y,0,0,0,b,0,y,0,0,b,0,0,y,0,b,0,0,0,1,0])},negative:()=>{A.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let y=Math.cos(x),b=Math.sin(x),w=.213,k=.715,C=.072;A.colorMatrix([w+y*(1-w)+b*-w,k+y*-k+b*-k,C+y*-C+b*(1-C),0,0,w+y*-w+b*.143,k+y*(1-k)+b*.14,C+y*-C+b*-.283,0,0,w+y*-w+b*-(1-w),k+y*-k+b*k,C+y*(1-C)+b*C,0,0,0,0,0,1,0])},desaturateLuminance:()=>{A.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{A.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{A.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{A.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{A.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{A.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{A.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{A.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let y=new Float32Array(x),b=1/l.width,w=1/l.height,k=g(N6);d.uniform1fv(k.uniform.m,y),d.uniform2f(k.uniform.px,b,w),m()},detectEdges:()=>{A.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{A.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{A.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let y=x||1;A.convolution.call(this,[0,-1*y,0,-1*y,1+4*y,-1*y,0,-1*y,0])},emboss:x=>{let y=x||1;A.convolution.call(this,[-2*y,-1*y,0,-1*y,1,1*y,0,1*y,2*y])},blur:x=>{let y=x/7/l.width,b=x/7/l.height,w=g(T6);d.uniform2f(w.uniform.px,0,b),m(u.INTERMEDIATE),d.uniform2f(w.uniform.px,y,0),m()},pixelate:x=>{let y=x/l.width,b=x/l.height,w=g(C6);d.uniform2f(w.uniform.size,y,b),m()}};this.add=function(x){let y=Array.prototype.slice.call(arguments,1),b=A[x];a.push({func:b,args:y})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){p(x.width,x.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,x);for(let y=0;y<a.length;y++){n=y===a.length-1;let b=a[y];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}var Bm=2048,xn=null,Nn=null,lc=null,Dt;function Xn(e,t){let n;if(ye.browser)if(ye.worker)n=new OffscreenCanvas(e,t);else{if(typeof document=="undefined")throw new Error("attempted to run in web worker but offscreenCanvas is not supported");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof ye.Canvas!="undefined"?n=new ye.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(n=new globalThis.Canvas(e,t));return n}function wx(e,t){let n=t||Xn(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}function uc(e,t,n=!0){if(!e)return t.debug&&re("input is missing"),{tensor:null,canvas:null};if(!(e instanceof et)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof ye.Canvas!="undefined"&&e instanceof ye.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input type is not recognized");if(e instanceof et){if(e.isDisposedInternal)throw new Error("input tensor is disposed");if(!e.shape||e.shape.length!==4||e.shape[0]!==1||e.shape[3]!==3)throw new Error(`input tensor shape must be [1, height, width, 3] and instead was ${e.shape}`);return{tensor:or(e),canvas:t.filter.return?Nn:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&re("input stream is not ready"),{tensor:null,canvas:xn};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!r)return t.debug&&re("cannot determine input dimensions"),{tensor:null,canvas:xn};let a=s,o=r;if(a>Bm&&(a=Bm,o=Math.trunc(a*r/s)),o>Bm&&(o=Bm,a=Math.trunc(o*s/r)),(t.filter.width||0)>0?a=t.filter.width:(t.filter.height||0)>0&&(a=s*((t.filter.height||0)/r)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=r*((t.filter.width||0)/s)),!a||!o)throw new Error("input cannot determine dimension");(!xn||xn.width!==a||xn.height!==o)&&(xn=Xn(a,o));let i=xn.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate!="undefined"?(i.translate(s,0),i.scale(-1,1),i.drawImage(e,0,0,s,r,0,0,xn.width,xn.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,s,r,0,0,xn.width,xn.height),(!Nn||xn.width!==Nn.width||xn.height!==Nn.height)&&(Nn=Xn(xn.width,xn.height)),t.filter.enabled&&ye.webgl.supported){if(Dt||(Dt=ye.browser?new R6:null),ye.filter=!!Dt,!Dt)return{tensor:null,canvas:xn};Dt.reset(),t.filter.brightness!==0&&Dt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Dt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Dt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Dt.add("blur",t.filter.blur),t.filter.saturation!==0&&Dt.add("saturation",t.filter.saturation),t.filter.hue!==0&&Dt.add("hue",t.filter.hue),t.filter.negative&&Dt.add("negative"),t.filter.sepia&&Dt.add("sepia"),t.filter.vintage&&Dt.add("brownie"),t.filter.sepia&&Dt.add("sepia"),t.filter.kodachrome&&Dt.add("kodachrome"),t.filter.technicolor&&Dt.add("technicolor"),t.filter.polaroid&&Dt.add("polaroid"),t.filter.pixelate!==0&&Dt.add("pixelate",t.filter.pixelate),Dt.get()>0?Nn=Dt.apply(xn):Nn=Dt.draw(xn)}else wx(xn,Nn),Dt&&(Dt=null),ye.filter=!!Dt;if(!n)return{tensor:null,canvas:Nn};if(!Nn)throw new Error("cannot create output canvas");let l,c=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(ye.browser&&Gs)l=Gs?Gs.fromPixels(e):null;else{c=e.data.length/e.height/e.width;let p=new Uint8Array(e.data.buffer);l=Gt(p,[e.height,e.width,c],"int32")}else if((!lc||Nn.width!==lc.width||Nn.height!==lc.height)&&(lc=Xn(Nn.width,Nn.height)),Gs&&ye.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=Gs.fromPixels(Nn):(lc=wx(Nn),l=Gs.fromPixels(lc));else{let f=wx(Nn).getContext("2d").getImageData(0,0,a,o);c=f.data.length/a/o;let m=new Uint8Array(f.data.buffer);l=Gt(m,[a,o,c])}if(c===4){let p=Eu(l,[0,0,0],[-1,-1,3]);ae(l),l=p}if(!l)throw new Error("cannot create tensor from input");let u=pe(l,"float32"),d=mn(u,0);return ae([l,u]),{tensor:d,canvas:t.filter.return?Nn:null}}}var kx=0,Sx=1,Ix=0,age=async e=>{let t=48,n=$e.resizeBilinear(e,[Math.trunc((e.shape[1]||1)/t),Math.trunc((e.shape[2]||1)/t)]),s=async()=>{let o=Se(n),i=await o.data();return ae(o),i[0]},r=async()=>{let o=await n.data(),i=0;for(let l=0;l<o.length/3;l++)i+=o[3*l+2];return i};if(Ix===0){let o=ce();await r();let i=ce();await s();let l=ce();Ix=i-o<l-i?1:2}let a=Ix===1?await r():await s();return ae(n),a};async function $6(e,t){if(e.cacheSensitivity===0)return!1;let n=await age(t),s=100*(Math.max(n,kx)/Math.min(n,kx)-1);kx=n;let r=s<Math.max(e.cacheSensitivity,Sx);return Sx=s>10*e.cacheSensitivity?0:s,r=r&&Sx>0,r}var D6=class{constructor(){de(this,"browser");de(this,"node");de(this,"worker");de(this,"platform","");de(this,"agent","");de(this,"backends",[]);de(this,"initial");de(this,"filter");de(this,"tfjs");de(this,"offscreen");de(this,"perfadd",!1);de(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});de(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});de(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});de(this,"cpu",{model:void 0,flags:[]});de(this,"kernels",[]);de(this,"Canvas");de(this,"Image");de(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined",this.tfjs={version:dp},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t&&t[0]){let n=t[0].match(/\(([^()]+)\)/g);this.platform=n&&n[0]?n[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(ts().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&ir()==="wasm"&&(this.wasm.simd=await K().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let t=Xn(100,100),n=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof n!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(ir()==="webgl"||ir()==="humangl")){let s=Ir().gpgpu!=="undefined"?await Ir().getGPGPUContext().gl:null;s&&(this.webgl.version=s.getParameter(s.VERSION),this.webgl.renderer=s.getParameter(s.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu"),this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name),this.kernels=Hr(ir()).map(s=>s.kernelName.toLowerCase())}async updateCPU(){let t={model:"",flags:[]};if(this.node&&this.platform.startsWith("linux")){let n=Aa("fs");try{let s=n.readFileSync("/proc/cpuinfo").toString();for(let r of s.split(`
`))r.startsWith("model name")&&(t.model=r.match(/:(.*)/g)[0].replace(":","").trim()),r.startsWith("flags")&&(t.flags=r.match(/:(.*)/g)[0].replace(":","").trim().split(" ").sort())}catch(s){}}this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},ye=new D6;var Cx="2.5.0";var Wo;var S2e=Number.MAX_SAFE_INTEGER;async function _6(e){return ye.initial&&(Wo=null),Wo?e.debug&&re("cached model:",Wo.modelUrl):(Wo=await rt(at(e.modelBasePath,e.face.agegenderrace.modelPath)),!Wo||!Wo.modelUrl?re("load model failed:",e.face.agegenderrace.modelPath):e.debug&&re("load model:",Wo.modelUrl)),Wo}var ln,Wm=[],Tx=Number.MAX_SAFE_INTEGER,P6=0,F6=0;async function O6(e){var t,n;return ye.initial&&(ln=null),ln?e.debug&&re("cached model:",ln.modelUrl):(ln=await rt(at(e.modelBasePath,((t=e.face.antispoof)==null?void 0:t.modelPath)||"")),!ln||!ln.modelUrl?re("load model failed:",(n=e.face.antispoof)==null?void 0:n.modelPath):e.debug&&re("load model:",ln.modelUrl)),ln}async function Nx(e,t,n,s){var o,i;if(!ln)return null;let r=(((o=t.face.antispoof)==null?void 0:o.skipTime)||0)>ce()-F6,a=Tx<(((i=t.face.antispoof)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&P6===s&&Wm[n]?(Tx++,Wm[n]):(Tx=0,new Promise(async l=>{let c=$e.resizeBilinear(e,[(ln==null?void 0:ln.inputs[0].shape)?ln.inputs[0].shape[2]:0,(ln==null?void 0:ln.inputs[0].shape)?ln.inputs[0].shape[1]:0],!1),u=ln==null?void 0:ln.execute(c),d=(await u.data())[0];Wm[n]=Math.round(100*d)/100,P6=s,F6=ce(),ae([c,u]),l(Wm[n])}))}var Mr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},Ex={count:468,mouth:13,symmetryLine:[13,Mr.midwayBetweenEyes[0]]},pp={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Rx=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],hp=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],kl=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var ige=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],lge=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],uge=[33,133,362,263,1,78,308],R2e=ige.map(e=>hp[e]),$2e=lge.map(e=>hp[e]),D2e=uge.map(e=>hp[e]);var fp=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],Vm=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2],$x=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],Dx=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],M6=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s,landmarks:e.landmarks,confidence:e.confidence}},Um=(e,t,n)=>{let s=t.shape[1],r=t.shape[2],a=$e.cropAndResize(t,[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]],[0],n),o=fe(a,255);return ae(a),o},mp=(e,t)=>{let n=Vm(e),s=fp(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},gp=e=>{let t=Vm(e),n=fp(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks,confidence:e.confidence}},Gm=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},Ap=[[1,0,0],[0,1,0],[0,0,1]],cge=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),dge=(e,t)=>cge(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var z6=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Sl=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},pge=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},L6=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Sl(e[r],pge(t,a)))}return n},B6=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=z6(t[0],t[1]),o=L6(a,r),i=z6(-t[0],-t[1]);return L6(o,i)},hge=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Sl(t[0],n),-Sl(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},fge=(e,t)=>[Sl(e,t[0]),Sl(e,t[1])];function W6(e){let t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let c=r*(l+.5);for(let u=0;u<o;u++){let d=r*(u+.5);for(let p=0;p<i;p++)n.push([d,c])}}}return n}function V6(e,t,n,s,r){let a=fp(t),o=e.map(p=>[a[0]/r*(p[0]-r/2),a[1]/r*(p[1]-r/2),p[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?B6(n,[0,0]):Ap,c=i?o.map(p=>[...fge(p,l),p[2]]):o,u=i?hge(s):Ap,d=[...Vm({startPoint:t.startPoint,endPoint:t.endPoint}),1];return c.map(p=>[Math.round(p[0]+Sl(d,u[0])),Math.round(p[1]+Sl(d,u[1])),Math.round(p[2]||0)])}function U6(e,t,n){let s=e.landmarks.length>=Ex.count?Ex.symmetryLine:pp.symmetryLine,r=dge(e.landmarks[s[0]],e.landmarks[s[1]]),a=r&&r!==0&&Math.abs(r)>.2,o,i;if(a){let l=Vm({startPoint:e.startPoint,endPoint:e.endPoint}),c=[l[0]/t.shape[2],l[1]/t.shape[1]],u=$e.rotateWithOffset(t,r,0,c);o=B6(-r,l),i=Um(e,u,[n,n]),ae(u)}else o=Ap,i=Um(e,t,[n,n]);return[r,o,i]}var G6=6,Os,H6=[],j6=null,Ms=0,yp=()=>Ms;async function q6(e){var t,n;return ye.initial&&(Os=null),Os?e.debug&&re("cached model:",Os.modelUrl):(Os=await rt(at(e.modelBasePath,((t=e.face.detector)==null?void 0:t.modelPath)||"")),!Os||!Os.modelUrl?re("load model failed:",(n=e.face.detector)==null?void 0:n.modelPath):e.debug&&re("load model:",Os.modelUrl)),Ms=Os.inputs[0].shape?Os.inputs[0].shape[2]:0,Ms===-1&&(Ms=64),H6=W6(Ms),j6=ur(H6),Os}function mge(e){let t={};t.boxStarts=_e(e,[0,1],[-1,2]),t.centers=le(t.boxStarts,j6),t.boxSizes=_e(e,[0,3],[-1,2]),t.boxSizesNormalized=fe(t.boxSizes,Ms),t.centersNormalized=fe(t.centers,Ms),t.halfBoxSize=fe(t.boxSizesNormalized,2),t.starts=xe(t.centersNormalized,t.halfBoxSize),t.ends=le(t.centersNormalized,t.halfBoxSize),t.startNormalized=W(t.starts,Ms),t.endNormalized=W(t.ends,Ms);let n=wu([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(s=>ae(t[s])),n}async function X6(e,t){var i,l,c,u;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return{boxes:[]};let n={};n.resized=$e.resizeBilinear(e,[Ms,Ms]),n.div=fe(n.resized,127.5),n.normalized=xe(n.div,.5);let s=Os==null?void 0:Os.execute(n.normalized);if(Array.isArray(s)){let d=s.sort((p,h)=>p.size-h.size);n.concat384=kt([d[0],d[2]],2),n.concat512=kt([d[1],d[3]],2),n.concat=kt([n.concat512,n.concat384],1),n.batch=ct(n.concat,0)}else n.batch=ct(s);ae(s),n.boxes=mge(n.batch),n.logits=_e(n.batch,[0,0],[-1,1]),n.sigmoid=ds(n.logits),n.scores=ct(n.sigmoid),n.nms=await $e.nonMaxSuppressionAsync(n.boxes,n.scores,((i=t.face.detector)==null?void 0:i.maxDetected)||0,((l=t.face.detector)==null?void 0:l.iouThreshold)||0,((c=t.face.detector)==null?void 0:c.minConfidence)||0);let r=await n.nms.array(),a=[],o=await n.scores.data();for(let d=0;d<r.length;d++){let p=o[r[d]];if(p>(((u=t.face.detector)==null?void 0:u.minConfidence)||0)){let h={};h.bbox=_e(n.boxes,[r[d],0],[1,-1]),h.slice=_e(n.batch,[r[d],G6-1],[1,-1]),h.squeeze=ct(h.slice),h.landmarks=G(h.squeeze,[G6,-1]),h.startPoint=_e(h.bbox,[0,0],[-1,2]),h.endPoint=_e(h.bbox,[0,2],[-1,2]),a.push({box:{startPoint:await h.startPoint.data(),endPoint:await h.endPoint.data()},landmarks:await h.landmarks.array(),confidence:p}),Object.keys(h).forEach(f=>ae(h[f]))}}return Object.keys(n).forEach(d=>ae(n[d])),{boxes:a,scaleFactor:[e.shape[2]/Ms,e.shape[1]/Ms]}}var Fx={};Rc(Fx,{connected:()=>Px,kpt:()=>_x});var _x=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPalm","rightPalm","leftIndex","rightIndex","leftPinky","rightPinky","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftThumb","leftHand","rightThumb","rightHand"],Px={leftLeg:["leftHip","leftKnee","leftAnkle","leftHeel","leftFoot"],rightLeg:["rightHip","rightKnee","rightAnkle","rightHeel","rightFoot"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist","leftPalm"],rightArm:["rightShoulder","rightElbow","rightWrist","rightPalm"],leftHand:[],rightHand:[],head:[]};var K6={initial:!0},un=[null,null],Vo=[[0,0],[0,0]],Ox=Number.MAX_SAFE_INTEGER,Mx,Hm=null,Uo=[[0,0],[0,0],[0,0],[0,0]],Z6=0;async function Y6(e){var t,n,s;if(K6.initial&&(un[0]=null),!un[0]&&((t=e.body.detector)==null?void 0:t.modelPath)){un[0]=await rt(at(e.modelBasePath,((n=e.body.detector)==null?void 0:n.modelPath)||""));let r=Object.values(un[0].modelSignature.inputs);Vo[0][0]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[1].size):0,Vo[0][1]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[2].size):0,!un[0]||!un[0].modelUrl?re("load model failed:",(s=e.body.detector)==null?void 0:s.modelPath):e.debug&&re("load model:",un[0].modelUrl)}else e.debug&&un[0]&&re("cached model:",un[0].modelUrl);return un[0]}async function J6(e){var t;if(K6.initial&&(un[1]=null),un[1])e.debug&&re("cached model:",un[1].modelUrl);else{un[1]=await rt(at(e.modelBasePath,e.body.modelPath||""));let n=Object.values(un[1].modelSignature.inputs);Vo[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,Vo[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0,((t=e.body.modelPath)==null?void 0:t.includes("lite"))?Mx=["ld_3d","output_segmentation","output_heatmap","world_3d","output_poseflag"]:Mx=["Identity","Identity_2","Identity_3","Identity_4","Identity_1"],!un[1]||!un[1].modelUrl?re("load model failed:",e.body.modelPath):e.debug&&re("load model:",un[1].modelUrl)}return un[1]}function gge(e,t){let n=e.map(o=>o.position[0]),s=e.map(o=>o.position[1]),r=[Math.min(...n),Math.min(...s),Math.max(...n)-Math.min(...n),Math.max(...s)-Math.min(...s)],a=[r[0]/t[0],r[1]/t[1],r[2]/t[0],r[3]/t[1]];return{keypointsBox:r,keypointsBoxRaw:a}}async function Age(e){let t={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Uo=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],t.pad=qs(e,Uo),t.resize=$e.resizeBilinear(t.pad,[Vo[1][0],Vo[1][1]]);let n=fe(t.resize,255);return Object.keys(t).forEach(s=>ae(t[s])),n}function yge(e,t){for(let n of e)n.position=[n.position[0]*(t[0]+Uo[2][0]+Uo[2][1])/t[0]-Uo[2][0],n.position[1]*(t[1]+Uo[1][0]+Uo[1][1])/t[1]-Uo[1][0],n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],n.position[2]];return e}var Q6=e=>1-1/(1+Math.exp(e));async function xge(e,t,n){var h;let s={};s.input=await Age(e),[s.ld,s.segmentation,s.heatmap,s.world,s.poseflag]=(h=un[1])==null?void 0:h.execute(s.input,Mx);let r=(await s.poseflag.data())[0],a=Math.max(0,(r-.8)/(1-.8)),o=await s.ld.data(),i=[],l=5;for(let f=0;f<o.length/l;f++){let m=Q6(o[l*f+3]),g=Q6(o[l*f+4]),A=Math.trunc(100*m*g*a)/100,x=[o[l*f+0]/Vo[1][0],o[l*f+1]/Vo[1][1],o[l*f+2]+0],y=[Math.trunc(n[0]*x[0]),Math.trunc(n[1]*x[1]),x[2]];i.push({part:_x[f],positionRaw:x,position:y,score:A})}if(a<(t.body.minConfidence||0))return null;let c=yge(i,n),u=gge(c,[n[0],n[1]]);Object.keys(s).forEach(f=>ae(s[f]));let d={};for(let[f,m]of Object.entries(Px)){let g=[];for(let A=0;A<m.length-1;A++){let x=c.find(b=>b.part===m[A]),y=c.find(b=>b.part===m[A+1]);x&&y&&x.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&g.push([x.position,y.position])}d[f]=g}return{id:0,score:Math.trunc(100*a)/100,box:u.keypointsBox,boxRaw:u.keypointsBoxRaw,keypoints:c,annotations:d}}async function zx(e,t){let n=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>ce()-Z6,r=Ox<(t.body.skipFrames||0);return t.skipAllowed&&s&&r&&Hm!==null?Ox++:(Hm=await xge(e,t,n),Z6=ce(),Ox=0),Hm?[Hm]:[]}var cc=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var Qs,Il=0,jm=[],e8=0,Lx=Number.MAX_SAFE_INTEGER;async function t8(e){if(ye.initial&&(Qs=null),Qs)e.debug&&re("cached model:",Qs.modelUrl);else{dc(["floormod"],e),Qs=await rt(at(e.modelBasePath,e.object.modelPath||""));let t=Object.values(Qs.modelSignature.inputs);Il=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!Qs||!Qs.modelUrl?re("load model failed:",e.object.modelPath):e.debug&&re("load model:",Qs.modelUrl)}return Qs}async function bge(e,t,n){if(!e)return[];let s=[],r=await e.array(),a=ct(e);ae(e);let o=kn(a,6,1);ae(a);let i=_n([o[1],o[0],o[3],o[2]],1),l=ct(i);ae(i);let c=ct(o[4]),u=ct(o[5]);o.forEach(f=>ae(f));let d=await $e.nonMaxSuppressionAsync(l,c,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);ae(l),ae(c),ae(u);let p=await d.data();ae(d);let h=0;for(let f of p){let m=Math.trunc(100*r[0][f][4])/100,g=r[0][f][5],A=cc[g].label,[x,y]=[r[0][f][0]/Il,r[0][f][1]/Il],b=[x,y,r[0][f][2]/Il-x,r[0][f][3]/Il-y],w=[Math.trunc(b[0]*t[0]),Math.trunc(b[1]*t[1]),Math.trunc(b[2]*t[0]),Math.trunc(b[3]*t[1])];s.push({id:h++,score:m,class:g,label:A,box:w,boxRaw:b})}return s}async function Bx(e,t){let n=(t.object.skipTime||0)>ce()-e8,s=Lx<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&jm.length>0?(Lx++,jm):(Lx=0,!ye.kernels.includes("mod")||!ye.kernels.includes("sparsetodense")?jm:new Promise(async r=>{let a=[e.shape[2],e.shape[1]],o=$e.resizeBilinear(e,[Il,Il]),i=t.object.enabled?Qs==null?void 0:Qs.execute(o,["tower_0/detections"]):null;e8=ce(),ae(o);let l=await bge(i,a,t);jm=l,r(l)}))}var Ux={};Rc(Ux,{connected:()=>Vx,kpt:()=>Wx});var Wx=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],Vx={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var cn,n8=0,Kn={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},Gx=Number.MAX_SAFE_INTEGER;async function Hx(e){return ye.initial&&(cn=null),cn?e.debug&&re("cached model:",cn.modelUrl):(cn=await rt(at(e.modelBasePath,e.body.modelPath||"")),!cn||!cn.modelUrl?re("load model failed:",e.body.modelPath):e.debug&&re("load model:",cn.modelUrl)),cn}function vge(e,t){let[n,s]=e.shape;return q(()=>{let r=(i,l)=>xe(i,W(fe(i,Ee(l,"int32")),Ee(l,"int32"))),a=G(e,[s*n]),o=ns(a,0).dataSync()[0];if(o>t){let i=Hs(a,0),l=r(i,n).dataSync()[0],c=fe(i,Ee(n,"int32")).dataSync()[0];return[l,c,o]}return[0,0,o]})}async function jx(e,t){let n=(t.body.skipTime||0)>ce()-n8,s=Gx<(t.body.skipFrames||0);return t.skipAllowed&&n&&s&&Object.keys(Kn.keypoints).length>0?(Gx++,[Kn]):(Gx=0,new Promise(async r=>{var d;let a=q(()=>{if(!(cn==null?void 0:cn.inputs[0].shape))return null;let p=$e.resizeBilinear(e,[cn.inputs[0].shape[2],cn.inputs[0].shape[1]],!1);return W(p,2).sub(1)}),o;if(t.body.enabled&&(o=cn==null?void 0:cn.execute(a)),n8=ce(),ae(a),o){Kn.keypoints.length=0;let p=o.squeeze();ae(o);let h=p.unstack(2);ae(p);for(let f=0;f<h.length;f++){let[m,g,A]=vge(h[f],t.body.minConfidence);A>(((d=t.body)==null?void 0:d.minConfidence)||0)&&Kn.keypoints.push({score:Math.round(100*A)/100,part:Wx[f],positionRaw:[m/cn.inputs[0].shape[2],g/cn.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/cn.inputs[0].shape[2]),Math.round(e.shape[1]*g/cn.inputs[0].shape[1])]})}h.forEach(f=>ae(f))}Kn.score=Kn.keypoints.reduce((p,h)=>h.score>p?h.score:p,0);let i=Kn.keypoints.map(p=>p.position[0]),l=Kn.keypoints.map(p=>p.position[1]);Kn.box=[Math.min(...i),Math.min(...l),Math.max(...i)-Math.min(...i),Math.max(...l)-Math.min(...l)];let c=Kn.keypoints.map(p=>p.positionRaw[0]),u=Kn.keypoints.map(p=>p.positionRaw[1]);Kn.boxRaw=[Math.min(...c),Math.min(...u),Math.max(...c)-Math.min(...c),Math.max(...u)-Math.min(...u)];for(let[p,h]of Object.entries(Vx)){let f=[];for(let m=0;m<h.length-1;m++){let g=Kn.keypoints.find(x=>x.part===h[m]),A=Kn.keypoints.find(x=>x.part===h[m+1]);g&&A&&g.score>(t.body.minConfidence||0)&&A.score>(t.body.minConfidence||0)&&f.push([g.position,A.position])}Kn.annotations[p]=f}r([Kn])}))}var wge=["angry","disgust","fear","happy","sad","surprise","neutral"],Zn,qm=[],s8=0,r8=0,qx=Number.MAX_SAFE_INTEGER,Xx=[.2989,.587,.114];async function a8(e){var t,n;return ye.initial&&(Zn=null),Zn?e.debug&&re("cached model:",Zn.modelUrl):(Zn=await rt(at(e.modelBasePath,((t=e.face.emotion)==null?void 0:t.modelPath)||"")),!Zn||!Zn.modelUrl?re("load model failed:",(n=e.face.emotion)==null?void 0:n.modelPath):e.debug&&re("load model:",Zn.modelUrl)),Zn}async function Kx(e,t,n,s){var o,i;if(!Zn)return null;let r=qx<(((o=t.face.emotion)==null?void 0:o.skipFrames)||0),a=(((i=t.face.emotion)==null?void 0:i.skipTime)||0)>ce()-r8;return t.skipAllowed&&a&&r&&s8===s&&qm[n]&&qm[n].length>0?(qx++,qm[n]):(qx=0,new Promise(async l=>{var u,d;let c=[];if((u=t.face.emotion)==null?void 0:u.enabled){let p={},h=(Zn==null?void 0:Zn.inputs[0].shape)?Zn.inputs[0].shape[2]:0;p.resize=$e.resizeBilinear(e,[h,h],!1),[p.red,p.green,p.blue]=kn(p.resize,3,3),p.redNorm=W(p.red,Xx[0]),p.greenNorm=W(p.green,Xx[1]),p.blueNorm=W(p.blue,Xx[2]),p.grayscale=Uh([p.redNorm,p.greenNorm,p.blueNorm]),p.grayscaleSub=xe(p.grayscale,.5),p.grayscaleMul=W(p.grayscaleSub,2),p.emotion=Zn==null?void 0:Zn.execute(p.grayscaleMul),r8=ce();let f=await p.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((d=t.face.emotion)==null?void 0:d.minConfidence)||0)&&c.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:wge[m]});c.sort((m,g)=>g.score-m.score),Object.keys(p).forEach(m=>ae(p[m]))}qm[n]=c,s8=s,l(c)}))}var er,Go=0,kge=2.3,Zx=Mr.leftEyeLower0,Yx=Mr.rightEyeLower0,pc={leftBounds:[Zx[0],Zx[Zx.length-1]],rightBounds:[Yx[0],Yx[Yx.length-1]]},hc={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function o8(e){var t,n;return ye.initial&&(er=null),er?e.debug&&re("cached model:",er.modelUrl):(er=await rt(at(e.modelBasePath,((t=e.face.iris)==null?void 0:t.modelPath)||"")),!er||!er.modelUrl?re("load model failed:",(n=e.face.iris)==null?void 0:n.modelPath):e.debug&&re("load model:",er.modelUrl)),Go=er.inputs[0].shape?er.inputs[0].shape[2]:0,Go===-1&&(Go=64),er}function Xm(e,t,n,s){for(let r=0;r<Rx.length;r++){let{key:a,indices:o}=Rx[r],i=Mr[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let c=o[l];e[i[l]]=[t[c][0],t[c][1],(t[c][2]+e[i[l]][2])/2]}}}var Sge=e=>{let t=e[pc.leftBounds[0]][2],n=e[pc.rightBounds[0]][2];return t-n},i8=(e,t,n,s,r=!1,a)=>{let o=gp(mp(Gm([e[n],e[s]]),kge)),i=fp(o),l=$e.cropAndResize(t,[[o.startPoint[1]/a,o.startPoint[0]/a,o.endPoint[1]/a,o.endPoint[0]/a]],[0],[Go,Go]);if(r&&ye.kernels.includes("flipleftright")){let c=$e.flipLeftRight(l);ae(l),l=c}return{box:o,boxSize:i,crop:l}},l8=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<hc.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/Go:o/Go)*n[0]+t.startPoint[0],i/Go*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(hc.index)}},u8=(e,t,n)=>{let s=e[Mr[`${n}EyeUpper0`][hc.upperCenter]][2],r=e[Mr[`${n}EyeLower0`][hc.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function c8(e,t,n,s){if(!er)return n.debug&&re("face mesh iris detection requested, but model is not loaded"),e;let{box:r,boxSize:a,crop:o}=i8(e,t,pc.leftBounds[0],pc.leftBounds[1],!0,s),{box:i,boxSize:l,crop:c}=i8(e,t,pc.rightBounds[0],pc.rightBounds[1],!0,s),u=kt([o,c]);ae(o),ae(c);let d=er.execute(u);ae(u);let p=await d.data();ae(d);let h=p.slice(0,hc.numCoordinates*3),{rawCoords:f,iris:m}=l8(h,r,a,!0),g=p.slice(hc.numCoordinates*3),{rawCoords:A,iris:x}=l8(g,i,l),y=Sge(e);Math.abs(y)<30?(Xm(e,f,"left",null),Xm(e,A,"right",null)):y<1?Xm(e,f,"left",["EyeUpper0","EyeLower0"]):Xm(e,A,"right",["EyeUpper0","EyeLower0"]);let b=u8(e,m,"left"),w=u8(e,x,"right");return e.concat(b).concat(w)}var fc=[],tr=null,zr=0,Jx=Number.MAX_SAFE_INTEGER,d8=0,p8=1.6;async function h8(e,t){var i,l,c,u,d,p,h,f;let n=(((i=t.face.detector)==null?void 0:i.skipTime)||0)>ce()-d8,s=Jx<(((l=t.face.detector)==null?void 0:l.skipFrames)||0);if(!t.skipAllowed||!n||!s||fc.length===0){let m=await X6(e,t);d8=ce(),fc=[];for(let g of m.boxes){let A={startPoint:g.box.startPoint,endPoint:g.box.endPoint,landmarks:g.landmarks,confidence:g.confidence};fc.push(gp(mp(M6(A,m.scaleFactor),Math.sqrt(p8))))}Jx=0}else Jx++;let r=[],a=[],o=0;for(let m=0;m<fc.length;m++){let g=fc[m],A=0,x,y={id:o++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if(((c=t.face.detector)==null?void 0:c.rotation)&&((u=t.face.mesh)==null?void 0:u.enabled)&&ye.kernels.includes("rotatewithoffset")?[A,x,y.tensor]=U6(g,e,zr):(x=Ap,y.tensor=Um(g,e,((d=t.face.mesh)==null?void 0:d.enabled)?[zr,zr]:[yp(),yp()])),y.boxScore=Math.round(100*g.confidence)/100,(p=t.face.mesh)==null?void 0:p.enabled)if(!tr)t.debug&&re("face mesh detection requested, but model is not loaded");else{let[b,w,k]=tr.execute(y.tensor),C=await w.data();y.faceScore=Math.round(100*C[0])/100;let E=G(k,[-1,3]),R=await E.array();if(ae([k,E,w,b]),y.faceScore<(((h=t.face.detector)==null?void 0:h.minConfidence)||1))g.confidence=y.faceScore;else{((f=t.face.iris)==null?void 0:f.enabled)&&(R=await c8(R,y.tensor,t,zr)),y.mesh=V6(R,g,A,x,zr),y.meshRaw=y.mesh.map(F=>[F[0]/(e.shape[2]||0),F[1]/(e.shape[1]||0),(F[2]||0)/zr]);for(let F of Object.keys(Mr))y.annotations[F]=Mr[F].map(D=>y.mesh[D]);g=gp(mp(Gm(y.mesh),p8)),y.box=$x(g,e),y.boxRaw=Dx(g,e),y.score=y.faceScore,a.push(g)}}else{y.box=$x(g,e),y.boxRaw=Dx(g,e),y.boxScore=Math.round(100*g.confidence||0)/100,y.score=y.boxScore,y.mesh=g.landmarks.map(b=>[(g.startPoint[0]+g.endPoint[0])/2+(g.endPoint[0]+g.startPoint[0])*b[0]/yp(),(g.startPoint[1]+g.endPoint[1])/2+(g.endPoint[1]+g.startPoint[1])*b[1]/yp()]),y.meshRaw=y.mesh.map(b=>[b[0]/(e.shape[2]||0),b[1]/(e.shape[1]||0),(b[2]||0)/zr]);for(let b of Object.keys(pp))y.annotations[b]=[y.mesh[pp[b]]]}r.push(y)}return fc=[...a],r}async function f8(e){var t,n;return ye.initial&&(tr=null),tr?e.debug&&re("cached model:",tr.modelUrl):(tr=await rt(at(e.modelBasePath,((t=e.face.mesh)==null?void 0:t.modelPath)||"")),!tr||!tr.modelUrl?re("load model failed:",(n=e.face.mesh)==null?void 0:n.modelPath):e.debug&&re("load model:",tr.modelUrl)),zr=tr.inputs[0].shape?tr.inputs[0].shape[2]:0,zr===-1&&(zr=64),tr}var m8=kl,g8=hp;var xs,Km=[],A8=0,y8=0,Qx=Number.MAX_SAFE_INTEGER;async function x8(e){var n,s;let t=at(e.modelBasePath,((n=e.face.description)==null?void 0:n.modelPath)||"");return ye.initial&&(xs=null),xs?e.debug&&re("cached model:",t):(xs=await rt(t),xs?e.debug&&re("load model:",t):re("load model failed:",((s=e.face.description)==null?void 0:s.modelPath)||"")),xs}function eb(e){let t=e.image||e.tensor||e;if(!(xs==null?void 0:xs.inputs[0].shape))return t;let n=$e.resizeBilinear(t,[xs.inputs[0].shape[2],xs.inputs[0].shape[1]],!1),s=W(n,255);return ae(n),s}async function tb(e,t,n,s){var o,i,l,c;if(!xs)return null;let r=Qx<(((o=t.face.description)==null?void 0:o.skipFrames)||0),a=(((i=t.face.description)==null?void 0:i.skipTime)||0)>ce()-A8;return t.skipAllowed&&r&&a&&y8===s&&((l=Km[n])==null?void 0:l.age)&&((c=Km[n])==null?void 0:c.age)>0?(Qx++,Km[n]):(Qx=0,new Promise(async u=>{var p,h;let d={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((p=t.face.description)==null?void 0:p.enabled){let f=eb(e),m=xs==null?void 0:xs.execute(f);A8=ce(),ae(f);let A=await(await m.find(R=>R.shape[1]===1)).data(),x=Math.trunc(200*Math.abs(A[0]-.5))/100;x>(((h=t.face.description)==null?void 0:h.minConfidence)||0)&&(d.gender=A[0]<=.5?"female":"male",d.genderScore=Math.min(.99,x));let y=Hs(m.find(R=>R.shape[1]===100),1),b=(await y.data())[0];ae(y);let k=await m.find(R=>R.shape[1]===100).data();d.age=Math.round(k[b-1]>k[b+1]?10*b-100*k[b-1]:10*b+100*k[b+1])/10;let C=m.find(R=>R.shape[1]===1024),E=C?await C.data():[];d.descriptor=Array.from(E),m.forEach(R=>ae(R))}Km[n]=d,y8=s,u(d)}))}function Zm(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function xp(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function b8(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return $e.cropAndResize(t,a,[0],n)}function v8(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function Ym(e,t=1.5){let n=xp(e),s=Zm(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function Jm(e){let t=xp(e),n=Zm(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function Ige(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function w8(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return Ige(n)}var k8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function Ho(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function Cge(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function S8(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Ho(e[r],Cge(t,a)))}return n}function nb(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=k8(t[0],t[1]),o=S8(a,r),i=k8(-t[0],-t[1]);return S8(o,i)}function I8(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Ho(t[0],n),-Ho(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function sb(e,t){return[Ho(e,t[0]),Ho(e,t[1])]}var C8=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var rb=class{constructor(t){de(this,"model");de(this,"anchors");de(this,"anchorsTensor");de(this,"inputSize");de(this,"inputSizeTensor");de(this,"doubleInputSizeTensor");this.model=t,this.anchors=C8.map(n=>[n.x,n.y]),this.anchorsTensor=ur(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Kt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Kt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){let n={};n.boxOffsets=_e(t,[0,0],[-1,2]),n.boxSizes=_e(t,[0,2],[-1,2]),n.div=fe(n.boxOffsets,this.inputSizeTensor),n.boxCenterPoints=le(n.div,this.anchorsTensor),n.halfBoxSizes=fe(n.boxSizes,this.doubleInputSizeTensor),n.sub=xe(n.boxCenterPoints,n.halfBoxSizes),n.startPoints=W(n.sub,this.inputSizeTensor),n.add=le(n.boxCenterPoints,n.halfBoxSizes),n.endPoints=W(n.add,this.inputSizeTensor);let s=wu([n.startPoints,n.endPoints],1);return Object.keys(n).forEach(r=>ae(n[r])),s}normalizeLandmarks(t,n){let s={};s.reshape=G(t,[-1,7,2]),s.div=fe(s.reshape,this.inputSizeTensor),s.landmarks=le(s.div,this.anchors[n]);let r=W(s.landmarks,this.inputSizeTensor);return Object.keys(s).forEach(a=>ae(s[a])),r}async predict(t,n){let s={};s.resize=$e.resizeBilinear(t,[this.inputSize,this.inputSize]),s.div=fe(s.resize,127.5),s.image=xe(s.div,1),s.batched=this.model.execute(s.image),s.predictions=ct(s.batched),s.slice=_e(s.predictions,[0,0],[-1,1]),s.sigmoid=ds(s.slice),s.scores=ct(s.sigmoid);let r=await s.scores.data();s.boxes=_e(s.predictions,[0,1],[-1,4]),s.norm=this.normalizeBoxes(s.boxes),s.nms=await $e.nonMaxSuppressionAsync(s.norm,s.scores,3*n.hand.maxDetected,n.hand.iouThreshold,n.hand.minConfidence);let a=await s.nms.array(),o=[];for(let i of a){let l={};l.box=_e(s.norm,[i,0],[1,-1]),l.slice=_e(s.predictions,[i,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,i),l.palmLandmarks=G(l.norm,[-1,2]);let c=await l.box.data(),u=c.slice(0,2),d=c.slice(2,4),p=await l.palmLandmarks.array(),h={startPoint:u,endPoint:d,palmLandmarks:p,confidence:r[i]},f=v8(h,[t.shape[2]/this.inputSize,t.shape[1]/this.inputSize]);o.push(f),Object.keys(l).forEach(m=>ae(l[m]))}return Object.keys(s).forEach(i=>ae(s[i])),o}};var Tge=5,T8=1.65,N8=[0,5,9,13,17,1,2],Nge=0,Ege=2,E8=0,ab=class{constructor(t,n){de(this,"handDetector");de(this,"handPoseModel");de(this,"inputSize");de(this,"storedBoxes");de(this,"skipped");de(this,"detectedHands");this.handDetector=t,this.handPoseModel=n,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(t){let n=t.map(o=>o[0]),s=t.map(o=>o[1]),r=[Math.min(...n),Math.min(...s)],a=[Math.max(...n),Math.max(...s)];return{startPoint:r,endPoint:a}}getBoxForPalmLandmarks(t,n){let s=t.map(a=>sb([...a,1],n)),r=this.calculateLandmarksBoundingBox(s);return Ym(Jm(r),Tge)}getBoxForHandLandmarks(t){let n=this.calculateLandmarksBoundingBox(t),s=Ym(Jm(n),T8);s.palmLandmarks=[];for(let r=0;r<N8.length;r++)s.palmLandmarks.push(t[N8[r]].slice(0,2));return s}transformRawCoords(t,n,s,r){let a=Zm(n),o=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=t.map(h=>[o[0]*(h[0]-this.inputSize/2),o[1]*(h[1]-this.inputSize/2),o[2]*h[2]]),l=nb(s,[0,0]),c=i.map(h=>[...sb(h,l),h[2]]),u=I8(r),d=[...xp(n),1],p=[Ho(d,u[0]),Ho(d,u[1])];return c.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2])])}async estimateHands(t,n){let s=!1,r,a=(n.hand.skipTime||0)>ce()-E8,o=this.skipped<(n.hand.skipFrames||0);n.skipAllowed&&a&&o&&(r=await this.handDetector.predict(t,n),this.skipped=0),n.skipAllowed&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==n.hand.maxDetected||!n.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(s=!0));let i=[];for(let l=0;l<this.storedBoxes.length;l++){let c=this.storedBoxes[l];if(!!c)if(n.hand.landmarks){let u=n.hand.rotation?w8(c.palmLandmarks[Nge],c.palmLandmarks[Ege]):0,d=xp(c),p=[d[0]/t.shape[2],d[1]/t.shape[1]],h=n.hand.rotation&&ye.kernels.includes("rotatewithoffset")?$e.rotateWithOffset(t,u,0,p):t.clone(),f=nb(-u,d),m=s?this.getBoxForPalmLandmarks(c.palmLandmarks,f):c,g=b8(m,h,[this.inputSize,this.inputSize]),A=fe(g,255);ae(g),ae(h);let[x,y]=this.handPoseModel.execute(A);E8=ce(),ae(A);let b=(await x.data())[0];if(ae(x),b>=n.hand.minConfidence/4){let w=G(y,[-1,3]),k=await w.array();ae(y),ae(w);let C=this.transformRawCoords(k,m,u,f),E=this.getBoxForHandLandmarks(C);this.storedBoxes[l]={...E,confidence:b};let R={landmarks:C,confidence:b,boxConfidence:c.confidence,fingerConfidence:b,box:{topLeft:E.startPoint,bottomRight:E.endPoint}};i.push(R)}else this.storedBoxes[l]=null;ae(y)}else{let u=Ym(Jm(c),T8),d={confidence:c.confidence,boxConfidence:c.confidence,fingerConfidence:0,box:{topLeft:u.startPoint,bottomRight:u.endPoint},landmarks:[]};i.push(d)}}return this.storedBoxes=this.storedBoxes.filter(l=>l!==null),this.detectedHands=i.length,i.length>n.hand.maxDetected&&(i.length=n.hand.maxDetected),i}};var Ze={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>Ze.nameMapping[e],getPoints:e=>Ze.pointsMapping[e]},ls={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>ls.nameMapping[e]},qe={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>qe.nameMapping[e]},Qm=class{constructor(t){de(this,"name");de(this,"curls");de(this,"directions");de(this,"weights");de(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}addCurl(t,n,s){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([n,s])}addDirection(t,n,s){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([n,s])}setWeight(t,n){this.weights[t]=n;let s=this.weights.reduce((r,a)=>r+a,0);this.weightsRelative=this.weights.map(r=>r*5/s)}matchAgainst(t,n){let s=0;for(let r in t){let a=t[r],o=this.curls[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}for(let r in n){let a=n[r],o=this.directions[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}return s/10}};var jo=new Qm("thumbs up");jo.addCurl(Ze.thumb,ls.none,1);jo.addDirection(Ze.thumb,qe.verticalUp,1);jo.addDirection(Ze.thumb,qe.diagonalUpLeft,.25);jo.addDirection(Ze.thumb,qe.diagonalUpRight,.25);for(let e of[Ze.index,Ze.middle,Ze.ring,Ze.pinky])jo.addCurl(e,ls.full,1),jo.addDirection(e,qe.horizontalLeft,1),jo.addDirection(e,qe.horizontalRight,1);var en=new Qm("victory");en.addCurl(Ze.thumb,ls.half,.5);en.addCurl(Ze.thumb,ls.none,.5);en.addDirection(Ze.thumb,qe.verticalUp,1);en.addDirection(Ze.thumb,qe.diagonalUpLeft,1);en.addCurl(Ze.index,ls.none,1);en.addDirection(Ze.index,qe.verticalUp,.75);en.addDirection(Ze.index,qe.diagonalUpLeft,1);en.addCurl(Ze.middle,ls.none,1);en.addDirection(Ze.middle,qe.verticalUp,1);en.addDirection(Ze.middle,qe.diagonalUpLeft,.75);en.addCurl(Ze.ring,ls.full,1);en.addDirection(Ze.ring,qe.verticalUp,.2);en.addDirection(Ze.ring,qe.diagonalUpLeft,1);en.addDirection(Ze.ring,qe.horizontalLeft,.2);en.addCurl(Ze.pinky,ls.full,1);en.addDirection(Ze.pinky,qe.verticalUp,.2);en.addDirection(Ze.pinky,qe.diagonalUpLeft,1);en.addDirection(Ze.pinky,qe.horizontalLeft,.2);en.setWeight(Ze.index,2);en.setWeight(Ze.middle,2);var R8=[jo,en];var Rge=.7,Cl={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function $8(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function D8(e,t){if(!e||!t)return[0,0];let n=$8(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=$8(e[1],e[2],t[1],t[2]);return[n,s]}function _8(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function $ge(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],c=e[2]-t[2],u=e[2]-n[2],d=t[2]-n[2],p=Math.sqrt(s*s+o*o+c*c),h=Math.sqrt(r*r+i*i+u*u),f=Math.sqrt(a*a+l*l+d*d),m=(f*f+p*p-h*h)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let A;return g>Cl.NO_CURL_START_LIMIT?A=ls.none:g>Cl.HALF_CURL_START_LIMIT?A=ls.half:A=ls.full,A}function P8(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=qe.horizontalLeft:r=qe.horizontalRight:s===Math.abs(t)?t>0?r=qe.horizontalLeft:r=qe.horizontalRight:n>0?r=qe.horizontalLeft:r=qe.horizontalRight,r}function F8(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=qe.verticalDown:r=qe.verticalUp:s===Math.abs(t)?t<0?r=qe.verticalDown:r=qe.verticalUp:n<0?r=qe.verticalDown:r=qe.verticalUp,r}function Dge(e,t,n,s,r,a,o,i){let l,c=F8(e,t,n,s),u=P8(r,a,o,i);return c===qe.verticalUp?u===qe.horizontalLeft?l=qe.diagonalUpLeft:l=qe.diagonalUpRight:u===qe.horizontalLeft?l=qe.diagonalDownLeft:l=qe.diagonalDownRight,l}function _ge(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],c=t[1]-n[1],u=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),d=Math.max(Math.abs(i),Math.abs(l),Math.abs(c)),p=0,h=0,f=0,m=d/(u+1e-5);m>1.5?p+=Cl.DISTANCE_VOTE_POWER:m>.66?h+=Cl.DISTANCE_VOTE_POWER:f+=Cl.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),A=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+c*c),y=Math.max(g,A,x),b=e[0],w=e[1],k=n[0],C=n[1];y===g?(k=n[0],C=n[1]):y===x&&(b=t[0],w=t[1]);let F=D8([b,w],[k,C]),D=_8(F,Cl.TOTAL_ANGLE_VOTE_POWER);p+=D[0],h+=D[1],f+=D[2];for(let T of s){let M=_8(T,Cl.SINGLE_ANGLE_VOTE_POWER);p+=M[0],h+=M[1],f+=M[2]}let P;return p===Math.max(p,h,f)?P=F8(l,i,c,d):f===Math.max(h,f)?P=P8(a,r,o,u):P=Dge(l,i,c,d,a,r,o,u),P}function O8(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of Ze.all){let o=Ze.getPoints(a),i=[],l=[];for(let c of o){let u=e[c[0]],d=e[c[1]],p=D8(u,d),h=p[0],f=p[1];i.push(h),l.push(f)}t.push(i),n.push(l)}for(let a of Ze.all){let o=a===Ze.thumb?1:0,i=Ze.getPoints(a),l=e[i[o][0]],c=e[i[o+1][1]],u=e[i[3][1]],d=$ge(l,c,u),p=_ge(l,c,u,t[a].slice(o));s[a]=d,r[a]=p}return{curls:s,directions:r}}function e0(e){if(!e||e.length===0)return null;let t=O8(e),n={};for(let s of Ze.all)n[Ze.getName(s)]={curl:ls.getName(t.curls[s]),direction:qe.getName(t.directions[s])};return n}function M8(e){let t=[];if(!e||e.length===0)return t;let n=O8(e);for(let s of R8){let r=s.matchAgainst(n.curls,n.directions);r>=Rge&&t.push({name:s.name,confidence:r})}return t}var z8={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},oa,ia,L8;async function ob(e,t){let n=await L8.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let u of Object.keys(z8))a[u]=z8[u].map(d=>n[r].landmarks[d]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let u of o)u[0]<i[0]&&(i[0]=u[0]),u[1]<i[1]&&(i[1]=u[1]),u[0]>i[2]&&(i[2]=u[0]),u[1]>i[3]&&(i[3]=u[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let c=e0(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:c})}return s}async function ib(e){var n,s,r,a,o,i;ye.initial&&(oa=null,ia=null),!oa||!ia?([oa,ia]=await Promise.all([e.hand.enabled?rt(at(e.modelBasePath,((n=e.hand.detector)==null?void 0:n.modelPath)||""),{fromTFHub:(((s=e.hand.detector)==null?void 0:s.modelPath)||"").includes("tfhub.dev")}):null,e.hand.landmarks?rt(at(e.modelBasePath,((r=e.hand.skeleton)==null?void 0:r.modelPath)||""),{fromTFHub:(((a=e.hand.skeleton)==null?void 0:a.modelPath)||"").includes("tfhub.dev")}):null]),e.hand.enabled&&(!oa||!oa.modelUrl?re("load model failed:",((o=e.hand.detector)==null?void 0:o.modelPath)||""):e.debug&&re("load model:",oa.modelUrl),!ia||!ia.modelUrl?re("load model failed:",((i=e.hand.skeleton)==null?void 0:i.modelPath)||""):e.debug&&re("load model:",ia.modelUrl))):(e.debug&&re("cached model:",oa.modelUrl),e.debug&&re("cached model:",ia.modelUrl));let t=new rb(oa);return L8=new ab(t,ia),[oa,ia]}function Tl(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function B8(e,t=[1,1]){let n=[e.map(c=>c[0]),e.map(c=>c[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function t0(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}function lb(e){return[Math.max(0,e[1]),Math.max(0,e[0]),Math.min(1,e[3]+e[1]),Math.min(1,e[2]+e[0])]}var Ct=[null,null],Pge=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],qo=[[0,0],[0,0]],Fge=["hand","fist","pinch","point","face","tip","pinchtip"],W8=4,V8=1.7,Oge=512,Mge=1.4,n0=Number.MAX_SAFE_INTEGER,ub=0,la=[0,0],qt={boxes:[],hands:[]},U8={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function G8(e){var t,n;if(ye.initial&&(Ct[0]=null),Ct[0])e.debug&&re("cached model:",Ct[0].modelUrl);else{dc(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Ct[0]=await rt(at(e.modelBasePath,((t=e.hand.detector)==null?void 0:t.modelPath)||""));let s=Object.values(Ct[0].modelSignature.inputs);qo[0][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,qo[0][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Ct[0]||!Ct[0].modelUrl?re("load model failed:",(n=e.hand.detector)==null?void 0:n.modelPath):e.debug&&re("load model:",Ct[0].modelUrl)}return Ct[0]}async function H8(e){var t,n;if(ye.initial&&(Ct[1]=null),Ct[1])e.debug&&re("cached model:",Ct[1].modelUrl);else{Ct[1]=await rt(at(e.modelBasePath,((t=e.hand.skeleton)==null?void 0:t.modelPath)||""));let s=Object.values(Ct[1].modelSignature.inputs);qo[1][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,qo[1][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Ct[1]||!Ct[1].modelUrl?re("load model failed:",(n=e.hand.skeleton)==null?void 0:n.modelPath):e.debug&&re("load model:",Ct[1].modelUrl)}return Ct[1]}async function zge(e,t){let n=[];if(!e||!Ct[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,Oge),o=Math.round(a*r/8)*8;s.resize=$e.resizeBilinear(e,[a,o]),s.cast=pe(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await Ct[0].executeAsync(s.cast,Pge),s.boxes=ct(s.rawBoxes,[0,2]),s.scores=ct(s.rawScores,[0]);let i=ss(s.scores,1);ae(i[W8]),i.splice(W8,1),s.filtered=_n(i,1),ae(i),s.max=ns(s.filtered,1),s.argmax=Hs(s.filtered,1);let l=0;s.nms=await $e.nonMaxSuppressionAsync(s.boxes,s.max,t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);let c=await s.nms.data(),u=await s.max.data(),d=await s.argmax.data();for(let p of Array.from(c)){let h=_e(s.boxes,p,1),f=await h.data();ae(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=t0(m,Mge),A=lb(g),x=[Math.trunc(m[0]*la[0]),Math.trunc(m[1]*la[1]),Math.trunc(m[2]*la[0]),Math.trunc(m[3]*la[1])],y=u[p],b=Fge[d[p]],w={id:l++,score:y,box:x,boxRaw:g,boxCrop:A,label:b};n.push(w)}return Object.keys(s).forEach(p=>ae(s[p])),n.sort((p,h)=>h.score-p.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function cb(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Ct[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={};r.crop=$e.cropAndResize(e,[t.boxCrop],[0],[qo[1][0],qo[1][1]],"bilinear"),r.cast=pe(r.crop,"float32"),r.div=fe(r.cast,255),[r.score,r.keypoints]=Ct[1].execute(r.div,["Identity_1","Identity"]);let a=(await r.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(a))))/100;if(o>=(n.hand.minConfidence||0)){s.fingerScore=o,r.reshaped=G(r.keypoints,[-1,3]);let c=(await r.reshaped.array()).map(u=>[u[0]/qo[1][1],u[1]/qo[1][0],u[2]||0]).map(u=>[u[0]*t.boxRaw[2],u[1]*t.boxRaw[3],u[2]||0]);s.keypoints=c.map(u=>[la[0]*(u[0]+t.boxRaw[0]),la[1]*(u[1]+t.boxRaw[1]),u[2]||0]),s.landmarks=e0(s.keypoints);for(let u of Object.keys(U8))s.annotations[u]=U8[u].map(d=>s.landmarks&&s.keypoints[d]?s.keypoints[d]:null)}Object.keys(r).forEach(i=>ae(r[i]))}return s}async function db(e,t){var r,a;if(!Ct[0]||!Ct[1]||!((r=Ct[0])==null?void 0:r.inputs[0].shape)||!((a=Ct[1])==null?void 0:a.inputs[0].shape))return[];la=[e.shape[2]||0,e.shape[1]||0],n0++;let n=(t.hand.skipTime||0)>ce()-ub,s=n0<(t.hand.skipFrames||0);return t.skipAllowed&&n&&s?qt.hands:new Promise(async o=>{let i=3*(t.hand.skipTime||0)>ce()-ub,l=n0<3*(t.hand.skipFrames||0);t.skipAllowed&&qt.hands.length===t.hand.maxDetected?qt.hands=await Promise.all(qt.boxes.map(u=>cb(e,u,t))):t.skipAllowed&&i&&l&&qt.hands.length>0?qt.hands=await Promise.all(qt.boxes.map(u=>cb(e,u,t))):(qt.boxes=await zge(e,t),ub=ce(),qt.hands=await Promise.all(qt.boxes.map(u=>cb(e,u,t))),n0=0);let c=[...qt.boxes];if(qt.boxes.length=0,t.cacheSensitivity>0)for(let u=0;u<qt.hands.length;u++){let d=B8(qt.hands[u].keypoints,la);if(d.box[2]/(e.shape[2]||1)>.05&&d.box[3]/(e.shape[1]||1)>.05&&qt.hands[u].fingerScore&&qt.hands[u].fingerScore>(t.hand.minConfidence||0)){let p=t0(d.box,V8),h=t0(d.boxRaw,V8),f=lb(h);qt.boxes.push({...c[u],box:p,boxRaw:h,boxCrop:f})}}for(let u=0;u<qt.hands.length;u++){let d=Tl(qt.hands[u].keypoints,la);qt.hands[u].box=d.box,qt.hands[u].boxRaw=d.boxRaw}o(qt.hands)})}var mb={};Rc(mb,{connected:()=>r0,horizontal:()=>pb,kpt:()=>s0,relative:()=>fb,vertical:()=>hb});var s0=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],pb=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],hb=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],fb=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],r0={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var j8=.005,bs={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function gb(e){for(let t of pb){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of hb){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of fb){let s=e.keypoints.findIndex(c=>c&&c.part===t[0]),r=e.keypoints.findIndex(c=>c&&c.part===t[1]),a=e.keypoints.findIndex(c=>c&&c.part===n[0]),o=e.keypoints.findIndex(c=>c&&c.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let c=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=c}}}function q8(e){for(let t=0;t<e.length;t++)if(e[t]&&bs.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-bs.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-bs.keypoints[t].positionRaw[1])];n[0]<j8&&n[1]<j8?e[t]=bs.keypoints[t]:bs.keypoints[t]=e[t]}else bs.keypoints[t]=e[t];return e}function X8(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;bs.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=qs(e,bs.padding),n.resize=$e.resizeBilinear(n.pad,[t,t]);let s=pe(n.resize,"int32");return Object.keys(n).forEach(r=>ae(n[r])),s}function K8(e,t){e.keypoints=e.keypoints.filter(s=>s&&s.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+bs.padding[2][0]+bs.padding[2][1])/t[0]-bs.padding[2][0],s.position[1]*(t[1]+bs.padding[1][0]+bs.padding[1][1])/t[1]-bs.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=Tl(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Pn,a0=0,Ab=Number.MAX_SAFE_INTEGER,Nl={boxes:[],bodies:[],last:0};async function Z8(e){return ye.initial&&(Pn=null),Pn?e.debug&&re("cached model:",Pn.modelUrl):(dc(["size"],e),Pn=await rt(at(e.modelBasePath,e.body.modelPath||"")),!Pn||!Pn.modelUrl?re("load model failed:",e.body.modelPath):e.debug&&re("load model:",Pn.modelUrl)),a0=Pn.inputs[0].shape?Pn.inputs[0].shape[2]:0,a0===-1&&(a0=256),Pn}async function Lge(e,t,n,s){let r=e[0][0],a=[],o=0;for(let d=0;d<r.length;d++)if(o=r[d][2],o>t.body.minConfidence){let p=[(s[3]-s[1])*r[d][1]+s[1],(s[2]-s[0])*r[d][0]+s[0]];a.push({score:Math.round(100*o)/100,part:s0[d],positionRaw:p,position:[Math.round((n.shape[2]||0)*p[0]),Math.round((n.shape[1]||0)*p[1])]})}o=a.reduce((d,p)=>p.score>d?p.score:d,0);let i=[],l=Tl(a.map(d=>d.position),[n.shape[2],n.shape[1]]),c={};for(let[d,p]of Object.entries(r0)){let h=[];for(let f=0;f<p.length-1;f++){let m=a.find(A=>A.part===p[f]),g=a.find(A=>A.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}c[d]=h}let u={id:0,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:a,annotations:c};return gb(u),i.push(u),i}async function Bge(e,t,n,s){let r=[];for(let a=0;a<e[0].length;a++){let o=e[0][a],i=Math.round(100*o[51+4])/100;if(i>t.body.minConfidence){let l=[];for(let p=0;p<17;p++){let h=o[3*p+2];if(h>t.body.minConfidence){let f=[(s[3]-s[1])*o[3*p+1]+s[1],(s[2]-s[0])*o[3*p+0]+s[0]];l.push({part:s0[p],score:Math.round(100*h)/100,positionRaw:f,position:[Math.round((n.shape[2]||0)*f[0]),Math.round((n.shape[1]||0)*f[1])]})}}let c=Tl(l.map(p=>p.position),[n.shape[2],n.shape[1]]),u={};for(let[p,h]of Object.entries(r0)){let f=[];for(let m=0;m<h.length-1;m++){let g=l.find(x=>x.part===h[m]),A=l.find(x=>x.part===h[m+1]);g&&A&&g.score>(t.body.minConfidence||0)&&A.score>(t.body.minConfidence||0)&&f.push([g.position,A.position])}u[p]=f}let d={id:a,score:i,box:c.box,boxRaw:c.boxRaw,keypoints:[...l],annotations:u};gb(d),r.push(d)}}return r.sort((a,o)=>o.score-a.score),r.length>t.body.maxDetected&&(r.length=t.body.maxDetected),r}async function yb(e,t){if(!Pn||!(Pn==null?void 0:Pn.inputs[0].shape))return[];t.skipAllowed||(Nl.boxes.length=0),Ab++;let n=(t.body.skipTime||0)>ce()-Nl.last,s=Ab<(t.body.skipFrames||0);return t.skipAllowed&&n&&s?Nl.bodies:new Promise(async r=>{let a={};Ab=0,a.input=X8(e,a0),a.res=Pn==null?void 0:Pn.execute(a.input),Nl.last=ce();let o=await a.res.array();Nl.bodies=a.res.shape[2]===17?await Lge(o,t,e,[0,0,1,1]):await Bge(o,t,e,[0,0,1,1]);for(let i of Nl.bodies)K8(i,[e.shape[2]||1,e.shape[1]||1]),q8(i.keypoints);Object.keys(a).forEach(i=>ae(a[i])),r(Nl.bodies)})}var vs,o0=[],Y8=0,xb=Number.MAX_SAFE_INTEGER,i0=2.5;async function J8(e){if(!vs||ye.initial){vs=await rt(at(e.modelBasePath,e.object.modelPath||""));let t=Object.values(vs.modelSignature.inputs);if(vs.inputSize=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):null,!vs.inputSize)throw new Error(`cannot determine model inputSize: ${e.object.modelPath}`);!vs||!vs.modelUrl?re("load model failed:",e.object.modelPath):e.debug&&re("load model:",vs.modelUrl)}else e.debug&&re("cached model:",vs.modelUrl);return vs}async function Wge(e,t,n,s){let r=0,a=[];for(let c of[1,2,4])q(async()=>{var g,A;let u=c*13,d=(g=e.find(x=>x.shape[1]===u**2&&x.shape[2]===cc.length))==null?void 0:g.squeeze(),p=(A=e.find(x=>x.shape[1]===u**2&&x.shape[2]<cc.length))==null?void 0:A.squeeze(),f=await p.reshape([-1,4,p.shape[1]/4]).argMax(2).array(),m=await d.array();for(let x=0;x<d.shape[0];x++)for(let y=0;y<d.shape[1];y++){let b=m[x][y];if(b>s.object.minConfidence&&y!==61){let w=(.5+Math.trunc(x%u))/u,k=(.5+Math.trunc(x/u))/u,C=f[x].map(U=>U*(u/c/t)),[E,R]=[w-i0/c*C[0],k-i0/c*C[1]],[F,D]=[w+i0/c*C[2]-E,k+i0/c*C[3]-R],P=[E,R,F,D];P=P.map(U=>Math.max(0,Math.min(U,1)));let T=[P[0]*n[0],P[1]*n[1],P[2]*n[0],P[3]*n[1]],M={id:r++,score:Math.round(100*b)/100,class:y+1,label:cc[y].label,box:T.map(U=>Math.trunc(U)),boxRaw:P};a.push(M)}}});e.forEach(c=>ae(c));let o=a.map(c=>[c.boxRaw[1],c.boxRaw[0],c.boxRaw[3],c.boxRaw[2]]),i=a.map(c=>c.score),l=[];if(o&&o.length>0){let c=await $e.nonMaxSuppressionAsync(o,i,s.object.maxDetected,s.object.iouThreshold,s.object.minConfidence);l=await c.data(),ae(c)}return a=a.filter((c,u)=>l.includes(u)).sort((c,u)=>u.score-c.score),a}async function bb(e,t){let n=(t.object.skipTime||0)>ce()-Y8,s=xb<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&o0.length>0?(xb++,o0):(xb=0,!ye.kernels.includes("mod")||!ye.kernels.includes("sparsetodense")?o0:new Promise(async r=>{let a=[e.shape[2],e.shape[1]],o=$e.resizeBilinear(e,[vs.inputSize,vs.inputSize],!1),i=fe(o,255),l=i.transpose([0,3,1,2]);ae(i),ae(o);let c;t.object.enabled&&(c=vs.execute(l)),Y8=ce(),ae(l);let u=await Wge(c,vs.inputSize,a,t);o0=u,r(u)}))}var bp=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Vge=bp.length,vp=bp.reduce((e,t,n)=>(e[t]=n,e),{}),Uge=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],wAe=Uge.map(([e,t])=>[vp[e],vp[t]]),Q8=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function eT(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function tT(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(c,u)=>({id:u,score:c.score,boxRaw:[c.box[0]/r,c.box[1]/s,c.box[2]/r,c.box[3]/s],box:[Math.trunc(c.box[0]*o),Math.trunc(c.box[1]*a),Math.trunc(c.box[2]*o),Math.trunc(c.box[3]*a)],keypoints:c.keypoints.map(({score:d,part:p,position:h})=>({score:d,part:p,position:[Math.trunc(h.x*o),Math.trunc(h.y*a)],positionRaw:[h.x/s,h.y/s]}))});return e.map((c,u)=>i(c,u))}var vb=class{constructor(t,n){de(this,"priorityQueue");de(this,"numberOfElements");de(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=n}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let n=2*t;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(t,n))break;this.exchange(t,n),t=n}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,n){return this.getValueAt(t)<this.getValueAt(n)}exchange(t,n){let s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[n],this.priorityQueue[n]=s}};function wb(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+Vge)}}function kb(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=wb(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function Sb(e,t,n){return e<t?t:e>n?n:e}function nT(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function Ib(e,t){return{x:e.x+t.x,y:e.y+t.y}}var ws,Gge=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],l0=1,mc=16,Hge=50**2;function sT(e,t,n,s,r,a,o=2){let i=A=>({y:a.get(A.y,A.x,e),x:a.get(A.y,A.x,a.shape[2]/2+e)}),l=(A,x,y)=>({y:Sb(Math.round(A.y/mc),0,x-1),x:Sb(Math.round(A.x/mc),0,y-1)}),[c,u]=s.shape,d=l(t.position,c,u),p=i(d),f=Ib(t.position,p);for(let A=0;A<o;A++){let x=l(f,c,u),y=wb(x.y,x.x,n,r);f=Ib({x:x.x*mc,y:x.y*mc},{x:y.x,y:y.y})}let m=l(f,c,u),g=s.get(m.y,m.x,n);return{position:f,part:bp[n],score:g}}function jge(e,t,n,s,r){let a=Q8.map(([p,h])=>[vp[p],vp[h]]),o=a.map(([,p])=>p),i=a.map(([p])=>p),l=t.shape[2],c=o.length,u=new Array(l),d=kb(e.part,mc,n);u[e.part.id]={score:e.score,part:bp[e.part.id],position:d};for(let p=c-1;p>=0;--p){let h=o[p],f=i[p];u[h]&&!u[f]&&(u[f]=sT(p,u[h],f,t,n,r))}for(let p=0;p<c;++p){let h=i[p],f=o[p];u[h]&&!u[f]&&(u[f]=sT(p,u[h],f,t,n,s))}return u}function qge(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-l0,0),c=Math.min(n+l0+1,a);for(let u=l;u<c;++u){let d=Math.max(s-l0,0),p=Math.min(s+l0+1,o);for(let h=d;h<p;++h)if(r.get(u,h,e)>t){i=!1;break}if(!i)break}return i}function Xge(e,t){let[n,s,r]=t.shape,a=new vb(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let c=t.get(o,i,l);c<e||qge(l,c,o,i,t)&&a.enqueue({score:c,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function rT(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var o;let a=(o=r[s])==null?void 0:o.position;return a?nT(n,t,a.y,a.x)<=Hge:!1})}function Kge(e,t){return t.reduce((s,{position:r,score:a},o)=>(rT(e,r,o)||(s+=a),s),0)/t.length}function Zge(e,t,n,s,r,a){let o=[],i=Xge(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),c=kb(l.part,mc,e);if(rT(o,c,l.part.id))continue;let u=jge(l,t,e,n,s);u=u.filter(h=>h.score>a);let d=Kge(o,u),p=eT(u);d>a&&o.push({keypoints:u,box:p,score:Math.round(100*d)/100})}return o}async function Cb(e,t){let n=q(()=>{if(!ws.inputs[0].shape)return[];let o=$e.resizeBilinear(e,[ws.inputs[0].shape[2],ws.inputs[0].shape[1]]),i=xe(fe(pe(o,"float32"),127.5),1),c=ws.execute(i,Gge).map(u=>ct(u,[0]));return c[1]=c[1].sigmoid(),c}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)ae(o);let r=await Zge(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return ws.inputs[0].shape?tT(r,[e.shape[1],e.shape[2]],[ws.inputs[0].shape[2],ws.inputs[0].shape[1]]):[]}async function aT(e){return!ws||ye.initial?(ws=await rt(at(e.modelBasePath,e.body.modelPath||"")),!ws||!ws.modelUrl?re("load model failed:",e.body.modelPath):e.debug&&re("load model:",ws.modelUrl)):e.debug&&re("cached model:",ws.modelUrl),ws}var zs,Tb=!1;async function Nb(e){return!zs||ye.initial?(zs=await rt(at(e.modelBasePath,e.segmentation.modelPath||"")),!zs||!zs.modelUrl?re("load model failed:",e.segmentation.modelPath):e.debug&&re("load model:",zs.modelUrl)):e.debug&&re("cached model:",zs.modelUrl),zs}async function oT(e,t,n){var m,g;if(Tb)return{data:[],canvas:null,alpha:null};Tb=!0,zs||await Nb(n);let s=uc(e,n),r=((m=s.canvas)==null?void 0:m.width)||0,a=((g=s.canvas)==null?void 0:g.height)||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};let o={};o.resize=$e.resizeBilinear(s.tensor,[zs.inputs[0].shape?zs.inputs[0].shape[1]:0,zs.inputs[0].shape?zs.inputs[0].shape[2]:0],!1),ae(s.tensor),o.norm=fe(o.resize,255),o.res=zs.execute(o.norm),o.squeeze=ct(o.res,0),o.squeeze.shape[2]===2?(o.softmax=Ru(o.squeeze),[o.bg,o.fg]=ss(o.softmax,2),o.expand=mn(o.fg,2),o.pad=mn(o.expand,0),o.crop=$e.cropAndResize(o.pad,[[0,0,.5,.5]],[0],[r,a]),o.data=ct(o.crop,0)):o.data=$e.resizeBilinear(o.squeeze,[a,r]);let i=Array.from(await o.data.data());if(ye.node&&!ye.Canvas&&typeof ImageData=="undefined")return n.debug&&re("canvas support missing"),Object.keys(o).forEach(A=>ae(o[A])),{data:i,canvas:null,alpha:null};let l=Xn(r,a);await Gs.toPixels(o.data,l);let c=l.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(c.filter=`blur(${n.segmentation.blur}px)`);let u=c.getImageData(0,0,r,a),d=Xn(r,a),p=d.getContext("2d");s.canvas&&p.drawImage(s.canvas,0,0),p.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(p.filter=`blur(${n.segmentation.blur}px)`),p.drawImage(l,0,0),p.globalCompositeOperation="source-over",p.filter="none";let h=p.getImageData(0,0,r,a);for(let A=0;A<r*a;A++)h.data[4*A+3]=u.data[4*A+0];p.putImageData(h,0,0);let f=null;if(t&&d){f=Xn(r,a);let A=uc(t,n);ae(A.tensor);let x=f.getContext("2d");x.drawImage(A.canvas,0,0,f.width,f.height),x.drawImage(d,0,0)}return Object.keys(o).forEach(A=>ae(o[A])),Tb=!1,{data:i,canvas:f||d,alpha:l}}var Eb=class{constructor(){de(this,"age",null);de(this,"agegenderrace",null);de(this,"blazeposedetect",null);de(this,"blazepose",null);de(this,"centernet",null);de(this,"efficientpose",null);de(this,"embedding",null);de(this,"emotion",null);de(this,"facedetect",null);de(this,"faceiris",null);de(this,"facemesh",null);de(this,"faceres",null);de(this,"gender",null);de(this,"handpose",null);de(this,"handskeleton",null);de(this,"handtrack",null);de(this,"movenet",null);de(this,"nanodet",null);de(this,"posenet",null);de(this,"segmentation",null);de(this,"antispoof",null)}};function Rb(e){for(let t of Object.keys(e.models))e.models[t]=null}async function iT(e){var t,n,s,r,a,o,i,l,c,u,d,p,h,f,m,g,A,x,y,b,w,k,C,E,R,F,D,P,T,M,U;ye.initial&&Rb(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await ib(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await ib(e.config))),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=q6(e.config)),e.config.face.enabled&&((a=e.config.face.mesh)==null?void 0:a.enabled)&&!e.models.facemesh&&(e.models.facemesh=f8(e.config)),e.config.face.enabled&&((o=e.config.face.iris)==null?void 0:o.enabled)&&!e.models.faceiris&&(e.models.faceiris=o8(e.config)),e.config.face.enabled&&((i=e.config.face.antispoof)==null?void 0:i.enabled)&&!e.models.antispoof&&(e.models.antispoof=O6(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((c=(l=e.config.hand.detector)==null?void 0:l.modelPath)==null?void 0:c.includes("handtrack"))&&(e.models.handtrack=G8(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((d=(u=e.config.hand.detector)==null?void 0:u.modelPath)==null?void 0:d.includes("handtrack"))&&(e.models.handskeleton=H8(e.config)),e.config.body.enabled&&!e.models.posenet&&((h=(p=e.config.body)==null?void 0:p.modelPath)==null?void 0:h.includes("posenet"))&&(e.models.posenet=aT(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((m=(f=e.config.body)==null?void 0:f.modelPath)==null?void 0:m.includes("efficientpose"))&&(e.models.efficientpose=Hx(e.config)),e.config.body.enabled&&!e.models.blazepose&&((A=(g=e.config.body)==null?void 0:g.modelPath)==null?void 0:A.includes("blazepose"))&&(e.models.blazepose=J6(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&((x=e.config.body.detector)==null?void 0:x.modelPath)&&((b=(y=e.config.body)==null?void 0:y.modelPath)==null?void 0:b.includes("blazepose"))&&(e.models.blazeposedetect=Y6(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((k=(w=e.config.body)==null?void 0:w.modelPath)==null?void 0:k.includes("efficientpose"))&&(e.models.efficientpose=Hx(e.config)),e.config.body.enabled&&!e.models.movenet&&((E=(C=e.config.body)==null?void 0:C.modelPath)==null?void 0:E.includes("movenet"))&&(e.models.movenet=Z8(e.config)),e.config.object.enabled&&!e.models.nanodet&&((F=(R=e.config.object)==null?void 0:R.modelPath)==null?void 0:F.includes("nanodet"))&&(e.models.nanodet=J8(e.config)),e.config.object.enabled&&!e.models.centernet&&((P=(D=e.config.object)==null?void 0:D.modelPath)==null?void 0:P.includes("centernet"))&&(e.models.centernet=t8(e.config)),e.config.face.enabled&&((T=e.config.face.emotion)==null?void 0:T.enabled)&&!e.models.emotion&&(e.models.emotion=a8(e.config)),e.config.face.enabled&&((M=e.config.face.description)==null?void 0:M.enabled)&&!e.models.faceres&&(e.models.faceres=x8(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=Nb(e.config)),e.config.face.enabled&&((U=e.config.face.agegenderrace)==null?void 0:U.enabled)&&!e.models.agegenderrace&&(e.models.agegenderrace=_6(e.config));for await(let j of Object.keys(e.models))e.models[j]&&typeof e.models[j]!="undefined"&&(e.models[j]=await e.models[j])}async function lT(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let n of Object.keys(e.models))if(e.models[n]){let s=[];Array.isArray(e.models[n])?s=e.models[n].filter(r=>r!==null).map(r=>r&&r.executor?r:r.model):s=[e.models[n]];for(let r of s){if(!r){e.config.debug&&re("model marked as loaded but not defined:",n);continue}let a=[],o=r==null?void 0:r.executor;if(o&&o.graph.nodes)for(let l of Object.values(o.graph.nodes)){let c=l.op.toLowerCase();a.includes(c)||a.push(c)}else!o&&e.config.debug&&re("model signature not determined:",n);let i=[];for(let l of a)!t.includes(l)&&!e.env.kernels.includes(l)&&!e.env.kernels.includes(l.replace("_",""))&&!e.env.kernels.includes(l.replace("native",""))&&!e.env.kernels.includes(l.replace("v2",""))&&i.push(l);i.length>0&&e.config.debug&&re("model validation:",n,i)}}}var zt={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function Yge(){let e=zt.gl;!e||(zt.extensions=e.getSupportedExtensions())}async function uT(e){var t;if(e.config.backend==="humangl"&&(zt.name in ts().registry&&(!zt.gl||!zt.gl.getParameter(zt.gl.VERSION))&&(re("error: humangl backend invalid context"),Rb(e)),!C2(zt.name))){try{zt.canvas=await Xn(100,100)}catch(s){re("error: cannot create canvas:",s);return}try{zt.gl=(t=zt.canvas)==null?void 0:t.getContext("webgl2",zt.webGLattr),zt.canvas&&(zt.canvas.addEventListener("webglcontextlost",async s=>{throw re("error: humangl:",s.type),re("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("browser webgl error")}),zt.canvas.addEventListener("webglcontextrestored",s=>{re("error: humangl context restored:",s)}),zt.canvas.addEventListener("webglcontextcreationerror",s=>{re("error: humangl context create:",s)}))}catch(s){re("error: cannot get WebGL context:",s);return}try{hm(2,zt.gl)}catch(s){re("error: cannot set WebGL context:",s);return}try{let s=new wm(zt.gl);Zi(zt.name,()=>new Yd(s),zt.priority)}catch(s){re("error: cannot register WebGL backend:",s);return}try{Hr("webgl").forEach(r=>{let a={...r,backendName:zt.name};jr(a)})}catch(s){re("error: cannot update WebGL backend registration:",s);return}let n=Ir().getGPGPUContext?Ir().getGPGPUContext().gl:null;if(n)re(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);else{re("error: no current gl context:",n,zt.gl);return}try{wr.set("WEBGL_VERSION",2)}catch(s){re("error: cannot set WebGL backend flags:",s);return}Yge(),re("backend registered:",zt.name)}}async function u0(e,t=!1){if(e.state="backend",t||ye.initial||e.config.backend&&e.config.backend.length>0&&ir()!==e.config.backend){let n=ce();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&re("running inside web worker"),ye.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&re("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),ye.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&re(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),ye.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")re("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let r=await navigator.gpu.requestAdapter();e.config.debug&&re("enumerated webgpu adapter:",r)}e.config.backend==="humangl"&&await uT(e);let s=Object.keys(ts().registryFactory);if(e.config.debug&&re("available backends:",s),s.includes(e.config.backend)||(re(`error: backend ${e.config.backend} not found in registry`),e.config.backend=ye.node?"tensorflow":"webgl",e.config.debug&&re(`override: setting backend ${e.config.backend}`)),e.config.debug&&re("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&re("wasm path:",e.config.wasmPath),typeof(wl==null?void 0:wl.setWasmPaths)!="undefined")await b6(e.config.wasmPath);else throw new Error("wasm backend is not loaded");let r=await K().getAsync("WASM_HAS_SIMD_SUPPORT"),a=await K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&re(`wasm execution: ${r?"SIMD":"no SIMD"} ${a?"multithreaded":"singlethreaded"}`),e.config.debug&&!r&&re("warning: wasm simd support is not enabled")}try{await g3(e.config.backend),await Vh()}catch(r){return re("error: cannot set backend:",e.config.backend,r),!1}}if(ir()==="humangl"&&(wr.set("CHECK_COMPUTATION_FOR_ERRORS",!1),wr.set("WEBGL_CPU_FORWARD",!0),wr.set("WEBGL_USE_SHAPES_UNIFORMS",!0),wr.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(re("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),wr.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Ir().getGPGPUContext)){let s=await Ir().getGPGPUContext().gl;e.config.debug&&re(`gl version:${s.getParameter(s.VERSION)} renderer:${s.getParameter(s.RENDERER)}`)}ir()==="webgpu",m3(),await Vh(),e.performance.initBackend=Math.trunc(ce()-n),e.config.backend=ir(),ye.updateBackend()}return!0}function dc(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&re("kernelFunc",n,t.backend)}};jr(s)}ye.kernels=Hr(ir()).map(n=>n.kernelName.toLowerCase())}var ua={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},$b=0,El=e=>{if(e&&e.getContext)return e.getContext("2d");throw new Error("invalid canvas")},gc=e=>Math.round(e*180/Math.PI);function Db(e,t,n,s=0,r){e.fillStyle=r.useDepth&&s?`rgba(${127.5+2*s}, ${127.5-2*s}, 255, 0.3)`:r.color,e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function wp(e,t,n,s,r,a){if(e.beginPath(),a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.lineWidth=a.lineWidth,e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function cT(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t){let r=s[2]||0;e.strokeStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.lineTo(s[0],Math.round(s[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function Jge(e,t,n){if(!(t.length<2)){if(!n.useCurves||t.length<=2){cT(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function dT(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}async function _b(e,t,n){let s=Rn(ua,n);if(!(!t||!e)&&s.drawGestures){let r=El(e);r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let c=i[1]>0?`#${i[1]}`:"",u=`${i[0]} ${c}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(u,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(u,6,0+a*s.lineHeight),a+=1}}}}async function Pb(e,t,n){var a,o,i,l,c;let s=Rn(ua,n);if(!t||!e)return;let r=El(e);for(let u of t){if(r.font=s.font,r.strokeStyle=s.color,r.fillStyle=s.color,s.drawBoxes&&wp(r,u.box[0],u.box[1],u.box[2],u.box[3],s),s.drawLabels){let d=[];if(d.push(`face: ${Math.trunc(100*u.score)}%`),u.genderScore&&d.push(`${u.gender||""} ${Math.trunc(100*u.genderScore)}%`),u.age&&d.push(`age: ${u.age||""}`),u.iris&&d.push(`distance: ${u.iris}`),u.real&&d.push(`real: ${Math.trunc(100*u.real)}%`),u.emotion&&u.emotion.length>0){let p=u.emotion.map(h=>`${Math.trunc(100*h.score)}% ${h.emotion}`);p.length>3&&(p.length=3),d.push(p.join(" "))}u.rotation&&u.rotation.angle&&u.rotation.gaze&&(u.rotation.angle.roll&&d.push(`roll: ${gc(u.rotation.angle.roll)}\xB0 yaw:${gc(u.rotation.angle.yaw)}\xB0 pitch:${gc(u.rotation.angle.pitch)}\xB0`),u.rotation.gaze.bearing&&d.push(`gaze: ${gc(u.rotation.gaze.bearing)}\xB0`)),d.length===0&&d.push("face"),r.fillStyle=s.color;for(let p=d.length-1;p>=0;p--){let h=Math.max(u.box[0],0),f=p*s.lineHeight+u.box[1];s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(d[p],h+5,f+16)),r.fillStyle=s.labelColor,r.fillText(d[p],h+4,f+15)}}if(r.lineWidth=1,u.mesh&&u.mesh.length>0){if(s.drawPoints)for(let d of u.mesh)Db(r,d[0],d[1],d[2],s);if(s.drawPolygons){if(r.lineWidth=1,u.mesh.length>450)for(let d=0;d<kl.length/3;d++){let p=[kl[d*3+0],kl[d*3+1],kl[d*3+2]].map(h=>u.mesh[h]);cT(r,p,s)}if(u.annotations&&u.annotations.leftEyeIris&&u.annotations.leftEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.leftEyeIris[3][0]-u.annotations.leftEyeIris[1][0])/2,p=Math.abs(u.annotations.leftEyeIris[4][1]-u.annotations.leftEyeIris[2][1])/2;r.ellipse(u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(u.annotations&&u.annotations.rightEyeIris&&u.annotations.rightEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.rightEyeIris[3][0]-u.annotations.rightEyeIris[1][0])/2,p=Math.abs(u.annotations.rightEyeIris[4][1]-u.annotations.rightEyeIris[2][1])/2;r.ellipse(u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(s.drawGaze&&((a=u.rotation)==null?void 0:a.angle)){r.strokeStyle="pink";let d=u.box[0]+u.box[2]/2-u.box[3]*gc(u.rotation.angle.yaw)/90,p=u.box[1]+u.box[3]/2+u.box[2]*gc(u.rotation.angle.pitch)/90,h=new Path2D(`
            M ${u.box[0]+u.box[2]/2} ${u.box[1]}
            C
              ${d} ${u.box[1]},
              ${d} ${u.box[1]+u.box[3]},
              ${u.box[0]+u.box[2]/2} ${u.box[1]+u.box[3]}
          `),f=new Path2D(`
            M ${u.box[0]} ${u.box[1]+u.box[3]/2}
            C 
              ${u.box[0]} ${p},
              ${u.box[0]+u.box[2]} ${p},
              ${u.box[0]+u.box[2]} ${u.box[1]+u.box[3]/2}
          `);r.stroke(f),r.stroke(h)}if(s.drawGaze&&((i=(o=u.rotation)==null?void 0:o.gaze)==null?void 0:i.strength)&&((c=(l=u.rotation)==null?void 0:l.gaze)==null?void 0:c.bearing)&&u.annotations.leftEyeIris&&u.annotations.rightEyeIris&&u.annotations.leftEyeIris[0]&&u.annotations.rightEyeIris[0]){r.strokeStyle="pink",r.fillStyle="pink";let d=[u.annotations.leftEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.leftEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];dT(r,[u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1]],[d[0],d[1]],4);let p=[u.annotations.rightEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.rightEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];dT(r,[u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1]],[p[0],p[1]],4)}}}}}async function Fb(e,t,n){var a;let s=Rn(ua,n);if(!t||!e)return;let r=El(e);r.lineJoin="round";for(let o=0;o<t.length;o++){if(r.strokeStyle=s.color,r.fillStyle=s.color,r.lineWidth=s.lineWidth,r.font=s.font,s.drawBoxes&&t[o].box&&((a=t[o].box)==null?void 0:a.length)===4&&(wp(r,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+3,1+t[o].box[1]+s.lineHeight,t[o].box[2])),r.fillStyle=s.labelColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+2,0+t[o].box[1]+s.lineHeight,t[o].box[2]))),s.drawPoints&&t[o].keypoints)for(let i=0;i<t[o].keypoints.length;i++)r.fillStyle=s.useDepth&&t[o].keypoints[i].position[2]?`rgba(${127.5+2*(t[o].keypoints[i].position[2]||0)}, ${127.5-2*(t[o].keypoints[i].position[2]||0)}, 255, 0.5)`:s.color,Db(r,t[o].keypoints[i].position[0],t[o].keypoints[i].position[1],0,s);if(s.drawLabels&&t[o].keypoints){r.font=s.font;for(let i of t[o].keypoints)r.fillStyle=s.useDepth&&i.position[2]?`rgba(${127.5+2*i.position[2]}, ${127.5-2*i.position[2]}, 255, 0.5)`:s.color,r.fillText(`${i.part} ${Math.trunc(100*i.score)}%`,i.position[0]+4,i.position[1]+4)}if(s.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let i of Object.values(t[o].annotations))for(let l of i)Jge(r,l,s)}}async function Ob(e,t,n){let s=Rn(ua,n);if(!t||!e)return;let r=El(e);r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,wp(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=s.useDepth?`rgba(${127.5+2*(o[2]||0)}, ${127.5-2*(o[2]||0)}, 255, 0.5)`:s.color,Db(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{!i||i.length===0||!i[0]||(r.fillStyle=s.useDepth?`rgba(${127.5+2*i[i.length-1][2]}, ${127.5-2*i[i.length-1][2]}, 255, 0.5)`:s.color,r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4))};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++)r.beginPath(),r.strokeStyle=s.useDepth?`rgba(${127.5+l*i[l][2]}, ${127.5-l*i[l][2]}, 255, 0.5)`:s.color,r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}async function Mb(e,t,n){let s=Rn(ua,n);if(!t||!e)return;let r=El(e);r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,wp(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}async function pT(e,t,n){let s=Rn(ua,n);if(!t||!e)return;let r=El(e);r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,wp(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}async function hT(e,t){if(!e||!t)return;El(t).drawImage(e,0,0)}async function fT(e,t,n){if(!t||!t.performance||!t||!e)return null;let s=ce(),r=Rn(ua,n),a=Promise.all([Pb(e,t.face,r),Fb(e,t.body,r),Ob(e,t.hand,r),Mb(e,t.object,r),_b(e,t.gesture,r)]);return $b=ye.perfadd?$b+Math.round(ce()-s):Math.round(ce()-s),t.performance.draw=$b,a}var Qge=e=>{let t=(d,p)=>Math.atan2(d[1]-p[1],d[0]-p[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=e.mesh[33][2]>e.mesh[263][2],a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],c=Math.sqrt(l[0]**2+l[1]**2);return c=Math.min(c,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:c}},mT=(e,t)=>{let n=g=>{let A=Math.sqrt(g[0]*g[0]+g[1]*g[1]+g[2]*g[2]);return g[0]/=A,g[1]/=A,g[2]/=A,g},s=(g,A)=>{let x=g[0]-A[0],y=g[1]-A[1],b=g[2]-A[2];return[x,y,b]},r=(g,A)=>{let x=g[1]*A[2]-g[2]*A[1],y=g[2]*A[0]-g[0]*A[2],b=g[0]*A[1]-g[1]*A[0];return[x,y,b]},a=g=>{let[A,x,y,b,w,k,C,E,R]=g,F,D,P;return b<1?b>-1?(P=Math.asin(b),D=Math.atan2(-C,A),F=Math.atan2(-k,w)):(P=-Math.PI/2,D=-Math.atan2(E,R),F=0):(P=Math.PI/2,D=Math.atan2(E,R),F=0),isNaN(F)&&(F=0),isNaN(D)&&(D=0),isNaN(P)&&(P=0),{pitch:2*-F,yaw:2*-D,roll:2*-P}},o=g=>{let A=(y,b,w,k)=>Math.atan2(k-b,w-y);return{pitch:A(g[10][1],g[10][2],g[152][1],g[152][2]),yaw:A(g[33][0],g[33][2],g[263][0],g[263][2]),roll:A(g[33][0],g[33][1],g[263][0],g[263][1])}},i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let l=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,c=[i[10],i[152],i[234],i[454]].map(g=>[g[0]*t[0]/l,g[1]*t[1]/l,g[2]]),u=n(s(c[1],c[0])),d=n(s(c[3],c[2])),p=n(r(d,u));d=r(u,p);let h=[d[0],d[1],d[2],u[0],u[1],u[2],p[0],p[1],p[2]],f=a(h),m=i.length===478?Qge(e):{bearing:0,strength:0};return{angle:f,matrix:h,gaze:m}};var zb=async(e,t)=>{var p,h,f,m;let n,s,r,a,o,i,l,c,u=[];e.state="run:face",n=ce();let d=await h8(t,e.config);if(e.performance.face=ye.perfadd?(e.performance.face||0)+Math.trunc(ce()-n):Math.trunc(ce()-n),!t.shape||t.shape.length!==4)return[];if(!d)return[];for(let g=0;g<d.length;g++){if(e.analyze("Get Face"),!d[g].tensor||d[g].tensor.isDisposedInternal){re("Face object is disposed:",d[g].tensor);continue}let A=mT(d[g],[t.shape[2],t.shape[1]]);e.analyze("Start Emotion:"),e.config.async?o=e.config.face.emotion.enabled?Kx(d[g].tensor||Gt([]),e.config,g,d.length):null:(e.state="run:emotion",n=ce(),o=e.config.face.emotion.enabled?await Kx(d[g].tensor||Gt([]),e.config,g,d.length):null,e.performance.emotion=ye.perfadd?(e.performance.emotion||0)+Math.trunc(ce()-n):Math.trunc(ce()-n)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?l=e.config.face.antispoof.enabled?Nx(d[g].tensor||Gt([]),e.config,g,d.length):null:(e.state="run:antispoof",n=ce(),l=e.config.face.antispoof.enabled?await Nx(d[g].tensor||Gt([]),e.config,g,d.length):null,e.performance.antispoof=ye.perfadd?(e.performance.antispoof||0)+Math.trunc(ce()-n):Math.trunc(ce()-n)),e.analyze("End AntiSpoof:"),e.analyze("Start Description:"),e.config.async?c=e.config.face.description.enabled?tb(d[g].tensor||Gt([]),e.config,g,d.length):null:(e.state="run:description",n=ce(),c=e.config.face.description.enabled?await tb(d[g].tensor||Gt([]),e.config,g,d.length):null,e.performance.description=ye.perfadd?(e.performance.description||0)+Math.trunc(ce()-n):Math.trunc(ce()-n)),e.analyze("End Description:"),e.config.async&&([s,a,o,i,c,r,l]=await Promise.all([s,a,o,i,c,r,l])),e.analyze("Finish Face:"),!e.config.face.iris.enabled&&((h=(p=d[g])==null?void 0:p.annotations)==null?void 0:h.leftEyeIris)&&((m=(f=d[g])==null?void 0:f.annotations)==null?void 0:m.rightEyeIris)&&(delete d[g].annotations.leftEyeIris,delete d[g].annotations.rightEyeIris);let x=d[g].annotations&&d[g].annotations.leftEyeIris&&d[g].annotations.leftEyeIris[0]&&d[g].annotations.rightEyeIris&&d[g].annotations.rightEyeIris[0]&&d[g].annotations.leftEyeIris.length>0&&d[g].annotations.rightEyeIris.length>0&&d[g].annotations.leftEyeIris[0]!==null&&d[g].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(d[g].annotations.leftEyeIris[3][0]-d[g].annotations.leftEyeIris[1][0]),Math.abs(d[g].annotations.rightEyeIris[4][1]-d[g].annotations.rightEyeIris[2][1]))/t.shape[2]:0,y=e.config.face.detector.return?ct(d[g].tensor):null;ae(d[g].tensor),d[g].tensor&&delete d[g].tensor,u.push({...d[g],id:g,age:c==null?void 0:c.age,gender:c==null?void 0:c.gender,genderScore:c==null?void 0:c.genderScore,embedding:c==null?void 0:c.descriptor,emotion:o,real:l,iris:x!==0?Math.trunc(500/x/11.7)/100:0,rotation:A,tensor:y}),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),u};var gT=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},AT=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=e[n].mesh[33][2]-e[n].mesh[263][2];Math.abs(s)<10?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let o=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));o>10&&t.push({face:n,gesture:`mouth ${Math.trunc(o)}% open`});let i=e[n].mesh[152][2];Math.abs(i)>10&&t.push({face:n,gesture:`head ${i<0?"up":"down"}`})}return t},yT=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let s=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(s*r),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),c=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(c=!0,t.push({iris:n,gesture:"facing center"}));let d=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],p=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(d>.06||p>.06)&&(c=!1),d>p?d>.05&&t.push({iris:n,gesture:"looking right"}):p>.05&&t.push({iris:n,gesture:"looking left"});let h=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||h<.01||f>.022||h>.022)&&(c=!1),(f<.01||h<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||h>.022)&&t.push({iris:n,gesture:"looking up"}),c&&t.push({iris:n,gesture:"looking center"})}return t},xT=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>o.position[2]<i.position[2]?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=M8(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t};var Pe={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0},Lb=0;function bT(e,t){var o,i,l,c,u,d,p,h,f,m,g,A,x,y,b,w,k,C,E,R,F,D,P,T,M,U,j;let n=ce();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0};let s=Date.now()-e.timestamp,r=s<1e3?8-Math.log(s+1):1;if(Pe.canvas=e.canvas,!Pe.body||e.body.length!==Pe.body.length)Pe.body=JSON.parse(JSON.stringify(e.body));else for(let z=0;z<e.body.length;z++){let X=e.body[z].box.map((Q,te)=>((r-1)*Pe.body[z].box[te]+Q)/r),Z=e.body[z].boxRaw.map((Q,te)=>((r-1)*Pe.body[z].boxRaw[te]+Q)/r),J=e.body[z].keypoints.map((Q,te)=>({score:Q.score,part:Q.part,position:[Pe.body[z].keypoints[te]?((r-1)*Pe.body[z].keypoints[te].position[0]+Q.position[0])/r:Q.position[0],Pe.body[z].keypoints[te]?((r-1)*Pe.body[z].keypoints[te].position[1]+Q.position[1])/r:Q.position[1]],positionRaw:[Pe.body[z].keypoints[te]?((r-1)*Pe.body[z].keypoints[te].positionRaw[0]+Q.positionRaw[0])/r:Q.position[0],Pe.body[z].keypoints[te]?((r-1)*Pe.body[z].keypoints[te].positionRaw[1]+Q.positionRaw[1])/r:Q.position[1]]})),ee={},ne={connected:{}};((i=(o=t.body)==null?void 0:o.modelPath)==null?void 0:i.includes("efficientpose"))?ne=Ux:((c=(l=t.body)==null?void 0:l.modelPath)==null?void 0:c.includes("blazepose"))?ne=Fx:((d=(u=t.body)==null?void 0:u.modelPath)==null?void 0:d.includes("movenet"))&&(ne=mb);for(let[Q,te]of Object.entries(ne.connected)){let oe=[];for(let he=0;he<te.length-1;he++){let be=J.find(Ce=>Ce.part===te[he]),we=J.find(Ce=>Ce.part===te[he+1]);be&&we&&be.score>(t.body.minConfidence||0)&&we.score>(t.body.minConfidence||0)&&oe.push([be.position,we.position])}ee[Q]=oe}Pe.body[z]={...e.body[z],box:X,boxRaw:Z,keypoints:J,annotations:ee}}if(!Pe.hand||e.hand.length!==Pe.hand.length)Pe.hand=JSON.parse(JSON.stringify(e.hand));else for(let z=0;z<e.hand.length;z++){let X=e.hand[z].box.map((ne,Q)=>((r-1)*Pe.hand[z].box[Q]+ne)/r),Z=e.hand[z].boxRaw.map((ne,Q)=>((r-1)*Pe.hand[z].boxRaw[Q]+ne)/r);Pe.hand[z].keypoints.length!==e.hand[z].keypoints.length&&(Pe.hand[z].keypoints=e.hand[z].keypoints);let J=e.hand[z].keypoints&&e.hand[z].keypoints.length>0?e.hand[z].keypoints.map((ne,Q)=>ne.map((te,oe)=>((r-1)*(Pe.hand[z].keypoints[Q][oe]||1)+(te||0))/r)):[],ee={};if(Object.keys(Pe.hand[z].annotations).length!==Object.keys(e.hand[z].annotations).length)Pe.hand[z].annotations=e.hand[z].annotations,ee=Pe.hand[z].annotations;else if(e.hand[z].annotations)for(let ne of Object.keys(e.hand[z].annotations))ee[ne]=e.hand[z].annotations[ne]&&e.hand[z].annotations[ne][0]?e.hand[z].annotations[ne].map((Q,te)=>Q.map((oe,he)=>((r-1)*Pe.hand[z].annotations[ne][te][he]+oe)/r)):null;Pe.hand[z]={...e.hand[z],box:X,boxRaw:Z,keypoints:J,annotations:ee}}if(!Pe.face||e.face.length!==Pe.face.length)Pe.face=JSON.parse(JSON.stringify(e.face));else for(let z=0;z<e.face.length;z++){let X=e.face[z].box.map((ee,ne)=>((r-1)*Pe.face[z].box[ne]+ee)/r),Z=e.face[z].boxRaw.map((ee,ne)=>((r-1)*Pe.face[z].boxRaw[ne]+ee)/r),J={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};J.matrix=(p=e.face[z].rotation)==null?void 0:p.matrix,J.angle={roll:((r-1)*(((f=(h=Pe.face[z].rotation)==null?void 0:h.angle)==null?void 0:f.roll)||0)+(((g=(m=e.face[z].rotation)==null?void 0:m.angle)==null?void 0:g.roll)||0))/r,yaw:((r-1)*(((x=(A=Pe.face[z].rotation)==null?void 0:A.angle)==null?void 0:x.yaw)||0)+(((b=(y=e.face[z].rotation)==null?void 0:y.angle)==null?void 0:b.yaw)||0))/r,pitch:((r-1)*(((k=(w=Pe.face[z].rotation)==null?void 0:w.angle)==null?void 0:k.pitch)||0)+(((E=(C=e.face[z].rotation)==null?void 0:C.angle)==null?void 0:E.pitch)||0))/r},J.gaze={bearing:((r-1)*(((F=(R=Pe.face[z].rotation)==null?void 0:R.gaze)==null?void 0:F.bearing)||0)+(((P=(D=e.face[z].rotation)==null?void 0:D.gaze)==null?void 0:P.bearing)||0))/r,strength:((r-1)*(((M=(T=Pe.face[z].rotation)==null?void 0:T.gaze)==null?void 0:M.strength)||0)+(((j=(U=e.face[z].rotation)==null?void 0:U.gaze)==null?void 0:j.strength)||0))/r},Pe.face[z]={...e.face[z],rotation:J,box:X,boxRaw:Z}}if(!Pe.object||e.object.length!==Pe.object.length)Pe.object=JSON.parse(JSON.stringify(e.object));else for(let z=0;z<e.object.length;z++){let X=e.object[z].box.map((J,ee)=>((r-1)*Pe.object[z].box[ee]+J)/r),Z=e.object[z].boxRaw.map((J,ee)=>((r-1)*Pe.object[z].boxRaw[ee]+J)/r);Pe.object[z]={...e.object[z],box:X,boxRaw:Z}}if(e.persons){let z=e.persons;if(!Pe.persons||z.length!==Pe.persons.length)Pe.persons=JSON.parse(JSON.stringify(z));else for(let X=0;X<z.length;X++)Pe.persons[X].box=z[X].box.map((Z,J)=>((r-1)*Pe.persons[X].box[J]+Z)/r)}e.gesture&&(Pe.gesture=e.gesture);let a=ce();return Lb=ye.perfadd?Lb+Math.round(a-n):Math.round(a-n),e.performance&&(Pe.performance={...e.performance,interpolate:Lb}),Pe}function c0(e,t,n={order:2,multiplier:20}){let s=0;for(let r=0;r<e.length;r++){let a=!n.order||n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*s}function vT(e,t,n={order:2,multiplier:20}){let s=c0(e,t,n),r=!n.order||n.order===2?Math.sqrt(s):s**(1/n.order);return Math.max(0,100-r)/100}function wT(e,t,n={order:2,multiplier:20,threshold:0}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let a=0;a<t.length;a++){let o=c0(e,t[a],n);if(o<s&&(s=o,r=a),s<(n.threshold||0))break}return s=!n.order||n.order===2?Math.sqrt(s):s**(1/n.order),{index:r,distance:s,similarity:Math.max(0,100-s)/100}}function kT(e,t,n,s,r){var i,l,c,u,d,p,h,f,m,g,A,x,y,b,w,k;let a=0,o=[];for(let C of e){let E={id:a++,face:C,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let M of t)C.box[0]>M.box[0]&&C.box[0]<M.box[0]+M.box[2]&&C.box[1]+C.box[3]>M.box[1]&&C.box[1]+C.box[3]<M.box[1]+M.box[3]&&(E.body=M);if(E.body)for(let M of n)M.box[0]+M.box[2]>E.body.box[0]&&M.box[0]+M.box[2]<E.body.box[0]+E.body.box[2]&&M.box[1]+M.box[3]>E.body.box[1]&&M.box[1]+M.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=M),M.box[0]<E.body.box[0]+E.body.box[2]&&M.box[0]>E.body.box[0]&&M.box[1]+M.box[3]>E.body.box[1]&&M.box[1]+M.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=M);for(let M of s)M.face!==void 0&&M.face===C.id?(i=E.gestures)==null||i.push(M):M.iris!==void 0&&M.iris===C.id?(l=E.gestures)==null||l.push(M):M.body!==void 0&&M.body===((c=E.body)==null?void 0:c.id)?(u=E.gestures)==null||u.push(M):M.hand!==void 0&&M.hand===((p=(d=E.hands)==null?void 0:d.left)==null?void 0:p.id)?(h=E.gestures)==null||h.push(M):M.hand!==void 0&&M.hand===((m=(f=E.hands)==null?void 0:f.right)==null?void 0:m.id)&&((g=E.gestures)==null||g.push(M));let R=[],F=[],D=M=>{M&&M.length===4&&(R.push(M[0],M[0]+M[2]),F.push(M[1],M[1]+M[3]))};D((A=E.face)==null?void 0:A.box),D((x=E.body)==null?void 0:x.box),D((b=(y=E.hands)==null?void 0:y.left)==null?void 0:b.box),D((k=(w=E.hands)==null?void 0:w.right)==null?void 0:k.box);let P=Math.min(...R),T=Math.min(...F);E.box=[P,T,Math.max(...R)-P,Math.max(...F)-T],r&&r[1]&&r[2]&&(E.boxRaw=[E.box[0]/r[2],E.box[1]/r[1],E.box[2]/r[2],E.box[3]/r[1]]),o.push(E)}return o}var d0=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,p0=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function e2e(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(d0);break;case"body":case"full":n=await t(p0);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function t2e(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+d0;break;case"full":case"body":n="data:image/jpeg;base64,"+p0;break;default:n=null}let s;typeof Image!="undefined"?s=new Image:ye.Image&&(s=new ye.Image),s.onload=async()=>{let r=Xn(s.naturalWidth,s.naturalHeight);if(!r)re("Warmup: Canvas not found"),t({});else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=await e.detect(o.tensor,e.config);t(i)}},n?s.src=n:t(null)})}async function n2e(e){let t=r=>Buffer.from(r,"base64"),n;if(e.config.warmup==="face"&&(n=t(d0)),(e.config.warmup==="body"||e.config.warmup==="full")&&(n=t(p0)),!n)return null;let s;if(typeof void 0!="undefined"){let r=(void 0).decodeJpeg(n),a=r.expandDims(0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&re("Warmup tfjs-node not loaded");return s}async function ST(e,t){let n=ce();if(e.state="warmup",t&&(e.config=Rn(e.config,t)),!e.config.warmup||e.config.warmup==="none")return{error:"null"};let s;return new Promise(async r=>{typeof createImageBitmap=="function"?s=await e2e(e):typeof Image!="undefined"||ye.Canvas!==void 0?s=await t2e(e):s=await n2e(e);let a=ce();e.config.debug&&re("Warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),r(s)})}var Ac,kp,Sp,h0,CT=class{constructor(t){de(this,"version");de(this,"config");de(this,"result");de(this,"state");de(this,"process");de(this,"tf");de(this,"env");de(this,"draw");de(this,"models");de(this,"events");de(this,"faceTriangulation");de(this,"faceUVMap");de(this,"performance");Dc(this,Ac,void 0);Dc(this,kp,void 0);Dc(this,Sp,void 0);de(this,"gl");de(this,"analyze",(...t)=>{if(!$c(this,kp))return;let n=this.tf.engine().state.numTensors,s=$c(this,Ac);_c(this,Ac,n);let r=n-s;r!==0&&re(...t,r)});Dc(this,h0,t=>{if(!$c(this,Sp))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof et))return"input must be a tensor";try{this.tf.getBackend()}catch(n){return"backend not loaded"}return null});de(this,"similarity",vT);de(this,"distance",c0);de(this,"match",wT);de(this,"emit",t=>{var n;this.events&&this.events.dispatchEvent&&((n=this.events)==null||n.dispatchEvent(new Event(t)))});this.env=ye,ya.wasmPath=dp.includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${dp}/dist/`,ya.modelBasePath=ye.browser?"../models/":"file://models/",ya.backend=ye.browser?"humangl":"tensorflow",this.version=Cx,Object.defineProperty(this,"version",{value:Cx}),this.config=JSON.parse(JSON.stringify(ya)),Object.seal(this.config),t&&(this.config=Rn(this.config,t)),this.tf=wl,this.state="idle",_c(this,Ac,0),_c(this,kp,!1),_c(this,Sp,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new Eb,this.draw={options:ua,canvas:(n,s)=>hT(n,s),face:(n,s,r)=>Pb(n,s,r),body:(n,s,r)=>Fb(n,s,r),hand:(n,s,r)=>Ob(n,s,r),gesture:(n,s,r)=>_b(n,s,r),object:(n,s,r)=>Mb(n,s,r),person:(n,s,r)=>pT(n,s,r),all:(n,s,r)=>fT(n,s,r)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[]},this.process={tensor:null,canvas:null},this.faceTriangulation=m8,this.faceUVMap=g8,this.gl=zt,this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(ya)),this.config.backend=t}validate(t){return Mg(ya,t||this.config)}now(){return ce()}image(t,n=!0){return uc(t,this.config,n)}async segmentation(t,n){return oT(t,n,this.config)}enhance(t){return eb(t)}async init(){await u0(this,!0),await this.tf.ready()}async load(t){this.state="load";let n=ce(),s=Object.values(this.models).filter(o=>o).length;t&&(this.config=Rn(this.config,t)),this.env.initial&&(this.config.debug&&re(`version: ${this.version}`),this.config.debug&&re(`tfjs version: ${this.tf.version_core}`),await u0(this)||re("error: backend check failed"),await Vh(),this.env.browser&&(this.config.debug&&re("configuration:",this.config),this.config.debug&&re("environment:",this.env),this.config.debug&&re("tf flags:",this.tf.ENV.flags))),await iT(this),this.env.initial&&this.config.debug&&re("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(o=>o).length!==s&&(await lT(this),this.emit("load"));let a=Math.trunc(ce()-n);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(t=this.result){return bT(t,this.config)}async warmup(t){let n=ce(),s=await ST(this,t),r=ce();return this.performance.warmup=Math.trunc(r-n),s}async profile(t,n){let s=await this.tf.profile(()=>this.detect(t,n)),r={};for(let i of s.kernels)r[i.name]?r[i.name]+=i.kernelTimeMs:r[i.name]=i.kernelTimeMs;let a=[];Object.entries(r).forEach(i=>a.push({name:i[0],ms:i[1]})),a.sort((i,l)=>l.ms-i.ms),a.length=20;let o={};for(let i of a)o[i.name]=i.ms;return o}async detect(t,n){return this.state="detect",new Promise(async s=>{var g,A,x,y,b,w,k,C,E,R,F,D,P,T,M,U,j,z,X,Z,J,ee;this.state="config";let r;this.config=Rn(this.config,n),this.state="check";let a=$c(this,h0).call(this,t);a&&(re(a,t),s({error:a}));let o=ce();await u0(this),await this.load(),r=ce(),this.state="image";let i=uc(t,this.config);if(this.process=i,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ce()-r):Math.trunc(ce()-r),this.analyze("Get Image:"),!i.tensor){this.config.debug&&re("could not convert input to tensor"),s({error:"could not convert input to tensor"});return}this.emit("image"),r=ce(),this.config.skipAllowed=await $6(this.config,i.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.inputCheck=this.env.perfadd?(this.performance.inputCheck||0)+Math.trunc(ce()-r):Math.trunc(ce()-r),this.analyze("Check Changed:");let l=[],c=[],u=[],d=[];this.state="detect:face",this.config.async?(l=this.config.face.enabled?zb(this,i.tensor):[],this.performance.face&&delete this.performance.face):(r=ce(),l=this.config.face.enabled?await zb(this,i.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ce()-r):Math.trunc(ce()-r)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(l=await l),this.analyze("Start Body:"),this.state="detect:body";let p=this.config.body.maxDetected===-1?Rn(this.config,{body:{maxDetected:this.config.face.enabled?1*l.length:1}}):this.config;this.config.async?(((g=this.config.body.modelPath)==null?void 0:g.includes("posenet"))?c=this.config.body.enabled?Cb(i.tensor,p):[]:((A=this.config.body.modelPath)==null?void 0:A.includes("blazepose"))?c=this.config.body.enabled?zx(i.tensor,p):[]:((x=this.config.body.modelPath)==null?void 0:x.includes("efficientpose"))?c=this.config.body.enabled?jx(i.tensor,p):[]:((y=this.config.body.modelPath)==null?void 0:y.includes("movenet"))&&(c=this.config.body.enabled?yb(i.tensor,p):[]),this.performance.body&&delete this.performance.body):(r=ce(),((b=this.config.body.modelPath)==null?void 0:b.includes("posenet"))?c=this.config.body.enabled?await Cb(i.tensor,p):[]:((w=this.config.body.modelPath)==null?void 0:w.includes("blazepose"))?c=this.config.body.enabled?await zx(i.tensor,p):[]:((k=this.config.body.modelPath)==null?void 0:k.includes("efficientpose"))?c=this.config.body.enabled?await jx(i.tensor,p):[]:((C=this.config.body.modelPath)==null?void 0:C.includes("movenet"))&&(c=this.config.body.enabled?await yb(i.tensor,p):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ce()-r):Math.trunc(ce()-r)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let h=this.config.hand.maxDetected===-1?Rn(this.config,{hand:{maxDetected:this.config.face.enabled?2*l.length:1}}):this.config;this.config.async?(((R=(E=this.config.hand.detector)==null?void 0:E.modelPath)==null?void 0:R.includes("handdetect"))?u=this.config.hand.enabled?ob(i.tensor,h):[]:((D=(F=this.config.hand.detector)==null?void 0:F.modelPath)==null?void 0:D.includes("handtrack"))&&(u=this.config.hand.enabled?db(i.tensor,h):[]),this.performance.hand&&delete this.performance.hand):(r=ce(),((T=(P=this.config.hand.detector)==null?void 0:P.modelPath)==null?void 0:T.includes("handdetect"))?u=this.config.hand.enabled?await ob(i.tensor,h):[]:((U=(M=this.config.hand.detector)==null?void 0:M.modelPath)==null?void 0:U.includes("handtrack"))&&(u=this.config.hand.enabled?await db(i.tensor,h):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ce()-r):Math.trunc(ce()-r)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?(((j=this.config.object.modelPath)==null?void 0:j.includes("nanodet"))?d=this.config.object.enabled?bb(i.tensor,this.config):[]:((z=this.config.object.modelPath)==null?void 0:z.includes("centernet"))&&(d=this.config.object.enabled?Bx(i.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(r=ce(),((X=this.config.object.modelPath)==null?void 0:X.includes("nanodet"))?d=this.config.object.enabled?await bb(i.tensor,this.config):[]:((Z=this.config.object.modelPath)==null?void 0:Z.includes("centernet"))&&(d=this.config.object.enabled?await Bx(i.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ce()-r):Math.trunc(ce()-r)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([l,c,u,d]=await Promise.all([l,c,u,d])),this.state="detect:gesture";let f=[];this.config.gesture.enabled&&(r=ce(),f=[...AT(l),...gT(c),...xT(u),...yT(l)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ce()-r):Math.trunc(ce()-r)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ce()-o):Math.trunc(ce()-o);let m=((ee=(J=this.process)==null?void 0:J.tensor)==null?void 0:ee.shape)||[];this.result={face:l,body:c,hand:u,gesture:f,object:d,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),get persons(){return kT(l,c,u,f,m)}},ae(i.tensor),this.emit("detect"),this.state="idle",s(this.result)})}};Ac=new WeakMap,kp=new WeakMap,Sp=new WeakMap,h0=new WeakMap;return s2e;})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
