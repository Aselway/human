/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var Human=(()=>{var f2=Object.defineProperty;var FE=(e,t,n)=>t in e?f2(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var OE=e=>f2(e,"__esModule",{value:!0});var td=(e,t)=>{OE(e);for(var n in t)f2(e,n,{get:t[n],enumerable:!0})};var fe=(e,t,n)=>(FE(e,typeof t!="symbol"?t+"":t,n),n),F5=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var nd=(e,t,n)=>(F5(e,t,"read from private field"),n?n.call(e):t.get(e)),sd=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},rd=(e,t,n,s)=>(F5(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);var Kye={};td(Kye,{Human:()=>LN,default:()=>LN,defaults:()=>Na,env:()=>pe});function J(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function We(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var ie=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function m2(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")m2(e[r],t[r],r,s);else{let a=e&&typeof e[r]!="undefined";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&J("invalid configuration",s),s}function En(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=En(a,o):n[r]=o}),n),{})}var Na={backend:"",modelBasePath:"",wasmPath:"",debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var Vr={};td(Vr,{Abs:()=>mi,Acos:()=>iu,Acosh:()=>lu,AdadeltaOptimizer:()=>Mf,AdagradOptimizer:()=>zf,AdamOptimizer:()=>Lf,AdamaxOptimizer:()=>Bf,Add:()=>Xr,AddN:()=>Da,All:()=>uu,Any:()=>cu,ArgMax:()=>$a,ArgMin:()=>du,Asin:()=>pu,Asinh:()=>hu,Atan:()=>fu,Atan2:()=>gu,Atanh:()=>mu,AvgPool:()=>Pa,AvgPool3D:()=>ud,AvgPool3DGrad:()=>Eh,AvgPoolGrad:()=>Nh,BackendWasm:()=>d8,BatchMatMul:()=>Fa,BatchToSpaceND:()=>gi,Bincount:()=>Rh,BroadcastArgs:()=>_h,BroadcastTo:()=>Y5,Callback:()=>hS,CallbackList:()=>tk,Cast:()=>Oa,Ceil:()=>Ma,ClipByValue:()=>Kr,Complex:()=>cd,ComplexAbs:()=>dd,Concat:()=>yi,Conv2D:()=>za,Conv2DBackpropFilter:()=>Dh,Conv2DBackpropInput:()=>La,Conv3D:()=>pd,Conv3DBackpropFilterV2:()=>$h,Conv3DBackpropInputV2:()=>Ph,Cos:()=>Ba,Cosh:()=>Wa,CropAndResize:()=>xi,Cumsum:()=>Ai,CustomCallback:()=>sk,DataStorage:()=>od,DenseBincount:()=>Fh,DepthToSpace:()=>bi,DepthwiseConv2dNative:()=>Va,DepthwiseConv2dNativeBackpropFilter:()=>Oh,DepthwiseConv2dNativeBackpropInput:()=>Mh,Diag:()=>zh,Dilation2D:()=>hd,Dilation2DBackpropFilter:()=>Bh,Dilation2DBackpropInput:()=>Lh,ENV:()=>Cr,EarlyStopping:()=>mS,Einsum:()=>fd,Elu:()=>Ga,EluGrad:()=>Wh,Environment:()=>K5,Equal:()=>vi,Erf:()=>yu,Exp:()=>Ha,ExpandDims:()=>wi,Expm1:()=>ki,FFT:()=>Vh,Fill:()=>Au,FlipLeftRight:()=>Si,Floor:()=>ja,FloorDiv:()=>qa,FromPixels:()=>Cd,FusedBatchNorm:()=>Xa,FusedConv2D:()=>Co,FusedDepthwiseConv2D:()=>To,GPGPUContext:()=>Gm,GatherNd:()=>Ci,GatherV2:()=>Ii,GraphModel:()=>qS,Greater:()=>Ti,GreaterEqual:()=>Ka,History:()=>nk,IFFT:()=>Uh,Identity:()=>Za,Imag:()=>md,InputSpec:()=>Jt,IsFinite:()=>xu,IsInf:()=>bu,IsNan:()=>vu,KernelBackend:()=>su,LRN:()=>yd,LRNGrad:()=>Hh,LayerVariable:()=>Yw,LayersModel:()=>ra,LeakyRelu:()=>Ya,Less:()=>Ni,LessEqual:()=>Ei,LinSpace:()=>Gh,Log:()=>Ja,Log1p:()=>wu,LogSoftmax:()=>J5,LogicalAnd:()=>Ri,LogicalNot:()=>ku,LogicalOr:()=>gd,MathBackendCPU:()=>qA,MathBackendWebGL:()=>Ip,Max:()=>Qa,MaxPool:()=>to,MaxPool3D:()=>Ad,MaxPool3DGrad:()=>qh,MaxPoolGrad:()=>jh,MaxPoolWithArgmax:()=>Xh,Maximum:()=>eo,Mean:()=>no,Min:()=>so,Minimum:()=>ro,MirrorPad:()=>ao,Mod:()=>Su,MomentumOptimizer:()=>Wf,Multinomial:()=>Kh,Multiply:()=>oo,Neg:()=>_i,NonMaxSuppressionV3:()=>$i,NonMaxSuppressionV4:()=>Iu,NonMaxSuppressionV5:()=>Pi,NotEqual:()=>Di,OP_SCOPE_SUFFIX:()=>A3,OneHot:()=>Oi,OnesLike:()=>Fi,Optimizer:()=>ta,OptimizerConstructors:()=>Lo,Pack:()=>Mi,PadV2:()=>io,Pool:()=>T9,Pow:()=>lo,Prelu:()=>uo,Prod:()=>zi,RMSPropOptimizer:()=>Vf,RNN:()=>aa,Range:()=>Cu,Rank:()=>o3,Real:()=>xd,RealDiv:()=>Ua,Reciprocal:()=>Tu,Reduction:()=>is,Relu:()=>co,Relu6:()=>ho,Reshape:()=>Li,ResizeBilinear:()=>po,ResizeBilinearGrad:()=>Yh,ResizeNearestNeighbor:()=>Nu,ResizeNearestNeighborGrad:()=>Zh,Reverse:()=>Bi,RotateWithOffset:()=>el,Round:()=>Wi,Rsqrt:()=>fo,SGDOptimizer:()=>Zd,ScatterNd:()=>Vi,Select:()=>Ui,Selu:()=>Eu,Sequential:()=>hm,Sigmoid:()=>go,Sign:()=>Ru,Sin:()=>mo,Sinh:()=>Hi,Slice:()=>Gi,Softmax:()=>xo,Softplus:()=>_u,SpaceToBatchND:()=>ji,SparseFillEmptyRows:()=>bd,SparseReshape:()=>Du,SparseSegmentMean:()=>vd,SparseSegmentSum:()=>wd,SparseToDense:()=>kd,SplitV:()=>qi,Sqrt:()=>yo,Square:()=>$u,SquaredDifference:()=>bo,Step:()=>So,StridedSlice:()=>Xi,StringNGrams:()=>Sd,StringSplit:()=>Jh,StringToHashBucketFast:()=>Qh,Sub:()=>vo,Sum:()=>Ao,SymbolicTensor:()=>Ar,Tan:()=>Ki,Tanh:()=>wo,Tensor:()=>tt,TensorBuffer:()=>sn,Tile:()=>Zr,TopK:()=>Zi,Transform:()=>Yi,Transpose:()=>ko,Unique:()=>ef,Unpack:()=>Ji,UnsortedSegmentSum:()=>Id,Variable:()=>Pd,ZerosLike:()=>Qi,_FusedMatMul:()=>Io,abs:()=>rn,acos:()=>av,acosh:()=>ov,add:()=>ue,addN:()=>hf,all:()=>ey,any:()=>ff,argMax:()=>Fs,argMin:()=>iv,asin:()=>lv,asinh:()=>uv,atan:()=>cv,atan2:()=>dv,atanh:()=>pv,avgPool:()=>gf,avgPool3d:()=>sy,backend:()=>Er,backend_util:()=>N,basicLSTMCell:()=>fD,batchNorm:()=>Wu,batchNorm2d:()=>gv,batchNorm3d:()=>yv,batchNorm4d:()=>Av,batchToSpaceND:()=>yf,bincount:()=>ry,booleanMaskAsync:()=>CF,broadcastArgs:()=>xv,broadcastTo:()=>Bd,broadcast_util:()=>ol,browser:()=>$s,buffer:()=>ze,callbacks:()=>QU,cast:()=>me,ceil:()=>bv,clipByValue:()=>As,clone:()=>Bn,complex:()=>Ro,concat:()=>St,concat1d:()=>vv,concat2d:()=>Vu,concat3d:()=>wv,concat4d:()=>kv,constraints:()=>Rw,conv1d:()=>ay,conv2d:()=>Fo,conv2dTranspose:()=>iy,conv3d:()=>ly,conv3dTranspose:()=>Iv,copyRegisteredKernels:()=>_9,cos:()=>Af,cosh:()=>uy,cosineWindow:()=>Py,cumsum:()=>cy,customGrad:()=>_r,data:()=>XS,denseBincount:()=>Cv,deprecationWarn:()=>J2,depthToSpace:()=>Tv,depthwiseConv2d:()=>Wd,deregisterOp:()=>nG,device_util:()=>Ou,diag:()=>GD,dilation2d:()=>Nv,disableDeprecationWarnings:()=>R_,dispose:()=>ne,disposeVariables:()=>__,div:()=>de,divNoNan:()=>Ev,dot:()=>YD,dropout:()=>rw,einsum:()=>Rv,elu:()=>Vd,enableDebugMode:()=>E_,enableProdMode:()=>sv,enclosingPowerOfTwo:()=>aw,engine:()=>as,env:()=>Y,equal:()=>Os,erf:()=>_v,exp:()=>Ms,expandDims:()=>Zt,expm1:()=>Dv,eye:()=>dy,fft:()=>Ef,fill:()=>Uu,findBackend:()=>Q2,findBackendFactory:()=>F_,floor:()=>Ud,floorDiv:()=>pf,forceHalfFloat:()=>SC,fused:()=>zo,gather:()=>Gu,gatherND:()=>sw,gather_util:()=>G2,getBackend:()=>Ps,getGradient:()=>w2,getKernel:()=>tf,getKernelsForBackend:()=>Yr,getThreadsCount:()=>z2e,gpgpu_util:()=>YI,grad:()=>w$,grads:()=>k$,greater:()=>xs,greaterEqual:()=>dl,ifft:()=>qd,imag:()=>xf,image:()=>Se,inTopKAsync:()=>MF,initializers:()=>Mw,input:()=>Ck,io:()=>rs,irfft:()=>Ny,isFinite:()=>p$,isInf:()=>f$,isNaN:()=>$v,keep:()=>yn,kernel_impls:()=>Qs,layers:()=>Xw,leakyRelu:()=>bf,less:()=>py,lessEqual:()=>pl,linalg:()=>mw,linspace:()=>Pv,loadGraphModel:()=>Be,loadLayersModel:()=>cV,localResponseNormalization:()=>Fv,log:()=>zs,log1p:()=>vf,logSigmoid:()=>E$,logSoftmax:()=>hy,logSumExp:()=>Bv,logicalAnd:()=>pr,logicalNot:()=>kf,logicalOr:()=>gy,logicalXor:()=>W$,losses:()=>vM,matMul:()=>je,math:()=>O3,max:()=>An,maxPool:()=>Sf,maxPool3d:()=>yy,maxPoolWithArgmax:()=>Wv,maximum:()=>Qr,mean:()=>Ut,memory:()=>cf,meshgrid:()=>q$,metrics:()=>cS,min:()=>Oo,minimum:()=>Gd,mirrorPad:()=>Vv,mod:()=>Hd,model:()=>lV,models:()=>dS,moments:()=>If,movingAverage:()=>EF,mul:()=>L,multiRNNCell:()=>tP,multinomial:()=>Uv,neg:()=>zt,nextFrame:()=>gw,norm:()=>Dy,notEqual:()=>ju,oneHot:()=>zd,ones:()=>bs,onesLike:()=>Ls,op:()=>U,outerProduct:()=>oP,pad:()=>Js,pad1d:()=>uP,pad2d:()=>dP,pad3d:()=>hP,pad4d:()=>mP,pool:()=>bP,pow:()=>Mo,prelu:()=>Tf,print:()=>R3,prod:()=>Ay,profile:()=>D_,rand:()=>IP,randomGamma:()=>EP,randomNormal:()=>Gv,randomUniform:()=>qu,range:()=>Xu,ready:()=>df,real:()=>jd,reciprocal:()=>Hv,registerBackend:()=>ul,registerCallbackConstructor:()=>dV,registerGradient:()=>Q5,registerKernel:()=>ur,registerOp:()=>tG,regularizers:()=>pS,relu:()=>Dr,relu6:()=>vy,removeBackend:()=>P_,reshape:()=>H,reverse:()=>Bs,reverse1d:()=>zP,reverse2d:()=>BP,reverse3d:()=>VP,reverse4d:()=>GP,rfft:()=>Rf,round:()=>wy,rsqrt:()=>ky,scalar:()=>Ce,scatterND:()=>nw,scatter_util:()=>H2,selu:()=>Sy,separableConv2d:()=>jv,sequential:()=>uV,serialization:()=>ce,setBackend:()=>rv,setPlatform:()=>O_,setThreadsCount:()=>M2e,setWasmPath:()=>O2e,setWasmPaths:()=>h8,setWebGLContext:()=>Pm,setdiff1dAsync:()=>qv,shared:()=>Nm,sigmoid:()=>_n,sign:()=>Xv,signal:()=>bM,sin:()=>Iy,sinh:()=>Cy,slice:()=>Fe,slice1d:()=>Nf,slice2d:()=>Ty,slice3d:()=>fl,slice4d:()=>ml,slice_util:()=>Mt,softmax:()=>Ku,softplus:()=>Hu,spaceToBatchND:()=>Cf,sparse:()=>Kd,sparseToDense:()=>$y,spectral:()=>xM,split:()=>Yt,sqrt:()=>Dn,square:()=>xt,squaredDifference:()=>Ey,squeeze:()=>Ke,stack:()=>an,step:()=>Xd,stridedSlice:()=>Kv,string:()=>Of,sub:()=>he,sum:()=>we,sumOutType:()=>Fd,tan:()=>Zv,tanh:()=>Bu,tensor:()=>pt,tensor1d:()=>Ct,tensor2d:()=>hr,tensor3d:()=>z3,tensor4d:()=>gF,tensor5d:()=>yF,tensor6d:()=>AF,tensor_util:()=>cr,test_util:()=>Q3,tidy:()=>X,tile:()=>Ys,time:()=>$_,topk:()=>Yv,train:()=>gl,transpose:()=>nt,truncatedNormal:()=>_f,unique:()=>Ry,unregisterGradient:()=>R9,unregisterKernel:()=>E9,unsortedSegmentSum:()=>Jv,unstack:()=>os,upcastType:()=>Ln,util:()=>v,valueAndGrad:()=>S$,valueAndGrads:()=>I$,variable:()=>Qv,variableGrads:()=>Ov,version:()=>l0,version_converter:()=>aH,version_core:()=>nv,version_cpu:()=>Hj,version_layers:()=>g1,version_wasm:()=>L2e,version_webgl:()=>fee,webgl:()=>mee,webgl_util:()=>vI,webgpu:()=>o6,where:()=>Vn,whereAsync:()=>_y,zeros:()=>Gt,zerosLike:()=>st});var ME=Object.create,vh=Object.defineProperty,zE=Object.getOwnPropertyDescriptor,LE=Object.getOwnPropertyNames,BE=Object.getPrototypeOf,WE=Object.prototype.hasOwnProperty,O5=e=>vh(e,"__esModule",{value:!0}),nn=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},Me=(e,t)=>{O5(e);for(var n in t)vh(e,n,{get:t[n],enumerable:!0})},VE=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of LE(t))!WE.call(e,s)&&s!=="default"&&vh(e,s,{get:()=>t[s],enumerable:!(n=zE(t,s))||n.enumerable});return e},pi=e=>VE(O5(vh(e!=null?ME(BE(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),UE=nn({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(P){}function s(P,T,O){this.low=P|0,this.high=T|0,this.unsigned=!!O}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(P){return(P&&P.__isLong__)===!0}s.isLong=r;var a={},o={};function i(P,T){var O,G,K;return T?(P>>>=0,(K=0<=P&&P<256)&&(G=o[P],G)?G:(O=c(P,(P|0)<0?-1:0,!0),K&&(o[P]=O),O)):(P|=0,(K=-128<=P&&P<128)&&(G=a[P],G)?G:(O=c(P,P<0?-1:0,!1),K&&(a[P]=O),O))}s.fromInt=i;function l(P,T){if(isNaN(P))return T?b:A;if(T){if(P<0)return b;if(P>=g)return R}else{if(P<=-y)return F;if(P+1>=y)return E}return P<0?l(-P,T).neg():c(P%m|0,P/m|0,T)}s.fromNumber=l;function c(P,T,O){return new s(P,T,O)}s.fromBits=c;var u=Math.pow;function d(P,T,O){if(P.length===0)throw Error("empty string");if(P==="NaN"||P==="Infinity"||P==="+Infinity"||P==="-Infinity")return A;if(typeof T=="number"?(O=T,T=!1):T=!!T,O=O||10,O<2||36<O)throw RangeError("radix");var G;if((G=P.indexOf("-"))>0)throw Error("interior hyphen");if(G===0)return d(P.substring(1),T,O).neg();for(var K=l(u(O,8)),z=A,j=0;j<P.length;j+=8){var W=Math.min(8,P.length-j),Q=parseInt(P.substring(j,j+W),O);if(W<8){var te=l(u(O,W));z=z.mul(te).add(l(Q))}else z=z.mul(K),z=z.add(l(Q))}return z.unsigned=T,z}s.fromString=d;function p(P,T){return typeof P=="number"?l(P,T):typeof P=="string"?d(P,T):c(P.low,P.high,typeof T=="boolean"?T:P.unsigned)}s.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,y=g/2,x=i(f),A=i(0);s.ZERO=A;var b=i(0,!0);s.UZERO=b;var w=i(1);s.ONE=w;var C=i(1,!0);s.UONE=C;var S=i(-1);s.NEG_ONE=S;var E=c(4294967295|0,2147483647|0,!1);s.MAX_VALUE=E;var R=c(4294967295|0,4294967295|0,!0);s.MAX_UNSIGNED_VALUE=R;var F=c(0,2147483648|0,!1);s.MIN_VALUE=F;var _=s.prototype;_.toInt=function(){return this.unsigned?this.low>>>0:this.low},_.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},_.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(F)){var O=l(T),G=this.div(O),K=G.mul(O).sub(this);return G.toString(T)+K.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var z=l(u(T,6),this.unsigned),j=this,W="";;){var Q=j.div(z),te=j.sub(Q.mul(z)).toInt()>>>0,ae=te.toString(T);if(j=Q,j.isZero())return ae+W;for(;ae.length<6;)ae="0"+ae;W=""+ae+W}},_.getHighBits=function(){return this.high},_.getHighBitsUnsigned=function(){return this.high>>>0},_.getLowBits=function(){return this.low},_.getLowBitsUnsigned=function(){return this.low>>>0},_.getNumBitsAbs=function(){if(this.isNegative())return this.eq(F)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,O=31;O>0&&(T&1<<O)==0;O--);return this.high!=0?O+33:O+1},_.isZero=function(){return this.high===0&&this.low===0},_.eqz=_.isZero,_.isNegative=function(){return!this.unsigned&&this.high<0},_.isPositive=function(){return this.unsigned||this.high>=0},_.isOdd=function(){return(this.low&1)==1},_.isEven=function(){return(this.low&1)==0},_.equals=function(T){return r(T)||(T=p(T)),this.unsigned!==T.unsigned&&this.high>>>31==1&&T.high>>>31==1?!1:this.high===T.high&&this.low===T.low},_.eq=_.equals,_.notEquals=function(T){return!this.eq(T)},_.neq=_.notEquals,_.ne=_.notEquals,_.lessThan=function(T){return this.comp(T)<0},_.lt=_.lessThan,_.lessThanOrEqual=function(T){return this.comp(T)<=0},_.lte=_.lessThanOrEqual,_.le=_.lessThanOrEqual,_.greaterThan=function(T){return this.comp(T)>0},_.gt=_.greaterThan,_.greaterThanOrEqual=function(T){return this.comp(T)>=0},_.gte=_.greaterThanOrEqual,_.ge=_.greaterThanOrEqual,_.compare=function(T){if(r(T)||(T=p(T)),this.eq(T))return 0;var O=this.isNegative(),G=T.isNegative();return O&&!G?-1:!O&&G?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},_.comp=_.compare,_.negate=function(){return!this.unsigned&&this.eq(F)?F:this.not().add(w)},_.neg=_.negate,_.add=function(T){r(T)||(T=p(T));var O=this.high>>>16,G=this.high&65535,K=this.low>>>16,z=this.low&65535,j=T.high>>>16,W=T.high&65535,Q=T.low>>>16,te=T.low&65535,ae=0,Z=0,oe=0,re=0;return re+=z+te,oe+=re>>>16,re&=65535,oe+=K+Q,Z+=oe>>>16,oe&=65535,Z+=G+W,ae+=Z>>>16,Z&=65535,ae+=O+j,ae&=65535,c(oe<<16|re,ae<<16|Z,this.unsigned)},_.subtract=function(T){return r(T)||(T=p(T)),this.add(T.neg())},_.sub=_.subtract,_.multiply=function(T){if(this.isZero())return A;if(r(T)||(T=p(T)),n){var O=n.mul(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}if(T.isZero())return A;if(this.eq(F))return T.isOdd()?F:A;if(T.eq(F))return this.isOdd()?F:A;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(x)&&T.lt(x))return l(this.toNumber()*T.toNumber(),this.unsigned);var G=this.high>>>16,K=this.high&65535,z=this.low>>>16,j=this.low&65535,W=T.high>>>16,Q=T.high&65535,te=T.low>>>16,ae=T.low&65535,Z=0,oe=0,re=0,ge=0;return ge+=j*ae,re+=ge>>>16,ge&=65535,re+=z*ae,oe+=re>>>16,re&=65535,re+=j*te,oe+=re>>>16,re&=65535,oe+=K*ae,Z+=oe>>>16,oe&=65535,oe+=z*te,Z+=oe>>>16,oe&=65535,oe+=j*Q,Z+=oe>>>16,oe&=65535,Z+=G*ae+K*te+z*Q+j*W,Z&=65535,c(re<<16|ge,Z<<16|oe,this.unsigned)},_.mul=_.multiply,_.divide=function(T){if(r(T)||(T=p(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var O=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:A;var G,K,z;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return b;if(T.gt(this.shru(1)))return C;z=b}else{if(this.eq(F)){if(T.eq(w)||T.eq(S))return F;if(T.eq(F))return w;var j=this.shr(1);return G=j.div(T).shl(1),G.eq(A)?T.isNegative()?w:S:(K=this.sub(T.mul(G)),z=G.add(K.div(T)),z)}else if(T.eq(F))return this.unsigned?b:A;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();z=A}for(K=this;K.gte(T);){G=Math.max(1,Math.floor(K.toNumber()/T.toNumber()));for(var W=Math.ceil(Math.log(G)/Math.LN2),Q=W<=48?1:u(2,W-48),te=l(G),ae=te.mul(T);ae.isNegative()||ae.gt(K);)G-=Q,te=l(G,this.unsigned),ae=te.mul(T);te.isZero()&&(te=w),z=z.add(te),K=K.sub(ae)}return z},_.div=_.divide,_.modulo=function(T){if(r(T)||(T=p(T)),n){var O=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},_.mod=_.modulo,_.rem=_.modulo,_.not=function(){return c(~this.low,~this.high,this.unsigned)},_.and=function(T){return r(T)||(T=p(T)),c(this.low&T.low,this.high&T.high,this.unsigned)},_.or=function(T){return r(T)||(T=p(T)),c(this.low|T.low,this.high|T.high,this.unsigned)},_.xor=function(T){return r(T)||(T=p(T)),c(this.low^T.low,this.high^T.high,this.unsigned)},_.shiftLeft=function(T){return r(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?c(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):c(0,this.low<<T-32,this.unsigned)},_.shl=_.shiftLeft,_.shiftRight=function(T){return r(T)&&(T=T.toInt()),(T&=63)==0?this:T<32?c(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):c(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},_.shr=_.shiftRight,_.shiftRightUnsigned=function(T){if(r(T)&&(T=T.toInt()),T&=63,T===0)return this;var O=this.high;if(T<32){var G=this.low;return c(G>>>T|O<<32-T,O>>>T,this.unsigned)}else return T===32?c(O,0,this.unsigned):c(O>>>T-32,0,this.unsigned)},_.shru=_.shiftRightUnsigned,_.shr_u=_.shiftRightUnsigned,_.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},_.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},_.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},_.toBytesLE=function(){var T=this.high,O=this.low;return[O&255,O>>>8&255,O>>>16&255,O>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},_.toBytesBE=function(){var T=this.high,O=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,O>>>24,O>>>16&255,O>>>8&255,O&255]},s.fromBytes=function(T,O,G){return G?s.fromBytesLE(T,O):s.fromBytesBE(T,O)},s.fromBytesLE=function(T,O){return new s(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,O)},s.fromBytesBE=function(T,O){return new s(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],O)}}}),GE=nn({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),HE=nn({"(disabled):util"(){}}),jE=nn({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(c){var u=this,d=l();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(c),u.s0<0&&(u.s0+=1),u.s1-=d(c),u.s1<0&&(u.s1+=1),u.s2-=d(c),u.s2<0&&(u.s2+=1),d=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var d=new a(c),p=u&&u.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function l(){var c=4022871197,u=function(d){d=String(d);for(var p=0;p<d.length;p++){c+=d.charCodeAt(p);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),qE=nn({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),XE=nn({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,d==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),KE=nn({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.x,p=c.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,c.i=p+1&7,f};function u(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}u(c,l)}function o(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.x&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),ZE=nn({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var c=this;c.next=function(){var d=c.w,p=c.X,h=c.i,f,m;return c.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,c.i=h,m+(d^d>>>16)|0};function u(d,p){var h,f,m,g,y,x=[],A=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,A=Math.max(A,p.length)),m=0,g=-32;g<A;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=x[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(x[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;d.w=y,d.X=x,d.i=m}u(c,l)}function o(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.X&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),YE=nn({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var c=this,u="";c.next=function(){var p=c.b,h=c.c,f=c.d,m=c.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,c.b=p=p<<20^p>>>12^h,c.c=h=h-f|0,c.d=f<<16^h>>>16^m,c.a=m-p|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var d=0;d<u.length+20;d++)c.b^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),JE=nn({"(disabled):crypto"(){}}),QE=nn({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",c=r.pow(a,o),u=r.pow(2,i),d=u*2,p=a-1,h;function f(w,C,S){var E=[];C=C==!0?{entropy:!0}:C||{};var R=x(y(C.entropy?[w,b(s)]:w==null?A():w,3),E),F=new m(E),_=function(){for(var P=F.g(o),T=c,O=0;P<u;)P=(P+O)*a,T*=a,O=F.g(1);for(;P>=d;)P/=2,T/=2,O>>>=1;return(P+O)/T};return _.int32=function(){return F.g(4)|0},_.quick=function(){return F.g(4)/4294967296},_.double=_,x(b(F.S),s),(C.pass||S||function(P,T,O,G){return G&&(G.S&&g(G,F),P.state=function(){return g(F,{})}),O?(r[l]=P,T):P})(_,R,"global"in C?C.global:this==r,C.state)}function m(w){var C,S=w.length,E=this,R=0,F=E.i=E.j=0,_=E.S=[];for(S||(w=[S++]);R<a;)_[R]=R++;for(R=0;R<a;R++)_[R]=_[F=p&F+w[R%S]+(C=_[R])],_[F]=C;(E.g=function(P){for(var T,O=0,G=E.i,K=E.j,z=E.S;P--;)T=z[G=p&G+1],O=O*a+z[p&(z[G]=z[K=p&K+T])+(z[K]=T)];return E.i=G,E.j=K,O})(a)}function g(w,C){return C.i=w.i,C.j=w.j,C.S=w.S.slice(),C}function y(w,C){var S=[],E=typeof w,R;if(C&&E=="object")for(R in w)try{S.push(y(w[R],C-1))}catch(F){}return S.length?S:E=="string"?w:w+"\0"}function x(w,C){for(var S=w+"",E,R=0;R<S.length;)C[p&R]=p&(E^=C[p&R]*19)+S.charCodeAt(R++);return b(C)}function A(){try{var w;return h&&(w=h.randomBytes)?w=w(a):(w=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(w)),b(w)}catch(E){var C=n.navigator,S=C&&C.plugins;return[+new Date,n,S,n.screen,b(s)]}}function b(w){return String.fromCharCode.apply(0,w)}if(x(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=JE()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),wh=nn({"src/node_modules/seedrandom/index.js"(e,t){var n=jE(),s=qE(),r=XE(),a=KE(),o=ZE(),i=YE(),l=QE();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),M5=nn({"(disabled):src/node_modules/string_decoder/index.js"(){}}),kh=nn({"(disabled):fs"(){}}),ad=nn({"(disabled):path"(){}}),e9=nn({"(disabled):worker_threads"(){}}),t9=nn({"(disabled):perf_hooks"(){}}),n9=nn({"(disabled):os"(){}}),s9=nn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return re.buffer!=lt&&ts(re.buffer),ms}function o(){return re.buffer!=lt&&ts(re.buffer),kn}function i(){return re.buffer!=lt&&ts(re.buffer),gs}function l(){return re.buffer!=lt&&ts(re.buffer),Es}function c(){return re.buffer!=lt&&ts(re.buffer),Rs}var u=typeof r!="undefined"?r:{},d,p;u.ready=new Promise(function(I,D){d=I,p=D});var h;typeof process!="undefined"&&process.listeners&&(h={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f={},m;for(m in u)u.hasOwnProperty(m)&&(f[m]=u[m]);var g=[],y="./this.program",x=function(I,D){throw D},A=!1,b=!1,w=!1,C=!1;A=typeof window=="object",b=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=!A&&!w&&!b;var S=u.ENVIRONMENT_IS_PTHREAD||!1;S&&(lt=u.buffer);var E="";function R(I){return u.locateFile?u.locateFile(I,E):E+I}var F,_,P,T,O,G;if(w){b?E=ad().dirname(E)+"/":E=__dirname+"/",F=function(D,B){return O||(O=kh()),G||(G=ad()),D=G.normalize(D),O.readFileSync(D,B?null:"utf8")},P=function(D){var B=F(D,!0);return B.buffer||(B=new Uint8Array(B)),Te(B.buffer),B},process.argv.length>1&&(y=process.argv[1].replace(/\\/g,"/")),g=process.argv.slice(2),process.on("uncaughtException",function(I){if(!(I instanceof ed))throw I}),process.on("unhandledRejection",Hr),x=function(I){process.exit(I)},u.inspect=function(){return"[Emscripten Module object]"};var K;try{K=e9()}catch(I){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),I}global.Worker=K.Worker}else C?(typeof read!="undefined"&&(F=function(D){return read(D)}),P=function(D){var B;return typeof readbuffer=="function"?new Uint8Array(readbuffer(D)):(B=read(D,"binary"),Te(typeof B=="object"),B)},typeof scriptArgs!="undefined"?g=scriptArgs:typeof arguments!="undefined"&&(g=arguments),typeof quit=="function"&&(x=function(I){quit(I)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(A||b)&&(b?E=self.location.href:typeof document!="undefined"&&document.currentScript&&(E=document.currentScript.src),typeof s!="undefined"&&s&&(E=s),E.indexOf("blob:")!==0?E=E.substr(0,E.lastIndexOf("/")+1):E="",w?(F=function(D,B){return O||(O=kh()),G||(G=ad()),D=G.normalize(D),O.readFileSync(D,B?null:"utf8")},P=function(D){var B=F(D,!0);return B.buffer||(B=new Uint8Array(B)),Te(B.buffer),B}):(F=function(I){var D=new XMLHttpRequest;return D.open("GET",I,!1),D.send(null),D.responseText},b&&(P=function(I){var D=new XMLHttpRequest;return D.open("GET",I,!1),D.responseType="arraybuffer",D.send(null),new Uint8Array(D.response)}),_=function(I,D,B){var ee=new XMLHttpRequest;ee.open("GET",I,!0),ee.responseType="arraybuffer",ee.onload=function(){if(ee.status==200||ee.status==0&&ee.response){D(ee.response);return}B()},ee.onerror=B,ee.send(null)}),T=function(I){document.title=I});w&&typeof performance=="undefined"&&(global.performance=t9().performance);var z=u.print||console.log.bind(console),j=u.printErr||console.warn.bind(console);for(m in f)f.hasOwnProperty(m)&&(u[m]=f[m]);f=null,u.arguments&&(g=u.arguments),u.thisProgram&&(y=u.thisProgram),u.quit&&(x=u.quit);function W(I){W.shown||(W.shown={}),W.shown[I]||(W.shown[I]=1,j(I))}var Q=Atomics.load,te=Atomics.store,ae=Atomics.compareExchange,Z;u.wasmBinary&&(Z=u.wasmBinary);var oe=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Hr("no native wasm support detected");var re,ge,ve=!1,Re;function Te(I,D){I||Hr("Assertion failed: "+D)}function Pe(I){var D=u["_"+I];return Te(D,"Cannot call unknown function "+I+", make sure it is exported"),D}function Ue(I,D,B,ee,xe){var ye={string:function(On){var nu=0;if(On!=null&&On!==0){var P5=(On.length<<2)+1;nu=Ql(P5),it(On,nu,P5)}return nu},array:function(On){var nu=Ql(On.length);return _t(On,nu),nu}};function Ae(On){return D==="string"?Ye(On):D==="boolean"?Boolean(On):On}var Ne=Pe(I),ht=[],mn=0;if(ee)for(var tn=0;tn<ee.length;tn++){var Ta=ye[B[tn]];Ta?(mn===0&&(mn=Qc()),ht[tn]=Ta(ee[tn])):ht[tn]=ee[tn]}var tu=Ne.apply(null,ht);return tu=Ae(tu),mn!==0&&Jl(mn),tu}function ot(I,D,B,ee){B=B||[];var xe=B.every(function(Ae){return Ae==="number"}),ye=D!=="string";return ye&&xe&&!ee?Pe(I):function(){return Ue(I,D,B,arguments,ee)}}function Qe(I,D,B){for(var ee=D+B,xe="";!(D>=ee);){var ye=I[D++];if(!ye)return xe;if(!(ye&128)){xe+=String.fromCharCode(ye);continue}var Ae=I[D++]&63;if((ye&224)==192){xe+=String.fromCharCode((ye&31)<<6|Ae);continue}var Ne=I[D++]&63;if((ye&240)==224?ye=(ye&15)<<12|Ae<<6|Ne:ye=(ye&7)<<18|Ae<<12|Ne<<6|I[D++]&63,ye<65536)xe+=String.fromCharCode(ye);else{var ht=ye-65536;xe+=String.fromCharCode(55296|ht>>10,56320|ht&1023)}}return xe}function Ye(I,D){return I?Qe(o(),I,D):""}function gt(I,D,B,ee){if(!(ee>0))return 0;for(var xe=B,ye=B+ee-1,Ae=0;Ae<I.length;++Ae){var Ne=I.charCodeAt(Ae);if(Ne>=55296&&Ne<=57343){var ht=I.charCodeAt(++Ae);Ne=65536+((Ne&1023)<<10)|ht&1023}if(Ne<=127){if(B>=ye)break;D[B++]=Ne}else if(Ne<=2047){if(B+1>=ye)break;D[B++]=192|Ne>>6,D[B++]=128|Ne&63}else if(Ne<=65535){if(B+2>=ye)break;D[B++]=224|Ne>>12,D[B++]=128|Ne>>6&63,D[B++]=128|Ne&63}else{if(B+3>=ye)break;D[B++]=240|Ne>>18,D[B++]=128|Ne>>12&63,D[B++]=128|Ne>>6&63,D[B++]=128|Ne&63}}return D[B]=0,B-xe}function it(I,D,B){return gt(I,o(),D,B)}function yt(I){for(var D=0,B=0;B<I.length;++B){var ee=I.charCodeAt(B);ee>=55296&&ee<=57343&&(ee=65536+((ee&1023)<<10)|I.charCodeAt(++B)&1023),ee<=127?++D:ee<=2047?D+=2:ee<=65535?D+=3:D+=4}return D}function _t(I,D){a().set(I,D)}function Qn(I,D){return I%D>0&&(I+=D-I%D),I}var lt,ms,kn,js,es,gs,Es,qs,Rs;function ts(I){lt=I,u.HEAP8=ms=new Int8Array(I),u.HEAP16=js=new Int16Array(I),u.HEAP32=gs=new Int32Array(I),u.HEAPU8=kn=new Uint8Array(I),u.HEAPU16=es=new Uint16Array(I),u.HEAPU32=Es=new Uint32Array(I),u.HEAPF32=qs=new Float32Array(I),u.HEAPF64=Rs=new Float64Array(I)}var ba=u.INITIAL_MEMORY||16777216;if(S)re=u.wasmMemory,lt=u.buffer;else if(u.wasmMemory)re=u.wasmMemory;else if(re=new WebAssembly.Memory({initial:ba/65536,maximum:2147483648/65536,shared:!0}),!(re.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");re&&(lt=re.buffer),ba=lt.byteLength,ts(lt);var Nn,va=[],_s=[],Vc=[],Uc=[],Gr=[],Xp=!1,V0=!1;S||_s.push({func:function(){ph()}});function Kp(){if(!S){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)U0(u.preRun.shift());ql(va)}}function Zp(){Xp=!0,!S&&ql(_s)}function Yp(){S||ql(Vc)}function ns(){S||(V0=!0)}function Jp(){if(!S){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)G0(u.postRun.shift());ql(Gr)}}function U0(I){va.unshift(I)}function G0(I){Gr.unshift(I)}var Xs=0,Gc=null,li=null;function H0(I){Te(!S,"addRunDependency cannot be used in a pthread worker"),Xs++,u.monitorRunDependencies&&u.monitorRunDependencies(Xs)}function j0(I){if(Xs--,u.monitorRunDependencies&&u.monitorRunDependencies(Xs),Xs==0&&(Gc!==null&&(clearInterval(Gc),Gc=null),li)){var D=li;li=null,D()}}u.preloadedImages={},u.preloadedAudios={};function Hr(I){u.onAbort&&u.onAbort(I),S&&console.error("Pthread aborting at "+new Error().stack),I+="",j(I),ve=!0,Re=1,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.";var D=new WebAssembly.RuntimeError(I);throw p(D),D}function ui(I,D){return String.prototype.startsWith?I.startsWith(D):I.indexOf(D)===0}var q0="data:application/octet-stream;base64,";function Qp(I){return ui(I,q0)}var X0="file://";function eh(I){return ui(I,X0)}var ss="tfjs-backend-wasm-threaded-simd.wasm";Qp(ss)||(ss=R(ss));function K0(I){try{if(I==ss&&Z)return new Uint8Array(Z);if(P)return P(I);throw"both async and sync fetching of the wasm failed"}catch(D){Hr(D)}}function th(){if(!Z&&(A||b)){if(typeof fetch=="function"&&!eh(ss))return fetch(ss,{credentials:"same-origin"}).then(function(I){if(!I.ok)throw"failed to load wasm binary file at '"+ss+"'";return I.arrayBuffer()}).catch(function(){return K0(ss)});if(_)return new Promise(function(I,D){_(ss,function(B){I(new Uint8Array(B))},D)})}return Promise.resolve().then(function(){return K0(ss)})}function Z0(){var I={a:Vg};function D(Ae,Ne){var ht=Ae.exports;if(u.asm=ht,Nn=u.asm.nb,ge=Ne,!S){var mn=_e.unusedWorkers.length;_e.unusedWorkers.forEach(function(tn){_e.loadWasmModuleToWorker(tn,function(){--mn||j0("wasm-instantiate")})})}}S||H0("wasm-instantiate");function B(Ae){D(Ae.instance,Ae.module)}function ee(Ae){return th().then(function(Ne){return WebAssembly.instantiate(Ne,I)}).then(Ae,function(Ne){j("failed to asynchronously prepare wasm: "+Ne),Hr(Ne)})}function xe(){return!Z&&typeof WebAssembly.instantiateStreaming=="function"&&!Qp(ss)&&!eh(ss)&&typeof fetch=="function"?fetch(ss,{credentials:"same-origin"}).then(function(Ae){var Ne=WebAssembly.instantiateStreaming(Ae,I);return Ne.then(B,function(ht){return j("wasm streaming compile failed: "+ht),j("falling back to ArrayBuffer instantiation"),ee(B)})}):ee(B)}if(u.instantiateWasm)try{var ye=u.instantiateWasm(I,D);return ye}catch(Ae){return j("Module.instantiateWasm callback failed with error: "+Ae),!1}return xe().catch(p),{}}var nh={10216:function(){throw"Canceled!"},10234:function(I,D){setTimeout(function(){N5(I,D)},0)}};function Y0(){_e.initRuntime()}function ql(I){for(;I.length>0;){var D=I.shift();if(typeof D=="function"){D(u);continue}var B=D.func;typeof B=="number"?D.arg===void 0?Nn.get(B)():Nn.get(B)(D.arg):B(D.arg===void 0?null:D.arg)}}var wa={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Hc(I,D){if(I<=0||I>a().length||I&!0||D<0)return-28;if(D==0)return 0;D>=2147483647&&(D=1/0);var B=Atomics.load(i(),eu>>2),ee=0;if(B==I){var xe=Atomics.compareExchange(i(),eu>>2,B,0);if(xe==B&&(--D,ee=1,D<=0))return 1}var ye=Atomics.notify(i(),I>>2,D);if(ye>=0)return ye+ee;throw"Atomics.notify returned an unexpected value "+ye}u._emscripten_futex_wake=Hc;function J0(I){if(S)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in killThread!";i()[I+12>>2]=0;var D=_e.pthreads[I];D.worker.terminate(),_e.freeThreadData(D),_e.runningWorkers.splice(_e.runningWorkers.indexOf(D.worker),1),D.worker.pthread=void 0}function Q0(I){if(S)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cancelThread!";var D=_e.pthreads[I];D.worker.postMessage({cmd:"cancel"})}function sh(I){if(S)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in cleanupThread!";var D=_e.pthreads[I];if(D){i()[I+12>>2]=0;var B=D.worker;_e.returnWorkerToPool(B)}}var _e={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var I=8,D=0;D<I;++D)_e.allocateUnusedWorker()},initRuntime:function(){for(var I=di(228),D=0;D<228/4;++D)l()[I/4+D]=0;i()[I+12>>2]=I;var B=I+152;i()[B>>2]=B;for(var ee=di(512),D=0;D<128;++D)l()[ee/4+D]=0;Atomics.store(l(),I+100>>2,ee),Atomics.store(l(),I+40>>2,I),p2(I,!b,1),C5(I)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;_e.threadExitHandlers.length>0;)_e.threadExitHandlers.pop()();S&&Ca()&&I5()},runExitHandlersAndDeinitThread:function(I,D){Atomics.store(l(),I+56>>2,1),Atomics.store(l(),I+60>>2,0),_e.runExitHandlers(),Atomics.store(l(),I+4>>2,D),Atomics.store(l(),I+0>>2,1),Hc(I+0,2147483647),p2(0,0,0)},threadExit:function(I){var D=Ca();D&&(_e.runExitHandlersAndDeinitThread(D,I),S&&postMessage({cmd:"exit"}))},threadCancel:function(){_e.runExitHandlersAndDeinitThread(Ca(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var I in _e.pthreads){var D=_e.pthreads[I];D&&D.worker&&_e.returnWorkerToPool(D.worker)}_e.pthreads={};for(var B=0;B<_e.unusedWorkers.length;++B){var ee=_e.unusedWorkers[B];ee.terminate()}_e.unusedWorkers=[];for(var B=0;B<_e.runningWorkers.length;++B){var ee=_e.runningWorkers[B],D=ee.pthread;_e.freeThreadData(D),ee.terminate()}_e.runningWorkers=[]},freeThreadData:function(I){if(!!I){if(I.threadInfoStruct){var D=i()[I.threadInfoStruct+100>>2];i()[I.threadInfoStruct+100>>2]=0,Jc(D),Jc(I.threadInfoStruct)}I.threadInfoStruct=0,I.allocatedOwnStack&&I.stackBase&&Jc(I.stackBase),I.stackBase=0,I.worker&&(I.worker.pthread=null)}},returnWorkerToPool:function(I){_e.runWithoutMainThreadQueuedCalls(function(){delete _e.pthreads[I.pthread.threadInfoStruct],_e.unusedWorkers.push(I),_e.runningWorkers.splice(_e.runningWorkers.indexOf(I),1),_e.freeThreadData(I.pthread),I.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(I){i()[$5>>2]=0;try{I()}finally{i()[$5>>2]=1}},receiveObjectTransfer:function(I){},loadWasmModuleToWorker:function(I,D){I.onmessage=function(B){var ee=B.data,xe=ee.cmd;if(I.pthread&&(_e.currentProxiedOperationCallerThread=I.pthread.threadInfoStruct),ee.targetThread&&ee.targetThread!=Ca()){var ye=_e.pthreads[ee.targetThread];ye?ye.worker.postMessage(B.data,ee.transferList):console.error('Internal error! Worker sent a message "'+xe+'" to target pthread '+ee.targetThread+", but that thread no longer exists!"),_e.currentProxiedOperationCallerThread=void 0;return}if(xe==="processQueuedMainThreadWork")yh();else if(xe==="spawnThread")ch(B.data);else if(xe==="cleanupThread")sh(ee.thread);else if(xe==="killThread")J0(ee.thread);else if(xe==="cancelThread")Q0(ee.thread);else if(xe==="loaded")I.loaded=!0,D&&D(I),I.runPthread&&(I.runPthread(),delete I.runPthread);else if(xe==="print")z("Thread "+ee.threadId+": "+ee.text);else if(xe==="printErr")j("Thread "+ee.threadId+": "+ee.text);else if(xe==="alert")alert("Thread "+ee.threadId+": "+ee.text);else if(xe==="exit"){var Ae=I.pthread&&Atomics.load(l(),I.pthread.threadInfoStruct+64>>2);Ae&&_e.returnWorkerToPool(I)}else if(xe==="exitProcess")try{$E(ee.returnCode)}catch(Ne){if(Ne instanceof ed)return;throw Ne}else xe==="cancelDone"?_e.returnWorkerToPool(I):xe==="objectTransfer"?_e.receiveObjectTransfer(B.data):B.data.target==="setimmediate"?I.postMessage(B.data):j("worker sent an unknown command "+xe);_e.currentProxiedOperationCallerThread=void 0},I.onerror=function(B){j("pthread sent an error! "+B.filename+":"+B.lineno+": "+B.message)},w&&(I.on("message",function(B){I.onmessage({data:B})}),I.on("error",function(B){I.onerror(B)}),I.on("exit",function(B){})),I.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||s,wasmMemory:re,wasmModule:ge})},allocateUnusedWorker:function(){var I=R("tfjs-backend-wasm-threaded-simd.worker.js");_e.unusedWorkers.push(new Worker(I))},getNewWorker:function(){return _e.unusedWorkers.length==0&&(_e.allocateUnusedWorker(),_e.loadWasmModuleToWorker(_e.unusedWorkers[0])),_e.unusedWorkers.length>0?_e.unusedWorkers.pop():null},busySpinWait:function(I){for(var D=performance.now()+I;performance.now()<D;);}};function eg(I,D){_5(I,D),Jl(I)}u.establishStackSpace=eg;function tg(){return oe}u.getNoExitRuntime=tg;function ng(I,D){return Nn.get(I)(D)}u.invokeEntryPoint=ng;function sg(I,D,B,ee){Hr("Assertion failed: "+Ye(I)+", at: "+[D?Ye(D):"unknown filename",B,ee?Ye(ee):"unknown function"])}function rg(I,D){var B=_main(I,D)}var ci;w?ci=function(){var I=process.hrtime();return I[0]*1e3+I[1]/1e6}:S?ci=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?ci=dateNow:ci=function(){return performance.now()};function ag(I){return i()[k5()>>2]=I,I}function og(I,D){if(S)return ka(1,1,I,D)}function ig(I,D){if(I==D)postMessage({cmd:"processQueuedMainThreadWork"});else if(S)postMessage({targetThread:I,cmd:"processThreadQueue"});else{var B=_e.pthreads[I],ee=B&&B.worker;if(!ee)return;ee.postMessage({cmd:"processThreadQueue"})}return 1}function lg(){Hr()}function ug(I,D,B){var ee=hg(D,B);return nh[I].apply(null,ee)}function cg(I,D){}function rh(I,D,B){if(I<=0||I>a().length||I&!0)return-28;if(A){if(Atomics.load(i(),I>>2)!=D)return-6;for(var xe=performance.now(),ye=xe+B,Ae=Atomics.exchange(i(),eu>>2,I);;){if(xe=performance.now(),xe>ye)return Ae=Atomics.exchange(i(),eu>>2,0),-73;if(Ae=Atomics.exchange(i(),eu>>2,0),Ae==0)break;if(yh(),Atomics.load(i(),I>>2)!=D)return-6;Ae=Atomics.exchange(i(),eu>>2,I)}return 0}else{var ee=Atomics.wait(i(),I>>2,D,B);if(ee==="timed-out")return-73;if(ee==="not-equal")return-6;if(ee==="ok")return 0;throw"Atomics.wait returned an unexpected value "+ee}}function dg(I,D,B){o().copyWithin(I,D,D+B)}function pg(){return w?n9().cpus().length:navigator.hardwareConcurrency}function ka(I,D){for(var B=arguments.length-2,ee=Qc(),xe=B,ye=Ql(xe*8),Ae=ye>>3,Ne=0;Ne<B;Ne++){var ht=arguments[2+Ne];c()[Ae+Ne]=ht}var mn=R5(I,xe,ye,D);return Jl(ee),mn}var jc=[],qc=[];function hg(I,D){qc.length=0;var B;for(D>>=2;B=o()[I++];){var ee=B<105;ee&&D&1&&D++,qc.push(ee?c()[D++>>1]:i()[D]),++D}return qc}function fg(I,D,B){jc.length=D;for(var ee=B>>3,xe=0;xe<D;xe++)jc[xe]=c()[ee+xe];var ye=I<0,Ae=ye?nh[-I-1]:Wg[I];return Ae.apply(null,jc)}function mg(){return o().length}function gg(I){try{return re.grow(I-lt.byteLength+65535>>>16),ts(re.buffer),1}catch(D){}}function yg(I){var D=mg();if(I<=D)return!1;var B=2147483648;if(I>B)return!1;for(var ee=1;ee<=4;ee*=2){var xe=D*(1+.2/ee);xe=Math.min(xe,I+100663296);var ye=Math.min(B,Qn(Math.max(I,xe),65536)),Ae=gg(ye);if(Ae)return!0}return!1}var Ge={inEventHandler:0,removeAllEventListeners:function(){for(var I=Ge.eventHandlers.length-1;I>=0;--I)Ge._removeHandler(I);Ge.eventHandlers=[],Ge.deferredCalls=[]},registerRemoveEventListeners:function(){Ge.removeEventListenersRegistered||(Uc.push(Ge.removeAllEventListeners),Ge.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(I,D,B){function ee(Ae,Ne){if(Ae.length!=Ne.length)return!1;for(var ht in Ae)if(Ae[ht]!=Ne[ht])return!1;return!0}for(var xe in Ge.deferredCalls){var ye=Ge.deferredCalls[xe];if(ye.targetFunction==I&&ee(ye.argsList,B))return}Ge.deferredCalls.push({targetFunction:I,precedence:D,argsList:B}),Ge.deferredCalls.sort(function(Ae,Ne){return Ae.precedence<Ne.precedence})},removeDeferredCalls:function(I){for(var D=0;D<Ge.deferredCalls.length;++D)Ge.deferredCalls[D].targetFunction==I&&(Ge.deferredCalls.splice(D,1),--D)},canPerformEventHandlerRequests:function(){return Ge.inEventHandler&&Ge.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Ge.canPerformEventHandlerRequests())for(var I=0;I<Ge.deferredCalls.length;++I){var D=Ge.deferredCalls[I];Ge.deferredCalls.splice(I,1),--I,D.targetFunction.apply(null,D.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(I,D){for(var B=0;B<Ge.eventHandlers.length;++B)Ge.eventHandlers[B].target==I&&(!D||D==Ge.eventHandlers[B].eventTypeString)&&Ge._removeHandler(B--)},_removeHandler:function(I){var D=Ge.eventHandlers[I];D.target.removeEventListener(D.eventTypeString,D.eventListenerFunc,D.useCapture),Ge.eventHandlers.splice(I,1)},registerOrRemoveHandler:function(I){var D=function(xe){++Ge.inEventHandler,Ge.currentEventHandler=I,Ge.runDeferredCalls(),I.handlerFunc(xe),Ge.runDeferredCalls(),--Ge.inEventHandler};if(I.callbackfunc)I.eventListenerFunc=D,I.target.addEventListener(I.eventTypeString,D,I.useCapture),Ge.eventHandlers.push(I),Ge.registerRemoveEventListeners();else for(var B=0;B<Ge.eventHandlers.length;++B)Ge.eventHandlers[B].target==I.target&&Ge.eventHandlers[B].eventTypeString==I.eventTypeString&&Ge._removeHandler(B--)},queueEventHandlerOnThread_iiii:function(I,D,B,ee,xe){var ye=Qc(),Ae=Ql(12);i()[Ae>>2]=B,i()[Ae+4>>2]=ee,i()[Ae+8>>2]=xe,d2(0,I,637534208,D,ee,Ae),Jl(ye)},getTargetThreadForEventCallback:function(I){switch(I){case 1:return 0;case 2:return _e.currentProxiedOperationCallerThread;default:return I}},getNodeNameForTarget:function(I){return I?I==window?"#window":I==screen?"#screen":I&&I.nodeName?I.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Ag(I){var D=yt(I)+1,B=di(D);return it(I,B,D),B}function xg(I,D,B,ee){var xe=Qc(),ye=Ql(12),Ae=0;D&&(Ae=Ag(D)),i()[ye>>2]=Ae,i()[ye+4>>2]=B,i()[ye+8>>2]=ee,d2(0,I,657457152,0,Ae,ye),Jl(xe)}function bg(I,D,B,ee){D=D?Ye(D):"",xg(I,D,B,ee)}function vg(I){return I>2?Ye(I):I}var wg=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function kg(I){I=vg(I);var D=wg[I]||(typeof document!="undefined"?document.querySelector(I):void 0);return D}function Xc(I){return kg(I)}function ah(I,D,B){var ee=Xc(I);if(!ee)return-4;if(ee.canvasSharedPtr&&(i()[ee.canvasSharedPtr>>2]=D,i()[ee.canvasSharedPtr+4>>2]=B),ee.offscreenCanvas||!ee.controlTransferredOffscreen){ee.offscreenCanvas&&(ee=ee.offscreenCanvas);var xe=!1;if(ee.GLctxObject&&ee.GLctxObject.GLctx){var ye=ee.GLctxObject.GLctx.getParameter(2978);xe=ye[0]===0&&ye[1]===0&&ye[2]===ee.width&&ye[3]===ee.height}ee.width=D,ee.height=B,xe&&ee.GLctxObject.GLctx.viewport(0,0,D,B)}else if(ee.canvasSharedPtr){var Ae=i()[ee.canvasSharedPtr+8>>2];return bg(Ae,I,D,B),1}else return-4;return 0}function oh(I,D,B){return S?ka(2,1,I,D,B):ah(I,D,B)}function Sg(I,D,B){var ee=Xc(I);return ee?ah(I,D,B):oh(I,D,B)}function Ig(I){}function Cg(I,D){}function Tg(I){var D=I.getExtension("ANGLE_instanced_arrays");if(D)return I.vertexAttribDivisor=function(B,ee){D.vertexAttribDivisorANGLE(B,ee)},I.drawArraysInstanced=function(B,ee,xe,ye){D.drawArraysInstancedANGLE(B,ee,xe,ye)},I.drawElementsInstanced=function(B,ee,xe,ye,Ae){D.drawElementsInstancedANGLE(B,ee,xe,ye,Ae)},1}function Ng(I){var D=I.getExtension("OES_vertex_array_object");if(D)return I.createVertexArray=function(){return D.createVertexArrayOES()},I.deleteVertexArray=function(B){D.deleteVertexArrayOES(B)},I.bindVertexArray=function(B){D.bindVertexArrayOES(B)},I.isVertexArray=function(B){return D.isVertexArrayOES(B)},1}function Eg(I){var D=I.getExtension("WEBGL_draw_buffers");if(D)return I.drawBuffers=function(B,ee){D.drawBuffersWEBGL(B,ee)},1}function Rg(I){return!!(I.multiDrawWebgl=I.getExtension("WEBGL_multi_draw"))}var dt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(D){dt.lastError||(dt.lastError=D)},getNewId:function(I){for(var D=dt.counter++,B=I.length;B<D;B++)I[B]=null;return D},getSource:function(I,D,B,ee){for(var xe="",ye=0;ye<D;++ye){var Ae=ee?i()[ee+ye*4>>2]:-1;xe+=Ye(i()[B+ye*4>>2],Ae<0?void 0:Ae)}return xe},createContext:function(I,D){var B=I.getContext("webgl",D);if(!B)return 0;var ee=dt.registerContext(B,D);return ee},registerContext:function(I,D){var B=di(8);i()[B+4>>2]=Ca();var ee={handle:B,attributes:D,version:D.majorVersion,GLctx:I};return I.canvas&&(I.canvas.GLctxObject=ee),dt.contexts[B]=ee,(typeof D.enableExtensionsByDefault=="undefined"||D.enableExtensionsByDefault)&&dt.initExtensions(ee),B},makeContextCurrent:function(I){return dt.currentContext=dt.contexts[I],u.ctx=Sa=dt.currentContext&&dt.currentContext.GLctx,!(I&&!Sa)},getContext:function(I){return dt.contexts[I]},deleteContext:function(I){dt.currentContext===dt.contexts[I]&&(dt.currentContext=null),typeof Ge=="object"&&Ge.removeAllHandlersOnTarget(dt.contexts[I].GLctx.canvas),dt.contexts[I]&&dt.contexts[I].GLctx.canvas&&(dt.contexts[I].GLctx.canvas.GLctxObject=void 0),Jc(dt.contexts[I].handle),dt.contexts[I]=null},initExtensions:function(I){if(I||(I=dt.currentContext),!I.initExtensionsDone){I.initExtensionsDone=!0;var D=I.GLctx;Tg(D),Ng(D),Eg(D),D.disjointTimerQueryExt=D.getExtension("EXT_disjoint_timer_query"),Rg(D);var B=D.getSupportedExtensions()||[];B.forEach(function(ee){ee.indexOf("lose_context")<0&&ee.indexOf("debug")<0&&D.getExtension(ee)})}},populateUniformTable:function(I){for(var D=dt.programs[I],B=dt.programInfos[I]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},ee=B.uniforms,xe=Sa.getProgramParameter(D,35718),ye=0;ye<xe;++ye){var Ae=Sa.getActiveUniform(D,ye),Ne=Ae.name;B.maxUniformLength=Math.max(B.maxUniformLength,Ne.length+1),Ne.slice(-1)=="]"&&(Ne=Ne.slice(0,Ne.lastIndexOf("[")));var ht=Sa.getUniformLocation(D,Ne);if(ht){var mn=dt.getNewId(dt.uniforms);ee[Ne]=[Ae.size,mn],dt.uniforms[mn]=ht;for(var tn=1;tn<Ae.size;++tn){var Ta=Ne+"["+tn+"]";ht=Sa.getUniformLocation(D,Ta),mn=dt.getNewId(dt.uniforms),dt.uniforms[mn]=ht}}}}},_g=["default","low-power","high-performance"];function Dg(I,D){var B=D>>2,ee=i()[B+(24>>2)],xe={alpha:!!i()[B+(0>>2)],depth:!!i()[B+(4>>2)],stencil:!!i()[B+(8>>2)],antialias:!!i()[B+(12>>2)],premultipliedAlpha:!!i()[B+(16>>2)],preserveDrawingBuffer:!!i()[B+(20>>2)],powerPreference:_g[ee],failIfMajorPerformanceCaveat:!!i()[B+(28>>2)],majorVersion:i()[B+(32>>2)],minorVersion:i()[B+(36>>2)],enableExtensionsByDefault:i()[B+(40>>2)],explicitSwapControl:i()[B+(44>>2)],proxyContextToMainThread:i()[B+(48>>2)],renderViaOffscreenBackBuffer:i()[B+(52>>2)]},ye=Xc(I);if(!ye||xe.explicitSwapControl)return 0;var Ae=dt.createContext(ye,xe);return Ae}function $g(I,D){return Dg(I,D)}var Xl={mappings:{},buffers:[null,[],[]],printChar:function(I,D){var B=Xl.buffers[I];D===0||D===10?((I===1?z:j)(Qe(B,0)),B.length=0):B.push(D)},varargs:void 0,get:function(){Xl.varargs+=4;var I=i()[Xl.varargs-4>>2];return I},getStr:function(I){var D=Ye(I);return D},get64:function(I,D){return I}};function ih(I){return S?ka(3,1,I):0}function lh(I,D,B,ee,xe){if(S)return ka(4,1,I,D,B,ee,xe)}function uh(I,D,B,ee){if(S)return ka(5,1,I,D,B,ee);for(var xe=0,ye=0;ye<B;ye++){for(var Ae=i()[D+ye*8>>2],Ne=i()[D+(ye*8+4)>>2],ht=0;ht<Ne;ht++)Xl.printChar(I,o()[Ae+ht]);xe+=Ne}return i()[ee>>2]=xe,0}function Pg(I){var D=_e.threadExitHandlers.pop();I&&D()}function Fg(I,D){_e.threadExitHandlers.push(function(){Nn.get(I)(D)})}function ch(I){if(S)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var D=_e.getNewWorker();if(D.pthread!==void 0)throw"Internal error!";if(!I.pthread_ptr)throw"Internal error, no pthread ptr!";_e.runningWorkers.push(D);for(var B=di(128*4),ee=0;ee<128;++ee)i()[B+ee*4>>2]=0;var xe=I.stackBase+I.stackSize,ye=_e.pthreads[I.pthread_ptr]={worker:D,stackBase:I.stackBase,stackSize:I.stackSize,allocatedOwnStack:I.allocatedOwnStack,threadInfoStruct:I.pthread_ptr},Ae=ye.threadInfoStruct>>2;Atomics.store(l(),Ae+(64>>2),I.detached),Atomics.store(l(),Ae+(100>>2),B),Atomics.store(l(),Ae+(40>>2),ye.threadInfoStruct),Atomics.store(l(),Ae+(80>>2),I.stackSize),Atomics.store(l(),Ae+(76>>2),xe),Atomics.store(l(),Ae+(104>>2),I.stackSize),Atomics.store(l(),Ae+(104+8>>2),xe),Atomics.store(l(),Ae+(104+12>>2),I.detached);var Ne=S5(),ht=Ne+40;Atomics.store(l(),Ae+(172>>2),ht),D.pthread=ye;var mn={cmd:"run",start_routine:I.startRoutine,arg:I.arg,threadInfoStruct:I.pthread_ptr,stackBase:I.stackBase,stackSize:I.stackSize};D.runPthread=function(){mn.time=performance.now(),D.postMessage(mn,I.transferList)},D.loaded&&(D.runPthread(),delete D.runPthread)}function Og(I,D,B,ee){if(typeof SharedArrayBuffer=="undefined")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!I)return j("pthread_create called with a null thread pointer!"),28;var xe=[],ye=0;if(S&&(xe.length===0||ye))return E5(687865856,I,D,B,ee);if(ye)return ye;var Ae=0,Ne=0,ht=0;D&&D!=-1?(Ae=i()[D>>2],Ae+=81920,Ne=i()[D+8>>2],ht=i()[D+12>>2]!==0):Ae=2097152;var mn=Ne==0;mn?Ne=D5(16,Ae):(Ne-=Ae,Te(Ne>0));for(var tn=di(228),Ta=0;Ta<228>>2;++Ta)l()[(tn>>2)+Ta]=0;i()[I>>2]=tn,i()[tn+12>>2]=tn;var tu=tn+152;i()[tu>>2]=tu;var On={stackBase:Ne,stackSize:Ae,allocatedOwnStack:mn,detached:ht,startRoutine:B,pthread_ptr:tn,arg:ee,transferList:xe};return S?(On.cmd="spawnThread",postMessage(On,xe)):ch(On),0}function Mg(){if(!!S){var I=Ca();if(!!I){var D=Atomics.load(l(),I+56>>2);if(!D){var B=Atomics.load(l(),I+0>>2);if(B==2)throw"Canceled!"}}}}function zg(){w||b||W("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Lg(I,D,B){if(!I)return j("pthread_join attempted on a null thread pointer!"),wa.ESRCH;if(S&&Ca()==I)return j("PThread "+I+" is attempting to join to itself!"),wa.EDEADLK;if(!S&&T5()==I)return j("Main thread "+I+" is attempting to join to itself!"),wa.EDEADLK;var ee=i()[I+12>>2];if(ee!==I)return j("pthread_join attempted on thread "+I+", which does not point to a valid thread, or does not exist anymore!"),wa.ESRCH;var xe=Atomics.load(l(),I+64>>2);if(xe)return j("Attempted to join thread "+I+", which was already detached!"),wa.EINVAL;for(B&&zg();;){var ye=Atomics.load(l(),I+0>>2);if(ye==1){var Ae=Atomics.load(l(),I+4>>2);return D&&(i()[D>>2]=Ae),Atomics.store(l(),I+64>>2,1),S?postMessage({cmd:"cleanupThread",thread:I}):sh(I),0}if(!B)return wa.EBUSY;Mg(),S||yh(),rh(I+0,ye,S?100:1)}}function Bg(I,D){return Lg(I,D,!0)}function dh(I){if(S)return ka(6,1,I);switch(I){case 30:return 16384;case 85:var D=2147483648;return D/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return ag(28),-1}S||_e.initMainThreadBlock();var Sa,Wg=[null,og,oh,ih,lh,uh,dh],Vg={e:sg,r:rg,x:ig,b:lg,y:ug,j:cg,d:rh,c:Hc,f:ci,p:dg,A:pg,u:fg,q:yg,v:Sg,i:Ig,s:Cg,w:$g,l:ih,n:lh,g:uh,o:Y0,a:re||u.wasmMemory,z:Pg,k:Fg,h:Og,m:Bg,t:dh},w5=Z0(),ph=u.___wasm_call_ctors=function(){return(ph=u.___wasm_call_ctors=u.asm.B).apply(null,arguments)},Ug=u._init=function(){return(Ug=u._init=u.asm.C).apply(null,arguments)},Gg=u._init_with_threads_count=function(){return(Gg=u._init_with_threads_count=u.asm.D).apply(null,arguments)},Hg=u._get_threads_count=function(){return(Hg=u._get_threads_count=u.asm.E).apply(null,arguments)},jg=u._register_tensor=function(){return(jg=u._register_tensor=u.asm.F).apply(null,arguments)},qg=u._dispose_data=function(){return(qg=u._dispose_data=u.asm.G).apply(null,arguments)},Xg=u._dispose=function(){return(Xg=u._dispose=u.asm.H).apply(null,arguments)},Kg=u._Abs=function(){return(Kg=u._Abs=u.asm.I).apply(null,arguments)},Zg=u._Add=function(){return(Zg=u._Add=u.asm.J).apply(null,arguments)},Yg=u._AddN=function(){return(Yg=u._AddN=u.asm.K).apply(null,arguments)},Jg=u._All=function(){return(Jg=u._All=u.asm.L).apply(null,arguments)},Qg=u._Any=function(){return(Qg=u._Any=u.asm.M).apply(null,arguments)},e2=u._ArgMax=function(){return(e2=u._ArgMax=u.asm.N).apply(null,arguments)},t2=u._AvgPool=function(){return(t2=u._AvgPool=u.asm.O).apply(null,arguments)},n2=u._BatchMatMul=function(){return(n2=u._BatchMatMul=u.asm.P).apply(null,arguments)},s2=u._Ceil=function(){return(s2=u._Ceil=u.asm.Q).apply(null,arguments)},r2=u._ClipByValue=function(){return(r2=u._ClipByValue=u.asm.R).apply(null,arguments)},a2=u._Conv2D=function(){return(a2=u._Conv2D=u.asm.S).apply(null,arguments)},o2=u._Conv2DBackpropInput=function(){return(o2=u._Conv2DBackpropInput=u.asm.T).apply(null,arguments)},i2=u._Cos=function(){return(i2=u._Cos=u.asm.U).apply(null,arguments)},l2=u._Cosh=function(){return(l2=u._Cosh=u.asm.V).apply(null,arguments)},hh=u._CropAndResize=function(){return(hh=u._CropAndResize=u.asm.W).apply(null,arguments)},fh=u._Cumsum=function(){return(fh=u._Cumsum=u.asm.X).apply(null,arguments)},Kc=u._DepthToSpace=function(){return(Kc=u._DepthToSpace=u.asm.Y).apply(null,arguments)},Kl=u._DepthwiseConv2dNative=function(){return(Kl=u._DepthwiseConv2dNative=u.asm.Z).apply(null,arguments)},u2=u._Elu=function(){return(u2=u._Elu=u.asm._).apply(null,arguments)},Zc=u._Equal=function(){return(Zc=u._Equal=u.asm.$).apply(null,arguments)},Zl=u._Exp=function(){return(Zl=u._Exp=u.asm.aa).apply(null,arguments)},Yl=u._FlipLeftRight=function(){return(Yl=u._FlipLeftRight=u.asm.ba).apply(null,arguments)},c2=u._Floor=function(){return(c2=u._Floor=u.asm.ca).apply(null,arguments)},se=u._FloorDiv=function(){return(se=u._FloorDiv=u.asm.da).apply(null,arguments)},le=u._FusedBatchNorm=function(){return(le=u._FusedBatchNorm=u.asm.ea).apply(null,arguments)},Ie=u._FusedConv2D=function(){return(Ie=u._FusedConv2D=u.asm.fa).apply(null,arguments)},ut=u._FusedDepthwiseConv2D=function(){return(ut=u._FusedDepthwiseConv2D=u.asm.ga).apply(null,arguments)},Wt=u._Gather=function(){return(Wt=u._Gather=u.asm.ha).apply(null,arguments)},Dt=u._GatherNd=function(){return(Dt=u._GatherNd=u.asm.ia).apply(null,arguments)},Je=u._Greater=function(){return(Je=u._Greater=u.asm.ja).apply(null,arguments)},et=u._GreaterEqual=function(){return(et=u._GreaterEqual=u.asm.ka).apply(null,arguments)},Sn=u._LeakyRelu=function(){return(Sn=u._LeakyRelu=u.asm.la).apply(null,arguments)},jr=u._Less=function(){return(jr=u._Less=u.asm.ma).apply(null,arguments)},qr=u._LessEqual=function(){return(qr=u._LessEqual=u.asm.na).apply(null,arguments)},mh=u._Log=function(){return(mh=u._Log=u.asm.oa).apply(null,arguments)},Yc=u._LogicalAnd=function(){return(Yc=u._LogicalAnd=u.asm.pa).apply(null,arguments)},ys=u._Max=function(){return(ys=u._Max=u.asm.qa).apply(null,arguments)},Ia=u._MaxPool=function(){return(Ia=u._MaxPool=u.asm.ra).apply(null,arguments)},gh=u._Maximum=function(){return(gh=u._Maximum=u.asm.sa).apply(null,arguments)},BN=u._Mean=function(){return(BN=u._Mean=u.asm.ta).apply(null,arguments)},WN=u._Min=function(){return(WN=u._Min=u.asm.ua).apply(null,arguments)},VN=u._Minimum=function(){return(VN=u._Minimum=u.asm.va).apply(null,arguments)},UN=u._MirrorPad=function(){return(UN=u._MirrorPad=u.asm.wa).apply(null,arguments)},GN=u._Multiply=function(){return(GN=u._Multiply=u.asm.xa).apply(null,arguments)},HN=u._Neg=function(){return(HN=u._Neg=u.asm.ya).apply(null,arguments)},jN=u._NonMaxSuppressionV3=function(){return(jN=u._NonMaxSuppressionV3=u.asm.za).apply(null,arguments)},qN=u._NonMaxSuppressionV4=function(){return(qN=u._NonMaxSuppressionV4=u.asm.Aa).apply(null,arguments)},XN=u._NonMaxSuppressionV5=function(){return(XN=u._NonMaxSuppressionV5=u.asm.Ba).apply(null,arguments)},KN=u._NotEqual=function(){return(KN=u._NotEqual=u.asm.Ca).apply(null,arguments)},ZN=u._OneHot=function(){return(ZN=u._OneHot=u.asm.Da).apply(null,arguments)},YN=u._PadV2=function(){return(YN=u._PadV2=u.asm.Ea).apply(null,arguments)},JN=u._Pow=function(){return(JN=u._Pow=u.asm.Fa).apply(null,arguments)},QN=u._Prelu=function(){return(QN=u._Prelu=u.asm.Ga).apply(null,arguments)},eE=u._Prod=function(){return(eE=u._Prod=u.asm.Ha).apply(null,arguments)},tE=u._RealDiv=function(){return(tE=u._RealDiv=u.asm.Ia).apply(null,arguments)},nE=u._Relu=function(){return(nE=u._Relu=u.asm.Ja).apply(null,arguments)},sE=u._Relu6=function(){return(sE=u._Relu6=u.asm.Ka).apply(null,arguments)},rE=u._ResizeBilinear=function(){return(rE=u._ResizeBilinear=u.asm.La).apply(null,arguments)},aE=u._Reverse=function(){return(aE=u._Reverse=u.asm.Ma).apply(null,arguments)},oE=u._RotateWithOffset=function(){return(oE=u._RotateWithOffset=u.asm.Na).apply(null,arguments)},iE=u._Round=function(){return(iE=u._Round=u.asm.Oa).apply(null,arguments)},lE=u._Rsqrt=function(){return(lE=u._Rsqrt=u.asm.Pa).apply(null,arguments)},uE=u._ScatterNd=function(){return(uE=u._ScatterNd=u.asm.Qa).apply(null,arguments)},cE=u._SelectV2=function(){return(cE=u._SelectV2=u.asm.Ra).apply(null,arguments)},dE=u._Sigmoid=function(){return(dE=u._Sigmoid=u.asm.Sa).apply(null,arguments)},pE=u._Sin=function(){return(pE=u._Sin=u.asm.Ta).apply(null,arguments)},hE=u._Softmax=function(){return(hE=u._Softmax=u.asm.Ua).apply(null,arguments)},fE=u._SparseFillEmptyRows=function(){return(fE=u._SparseFillEmptyRows=u.asm.Va).apply(null,arguments)},mE=u._SparseReshape=function(){return(mE=u._SparseReshape=u.asm.Wa).apply(null,arguments)},gE=u._SparseSegmentReduction=function(){return(gE=u._SparseSegmentReduction=u.asm.Xa).apply(null,arguments)},yE=u._Sqrt=function(){return(yE=u._Sqrt=u.asm.Ya).apply(null,arguments)},AE=u._Square=function(){return(AE=u._Square=u.asm.Za).apply(null,arguments)},xE=u._SquaredDifference=function(){return(xE=u._SquaredDifference=u.asm._a).apply(null,arguments)},bE=u._Step=function(){return(bE=u._Step=u.asm.$a).apply(null,arguments)},vE=u._StridedSlice=function(){return(vE=u._StridedSlice=u.asm.ab).apply(null,arguments)},wE=u._Sub=function(){return(wE=u._Sub=u.asm.bb).apply(null,arguments)},kE=u._Sum=function(){return(kE=u._Sum=u.asm.cb).apply(null,arguments)},SE=u._Tan=function(){return(SE=u._Tan=u.asm.db).apply(null,arguments)},IE=u._Tanh=function(){return(IE=u._Tanh=u.asm.eb).apply(null,arguments)},CE=u._Tile=function(){return(CE=u._Tile=u.asm.fb).apply(null,arguments)},TE=u._TopK=function(){return(TE=u._TopK=u.asm.gb).apply(null,arguments)},NE=u._Transform=function(){return(NE=u._Transform=u.asm.hb).apply(null,arguments)},EE=u._Transpose=function(){return(EE=u._Transpose=u.asm.ib).apply(null,arguments)},RE=u.__FusedMatMul=function(){return(RE=u.__FusedMatMul=u.asm.jb).apply(null,arguments)},di=u._malloc=function(){return(di=u._malloc=u.asm.kb).apply(null,arguments)},Jc=u._free=function(){return(Jc=u._free=u.asm.lb).apply(null,arguments)},k5=u.___errno_location=function(){return(k5=u.___errno_location=u.asm.mb).apply(null,arguments)},S5=u._emscripten_get_global_libc=function(){return(S5=u._emscripten_get_global_libc=u.asm.ob).apply(null,arguments)},Ca=u._pthread_self=function(){return(Ca=u._pthread_self=u.asm.pb).apply(null,arguments)},I5=u.___pthread_tsd_run_dtors=function(){return(I5=u.___pthread_tsd_run_dtors=u.asm.qb).apply(null,arguments)},yh=u._emscripten_main_thread_process_queued_calls=function(){return(yh=u._emscripten_main_thread_process_queued_calls=u.asm.rb).apply(null,arguments)},_E=u._emscripten_current_thread_process_queued_calls=function(){return(_E=u._emscripten_current_thread_process_queued_calls=u.asm.sb).apply(null,arguments)},C5=u._emscripten_register_main_browser_thread_id=function(){return(C5=u._emscripten_register_main_browser_thread_id=u.asm.tb).apply(null,arguments)},T5=u._emscripten_main_browser_thread_id=function(){return(T5=u._emscripten_main_browser_thread_id=u.asm.ub).apply(null,arguments)},N5=u.__emscripten_do_dispatch_to_thread=function(){return(N5=u.__emscripten_do_dispatch_to_thread=u.asm.vb).apply(null,arguments)},E5=u._emscripten_sync_run_in_main_thread_4=function(){return(E5=u._emscripten_sync_run_in_main_thread_4=u.asm.wb).apply(null,arguments)},R5=u._emscripten_run_in_main_runtime_thread_js=function(){return(R5=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},d2=u.__emscripten_call_on_thread=function(){return(d2=u.__emscripten_call_on_thread=u.asm.yb).apply(null,arguments)},DE=u._emscripten_tls_init=function(){return(DE=u._emscripten_tls_init=u.asm.zb).apply(null,arguments)},p2=u.__emscripten_thread_init=function(){return(p2=u.__emscripten_thread_init=u.asm.Ab).apply(null,arguments)},Qc=u.stackSave=function(){return(Qc=u.stackSave=u.asm.Bb).apply(null,arguments)},Jl=u.stackRestore=function(){return(Jl=u.stackRestore=u.asm.Cb).apply(null,arguments)},Ql=u.stackAlloc=function(){return(Ql=u.stackAlloc=u.asm.Db).apply(null,arguments)},_5=u._emscripten_stack_set_limits=function(){return(_5=u._emscripten_stack_set_limits=u.asm.Eb).apply(null,arguments)},D5=u._memalign=function(){return(D5=u._memalign=u.asm.Fb).apply(null,arguments)},$5=u.__emscripten_allow_main_runtime_queued_calls=10208,eu=u.__emscripten_main_thread_futex=10412;u.cwrap=ot,u.PThread=_e,u.PThread=_e,u.wasmMemory=re,u.ExitStatus=ed;var Ah;function ed(I){this.name="ExitStatus",this.message="Program terminated with exit("+I+")",this.status=I}li=function I(){Ah||h2(),Ah||(li=I)};function h2(I){if(I=I||g,Xs>0)return;if(S){d(u),Zp(),postMessage({cmd:"loaded"});return}if(Kp(),Xs>0)return;function D(){Ah||(Ah=!0,u.calledRun=!0,!ve&&(Zp(),Yp(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Jp()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),D()},1)):D()}u.run=h2;function $E(I,D){if(!(D&&oe&&I===0)){if(!D&&S)throw postMessage({cmd:"exitProcess",returnCode:I}),new ed(I);oe||(_e.terminateAllThreads(),Re=I,ns(),u.onExit&&u.onExit(I),ve=!0),x(I,new ed(I))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();S&&(oe=!1,_e.initWorker()),h2();var xh;h&&(xh={uncaughtException:process.listeners("uncaughtException").filter(function(I){return!h.uncaughtException.indexOf(I)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(I){return!h.unhandledRejection.indexOf(I)>-1})});var bh;if(typeof WasmBackendModule!="undefined")bh=WasmBackendModule;else if(typeof r!="undefined")bh=r;else throw new Error("Could not find wasm module in post.js");if(xh){var PE=bh._dispose;bh._dispose=function(){PE(),xh.uncaughtException.forEach(function(I){process.removeListener("uncaughtException",I)}),xh.unhandledRejection.forEach(function(I){process.removeListener("unhandledRejection",I)})}}return r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),r9=nn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},o,i;a.ready=new Promise(function(se,le){o=se,i=le});var l;typeof process!="undefined"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c={},u;for(u in a)a.hasOwnProperty(u)&&(c[u]=a[u]);var d=[],p="./this.program",h=function(se,le){throw le},f=!1,m=!1,g=!1,y=!1;f=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y=!f&&!g&&!m;var x="";function A(se){return a.locateFile?a.locateFile(se,x):x+se}var b,w,C,S,E,R;g?(m?x=ad().dirname(x)+"/":x=__dirname+"/",b=function(le,Ie){return E||(E=kh()),R||(R=ad()),le=R.normalize(le),E.readFileSync(le,Ie?null:"utf8")},C=function(le){var Ie=b(le,!0);return Ie.buffer||(Ie=new Uint8Array(Ie)),z(Ie.buffer),Ie},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(se){if(!(se instanceof u2))throw se}),process.on("unhandledRejection",Gr),h=function(se){process.exit(se)},a.inspect=function(){return"[Emscripten Module object]"}):y?(typeof read!="undefined"&&(b=function(le){return read(le)}),C=function(le){var Ie;return typeof readbuffer=="function"?new Uint8Array(readbuffer(le)):(Ie=read(le,"binary"),z(typeof Ie=="object"),Ie)},typeof scriptArgs!="undefined"?d=scriptArgs:typeof arguments!="undefined"&&(d=arguments),typeof quit=="function"&&(h=function(se){quit(se)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(f||m)&&(m?x=self.location.href:typeof document!="undefined"&&document.currentScript&&(x=document.currentScript.src),s&&(x=s),x.indexOf("blob:")!==0?x=x.substr(0,x.lastIndexOf("/")+1):x="",b=function(se){var le=new XMLHttpRequest;return le.open("GET",se,!1),le.send(null),le.responseText},m&&(C=function(se){var le=new XMLHttpRequest;return le.open("GET",se,!1),le.responseType="arraybuffer",le.send(null),new Uint8Array(le.response)}),w=function(se,le,Ie){var ut=new XMLHttpRequest;ut.open("GET",se,!0),ut.responseType="arraybuffer",ut.onload=function(){if(ut.status==200||ut.status==0&&ut.response){le(ut.response);return}Ie()},ut.onerror=Ie,ut.send(null)},S=function(se){document.title=se});var F=a.print||console.log.bind(console),_=a.printErr||console.warn.bind(console);for(u in c)c.hasOwnProperty(u)&&(a[u]=c[u]);c=null,a.arguments&&(d=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(h=a.quit);var P;a.wasmBinary&&(P=a.wasmBinary);var T=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Gr("no native wasm support detected");var O,G=!1,K;function z(se,le){se||Gr("Assertion failed: "+le)}function j(se){var le=a["_"+se];return z(le,"Cannot call unknown function "+se+", make sure it is exported"),le}function W(se,le,Ie,ut,Wt){var Dt={string:function(ys){var Ia=0;if(ys!=null&&ys!==0){var gh=(ys.length<<2)+1;Ia=Kc(gh),re(ys,Ia,gh)}return Ia},array:function(ys){var Ia=Kc(ys.length);return ge(ys,Ia),Ia}};function Je(ys){return le==="string"?Z(ys):le==="boolean"?Boolean(ys):ys}var et=j(se),Sn=[],jr=0;if(ut)for(var qr=0;qr<ut.length;qr++){var mh=Dt[Ie[qr]];mh?(jr===0&&(jr=hh()),Sn[qr]=mh(ut[qr])):Sn[qr]=ut[qr]}var Yc=et.apply(null,Sn);return Yc=Je(Yc),jr!==0&&fh(jr),Yc}function Q(se,le,Ie,ut){Ie=Ie||[];var Wt=Ie.every(function(Je){return Je==="number"}),Dt=le!=="string";return Dt&&Wt&&!ut?j(se):function(){return W(se,le,Ie,arguments,ut)}}var te=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function ae(se,le,Ie){for(var ut=le+Ie,Wt=le;se[Wt]&&!(Wt>=ut);)++Wt;if(Wt-le>16&&se.subarray&&te)return te.decode(se.subarray(le,Wt));for(var Dt="";le<Wt;){var Je=se[le++];if(!(Je&128)){Dt+=String.fromCharCode(Je);continue}var et=se[le++]&63;if((Je&224)==192){Dt+=String.fromCharCode((Je&31)<<6|et);continue}var Sn=se[le++]&63;if((Je&240)==224?Je=(Je&15)<<12|et<<6|Sn:Je=(Je&7)<<18|et<<12|Sn<<6|se[le++]&63,Je<65536)Dt+=String.fromCharCode(Je);else{var jr=Je-65536;Dt+=String.fromCharCode(55296|jr>>10,56320|jr&1023)}}return Dt}function Z(se,le){return se?ae(Pe,se,le):""}function oe(se,le,Ie,ut){if(!(ut>0))return 0;for(var Wt=Ie,Dt=Ie+ut-1,Je=0;Je<se.length;++Je){var et=se.charCodeAt(Je);if(et>=55296&&et<=57343){var Sn=se.charCodeAt(++Je);et=65536+((et&1023)<<10)|Sn&1023}if(et<=127){if(Ie>=Dt)break;le[Ie++]=et}else if(et<=2047){if(Ie+1>=Dt)break;le[Ie++]=192|et>>6,le[Ie++]=128|et&63}else if(et<=65535){if(Ie+2>=Dt)break;le[Ie++]=224|et>>12,le[Ie++]=128|et>>6&63,le[Ie++]=128|et&63}else{if(Ie+3>=Dt)break;le[Ie++]=240|et>>18,le[Ie++]=128|et>>12&63,le[Ie++]=128|et>>6&63,le[Ie++]=128|et&63}}return le[Ie]=0,Ie-Wt}function re(se,le,Ie){return oe(se,Pe,le,Ie)}function ge(se,le){Te.set(se,le)}function ve(se,le){return se%le>0&&(se+=le-se%le),se}var Re,Te,Pe,Ue,ot,Qe,Ye,gt,it;function yt(se){Re=se,a.HEAP8=Te=new Int8Array(se),a.HEAP16=Ue=new Int16Array(se),a.HEAP32=Qe=new Int32Array(se),a.HEAPU8=Pe=new Uint8Array(se),a.HEAPU16=ot=new Uint16Array(se),a.HEAPU32=Ye=new Uint32Array(se),a.HEAPF32=gt=new Float32Array(se),a.HEAPF64=it=new Float64Array(se)}var _t=a.INITIAL_MEMORY||16777216,Qn,lt=[],ms=[],kn=[],js=[],es=!1;ms.push({func:function(){th()}});function gs(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)ts(a.preRun.shift());Xs(lt)}function Es(){es=!0,Xs(ms)}function qs(){Xs(kn)}function Rs(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)ba(a.postRun.shift());Xs(js)}function ts(se){lt.unshift(se)}function ba(se){js.unshift(se)}var Nn=0,va=null,_s=null;function Vc(se){Nn++,a.monitorRunDependencies&&a.monitorRunDependencies(Nn)}function Uc(se){if(Nn--,a.monitorRunDependencies&&a.monitorRunDependencies(Nn),Nn==0&&(va!==null&&(clearInterval(va),va=null),_s)){var le=_s;_s=null,le()}}a.preloadedImages={},a.preloadedAudios={};function Gr(se){a.onAbort&&a.onAbort(se),se+="",_(se),G=!0,K=1,se="abort("+se+"). Build with -s ASSERTIONS=1 for more info.";var le=new WebAssembly.RuntimeError(se);throw i(le),le}function Xp(se,le){return String.prototype.startsWith?se.startsWith(le):se.indexOf(le)===0}var V0="data:application/octet-stream;base64,";function Kp(se){return Xp(se,V0)}var Zp="file://";function Yp(se){return Xp(se,Zp)}var ns="tfjs-backend-wasm.wasm";Kp(ns)||(ns=A(ns));function Jp(se){try{if(se==ns&&P)return new Uint8Array(P);if(C)return C(se);throw"both async and sync fetching of the wasm failed"}catch(le){Gr(le)}}function U0(){if(!P&&(f||m)){if(typeof fetch=="function"&&!Yp(ns))return fetch(ns,{credentials:"same-origin"}).then(function(se){if(!se.ok)throw"failed to load wasm binary file at '"+ns+"'";return se.arrayBuffer()}).catch(function(){return Jp(ns)});if(w)return new Promise(function(se,le){w(ns,function(Ie){se(new Uint8Array(Ie))},le)})}return Promise.resolve().then(function(){return Jp(ns)})}function G0(){var se={a:ss};function le(Je,et){var Sn=Je.exports;a.asm=Sn,O=a.asm.h,yt(O.buffer),Qn=a.asm.Va,Uc("wasm-instantiate")}Vc("wasm-instantiate");function Ie(Je){le(Je.instance)}function ut(Je){return U0().then(function(et){return WebAssembly.instantiate(et,se)}).then(Je,function(et){_("failed to asynchronously prepare wasm: "+et),Gr(et)})}function Wt(){return!P&&typeof WebAssembly.instantiateStreaming=="function"&&!Kp(ns)&&!Yp(ns)&&typeof fetch=="function"?fetch(ns,{credentials:"same-origin"}).then(function(Je){var et=WebAssembly.instantiateStreaming(Je,se);return et.then(Ie,function(Sn){return _("wasm streaming compile failed: "+Sn),_("falling back to ArrayBuffer instantiation"),ut(Ie)})}):ut(Ie)}if(a.instantiateWasm)try{var Dt=a.instantiateWasm(se,le);return Dt}catch(Je){return _("Module.instantiateWasm callback failed with error: "+Je),!1}return Wt().catch(i),{}}function Xs(se){for(;se.length>0;){var le=se.shift();if(typeof le=="function"){le(a);continue}var Ie=le.func;typeof Ie=="number"?le.arg===void 0?Qn.get(Ie)():Qn.get(Ie)(le.arg):Ie(le.arg===void 0?null:le.arg)}}function Gc(){Gr()}function li(se,le,Ie){Pe.copyWithin(se,le,le+Ie)}function H0(){return Pe.length}function j0(se){try{return O.grow(se-Re.byteLength+65535>>>16),yt(O.buffer),1}catch(le){}}function Hr(se){var le=H0(),Ie=2147483648;if(se>Ie)return!1;for(var ut=1;ut<=4;ut*=2){var Wt=le*(1+.2/ut);Wt=Math.min(Wt,se+100663296);var Dt=Math.min(Ie,ve(Math.max(se,Wt),65536)),Je=j0(Dt);if(Je)return!0}return!1}var ui={mappings:{},buffers:[null,[],[]],printChar:function(se,le){var Ie=ui.buffers[se];le===0||le===10?((se===1?F:_)(ae(Ie,0)),Ie.length=0):Ie.push(le)},varargs:void 0,get:function(){ui.varargs+=4;var se=Qe[ui.varargs-4>>2];return se},getStr:function(se){var le=Z(se);return le},get64:function(se,le){return se}};function q0(se){return 0}function Qp(se,le,Ie,ut,Wt){}function X0(se,le,Ie,ut){for(var Wt=0,Dt=0;Dt<Ie;Dt++){for(var Je=Qe[le+Dt*8>>2],et=Qe[le+(Dt*8+4)>>2],Sn=0;Sn<et;Sn++)ui.printChar(se,Pe[Je+Sn]);Wt+=et}return Qe[ut>>2]=Wt,0}function eh(){return 28}var ss={a:Gc,d:li,e:Hr,f:q0,c:Qp,b:X0,g:eh},K0=G0(),th=a.___wasm_call_ctors=function(){return(th=a.___wasm_call_ctors=a.asm.i).apply(null,arguments)},Z0=a._init=function(){return(Z0=a._init=a.asm.j).apply(null,arguments)},nh=a._init_with_threads_count=function(){return(nh=a._init_with_threads_count=a.asm.k).apply(null,arguments)},Y0=a._get_threads_count=function(){return(Y0=a._get_threads_count=a.asm.l).apply(null,arguments)},ql=a._register_tensor=function(){return(ql=a._register_tensor=a.asm.m).apply(null,arguments)},wa=a._dispose_data=function(){return(wa=a._dispose_data=a.asm.n).apply(null,arguments)},Hc=a._dispose=function(){return(Hc=a._dispose=a.asm.o).apply(null,arguments)},J0=a._Abs=function(){return(J0=a._Abs=a.asm.p).apply(null,arguments)},Q0=a._Add=function(){return(Q0=a._Add=a.asm.q).apply(null,arguments)},sh=a._AddN=function(){return(sh=a._AddN=a.asm.r).apply(null,arguments)},_e=a._All=function(){return(_e=a._All=a.asm.s).apply(null,arguments)},eg=a._Any=function(){return(eg=a._Any=a.asm.t).apply(null,arguments)},tg=a._ArgMax=function(){return(tg=a._ArgMax=a.asm.u).apply(null,arguments)},ng=a._AvgPool=function(){return(ng=a._AvgPool=a.asm.v).apply(null,arguments)},sg=a._BatchMatMul=function(){return(sg=a._BatchMatMul=a.asm.w).apply(null,arguments)},rg=a._Ceil=function(){return(rg=a._Ceil=a.asm.x).apply(null,arguments)},ci=a._ClipByValue=function(){return(ci=a._ClipByValue=a.asm.y).apply(null,arguments)},ag=a._Conv2D=function(){return(ag=a._Conv2D=a.asm.z).apply(null,arguments)},og=a._Conv2DBackpropInput=function(){return(og=a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},ig=a._Cos=function(){return(ig=a._Cos=a.asm.B).apply(null,arguments)},lg=a._Cosh=function(){return(lg=a._Cosh=a.asm.C).apply(null,arguments)},ug=a._CropAndResize=function(){return(ug=a._CropAndResize=a.asm.D).apply(null,arguments)},cg=a._Cumsum=function(){return(cg=a._Cumsum=a.asm.E).apply(null,arguments)},rh=a._DepthToSpace=function(){return(rh=a._DepthToSpace=a.asm.F).apply(null,arguments)},dg=a._DepthwiseConv2dNative=function(){return(dg=a._DepthwiseConv2dNative=a.asm.G).apply(null,arguments)},pg=a._Elu=function(){return(pg=a._Elu=a.asm.H).apply(null,arguments)},ka=a._Equal=function(){return(ka=a._Equal=a.asm.I).apply(null,arguments)},jc=a._Exp=function(){return(jc=a._Exp=a.asm.J).apply(null,arguments)},qc=a._FlipLeftRight=function(){return(qc=a._FlipLeftRight=a.asm.K).apply(null,arguments)},hg=a._Floor=function(){return(hg=a._Floor=a.asm.L).apply(null,arguments)},fg=a._FloorDiv=function(){return(fg=a._FloorDiv=a.asm.M).apply(null,arguments)},mg=a._FusedBatchNorm=function(){return(mg=a._FusedBatchNorm=a.asm.N).apply(null,arguments)},gg=a._FusedConv2D=function(){return(gg=a._FusedConv2D=a.asm.O).apply(null,arguments)},yg=a._FusedDepthwiseConv2D=function(){return(yg=a._FusedDepthwiseConv2D=a.asm.P).apply(null,arguments)},Ge=a._Gather=function(){return(Ge=a._Gather=a.asm.Q).apply(null,arguments)},Ag=a._GatherNd=function(){return(Ag=a._GatherNd=a.asm.R).apply(null,arguments)},xg=a._Greater=function(){return(xg=a._Greater=a.asm.S).apply(null,arguments)},bg=a._GreaterEqual=function(){return(bg=a._GreaterEqual=a.asm.T).apply(null,arguments)},vg=a._LeakyRelu=function(){return(vg=a._LeakyRelu=a.asm.U).apply(null,arguments)},wg=a._Less=function(){return(wg=a._Less=a.asm.V).apply(null,arguments)},kg=a._LessEqual=function(){return(kg=a._LessEqual=a.asm.W).apply(null,arguments)},Xc=a._Log=function(){return(Xc=a._Log=a.asm.X).apply(null,arguments)},ah=a._LogicalAnd=function(){return(ah=a._LogicalAnd=a.asm.Y).apply(null,arguments)},oh=a._Max=function(){return(oh=a._Max=a.asm.Z).apply(null,arguments)},Sg=a._MaxPool=function(){return(Sg=a._MaxPool=a.asm._).apply(null,arguments)},Ig=a._Maximum=function(){return(Ig=a._Maximum=a.asm.$).apply(null,arguments)},Cg=a._Mean=function(){return(Cg=a._Mean=a.asm.aa).apply(null,arguments)},Tg=a._Min=function(){return(Tg=a._Min=a.asm.ba).apply(null,arguments)},Ng=a._Minimum=function(){return(Ng=a._Minimum=a.asm.ca).apply(null,arguments)},Eg=a._MirrorPad=function(){return(Eg=a._MirrorPad=a.asm.da).apply(null,arguments)},Rg=a._Multiply=function(){return(Rg=a._Multiply=a.asm.ea).apply(null,arguments)},dt=a._Neg=function(){return(dt=a._Neg=a.asm.fa).apply(null,arguments)},_g=a._NonMaxSuppressionV3=function(){return(_g=a._NonMaxSuppressionV3=a.asm.ga).apply(null,arguments)},Dg=a._NonMaxSuppressionV4=function(){return(Dg=a._NonMaxSuppressionV4=a.asm.ha).apply(null,arguments)},$g=a._NonMaxSuppressionV5=function(){return($g=a._NonMaxSuppressionV5=a.asm.ia).apply(null,arguments)},Xl=a._NotEqual=function(){return(Xl=a._NotEqual=a.asm.ja).apply(null,arguments)},ih=a._OneHot=function(){return(ih=a._OneHot=a.asm.ka).apply(null,arguments)},lh=a._PadV2=function(){return(lh=a._PadV2=a.asm.la).apply(null,arguments)},uh=a._Pow=function(){return(uh=a._Pow=a.asm.ma).apply(null,arguments)},Pg=a._Prelu=function(){return(Pg=a._Prelu=a.asm.na).apply(null,arguments)},Fg=a._Prod=function(){return(Fg=a._Prod=a.asm.oa).apply(null,arguments)},ch=a._RealDiv=function(){return(ch=a._RealDiv=a.asm.pa).apply(null,arguments)},Og=a._Relu=function(){return(Og=a._Relu=a.asm.qa).apply(null,arguments)},Mg=a._Relu6=function(){return(Mg=a._Relu6=a.asm.ra).apply(null,arguments)},zg=a._ResizeBilinear=function(){return(zg=a._ResizeBilinear=a.asm.sa).apply(null,arguments)},Lg=a._Reverse=function(){return(Lg=a._Reverse=a.asm.ta).apply(null,arguments)},Bg=a._RotateWithOffset=function(){return(Bg=a._RotateWithOffset=a.asm.ua).apply(null,arguments)},dh=a._Round=function(){return(dh=a._Round=a.asm.va).apply(null,arguments)},Sa=a._Rsqrt=function(){return(Sa=a._Rsqrt=a.asm.wa).apply(null,arguments)},Wg=a._ScatterNd=function(){return(Wg=a._ScatterNd=a.asm.xa).apply(null,arguments)},Vg=a._SelectV2=function(){return(Vg=a._SelectV2=a.asm.ya).apply(null,arguments)},w5=a._Sigmoid=function(){return(w5=a._Sigmoid=a.asm.za).apply(null,arguments)},ph=a._Sin=function(){return(ph=a._Sin=a.asm.Aa).apply(null,arguments)},Ug=a._Softmax=function(){return(Ug=a._Softmax=a.asm.Ba).apply(null,arguments)},Gg=a._SparseFillEmptyRows=function(){return(Gg=a._SparseFillEmptyRows=a.asm.Ca).apply(null,arguments)},Hg=a._SparseReshape=function(){return(Hg=a._SparseReshape=a.asm.Da).apply(null,arguments)},jg=a._SparseSegmentReduction=function(){return(jg=a._SparseSegmentReduction=a.asm.Ea).apply(null,arguments)},qg=a._Sqrt=function(){return(qg=a._Sqrt=a.asm.Fa).apply(null,arguments)},Xg=a._Square=function(){return(Xg=a._Square=a.asm.Ga).apply(null,arguments)},Kg=a._SquaredDifference=function(){return(Kg=a._SquaredDifference=a.asm.Ha).apply(null,arguments)},Zg=a._Step=function(){return(Zg=a._Step=a.asm.Ia).apply(null,arguments)},Yg=a._StridedSlice=function(){return(Yg=a._StridedSlice=a.asm.Ja).apply(null,arguments)},Jg=a._Sub=function(){return(Jg=a._Sub=a.asm.Ka).apply(null,arguments)},Qg=a._Sum=function(){return(Qg=a._Sum=a.asm.La).apply(null,arguments)},e2=a._Tan=function(){return(e2=a._Tan=a.asm.Ma).apply(null,arguments)},t2=a._Tanh=function(){return(t2=a._Tanh=a.asm.Na).apply(null,arguments)},n2=a._Tile=function(){return(n2=a._Tile=a.asm.Oa).apply(null,arguments)},s2=a._TopK=function(){return(s2=a._TopK=a.asm.Pa).apply(null,arguments)},r2=a._Transform=function(){return(r2=a._Transform=a.asm.Qa).apply(null,arguments)},a2=a._Transpose=function(){return(a2=a._Transpose=a.asm.Ra).apply(null,arguments)},o2=a.__FusedMatMul=function(){return(o2=a.__FusedMatMul=a.asm.Sa).apply(null,arguments)},i2=a._malloc=function(){return(i2=a._malloc=a.asm.Ta).apply(null,arguments)},l2=a._free=function(){return(l2=a._free=a.asm.Ua).apply(null,arguments)},hh=a.stackSave=function(){return(hh=a.stackSave=a.asm.Wa).apply(null,arguments)},fh=a.stackRestore=function(){return(fh=a.stackRestore=a.asm.Xa).apply(null,arguments)},Kc=a.stackAlloc=function(){return(Kc=a.stackAlloc=a.asm.Ya).apply(null,arguments)};a.cwrap=Q;var Kl;function u2(se){this.name="ExitStatus",this.message="Program terminated with exit("+se+")",this.status=se}_s=function se(){Kl||Zc(),Kl||(_s=se)};function Zc(se){if(se=se||d,Nn>0||(gs(),Nn>0))return;function le(){Kl||(Kl=!0,a.calledRun=!0,!G&&(Es(),qs(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Rs()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),le()},1)):le()}if(a.run=Zc,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();Zc();var Zl;l&&(Zl={uncaughtException:process.listeners("uncaughtException").filter(function(se){return!l.uncaughtException.indexOf(se)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(se){return!l.unhandledRejection.indexOf(se)>-1})});var Yl;if(typeof r!="undefined")Yl=r;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Yl=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Zl){var c2=Yl._dispose;Yl._dispose=function(){c2(),Zl.uncaughtException.forEach(function(se){process.removeListener("uncaughtException",se)}),Zl.unhandledRejection.forEach(function(se){process.removeListener("unhandledRejection",se)})}}return r.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),a9=1e-7,o9=1e-4,od=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},su=class{refCount(e){return Ks("refCount")}incRef(e){return Ks("incRef")}timerAvailable(){return!0}time(e){return Ks("time")}read(e){return Ks("read")}readSync(e){return Ks("readSync")}numDataIds(){return Ks("numDataIds")}disposeData(e,t){return Ks("disposeData")}write(e,t,n){return Ks("write")}move(e,t,n,s,r){return Ks("move")}memory(){return Ks("memory")}floatPrecision(){return Ks("floatPrecision")}epsilon(){return this.floatPrecision()===32?a9:o9}dispose(){return Ks("dispose")}};function Ks(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function z5(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Sh(e,t,n)}function i9(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,Sh(e,n,s),Sh(t,n,s)}function id(e,t,n){return Math.max(e,Math.min(t,n))}function l9(e){return e%2==0?e:e+1}function Sh(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function u9(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function c9(e,t){let n=Math.random();return t*n+(1-n)*e}function d9(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function M(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Mn(e,t,n=""){M(Ea(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function hi(e){M(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function fi(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||Rn(e)&&!n)for(let s=0;s<e.length;++s)fi(e[s],t,n);else t.push(e);return t}function It(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function p9(e){return e.length===0}function Ea(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ru(e){return e%1==0}function h9(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function f9(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function m9(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return z5(t),t}function ld(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function g9(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function y9(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function Zs(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),M(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),M(e.every(s=>ru(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function L5(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:Zs(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function B5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function W5(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function V5(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function U5(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function A9(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function Rn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function g2(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function G5(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Ra(e){return typeof e=="string"||e instanceof String}function H5(e){return typeof e=="boolean"}function j5(e){return typeof e=="number"}function Ih(e){return Array.isArray(e)?Ih(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":j5(e)?"float32":Ra(e)?"string":H5(e)?"bool":"float32"}function _a(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ch(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function au(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function q5(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<a;l++)r[l]=q5(e+l*i,o,n,s)}return r}function ou(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return q5(0,e,t,n)}function y2(e,t){let n=Th(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Th(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function x9(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return ou(e,new Float32Array(n));if(t==="int32")return ou(e,new Int32Array(n));if(t==="bool")return ou(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function A2(e){e.forEach(t=>{M(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function b9(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function v9(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function x2(e){return e&&e.then&&typeof e.then=="function"}var X5="tfjsflags",K5=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=w9,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(x2(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);X5 in e&&e[X5].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=S9(s,r)})}};function w9(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(k9(t,s[0],s[1]),s.join("="))),t}function k9(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function S9(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Y(){return Cr}var Cr=null;function I9(e){Cr=e}var b2;function Z5(){if(b2==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");b2=e}return b2}function C9(){let e=Z5();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function v2(e,t){let n=C9();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var mi="Abs",iu="Acos",lu="Acosh",Xr="Add",Da="AddN",uu="All",cu="Any",$a="ArgMax",du="ArgMin",pu="Asin",hu="Asinh",fu="Atan",mu="Atanh",gu="Atan2",Pa="AvgPool",Nh="AvgPoolGrad",ud="AvgPool3D",Eh="AvgPool3DGrad",Fa="BatchMatMul",gi="BatchToSpaceND",Rh="Bincount",Y5="BroadcastTo",_h="BroadcastArgs",Oa="Cast",Ma="Ceil",Kr="ClipByValue",cd="Complex",dd="ComplexAbs",yi="Concat",za="Conv2D",Dh="Conv2DBackpropFilter",La="Conv2DBackpropInput",pd="Conv3D",$h="Conv3DBackpropFilterV2",Ph="Conv3DBackpropInputV2",Ba="Cos",Wa="Cosh",Ai="Cumsum",xi="CropAndResize",Fh="DenseBincount",bi="DepthToSpace",Va="DepthwiseConv2dNative",Oh="DepthwiseConv2dNativeBackpropFilter",Mh="DepthwiseConv2dNativeBackpropInput",zh="Diag",hd="Dilation2D",Lh="Dilation2DBackpropInput",Bh="Dilation2DBackpropFilter",Ua="RealDiv",fd="Einsum",Ga="Elu",Wh="EluGrad",yu="Erf",vi="Equal",Ha="Exp",wi="ExpandDims",ki="Expm1",Vh="FFT",Au="Fill",Si="FlipLeftRight",ja="Floor",qa="FloorDiv",Xa="FusedBatchNorm",Ii="GatherV2",Ci="GatherNd",Ti="Greater",Ka="GreaterEqual",Za="Identity",Uh="IFFT",md="Imag",xu="IsFinite",bu="IsInf",vu="IsNan",Ya="LeakyRelu",Ni="Less",Ei="LessEqual",Gh="LinSpace",Ja="Log",wu="Log1p",Ri="LogicalAnd",ku="LogicalNot",gd="LogicalOr",J5="LogSoftmax",yd="LRN",Hh="LRNGrad",Qa="Max",eo="Maximum",to="MaxPool",jh="MaxPoolGrad",Ad="MaxPool3D",qh="MaxPool3DGrad",Xh="MaxPoolWithArgmax",no="Mean",so="Min",ro="Minimum",ao="MirrorPad",Su="Mod",Kh="Multinomial",oo="Multiply",_i="Neg",Di="NotEqual",$i="NonMaxSuppressionV3",Iu="NonMaxSuppressionV4",Pi="NonMaxSuppressionV5",Fi="OnesLike",Oi="OneHot",Mi="Pack",io="PadV2",T9="Pool",lo="Pow",uo="Prelu",zi="Prod",Cu="Range",xd="Real",Tu="Reciprocal",co="Relu",Li="Reshape",Nu="ResizeNearestNeighbor",Zh="ResizeNearestNeighborGrad",po="ResizeBilinear",Yh="ResizeBilinearGrad",ho="Relu6",Bi="Reverse",Wi="Round",fo="Rsqrt",Vi="ScatterNd",Ui="Select",Eu="Selu",Gi="Slice",mo="Sin",Hi="Sinh",Ru="Sign",go="Sigmoid",_u="Softplus",yo="Sqrt",Ao="Sum",ji="SpaceToBatchND",qi="SplitV",xo="Softmax",bd="SparseFillEmptyRows",Du="SparseReshape",vd="SparseSegmentMean",wd="SparseSegmentSum",kd="SparseToDense",bo="SquaredDifference",$u="Square",Xi="StridedSlice",Sd="StringNGrams",Jh="StringSplit",Qh="StringToHashBucketFast",vo="Sub",Ki="Tan",wo="Tanh",Zr="Tile",Zi="TopK",Yi="Transform",ko="Transpose",ef="Unique",Ji="Unpack",Id="UnsortedSegmentSum",Qi="ZerosLike",So="Step",Cd="FromPixels",el="RotateWithOffset",Io="_FusedMatMul",Co="FusedConv2D",To="FusedDepthwiseConv2D";function No(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...e)}function N9(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...e)}var Pu=v2("kernelRegistry",()=>new Map),Td=v2("gradRegistry",()=>new Map);function tf(e,t){let n=k2(e,t);return Pu.get(n)}function w2(e){return Td.get(e)}function Yr(e){let t=Pu.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function ur(e){let{kernelName:t,backendName:n}=e,s=k2(t,n);Pu.has(s)&&No(`The kernel '${t}' for backend '${n}' is already registered`),Pu.set(s,e)}function Q5(e){let{kernelName:t}=e;Td.has(t)&&Y().getBool("DEBUG")&&No(`Overriding the gradient for '${t}'`),Td.set(t,e)}function E9(e,t){let n=k2(e,t);if(!Pu.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Pu.delete(n)}function R9(e){if(!Td.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Td.delete(e)}function _9(e,t){Yr(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});ur(r)})}function k2(e,t){return`${t}_${e}`}var v={};Me(v,{arraysEqual:()=>Ea,assert:()=>M,assertNonNegativeIntegerDimensions:()=>A2,assertNonNull:()=>hi,assertShapesMatch:()=>Mn,bytesFromStringArray:()=>G5,bytesPerElement:()=>g2,checkConversionForErrors:()=>V5,clamp:()=>id,computeStrides:()=>au,createScalarValue:()=>M9,createShuffledIndices:()=>m9,decodeString:()=>rf,distSquared:()=>d9,encodeString:()=>Rd,fetch:()=>L9,fingerPrint64:()=>O9,flatten:()=>fi,getArrayFromDType:()=>W5,getTypedArrayFromDType:()=>B5,hasEncodingLoss:()=>A9,hexToLong:()=>Nd,indexToLoc:()=>v9,inferDtype:()=>Ih,inferFromImplicitShape:()=>y9,isBoolean:()=>H5,isFunction:()=>_a,isInt:()=>ru,isNumber:()=>j5,isPromise:()=>x2,isScalarShape:()=>p9,isString:()=>Ra,isTypedArray:()=>Rn,isValidDtype:()=>U5,locToIndex:()=>b9,makeOnesTypedArray:()=>y2,makeZerosNestedTypedArray:()=>x9,makeZerosTypedArray:()=>Th,nearestDivisor:()=>Ch,nearestLargerEven:()=>l9,now:()=>Ed,parseAxisParam:()=>Zs,randUniform:()=>c9,repeatedTry:()=>g9,rightPad:()=>ld,shuffle:()=>z5,shuffleCombo:()=>i9,sizeFromShape:()=>It,sizeToSquarishShape:()=>f9,squeezeShape:()=>L5,sum:()=>u9,swap:()=>Sh,tanh:()=>h9,toNestedArray:()=>ou,toTypedArray:()=>sf});var e3=pi(UE()),tl=e3.default||e3;function Nd(e){return tl.fromString(e,!0,16)}var t3=Nd("c3a5c85c97cb3127"),nl=Nd("b492b66fbe98f273"),zn=Nd("9ae16a3b2f90404f");function S2(e){return e.xor(e.shru(47))}function n3(e,t,n){let s=e.slice(t,t+n);return tl.fromBytes(Array.from(s),!0,!0)}function kt(e,t){return n3(e,t,8)}function s3(e,t){return n3(e,t,4)}function gn(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Eo(e,t,n=Nd("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function D9(e,t,n,s,r,a){r=r.add(e),a=gn(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(gn(r,44)),[r.add(s),a.add(o)]}function nf(e,t,n,s){return D9(kt(e,t),kt(e,t+8),kt(e,t+16),kt(e,t+24),n,s)}function $9(e,t=e.length){if(t>=8){let n=zn.add(t*2),s=kt(e,0).add(zn),r=kt(e,t-8),a=gn(r,37).mul(n).add(s),o=gn(s,25).add(r).mul(n);return Eo(a,o,n)}if(t>=4){let n=zn.add(t*2),s=s3(e,0);return Eo(s.shl(3).add(t),s3(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return S2(zn.mul(a).xor(t3.mul(o))).mul(zn)}return zn}function P9(e,t=e.length){let n=zn.add(t*2),s=kt(e,0).mul(nl),r=kt(e,8),a=kt(e,t-8).mul(n),o=kt(e,t-16).mul(zn);return Eo(gn(s.add(r),43).add(gn(a,30)).add(o),s.add(gn(r.add(zn),18)).add(a),n)}function F9(e,t=e.length){let n=zn.add(t*2),s=kt(e,0).mul(zn),r=kt(e,8),a=kt(e,t-8).mul(n),o=kt(e,t-16).mul(zn),i=gn(s.add(r),43).add(gn(a,30)).add(o),l=Eo(i,s.add(gn(r.add(zn),18)).add(a),n),c=kt(e,16).mul(n),u=kt(e,24),d=i.add(kt(e,t-32)).mul(n),p=l.add(kt(e,t-24)).mul(n);return Eo(gn(c.add(u),43).add(gn(d,30)).add(p),c.add(gn(u.add(s),18)).add(d),n)}function O9(e,t=e.length){let n=tl.fromNumber(81,!0);if(t<=32)return t<=16?$9(e,t):P9(e,t);if(t<=64)return F9(e,t);let s=n,r=n.mul(nl).add(113),a=S2(r.mul(zn).add(113)).mul(zn),o=[tl.UZERO,tl.UZERO],i=[tl.UZERO,tl.UZERO];s=s.mul(zn).add(kt(e,0));let l=0,c=(t-1>>6)*64,u=c+(t-1&63)-63;do s=gn(s.add(r).add(o[0]).add(kt(e,l+8)),37).mul(nl),r=gn(r.add(o[1]).add(kt(e,l+48)),42).mul(nl),s=s.xor(i[1]),r=r.add(o[0]).add(kt(e,l+40)),a=gn(a.add(i[0]),33).mul(nl),o=nf(e,l,o[1].mul(nl),s.add(i[0])),i=nf(e,l+32,a.add(i[1]),r.add(kt(e,l+16))),[a,s]=[s,a],l+=64;while(l!==c);let d=nl.add(a.and(255).shl(1));return l=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=gn(s.add(r).add(o[0]).add(kt(e,l+8)),37).mul(d),r=gn(r.add(o[1]).add(kt(e,l+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(kt(e,l+40))),a=gn(a.add(i[0]),33).mul(d),o=nf(e,l,o[1].mul(d),s.add(i[0])),i=nf(e,l+32,a.add(i[1]),r.add(kt(e,l+16))),[a,s]=[s,a],Eo(Eo(o[0],i[0],d).add(S2(r).mul(t3)).add(a),Eo(o[1],i[1],d).add(s),d)}function M9(e,t){return t==="string"?Rd(e):sf([e],t)}function z9(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function sf(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=fi(e)),Y().getBool("DEBUG")&&V5(e,t),z9(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Ed(){return Y().platform.now()}function L9(e,t){return Y().platform.fetch(e,t)}function Rd(e,t="utf-8"){return t=t||"utf-8",Y().platform.encode(e,t)}function rf(e,t="utf-8"){return t=t||"utf-8",Y().platform.decode(e,t)}var B9=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new V9)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=Ed();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:Ed()-o})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let c=s[l];c.data().then(u=>{W9(u,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function W9(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var V9=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?ld(`${s}ms`,9):s.error,i=ld(e,25),l=t.rank,c=t.size,u=ld(t.shape.toString(),14),d="";for(let p in r){let h=r[p];if(h!=null){let f=h.shape||t.shape,m=f.length;d+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${u}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function U9(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let c=e[l],u=c.inputs;for(let d in u){let p=u[d],h=!1;for(let f=0;f<t.length;f++)if(s[p.id]){c.outputs.forEach(m=>s[m.id]=!0),h=!0,r[c.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let c=e[l],u=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(let p in u)a[u[p].id]=!0,o[c.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let c=e[l];if(r[c.id]&&o[c.id]){let u={};for(let p in c.inputs){let h=c.inputs[p];s[h.id]&&(u[p]=h)}let d=Object.assign({},c);d.inputs=u,d.outputs=c.outputs,i.push(d)}}return i}function G9(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let c=e[l.id];c!=null?o.push(c):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let c=n(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=a.inputs[l];if(!Ea(c.shape,u.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=c;else{let d=e[u.id];e[u.id]=s(d,c),d.dispose()}}}}var r3=20,_d=3,I2=7;function H9(e,t,n,s){let r=au(t),a=j9(e,t,n,r),o=t.length,i=af(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function j9(e,t,n,s){let r=It(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?$d(e):e;if(i>1)for(let c=0;c<r/a;c++){let u=c*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],Dd(l[u+d],0,n).length)}return o}function Dd(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(I2))} + ${parseFloat(e[1].toFixed(I2))}j`:Ra(e)?s=`'${e}'`:n==="bool"?s=a3(e):s=parseFloat(e.toFixed(I2)).toString(),ld(s,t)}function a3(e){return e===0?"false":"true"}function af(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=$d(e);return[Dd(m[0],0,n)]}return n==="bool"?[a3(e[0])]:[e[0].toString()]}if(l===1){if(i>r3){let g=_d*o,y=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-_d)*o,i*o));return n==="complex64"&&(y=$d(y),x=$d(x)),["["+y.map((A,b)=>Dd(A,r[b],n)).join(", ")+", ..., "+x.map((A,b)=>Dd(A,r[i-_d+b],n)).join(", ")+"]"]}let m=n==="complex64"?$d(e):Array.from(e);return["["+m.map((g,y)=>Dd(g,r[y],n)).join(", ")+"]"]}let c=t.slice(1),u=s.slice(1),d=s[0]*o,p=[];if(i>r3){for(let m=0;m<_d;m++){let g=m*d,y=g+d;p.push(...af(e.slice(g,y),c,n,u,r,!1))}p.push("...");for(let m=i-_d;m<i;m++){let g=m*d,y=g+d;p.push(...af(e.slice(g,y),c,n,u,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,y=g+d;p.push(...af(e.slice(g,y),c,n,u,r,m===i-1))}let h=l===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function $d(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var sn=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=It(e),n!=null){let s=n.length;M(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||W5(t,this.size),this.strides=au(e)}set(e,...t){t.length===0&&(t=[0]),M(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Tr().makeTensor(this.values,this.shape,this.dtype)}},Tr=null,Fu=null,q9=null;function X9(e){Tr=e}function K9(e){Fu=e}function Z9(e){q9=e}var tt=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=It(e),this.strides=au(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Fu.buffer(this.shape,this.dtype,e)}bufferSync(){return Fu.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return ou(this.shape,e,this.dtype==="complex64")}arraySync(){return ou(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=Tr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>rf(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Tr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>rf(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Tr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Tr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Fu.print(this,e)}clone(){return this.throwIfDisposed(),Fu.clone(this)}toString(e=!1){let t=this.dataSync();return H9(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Fu.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Tr().makeVariable(this,e,t,n)}};Object.defineProperty(tt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function Y9(){return v2("Tensor",()=>tt)}Y9();var Pd=class extends tt{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ea(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Tr().disposeTensor(this),this.dataId=e.dataId,Tr().incRef(this,null)}dispose(){Tr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Pd,Symbol.hasInstance,{value:e=>e instanceof tt&&e.assign!=null&&e.assign instanceof Function});var cr={};Me(cr,{assertTypesMatch:()=>d3,getTensorsInContainer:()=>C2,isTensorInList:()=>Q9,makeTypesMatch:()=>Ot});var o3=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(o3||{}),i3=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(i3||{}),l3=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(l3||{}),u3=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(u3||{}),c3=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(c3||{}),J9={float32:u3,int32:i3,bool:l3,complex64:c3};function Ln(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return J9[e][t]}function Fd(e){return Ln(e,"int32")}function Ot(e,t){if(e.dtype===t.dtype)return[e,t];let n=Ln(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function d3(e,t){M(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function Q9(e,t){return t.some(n=>n.id===e.id)}function C2(e){let t=[],n=new Set;return p3(e,t,n),t}function p3(e,t,n){if(e==null)return;if(e instanceof tt){t.push(e);return}if(!eR(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),p3(a,t,n))}}function eR(e){return Array.isArray(e)||typeof e=="object"}function T2(e){return e.kernelName!=null}var h3=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},N2=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new h3}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(No(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new B9(this.backendInstance),!0}setupRegisteredKernels(){Yr(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Yr(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof su)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,No(`Initialization of backend ${e} failed`),No(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return No(`Initialization of backend ${e} failed`),No(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return N2.nextTensorId++}nextVariableId(){return N2.nextVariableId++}clone(e){let t=V.runKernel(Za,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return V.runKernel(Oa,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(tf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=T2(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(T2(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=tf(h,this.backendName);M(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let y=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,y,x);let A=x.map(b=>{if(b.rank!=null)return b;let{dataId:w,shape:C,dtype:S}=b;return this.makeTensorFromDataId(w,C,S)});if(s){let b=this.getTensorsForGradient(h,f,A);n=this.saveTensorsForBackwardMode(b)}return A}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:c,attrs:u}=e,d=T2(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(l,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(l,c,t,d,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(h=>c[h]!=null?c[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=w2(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(M(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,c)=>a[c]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&Ra(e[0])&&(r=e.map(i=>Rd(i)));let a=s.write(r,t,n),o=new tt(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=G5(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r=new tt(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new Pd(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*g2(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Pd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*g2(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=w2(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((c,u)=>{if(c==null){let d=n[u],p=Th(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=C2(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(M(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));M(r instanceof tt,()=>"The result y returned by f() must be a tensor.");let a=U9(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n==null?tR(r.shape):n,G9(o,a,l=>this.tidy(l),nR);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return M(_a(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{M(t.every(o=>o instanceof tt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),M(n.value instanceof tt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M(_a(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),c=Array.isArray(l)?l:[l];M(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(c.every(d=>d instanceof tt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return c.forEach((d,p)=>{u[p]=()=>d}),u};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Ed(),n=await this.backend.time(e);return n.wallMs=Ed()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new h3;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},E2=N2;E2.nextTensorId=0;E2.nextVariableId=0;function tR(e){let t=y2(It(e),"float32");return V.makeTensor(t,e,"float32")}function f3(){let e=Z5();if(e._tfengine==null){let t=new K5(e);e._tfengine=new E2(t)}return I9(e._tfengine.ENV),X9(()=>e._tfengine),e._tfengine}var V=f3();function nR(e,t){let n={a:e,b:t};return V.runKernel(Xr,n)}var Ou={};Me(Ou,{isBrowser:()=>m3,isMobile:()=>aR,mockIsMobile:()=>rR});function sR(){return typeof navigator!="undefined"&&navigator!=null}var R2;function rR(e){R2=e}function aR(e){if(R2!==void 0)return R2;if(e||sR()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function m3(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var dr=Y();dr.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});dr.registerFlag("IS_BROWSER",()=>m3());dr.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");dr.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));dr.registerFlag("PROD",()=>!1);dr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>dr.getBool("DEBUG"));dr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);dr.registerFlag("IS_TEST",()=>!1);dr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);dr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Nr(e,t){let n=e;if(Rn(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||Rn(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&g3(e,s,[]),s}function g3(e,t,n){if(n=n||[],!Array.isArray(e)&&!Rn(e)){M(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}M(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),M(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)g3(e[r],s,n.concat(r))}function y3(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function $(e,t,n,s="numeric"){if(e instanceof tt)return y3(s,e.dtype,t,n),e;let r=Ih(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),y3(s,r,t,n),e==null||!Rn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=Nr(e,r);!Rn(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?sf(e,r):fi(e,[],!0);return V.makeTensor(i,a,r)}function Od(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>$(a,`${t}[${o}]`,n,s))}var A3="__op";function U(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+A3;let r=(...a)=>{V.startScope(n);try{let o=s(...a);return x2(o)&&console.error("Cannot return a Promise inside of tidy."),V.endScope(o),o}catch(o){throw V.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function oR(e,t){let n=$(e,"real","complex"),s=$(t,"imag","complex");Mn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return V.runKernel(cd,r)}var Ro=U({complex_:oR});function _o(e,t,n,s){if(s==null&&(s=Ih(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Rn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){A2(t);let r=It(t),a=It(n);M(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==It(t.slice(o)):!0;M(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Rn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?sf(e,s):fi(e,[],!0),V.makeTensor(e,t,s)}function pt(e,t,n){let s=Nr(e,n);return _o(e,t,s,n)}var _2={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},of=4;async function iR(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async d=>{let p=await l.bytes(),h=p.reduce((g,y)=>g+y.length,0)+of*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let y=p[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,m),m+=of,f.set(y,m),m+=y.length}d(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),n.push(c)}let a=await Promise.all(s);return{data:lR(a),specs:n}}function x3(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,c=It(l),u;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=_2[d.dtype],h=e.slice(r,r+c*p),f=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*d.scale+d.min}}else if(d.dtype==="float16")s===void 0&&(s=fR()),u=s(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*p}else if(i==="string"){let d=It(a.shape);u=[];for(let p=0;p<d;p++){let h=new Uint32Array(e.slice(r,r+of))[0];r+=of;let f=new Uint8Array(e.slice(r,r+h));u.push(f),r+=h}}else{let d=_2[i],p=e.slice(r,r+c*d);if(i==="float32")u=new Float32Array(p);else if(i==="int32")u=new Int32Array(p);else if(i==="bool")u=new Uint8Array(p);else if(i==="complex64"){u=new Float32Array(p);let h=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<h.length;y++)h[y]=u[y*2],f[y]=u[y*2+1];let m=pt(h,l,"float32"),g=pt(f,l,"float32");n[o]=Ro(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=c*d}i!=="complex64"&&(n[o]=pt(u,l,i))}return n}function lR(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var D2=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function b3(e){return D2?Buffer.byteLength(e):new Blob([e]).size}function uR(e){if(D2)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function cR(e){if(D2){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function $2(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function v3(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function w3(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function P2(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Md(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:b3(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:b3(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function dR(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)==0;)r-=8388608,s<<=1;return s&=~8388608,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function pR(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function hR(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function fR(){let e=dR(),t=pR(),n=hR();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var Vt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Vt.instance==null&&(Vt.instance=new Vt),Vt.instance}static registerSaveRouter(e){Vt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Vt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Vt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Vt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?Vt.getInstance().loadRouters:Vt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},mR=e=>Vt.registerSaveRouter(e),gR=e=>Vt.registerLoadRouter(e),yR=e=>Vt.getSaveHandlers(e),AR=(e,t)=>Vt.getLoadHandlers(e,t),F2="tensorflowjs",O2=1,sl="models_store",Do="model_info_store";function k3(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function M2(e){let t=e.result;t.createObjectStore(sl,{keyPath:"modelPath"}),t.createObjectStore(Do,{keyPath:"modelPath"})}var rl=class{constructor(e){if(this.indexedDB=k3(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(F2,O2);r.onupgradeneeded=()=>M2(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(sl,"readonly"),l=o.objectStore(sl).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=c=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=Md(t),i=a.transaction(Do,"readwrite"),l=i.objectStore(Do),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),u;c.onsuccess=()=>{u=a.transaction(sl,"readwrite");let p=u.objectStore(sl).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});p.onsuccess=()=>n({modelArtifactsInfo:o}),p.onerror=h=>{l=i.objectStore(Do);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(p.error)),f.onerror=m=>(a.close(),s(p.error))}},c.onerror=d=>(a.close(),s(c.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};rl.URL_SCHEME="indexeddb://";var S3=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(rl.URL_SCHEME)?xR(e.slice(rl.URL_SCHEME.length)):null;Vt.registerSaveRouter(S3);Vt.registerLoadRouter(S3);function xR(e){return new rl(e)}function bR(e){return e.startsWith(rl.URL_SCHEME)?e.slice(rl.URL_SCHEME.length):e}var vR=class{constructor(){this.indexedDB=k3()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(F2,O2);n.onupgradeneeded=()=>M2(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(Do,"readonly"),o=r.objectStore(Do).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=bR(e),new Promise((t,n)=>{let s=this.indexedDB.open(F2,O2);s.onupgradeneeded=()=>M2(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(Do,"readwrite"),o=a.objectStore(Do),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=o.delete(e),u=()=>{l=r.transaction(sl,"readwrite");let p=l.objectStore(sl).delete(e);p.onsuccess=()=>t(i.result.modelArtifactsInfo),p.onerror=h=>n(i.error)};c.onsuccess=u,c.onerror=d=>(u(),r.close(),n(i.error))}},i.onerror=c=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Jr="/",Mu="tensorflowjs_models",I3="info",wR="model_topology",kR="weight_specs",SR="weight_data",IR="model_metadata";function C3(e){return{info:[Mu,e,I3].join(Jr),topology:[Mu,e,wR].join(Jr),weightSpecs:[Mu,e,kR].join(Jr),weightData:[Mu,e,SR].join(Jr),modelMetadata:[Mu,e,IR].join(Jr)}}function T3(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function CR(e){let t=e.split(Jr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Jr)}function TR(e){return e.startsWith(al.URL_SCHEME)?e.slice(al.URL_SCHEME.length):e}var al=class{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=C3(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Md(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,uR(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw T3(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=cR(a),t}};al.URL_SCHEME="localstorage://";var N3=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(al.URL_SCHEME)?NR(e.slice(al.URL_SCHEME.length)):null;Vt.registerSaveRouter(N3);Vt.registerLoadRouter(N3);function NR(e){return new al(e)}var ER=class{constructor(){M(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Mu+Jr,n=Jr+I3;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=CR(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=TR(e);let t=C3(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return T3(t),n}},zu="://",Ds=class{constructor(){this.managers={}}static getInstance(){return Ds.instance==null&&(Ds.instance=new Ds),Ds.instance}static registerManager(e,t){M(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(zu)&&(e=e.slice(0,e.indexOf(zu))),M(e.length>0,()=>"scheme must not be an empty string.");let n=Ds.getInstance();M(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function lf(e){if(e.indexOf(zu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ds.getSchemes().join(",")}`);return{scheme:e.split(zu)[0],path:e.split(zu)[1]}}async function E3(e,t,n=!1){M(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=Vt.getLoadHandlers(e);M(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),M(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=Vt.getSaveHandlers(t);M(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),M(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=lf(e).scheme,l=lf(e).path,c=i===lf(e).scheme,u=await r.load();n&&c&&await Ds.getManager(i).removeModel(l);let d=await o.save(u);return n&&!c&&await Ds.getManager(i).removeModel(l),d.modelArtifactsInfo}async function RR(){let e=Ds.getSchemes(),t={};for(let n of e){let s=await Ds.getManager(n).listModels();for(let r in s){let a=n+zu+r;t[a]=s[r]}}return t}async function _R(e){let t=lf(e);return Ds.getManager(t.scheme).removeModel(t.path)}async function DR(e,t){return E3(e,t,!1)}async function $R(e,t){return E3(e,t,!0)}var PR=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new PR);try{Ds.registerManager(al.URL_SCHEME,new ER)}catch(e){}try{Ds.registerManager(rl.URL_SCHEME,new vR)}catch(e){}}var FR={importFetch:()=>GE()},z2,OR=class{constructor(){this.util=HE(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(z2==null&&(z2=FR.importFetch()),z2(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Y().get("IS_NODE")&&Y().setPlatform("node",new OR);function ze(e,t="float32",n){return t=t||"float32",A2(e),new sn(e,t,n)}function MR(e,t){let n=$(e,"x","cast");if(!U5(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return V.runKernel(Oa,s,r)}var me=U({cast_:MR});function zR(e){let n={x:$(e,"x","clone","string_or_numeric")};return V.runKernel(Za,n)}var Bn=U({clone_:zR});function R3(e,t=!1){console.log(e.toString(t))}f3();var LR={buffer:ze,cast:me,clone:Bn,print:R3};K9(LR);var rs={};Me(rs,{browserFiles:()=>jR,browserHTTPRequest:()=>YR,concatenateArrayBuffers:()=>$2,copyModel:()=>DR,decodeWeights:()=>x3,encodeWeights:()=>iR,fromMemory:()=>QR,getLoadHandlers:()=>AR,getModelArtifactsForJSON:()=>P2,getModelArtifactsInfoForJSON:()=>Md,getSaveHandlers:()=>yR,http:()=>V2,isHTTPScheme:()=>W2,listModels:()=>RR,loadWeights:()=>qR,moveModel:()=>$R,registerLoadRouter:()=>gR,registerSaveRouter:()=>mR,removeModel:()=>_R,weightsLoaderFactory:()=>P3,withSaveHandler:()=>e_});var BR="model",WR=".json",VR=".weights.bin";function _3(e){return new Promise(t=>setTimeout(t)).then(e)}var L2=class{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(L2.URL_SCHEME)&&(e=e.slice(L2.URL_SCHEME.length)),(e==null||e.length===0)&&(e=BR),this.modelJsonFileName=e+WR,this.weightDataFileName=e+VR}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=w3(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await _3(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await _3(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Md(e)}}}},uf=L2;uf.URL_SCHEME="downloads://";var UR=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=P2(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,$2(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>v3(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=v3(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},GR=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(uf.URL_SCHEME)?HR(e.slice(uf.URL_SCHEME.length)):null;Vt.registerSaveRouter(GR);function HR(e="model"){return new uf(e)}function jR(e){return new UR(e)}function D3(e,t,n,s){o(e),n=n==null?0:n,s=s==null?1:s,i(n,s);let r=0,a=l=>(l.then(c=>{let u=n+ ++r/e.length*(s-n);return t(u),c}),l);function o(l){M(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){M(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),M(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),M(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(a))}async function $3(e,t){t==null&&(t={});let n=t.fetchFunc==null?Y().platform.fetch:t.fetchFunc,s=e.map(d=>n(d,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await D3(s,t.onProgress,r,a)).map(d=>d.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(i):await D3(i,t.onProgress,l,c)}async function qR(e,t="",n,s){return P3(o=>$3(o,{requestInit:s}))(e,t,n)}function P3(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=_2[y]*It(g.shape),A=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,w)=>{b===g.name&&(A(),o[w]=!0)}):A(),i.push(g.name),m+=x})}),!o.every(h=>h)){let h=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),c=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;c.push(m)})});let u=await e(c),d={},p=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let b=0;b<f;b++)m+=u[p+b].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let w=new Uint8Array(u[p+b]);y.set(w,x),x+=w.byteLength}a[h].forEach(b=>{let w=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),C=x3(w,[b.manifestEntry]);for(let S in C)d[S]=C[S]}),p+=f}),d}}var XR="application/octet-stream",KR="application/json",B2=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(M(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,M(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&M(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=w3(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:KR}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:XR}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Md(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return P2(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=ZR(t),r=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let o=[],i=[];for(let c of e)for(let u of c.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(u)):o.push(r+u+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await $3(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,$2(l)]}};B2.URL_SCHEME_REGEX=/^https?:\/\//;function ZR(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function W2(e){return e.match(B2.URL_SCHEME_REGEX)!=null}var F3=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>W2(s)):n=W2(e),n)return V2(e,t)}return null};Vt.registerSaveRouter(F3);Vt.registerLoadRouter(F3);function V2(e,t){return new B2(e,t)}function YR(e,t){return V2(e,t)}var U2=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},JR=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function QR(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new U2(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new U2({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new U2({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function e_(e){return new JR(e)}var O3={};Me(O3,{confusionMatrix:()=>a_});function t_(e,t,n=!1,s=!1){let r=$(e,"a","matMul"),a=$(t,"b","matMul");[r,a]=Ot(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return V.runKernel(Fa,o,i)}var je=U({matMul_:t_});function n_(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:$(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return V.runKernel(Oi,a,o)}var zd=U({oneHot_:n_});function s_(e,t){let n=$(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{M(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return V.runKernel(ko,s,r)}var nt=U({transpose_:s_});function r_(e,t,n){let s=$(e,"labels","confusionMatrix"),r=$(t,"predictions","confusionMatrix");M(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),M(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),M(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),M(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),M(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=zd(me(s,"int32"),n),o=zd(me(r,"int32"),n),i=nt(a),l=je(i,o);return me(l,"int32")}var a_=U({confusionMatrix_:r_}),ol={};Me(ol,{assertAndGetBroadcastShape:()=>At,getBroadcastDims:()=>M3,getReductionAxes:()=>Kt});function M3(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function Kt(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function At(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var $s={};Me($s,{fromPixels:()=>p_,fromPixelsAsync:()=>c_,toPixels:()=>d_});function z3(e,t,n){if(hi(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Nr(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return _o(e,t,s,n)}var il;function L3(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r){let f=2;if(r&&e.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(tf(Cd,V.backendName)!=null){let f={pixels:e},m={numChannels:t};return V.runKernel(Cd,f,m)}let[c,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(o)d=e.getContext("2d").getImageData(0,0,c,u).data;else if(s||n)d=e.data;else if(a||r||i){if(il==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")il=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else il=document.createElement("canvas").getContext("2d");il.canvas.width=c,il.canvas.height=u,il.drawImage(e,0,0,c,u),d=il.getImageData(0,0,c,u).data}let p;if(t===4)p=new Int32Array(d);else{let f=c*u;p=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)p[m*t+g]=d[m*4+g]}return z3(p,[u,c,t],"int32")}function o_(e){return e!=null&&e.data instanceof Uint8Array}function i_(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function l_(e){return e!=null&&e.width!==0&&e.height!==0}function u_(e){return i_()&&!(e instanceof ImageBitmap)&&l_(e)&&!o_(e)}async function c_(e,t=3){let n=null;if(Y().getBool("WRAP_TO_IMAGEBITMAP")&&u_(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return L3(n,t)}async function d_(e,t){let n=$(e,"img","toPixels");if(!(e instanceof tt)){let c=n;n=me(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){let u=[0,0,0,255];for(let p=0;p<a;p++){let h=o[c*a+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(u[0]=h*i,u[1]=h*i,u[2]=h*i):u[p]=h*i}let d=c*4;l[d+0]=Math.round(u[0]),l[d+1]=Math.round(u[1]),l[d+2]=Math.round(u[2]),l[d+3]=Math.round(u[3])}if(t!=null){t.width=r,t.height=s;let c=t.getContext("2d"),u=new ImageData(l,r,s);c.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var p_=U({fromPixels_:L3}),G2={};Me(G2,{prepareAndValidate:()=>B3});function B3(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(It(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let d=0;d<r.length-1;++d)o*=r[d];let i=e.shape,l=r.slice();l.pop();let c=1;for(let d=a;d<n;++d)c*=i[d],l.push(i[d]);let u=[...au(e.shape).map(d=>d/c),1].slice(0,a);return[l,o,c,u]}var H2={};Me(H2,{calculateShapes:()=>W3,validateInput:()=>q2,validateUpdateShape:()=>j2});function j2(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function q2(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}j2(n,t,e)}function W3(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let d=r;d<a;++d)o*=n[d];let i=r<1?1:r,l=It(t.shape)/i,c=[...au(n.slice(0,r)),1],u=It(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}var Mt={};Me(Mt,{assertParamsValid:()=>f_,computeFlatOffset:()=>x_,computeOutShape:()=>g_,getNormalizedAxes:()=>y_,isSliceContinous:()=>A_,maskToAxes:()=>m_,parseSliceParams:()=>Z3,sliceInfo:()=>b_,startForAxis:()=>X3,startIndicesWithElidedDims:()=>H3,stopForAxis:()=>K3,stopIndicesWithElidedDims:()=>j3,stridesForAxis:()=>q3,stridesWithElidedDims:()=>V3});var X2=-2,h_=-1;function f_(e,t,n){let s=e.shape.length;M(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),M(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)M(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function m_(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function g_(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function V3(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function U3(e,t,n){return n<=e?n:n-(t-1)}function G3(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function y_(e,t,n,s,r,a,o,i,l){let c=e.length,u=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){let h=t[0],f=n+1;u=H3(o,h,f,s,e),d=j3(i,h,f,r,e),p=V3(a,h,f,e)}else for(let h=0;h<c;h++)u[h]=X3(o,s,a,e,h,l),d[h]=K3(i,r,a,e,h,l),p[h]=q3(a,h,l);return{begin:u,end:d,strides:p}}function H3(e,t,n,s,r){let a=[...r],o=G3(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=U3(t,n,i),c=s[l];e&1<<l&&(c=0),a[i]=c}return a}function j3(e,t,n,s,r){let a=[...r],o=G3(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=U3(t,n,i),c=s[l];e&1<<l&&(c=Number.MAX_SAFE_INTEGER),a[i]=c}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=id(0,a[i],r[i])}return a}function q3(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function X3(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=id(0,o,l-1),o}function K3(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=id(0,o,l):o=id(-1,o,l-1),o}function A_(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function x_(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Z3(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{M(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(M(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function b_(e,t,n,s,r,a,o,i,l){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,o!=null&&(o&o-1)!=0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let A=0;A<d.dims;A++)u&&(1<<A&i)!=0&&d.numAddAxisAfterEllipsis++,1<<A&o&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};v_(d,p);let h=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(p.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let b=!!(p.shrinkAxisMask&1<<A),w=e[A];if(w===-1){g.push(b?1:-1);continue}let C=[p.beginMask&1<<A,p.endMask&1<<A],S=[p.strides[A]>0?0:-1,p.strides[A]>0?w:w-1];if(b&&p.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[A]===1;let E=!!(p.beginMask&1<<A&&p.endMask&1<<A);if(p.beginValid&&p.endValid){if(b){let P=p.begin[A]<0?w+p.begin[A]:p.begin[A];if(p.begin[A]=P,p.end[A]=p.begin[A]+1,P<0||P>=w)throw Error(`slice index ${p.begin[A]} of dimension ${A} out of bounds.`)}else p.begin[A]=Y3(p.begin[A],0,p.strides[A],w,C,S),p.end[A]=Y3(p.end[A],1,p.strides[A],w,C,S);let _=p.strides[A]===1&&p.begin[A]===0&&p.end[A]===w;h=h&&_,f=f&&(A===0&&p.strides[A]===1||_)}else h=h&&p.strides[A]===1&&E,f=f&&(A===0&&p.strides[A]===1||E);let R,F=!1;if(p.beginValid&&p.endValid?(R=p.end[A]-p.begin[A],F=!0):b?(R=1,F=!0):E&&w>=0&&(p.strides[A]<0?R=-w:R=w,F=!0),F){let _;R===0||R<0!=p.strides[A]<0?_=0:_=Math.trunc(R/p.strides[A])+(R%p.strides[A]!=0?1:0),g.push(_)}else g.push(-1)}for(let A=0;A<p.finalShapeGatherIndices.length;++A){let b=p.finalShapeGatherIndices[A];b>=0?y.push(g[b]):b===X2&&y.push(1)}return{finalShapeSparse:y.filter((A,b)=>p.finalShapeGatherIndices[b]!==X2),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function v_(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(X2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(h_),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function Y3(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var ce={};Me(ce,{Serializable:()=>J3,SerializationMap:()=>ll,registerClass:()=>$o});var J3=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ll=class{constructor(){this.classNameMap={}}static getMap(){return ll.instance==null&&(ll.instance=new ll),ll.instance}static register(e){ll.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function $o(e){M(e.className!=null,()=>"Class being registered does not have the static className property defined."),M(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),M(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ll.register(e)}var Q3={};Me(Q3,{TEST_EPSILON_FLOAT16:()=>ev,encodeStrings:()=>tv,expectArrayBuffersEqual:()=>N_,expectArraysClose:()=>k_,expectArraysEqual:()=>I_,expectNumbersClose:()=>C_,expectPromiseToFail:()=>S_,expectValuesInRange:()=>T_,testEpsilon:()=>K2});var w_=.001,ev=.1;function k_(e,t,n){return n==null&&(n=K2()),Z2(e,t,(s,r)=>Y2(s,r,n))}function K2(){return V.backend.floatPrecision()===32?w_:ev}function Z2(e,t,n){let s=!0;if((Rn(e)||Rn(t))&&(s=!1),Rn(e)&&Rn(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Nr(e),i=Nr(t);if(!Ea(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=Rn(e)?e:fi(e),a=Rn(t)?t:fi(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}}function S_(e,t){e().then(()=>t.fail(),()=>t())}function I_(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ra(e)||Ra(e[0])||Ra(t)||Ra(t[0])?Z2(e,n,(s,r)=>s==r):Z2(e,t,(s,r)=>Y2(s,r,0))}function C_(e,t,n){if(n==null&&(n=K2()),!Y2(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Y2(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function T_(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function N_(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function tv(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?tv(n):e[t]=Rd(n)}return e}var nv="0.0.0";function sv(){Y().set("PROD",!0)}function E_(){Y().set("DEBUG",!0)}function R_(){Y().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function J2(e){Y().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}Z9(J2);function __(){V.disposeVariables()}function as(){return V}function cf(){return V.memory()}function D_(e){return V.profile(e)}function X(e,t){return V.tidy(e,t)}function ne(e){C2(e).forEach(n=>n.dispose())}function yn(e){return V.keep(e)}function $_(e){return V.time(e)}function rv(e){return V.setBackend(e)}function df(){return V.ready()}function Ps(){return V.backendName}function P_(e){V.removeBackend(e)}function Q2(e){return V.findBackend(e)}function F_(e){return V.findBackendFactory(e)}function ul(e,t,n=1){return V.registerBackend(e,t,n)}function Er(){return V.backend}function O_(e,t){Y().setPlatform(e,t)}function M_(e,t){let n=$(e,"a","add"),s=$(t,"b","add");[n,s]=Ot(n,s);let r={a:n,b:s};return V.runKernel(Xr,r)}var ue=U({add_:M_});function z_(e,t){let n=$(e,"a","floorDiv"),s=$(t,"b","floorDiv");[n,s]=Ot(n,s);let r={a:n,b:s};return V.runKernel(qa,r)}var pf=U({floorDiv_:z_});function L_(e,t){let n=$(e,"a","div"),s=$(t,"b","div");if([n,s]=Ot(n,s),n.dtype==="int32"&&s.dtype==="int32")return pf(n,s);let r={a:n,b:s},a={};return V.runKernel(Ua,r,a)}var de=U({div_:L_});function B_(e,t){let n=$(e,"a","mul"),s=$(t,"b","mul");[n,s]=Ot(n,s);let r={a:n,b:s};return V.runKernel(oo,r)}var L=U({mul_:B_});function W_(e){let t=$(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return V.runKernel(dd,n)}else{let n={x:t};return V.runKernel(mi,n)}}var rn=U({abs_:W_});function V_(e){let n={x:$(e,"x","acos")};return V.runKernel(iu,n)}var av=U({acos_:V_});function U_(e){let n={x:$(e,"x","acosh")};return V.runKernel(lu,n)}var ov=U({acosh_:U_});function G_(e){M(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),M(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>$(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Ea(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return V.runKernel(Da,s)}var hf=U({addN_:G_});function H_(e,t=null,n=!1){let r={x:$(e,"x","all","bool")},a={axis:t,keepDims:n};return V.runKernel(uu,r,a)}var ey=U({all_:H_});function j_(e,t=null,n=!1){let r={x:$(e,"x","any","bool")},a={axis:t,keepDims:n};return V.runKernel(cu,r,a)}var ff=U({any_:j_});function q_(e,t=0){let s={x:$(e,"x","argMax")},r={axis:t};return V.runKernel($a,s,r)}var Fs=U({argMax_:q_});function X_(e,t=0){let s={x:$(e,"x","argMin")},r={axis:t};return V.runKernel(du,s,r)}var iv=U({argMin_:X_});function K_(e){let n={x:$(e,"x","asin")};return V.runKernel(pu,n)}var lv=U({asin_:K_});function Z_(e){let n={x:$(e,"x","asinh")};return V.runKernel(hu,n)}var uv=U({asinh_:Z_});function Y_(e){let n={x:$(e,"x","atan")};return V.runKernel(fu,n)}var cv=U({atan_:Y_});function J_(e,t){let n=$(e,"a","atan2"),s=$(t,"b","atan2");[n,s]=Ot(n,s);let r={a:n,b:s};return V.runKernel(gu,r)}var dv=U({atan2_:J_});function Q_(e){let n={x:$(e,"x","atanh")};return V.runKernel(mu,n)}var pv=U({atanh_:Q_});function eD(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=mv(r);return Ld(e,i,n,a,s,null,null,l)}function hv(e,t,n,s,r,a,o="channelsLast"){let[i,l]=mf(t),c;if(o==="channelsLast")c=[i,l,e[3],e[3]];else if(o==="channelsFirst")c=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Ld(e,c,n,s,r,a,!1,o)}function tD(e,t,n,s,r,a,o="NDHWC"){let[i,l,c]=ny(t),u,d;if(o==="NDHWC")d="channelsLast",u=[i,l,c,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",u=[i,l,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return fv(e,u,n,s,r,!1,d,a)}function Ld(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,c,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,d]=e;else if(i==="channelsFirst")[l,d,c,u]=e;else throw new Error(`Unknown dataFormat ${i}`);let[p,h,,f]=t,[m,g]=mf(n),[y,x]=mf(s),A=Lu(p,y),b=Lu(h,x),{padInfo:w,outHeight:C,outWidth:S}=rD(r,c,u,m,g,A,b,a,i),E=o?f*d:f,R;return i==="channelsFirst"?R=[l,E,C,S]:i==="channelsLast"&&(R=[l,C,S,E]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:u,inChannels:d,outHeight:C,outWidth:S,outChannels:E,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:A,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:e,outShape:R,filterShape:t}}function fv(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,c,u,d,p]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,d,p]=e;else if(o==="channelsFirst")[l,p,c,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[y,x,A]=ny(n),[b,w,C]=ny(s),S=Lu(h,b),E=Lu(f,w),R=Lu(m,C),{padInfo:F,outDepth:_,outHeight:P,outWidth:T}=aD(r,c,u,d,y,x,A,S,E,R,i),O=a?g*p:g,G;return o==="channelsFirst"?G=[l,O,_,P,T]:o==="channelsLast"&&(G=[l,_,P,T,O]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:d,inChannels:p,outDepth:_,outHeight:P,outWidth:T,outChannels:O,padInfo:F,strideDepth:y,strideHeight:x,strideWidth:A,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:w,dilationWidth:C,inShape:e,outShape:G,filterShape:t}}function nD(e,t,n,s,r){s==null&&(s=ty(e,t,n));let a=e[0],o=e[1],i=cl((a-t+2*s)/n+1,r),l=cl((o-t+2*s)/n+1,r);return[i,l]}function sD(e,t,n,s,r,a){r==null&&(r=ty(e,t,s));let o=e[0],i=e[1],l=e[2],c=cl((o-t+2*r)/s+1,a),u=cl((i-t+2*r)/s+1,a),d=cl((l-t+2*r)/s+1,a);return[c,u,d,n]}function ty(e,t,n,s=1){let r=Lu(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function mf(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function ny(e){return typeof e=="number"?[e,e,e]:e}function Lu(e,t){return t<=1?e:e+(e-1)*(t-1)}function rD(e,t,n,s,r,a,o,i,l){let c,u,d;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=nD([t,n],a,s,e,i);u=h[0],d=h[1]}else if(e==="same"){u=Math.ceil(t/s),d=Math.ceil(n/r);let p=Math.max(0,(u-1)*s+a-t),h=Math.max(0,(d-1)*r+o-n),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),y=h-g;c={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-a+1)/s),d=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=cl((t-a+p+h)/s+1,i),d=cl((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:u,outWidth:d}}function aD(e,t,n,s,r,a,o,i,l,c,u){let d,p,h,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=sD([t,n,s,1],i,1,r,e,u);p=g[0],h=g[1],f=g[2]}else if(e==="same"){p=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/o);let m=(p-1)*r+i-t,g=(h-1)*a+l-n,y=(f-1)*o+c-s,x=Math.floor(m/2),A=m-x,b=Math.floor(g/2),w=g-b,C=Math.floor(y/2),S=y-C;d={top:b,bottom:w,left:C,right:S,front:x,back:A,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/r),h=Math.ceil((n-l+1)/a),f=Math.ceil((s-c+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function cl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Po(e){let[t,n,s]=mf(e);return t===1&&n===1&&s===1}function Rr(e,t){return Po(e)||Po(t)}function mv(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Wn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")M(ru(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{M(ru(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function oD(e,t){let s={x:$(e,"x","reshape","string_or_numeric")},r={shape:t};return V.runKernel(Li,s,r)}var H=U({reshape_:oD});function iD(e,t,n,s,r){let a=$(e,"x","avgPool","float32"),o=1;M(Rr(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Wn("avgPool",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=V.runKernel(Pa,c,u);return d=me(d,a.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var gf=U({avgPool_:iD});function lD(e,t,n,s,r,a="NDHWC"){let o=$(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Wn("avgPool3d",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=V.runKernel(ud,c,u);return d=me(d,i.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var sy=U({avgPool3d_:lD});function uD(e,t=0){M(e.length>=1,()=>"Pass at least one tensor to concat");let n=Od(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Bn(n[0]);let s=n,r={axis:t};return V.runKernel(yi,s,r)}var St=U({concat_:uD});function cD(e){let n={x:$(e,"x","sigmoid","float32")};return V.runKernel(go,n)}var _n=U({sigmoid_:cD});function dD(e,t,n){let s=$(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return V.runKernel(Gi,r,a)}var Fe=U({slice_:dD});function pD(e){let n={x:$(e,"x","tanh","float32")};return V.runKernel(wo,n)}var Bu=U({tanh_:pD});function hD(e,t,n,s,r,a){let o=$(e,"forgetBias","basicLSTMCell"),i=$(t,"lstmKernel","basicLSTMCell"),l=$(n,"lstmBias","basicLSTMCell"),c=$(s,"data","basicLSTMCell"),u=$(r,"c","basicLSTMCell"),d=$(a,"h","basicLSTMCell"),p=St([c,d],1),h=je(p,i),f=ue(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=Fe(f,[0,0],y),A=Fe(f,[0,g],y),b=Fe(f,[0,g*2],y),w=Fe(f,[0,g*3],y),C=ue(L(_n(x),Bu(A)),L(u,_n(ue(o,b)))),S=L(Bu(C),_n(w));return[C,S]}var fD=U({basicLSTMCell_:hD});function mD(e,t,n){let s=$(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);M(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),M(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),M(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return V.runKernel(gi,a,o)}var yf=U({batchToSpaceND_:mD});function gD(e){let t;return e.rank===0||e.rank===1?t=H(e,[1,1,1,e.size]):e.rank===2?t=H(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function yD(e,t,n,s,r,a){a==null&&(a=.001);let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;r!=null&&(c=$(r,"scale","batchNorm"));let u;s!=null&&(u=$(s,"offset","batchNorm")),M(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:gD(o),scale:c,offset:u,mean:i,variance:l},h={varianceEpsilon:a},f=V.runKernel(Xa,p,h);return H(f,o.shape)}var Wu=U({batchNorm_:yD});function AD(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;r!=null&&(c=$(r,"scale","batchNorm"));let u;return s!=null&&(u=$(s,"offset","batchNorm")),M(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),M(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),M(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Wu(o,i,l,u,c,a)}var gv=U({batchNorm2d_:AD});function xD(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;r!=null&&(c=$(r,"scale","batchNorm"));let u;return s!=null&&(u=$(s,"offset","batchNorm")),M(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),M(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),M(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Wu(o,i,l,u,c,a)}var yv=U({batchNorm3d_:xD});function bD(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;r!=null&&(c=$(r,"scale","batchNorm"));let u;return s!=null&&(u=$(s,"offset","batchNorm")),M(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),M(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),M(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Wu(o,i,l,u,c,a)}var Av=U({batchNorm4d_:bD});function vD(e,t,n){let s=$(e,"x","bincount"),r=$(t,"weights","bincount");M(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return V.runKernel(Rh,a,o)}var ry=U({bincount_:vD});function wD(e,t){let n=$(e,"s0","broadcastArgs","int32"),s=$(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return V.runKernel(_h,r)}var xv=U({broadcastArgs_:wD});function kD(e,t){let n=$(e,"broadcastTo","x"),s=n.shape;if(t.some(c=>!(c>0)||c%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let c=n.shape.slice();for(;c.length<t.length;)c.unshift(1);n=H(n,c)}let r=n.shape,a=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])a[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return Bn(n);let i={x:n},l={reps:a};return V.runKernel(Zr,i,l)}var Bd=U({broadcastTo_:kD});function SD(e){let n={x:$(e,"x","ceil","float32")};return V.runKernel(Ma,n)}var bv=U({ceil_:SD});function ID(e,t,n){let s=$(e,"x","clipByValue");M(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return V.runKernel(Kr,r,a)}var As=U({clipByValue_:ID});function CD(e){return St(e,0)}var vv=U({concat1d_:CD});function TD(e,t){return St(e,t)}var Vu=U({concat2d_:TD});function ND(e,t){return St(e,t)}var wv=U({concat3d_:ND});function ED(e,t){return St(e,t)}var kv=U({concat4d_:ED});function RD(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","conv2d","float32"),l=$(t,"filter","conv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Wn("conv2d",s,o);let d=r==="NHWC"?c.shape[3]:c.shape[1];M(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),M(Rr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let p={x:c,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=V.runKernel(za,p,h);return u?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Fo=U({conv2d_:RD});function _D(e,t,n,s,r="NWC",a=1,o){let i=$(e,"x","conv1d"),l=$(t,"filter","conv1d"),c=i,u=!1;i.rank===2&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1]])),M(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),M(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Wn("conv1d",s,o),M(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),M(Rr(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),M(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let d=H(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=H(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Fo(p,d,[1,n],s,"NHWC",[1,a],o);return u?H(g,[g.shape[2],g.shape[3]]):H(g,[g.shape[0],g.shape[2],g.shape[3]])}var ay=U({conv1d_:_D});function DD(e,t,n,s,r,a="NHWC",o){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,c=!1;t.rank===3&&(c=!0,l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),M(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),M(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),M(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?l.shape[3]:l.shape[1];M(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),M(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),Wn("conv2dDerInput",r,o);let p={dy:l,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=V.runKernel(La,p,h);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var oy=U({conv2DBackpropInput_:DD});function $D(e,t,n,s,r,a){let o=$(e,"x","conv2dTranspose"),i=$(t,"filter","conv2dTranspose");return oy(n,o,i,s,r,"NHWC",a)}var iy=U({conv2dTranspose_:$D});function PD(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=$(e,"x","conv3d"),i=$(t,"filter","conv3d"),l=o,c=!1;o.rank===4&&(c=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),M(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),M(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),M(Rr(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let u={x:l,filter:i},d={strides:n,pad:s,dataFormat:r,dilations:a},p=V.runKernel(pd,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var ly=U({conv3d_:PD});function FD(e,t,n,s,r){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],c=o.shape[4];M(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),M(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),M(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),M(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),M(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let u={dy:o,filter:n},d={pad:r,strides:s,inputShape:a},p=V.runKernel(Ph,u,d);return i?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Sv=U({conv3DBackpropInput_:FD});function OD(e,t,n,s,r){let a=$(e,"x","conv3dTranspose"),o=$(t,"filter","conv3dTranspose");return Sv(n,a,o,s,r)}var Iv=U({conv3dTranspose_:OD});function MD(e){let n={x:$(e,"x","cos","float32")};return V.runKernel(Ba,n)}var Af=U({cos_:MD});function zD(e){let n={x:$(e,"x","cosh","float32")};return V.runKernel(Wa,n)}var uy=U({cosh_:zD});function LD(e,t=0,n=!1,s=!1){let a={x:$(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return V.runKernel(Ai,a,o)}var cy=U({cumsum_:LD});function BD(e,t,n,s=!1){let r=$(e,"x","denseBincount"),a=$(t,"weights","denseBincount");M(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),M(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return V.runKernel(Fh,o,i)}var Cv=U({denseBincount_:BD});function WD(e,t,n="NHWC"){let s=$(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];M(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),M(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),M(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),M(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return V.runKernel(bi,i,l)}var Tv=U({depthToSpace_:WD});function VD(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","depthwiseConv2d","float32"),l=$(t,"filter","depthwiseConv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),Wn("depthwiseConv2d",s,o);let d={x:c,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},h=V.runKernel(Va,d,p);return u?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Wd=U({depthwiseConv2d_:VD});function UD(e){let n={x:$(e,"x","diag")};return V.runKernel(zh,n)}var GD=U({diag_:UD});function HD(e,t,n,s,r=[1,1],a="NHWC"){let o=$(e,"x","dilation2d"),i=$(t,"filter","dilation2d");M(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),M(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),M(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,c=!1;o.rank===3&&(l=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);let u={x:l,filter:i},d={strides:n,pad:s,dilations:r},p=V.runKernel(hd,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Nv=U({dilation2d_:HD});function jD(e,t){let n=$(e,"a","equal","string_or_numeric"),s=$(t,"b","equal","string_or_numeric");[n,s]=Ot(n,s),At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(vi,r)}var Os=U({equal_:jD});function qD(e,t,n){let s=$(t,"a","where"),r=$(n,"b","where"),a=$(e,"condition","where","bool"),o=At(At(a.shape,s.shape),r.shape),i=Bd(a,o),l=Bd(s,o),c=Bd(r,o),u={condition:i,t:l,e:c};return V.runKernel(Ui,u)}var Vn=U({where_:qD});function XD(e){let n={x:$(e,"x","zerosLike")};return V.runKernel(Qi,n)}var st=U({zerosLike_:XD});function KD(e,t){let n=$(e,"a","div"),s=$(t,"b","div");[n,s]=Ot(n,s);let r=de(n,s),a=st(r),o=Os(s,a);return Vn(o,a,r)}var Ev=U({divNoNan_:KD});function ZD(e,t){let n=$(e,"t1","dot"),s=$(t,"t2","dot");M((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(M(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=H(n,[1,-1]),i=H(s,[-1,1]),l=je(o,i);return H(l,[])}else if(n.rank===1&&s.rank===2){let o=H(n,[1,-1]),i=H(s,[s.shape[0],s.shape[1]]),l=je(o,i);return H(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=H(s,[-1,1]),i=je(n,o);return H(i,[i.size])}else{let o=H(s,[s.shape[0],s.shape[1]]);return je(n,o)}}var YD=U({dot_:ZD});function JD(e,...t){let n=t.map((r,a)=>$(r,`tensors${a}`,"einsum")),s={equation:e};return V.runKernel(fd,n,s)}var Rv=U({einsum_:JD});function QD(e){let n={x:$(e,"x","elu","float32")};return V.runKernel(Ga,n)}var Vd=U({elu_:QD});function e$(e){let t=$(e,"x","erf");M(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=me(t,"float32"));let n={x:t};return V.runKernel(yu,n)}var _v=U({erf_:e$});function t$(e){let n={x:$(e,"x","exp")};return V.runKernel(Ha,n)}var Ms=U({exp_:t$});function n$(e,t=0){let n=$(e,"x","expandDims","string_or_numeric");M(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return V.runKernel(wi,s,r)}var Zt=U({expandDims_:n$});function s$(e){let n={x:$(e,"x","expm1")};return V.runKernel(ki,n)}var Dv=U({expm1_:s$});function r$(e,t){let n=$(e,"x","tile","string_or_numeric");M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return V.runKernel(Zr,s,r)}var Ys=U({tile_:r$});function a$(e,t,n,s="float32"){t==null&&(t=e);let r=ze([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=H(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return Ys(Zt(o,0),[n[0],1,1]);if(n.length===2)return Ys(Zt(Zt(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return Ys(Zt(Zt(Zt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var dy=U({eye_:a$});function Uu(e,t,n){let s={shape:e,value:t,dtype:n};return V.runKernel(Au,{},s)}function o$(e){let n={x:$(e,"x","floor","float32")};return V.runKernel(ja,n)}var Ud=U({floor_:o$});function i$(e,t,n=0,s=0){let r=$(e,"x","gather"),a=$(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return V.runKernel(Ii,o,i)}var Gu=U({gather_:i$});function l$(e,t){let n=$(e,"a","greater","string_or_numeric"),s=$(t,"b","greater","string_or_numeric");[n,s]=Ot(n,s),At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ti,r)}var xs=U({greater_:l$});function u$(e,t){let n=$(e,"a","greaterEqual","string_or_numeric"),s=$(t,"b","greaterEqual","string_or_numeric");[n,s]=Ot(n,s),At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ka,r)}var dl=U({greaterEqual_:u$});function c$(e){let n={input:$(e,"input","imag")};return V.runKernel(md,n)}var xf=U({imag_:c$});function d$(e){let n={x:$(e,"x","isFinite")};return V.runKernel(xu,n)}var p$=U({isFinite_:d$});function h$(e){let n={x:$(e,"x","isInf")};return V.runKernel(bu,n)}var f$=U({isInf_:h$});function m$(e){let n={x:$(e,"x","isNaN")};return V.runKernel(vu,n)}var $v=U({isNaN_:m$});function g$(e,t=.2){let s={x:$(e,"x","leakyRelu")},r={alpha:t};return V.runKernel(Ya,s,r)}var bf=U({leakyRelu_:g$});function y$(e,t){let n=$(e,"a","less","string_or_numeric"),s=$(t,"b","less","string_or_numeric");[n,s]=Ot(n,s),At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ni,r)}var py=U({less_:y$});function A$(e,t){let n=$(e,"a","lessEqual","string_or_numeric"),s=$(t,"b","lessEqual","string_or_numeric");[n,s]=Ot(n,s),At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ei,r)}var pl=U({lessEqual_:A$});function Pv(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return V.runKernel(Gh,{},s)}function x$(e,t=5,n=1,s=1,r=.5){let a=$(e,"x","localResponseNormalization");M(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),M(ru(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=H(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},c={depthRadius:t,bias:n,alpha:s,beta:r},u=V.runKernel(yd,l,c);return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Fv=U({localResponseNormalization_:x$});function b$(e){let n={x:$(e,"x","log","float32")};return V.runKernel(Ja,n)}var zs=U({log_:b$});function v$(e){let n={x:$(e,"x","log1p")};return V.runKernel(wu,n)}var vf=U({log1p_:v$});function w$(e){return M(_a(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=$(t,"x","tf.grad","string_or_numeric"),r=n!=null?$(n,"dy","tf.grad"):null;return V.tidy(()=>{let{value:a,grads:o}=V.gradients(()=>e(s),[s],r);return r!=null&&Mn(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),wf(o),o[0]})}}function k$(e){return M(_a(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{M(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=Od(t,"args","tf.grads","string_or_numeric"),r=n!=null?$(n,"dy","tf.grads"):null;return V.tidy(()=>{let{value:a,grads:o}=V.gradients(()=>e(...s),s,r);return r!=null&&Mn(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),wf(o),o})}}function S$(e){return M(_a(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{M(t instanceof tt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),M(n==null||n instanceof tt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=V.gradients(()=>e(t),[t],n);return wf(s),{grad:s[0],value:r}}}function I$(e){return M(_a(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{M(Array.isArray(t)&&t.every(r=>r instanceof tt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),M(n==null||n instanceof tt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=V.gradients(()=>e(...t),t,n);return n!=null&&Mn(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),wf(s.grads),s}}function Ov(e,t){M(_a(e),()=>"The f passed in variableGrads(f) must be a function"),M(t==null||Array.isArray(t)&&t.every(c=>c instanceof Pd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in V.registeredVariables)t.push(V.registeredVariables[c])}let s=n?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),M(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=V.gradients(e,t,null,a);M(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((c,u)=>{i[u]!=null&&(l[c.name]=i[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:o,grads:l}}function _r(e){return V.customGrad(e)}function wf(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function C$(e){let n={x:$(e,"x","neg")};return V.runKernel(_i,n)}var zt=U({neg_:C$});function T$(e){let n={x:$(e,"x","softplus")};return V.runKernel(_u,n)}var Hu=U({softplus_:T$});function N$(e){let t=$(e,"x","logSigmoid");return _r(s=>({value:zt(Hu(zt(s))),gradFunc:o=>L(o,_n(zt(s)))}))(t)}var E$=U({logSigmoid_:N$});function R$(e,t=null,n=!1){let r={x:$(e,"x","max")},a={reductionIndices:t,keepDims:n};return V.runKernel(Qa,r,a)}var An=U({max_:R$});function _$(e,t){let n=$(e,"a","sub"),s=$(t,"b","sub");[n,s]=Ot(n,s);let r={a:n,b:s};return V.runKernel(vo,r)}var he=U({sub_:_$});function D$(e,t=null,n=!1){let s=$(e,"x","sum");s.dtype==="bool"&&(s=me(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return V.runKernel(Ao,r,a)}var we=U({sum_:D$});function $$(e,t=-1){let n=$(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return _r((r,a)=>{let o=!0,i=An(r,t,!0),l=he(r,i),c=he(me(l,"float32"),zs(we(Ms(l),t,o)));return a([c]),{value:c,gradFunc:(d,p)=>{let[h]=p,f=!0,m=Ms(h);return he(d,L(we(d,t,f),m))}}})(n)}var hy=U({logSoftmax_:$$});function fy(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Mv(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function zv(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function hl(e,t){let n=t.map(s=>1);return Mv(e,n,t)}function P$(e,t,n){M(fy(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Lv(e,t){if(fy(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function my(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function F$(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function O$(e,t=null,n=!1){let s=$(e,"x","logSumExp"),r=Zs(t,s.shape),a=An(s,r,!0),o=he(s,a),i=Ms(o),l=we(i,r),c=zs(l),u=ue(H(a,c.shape),c);if(n){let d=hl(u.shape,r);return H(u,d)}return u}var Bv=U({logSumExp_:O$});function M$(e,t){let n=$(e,"a","logicalAnd","bool"),s=$(t,"b","logicalAnd","bool");At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Ri,r)}var pr=U({logicalAnd_:M$});function z$(e){let n={x:$(e,"x","logicalNot","bool")};return V.runKernel(ku,n)}var kf=U({logicalNot_:z$});function L$(e,t){let n=$(e,"a","logicalOr","bool"),s=$(t,"b","logicalOr","bool");At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(gd,r)}var gy=U({logicalOr_:L$});function B$(e,t){let n=$(e,"a","logicalXor","bool"),s=$(t,"b","logicalXor","bool");return At(n.shape,s.shape),pr(gy(e,t),kf(pr(e,t)))}var W$=U({logicalXor_:B$});function V$(e,t,n,s,r){let a=$(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),M(Rr(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),Wn("maxPool",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},d=V.runKernel(to,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Sf=U({maxPool_:V$});function U$(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=$(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Wn("maxPool3d",s,r);let c={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},d=V.runKernel(Ad,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var yy=U({maxPool3d_:U$});function G$(e,t,n,s,r=!1){let o={x:$(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=V.runKernel(Xh,o,i);return{result:l[0],indexes:l[1]}}var Wv=U({maxPoolWithArgmax_:G$});function H$(e,t){let n=$(e,"a","maximum"),s=$(t,"b","maximum");[n,s]=Ot(n,s),n.dtype==="bool"&&(n=me(n,"int32"),s=me(s,"int32")),At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(eo,r)}var Qr=U({maximum_:H$});function j$(e,t=null,n=!1){let r={x:$(e,"x","mean")},a={axis:t,keepDims:n};return V.runKernel(no,r,a)}var Ut=U({mean_:j$});function Gt(e,t="float32"){if(t==="complex64"){let s=Gt(e,"float32"),r=Gt(e,"float32");return Ro(s,r)}let n=Th(It(e),t);return V.makeTensor(n,e,t)}function bs(e,t="float32"){if(t==="complex64"){let s=bs(e,"float32"),r=Gt(e,"float32");return Ro(s,r)}let n=y2(It(e),t);return V.makeTensor(n,e,t)}function q$(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=$(e,"x","meshgrid",e instanceof tt?e.dtype:"float32");if(t===void 0)return[s];let r=$(t,"y","meshgrid",t instanceof tt?t.dtype:"float32"),a=It(s.shape),o=It(r.shape);return n==="xy"?(s=H(s,[1,-1]),r=H(r,[-1,1]),[je(bs([o,1],s.dtype),s),je(r,bs([1,a],r.dtype))]):(s=H(s,[-1,1]),r=H(r,[1,-1]),[je(s,bs([1,o],s.dtype)),je(bs([a,1],r.dtype),r)])}function X$(e,t=null,n=!1){let r={x:$(e,"x","min")},a={axis:t,keepDims:n};return V.runKernel(so,r,a)}var Oo=U({min_:X$});function K$(e,t){let n=$(e,"a","minimum"),s=$(t,"b","minimum");[n,s]=Ot(n,s),n.dtype==="bool"&&(n=me(n,"int32"),s=me(s,"int32")),At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(ro,r)}var Gd=U({minimum_:K$});function Z$(e,t,n){M(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=$(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)M(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),M(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return V.runKernel(ao,o,a)}var Vv=U({mirrorPad_:Z$});function Y$(e,t){let n=$(e,"a","mod"),s=$(t,"b","mod");[n,s]=Ot(n,s);let r={a:n,b:s};return V.runKernel(Su,r)}var Hd=U({mod_:Y$});function J$(e){let t=$(e,"x","square"),n={};return V.runKernel("Square",{x:t},n)}var xt=U({square_:J$});function Q$(e,t=null,n=!1){e=$(e,"x","moments");let s=Zs(t,e.shape),r=Ut(e,s,n),a=r.shape;n||(a=hl(r.shape,s));let o=xt(he(me(e,"float32"),H(r,a))),i=Ut(o,s,n);return{mean:r,variance:i}}var If=U({moments_:Q$});function eP(e,t,n,s){let r=$(t,"data","multiRNNCell"),a=Od(n,"c","multiRNNCell"),o=Od(s,"h","multiRNNCell"),i=r,l=[];for(let d=0;d<e.length;d++){let p=e[d](i,a[d],o[d]);l.push(p[0]),l.push(p[1]),i=p[1]}let c=[],u=[];for(let d=0;d<l.length;d+=2)c.push(l[d]),u.push(l[d+1]);return[c,u]}var tP=U({multiRNNCell_:eP});function nP(e,t,n,s=!1){let r=$(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?H(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:s},u=V.runKernel(Kh,l,c);return o===1?H(u,[u.size]):u}var Uv=U({multinomial_:nP});function sP(e,t){let n=$(e,"a","notEqual","string_or_numeric"),s=$(t,"b","notEqual","string_or_numeric");[n,s]=Ot(n,s),At(n.shape,s.shape);let r={a:n,b:s};return V.runKernel(Di,r)}var ju=U({notEqual_:sP});function rP(e){let n={x:$(e,"x","onesLike")};return V.runKernel(Fi,n)}var Ls=U({onesLike_:rP});function aP(e,t){let n=$(e,"v1","outerProduct"),s=$(t,"v2","outerProduct");M(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=H(n,[-1,1]),a=H(s,[1,-1]);return je(r,a)}var oP=U({outerProduct_:aP});function iP(e,t,n=0){let s=$(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return V.runKernel(io,a,r)}var Js=U({pad_:iP});function lP(e,t,n=0){return M(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Js(e,[t],n)}var uP=U({pad1d_:lP});function cP(e,t,n=0){return M(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Js(e,t,n)}var dP=U({pad2d_:cP});function pP(e,t,n=0){return M(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Js(e,t,n)}var hP=U({pad3d_:pP});function fP(e,t,n=0){return M(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Js(e,t,n)}var mP=U({pad4d_:fP});function gP(e,t,n){let s=$(e,"x","spaceToBatchND");M(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),M(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),M(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]==0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return V.runKernel(ji,r,a)}var Cf=U({spaceToBatchND_:gP});function yP(e,t,n,s,r,a,o){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let i=$(e,"x","maxPool"),l=i,c=!1;i.rank===3&&(c=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(Rr(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let u=hv(l.shape,t,a,r,s),d=[u.dilationHeight,u.dilationWidth],p;s==="same"?p=xP([u.filterHeight,u.filterWidth],d):p=[[0,0],[0,0]];let h=d[0]===1&&d[1]===1,[f,m]=AP([u.inHeight,u.inWidth],d,p),g=h?s:"valid",y=h?l:Cf(l,d,f),A=(n==="avg"?()=>gf(y,t,a,g,o):()=>Sf(y,t,a,g,o))(),b=h?A:yf(A,d,m);return c?H(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function AP(e,t,n){let s=n.map(u=>u[0]),r=n.map(u=>u[1]),a=e.concat(s,r),o=t.map((u,d)=>(u-a[d]%u)%u),i=r.map((u,d)=>u+o[d]),l=t.map((u,d)=>[s[d],i[d]]),c=t.map((u,d)=>[0,o[d]]);return[l,c]}function xP(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var bP=U({pool_:yP});function vP(e,t){let n=$(e,"base","pow"),s=$(t,"exp","pow");[n,s]=Ot(n,s);let r={a:n,b:s};return V.runKernel(lo,r)}var Mo=U({pow_:vP});function wP(e,t){let n=$(e,"x","prelu"),s=$(t,"alpha","prelu"),r={x:n,alpha:s};return V.runKernel(uo,r)}var Tf=U({prelu_:wP});function kP(e,t=null,n=!1){let s=$(e,"x","prod");s.dtype==="bool"&&(s=me(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return V.runKernel(zi,r,a)}var Ay=U({prod_:kP});function SP(e,t,n){let s=It(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return V.makeTensor(r,e,n)}var IP=U({rand_:SP}),xy=pi(wh()),by=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=xy.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},CP=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=xy.alea(r.toString()),this.randn=new by(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},TP=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=xy.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function NP(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new CP(t,n,s,r),o=ze(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var EP=U({randomGamma_:NP});function RP(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new by(t,n,s,!1,r),o=ze(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var Gv=U({randomNormal_:RP});function _P(e,t=0,n=1,s="float32",r){let a=ze(e,s),o=new TP(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var qu=U({randomUniform_:_P});function Xu(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return V.runKernel(Cu,{},r)}function DP(e){let n={input:$(e,"input","real")};return V.runKernel(xd,n)}var jd=U({real_:DP});function $P(e){let n={x:$(e,"x","reciprocal")};return V.runKernel(Tu,n)}var Hv=U({reciprocal_:$P});function PP(e){let n={x:$(e,"x","relu")};return V.runKernel(co,n)}var Dr=U({relu_:PP});function FP(e){let n={x:$(e,"x","relu6")};return V.runKernel(ho,n)}var vy=U({relu6_:FP});function OP(e,t){let s={x:$(e,"x","reverse")},r={dims:t};return V.runKernel(Bi,s,r)}var Bs=U({reverse_:OP});function MP(e){let t=$(e,"x","reverse");return M(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Bs(t,0)}var zP=U({reverse1d_:MP});function LP(e,t){let n=$(e,"x","reverse");return M(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Bs(n,t)}var BP=U({reverse2d_:LP});function WP(e,t){let n=$(e,"x","reverse");return M(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Bs(n,t)}var VP=U({reverse3d_:WP});function UP(e,t){let n=$(e,"x","reverse");return M(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Bs(n,t)}var GP=U({reverse4d_:UP});function HP(e){let n={x:$(e,"x","round")};return V.runKernel(Wi,n)}var wy=U({round_:HP});function jP(e){let n={x:$(e,"x","rsqrt","float32")};return V.runKernel(fo,n)}var ky=U({rsqrt_:jP});function Ce(e,t){if((Rn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Rn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return _o(e,[],[],t)}function qP(e){let n={x:$(e,"x","selu")};return V.runKernel(Eu,n)}var Sy=U({selu_:qP});function XP(e,t,n,s,r,a=[1,1],o="NHWC"){let i=$(e,"x","separableConv2d"),l=$(t,"depthwiseFilter","separableConv2d"),c=$(n,"pointwiseFilter","separableConv2d"),u=i,d=!1;if(i.rank===3&&(d=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),M(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let p=l.shape[2],h=l.shape[3];M(c.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`);let f=Wd(u,l,s,r,o,a),g=Fo(f,c,1,"valid",o);return d?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var jv=U({separableConv2d_:XP});async function KP(e,t){let n=$(e,"x","setdiff1d"),s=$(t,"y","setdiff1d");M(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),M(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),M(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;let l=new sn([i],n.dtype),c=new sn([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(l.values[d]=r[u],c.values[d]=u,d++);return[l.toTensor(),c.toTensor()]}var qv=KP;function ZP(e){let n={x:$(e,"x","sign")};return V.runKernel(Ru,n)}var Xv=U({sign_:ZP});function YP(e){let n={x:$(e,"x","sin","float32")};return V.runKernel(mo,n)}var Iy=U({sin_:YP});function JP(e){let n={x:$(e,"x","sinh")};return V.runKernel(Hi,n)}var Cy=U({sinh_:JP});function QP(e,t,n){let s=$(e,"x","slice1d");return M(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Fe(s,[t],[n])}var Nf=U({slice1d_:QP});function eF(e,t,n){let s=$(e,"x","slice2d");return M(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Fe(s,t,n)}var Ty=U({slice2d_:eF});function tF(e,t,n){let s=$(e,"x","slice3d");return M(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Fe(s,t,n)}var fl=U({slice3d_:tF});function nF(e,t,n){let s=$(e,"x","slice4d");return M(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Fe(s,t,n)}var ml=U({slice4d_:nF});function sF(e,t=-1){let n=$(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return V.runKernel(xo,s,r)}var Ku=U({softmax_:sF});function rF(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(Vh,t)}var Ef=U({fft_:rF});function aF(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(Uh,t)}var qd=U({ifft_:aF});function oF(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=H(e,[n,t]);s=qd(r)}else{let r=[n,2*(t-1)],a=H(jd(e),[n,t]),o=H(xf(e),[n,t]),i=Bs(Fe(a,[0,1],[n,t-2]),1),l=L(Bs(Fe(o,[0,1],[n,t-2]),1),Ce(-1)),c=St([a,i],1),u=St([o,l],1),d=H(Ro(c,u),[r[0],r[1]]);s=qd(d)}if(s=jd(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=H(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var Ny=U({irfft_:oF});function iF(e,t,n=0){let r={x:$(e,"x","split")},a={numOrSizeSplits:t,axis:n};return V.runKernel(qi,r,a)}var Yt=U({split_:iF});function lF(e,t){M(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=Fe(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=St([e,Gt(f)],e.shape.length-1),n=t}else r=e;let a=st(r),o=H(Ro(r,a),[s,n]),i=Ef(o),l=Math.floor(n/2)+1,c=jd(i),u=xf(i),d=Yt(c,[l,n-l],c.shape.length-1),p=Yt(u,[l,n-l],u.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,H(Ro(d[0],p[0]),h)}var Rf=U({rfft_:lF});function uF(e){let n={x:$(e,"x","sqrt","float32")};return V.runKernel(yo,n)}var Dn=U({sqrt_:uF});function cF(e,t){let n=$(e,"a","squaredDifference"),s=$(t,"b","squaredDifference");[n,s]=Ot(n,s),At(n.shape,s.shape);let r={a:n,b:s},a={};return V.runKernel(bo,r,a)}var Ey=U({squaredDifference_:cF});function dF(e,t){let n=$(e,"x","squeeze");return H(n,L5(n.shape,t).newShape)}var Ke=U({squeeze_:dF});function pF(e,t=0){let n=Od(e,"tensors","stack","string_or_numeric");M(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&M(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return V.runKernel(Mi,s,r)}var an=U({stack_:pF});function hF(e,t=0){let s={x:$(e,"x","step")},r={alpha:t};return V.runKernel(So,s,r)}var Xd=U({step_:hF});function fF(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let u={x:$(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return V.runKernel(Xi,u,d)}var Kv=U({stridedSlice_:fF});function mF(e){let n={x:$(e,"x","tan","float32")};return V.runKernel(Ki,n)}var Zv=U({tan_:mF});function Ct(e,t){hi(e);let n=Nr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return _o(e,null,n,t)}function hr(e,t,n){if(hi(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Nr(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return _o(e,t,s,n)}function gF(e,t,n){if(hi(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Nr(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return _o(e,t,s,n)}function yF(e,t,n){if(hi(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Nr(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return _o(e,t,s,n)}function AF(e,t,n){if(hi(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Nr(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,_o(e,t,s,n)}function xF(e,t=1,n=!0){let s=$(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=V.runKernel(Zi,a,o);return{values:i,indices:l}}var Yv=U({topk_:xF});function bF(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new by(t,n,s,!0,r),o=ze(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var _f=U({truncatedNormal_:bF});function vF(e,t=0){let n=$(e,"x","unique","string_or_numeric");M(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=V.runKernel(ef,s,r);return{values:a,indices:o}}var Ry=U({unique_:vF});function wF(e,t,n){let s=$(e,"x","unsortedSegmentSum"),r=$(t,"segmentIds","unsortedSegmentSum","int32");M(ru(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return V.runKernel(Id,a,o)}var Jv=U({unsortedSegmentSum_:wF});function kF(e,t=0){let n=$(e,"x","unstack","string_or_numeric");M(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return V.runKernel(Ji,s,r)}var os=U({unstack_:kF});function Qv(e,t=!0,n,s){return V.makeVariable(e,t,n,s)}function ew(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=ze(e,"int32"),r=ze([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function SF(e){let t=$(e,"condition","whereAsync","bool"),n=await t.data(),s=ew(t.shape,n);return e!==t&&t.dispose(),s}var _y=SF;async function IF(e,t,n){let s=$(e,"tensor","boolMask"),r=$(t,"mask","boolMask","bool"),a=n==null?0:n,o=r.rank,i=s.shape;M(o>0,()=>"mask cannot be scalar"),Mn(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let c=i.slice(0,a).concat([l],i.slice(a+o)),u=H(s,c),d=H(r,[-1]),p=await _y(d),h=Ke(p,[1]),f=Gu(u,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),u.dispose(),d.dispose(),p.dispose(),f}var CF=IF;function TF(e,t="euclidean",n=null,s=!1){e=$(e,"x","norm");let r=tw(e,t,n),a=r.shape;if(s){let o=Zs(n,e.shape);a=hl(r.shape,o)}return H(r,a)}function tw(e,t,n=null){if(e.rank===0)return rn(e);if(e.rank!==1&&n===null)return tw(H(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return we(rn(e),n);if(t===1/0)return An(rn(e),n);if(t===-1/0)return Oo(rn(e),n);if(t==="euclidean"||t===2)return Dn(we(Mo(rn(e),Ce(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return An(we(rn(e),n[0]),n[1]-1);if(t===1/0)return An(we(rn(e),n[1]),n[0]);if(t===-1/0)return Oo(we(rn(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Dn(we(xt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Dy=U({norm_:TF});function NF(e,t,n,s,r=!0){let a=$(e,"v","movingAverage"),o=$(t,"x","movingAverage"),i=$(n,"decay","movingAverage");d3(a,o),M(Ea(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Ce(1),c=he(l,i),u=L(he(o,a),c);if(r){M(s!=null,()=>"When using zeroDebias: true, step is required.");let d=$(s,"step","movingAverage");u=de(u,he(l,Mo(i,d)))}return ue(a,u)}var EF=U({movingAverage_:NF});function RF(e,t,n){let s=$(e,"indices","scatterND","int32"),r=$(t,"updates","scatterND");q2(r,s,n);let a={indices:s,updates:r},o={shape:n};return V.runKernel(Vi,a,o)}var nw=U({scatterND_:RF});function _F(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function DF(e,t,n,s=0){let r=$(e,"sparseIndices","sparseToDense","int32"),a=$(t,"sparseValues","sparseToDense"),o=$(s,"defaultValue","sparseToDense",a.dtype);_F(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return V.runKernel(kd,i,l)}var $y=U({sparseToDense_:DF});function $F(e,t){let n=$(t,"indices","gatherND","int32"),r={params:$(e,"x","gatherND","string_or_numeric"),indices:n};return V.runKernel(Ci,r)}var sw=U({gatherND_:$F});function PF(e,t){if(t==null)return e.shape.slice();if(Ea(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function FF(e,t,n,s){let r=$(e,"x","dropout");if(M(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),M(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof tt?r.clone():r;let a=PF(r,n),o=1-t,i=de(Ud(ue(qu(a,0,1,"float32",s),o)),o);return L(r,i)}var rw=U({dropout_:FF});function aw(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Py(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return Ct(r,"float32")}async function OF(e,t,n=1){let s=$(e,"predictions","inTopK"),r=$(t,"targets","inTopK");M(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),M(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Mn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];M(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,c]=[o.length/a,a],u=B5("bool",l);for(let d=0;d<l;d++){let p=d*c,h=o.subarray(p,p+c),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),u[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){u[d]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),pt(u,r.shape,"bool")}var MF=OF,zo={};Me(zo,{conv2d:()=>BF,depthwiseConv2d:()=>GF,matMul:()=>jF});function zF(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]])),M(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),M(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),M(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=a==="NHWC"?i.shape[3]:i.shape[1],u=a==="NHWC"?l.shape[3]:l.shape[1];M(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),M(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),Wn("conv2dDerFilter",r,o);let d={x:i,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return V.runKernel(Dh,d,p)}var Fy=U({conv2DBackpropFilter_:zF});function Df(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return L(e,Xd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function $f(e,t){let n=t,s=Kt(e.shape,t.shape);return s.length>0&&(n=we(n,s)),H(n,e.shape)}function Pf(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Dr(e);if(t==="elu")return Vd(e);if(t==="relu6")return vy(e);if(t==="prelu")return Tf(e,n);if(t==="leakyrelu")return bf(e,s);if(t==="sigmoid")return _n(e);throw new Error(`Unknown fused activation ${t}.`)}var Ff=(e,t)=>!(e>0)||t==="linear";function LF({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Ff(V.state.gradientDepth,l)===!1){let w=Fo(e,t,n,s,r,a,o);return i!=null&&(w=ue(w,i)),Pf(w,l,c,u)}let d=$(e,"x","conv2d","float32"),p=$(t,"filter","conv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),M(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),Wn("fused conv2d",s,o),M(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),M(Rr(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=Ld(h.shape,p.shape,n,a,s,o),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Ot(g,d),At(m.outShape,g.shape));let y;c!=null&&(y=$(c,"prelu weights","fused conv2d"));let x=(w,C)=>{let[S,E,R,F]=C,_=Df(w,R,l);M(Po(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let P=oy(E.shape,_,S,n,s),T=Fy(E,_,S.shape,n,s),O=[P,T];if(F!=null){let G=$f(F,_);O.push(G)}return O},A={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?_r((C,S,E)=>{let R=V.runKernel(Co,A,b);return E([S,C,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):_r((C,S,E,R)=>{let F=V.runKernel(Co,A,b);return R([S,C,F,E]),f&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(h,p,g)}var BF=U({fusedConv2d_:LF});function WF(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:i,dy:l},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return V.runKernel(Oh,c,u)}var ow=U({depthwiseConv2dNativeBackpropFilter_:WF});function VF(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:i,filter:n},u={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},d=V.runKernel(Mh,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var iw=U({depthwiseConv2dNativeBackpropInput_:VF});function UF({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(Ff(V.state.gradientDepth,l)===!1){let w=Wd(e,t,n,s,r,a,o);return i!=null&&(w=ue(w,i)),Pf(w,l,c,u)}let d=$(e,"x","depthwiseConv2d","float32"),p=$(t,"filter","depthwiseConv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),M(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),M(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),M(Rr(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),Wn("fused depthwiseConv2d",s,o);let m=Ld(h.shape,p.shape,n,a,s,o,!0),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Ot(g,d),At(m.outShape,g.shape));let y;c!=null&&(y=$(c,"prelu weights","fused depthwiseConv2d"));let x=(w,C)=>{M(Po(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[S,E,R,F]=C,_=Df(w,R,l),P=iw(E.shape,_,S,n,s,a,o),T=ow(E,_,S.shape,n,s,a,o);if(F!=null){let O=$f(g,_);return[P,T,O]}return[P,T]},A={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?_r((C,S,E)=>{let R=V.runKernel(To,A,b);return E([S,C,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):_r((C,S,E,R)=>{let F=V.runKernel(To,A,b);return R([S,C,F,E]),f&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(h,p,g)}var GF=U({fusedDepthwiseConv2d_:UF});function HF({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(Ff(V.state.gradientDepth,a)===!1){let _=je(e,t,n,s);return r!=null&&(_=ue(_,r)),Pf(_,a,o,i)}let l=$(e,"a","fused matMul"),c=$(t,"b","fused matMul");[l,c]=Ot(l,c);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=It(f),y=It(m);M(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${s} must match.`);let A=At(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,h]),b=n?H(l,[g,u,p]):H(l,[g,p,u]),w=s?H(c,[y,h,d]):H(c,[y,d,h]),C;r!=null&&(C=$(r,"bias","fused matMul"),[C]=Ot(C,l),At(A,C.shape));let S;o!=null&&(S=$(o,"prelu weights","fused matMul"));let E=(_,P)=>{let[T,O,G,K]=P,z=Df(H(_,G.shape),G,a),j,W;if(!n&&!s?(j=je(z,O,!1,!0),W=je(T,z,!0,!1)):!n&&s?(j=je(z,O,!1,!1),W=je(z,T,!0,!1)):n&&!s?(j=je(O,z,!1,!0),W=je(T,z,!1,!1)):(j=je(O,z,!0,!0),W=je(z,T,!0,!0)),r!=null){let Q=$f(K,z);return[j,W,Q]}else return[j,W]},R={a:b,b:w,bias:C,preluActivationWeights:S},F={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?_r((P,T,O)=>{let G=V.runKernel(Io,R,F);return O([P,T,G]),{value:H(G,A),gradFunc:E}})(b,w):_r((P,T,O,G)=>{let K=V.runKernel(Io,R,F);return G([P,T,K,O]),{value:H(K,A),gradFunc:E}})(b,w,C)}var jF=U({fusedMatMul_:HF});function qF(e){return Py(e,.54,.46)}var XF=U({hammingWindow_:qF});function KF(e){return Py(e,.5,.5)}var lw=U({hannWindow_:KF});function ZF(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(Fe(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=St([Fe(e,a,t-i),Uu([i],r)]);o.push(l),a+=n}return o.length===0?hr([],[0,t]):H(St(o),[o.length,t])}var uw=U({frame_:ZF});function YF(e,t,n,s,r=lw){s==null&&(s=aw(t));let a=uw(e,t,n),o=L(a,r(t));return Rf(o,s)}var JF=U({stft_:YF});function QF(e,t,n,s,r="bilinear",a=0){let o=$(e,"image","cropAndResize"),i=$(t,"boxes","cropAndResize","float32"),l=$(n,"boxInd","cropAndResize","int32"),c=i.shape[0];M(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),M(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),M(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),M(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),M(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let u={image:o,boxes:i,boxInd:l},d={method:r,extrapolationValue:a,cropSize:s};return V.runKernel(xi,u,d)}var eO=U({cropAndResize_:QF});function tO(e){let t=$(e,"image","flipLeftRight","float32");M(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return V.runKernel(Si,n,{})}var nO=U({flipLeftRight_:tO});function sO(e){let t=$(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];M(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),M(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Ys(t,r)}var rO=U({grayscaleToRGB_:sO});function aO(e,t,n=0,s=.5){let r=$(e,"image","rotateWithOffset","float32");M(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return V.runKernel(el,a,o)}var oO=U({rotateWithOffset_:aO});function Zu(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),M(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),M(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),M(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),M(t.rank===1,()=>"scores must be a 1D tensor"),M(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),M(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function iO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppression","float32"),o=$(t,"scores","nonMaxSuppression","float32"),i=Zu(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return V.runKernel($i,{boxes:a,scores:o},l)}var lO=U({nonMaxSuppression_:iO});function uO(e,t,n){let s=cO(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function cO(e,t,n){return pO(e,t,n||dO)}function dO(e,t){return e>t?1:e<t?-1:0}function pO(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function cw(e,t,n,s,r){return Oy(e,t,n,s,r,0)}function dw(e,t,n,s,r,a){return Oy(e,t,n,s,r,0,!1,a,!0)}function pw(e,t,n,s,r,a){return Oy(e,t,n,s,r,a,!0)}function Oy(e,t,n,s,r,a,o=!1,i=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(hw);let u=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&c.length>0;){let g=c.pop(),{score:y,boxIndex:x,suppressBeginIndex:A}=g;if(y<r)break;let b=!1;for(let w=d.length-1;w>=A;--w){let C=hO(e,x,d[w]);if(C>=s){b=!0;break}if(g.score=g.score*fO(s,u,C),g.score<=r)break}g.suppressBeginIndex=d.length,b||(g.score===y?(d.push(x),p.push(g.score)):g.score>r&&uO(c,g,hw))}let h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=p),l&&(m.validOutputs=h),m}function hO(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(i-a)*(l-o),f=(d-c)*(p-u);if(h<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(o,u),y=Math.min(i,d),x=Math.min(l,p),A=Math.max(y-m,0)*Math.max(x-g,0);return A/(h+f-A)}function fO(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function hw(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function mO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppressionAsync"),o=$(t,"scores","nonMaxSuppressionAsync"),i=Zu(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:d}=cw(c,u,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),Ct(d,"int32")}var gO=mO;function yO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Zu(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},d=V.runKernel(Pi,c,u);return{selectedIndices:d[0],selectedScores:d[1]}}var AO=U({nonMaxSuppressionWithScore_:yO});async function xO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Zu(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let c=await Promise.all([o.data(),i.data()]),u=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=pw(u,d,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ct(p,"int32"),selectedScores:Ct(h)}}var bO=xO;function vO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Zu(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,p={boxes:o,scores:i},h={maxOutputSize:c,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:a},f=V.runKernel(Iu,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var wO=U({nonMaxSuppressionPadded_:vO});async function kO(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Zu(o,i,n,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=dw(p,h,c,u,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ct(f,"int32"),validOutputs:Ce(m,"int32")}}var SO=kO;function IO(e,t,n=!1,s=!1){let r=$(e,"images","resizeBilinear");M(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),M(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=V.runKernel(po,i,l);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var CO=U({resizeBilinear_:IO});function TO(e,t,n=!1,s=!1){let r=$(e,"images","resizeNearestNeighbor");M(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),M(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),M(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},c=V.runKernel(Nu,i,l);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var NO=U({resizeNearestNeighbor_:TO});function EO(e,t="binary",n=!1,s=.5){let r=$(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],c=L(Ct([s]),255),u,d,p,h;if(M(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),M(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),M(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),M(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[u,d,p]=Yt(r,[1,1,1],-1);let g=L(u,a),y=L(d,o),x=L(p,i);h=ue(ue(g,y),x)}else h=e;if(t==="otsu"){let g=ry(me(wy(h),"int32"),pt([]),256);c=RO(g,l)}let f=n?pl(h,c):xs(h,c);return me(L(f,255),"int32")}function RO(e,t){let n=Ct([-1]),s=Ct([0]),r=Ct([0]),a,o,i,l,c,u;for(let d=0;d<e.size-1;d++){a=Fe(e,0,d+1),o=Fe(e,d+1),c=de(we(a),t),u=de(we(o),t);let p=we(L(a,Xu(0,a.size)));i=de(p,we(a));let h=Uu(o.shape,a.size),f=ue(Xu(0,o.size),h),m=L(o,f);l=de(we(m),we(o));let g=he(i,l),y=he(i,l),x=L(c,u);r=L(L(x,g),y);let A=xs(r,s);s=Vn(A,r,s),n=Vn(A,Ct([d]),n)}return n}var _O=U({threshold_:EO});function DO(e,t,n="nearest",s="constant",r=0,a){let o=$(e,"image","transform","float32"),i=$(t,"transforms","transform","float32");M(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),M(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},c={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return V.runKernel(Yi,l,c)}var $O=U({transform_:DO});function PO(e,t,n){M(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),M(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=$(e,"a","bandPart");M(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=H(Xu(0,a,1,"int32"),[-1,1]),l=Xu(0,o,1,"int32"),c=he(i,l),u=pr(pl(c,Ce(+t,"int32")),dl(c,Ce(-n,"int32"))),d=Gt([a,o],s.dtype);return H(an(os(H(s,[-1,a,o])).map(p=>Vn(u,p,d))),r)}var FO=U({bandPart_:PO});function OO(e){let t;if(Array.isArray(e)){t=!1,M(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)M(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=Yt(e,e.shape[0],0).map(r=>Ke(r,[0]));M(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(V.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=L(we(L(n[o],a)),n[o]);a=he(a,i)}return de(a,Dy(a,"euclidean"))}));return t?an(n,0):n}var MO=U({gramSchmidt_:OO});function zO(e,t=!1){if(M(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return fw(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c),s=os(H(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[c,u]=fw(l,t);r.push(c),a.push(u)});let o=H(an(r,0),e.shape),i=H(an(a,0),e.shape);return[o,i]}}function fw(e,t=!1){return V.tidy(()=>{M(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=dy(n),a=Bn(e),o=hr([[1]],[1,1]),i=Bn(o),l=n>=s?s:n;for(let c=0;c<l;++c){let u=a,d=i,p=r;[i,a,r]=V.tidy(()=>{let h=Fe(a,[c,c],[n-c,1]),f=Dy(h),m=Fe(a,[c,c],[1,1]),g=Vn(xs(m,0),hr([[-1]]),hr([[1]])),y=he(m,L(g,f)),x=de(h,y);x.shape[0]===1?i=Bn(o):i=St([o,Fe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let A=zt(de(je(g,y),f)),b=Fe(a,[c,0],[n-c,s]),w=L(A,i),C=nt(i);if(c===0)a=he(b,je(w,je(C,b)));else{let R=he(b,je(w,je(C,b)));a=St([Fe(a,[0,0],[c,s]),R],0)}let S=nt(w),E=Fe(r,[0,c],[n,r.shape[1]-c]);if(c===0)r=he(E,je(je(E,i),S));else{let R=he(E,je(je(E,i),S));r=St([Fe(r,[0,0],[n,c]),R],1)}return[i,a,r]}),ne([u,d,p])}return!t&&n>s&&(r=Fe(r,[0,0],[n,s]),a=Fe(a,[0,0],[s,s])),[r,a]})}var LO=U({qr_:zO}),is=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(is||{});function BO(e,t,n=is.SUM_BY_NONZERO_WEIGHTS){let s=$(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=$(t,"weights","computeWeightedLoss"));let a=r==null?s:L(s,r);if(n===is.NONE)return a;if(n===is.SUM)return we(a);if(n===is.MEAN){if(r==null)return Ut(a);{let o=s.size/r.size,i=de(we(a),we(r));return o>1?de(i,Ce(o)):i}}if(n===is.SUM_BY_NONZERO_WEIGHTS){if(r==null)return de(we(a),Ce(s.size));{let o=L(r,bs(s.shape)),i=me(we(ju(o,Ce(0))),"float32");return de(we(a),i)}}throw Error(`Unknown reduction: ${n}`)}var ea=U({computeWeightedLoss_:BO});function WO(e,t,n,s=is.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","absoluteDifference"),a=$(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=$(n,"weights","absoluteDifference")),Mn(r.shape,a.shape,"Error in absoluteDifference: ");let i=rn(he(r,a));return ea(i,o,s)}var VO=U({absoluteDifference_:WO});function UO(e,t,n,s,r=is.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","cosineDistance"),o=$(t,"predictions","cosineDistance"),i=null;s!=null&&(i=$(s,"weights","cosineDistance")),Mn(a.shape,o.shape,"Error in cosineDistance: ");let l=Ce(1),c=he(l,we(L(a,o),n,!0));return ea(c,i,r)}var GO=U({cosineDistance_:UO});function HO(e,t,n,s=is.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","hingeLoss"),a=$(t,"predictions","hingeLoss"),o=null;n!=null&&(o=$(n,"weights","hingeLoss")),Mn(r.shape,a.shape,"Error in hingeLoss: ");let i=Ce(1);r=he(L(Ce(2),r),i);let l=Dr(he(i,L(r,a)));return ea(l,o,s)}var jO=U({hingeLoss_:HO});function qO(e,t,n,s=1,r=is.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","huberLoss"),o=$(t,"predictions","huberLoss"),i=null;n!=null&&(i=$(n,"weights","huberLoss")),Mn(a.shape,o.shape,"Error in huberLoss: ");let l=Ce(s),c=rn(he(o,a)),u=Gd(c,l),d=he(c,u),p=ue(L(Ce(.5),xt(u)),L(l,d));return ea(p,i,r)}var XO=U({huberLoss_:qO});function KO(e,t,n,s=1e-7,r=is.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","logLoss"),o=$(t,"predictions","logLoss"),i=null;n!=null&&(i=$(n,"weights","logLoss")),Mn(a.shape,o.shape,"Error in logLoss: ");let l=Ce(1),c=Ce(s),u=zt(L(a,zs(ue(o,c)))),d=L(he(l,a),zs(ue(he(l,o),c))),p=he(u,d);return ea(p,i,r)}var ZO=U({logLoss_:KO});function YO(e,t,n,s=is.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","meanSquaredError"),a=$(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=$(n,"weights","meanSquaredError")),Mn(r.shape,a.shape,"Error in meanSquaredError: ");let i=Ey(r,a);return ea(i,o,s)}var JO=U({meanSquaredError_:YO});function QO(e,t){let n=$(e,"labels","sigmoidCrossEntropyWithLogits"),s=$(t,"logits","sigmoidCrossEntropyWithLogits");Mn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Dr(s),a=L(s,n),o=vf(Ms(zt(rn(s))));return ue(he(r,a),o)}function eM(e,t,n,s=0,r=is.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"multiClassLabels","sigmoidCrossEntropy"),o=$(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","sigmoidCrossEntropy")),Mn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let c=Ce(s),u=Ce(1),d=Ce(.5);a=ue(L(a,he(u,c)),L(d,c))}let l=QO(a,o);return ea(l,i,r)}var tM=U({sigmoidCrossEntropy_:eM});function nM(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return _r((r,a,o)=>{let l=Bv(a,[n],!0),c=he(me(a,"float32"),l);o([r,c]);let u=zt(L(c,r));return{value:we(u,[n]),gradFunc:(h,f)=>{let[m,g]=f,y=hl(h.shape,[n]);return[L(H(h,y),he(me(m,"float32"),Ms(g))),L(H(h,y),he(Ms(g),me(m,"float32")))]}}})(e,t)}function sM(e,t,n,s=0,r=is.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"onehotLabels","softmaxCrossEntropy"),o=$(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","softmaxCrossEntropy")),Mn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let c=Ce(s),u=Ce(1),d=Ce(a.shape[1]);a=ue(L(a,he(u,c)),de(c,d))}let l=nM(a,o);return ea(l,i,r)}var rM=U({softmaxCrossEntropy_:sM});function aM(e,t,n,s){let r=$(e,"indices","sparseFillEmptyRows","int32"),a=$(t,"values","sparseFillEmptyRows"),o=$(n,"denseShape","sparseFillEmptyRows","int32"),i=$(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},c=V.runKernel(bd,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}var oM=U({sparseFillEmptyRows_:aM});function iM(e,t,n){let s=$(e,"inputIndices","sparseReshape","int32"),r=$(t,"inputShape","sparseReshape","int32"),a=$(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=V.runKernel(Du,o);return{outputIndices:i[0],outputShape:i[1]}}var lM=U({sparseReshape_:iM});function uM(e,t,n){let s=$(e,"data","sparseSegmentMean"),r=$(t,"indices","sparseSegmentMean","int32"),a=$(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return V.runKernel(vd,o)}var cM=U({sparseSegmentMean_:uM});function dM(e,t,n){let s=$(e,"data","sparseSegmentSum"),r=$(t,"indices","sparseSegmentSum","int32"),a=$(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return V.runKernel(wd,o)}var pM=U({sparseSegmentSum_:dM});function hM(e,t,n,s,r,a,o,i){let l=$(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let c=$(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:l,dataSplits:c},p=V.runKernel(Sd,d,u);return{nGrams:p[0],nGramsSplits:p[1]}}var fM=U({stringNGrams_:hM});function mM(e,t,n=!0){let s=$(e,"input","stringSplit","string"),r=$(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=V.runKernel(Jh,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var gM=U({stringSplit_:mM});function yM(e,t){let n=$(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return V.runKernel(Qh,r,s)}var AM=U({stringToHashBucketFast_:yM}),xM={fft:Ef,ifft:qd,rfft:Rf,irfft:Ny},bM={hammingWindow:XF,hannWindow:lw,frame:uw,stft:JF},Se={flipLeftRight:nO,grayscaleToRGB:rO,resizeNearestNeighbor:NO,resizeBilinear:CO,rotateWithOffset:oO,cropAndResize:eO,nonMaxSuppression:lO,nonMaxSuppressionAsync:gO,nonMaxSuppressionWithScore:AO,nonMaxSuppressionWithScoreAsync:bO,nonMaxSuppressionPadded:wO,nonMaxSuppressionPaddedAsync:SO,threshold:_O,transform:$O},mw={bandPart:FO,gramSchmidt:MO,qr:LO},vM={absoluteDifference:VO,computeWeightedLoss:ea,cosineDistance:GO,hingeLoss:jO,huberLoss:XO,logLoss:ZO,meanSquaredError:JO,sigmoidCrossEntropy:tM,softmaxCrossEntropy:rM},Kd={sparseFillEmptyRows:oM,sparseReshape:lM,sparseSegmentMean:cM,sparseSegmentSum:pM},Of={stringNGrams:fM,stringSplit:gM,stringToHashBucketFast:AM},ta=class extends J3{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return ne(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Ov(e,t)}dispose(){this.iterations_!=null&&ne(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ta,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Mf=class extends ta{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:X(()=>st(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:X(()=>st(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;X(()=>{let c=ue(L(i,this.rho),L(xt(o),1-this.rho)),u=L(de(Dn(ue(l,this.epsilon)),Dn(ue(i,this.epsilon))),o),d=ue(L(l,this.rho),L(xt(u),1-this.rho));i.assign(c),l.assign(d);let p=ue(L(u,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ne(this.accumulatedGrads.map(e=>e.variable)),ne(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Mf.className="Adadelta";$o(Mf);var zf=class extends ta{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n];if(this.accumulatedGrads[s]==null){let i=!1;this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:X(()=>Uu(r.shape,this.initialAccumulatorValue).variable(i))}}let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;X(()=>{let i=ue(o,xt(a));o.assign(i);let l=ue(L(de(a,Dn(ue(i,V.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ne(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};zf.className="Adagrad";$o(zf);var Lf=class extends ta{constructor(e,t,n,s=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],X(()=>{this.accBeta1=Ce(t).variable(),this.accBeta2=Ce(n).variable()}),s==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);X(()=>{let n=he(1,this.accBeta1),s=he(1,this.accBeta2);t.forEach((r,a)=>{let o=V.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:X(()=>st(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:X(()=>st(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=ue(L(c,this.beta1),L(l,1-this.beta1)),p=ue(L(u,this.beta2),L(xt(l),1-this.beta2)),h=de(d,n),f=de(p,s);c.assign(d),u.assign(p);let m=ue(L(de(h,ue(Dn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ne(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),X(()=>{this.accBeta1.assign(Mo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Mo(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Lf.className="Adam";$o(Lf);var Bf=class extends ta{constructor(e,t,n,s=null,r=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],X(()=>{this.iteration=Ce(0).variable(),this.accBeta1=Ce(t).variable()}),s==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);X(()=>{let n=he(1,this.accBeta1),s=de(-this.learningRate,ue(L(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=V.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:st(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:st(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=ue(L(c,this.beta1),L(l,1-this.beta1)),p=L(u,this.beta2),h=rn(l),f=Qr(p,h);c.assign(d),u.assign(f);let m=ue(L(de(s,n),de(d,ue(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(ue(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ne(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Bf.className="Adamax";$o(Bf);var Zd=class extends ta{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=V.registeredVariables[n];X(()=>{let o=ue(L(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=yn(Ce(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Zd.className="SGD";$o(Zd);var Wf=class extends Zd{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ce(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n];if(this.accumulations[s]==null){let i=!1;this.accumulations[s]={originalName:`${n}/momentum`,variable:X(()=>st(r).variable(i))}}let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&X(()=>{let i,l=ue(L(this.m,a),o);this.useNesterov?i=ue(L(this.c,ue(o,L(l,this.m))),r):i=ue(L(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ne(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Wf.className="Momentum";$o(Wf);var Vf=class extends ta{constructor(e,t=.9,n=0,s=null,r=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=V.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=V.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:X(()=>st(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:X(()=>st(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:X(()=>st(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;X(()=>{let c=ue(L(i,this.decay),L(xt(o),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[s].variable,d=ue(L(u,this.decay),L(o,1-this.decay)),p=de(L(o,this.learningRate),Dn(he(c,ue(xt(d),this.epsilon)))),h=ue(L(l,this.momentum),p);i.assign(c),u.assign(d),l.assign(h);let f=he(r,h);r.assign(f)}else{let u=ue(L(i,this.decay),L(xt(o),1-this.decay)),d=ue(L(l,this.momentum),de(L(o,this.learningRate),Dn(ue(u,this.epsilon))));i.assign(u),l.assign(d);let p=he(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ne(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ne(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ne(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Vf.className="RMSProp";$o(Vf);var Lo=class{static sgd(e){return new Zd(e)}static momentum(e,t,n=!1){return new Wf(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Vf(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Lf(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Mf(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Bf(e,t,n,s,r)}static adagrad(e,t=.1){return new zf(e,t)}},gl={sgd:Lo.sgd,momentum:Lo.momentum,adadelta:Lo.adadelta,adagrad:Lo.adagrad,rmsprop:Lo.rmsprop,adamax:Lo.adamax,adam:Lo.adam},wM=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function gw(){return new Promise(e=>wM(()=>e()))}var N={};Me(N,{ERF_A1:()=>$M,ERF_A2:()=>PM,ERF_A3:()=>FM,ERF_A4:()=>OM,ERF_A5:()=>MM,ERF_P:()=>DM,PARALLELIZE_THRESHOLD:()=>My,SELU_SCALE:()=>Aw,SELU_SCALEALPHA:()=>yw,applyActivation:()=>Pf,assertAndGetBroadcastShape:()=>At,assertAxesAreInnerMostDims:()=>P$,assertParamsConsistent:()=>kM,assignToTypedArray:()=>UM,axesAreInnerMostDims:()=>fy,calculateShapes:()=>W3,checkEinsumDimSizes:()=>KM,checkPadOnDimRoundingMode:()=>Wn,combineLocations:()=>Mv,complexWithEvenIndex:()=>BM,complexWithOddIndex:()=>WM,computeConv2DInfo:()=>Ld,computeConv3DInfo:()=>fv,computeDefaultPad:()=>ty,computeDilation2DInfo:()=>eD,computeOptimalWindowSize:()=>IM,computeOutAndReduceShapes:()=>zv,computeOutShape:()=>SM,computePool2DInfo:()=>hv,computePool3DInfo:()=>tD,convertConv2DDataFormat:()=>mv,decodeEinsumEquation:()=>qM,eitherStridesOrDilationsAreOne:()=>Rr,expandShapeToKeepDim:()=>hl,exponent:()=>HM,exponents:()=>GM,fromStringArrayToUint8:()=>gz,fromUint8ToStringArray:()=>mz,getAxesPermutation:()=>Lv,getBroadcastDims:()=>M3,getComplexWithIndex:()=>VM,getEinsumComputePath:()=>ZM,getEinsumPermutation:()=>XM,getFusedBiasGradient:()=>$f,getFusedDyActivation:()=>Df,getImageCenter:()=>CM,getInnerMostAxes:()=>F$,getPermuted:()=>NM,getReductionAxes:()=>Kt,getReshaped:()=>TM,getReshapedPermuted:()=>EM,getSliceBeginCoords:()=>RM,getSliceSize:()=>_M,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>ez,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>tz,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>nz,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>az,getSparseReshapeInputOutputMismatchErrorMessage:()=>iz,getSparseReshapeInputOutputMultipleErrorMessage:()=>oz,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>sz,getSparseReshapeNegativeOutputDimErrorMessage:()=>rz,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>dz,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>lz,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>uz,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>cz,getUndoAxesPermutation:()=>my,isIdentityPermutation:()=>YM,log:()=>N9,mergeRealAndImagArrays:()=>zM,prepareAndValidate:()=>B3,prepareSplitSize:()=>QM,segment_util:()=>vw,shouldFuse:()=>Ff,slice_util:()=>Mt,splitRealAndImagArrays:()=>LM,tupleValuesAreOne:()=>Po,upcastType:()=>Ln,validateInput:()=>q2,validateUpdateShape:()=>j2,warn:()=>No});function kM(e,t){let n=e[0].length;e.forEach((r,a)=>{M(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),M(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)M(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function SM(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var My=30;function IM(e){return e<=My?e:Ch(e,Math.floor(Math.sqrt(e)))}function CM(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function TM(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function NM(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2==1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function EM(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function RM(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function _M(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var yw=1.7580993408473768,Aw=1.0507009873554805,DM=.3275911,$M=.254829592,PM=-.284496736,FM=1.421413741,OM=-1.453152027,MM=1.061405429;function zM(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function LM(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function BM(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function WM(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function VM(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function UM(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function GM(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function HM(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var zy="->",jM=/->/g,xw=",",bw="...";function qM(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(jM,"").length)/zy.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${zy}").`);let[s,r]=e.split(zy);M(s.indexOf(bw)===-1,()=>`The ellipsis notation ("${bw}") is not supported yet.`);let a=s.split(xw),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let p=0;p<r.length;++p){let h=r[p];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let p=0;p<s.length;++p){let h=s[p];i.indexOf(h)===-1&&h!==xw&&i.push(h)}let l=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let h=0;h<a[p].length;++h)l[p].push(i.indexOf(a[p][h]))}let c=i.length,u=r.length,d=[];for(let p=u;p<c;++p)d.push(p);return{allDims:i,summedDims:d,idDims:l}}function XM(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function KM(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:M(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function ZM(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=JM(t,i);for(let c of l)a.indexOf(c)===-1&&(s[o].push(c),a.push(c))}return{path:n,steps:s}}function YM(e){return e.every((t,n)=>t===n)}function JM(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function QM(e,t,n=0){let s=[];if(typeof t=="number")M(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);M(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}M(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function ez(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function tz(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function nz(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function sz(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function rz(e,t){return`size ${e} must be non-negative, not ${t}`}function az(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function oz(e,t){let n=It(e),s=It(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function iz(e,t){let n=It(e),s=It(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function lz(){return"segment ids must be >= 0"}function uz(){return"segment ids are not increasing"}function cz(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function dz(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var vw={};Me(vw,{collectGatherOpShapeInfo:()=>fz,computeOutShape:()=>hz,segOpComputeOptimalWindowSize:()=>pz});function pz(e,t){let n=!1,s;for(e<=My?(s=e,n=!0):s=Ch(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=Ch(e,s+1);return s}function hz(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function fz(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],l=1,c=1,u=1;for(let d=0;d<s;++d)i.push(e.shape[d]),l*=e.shape[d];for(let d=s;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=s;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:i}}function mz(e){try{return e.map(t=>rf(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function gz(e){return e.map(t=>Rd(t))}var Qs={};Me(Qs,{nonMaxSuppressionV3Impl:()=>cw,nonMaxSuppressionV4Impl:()=>dw,nonMaxSuppressionV5Impl:()=>pw,whereImpl:()=>ew});var ww={kernelName:mi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Xd(me(n,"float32"),-1))}}},yz={kernelName:iu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=xt(me(n,"float32")),r=Dn(he(Ce(1),s));return zt(de(e,r))}}}},Az={kernelName:lu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Dn(he(xt(me(n,"float32")),1));return de(e,s)}}}},xz={kernelName:Xr,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=e,l=Kt(n.shape,r);return l.length>0&&(i=we(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Kt(s.shape,r);return l.length>0&&(i=we(i,l)),H(i,s.shape)}}}},bz={kernelName:Da,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},vz={kernelName:$a,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>st(n)}}},wz={kernelName:du,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>st(n)}}},kz={kernelName:pu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,Dn(he(Ce(1),xt(me(n,"float32")))))}}},Sz={kernelName:hu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Dn(ue(Ce(1),xt(me(n,"float32"))));return de(e,s)}}}},Iz={kernelName:gu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=ue(xt(n),xt(s)),l=L(e,de(s,i)),c=Kt(n.shape,r);return c.length>0&&(l=we(l,c)),H(l,n.shape)},b:()=>{let i=ue(xt(n),xt(s)),l=zt(L(e,de(n,i))),c=Kt(s.shape,r);return c.length>0&&(l=we(l,c)),H(l,s.shape)}}}},Cz={kernelName:fu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ue(xt(me(n,"float32")),1))}}},Tz={kernelName:mu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,he(Ce(1),xt(me(n,"float32"))))}}};function Nz(e,t,n,s,r,a){let o=$(e,"dy","avgPool3dGrad"),i=$(t,"input","avgPool3dGrad"),l=o,c=i,u=!1;i.rank===4&&(u=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Wn("avgPool3dGrad",r,a);let d={dy:l,input:c},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=V.runKernel(Eh,d,p);return u?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Ez=U({avgPool3dGrad_:Nz}),Rz={kernelName:ud,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>Ez(e,s,r,a,o,i)}}};function _z(e,t,n,s,r){let a=$(e,"dy","avgPoolGrad"),o=$(t,"input","avgPoolGrad");M(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,c=!1;o.rank===3&&(c=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),M(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let u={dy:l,input:i},d={filterSize:n,strides:s,pad:r},p=V.runKernel(Nh,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Dz=U({avgPoolGrad_:_z}),$z={kernelName:Pa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>Dz(e,s,r,a,o)}}},Pz={kernelName:Fa,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>je(e,r,!1,!0),b:()=>je(s,e,!0,!1)}:!a&&o?{a:()=>je(e,r,!1,!1),b:()=>je(e,s,!0,!1)}:a&&!o?{a:()=>je(r,e,!1,!0),b:()=>je(s,e,!1,!1)}:{a:()=>je(r,e,!0,!0),b:()=>je(e,s,!0,!0)}}},Fz={kernelName:gi,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>Cf(e,s,r)}}},Oz={kernelName:Y5,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>we(e,i,!0)}}},Mz={kernelName:Oa,gradFunc:e=>({x:()=>e.clone()})},zz={kernelName:Ma,gradFunc:e=>({x:()=>st(e)})},Lz={kernelName:Kr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Vn(pr(dl(s,r),pl(s,a)),e,st(e))}}},Bz={kernelName:dd,inputsToSave:["x"],gradFunc:ww.gradFunc},Wz={kernelName:yi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=Zs(r,t[0].shape)[0],o=s.map(l=>l[a]);return Yt(e,o,a).map(l=>()=>l)}},Vz={kernelName:za,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return M(Po(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>oy(s.shape,e,r,o,i,l),filter:()=>Fy(s,e,r.shape,o,i,l)}}},Uz={kernelName:La,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>Fo(e,r,a,o,i,1,l),filter:()=>Fy(e,s,r.shape,a,o,i,l)}}};function Gz(e,t,n,s,r){let a=e;e.rank===4&&(a=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),M(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),M(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),M(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),M(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return V.runKernel($h,i,l)}var Hz=U({conv3DBackpropFilter_:Gz}),jz={kernelName:pd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;M(Po(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>Sv(o.shape,e,i,r,a),filter:()=>Hz(o,e,i.shape,r,a)}}},qz={kernelName:Ba,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(zt(Iy(me(n,"float32"))),e)}}},Xz={kernelName:Wa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Cy(me(n,"float32")),e)}}},Kz={kernelName:Ai,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=Lv([r],s.rank),l=cy(e,r,a,!o);return i!=null&&(l=nt(l,i)),l}}}},Zz={kernelName:Va,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s==null?[1,1]:s;M(Po(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,c]=t;return M(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),M(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),M(Rr(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),Wn("depthwiseConv2d",a,o),{x:()=>iw(l.shape,e,c,r,a,i,o),filter:()=>ow(l,e,c.shape,r,a,i,o)}}},Yz={kernelName:hd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>V.runKernel(Lh,a,n),filter:()=>V.runKernel(Bh,o,n)}}},Jz={kernelName:Ga,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>V.runKernel(Wh,s)}}},Qz={kernelName:yu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(Ms(zt(xt(n))),2/Math.sqrt(Math.PI));return{x:()=>L(e,s)}}},eL={kernelName:Ha,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,n)}}},tL={kernelName:wi,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>H(e,n.shape)}}},nL={kernelName:ki,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Ms(n))}}},sL={kernelName:ja,gradFunc:e=>({x:()=>st(e)})},rL={kernelName:qa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=de(e,me(s,"float32")),l=Kt(n.shape,r);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,me(n,"float32")),l=Kt(s.shape,r);l.length>0&&(i=H(we(i,l),s.shape));let c=xt(s);return zt(de(i,me(c,"float32")))}}}},aL={kernelName:Xa,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i==null?Ce(1):i,c=Kt(a.shape,r.shape),u=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)u.push(r.shape[b]);u.push(1)}let d=he(r,a),p=L(e,l),h=ky(ue(o,Ce(s))),f=L(L(L(h,h),h),Ce(-.5));return{x:()=>a.rank===1?H(L(L(e,Ys(H(h,[1,1,1,a.shape[0]]),u)),l),r.shape):H(L(L(e,h),l),r.shape),mean:()=>{let b=L(L(h,Ce(-1)),p);return a.rank===1&&(b=we(b,c)),H(b,a.shape)},variance:()=>{let b=L(L(f,d),p);return a.rank===1&&(b=we(b,c)),H(b,a.shape)},scale:()=>{let b=L(d,h),w=L(e,b);return a.rank===1&&(w=we(w,c)),H(w,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=we(b,c)),H(b,a.shape)}}}},oL={kernelName:Ii,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=Zs(a,s.shape)[0];return{x:()=>{let l=s.shape,c=r.size,u=l.slice(0,o),d=u.length,p=l.slice(a,l.length).slice(1),h=p.length,f=kw(0,d),m=kw(d+1,d+1+h),g=Sw([u,[c],p]),y=H(e,g),x=H(r,[c]),A=Sw([[d],f,m]),b=nt(y,A),w=Jv(b,x,s.shape[o]),C=my(A);return w=nt(w,C),w},indices:()=>r}}};function kw(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Sw(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var iL={kernelName:Ka,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>st(n),b:()=>st(s)}}},lL={kernelName:Za,gradFunc:e=>({x:()=>me(e,"float32")})},uL={kernelName:xu,gradFunc:e=>({x:()=>st(e)})},cL={kernelName:bu,gradFunc:e=>({x:()=>st(e)})},dL={kernelName:vu,gradFunc:e=>({x:()=>st(e)})},pL={kernelName:Ya,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=xs(s,0);return{x:()=>Vn(a,e,L(e,r))}}},hL={kernelName:wu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ue(n,1))}}},fL={kernelName:Ja,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,me(n,"float32"))}}},mL={kernelName:J5,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let a=!0,o=Ms(s);return he(e,L(we(e,r,a),o))}}}};function gL(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return V.runKernel(Hh,i,l)}var yL=U({localResponseNormalizationBackprop_:gL}),AL={kernelName:yd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>yL(s,r,e,a,o,i,l)}}};function Iw(e,t,n,s){return t.rank<n.rank&&(t=H(t,hl(t.shape,s))),e.rank<n.rank&&(e=H(e,hl(e.shape,s))),{x:()=>L(e,me(Os(n,t),e.dtype))}}var Cw={kernelName:Qa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=Zs(r,a.shape),l=Iw(e,o,a,i);return{x:()=>l.x()}}},xL={kernelName:eo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,me(dl(n,s),"float32")),b:()=>L(e,me(py(n,s),"float32"))}}};function bL(e,t,n,s,r,a,o){let i=$(e,"dy","maxPool3dGrad"),l=$(t,"input","maxPool3dGrad"),c=$(n,"output","maxPool3dGrad"),u=i,d=l,p=c,h=!1;l.rank===4&&(h=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=H(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=H(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),M(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),M(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),M(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),Wn("maxPool3dGrad",a,o);let f={dy:u,input:d,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=V.runKernel(qh,f,m);return h?H(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var vL=U({maxPool3dGrad_:bL}),wL={kernelName:Ad,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>vL(e,s,r,a,o,i,l)}}};function kL(e,t,n,s,r,a,o){let i=$(e,"dy","maxPoolGrad"),l=$(t,"input","maxPoolGrad"),c=$(n,"output","maxPoolGrad");M(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),M(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),M(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Wn("maxPoolGrad",a,o);let u={dy:i,input:l,output:c},d={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return V.runKernel(jh,u,d)}var SL=U({maxPoolGrad_:kL}),IL={kernelName:to,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>SL(e,s,r,a,o,i)}}},CL={kernelName:no,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=Zs(r,s.shape),i=zv(s.shape,a)[1],l=It(i);return{x:()=>{let u=s.shape.slice();a.forEach(h=>{u[h]=1});let d=H(e,u);return de(L(d,bs(s.shape,"float32")),l)}}}},TL={kernelName:so,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=Zs(r,a.shape),l=Iw(e,o,a,i);return{x:()=>l.x()}}},NL={kernelName:ro,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,me(pl(n,s),"float32")),b:()=>L(e,me(xs(n,s),"float32"))}}},EL={kernelName:ao,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Fe(e,a,s.shape)}}},RL={kernelName:Su,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=Kt(n.shape,r);return i.length>0?H(we(e,i),n.shape):e},b:()=>{let i=L(e,zt(Ud(de(n,s)))),l=Kt(s.shape,r);return l.length>0?H(we(i,l),s.shape):i}}}},_L={kernelName:oo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=L(e,me(s,"float32")),l=Kt(n.shape,r);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,me(n,"float32")),l=Kt(s.shape,r);return l.length>0?H(we(i,l),s.shape):i}}}},DL={kernelName:_i,gradFunc:e=>({x:()=>zt(e)})},$L={kernelName:Oi,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Gt(n.shape,"float32")}}},PL={kernelName:Fi,gradFunc:e=>({x:()=>st(e)})},FL={kernelName:Mi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return os(e,s).map(a=>()=>a)}},Tw={kernelName:io,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Fe(e,a,s.shape)}}},OL={kernelName:lo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=At(a.shape,o.shape);return{a:()=>{let u=me(o,"float32"),d=L(e,L(u,Mo(a,he(u,Ce(1))))),p=Kt(a.shape,i);return p.length>0&&(d=we(d,p)),H(d,a.shape)},b:()=>{let u=xs(a,0),d=Vn(u,zs(a),st(a)),p=L(e,L(r,d)),h=Kt(o.shape,i);return h.length>0&&(p=we(p,h)),H(p,o.shape)}}}},ML={kernelName:uo,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=xs(n,0);return{x:()=>Vn(r,e,L(e,s)),alpha:()=>{let a=Vn(r,st(e),L(e,n)),o=Kt(s.shape,e.shape);return o.length>0&&(a=we(a,o)),H(a,s.shape)}}}},zL={kernelName:Ua,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=de(e,me(s,"float32")),l=Kt(n.shape,r);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,me(n,"float32")),l=Kt(s.shape,r);l.length>0&&(i=H(we(i,l),s.shape));let c=xt(s);return zt(de(i,me(c,"float32")))}}}},LL={kernelName:Tu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,zt(xt(n)))}}},BL={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(pl(n,6),Xd(n));return{x:()=>L(e,me(s,"float32"))}}},WL={kernelName:co,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,me(Xd(n),"float32"))}}},VL={kernelName:Li,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>H(e,n.shape)}}},UL={kernelName:po,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>V.runKernel(Yh,r,n)}}},GL={kernelName:Nu,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>V.runKernel(Zh,r,n)}}},HL={kernelName:Bi,gradFunc:(e,t,n)=>{let{dims:s}=n,r=Zs(s,e.shape);return{x:()=>Bs(e,r)}}},jL={kernelName:Wi,gradFunc:e=>({x:()=>st(e)})},qL={kernelName:fo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>zt(de(e,L(Mo(n,1.5),2)))}}},XL={kernelName:Ui,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>me(st(n),"float32"),t:()=>L(e,me(n,e.dtype)),e:()=>L(e,me(kf(n),e.dtype))}}},KL={kernelName:Eu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=xs(n,Ce(0)),r=Ce(yw),a=Ce(Aw),o=L(e,a),i=L(L(e,r),Ms(me(n,"float32")));return Vn(s,o,i)}}}},ZL={kernelName:go,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(n,he(Ce(1),n)))}}},YL={kernelName:Ru,gradFunc:e=>({x:()=>st(e)})},JL={kernelName:mo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Af(me(n,"float32")),e)}}},QL={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(uy(me(n,"float32")),e)}}},eB={kernelName:Gi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=Z3(s,r,a),c=[];for(let u=0;u<e.rank;u++)c.push([i[u],o[u]-i[u]-l[u]]);return{x:()=>Js(e,c)}}},tB={kernelName:xo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=L(e,s);return{logits:()=>he(o,L(we(o,[r],a),s))}}},nB={kernelName:_u,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,_n(n))}}},Nw={kernelName:ji,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>yf(e,s,r)}}},Ew={kernelName:qi,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>St(e,s)}}},sB={kernelName:yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,L(Dn(me(n,"float32")),2))}}},rB={kernelName:$u,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(me(n,"float32"),2))}}},aB={kernelName:bo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ce(2);return{a:()=>L(e,L(r,he(n,s))),b:()=>L(e,L(r,he(s,n)))}}},oB={kernelName:So,gradFunc:e=>({x:()=>st(e)})},iB={kernelName:vo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=e,l=Kt(n.shape,r);return l.length>0&&(i=we(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Kt(s.shape,r);return l.length>0&&(i=we(i,l)),H(zt(i),s.shape)}}}},lB={kernelName:Ao,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;Zs(a,s.shape).forEach(c=>{r[c]=1});let i=H(e,r),l=L(i,bs(s.shape,"float32"));return{x:()=>l}}},uB={kernelName:Ki,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,xt(Af(n)))}}},cB={kernelName:wo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(he(Ce(1),xt(n)),e)}}},dB={kernelName:Zr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=st(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=ue(o,Fe(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=ue(o,Fe(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)o=ue(o,Fe(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)o=ue(o,Fe(e,[i*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},pB={kernelName:ko,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=my(r);return{x:()=>nt(e,a)}}},hB={kernelName:Ji,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>an(e,r)}}},fB={kernelName:Id,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>mB(e,n)}}};function mB(e,t){let n=Qr(t,st(t)),s=Gu(e,n),r=dl(t,Ce(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=Zt(r,i+1);r=pr(r,bs(s.shape,"bool"));let o=st(s);return Vn(r,s,o)}var gB={kernelName:Qi,gradFunc:e=>({x:()=>st(e)})},yB=[ww,yz,Az,xz,bz,vz,wz,kz,Sz,Iz,Cz,Tz,Rz,$z,Pz,Fz,Oz,Mz,zz,Lz,Bz,Wz,Uz,Vz,jz,qz,Xz,Kz,Zz,Yz,zL,Jz,Qz,eL,tL,nL,rL,sL,aL,oL,iL,lL,uL,cL,dL,pL,hL,fL,mL,AL,Cw,Cw,xL,wL,IL,CL,TL,NL,EL,RL,_L,DL,$L,PL,FL,Tw,Tw,OL,ML,LL,BL,WL,VL,UL,GL,HL,jL,qL,XL,KL,ZL,YL,JL,QL,eB,tB,nB,Nw,Nw,Ew,Ew,sB,aB,rB,oB,iB,lB,uB,cB,dB,pB,hB,fB,gB];for(let e of yB)Q5(e);var Rw={};Me(Rw,{maxNorm:()=>vB,minMaxNorm:()=>SB,nonNeg:()=>kB,unitNorm:()=>wB});var Ly;function on(){return Ly==null&&(Ly=Er().epsilon()),Ly}function fr(){return"channelsLast"}var na=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,na.prototype)}},mr=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,mr.prototype)}},q=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,q.prototype)}},Le=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Le.prototype)}},_w=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,_w.prototype)}};function yl(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function $r(e,t){if(!e)throw new _w(t)}function Dw(e,t){let n=0;for(let s of e)s===t&&n++;return n}function ls(e){return e.length===1?e[0]:e}function Tt(e){return Array.isArray(e)?e:[e]}function sa(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function Al(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var er={};function By(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Wy(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>Wy(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:Wy(s))}}}function Yd(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in er)o=er[a];else if(o=t[a],o==null)throw new q(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new q(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in er?[i,l]=er.className:o in t&&([i,l]=t[o]),i==null)throw new q(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let h of Object.keys(er))c[h]=er[h];for(let h of Object.keys(n))c[h]=n[h];let u=a.config;u.customObjects=c;let d={...er};for(let h of Object.keys(n))er[h]=n[h];Wy(a.config);let p=l(i,a.config,n,r);return er={...d},p}else{let c={...er};for(let d of Object.keys(n))er[d]=n[d];let u=new i(a.config);return er={...c},u}}}function AB(e,t){return e<t?-1:e>t?1:0}function Uf(e,t){return-1*AB(e,t)}function Bo(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function xB(e){if(e==null)throw new q(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function xl(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new q(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Vy(e,t,n=0,s=1/0){return $r(n>=0),$r(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function xn(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>xn(n,`element ${s+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${$w(e)}.`)}function $w(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>$w(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function bB(e,t,n){let s=n!=null?n():v.now(),r;return(...o)=>{let i=n!=null?n():v.now();return i-s<t||(s=i,r=e(...o)),r}}function Pw(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function Uy(e,t){return X(()=>Dn(we(L(e,e),t,!0)))}var Jd=class extends ce.Serializable{getConfig(){return{}}},Gy=class extends Jd{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>{let t=Uy(e,this.axis),n=As(t,0,this.maxValue);return L(e,de(n,ue(on(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Gy.className="MaxNorm";ce.registerClass(Gy);var Hy=class extends Jd{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>de(e,ue(on(),Uy(e,this.axis))))}getConfig(){return{axis:this.axis}}};Hy.className="UnitNorm";ce.registerClass(Hy);var jy=class extends Jd{apply(e){return Dr(e)}};jy.className="NonNeg";ce.registerClass(jy);var qy=class extends Jd{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>{let t=Uy(e,this.axis),n=ue(L(this.rate,As(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,de(n,ue(on(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};qy.className="MinMaxNorm";ce.registerClass(qy);var Fw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ln(e){return By(e)}function Ow(e,t={}){return Yd(e,ce.SerializationMap.getMap().classNameMap,t,"constraint")}function un(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Fw?Fw[e]:e,config:{}};return Ow(n)}else return e instanceof Jd?e:Ow(e)}function vB(e){return new Gy(e)}function wB(e){return new Hy(e)}function kB(){return new jy}function SB(e){return new qy(e)}var Mw={};Me(Mw,{constant:()=>qB,glorotNormal:()=>eW,glorotUniform:()=>QB,heNormal:()=>tW,heUniform:()=>nW,identity:()=>YB,leCunNormal:()=>sW,leCunUniform:()=>rW,ones:()=>jB,orthogonal:()=>aW,randomNormal:()=>KB,randomUniform:()=>XB,truncatedNormal:()=>ZB,varianceScaling:()=>JB,zeros:()=>HB});var IB=["channelsFirst","channelsLast"],CB=["nearest","bilinear"],TB=["valid","same","causal"],NB=["max","avg"],EB=["sum","mul","concat","ave"],Yu=new Map;function Ht(e){xl(IB,"DataFormat",e)}function RB(e){xl(CB,"InterpolationFormat",e)}function Ws(e){xl(TB,"PaddingMode",e)}function zw(e){xl(NB,"PoolMode",e)}var Qd=[],Lw="/";function bl(e,t){Qd.push(e);try{let n=t();return Qd.pop(),n}catch(n){throw Qd.pop(),n}}function _B(){return Qd.length===0?"":Qd.join(Lw)+Lw}function Bw(e){if(!Vw(e))throw new Error("Not a valid tensor name: '"+e+"'");return _B()+e}function Ww(e){if(!Vw(e))throw new Error("Not a valid tensor name: '"+e+"'");Yu.has(e)||Yu.set(e,0);let t=Yu.get(e);if(Yu.set(e,Yu.get(e)+1),t>0){let n=`${e}_${t}`;return Yu.set(n,1),n}else return e}var DB=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Vw(e){return!!e.match(DB)}function $B(e){return e===parseInt(e.toString(),10)}function Wo(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Ju(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function Vo(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function gr(e,t){if(t<e)throw new q(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}function Gf(e,t){return me(e,t)}function ep(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),H(e,n)}function PB(e,t){return X(()=>{if(e.shape.length!==2)throw new q(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=ep(e,1);return Zy(n,[1,t,1])})}function FB(e){let t=[Wo(e.shape)];return H(e,t)}function OB(e){if(e.rank<=1)throw new q(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Wo(e.shape,1)];return H(e,t)}function vl(e,t,n){return X(()=>{switch(e.rank){case 1:return Nf(e,t,n);case 2:return Ty(e,[t,0],[n,e.shape[1]]);case 3:return fl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ml(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Fe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Fe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new q(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Xy(e,t,n){return X(()=>{switch(e.rank){case 1:return Nf(e,t,n);case 2:return Ty(e,[0,t],[e.shape[0],n]);case 3:return fl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ml(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Hf(e,t,n,s){return X(()=>{switch(e.rank){case 1:return Nf(e,t,n);case 2:switch(s){case 1:return vl(e,t,n);case 2:return Xy(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return vl(e,t,n);case 2:return fl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Xy(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return vl(e,t,n);case 2:return ml(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ml(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Xy(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ky(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),St(e,t)}function Uw(e,t){switch(e.rank){case 1:return vv([e,t]);case 2:return Vu([e,t],0);case 3:return wv([e,t],0);case 4:return kv([e,t],0);default:throw new q(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Zy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new q(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ys(e,t)}function jf(e,t=0,n=1,s,r){return Gv(e,t,n,s,r)}function Pr(e,t,n,s){if(e.rank<2||t.rank<2)throw new Le(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Le(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let r=!1,a=!1;return zo.matMul({a:e,b:t,transposeA:r,transposeB:a,bias:s?Yy(e.rank,s,fr()):null,activation:n})}else{let r=e.shape.slice(),a=r.pop();e=H(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),c=[...o,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=H(nt(t,u),[l,-1]);let d=[...r,...c],p=!1,h=!1;return H(zo.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:s?Yy(e.rank,s,fr()):null,activation:n}),d)}}function Gw(e,t,n){return X(()=>(Array.isArray(t)?t=Ct(t,"int32"):t=me(t,"int32"),Gu(e,t,n)))}function tp(e){return L(e,e)}function Yy(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new q(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1,1]):H(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1]):H(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1]):H(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,s[0]]):H(t,[1].concat(s))}else if(e<3)return t;throw new q(`Unsupported input rank by biasAdd: ${t.rank}`)}function yr(e,t,n){return X(()=>(n==null&&(n=fr()),Ht(n),ue(e,Yy(e.rank,t,n))))}function MB(e,t=1){if(t!==1)throw new Le(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Vd(e)}function zB(e){return X(()=>de(e,ue(rn(e),1)))}function Hw(e,t,n,s){return X(()=>rw(e,t,n,s))}function LB(e){return X(()=>{let t=ue(.5,L(.2,e));return As(t,0,1)})}function np(e,t,n=!1){return n?e():t()}var BB=["fanIn","fanOut","fanAvg"],WB=["normal","uniform","truncatedNormal"];function VB(e){xl(BB,"FanMode",e)}function UB(e){xl(WB,"Distribution",e)}var tr=class extends ce.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Jy=class extends tr{apply(e,t){return Gt(e,t)}};Jy.className="Zeros";ce.registerClass(Jy);var qf=class extends tr{apply(e,t){return bs(e,t)}};qf.className="Ones";ce.registerClass(qf);var Qy=class extends tr{constructor(e){super();if(typeof e!="object")throw new q(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new q(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return X(()=>L(Ce(this.value),bs(e,t)))}getConfig(){return{value:this.value}}};Qy.className="Constant";ce.registerClass(Qy);var e1=class extends tr{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return qu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};e1.className="RandomUniform";ce.registerClass(e1);var t1=class extends tr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`randomNormal does not support dType ${t}.`);return jf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};t1.className="RandomNormal";ce.registerClass(t1);var n1=class extends tr{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`truncatedNormal does not support dType ${t}.`);return _f(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};n1.className="TruncatedNormal";ce.registerClass(n1);var s1=class extends tr{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return X(()=>{if(e.length!==2||e[0]!==e[1])throw new q("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,dy(e[0]))})}getConfig(){return{gain:this.gain}}};s1.className="Identity";ce.registerClass(s1);function GB(e,t="channelsLast"){let n,s;if(Ht(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=Wo(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=Wo(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=Wo(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var us=class extends tr{constructor(e){super();if(e.scale<0)throw new q(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,VB(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,UB(this.distribution),this.seed=e.seed}apply(e,t){let n=GB(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`${this.getClassName()} does not support dType ${t}.`);return _f(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return qu(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};us.className="VarianceScaling";ce.registerClass(us);var Xf=class extends us{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return us.className}};Xf.className="GlorotUniform";ce.registerClass(Xf);var Kf=class extends us{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return us.className}};Kf.className="GlorotNormal";ce.registerClass(Kf);var Zf=class extends us{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return us.className}};Zf.className="HeNormal";ce.registerClass(Zf);var Yf=class extends us{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return us.className}};Yf.className="HeUniform";ce.registerClass(Yf);var Jf=class extends us{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return us.className}};Jf.className="LeCunNormal";ce.registerClass(Jf);var Qf=class extends us{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return us.className}};Qf.className="LeCunNormal";ce.registerClass(Qf);var r1=class extends tr{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Le("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return X(()=>{if(e.length<2)throw new Le("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=jf(n,0,1,"float32"),r=mw.gramSchmidt(s);return e[0]>e[1]&&(r=nt(r)),L(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};r1.className="Orthogonal";ce.registerClass(r1);var jw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function qw(e,t={}){return Yd(e,ce.SerializationMap.getMap().classNameMap,t,"initializer")}function Lt(e){return By(e)}function $t(e){if(typeof e=="string"){let t=e in jw?jw[e]:e;if(t==="GlorotNormal")return new Kf;if(t==="GlorotUniform")return new Xf;if(t==="HeNormal")return new Zf;if(t==="HeUniform")return new Yf;if(t==="LeCunNormal")return new Jf;if(t==="LeCunUniform")return new Qf;{let n={};return n.className=t,n.config={},qw(n)}}else return e instanceof tr?e:qw(e)}function HB(){return new Jy}function jB(){return new qf}function qB(e){return new Qy(e)}function XB(e){return new e1(e)}function KB(e){return new t1(e)}function ZB(e){return new n1(e)}function YB(e){return new s1(e)}function JB(e){return new us(e)}function QB(e){return new Xf(e)}function eW(e){return new Kf(e)}function tW(e){return new Zf(e)}function nW(e){return new Yf(e)}function sW(e){return new Jf(e)}function rW(e){return new Qf(e)}function aW(e){return new r1(e)}var Xw={};Me(Xw,{Layer:()=>rt,RNN:()=>aa,RNNCell:()=>up,activation:()=>BV,add:()=>KV,alphaDropout:()=>DU,average:()=>ZV,averagePooling1d:()=>IA,averagePooling2d:()=>CA,averagePooling3d:()=>TA,avgPool1d:()=>aU,avgPool2d:()=>iU,avgPool3d:()=>uU,avgPooling1d:()=>oU,avgPooling2d:()=>lU,avgPooling3d:()=>cU,batchNormalization:()=>nU,bidirectional:()=>SU,concatenate:()=>YV,conv1d:()=>_V,conv2d:()=>DV,conv2dTranspose:()=>$V,conv3d:()=>PV,conv3dTranspose:()=>FV,convLstm2d:()=>bU,convLstm2dCell:()=>vU,cropping2D:()=>MV,dense:()=>WV,depthwiseConv2d:()=>LV,dot:()=>tU,dropout:()=>VV,elu:()=>IV,embedding:()=>XV,flatten:()=>GV,gaussianDropout:()=>_U,gaussianNoise:()=>RU,globalAveragePooling1d:()=>dU,globalAveragePooling2d:()=>pU,globalMaxPool1d:()=>CU,globalMaxPool2d:()=>TU,globalMaxPooling1d:()=>oS,globalMaxPooling2d:()=>iS,gru:()=>fU,gruCell:()=>mU,input:()=>Ck,inputLayer:()=>SV,layerNormalization:()=>sU,leakyReLU:()=>TV,lstm:()=>gU,lstmCell:()=>yU,masking:()=>$U,maxPool1d:()=>NU,maxPool2d:()=>EU,maxPooling1d:()=>lS,maxPooling2d:()=>uS,maxPooling3d:()=>hU,maximum:()=>JV,minimum:()=>QV,multiply:()=>eU,permute:()=>qV,prelu:()=>NV,reLU:()=>CV,repeatVector:()=>HV,reshape:()=>jV,rnn:()=>wU,separableConv2d:()=>OV,simpleRNN:()=>AU,simpleRNNCell:()=>xU,softmax:()=>EV,spatialDropout1d:()=>UV,stackedRNNCells:()=>kU,thresholdedReLU:()=>RV,timeDistributed:()=>IU,upSampling2d:()=>zV,zeroPadding2d:()=>rU});var oW=0;function Kw(){return oW++}var em={};function tm(e=""){return e in em||(em[e]=0),em[e]+=1,e+em[e].toString()}function a1(e){return Array.isArray(e)&&Array.isArray(e[0])}function nm(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ve(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new q(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ft(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new q(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function sm(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var Zw="Variable",Yw=class{constructor(e,t="float32",n=Zw,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=Kw(),n=n==null?Zw:n,this.originalName=Bw(n),this.name=Ww(this.originalName),this.trainable_=s,this.constraint=r,this.val=Qv(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),iW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function iW(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function o1(e){return e.map(t=>t.read())}function i1(e){e.forEach(t=>{t[0].write(t[1])})}var Jt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Ar=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=Kw(),a!=null&&(this.originalName=Bw(a),this.name=Ww(this.originalName)),this.rank=t.length}},lW=0,rm=class{constructor(e,t){this.callArgs=t,this.id=lW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},uW=0,rt=class extends ce.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=uW++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=sa(n)+"_"+tm(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new mr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new q(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ls(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ls(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new na(`Layer ${this.name} is not connected, no input to return.`);return ls(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new na(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ls(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Tt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=Tt(this.inputSpec);if(e.length!==t.length)throw new q(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new q(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),c=r.axes[i],u=l>=0?o[l]:o[o.length+l];if(c!=null&&[c,null].indexOf(u)===-1)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=Tt(e),s=!0;for(let a of n)if(!(a instanceof Ar)){s=!1;break}let r=!0;for(let a of n)if(a instanceof Ar){r=!1;break}if(s===r)throw new q("Arguments to apply() must be all SymbolicTensors or all Tensors");return bl(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of Tt(e))a.push(o.shape);this.build(ls(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=Tt(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=ls(i),this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=cW(e),o=this.computeOutputShape(a),i,l=dW(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((c,u)=>new Ar(l,c,this,Tt(e),t,this.name,u)):i=new Ar(l,o,this,Tt(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new na(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new na(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new mr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return sm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return o1(e?this.trainableWeights:this.weights)}setWeights(e){X(()=>{let t=this.weights;if(t.length!==e.length)throw new q(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=o1(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!v.arraysEqual(a.shape,i.shape))throw new q(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}i1(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new q(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():$t("zeros"));let l=s.apply(t,n),c=new Yw(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Tt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=Tt(e);t=Tt(t),n=Tt(n),s=Tt(s),r=nm(r),a=nm(a);let l=[],c=[],u=[];for(let d of i)l.push(d.sourceLayer),c.push(d.nodeIndex),u.push(d.tensorIndex);new rm({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function cW(e){e=Tt(e);let t=[];for(let n of e)t.push(n.shape);return ls(t)}function dW(e){return"float32"}function Jw(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],c=Jw(o,i,l);for(let u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}var Qu=class extends rt{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:tm("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new q("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new q("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new q("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new Ar(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new rm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new q(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Qu.className="InputLayer";ce.registerClass(Qu);function Qw(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new q("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Qu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Uo(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];ne(s)}}function ek(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var pW=125,ec=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},tk=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},hW=class extends ec{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=X(()=>ue(this.totals[s],L(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:X(()=>{let s=L(de(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),yn(t[n])}))}},nk=class extends ec{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},sk=class extends ec{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||gw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=pW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=bB(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Uo(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Uo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Uo(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Uo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Uo(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Uo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Uo(e),await this.trainEnd(e))}};function rk(e,t){return e==null&&(e={}),e instanceof ec?[e]:Array.isArray(e)&&e[0]instanceof ec?e:Tt(e).map(s=>new sk(s,t))}var Fr=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Fr.checkForDuplicate(t),Fr.constructors[e]==null&&(Fr.constructors[e]=[]),Fr.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Fr.constructors)Fr.constructors[+t].forEach(s=>{if(s===e)throw new q("Duplicate callback constructor.")})}static clear(){Fr.constructors={}}static createCallbacks(e){let t=[];for(let n in Fr.constructors){let s=+n;e>=s&&t.push(...Fr.constructors[s])}return t.map(n=>new n)}},l1=Fr;l1.constructors={};function ak(e,t,n,s,r,a,o,i,l){let c=new nk,u=[new hW,...l1.createCallbacks(t)];e!=null&&u.push(...e),u.push(c);let d=new tk(u);return d.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:d,history:c}}function xr(e,t={},n=!1){return Yd(e,ce.SerializationMap.getMap().classNameMap,t,"layer",n)}function am(e,t){return X(()=>{e.dtype!=="float32"&&(e=me(e,"float32"));let n=we(tp(e),t,!0),s=Uu(n.shape,on()),r=Dn(Qr(n,s));return de(e,r)})}function wl(e,t){return X(()=>Ut(tp(he(t,e)),-1))}function om(e,t){return X(()=>Ut(rn(he(t,e)),-1))}function tc(e,t){return X(()=>{let n=he(e,t),s=As(rn(e),on(),Number.MAX_VALUE),r=rn(de(n,s));return L(100,Ut(r,-1))})}function fW(e,t){return X(()=>{let n=As(t,on(),Number.MAX_VALUE),s=zs(ue(1,n)),r=As(e,on(),Number.MAX_VALUE),a=zs(ue(1,r));return Ut(tp(he(s,a)),-1)})}function mW(e,t){return X(()=>{let n=Qr(0,he(1,L(e,t)));return Ut(tp(n),-1)})}function gW(e,t){return X(()=>{let n=Qr(0,he(1,L(e,t)));return Ut(n,-1)})}function yW(e,t){return X(()=>{let n=we(L(e,t),-1),s=An(L(he(1,e),t),-1);return Qr(0,ue(1,he(s,n)))})}function AW(e,t){return X(()=>{let n=Math.log(2),s=he(t,e),r=he(ue(s,Hu(L(-2,s))),n);return Ut(r,-1)})}function sp(e,t,n=!1){return X(()=>{if(n)t=Ku(t);else{let s=we(t,t.shape.length-1,!0);t=de(t,s)}return t=As(t,on(),1-on()),zt(we(L(me(e,"float32"),zs(t)),t.shape.length-1))})}function im(e,t,n=!1){return X(()=>{let s=me(Ud(FB(e)),"int32");t=As(t,on(),1-on());let r=t.shape,a=H(zd(s,r[r.length-1]),r);return sp(a,t,n)})}function xW(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new q(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return X(()=>{let n=Dr(t),s=zt(rn(t));return ue(he(n,L(t,e)),vf(Ms(s)))})}function lm(e,t){return X(()=>{let n;return n=As(t,on(),1-on()),n=zs(de(n,he(1,n))),Ut(xW(e,n),-1)})}function bW(e,t){return X(()=>{let n=As(e,on(),1),s=As(t,on(),1);return we(L(e,zs(de(n,s))),-1)})}function vW(e,t){return X(()=>{let n=zs(ue(on(),t));return Ut(he(t,L(e,n)),-1)})}function u1(e,t){return X(()=>{let n=am(e,-1),s=am(t,-1),r=L(n,s);return zt(we(r,-1))})}var um={meanSquaredError:wl,meanAbsoluteError:om,meanAbsolutePercentageError:tc,meanSquaredLogarithmicError:fW,squaredHinge:mW,hinge:gW,categoricalHinge:yW,logcosh:AW,categoricalCrossentropy:sp,sparseCategoricalCrossentropy:im,binaryCrossentropy:lm,kullbackLeiblerDivergence:bW,poisson:vW,cosineProximity:u1};function c1(e){if(typeof e=="string"){if(e in um)return um[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new q(t)}else return e}function d1(e,t){return X(()=>{let n=L(.5,Ls(t)),s=Gf(xs(t,n),e.dtype);return Ut(Os(e,s),-1)})}function p1(e,t){return X(()=>Gf(Os(Fs(e,-1),Fs(t,-1)),"float32"))}function ok(e,t){return X(()=>me(we(pr(Os(e,1),Os(t,1))),"float32"))}function wW(e,t){return X(()=>me(we(pr(Os(e,1),Os(t,0))),"float32"))}function kW(e,t){return X(()=>me(we(pr(Os(e,0),Os(t,1))),"float32"))}function ik(e,t){return X(()=>{let n=ok(e,t),s=kW(e,t),r=ue(n,s);return me(Vn(xs(r,0),de(n,r),0),"float32")})}function SW(e,t){return X(()=>{let n=ok(e,t),s=wW(e,t),r=ue(n,s);return me(Vn(xs(r,0),de(n,r),0),"float32")})}function lk(e,t){return lm(e,t)}function uk(e,t){return e.rank===t.rank&&(e=Ke(e,[e.rank-1])),t=Fs(t,-1),t.dtype!==e.dtype&&(t=me(t,e.dtype)),me(Os(e,t),"float32")}var IW=wl,CW=wl,TW=om,NW=om,EW=tc,RW=tc,h1=sp,_W=u1,ck=im,cm={binaryAccuracy:d1,categoricalAccuracy:p1,precision:ik,categoricalCrossentropy:h1,sparseCategoricalCrossentropy:ck,mse:IW,MSE:CW,mae:TW,MAE:NW,mape:EW,MAPE:RW,cosine:_W};function DW(e){if(typeof e=="string"&&e in cm)return cm[e];if(typeof e!="string"&&e!=null)return e;throw new q(`Unknown metric ${e}`)}function dm(e){if($r(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(um))if(um[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(cm))if(cm[n]===e){t=n;break}return t!==void 0?t:e.name}}function $W(e){let t={Adagrad:()=>gl.adagrad(.01),Adadelta:()=>gl.adadelta(1,.95,on()),Adam:()=>gl.adam(.001,.9,.999,on()),Adamax:()=>gl.adamax(.002,.9,.999,on(),0),RMSProp:()=>gl.rmsprop(.001,.9,0,on()),SGD:()=>gl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new q(`Unknown Optimizer ${e}`)}var dk=1*1024*1024;function pk(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!f1(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>dk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${dk}.`)}}function f1(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!f1(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!f1(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function PW(e,t,n,s=console.log){let r=OW(e),a=["Layer (type)","Output shape","Param #"];r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let o;if(!r){a.push("Receives inputs"),o=[];for(let u in e.nodesByDepth)o.push(...e.nodesByDepth[u])}s("_".repeat(t)),pm(a,n,s),s("=".repeat(t));let i=e.layers;for(let u=0;u<i.length;++u)r?MW(i[u],n,s):zW(i[u],n,o,s),s((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=FW(e),c=sm(e.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function FW(e){let t;return e.collectedTrainableWeights!=null?t=sm(e.collectedTrainableWeights):t=sm(e.trainableWeights),t}function OW(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function pm(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function MW(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(i){s="multiple"}let r=e.name,a=e.getClassName(),o=[`${r} (${a})`,s,e.countParams().toString()];pm(o,t,n)}function zW(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}let a=[];for(let u of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(u)===-1))for(let d=0;d<u.inboundLayers.length;++d){let p=u.inboundLayers[d].name,h=u.nodeIndices[d],f=u.tensorIndices[d];a.push(`${p}[${h}][${f}]`)}let o=e.name,i=e.getClassName(),l=a.length===0?"":a[0],c=[`${o} (${i})`,r,e.countParams().toString(),l];pm(c,t,s);for(let u=1;u<a.length;++u)pm(["","","",a[u]],t,s)}function hk(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function rp(e,t){if(e===null)return null;if(typeof e=="string")return Al(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];hk(t,r,a)?n.push(a):n.push(rp(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=Al(s);n[a]=rp(r,a)}}return n}}function m1(e,t){if(e==null)return null;if(typeof e=="string")return sa(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];hk(t,r,a)?n.push(a):n.push(m1(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=sa(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=m1(r,s)}return n}}var g1="0.0.0";function LW(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return me(t,e.dtype)}catch(n){throw new q(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var kl=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof kl)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=LW(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new q(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ar){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ar){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ne(this.id2Mask)}},y1={},fk={};function ap(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],c=t.names();for(let f of i)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let u=i.join(",")+"|"+t.names().join(","),d,p;if(y1[u]==null){let f=BW(o,t);d=f.sorted,p=f.recipientCounts,y1[u]=d,fk[u]=p}d=y1[u],p={},r||Object.assign(p,fk[u]);let h=new kl(t);for(let f=0;f<d.length;++f){if(s!=null){let R=cf().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}let m=d[f],g=m.sourceLayer;if(g instanceof Qu)continue;let y=[],x=[],A=[],b=!1;for(let R of m.inputs){let F=h.getValue(R),_=h.getMask(R);y.push(F),x.push(_),_!=null&&(b=!0),r||(p[R.name]--,p[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!F.isDisposed&&R.sourceLayer.stateful!==!0&&A.push(F))}b&&(n=n||{},n.mask=x[0]);let w=Tt(g.apply(y,n)),C=null;g.supportsMasking&&(C=g.computeMask(y,x));let S=VW(m),E=Array.isArray(S)?S:[S];for(let R=0;R<E.length;++R){h.hasKey(E[R])||h.add(E[R],w[R],Array.isArray(C)?C[0]:C);let F=i.indexOf(E[R].name);F!==-1&&(l[F]=w[R])}r||ne(A)}return h.disposeMasks(),a?l:l[0]}function BW(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=mk(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=mk(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(c=>s[l].add(c))}}return{sorted:n,recipientCounts:WW(s)}}function WW(e){let t={};for(let n in e)t[n]=e[n].size;return t}function mk(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!n.has(c.name)&&a.push(c)}}return{sorted:s,recipientMap:r}}function VW(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var Or=class extends rt{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=tm(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Bo(this.inputs).length!==this.inputs.length)throw new q(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Bo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(A),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;$r(A===0,"input layer has >1 nodes"),$r(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(A),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let x=this.inputLayers[y];if(!(x instanceof Qu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},s={},r={},a={},o=[],i=(y,x,A,b,w,C)=>{(b==null||w==null||C==null)&&(b=y.sourceLayer,w=y.nodeIndex,C=y.tensorIndex);let S=b.inboundNodes[w];if(A.indexOf(S)!==-1)throw new mr(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(S)!==-1)return;this.containerNodes.add(Or.nodeKey(b,w)),b.id in a||(a[b.id]=Object.keys(a).length),A.indexOf(S)===-1&&A.push(S);let E=S.inboundLayers.length;for(let R=0;R<E;R++){let F=S.inputTensors[R],_=S.inboundLayers[R],P=S.nodeIndices[R],T=S.tensorIndices[R];i(F,x,A,_,P,T)}for(x.push(S);A.indexOf(S)>=0;)A.splice(A.indexOf(S),1);o.push(S)},l=[],c=[];for(let y of this.outputs)i(y,l,c);let u=o.slice().reverse();for(let y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let x=t[y.id],A=s[y.outboundLayer.id]==null?0:s[y.outboundLayer.id];x=Math.max(x,A),s[y.outboundLayer.id]=x,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=x;for(let b=0;b<y.inboundLayers.length;b++){let w=y.inboundLayers[b],C=y.nodeIndices[b],S=w.inboundNodes[C],E=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(x+1,E),n[S.id]=S}}let d={};for(let y in t){let x=t[y];x in d||(d[x]=[]),d[x].push(n[y])}let p={};for(let y in s){let x=s[y];x in p||(p[x]=[]),p[x].push(r[y])}let h=Object.keys(p).map(y=>parseInt(y,10)).sort(Uf);this.layers=[];for(let y of h){let x=p[y];x.sort((A,b)=>{let w=a[A.id],C=a[b.id];return w<C?-1:w>C?1:0});for(let A of x)A instanceof Or&&this.internalContainerRefs.push(A),this.layers.push(A)}this.layersByDepth=p,h=Object.keys(d).map(y=>parseInt(y,10)).sort(Uf);let f=this.inputs.slice(),m=[];for(let y of h)for(let x of d[y]){let A=x.outboundLayer;if(A!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new mr(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${A.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(A.name)}}this.nodesByDepth=d;let g=this.layers.map(y=>y.name);for(let y of g){let x=g.filter(A=>A===y).length;if(x!==1)throw new mr(`The name "${y}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new rm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new q("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new q(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new q(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new q(`${a.length} of ${s} weights are not set: ${a}`)}i1(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${g1}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=m1(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return X(()=>{e=Tt(e);let n=new kl;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return ap(this.outputs,n,t)})}computeMask(e,t){return X(()=>{e=Tt(e);let n;return t==null?n=yl(null,e.length):n=Tt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=nm(e);if(t.length!==this.inputLayers.length)throw new q(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],c=i.name+"_0_0";n[c]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Uf);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let c=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;let u=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],x=`${m.name}_${g}_${y}`,A=n[x];u.push(A)}let d=c.computeOutputShape(ls(u)),p=nm(d),h=c.inboundNodes.indexOf(l);for(let f=0;f<p.length;f++){let m=`${c.name}_${h}_${f}`;n[m]=p[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],u=`${i.name}_${l}_${c}`;a.push(u)}for(let o=0;o<a.length;o++){let i=a[o];$r(i in n),r.push(n[i])}return ls(r)}runInternalGraph(e,t){t==null&&(t=yl(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],c=e[i],u=t[i];n[l.id]=[c,u]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Uf);for(let i of s){let l=this.nodesByDepth[i];for(let c of l){let u=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,h=new Array;for(let f of d)f.id in n&&h.push(n[f.id]);if(h.length===d.length){let f={},m,g,y,x;if(c.callArgs!=null&&(f=c.callArgs),h.length===1){let[A,b]=h[0];f.mask==null&&(f.mask=b),y=Tt(u.call(A,f)),x=Tt(u.computeMask(A,b)),m=[A],g=[b]}else m=h.map(A=>A[0]),g=h.map(A=>A[1]),f.mask==null&&(f.mask=g),y=Tt(u.call(m,f)),x=Tt(u.computeMask(m,g));if(u.activityRegularizer)throw new Le("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let A=0;A<p.length;++A){let b=p[A],w=y[A],C=x[A];n[b.id]=[w,C]}}}}let r=[],a=[],o=[];for(let i of this.outputs){$r(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,c]=n[i.id];o.push(l.shape),r.push(l),a.push(c)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Or?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Or.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new q(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new q("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new q(`No such layer: ${e}`)}calculateLosses(){return X(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Or.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let u=0;u<a.inboundNodes.length;u++){let d=a.inboundNodes[u],p=Or.nodeKey(a,u),h={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],y=d.nodeIndices[m],x=d.tensorIndices[m],A=Or.nodeKey(g,y),b=t[A];b==null&&(b=0),f.push([g.name,b,x,h])}l.push(f)}}}let c={};c.name=a.name,c.className=o,c.config=i,c.inboundNodes=l,n.push(c)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=Or.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.inputLayersTensorIndices[a];s.push([o.name,c,u])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=Or.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.outputLayersTensorIndices[a];r.push([o.name,c,u])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let y=[],x;for(let A of g){let b=A[0],w=A[1],C=A[2];if(x=A[3]==null?{}:A[3],!(b in r)){o(m,g);return}let S=r[b];if(S.inboundNodes.length<=w){o(m,g);return}let E=S.inboundNodes[w];y.push(E.outputTensors[C])}y.length>0&&m.apply(ls(y),x)}function l(m){let g=m.name,y=xr(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(s),r[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new q(`Corrupted configuration, expected array for nodeData: ${A}`);o(y,A)})}let c=t.name,u=t.layers;for(let m of u)l(m);for(;!xB(a);)for(let m of u){let g=r[m.name];if(g.name in a){let y=a[g.name];delete a[g.name];for(let x of y)i(g,x)}}let d=[],p=[],h=t.inputLayers;for(let m of h){let g=m[0],y=m[1],x=m[2];$r(g in r);let b=r[g].inboundNodes[y].outputTensors;d.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],x=m[2];$r(g in r);let b=r[g].inboundNodes[y].outputTensors;p.push(b[x])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new q("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){X(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function UW(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function gk(e,t){return UW(e,t,"classWeight")}async function yk(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=X(()=>{if(e.shape.length===1)return Bn(e);if(e.shape.length===2){if(e.shape[1]>1)return Fs(e,1);if(e.shape[1]===1)return H(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());ne(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),Ct(o,"float32")}else return null}function GW(e,t){return L(e,t)}var HW=32;function Ak(e,t){let n,s,r=t;n=r.xs,s=r.ys,v.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=xk("input",e.inputNames,n),o=xk("output",e.outputNames,s),i=a[0].shape[0];v.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)v.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)v.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function xk(e,t,n){if(n instanceof tt)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new q(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function jW(e){if(e.length===3)throw new Le("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function qW(e,t,n){let s=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(bk(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=jW(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=rk(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:h}=ak(u,d,n.epochs,null,null,XW(t,n),null,r,c);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await p.onEpochBegin(f);let y=0,x=0;for(s||(m=await t.iterator());s?y<n.batchesPerEpoch:!0;){let A=await m.next();if(s&&A.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(A.value!=null){let{xs:b,ys:w}=Ak(e,A.value),C={};C.batch=x,C.size=b[0].shape[0],await p.onBatchBegin(x,C);let S=[];if(n.classWeight!=null){let F=gk(n.classWeight,e.outputNames);for(let _=0;_<F.length;++_)S.push(await yk(w[_],null,F[_]))}let E=b.concat(w).concat(S),R=i(E);ne(E);for(let F=0;F<l.length;++F){let _=l[F],P=R[F];C[_]=P,yn(P)}await p.onBatchEnd(x,C),ek(C),x++,y++}if(s?y>=n.batchesPerEpoch:A.done){if(r){let b;bk(n.validationData)?b=Tt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=Tt(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?HW:n.validationBatchSize,verbose:0}));for(let w=0;w<e.metricsNames.length;++w)g[`val_${e.metricsNames[w]}`]=b[w]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function XW(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function bk(e){return typeof e.iterator=="function"}function KW(e){return typeof e.next=="function"}async function ZW(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Le("Verbose mode is not implemented yet.");v.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=KW(t)?t:await t.iterator(),i=0,l=0;for(;s?l<n.batches:!0;){let c=await o.next();if(a=X(()=>{if(c.value){let{xs:u,ys:d}=Ak(e,c.value),p=u.concat(d),h=X(()=>r(p));if(ne(p),l===0)for(let m=0;m<h.length;++m)a.push(Ce(0));let f=p[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],y=a[m];a[m]=X(()=>ue(a[m],L(f,g))),l>0&&ne(y)}ne(h),i+=f,++l}return a}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){let u=a[c];a[c]=de(a[c],i),ne(u)}return ls(a)}function A1(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function op(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>vl(s,t,n-t)):vl(e,t,n-t)}function x1(e,t){return X(()=>e==null?null:Array.isArray(e)?e.map(n=>x1(n,t)):Gw(e,t.dtype==="int32"?t:me(t,"int32")))}function b1(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function YW(e,t,n,s,r,a,o,i,l,c,u,d,p,h,f){r==null&&(r=32),a==null&&(a=1),u==null&&(u=!0),p==null&&(p=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new q("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),y;g!=null&&(y=gr(0,g)),o==null&&(o=1);let{callbackList:x,history:A}=ak(i,o,a,p,g,h,r,m,d);x.setModel(e),e.history=A,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=p;b<a;++b){await x.onEpochBegin(b);let w={};if(h!=null)throw new Le("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Le("batch shuffling is not implemneted yet");u&&v.shuffle(y);let C=Ct(y),S=b1(g,r);for(let E=0;E<S.length;++E){let R={};if(await x.onBatchBegin(E,R),X(()=>{let F=S[E][0],_=S[E][1],P=vl(C,F,_-F);R.batch=E,R.size=_-F;let T=x1(n,P),O=t(T);for(let G=0;G<s.length;++G){let K=s[G],z=O[G];R[K]=z,yn(z)}if(E===S.length-1&&m){let G=e.testLoop(l,c,r);for(let K=0;K<s.length;++K){let z=s[K],j=G[K];yn(j),w["val_"+z]=j}}}),await x.onBatchEnd(E,R),ek(R),e.stopTraining_)break}C.dispose()}if(await x.onEpochEnd(b,w),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function JW(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,c,u;try{let d=s.batchSize==null?32:s.batchSize;A1(d);let p=!1,h=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,p,d);r=h[0],a=h[1],u=h[2];let f=!1,m;if(s.validationData!=null&&s.validationData.length>0){if(f=!0,s.validationData.length===2)o=s.validationData[0],i=s.validationData[1];else throw s.validationData.length===3?new Le("validationData including sample weights is not supported yet."):new q(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let S=!0,E=await e.standardizeUserData(o,i,null,null,S,d);l=E[0],c=E[1],m=l.concat(c)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){f=!0;let S=Math.floor(r[0].shape[0]*(1-s.validationSplit)),E=r[0].shape[0];l=op(r,S,E),r=op(r,0,S),c=op(a,S,E),a=op(a,0,S),m=l.concat(c)}else s.validationSteps!=null&&(f=!0);let g=r.concat(a).concat(u);e.checkTrainableWeightsConsistency();let y=e.makeTrainFunction(),x=e.getDedupedMetricsNames(),A,b;f?(e.makeTestFunction(),A=e.testFunction,b=x.slice().concat(x.map(S=>"val_"+S))):(A=null,m=[],b=x.slice());let w=rk(s.callbacks,s.yieldEvery);return await YW(e,y,g,x,d,s.epochs,s.verbose,w,A,m,s.shuffle,b,s.initialEpoch,null,null)}finally{e.isTraining=!1,Sl(r,t),Sl(a,n),Sl(l,o),Sl(c,i),u!=null&&ne(u)}}function vk(e){let t=[];e instanceof tt&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(ep(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Sl(e,t){if(e==null)return;let n=[];if(t instanceof tt)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof tt)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function QW(e){return e instanceof tt}function v1(e){return Array.isArray(e)}function wk(e){return!QW(e)&&!v1(e)}function kk(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(v1(e)&&e.length>0)o=!0;else if(wk(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new q(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(wk(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new q(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(v1(e)){if(e=e,e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new q(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=vk(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u>=0&&c!==u)throw new q(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function eV(e,t,n){let s=Bo(e.map(a=>a.shape[0]));s.sort();let r=Bo(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new q(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new q(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!v.arraysEqual(s,r))throw new q(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function tV(e,t,n){let s=[wl,lm,sp];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===sp&&a.shape[a.shape.length-1]===1)throw new q(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),c=i.slice(1);for(let u=0;u<l.length;++u){let d=l[u],p=c[u];if(p!=null&&d!==p)throw new q(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Sk(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new q(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u!==c)throw new q(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function nV(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var sV="layers-model",ra=class extends Or{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new q("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");PW(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=$W(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ta))throw new q("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new q(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(c1(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new q(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>c1(o))}else{let a=c1(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],bl("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=nV(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};bl("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let c="",u,d,p;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===lm?["accuracy","acc"].indexOf(h)!==-1?d=d1:["crossentropy","ce"].indexOf(h)!==-1&&(d=lk):this.lossFunctions[a]===im?["accuracy","acc"].indexOf(h)!==-1?d=uk:["crossentropy","ce"].indexOf(h)!==-1&&(d=ck):["accuracy","acc"].indexOf(h)!==-1?d=p1:["crossentropy","ce"].indexOf(h)!==-1&&(d=h1);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),p=d,u=c+g}else p=DW(h),u=c+dm(h);let f;bl(u,()=>{f=p}),r(a,u,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;A1(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return ls(l)}finally{Sl(a[0],e),Sl(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),ZW(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new q(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new q(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new q("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new kl;if(e instanceof tt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new q(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new q(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=ap(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=yl(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new q(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return X(()=>{let s=this.checkNumSamples(e);if(n)throw new Le("Verbose predictLoop() is not implemented yet.");let r=b1(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)X(()=>{let l=r[o][0],c=r[o][1],u=op(e,l,c),d=[];if(Array.isArray(u))for(let h=0;h<u.length;++h)d.push({key:this.inputs[h],value:u[h]});else d.push({key:this.inputs[0],value:u});let p=new kl(d);return ap(this.outputs,p)}).forEach((l,c)=>a[c].push(l));return ls(a.map(o=>St(o,0)))})}predict(e,t={}){let n=vk(e);Sk(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return A1(s),this.predictLoop(n,s)}finally{Sl(n,e)}}predictOnBatch(e){Sk(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new mr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===im?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=kk(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=kk(t,this.feedOutputNames,r,!1,"target"),eV(e,t,null),tV(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!=0)throw new q(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let c=gk(s,this.outputNames);l=[];for(let u=0;u<c.length;++u)l.push(await yk(i[u],null,c[u]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return X(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new Le("Verbose mode is not implemented yet.");if(r!=null)throw new Le("steps mode in testLoop() is not implemented yet");{let i=b1(a,n),l=Ct(gr(0,a));for(let c=0;c<i.length;++c){let u=i[c][0],d=i[c][1],p=vl(l,u,d-u),h=x1(t,p),f=e(h);if(c===0)for(let m=0;m<f.length;++m)o.push(Ce(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=ue(o[m],L(d-u,g))}}for(let c=0;c<o.length;++c)o[c]=de(o[c],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;Dw(e,s)>1&&(r+=`_${Dw(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let u=[];for(let f=0;f<this.inputs.length;++f)u.push({key:this.inputs[f],value:n[f]});let d=new kl(u),p=ap(this.outputs,d,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],p[f]);r[f]!=null&&(g=GW(g,r[f]));let y=Ut(g);t.push(y),f===0?h=g:h=ue(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],y=this.metricsTensors[f][1];m=Ut(g(s[y],p[y]))}yn(m),a.push(m)}return h=Ut(h),this.calculateLosses().forEach(f=>{h=ue(h,f)}),h},i=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>X(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new kl(a),i=ap(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],u=Ut(c(r[l],i[l]));l===0?n=u:n=ue(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],u=this.metricsTensors[l][1],d=Ut(c(r[u],i[u]));t.push(d)}return t})}async fit(e,t,n={}){return JW(this,e,t,n)}async fitDataset(e,t){return qW(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let c=await l.data();i.push(c[0])}return ne(o),ls(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=cf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-cf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=sa(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>sa(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=sa(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[sa(dm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>sa(dm(e)));{let e={};for(let t in this.metrics)e[t]=sa(dm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=rp(e.optimizer_config),n=xr(t),s;if(typeof e.loss=="string")s=Al(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Al(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=Al(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>Al(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=Al(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=rs.getSaveHandlers(e);if(l.length===0)throw new q(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new q(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new q("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await rs.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:sV,generatedBy:`TensorFlow.js tfjs-layers v${g1}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:c,specs:u}=await rs.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...u),n.data=rs.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let l=!0;pk(this.userDefinedMetadata,this.name,l),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){pk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ra.className="Model";ce.registerClass(ra);var Ik=class extends ra{};Ik.className="Functional";ce.registerClass(Ik);async function rV(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=rp(n),r=xr(s,t);if(e.weightsManifest!=null){let a=await rs.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),ne(a)}return r}async function aV(e,t){if(t==null&&(t={}),typeof e=="string"){let n=rs.getLoadHandlers(e,t);if(n.length===0)n.push(rs.browserHTTPRequest(e,t));else if(n.length>1)throw new q(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return oV(e,void 0,t)}async function oV(e,t,n){if(n==null&&(n={}),e.load==null)throw new q("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=xr(rp(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new q("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:u}=iV(s.weightData,s.weightSpecs);i.loadWeights(c,a),i.optimizer!=null&&u.length>0&&await i.optimizer.setWeights(u),ne(c),ne(u.map(d=>d.tensor))}return i}function iV(e,t){let n=rs.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var w1=class extends ra{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:tm("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new q(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof w1||e instanceof ra,n;if(t){if(n=e,n.outputs.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new q("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new q("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=Qw({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new q(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Jw(this.outputs[0])}this.inboundNodes=[],new rm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:yl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(ft(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ra({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new mr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new mr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new mr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new mr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new q("Legacy serialization format not supported yet.");r=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof w1))throw new Le(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let c=xr(i,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new q("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new q("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},hm=w1;hm.className="Sequential";ce.registerClass(hm);function lV(e){return new ra(e)}function uV(e){return new hm(e)}function cV(e,t){return t==null&&(t={}),aV(e,t)}function Ck(e){return Qw(e)}function dV(e,t){l1.registerCallbackConstructor(e,t)}var cs=class extends ce.Serializable{getConfig(){return{}}},Tk=class extends cs{apply(e,t=1){return MB(e,t)}};Tk.className="elu";ce.registerClass(Tk);var Nk=class extends cs{apply(e){return Sy(e)}};Nk.className="selu";ce.registerClass(Nk);var Ek=class extends cs{apply(e){return Dr(e)}};Ek.className="relu";ce.registerClass(Ek);var Rk=class extends cs{apply(e){return X(()=>Gd(6,Dr(e)))}};Rk.className="relu6";ce.registerClass(Rk);var _k=class extends cs{apply(e){return e}};_k.className="linear";ce.registerClass(_k);var Dk=class extends cs{apply(e){return _n(e)}};Dk.className="sigmoid";ce.registerClass(Dk);var $k=class extends cs{apply(e){return LB(e)}};$k.className="hardSigmoid";ce.registerClass($k);var Pk=class extends cs{apply(e){return Hu(e)}};Pk.className="softplus";ce.registerClass(Pk);var Fk=class extends cs{apply(e){return zB(e)}};Fk.className="softsign";ce.registerClass(Fk);var Ok=class extends cs{apply(e){return Bu(e)}};Ok.className="tanh";ce.registerClass(Ok);var k1=class extends cs{apply(e,t=-1){return Ku(e,t)}};k1.className="softmax";ce.registerClass(k1);var Mk=class extends cs{apply(e,t=-1){return hy(e,t)}};Mk.className="logSoftmax";ce.registerClass(Mk);var zk=class extends cs{apply(e,t=1){return X(()=>L(_n(L(e,t)),e))}};zk.className="swish";ce.registerClass(zk);var Lk=class extends cs{apply(e){return X(()=>L(e,Bu(Hu(e))))}};Lk.className="mish";ce.registerClass(Lk);function Go(e){return e.getClassName()}function S1(e,t={}){return Yd(e,ce.SerializationMap.getMap().classNameMap,t,"activation")}function Ho(e){if(e==null){let t={};return t.className="linear",t.config={},S1(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},S1(t)}else return e instanceof cs?e:S1(e)}function I1(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var Bk=class extends ce.Serializable{},ip=class extends Bk{constructor(e){super();I1(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return X(()=>{let t=Gt([1]);return this.hasL1&&(t=ue(t,we(L(this.l1,rn(e))))),this.hasL2&&(t=ue(t,we(L(this.l2,tp(e))))),H(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};ip.className="L1L2";ce.registerClass(ip);function pV(e){return I1(e),new ip({l1:e!=null?e.l1:null,l2:0})}function hV(e){return I1(e),new ip({l2:e!=null?e.l2:null,l1:0})}var Wk={l1l2:"L1L2"};function bt(e){return By(e)}function Vk(e,t={}){return Yd(e,ce.SerializationMap.getMap().classNameMap,t,"regularizer")}function Pt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Wk?Wk[e]:e,config:{}};return Vk(n)}else return e instanceof Bk?e:Vk(e)}var C1=class extends rt{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ve(e);let n=Dr(e);return this.maxValue!=null&&(n=As(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};C1.className="ReLU";ce.registerClass(C1);var T1=class extends rt{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ve(e);return bf(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};T1.className="LeakyReLU";ce.registerClass(T1);var N1=class extends rt{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=$t(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Pt(e.alphaRegularizer),this.alphaConstraint=un(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new q(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=ft(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Jt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ve(e),Tf(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Lt(this.alphaInitializer),alphaRegularizer:bt(this.alphaRegularizer),alphaConstraint:ln(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};N1.className="PReLU";ce.registerClass(N1);var E1=class extends rt{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Le(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ve(e);return Vd(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};E1.className="ELU";ce.registerClass(E1);var R1=class extends rt{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ve(e);return L(n,me(xs(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};R1.className="ThresholdedReLU";ce.registerClass(R1);var _1=class extends rt{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new k1().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ve(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};_1.className="Softmax";ce.registerClass(_1);function nc(e,t,n){if(typeof e=="number")return yl(e,t);if(e.length!==t)throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!$B(r))throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function br(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function Mr(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+Vo([n-t,0]);else if(s==="same")e=e*t;else throw new q(`Unsupport padding mode: ${s}.`);return e}function D1(e,t){return X(()=>(Ht(t),t==="channelsFirst"?nt(e,[0,2,3,1]):e))}function Uk(e,t){return X(()=>(Ht(t),t==="channelsFirst"?nt(e,[0,2,3,4,1]):e))}function fV(e,t,n,s=1,r="valid",a,o=1){return X(()=>{if(a==null&&(a=fr()),Ht(a),e.shape.length!==3)throw new q(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new q(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new q(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=nt(e,[0,2,1])),r==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=ay(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=yr(i,n)),i})}function Gk(e,t,n,s=[1,1],r="valid",a,o,i=null){return X(()=>{if(a==null&&(a=fr()),Ht(a),e.rank!==3&&e.rank!==4)throw new q(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new q(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=D1(e,a);if(r==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=zo.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=nt(l,[0,3,1,2])),l})}function mV(e,t,n,s=[1,1,1],r="valid",a,o){return X(()=>{if(a==null&&(a=fr()),Ht(a),e.rank!==4&&e.rank!==5)throw new q(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new q(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=Uk(e,a);if(r==="causal")throw new Le("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=ly(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=yr(i,n)),a==="channelsFirst"&&(i=nt(i,[0,4,1,2,3])),i})}var $1=class extends rt{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",$1.verifyArgs(t),this.rank=e,xn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Le(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=nc(t.kernelSize,e,"kernelSize"),this.strides=nc(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Ws(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ht(this.dataFormat),this.activation=Ho(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=$t(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=un(t.biasConstraint),this.biasRegularizer=Pt(t.biasRegularizer),this.activityRegularizer=Pt(t.activityRegularizer),this.dilationRate=nc(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new q(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new q(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new q(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if($r("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Vy(e.kernelSize,"number",1,3))throw new q(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Go(this.activation),useBias:this.useBias,biasInitializer:Lt(this.biasInitializer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),biasConstraint:ln(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},lp=class extends $1{constructor(e,t){super(e,t);this.kernel=null,lp.verifyArgs(t),this.filters=t.filters,xn(this.filters,"filters"),this.kernelInitializer=$t(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=un(t.kernelConstraint),this.kernelRegularizer=Pt(t.kernelRegularizer)}build(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return X(()=>{e=Ve(e);let n,s=this.bias==null?null:this.bias.read(),r=Pw(this.activation.getClassName());if(r!=null&&this.rank===2)n=Gk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=fV(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=Gk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=mV(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Le("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=ft(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=br(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Lt(this.kernelInitializer),kernelRegularizer:bt(this.kernelRegularizer),kernelConstraint:ln(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new q(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},Hk=class extends lp{constructor(e){super(2,e);Hk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Vy(e.kernelSize,"number",1,2))throw new q(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},fm=Hk;fm.className="Conv2D";ce.registerClass(fm);var jk=class extends lp{constructor(e){super(3,e);jk.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new q(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},mm=jk;mm.className="Conv3D";ce.registerClass(mm);var P1=class extends fm{constructor(e){super(e);if(this.inputSpec=[new Jt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ft(e),e.length!==4)throw new q("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{let n=Ve(e);if(n.shape.length!==4)throw new q(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],c=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=Mr(i,d,c,this.padding),f=Mr(l,p,u,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=nt(n,[0,2,3,1]));let g=iy(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=nt(g,[0,3,1,2])),this.bias!=null&&(g=yr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=ft(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Mr(t[s],i,a,this.padding),t[r]=Mr(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};P1.className="Conv2DTranspose";ce.registerClass(P1);var F1=class extends mm{constructor(e){super(e);if(this.inputSpec=[new Jt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=ft(e),e.length!==5)throw new q("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{let n=Ve(e);if(n.shape.length!==5)throw new q(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],c=s[a],u=s[o],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=Mr(l,f,d,this.padding),x=Mr(c,m,p,this.padding),A=Mr(u,g,h,this.padding),b=[r,y,x,A,this.filters];this.dataFormat!=="channelsLast"&&(n=nt(n,[0,2,3,4,1]));let w=Iv(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=nt(w,[0,4,1,2,3])),this.bias!==null&&(w=yr(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=ft(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[s]=Mr(t[s],c,o,this.padding),t[r]=Mr(t[r],u,i,this.padding),t[a]=Mr(t[a],d,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};F1.className="Conv3DTranspose";ce.registerClass(F1);var qk=class extends lp{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new q("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new q("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new q(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=$t(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Pt(t.depthwiseRegularizer),this.depthwiseConstraint=un(t.depthwiseConstraint),this.pointwiseInitializer=$t(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Pt(t.pointwiseRegularizer),this.pointwiseConstraint=un(t.pointwiseConstraint)}build(e){if(e=ft(e),e.length<this.rank+2)throw new q(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Jt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{e=Ve(e);let n;if(this.rank===1)throw new Le("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=nt(e,[0,2,3,1])),n=jv(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=yr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=nt(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Lt(this.depthwiseInitializer),e.pointwiseInitializer=Lt(this.pointwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.pointwiseRegularizer=bt(this.pointwiseRegularizer),e.depthwiseConstraint=ln(this.depthwiseConstraint),e.pointwiseConstraint=ln(this.pointwiseConstraint),e}};qk.className="SeparableConv";var O1=class extends qk{constructor(e){super(2,e)}};O1.className="SeparableConv2D";ce.registerClass(O1);var Xk=class extends lp{constructor(e){super(1,e);Xk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Vy(e.kernelSize,"number",1,1))throw new q(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},M1=Xk;M1.className="Conv1D";ce.registerClass(M1);var z1=class extends rt{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return X(()=>{if(e=Ve(e),this.dataFormat==="channelsLast"){let n=Hf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Hf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Hf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Hf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};z1.className="Cropping2D";ce.registerClass(z1);var L1=class extends rt{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,RB(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return X(()=>{let n=Ve(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=nt(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?Se.resizeNearestNeighbor(n,[r,a]):Se.resizeBilinear(n,[r,a]);return nt(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Se.resizeNearestNeighbor(n,[r,a]):Se.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};L1.className="UpSampling2D";ce.registerClass(L1);function gV(e,t,n=[1,1],s="valid",r,a){return X(()=>{r==null&&(r=fr()),Ht(r);let o=D1(e,r);if(e.rank!==4)throw new q(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new q(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Wd(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=nt(o,[0,3,1,2])),o})}var B1=class extends $1{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=$t(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=un(e.depthwiseConstraint),this.depthwiseRegularizer=Pt(e.depthwiseRegularizer)}build(e){if(e=ft(e),e.length<4)throw new q(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{e=Ve(e);let n=gV(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=yr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=br(t,this.kernelSize[0],this.padding,this.strides[0]),a=br(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Lt(this.depthwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.depthwiseConstraint=ln(this.depthwiseRegularizer),e}};B1.className="DepthwiseConv2D";ce.registerClass(B1);function Kk(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new q("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function Zk(e,t,n,s=!1,r,a,o=!1,i=!1){return X(()=>{let l=t.shape.length;if(l<3)throw new q(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(gr(2,l));if(t=nt(t,c),a!=null)throw new Le("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=me(me(r,"bool"),"float32"),r.rank===l-1&&(r=Zt(r,-1)),r=nt(r,c)),s&&(t=Bs(t,0),r!=null&&(r=Bs(r,0)));let u=[],d,p=n,h=t.shape[0],f=os(t),m;r!=null&&(m=os(r));for(let y=0;y<h;++y){let x=f[y],A=X(()=>e(x,p));if(r==null)d=A[0],p=A[1];else{let b=X(()=>{let w=m[y],C=he(Ls(w),w),S=ue(L(A[0],w),L(p[0],C)),E=p.map((R,F)=>ue(L(A[1][F],w),L(R,C)));return{output:S,newStates:E}});d=b.output,p=b.newStates}i&&u.push(d)}let g;return i&&(g=an(u,1)),[d,g,p]})}var Yk=class extends rt{constructor(e){super(e);let t;if(e.cell==null)throw new q("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Am({cells:e.cell}):t=e.cell,t.stateSize==null)throw new q("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Jt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return gr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){a1(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return X(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Le("Constants support is not implemented in RNN yet.");a1(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Jt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));if(t!=null)throw new Le("Constants support is not implemented in RNN yet.");this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new q(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new Jt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){X(()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Gt([n,s])):this.states_=[Gt([n,this.cell.stateSize])];else if(e==null)ne(this.states_),this.keptStates!=null&&(ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Gt([n,s])):this.states_[0]=Gt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ne(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!v.arraysEqual(r.shape,o))throw new q(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>yn(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=Kk(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Jt({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Ar){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return X(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=Ve(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new q(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=Zk((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=l[0],u=l[1],d=l[2];this.stateful&&this.resetStates(d,s);let p=this.returnSequences?u:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return X(()=>{let t=Gt(e.shape);return t=we(t,[1,2]),t=ep(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Zy(t,[1,n]):t):this.cell.stateSize>1?[Zy(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===Yk.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=xr(s,n);return new e(Object.assign(t,{cell:r}))}},aa=Yk;aa.className="RNN";ce.registerClass(aa);var up=class extends rt{},gm=class extends up{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xn(this.units,"units"),this.activation=Ho(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pt(e.kernelRegularizer),this.recurrentRegularizer=Pt(e.recurrentRegularizer),this.biasRegularizer=Pt(e.biasRegularizer),this.kernelConstraint=un(e.kernelConstraint),this.recurrentConstraint=un(e.recurrentConstraint),this.biasConstraint=un(e.biasConstraint),this.dropout=Ju([1,Vo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ju([1,Vo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ft(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{if(e=e,e.length!==2)throw new q(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=jo({ones:()=>Ls(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=jo({ones:()=>Ls(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=Pr(L(e,a),this.kernel.read()):r=Pr(e,this.kernel.read()),this.bias!=null&&(r=yr(r,this.bias.read())),o!=null&&(n=L(n,o));let i=ue(r,Pr(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Go(this.activation),useBias:this.useBias,kernelInitializer:Lt(this.kernelInitializer),recurrentInitializer:Lt(this.recurrentInitializer),biasInitializer:Lt(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:ln(this.kernelConstraint),recurrentConstraint:ln(this.recurrentConstraint),biasConstraint:ln(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};gm.className="SimpleRNNCell";ce.registerClass(gm);var W1=class extends aa{constructor(e){e.cell=new gm(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};W1.className="SimpleRNN";ce.registerClass(W1);var ym=class extends up{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new q("GRUCell does not support reset_after parameter set to true.");this.units=e.units,xn(this.units,"units"),this.activation=Ho(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ho(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pt(e.kernelRegularizer),this.recurrentRegularizer=Pt(e.recurrentRegularizer),this.biasRegularizer=Pt(e.biasRegularizer),this.kernelConstraint=un(e.kernelConstraint),this.recurrentConstraint=un(e.recurrentConstraint),this.biasConstraint=un(e.biasConstraint),this.dropout=Ju([1,Vo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ju([1,Vo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ft(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{if(e=e,e.length!==2)throw new q(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=jo({ones:()=>Ls(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=jo({ones:()=>Ls(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=L(e,r[0]));let c=Pr(e,this.kernel.read());this.useBias&&(c=yr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,a[0]));let u=this.recurrentKernel.read(),[d,p]=Yt(u,[2*this.units,this.units],u.rank-1),h=Pr(s,d),[f,m,g]=Yt(c,3,c.rank-1),[y,x]=Yt(h,2,h.rank-1);o=this.recurrentActivation.apply(ue(f,y)),i=this.recurrentActivation.apply(ue(m,x));let A=Pr(L(i,s),p);l=this.activation.apply(ue(g,A));let b=ue(L(o,s),L(ue(1,zt(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Go(this.activation),recurrentActivation:Go(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Lt(this.kernelInitializer),recurrentInitializer:Lt(this.recurrentInitializer),biasInitializer:Lt(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:ln(this.kernelConstraint),recurrentConstraint:ln(this.recurrentConstraint),biasConstraint:ln(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};ym.className="GRUCell";ce.registerClass(ym);var V1=class extends aa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ym(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};V1.className="GRU";ce.registerClass(V1);var cp=class extends up{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,xn(this.units,"units"),this.activation=Ho(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ho(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Pt(e.kernelRegularizer),this.recurrentRegularizer=Pt(e.recurrentRegularizer),this.biasRegularizer=Pt(e.biasRegularizer),this.kernelConstraint=un(e.kernelConstraint),this.recurrentConstraint=un(e.recurrentConstraint),this.biasConstraint=un(e.biasConstraint),this.dropout=Ju([1,Vo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ju([1,Vo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=ft(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends tr{apply(o,i){let l=r.apply([a]),c=new qf().apply([a]),u=r.apply([a*2]);return Uw(Uw(l,c),u)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return X(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new q(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=jo({ones:()=>Ls(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=jo({ones:()=>Ls(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,c,u;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let d=Pr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,o[0])),d=ue(d,Pr(s,this.recurrentKernel.read())),this.useBias&&(d=yr(d,this.bias.read()));let[p,h,f,m]=Yt(d,4,d.rank-1);i=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(h),c=ue(L(l,r),L(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=L(u,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Go(this.activation),recurrentActivation:Go(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Lt(this.kernelInitializer),recurrentInitializer:Lt(this.recurrentInitializer),biasInitializer:Lt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:ln(this.kernelConstraint),recurrentConstraint:ln(this.recurrentConstraint),biasConstraint:ln(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};cp.className="LSTMCell";ce.registerClass(cp);var U1=class extends aa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cp(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};U1.className="LSTM";ce.registerClass(U1);var Am=class extends up{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return X(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){a1(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{bl(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(xr(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return o1(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}i1(t)}};Am.className="StackedRNNCells";ce.registerClass(Am);function jo(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):Hw(t(),n),i=()=>np(o,t,s);return!r||r<=1?yn(i().clone()):Array(r).fill(void 0).map(i).map(c=>yn(c.clone()))}var Jk=class extends aa{constructor(e){if(e.unroll)throw new Le("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Le("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Jt({ndim:5})]}call(e,t){return X(()=>{if(this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new q("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return X(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Gt(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){X(()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Gt(r)):this.states_=[Gt(r)];else if(e==null)ne(this.states_),this.keptStates!=null&&(ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Gt(r)):this.states_[0]=Gt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ne(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!v.arraysEqual(i.shape,l))throw new q(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>yn(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],c=e[i?4:3],u=br(l,s[0],r,a[0],o[0]),d=br(c,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}};Jk.className="ConvRNN2D";var xm=class extends cp{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super({...e,units:t});this.filters=t,xn(this.filters,"filters"),this.kernelSize=nc(n,2,"kernelSize"),this.kernelSize.forEach(i=>xn(i,"kernelSize")),this.strides=nc(s||1,2,"strides"),this.strides.forEach(i=>xn(i,"strides")),this.padding=r||"valid",Ws(this.padding),this.dataFormat=a||"channelsLast",Ht(this.dataFormat),this.dilationRate=nc(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>xn(i,"dilationRate"))}build(e){var t;e=ft(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;i=new(t=class extends tr{apply(u,d){let p=l.apply([c]),h=bs([c]),f=l.apply([c*2]);return Ky([p,h,f])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return X(()=>{if(e.length!==3)throw new q(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=jo({ones:()=>Ls(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(W,Q,te)=>!Q||!Q[te]?W:L(Q[te],W),c=l(s,i,0),u=l(s,i,1),d=l(s,i,2),p=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=jo({ones:()=>Ls(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=l(r,h,0),m=l(r,h,1),g=l(r,h,2),y=l(r,h,3),x=3,[A,b,w,C]=Yt(this.kernel.read(),o,x),[S,E,R,F]=this.useBias?Yt(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,A,S,this.padding),u=this.inputConv(u,b,E,this.padding),d=this.inputConv(d,w,R,this.padding),p=this.inputConv(p,C,F,this.padding);let[_,P,T,O]=Yt(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,_),m=this.recurrentConv(m,P),g=this.recurrentConv(g,T),y=this.recurrentConv(y,O);let G=this.recurrentActivation.apply(ue(c,f)),K=this.recurrentActivation.apply(ue(u,m)),z=ue(L(K,a),L(G,this.activation.apply(ue(d,g)))),j=L(this.recurrentActivation.apply(ue(p,y)),this.activation.apply(z));return[j,j,z]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=Fo(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?yr(r,n,this.dataFormat):r}recurrentConv(e,t){return Fo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};xm.className="ConvLSTM2DCell";ce.registerClass(xm);var G1=class extends Jk{constructor(e){let t=new xm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};G1.className="ConvLSTM2D";ce.registerClass(G1);var bm=class extends rt{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return np(()=>Hw(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};bm.className="Dropout";ce.registerClass(bm);var H1=class extends bm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};H1.className="SpatialDropout1D";ce.registerClass(H1);var j1=class extends rt{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,xn(this.units,"units"),this.activation=Ho(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=un(e.kernelConstraint),this.biasConstraint=un(e.biasConstraint),this.kernelRegularizer=Pt(e.kernelRegularizer),this.biasRegularizer=Pt(e.biasRegularizer),this.activityRegularizer=Pt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=ft(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=ft(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e),s=Pw(this.activation.getClassName()),r;return s!=null?r=Pr(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Pr(n,this.kernel.read()),this.bias!=null&&(r=yr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:Go(this.activation),useBias:this.useBias,kernelInitializer:Lt(this.kernelInitializer),biasInitializer:Lt(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:ln(this.kernelConstraint),biasConstraint:ln(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};j1.className="Dense";ce.registerClass(j1);var q1=class extends rt{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ft(e);for(let t of e.slice(1))if(t==null)throw new q(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Wo(e,1)]}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=nt(n,s)}return OB(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};q1.className="Flatten";ce.registerClass(q1);var X1=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.activation=Ho(e.activation)}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);return this.activation.apply(n)})}getConfig(){let e={activation:Go(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};X1.className="Activation";ce.registerClass(X1);var K1=class extends rt{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return X(()=>(e=Ve(e),PB(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};K1.className="RepeatVector";ce.registerClass(K1);var Z1=class extends rt{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new q("Can only specifiy one unknown dimension.");else r*=l}let o=Wo(e);if(a!==null){if(r===0||o%r!=0)throw new q(n);s[a]=o/r}else if(o!==r)throw new q(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return H(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Z1.className="Reshape";ce.registerClass(Z1);var Y1=class extends rt{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=gr(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Jt({ndim:this.dims.length+1})]}computeOutputShape(e){e=ft(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return nt(Ve(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Y1.className="Permute";ce.registerClass(Y1);var J1=class extends rt{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ve(e),s=-1;return ff(ju(n,this.maskValue),s)}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e),s=-1,r=!0,a=ff(ju(n,this.maskValue),s,r);return L(n,me(a,n.dtype))})}};J1.className="Masking";ce.registerClass(J1);var Q1=class extends rt{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Tt(e.inputLength))}this.inputDim=e.inputDim,xn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,xn(this.outputDim,"outputDim"),this.embeddingsInitializer=$t(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Pt(e.embeddingsRegularizer),this.activityRegularizer=Pt(e.activityRegularizer),this.embeddingsConstraint=un(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return X(()=>this.maskZero?(e=Ve(e),ju(e,st(e))):null)}computeOutputShape(e){if(e=ft(e),this.inputLength==null)return[...e,this.outputDim];let t=Tt(this.inputLength);if(t.length!==e.length-1)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);n.dtype!=="int32"&&(n=Gf(n,"int32"));let s=Gw(this.embeddings.read(),H(n,[n.size]));return H(s,ft(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Lt(this.embeddingsInitializer),embeddingsRegularizer:bt(this.embeddingsRegularizer),activityRegularizer:bt(this.activityRegularizer),embeddingsConstraint:ln(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Q1.className="Embedding";ce.registerClass(Q1);var Il=class extends rt{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Le}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new q("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ft(e)]),e=e,e.length<2)throw new q(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Bo(t),t.length>1)throw new q(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&Bo(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return X(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=Vo(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=ep(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let c=i.shape,u=c[0],d=c.slice(1).concat([u]),p=H(i,[u].concat(Wo(c.slice(1))));p=nt(p,[1,0]),p=H(p,d),n.push(p),r=!0}else if(l>1){let c=gr(1,l).concat([0]);n.push(nt(i,c)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,c=i[l-1],u=[c].concat(i.slice(0,i.length-1));a=H(nt(H(a,[-1,c]),[1,0]),u)}else if(o>1){let i=[o-1].concat(gr(0,o-1));a=nt(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=Bo(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return X(()=>{if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an Array");if(!Array.isArray(e))throw new q("`inputs` should be an Array");if(t.length!==e.length)throw new q(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Zt(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=pr(n,t[s]);return n})}},eA=class extends Il{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return t})}};eA.className="Add";ce.registerClass(eA);var tA=class extends Il{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};tA.className="Multiply";ce.registerClass(tA);var nA=class extends Il{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return L(1/e.length,t)})}};nA.className="Average";ce.registerClass(nA);var sA=class extends Il{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Qr(t,e[n]);return t})}};sA.className="Maximum";ce.registerClass(sA);var rA=class extends Il{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Gd(t,e[n]);return t})}};rA.className="Minimum";ce.registerClass(rA);var aA=class extends Il{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new q("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(v.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new q("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return X(()=>Ky(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new q("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new q("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new q(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return X(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(me(Ls(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Zt(t[a],-1)):s.push(t[a]);let r=St(s,this.axis);return ey(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};aA.className="Concatenate";ce.registerClass(aA);function dp(e,t){for(;e<0;)e+=t;return e}function yV(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Le("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Le("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return X(()=>{let o;if(s>r){o=s-r;let l=[];for(let c=0;c<o;++c)l.push(1);t=H(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let c=0;c<o;++c)l.push(1);e=H(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=we(L(e,t),a[0]):i=we(L(nt(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,c=a[1]===t.shape.length-1;i=je(e,t,l,c)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let c=[];for(let u=l;u<l+o;++u)c.push(u);i=Ke(i,c)}return i.shape.length===1&&(i=Zt(i,1)),i})}var oA=class extends Il{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new q(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new q(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>dp(r,e[a].shape.length)):s=[dp(this.axes,t.shape.length),dp(this.axes,n.shape.length)],this.normalize&&(t=am(t,s[0]),n=am(n,s[1])),yV(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[dp(this.axes,e.length),dp(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};oA.className="Dot";ce.registerClass(oA);var iA=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);return np(()=>ue(jf(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};iA.className="GaussianNoise";ce.registerClass(iA);var lA=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ve(e);return this.rate>0&&this.rate<1?np(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return L(n,jf(n.shape,1,r))},()=>n,t.training||!1):n})}};lA.className="GaussianDropout";ce.registerClass(lA);var uA=class extends rt{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ve(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return X(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return np(()=>{let r=Ve(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=dl(qu(n),this.rate);l=Gf(l,"float32");let c=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-c*i*this.rate,d=ue(L(r,l),L(ue(l,-1),i));return ue(L(d,c),u)},()=>Ve(e),t.training||!1)}return e})}};uA.className="AlphaDropout";ce.registerClass(uA);function pp(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=gv(e,t,n,s,r,a);else if(e.rank===3)o=yv(e,t,n,s,r,a);else if(e.rank===4)o=Av(e,t,n,s,r,a);else throw new Le(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function AV(e,t,n,s,r=.001){return X(()=>{let a=If(e,s),o=a.mean,i=a.variance;return[pp(e,o,i,n,t,r),o,i]})}function xV(e,t,n,s,r=.001){return X(()=>{let a=If(e,s),o=a.mean,i=a.variance,l=[];for(let f of gr(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let c=H(o,l),u=H(i,l),d=t==null?null:H(t,l),p=n==null?null:H(n,l);return[pp(e,c,u,p,d,r),o,i]})}function bV(e,t,n,s,r=.001){return v.arraysEqual(s.slice().sort(),gr(0,e.rank-1))?AV(e,t,n,s,r):xV(e,t,n,s,r)}var cA=class extends rt{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=$t(e.betaInitializer||"zeros"),this.gammaInitializer=$t(e.gammaInitializer||"ones"),this.movingMeanInitializer=$t(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=$t(e.movingVarianceInitializer||"ones"),this.betaConstraint=un(e.betaConstraint),this.gammaConstraint=un(e.gammaConstraint),this.betaRegularizer=Pt(e.betaRegularizer),this.gammaRegularizer=Pt(e.gammaRegularizer)}build(e){e=ft(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new q(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Jt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return X(()=>{let n=t.training==null?!1:t.training,s=Ve(e),r=s.shape,a=r.length,o=gr(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=yl(1,a);l[i]=r[i];let c=o.slice();c.sort();let u=!v.arraysEqual(c,gr(0,a).slice(0,a-1)),d=()=>{if(u){let y=H(this.movingMean.read(),l),x=H(this.movingVariance.read(),l),A=this.center?H(this.beta.read(),l):null,b=this.scale?H(this.gamma.read(),l):null;return pp(s,y,x,A,b,this.epsilon)}else return pp(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[p,h,f]=bV(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(y,x,A)=>{X(()=>{let b=1-A,w=y.read(),C=L(he(w,x),b);y.write(he(w,C))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Lt(this.betaInitializer),gammaInitializer:Lt(this.gammaInitializer),movingMeanInitializer:Lt(this.movingMeanInitializer),movingVarianceInitializer:Lt(this.movingVarianceInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer),betaConstraint:ln(this.betaConstraint),gammaConstraint:ln(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};cA.className="BatchNormalization";ce.registerClass(cA);var dA=class extends rt{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=$t(e.betaInitializer||"zeros"),this.gammaInitializer=$t(e.gammaInitializer||"ones"),this.betaRegularizer=Pt(e.betaRegularizer),this.gammaRegularizer=Pt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=ft(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Bo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=Ve(e),s=n.shape,r=s.length;return X(()=>{let a=!0,{mean:o,variance:i}=If(n,this.axis,a),l=yl(1,r);for(let f of this.axis)l[f]=s[f];let c=f=>f!=null&&f.shape.length!==r?H(f,l):f,u=c(this.gamma.read()),d=c(this.beta.read()),p=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(p.push(s[f]),h.push(1)):(p.push(1),h.push(s[f]));return o=Ys(o,p),i=Ys(i,p),u=Ys(u,h),d=Ys(d,h),pp(n,o,i,d,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Lt(this.betaInitializer),gammaInitializer:Lt(this.gammaInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};dA.className="LayerNormalization";ce.registerClass(dA);function vV(e,t,n){return X(()=>{if(e.rank!==4)throw new q(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new q("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=fr()),n!=="channelsLast"&&n!=="channelsFirst")throw new q(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Js(e,s)})}var pA=class extends rt{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?fr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new q(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new q(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new q(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Jt({ndim:4})]}computeOutputShape(e){e=ft(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return X(()=>vV(Ve(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};pA.className="ZeroPadding2D";ce.registerClass(pA);function vm(e,t,n,s,r,a){return X(()=>{Ht(r),zw(a),Ws(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=fr()),a==null&&(a="max"),e=D1(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=Sf(e,t,n,i):o=gf(e,t,n,i),r==="channelsFirst"&&(o=nt(o,[0,3,1,2])),o})}function Qk(e,t,n,s,r,a){return X(()=>{Ht(r),zw(a),Ws(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=fr()),a==null&&(a="max"),e=Uk(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=yy(e,t,n,i):o=sy(e,t,n,i),r==="channelsFirst"&&(o=nt(o,[0,4,1,2,3])),o})}var eS=class extends rt{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new q(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(xn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new q(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Ws(this.padding),this.inputSpec=[new Jt({ndim:3})]}computeOutputShape(e){e=ft(e);let t=br(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return X(()=>{this.invokeCallHook(e,t),e=ep(Ve(e),2);let n=this.poolingFunction(Ve(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ke(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},hA=class extends eS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Ws(s),vm(e,t,n,s,r,"max")}};hA.className="MaxPooling1D";ce.registerClass(hA);var fA=class extends eS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Ws(s),vm(e,t,n,s,r,"avg")}};fA.className="AveragePooling1D";ce.registerClass(fA);var tS=class extends rt{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new q(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];xn(this.poolSize,"poolSize"),xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),Ws(this.padding),this.inputSpec=[new Jt({ndim:4})]}computeOutputShape(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=br(t,this.poolSize[0],this.padding,this.strides[0]),n=br(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return X(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},mA=class extends tS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Ws(s),vm(e,t,n,s,r,"max")}};mA.className="MaxPooling2D";ce.registerClass(mA);var gA=class extends tS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Ws(s),vm(e,t,n,s,r,"avg")}};gA.className="AveragePooling2D";ce.registerClass(gA);var nS=class extends rt{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new q(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];xn(this.poolSize,"poolSize"),xn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),Ws(this.padding),this.inputSpec=[new Jt({ndim:5})]}computeOutputShape(e){e=ft(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=br(t,this.poolSize[0],this.padding,this.strides[0]),n=br(n,this.poolSize[1],this.padding,this.strides[1]),s=br(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return X(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},yA=class extends nS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Ws(s),Qk(e,t,n,s,r,"max")}};yA.className="MaxPooling3D";ce.registerClass(yA);var AA=class extends nS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Ws(s),Qk(e,t,n,s,r,"avg")}};AA.className="AveragePooling3D";ce.registerClass(AA);var sS=class extends rt{constructor(e){super(e);this.inputSpec=[new Jt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Le}},xA=class extends sS{constructor(e){super(e||{})}call(e,t){return X(()=>{let n=Ve(e);return Ut(n,1)})}};xA.className="GlobalAveragePooling1D";ce.registerClass(xA);var bA=class extends sS{constructor(e){super(e||{})}call(e,t){return X(()=>{let n=Ve(e);return An(n,1)})}};bA.className="GlobalMaxPooling1D";ce.registerClass(bA);var rS=class extends rt{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),this.inputSpec=[new Jt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Le}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},vA=class extends rS{call(e,t){return X(()=>{let n=Ve(e);return this.dataFormat==="channelsLast"?Ut(n,[1,2]):Ut(n,[2,3])})}};vA.className="GlobalAveragePooling2D";ce.registerClass(vA);var wA=class extends rS{call(e,t){return X(()=>{let n=Ve(e);return this.dataFormat==="channelsLast"?An(n,[1,2]):An(n,[2,3])})}};wA.className="GlobalMaxPooling2D";ce.registerClass(wA);var aS=class extends rt{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=xr(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},kA=class extends aS{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=ft(e),e.length<3)throw new q(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=ft(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return X(()=>(e=Ve(e),Zk((a,o)=>[Ve(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};kA.className="TimeDistributed";ce.registerClass(kA);function wV(e){xl(EB,"BidirectionalMergeMode",e)}var kV="concat",SA=class extends aS{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xr(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=xr(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?kV:e.mergeMode,wV(this.mergeMode),e.weights)throw new Le("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):ls(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=Kk(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new q("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(u=>new Jt({shape:u.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),o.push(...c)}if(s!=null)throw new Le("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof Ar;for(let l of a)if(l instanceof Ar!==i)throw new q("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return X(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Bs(r,1));let o;return this.mergeMode==="concat"?o=Ky([s,r]):this.mergeMode==="sum"?o=ue(s,r):this.mergeMode==="ave"?o=L(.5,ue(s,r)):this.mergeMode==="mul"?o=L(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){bl(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),bl(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=xr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Le("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};SA.className="Bidirectional";ce.registerClass(SA);function SV(e){return new Qu(e)}function IV(e){return new E1(e)}function CV(e){return new C1(e)}function TV(e){return new T1(e)}function NV(e){return new N1(e)}function EV(e){return new _1(e)}function RV(e){return new R1(e)}function _V(e){return new M1(e)}function DV(e){return new fm(e)}function $V(e){return new P1(e)}function PV(e){return new mm(e)}function FV(e){return new F1(e)}function OV(e){return new O1(e)}function MV(e){return new z1(e)}function zV(e){return new L1(e)}function LV(e){return new B1(e)}function BV(e){return new X1(e)}function WV(e){return new j1(e)}function VV(e){return new bm(e)}function UV(e){return new H1(e)}function GV(e){return new q1(e)}function HV(e){return new K1(e)}function jV(e){return new Z1(e)}function qV(e){return new Y1(e)}function XV(e){return new Q1(e)}function KV(e){return new eA(e)}function ZV(e){return new nA(e)}function YV(e){return new aA(e)}function JV(e){return new sA(e)}function QV(e){return new rA(e)}function eU(e){return new tA(e)}function tU(e){return new oA(e)}function nU(e){return new cA(e)}function sU(e){return new dA(e)}function rU(e){return new pA(e)}function IA(e){return new fA(e)}function aU(e){return IA(e)}function oU(e){return IA(e)}function CA(e){return new gA(e)}function iU(e){return CA(e)}function lU(e){return CA(e)}function TA(e){return new AA(e)}function uU(e){return TA(e)}function cU(e){return TA(e)}function dU(e){return new xA(e)}function pU(e){return new vA(e)}function oS(e){return new bA(e)}function iS(e){return new wA(e)}function lS(e){return new hA(e)}function uS(e){return new mA(e)}function hU(e){return new yA(e)}function fU(e){return new V1(e)}function mU(e){return new ym(e)}function gU(e){return new U1(e)}function yU(e){return new cp(e)}function AU(e){return new W1(e)}function xU(e){return new gm(e)}function bU(e){return new G1(e)}function vU(e){return new xm(e)}function wU(e){return new aa(e)}function kU(e){return new Am(e)}function SU(e){return new SA(e)}function IU(e){return new kA(e)}var CU=oS,TU=iS,NU=lS,EU=uS;function RU(e){return new iA(e)}function _U(e){return new lA(e)}function DU(e){return new uA(e)}function $U(e){return new J1(e)}var cS={};Me(cS,{MAPE:()=>GU,MSE:()=>qU,binaryAccuracy:()=>PU,binaryCrossentropy:()=>FU,categoricalAccuracy:()=>MU,categoricalCrossentropy:()=>zU,cosineProximity:()=>WU,mape:()=>HU,meanAbsoluteError:()=>VU,meanAbsolutePercentageError:()=>UU,meanSquaredError:()=>jU,mse:()=>XU,precision:()=>LU,recall:()=>BU,sparseCategoricalAccuracy:()=>OU});function PU(e,t){return d1(e,t)}function FU(e,t){return lk(e,t)}function OU(e,t){return uk(e,t)}function MU(e,t){return p1(e,t)}function zU(e,t){return h1(e,t)}function LU(e,t){return ik(e,t)}function BU(e,t){return SW(e,t)}function WU(e,t){return u1(e,t)}function VU(e,t){return om(e,t)}function UU(e,t){return tc(e,t)}function GU(e,t){return tc(e,t)}function HU(e,t){return tc(e,t)}function jU(e,t){return wl(e,t)}function qU(e,t){return wl(e,t)}function XU(e,t){return wl(e,t)}var dS={};Me(dS,{modelFromJSON:()=>rV});var pS={};Me(pS,{l1:()=>ZU,l1l2:()=>KU,l2:()=>YU});function KU(e){return new ip(e)}function ZU(e){return pV(e)}function YU(e){return hV(e)}var hS=class extends ec{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof ra))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function wm(e,t){return e<t}function fS(e,t){return e>t}var mS=class extends hS{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Le("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=wm:this.mode==="max"?this.monitorFunc=fS:this.monitor.indexOf("acc")!==-1?this.monitorFunc=fS:this.monitorFunc=wm,this.monitorFunc===wm&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===wm?1/0:-1/0}async onEpochEnd(e,t){await Uo(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function JU(e){return new mS(e)}var QU={earlyStopping:JU},eG=Y();eG.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var vr=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(vr||{}),gS;(e=>{let t;(n=>{n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(gS||(gS={}));var NA={};function tG(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};NA[e]=n}function yS(e){return NA[e]}function nG(e){delete NA[e]}function k(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return Un(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(p=>Un(p,n,s,r));let c=Un(t.inputNames.slice(i)[0],n,s,r),u=c.dataSync();return a.type==="number"?u[0]:v.toNestedArray(c.shape,u)}let o=t.attrParams[e];return o&&o.value}function Un(e,t,n,s){let[r,a]=vs(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[km(r,i)]);return o!==void 0?t[km(r,o)][a]:void 0}function sG(e,t,n){return t[km(e,n.currentContextId)]}function zr(e,t){let[n,s,r]=vs(e);return[km(n,t&&t.currentContextId),s,r]}function km(e,t){return t?`${e}-${t}`:e}function vs(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function Sm(e,t,n){let s=k("pad",e,t,n);if(s==="explicit"){s=k("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function oa(e){return e.kept?e:Bn(e)}var AS={};Me(AS,{json:()=>rG});var rG=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],xS={};Me(xS,{json:()=>aG});var aG=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bS={};Me(bS,{json:()=>oG});var oG=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],vS={};Me(vS,{json:()=>iG});var iG=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],wS={};Me(wS,{json:()=>lG});var lG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],kS={};Me(kS,{json:()=>uG});var uG=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],SS={};Me(SS,{json:()=>cG});var cG=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],IS={};Me(IS,{json:()=>dG});var dG=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],CS={};Me(CS,{json:()=>pG});var pG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],TS={};Me(TS,{json:()=>hG});var hG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],NS={};Me(NS,{json:()=>fG});var fG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ES={};Me(ES,{json:()=>mG});var mG=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],RS={};Me(RS,{json:()=>gG});var gG=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],_S={};Me(_S,{json:()=>yG});var yG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],DS={};Me(DS,{json:()=>AG});var AG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],$S={};Me($S,{json:()=>xG});var xG=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],PS={};Me(PS,{json:()=>bG});var bG=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],FS={};Me(FS,{json:()=>vG});var vG=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],OS={};Me(OS,{json:()=>wG});var wG=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],MS=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[AS,xS,bS,vS,wS,kS,SS,IS,CS,TS,NS,ES,RS,_S,DS,$S,PS,FS,OS],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],c={},u={};t!=null&&(c=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let d=Object.keys(o);d.forEach(f=>{let m=o[f];m.inputNames.forEach((g,y)=>{let[x,,A]=zr(g),b=o[x];if(b.outputs!=null){let w=b.outputs.indexOf(A);if(w!==-1){let C=`${x}:${w}`;m.inputNames[y]=C}}m.inputs.push(b),b.children.push(m)})}),Object.keys(u).length===0?d.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(u).forEach(f=>{let[m]=zr(f),g=o[m];g!=null&&(g.signatureKey=u[f],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(f=>{let[m]=zr(f),g=o[m];g&&(g.signatureKey=c[f],i.push(g))}):i=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=yS(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.substr(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=EA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=EA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=MA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=MA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=_A(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=_A(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=OA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=OA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=RA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=RA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=LA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=LA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=FA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=FA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=zA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=zA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=$A(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=$A(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=PA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=PA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=LS(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=LS(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&s.push(u[d.name]),u),{}));let a=[],o=[];e.signature.inputArg.forEach(u=>{let[d]=zr(u.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:DA(u.type),type:"dtype"}},children:[]};p.signatureKey=u.name,a.push(p),r[d]=p}),Object.keys(r).forEach(u=>{let d=r[u];d.inputNames.forEach((p,h)=>{let[f,,m]=zr(p),g=r[f];if(g.outputs!=null){let y=g.outputs.indexOf(m);if(y!==-1){let x=`${f}:${y}`;d.inputNames[h]=x}}d.inputs.push(g),g.children.push(d)})});let l=e.ret;e.signature.outputArg.forEach(u=>{let[d,p]=zr(l[u.name]),h=r[d];h!=null&&(h.defaultOutput=p,o.push(h))});let c=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function kG(e){let t=Y().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function zS(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):kG(e);return t?n:n.toLowerCase()}function EA(e,t,n,s=!1){let r=e[t];return r!=null?zS(r.s,s):n}function RA(e,t,n){let s=e[t];return s?s.b:n}function _A(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function DA(e){switch(typeof e=="string"&&(e=vr[e]),e){case vr.DT_FLOAT:case vr.DT_HALF:return"float32";case vr.DT_INT32:case vr.DT_INT64:case vr.DT_INT8:case vr.DT_UINT8:return"int32";case vr.DT_BOOL:return"bool";case vr.DT_DOUBLE:return"float32";case vr.DT_STRING:return"string";default:return null}}function LS(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function $A(e,t,n){let s=e[t];return s&&s.type?DA(s.type):n}function PA(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>DA(r)):n}function BS(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function FA(e,t,n){let s=e[t];return s&&s.shape?BS(s.shape):n}function OA(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function MA(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>zS(a,s)):n}function zA(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>BS(r)):n}function LA(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var SG=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return Un(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Un(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return _A(this.node.rawAttrs,e,t);if(n.s!=null)return EA(this.node.rawAttrs,e,t);if(n.b!=null)return RA(this.node.rawAttrs,e,t);if(n.shape!=null)return FA(this.node.rawAttrs,e,t);if(n.type!=null)return $A(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return OA(this.node.rawAttrs,e,t);if(n.list.s!=null)return MA(this.node.rawAttrs,e,t);if(n.list.shape!=null)return zA(this.node.rawAttrs,e,t);if(n.list.b!=null)return LA(this.node.rawAttrs,e,t);if(n.list.type!=null)return PA(this.node.rawAttrs,e,t)}return t}},IG=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ue(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[hf(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[Hd(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[L(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[de(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[Ev(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[pf(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[he(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[Gd(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[Qr(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[Mo(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[Ey(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},CG=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[rn(k("x",e,t,n))];case"Acos":return[av(k("x",e,t,n))];case"Acosh":return[ov(k("x",e,t,n))];case"Asin":return[lv(k("x",e,t,n))];case"Asinh":return[uv(k("x",e,t,n))];case"Atan":return[cv(k("x",e,t,n))];case"Atan2":return[dv(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[pv(k("x",e,t,n))];case"Ceil":return[bv(k("x",e,t,n))];case"Complex":return[Ro(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[Af(k("x",e,t,n))];case"Cosh":return[uy(k("x",e,t,n))];case"Elu":return[Vd(k("x",e,t,n))];case"Erf":return[_v(k("x",e,t,n))];case"Exp":return[Ms(k("x",e,t,n))];case"Expm1":return[Dv(k("x",e,t,n))];case"Floor":return[Ud(k("x",e,t,n))];case"Log":return[zs(k("x",e,t,n))];case"Log1p":return[vf(k("x",e,t,n))];case"Imag":return[xf(k("x",e,t,n))];case"Neg":return[zt(k("x",e,t,n))];case"Reciprocal":return[Hv(k("x",e,t,n))];case"Real":return[jd(k("x",e,t,n))];case"Relu":return[Dr(k("x",e,t,n))];case"Round":return[wy(k("x",e,t,n))];case"Selu":return[Sy(k("x",e,t,n))];case"Sigmoid":return[_n(k("x",e,t,n))];case"Sin":return[Iy(k("x",e,t,n))];case"Sign":return[Xv(k("x",e,t,n))];case"Sinh":return[Cy(k("x",e,t,n))];case"Softplus":return[Hu(k("x",e,t,n))];case"Sqrt":return[Dn(k("x",e,t,n))];case"Square":return[xt(k("x",e,t,n))];case"Tanh":return[Bu(k("x",e,t,n))];case"Tan":return[Zv(k("x",e,t,n))];case"ClipByValue":return[As(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[vy(k("x",e,t,n))];case"Rsqrt":return[ky(Un(e.inputNames[0],t,n))];case"Prod":return[Ay(k("x",e,t,n),k("axes",e,t,n))];case"LeakyRelu":return[bf(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[Tf(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[$v(Un(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function nr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];v.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function WS(e){return!(typeof e=="number"||e.some(t=>t<0))}function hp(e,t,n){let s=BA(e,n),r=!WS(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=BA(a.shape,s)}),!WS(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function BA(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var TG=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ce(0),yn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),nr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,yn(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return pt([],[0].concat(this.elementShape));let n=this.readMany(e);return nr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),an(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return pt([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return nr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),St(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,os(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];X(()=>{t=H(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],c=[0,l,0],u=[1,e[i],r];a[i]=H(Fe(t,c,u),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},fp=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);nr(t,r.shape,"TensorList shape mismatch: "),yn(r)}),this.idTensor=Ce(0),this.maxNumElements=s,yn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new fp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);nr(e,this.elementShape,"TensorList shape mismatch: ");let s=hp(this.elementShape,this.tensors,e);return X(()=>{let r=this.tensors.map(a=>H(a,s));return an(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=hp(this.elementShape,this.tensors,e),s=this.tensors.pop();return nr(s.shape,e,"TensorList shape mismatch: "),H(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(nr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");yn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);nr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=hp(this.elementShape,this.tensors,t);return H(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);nr(this.elementShape,t.shape,"TensorList shape mismatch: "),yn(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);nr(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=hp(this.elementShape,this.tensors,n);return e.length===0?pt([],[0].concat(s)):X(()=>{let r=e.map(a=>H(this.tensors[a],s));return an(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);nr(this.elementShape,t,"TensorList shape mismatch: ");let n=hp(this.elementShape,this.tensors,t);return this.size()===0?pt([],[0].concat(n)):X(()=>{let s=this.tensors.map(r=>H(r,n));return St(s,0)})}};function NG(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);nr(r,t,"TensorList shape mismatch: ");let a=os(e);return new fp(a,t,s)}function EG(e,t,n){return new fp([],e,t,n)}function RG(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new fp([],n,e.dtype,s),o=os(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function _G(e,t,n){let s=0,r=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=BA(a,n),i=s===0?0:e.size/s,l=X(()=>{let u=[];e=H(e,[1,s,i]);for(let d=0;d<t.length;++d){let p=d===0?0:r[d-1],h=[0,p,0],f=[1,t[d],i];u[d]=H(Fe(e,h,f),o)}return e.dispose(),u}),c=new fp([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}var DG=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=k("thenBranch",e,t,n),r=k("elseBranch",e,t,n),a=k("cond",e,t,n),o=k("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=k("body",e,t,n),r=k("cond",e,t,n),a=k("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(u=>u.id),l=await o[0].data();o.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let c=a;for(;l[0];){let u=c;c=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let d=c.map(h=>h.id);u.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});let p=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await p[0].data(),p.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{let s=k("pred",e,t,n);return[oa(s)]}case"Switch":{let s=k("pred",e,t,n),r=k("data",e,t,n);return r.kept||(r=oa(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>Un(r,t,n)!==void 0);if(s){let r=Un(s,t,n);return[oa(r)]}return}case"Enter":{let s=k("frameName",e,t,n),r=k("tensor",e,t,n);return n.enterFrame(s),[oa(r)]}case"Exit":{let s=k("tensor",e,t,n);return n.exitFrame(),[oa(s)]}case"NextIteration":{let s=k("tensor",e,t,n);return n.nextIteration(),[oa(s)]}case"TensorArrayV3":{let s=k("size",e,t,n),r=k("dtype",e,t,n),a=k("elementShape",e,t,n),o=k("dynamicSize",e,t,n),i=k("clearAfterRead",e,t,n),l=k("identicalElementShapes",e,t,n),c=k("name",e,t,n),u=new TG(c,r,s,a,l,o,i);return n.addTensorArray(u),[u.idTensor,Ce(1)]}case"TensorArrayWriteV3":{let s=k("tensorArrayId",e,t,n),r=k("index",e,t,n),a=k("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=k("tensorArrayId",e,t,n),r=k("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=k("tensorArrayId",e,t,n),r=k("indices",e,t,n),a=k("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=k("tensorArrayId",e,t,n),r=k("indices",e,t,n),a=k("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=k("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=k("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=k("tensorArrayId",e,t,n),r=k("tensor",e,t,n),a=k("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=k("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ce(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=k("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=k("tensorListId",e,t,n),r=k("index",e,t,n),a=k("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=k("tensorListId",e,t,n),r=k("index",e,t,n),a=k("elementShape",e,t,n),o=k("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=k("indices",e,t,n),r=k("tensor",e,t,n),a=k("elementShape",e,t,n),o=k("numElements",e,t,n),i=RG(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=k("elementShape",e,t,n),r=k("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=k(a,e,t,n),i=EG(s,r,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let s=k("tensorListId",e,t,n),r=k("indices",e,t,n),a=k("elementShape",e,t,n),o=k("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=k("tensorListId",e,t,n),r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),o=k("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=k("tensor",e,t,n),r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),o=NG(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let s=k("tensorListId",e,t,n),r=n.getTensorList(s.id),a=k("dtype",e,t,n),o=k("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=k("tensorListId",e,t,n),r=k("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=k("tensorListId",e,t,n),r=k("elementShape",e,t,n),a=k("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=k("tensor",e,t,n),r=k("elementShape",e,t,n),a=k("lengths",e,t,n),o=_G(s,a,r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function VS(e,t,n){let[s,r]=k("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",c=k("numArgs",e,t,n);if(a){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=k("strides",e,t,n),d=Sm(e,t,n),p=k("dataFormat",e,t,n).toUpperCase(),h=k("dilations",e,t,n),[f,m]=k("args",e,t,n);o&&(m=f,f=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:u,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var $G=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=k("stride",e,t,n),r=k("pad",e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[ay(k("x",e,t,n),k("filter",e,t,n),s,r,a,o)]}case"Conv2D":{let s=k("strides",e,t,n),r=Sm(e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[Fo(k("x",e,t,n),k("filter",e,t,n),[s[1],s[2]],r,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=VS(e,t,n);return[zo.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=VS(e,t,n);return[zo.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=k("outputShape",e,t,n),r=k("strides",e,t,n),a=Sm(e,t,n);return[iy(k("x",e,t,n),k("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=k("strides",e,t,n),r=Sm(e,t,n),a=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[Wd(k("input",e,t,n),k("filter",e,t,n),[s[1],s[2]],r,o,[a[1],a[2]])]}case"Conv3D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[ly(k("x",e,t,n),k("filter",e,t,n),[s[1],s[2],s[3]],r,a,[o[1],o[2],o[3]])]}case"AvgPool":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[gf(k("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[Sf(k("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:i,indexes:l}=Wv(k("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,o);return[i,l]}case"AvgPool3D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[sy(k("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[yy(k("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=k("strides",e,t,n),r=k("pad",e,t,n),a=k("dilations",e,t,n),o=s[1],i=s[2],l=a[1],c=a[2];return[Nv(k("x",e,t,n),k("filter",e,t,n),[o,i],r,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},PG=(e,t,n)=>{switch(e.op){case"Fill":{let s=k("shape",e,t,n),r=k("dtype",e,t,n),a=k("value",e,t,n);return[Uu(s,a,r)]}case"LinSpace":{let s=k("start",e,t,n),r=k("stop",e,t,n),a=k("num",e,t,n);return[Pv(s,r,a)]}case"Multinomial":{let s=k("logits",e,t,n),r=k("numSamples",e,t,n),a=k("seed",e,t,n);return[Uv(s,r,a)]}case"OneHot":{let s=k("indices",e,t,n),r=k("depth",e,t,n),a=k("onValue",e,t,n),o=k("offValue",e,t,n);return[zd(s,r,a,o)]}case"Ones":return[bs(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[Ls(k("x",e,t,n))];case"RandomUniform":return[qu(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"Range":{let s=k("start",e,t,n),r=k("stop",e,t,n),a=k("step",e,t,n);return[Xu(s,r,a,k("dtype",e,t,n))]}case"TruncatedNormal":{let s=k("shape",e,t,n),r=k("mean",e,t,n),a=k("stdDev",e,t,n),o=k("seed",e,t,n);return[_f(s,r,a,k("dtype",e,t,n),o)]}case"Zeros":return[Gt(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[st(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function WA(e,t,n){let s=k("boxes",e,t,n),r=k("scores",e,t,n),a=k("maxOutputSize",e,t,n),o=k("iouThreshold",e,t,n),i=k("scoreThreshold",e,t,n),l=k("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var FG=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=WA(e,t,n),c=await Se.nonMaxSuppressionWithScoreAsync(s,r,a,o,i,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=WA(e,t,n),l=k("padToMaxOutputSize",e,t,n),c=await Se.nonMaxSuppressionPaddedAsync(s,r,a,o,i,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=WA(e,t,n);return[await Se.nonMaxSuppressionAsync(s,r,a,o,i)]}case"Where":{let s=me(k("condition",e,t,n),"bool"),r=[await _y(s)];return s.dispose(),r}case"ListDiff":return qv(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},OG=(e,t,n)=>{switch(e.op){case"TopKV2":{let s=k("x",e,t,n),r=k("k",e,t,n),a=k("sorted",e,t,n),o=Yv(s,r,a);return[o.values,o.indices]}case"Unique":{let s=k("x",e,t,n),r=Ry(s);return[r.values,r.indices]}case"UniqueV2":{let s=k("x",e,t,n),r=k("axis",e,t,n),a=Ry(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},MG=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=k("default",e,t,n);return[Un(e.name,t,n)||s];case"Placeholder":return[Un(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=k("x",e,t,n);return[oa(c)]}case"IdentityN":return k("x",e,t,n).map(c=>oa(c));case"Snapshot":let r=k("x",e,t,n);return[oa(r)];case"Shape":return[Ct(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(c=>Ct(c.shape));case"Size":return[Ce(k("x",e,t,n).size,"int32")];case"Rank":return[Ce(k("x",e,t,n).rank,"int32")];case"NoOp":return[Ce(1)];case"Print":let a=k("x",e,t,n),o=k("data",e,t,n),i=k("message",e,t,n),l=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},zG=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ce(0),this.tensorMap=new Map,yn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ce(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),X(()=>{let s=os(t),r=n.length,a=s.length;v.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];yn(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return X(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return an(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},LG=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=k("keyDType",e,t,n),a=k("valueDType",e,t,n),o=new zG(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=k("tableHandle",e,t,n,s),a=k("keys",e,t,n),o=k("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=k("tableHandle",e,t,n,s),a=k("keys",e,t,n),o=k("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=k("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},BG=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=k("images",e,t,n),r=k("size",e,t,n),a=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[Se.resizeBilinear(s,[r[0],r[1]],a,o)]}case"ResizeNearestNeighbor":{let s=k("images",e,t,n),r=k("size",e,t,n),a=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[Se.resizeNearestNeighbor(s,[r[0],r[1]],a,o)]}case"CropAndResize":{let s=k("image",e,t,n),r=k("boxes",e,t,n),a=k("boxInd",e,t,n),o=k("cropSize",e,t,n),i=k("method",e,t,n),l=k("extrapolationValue",e,t,n);return[Se.cropAndResize(s,r,a,o,i,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},WG=(e,t,n)=>{switch(e.op){case"Equal":return[Os(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[ju(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[xs(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[dl(k("a",e,t,n),k("b",e,t,n))];case"Less":return[py(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[pl(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[pr(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[kf(k("a",e,t,n))];case"LogicalOr":return[gy(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[Vn(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},VG=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[je(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[Rv(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[nt(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[s,r]=k("fusedOps",e,t,n),a=s==="biasadd",o=r==="prelu",i=k("numArgs",e,t,n),l=k("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,u]=k("args",e,t,n);return[zo.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},UG=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Wu(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[Wu(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[Fv(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[Ku(k("x",e,t,n))];case"LogSoftmax":return[hy(k("x",e,t,n))];case"SparseToDense":return[$y(k("sparseIndices",e,t,n),k("outputShape",e,t,n),k("sparseValues",e,t,n),k("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},GG=(e,t,n)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[An(k("x",e,t,n),o,i)]}case"Mean":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Ut(k("x",e,t,n),o,i)]}case"Min":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Oo(k("x",e,t,n),o,i)]}case"Sum":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[we(k("x",e,t,n),o,i)]}case"All":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[ey(k("x",e,t,n),o,i)]}case"Any":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[ff(k("x",e,t,n),o,i)]}case"ArgMax":{let o=k("axis",e,t,n);return[Fs(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[iv(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Ay(k("x",e,t,n),o,i)]}case"Cumsum":{let o=k("axis",e,t,n),i=k("exclusive",e,t,n),l=k("reverse",e,t,n);return[cy(k("x",e,t,n),o,i,l)]}case"Bincount":let s=k("x",e,t,n),r=k("weights",e,t,n),a=k("size",e,t,n);return[ry(s,r,a)];case"DenseBincount":{let o=k("x",e,t,n),i=k("weights",e,t,n),l=k("size",e,t,n),c=k("binaryOutput",e,t,n);return[Cv(o,i,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},HG=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=k("n",e,t,n),r=k("axis",e,t,n),a=k("tensors",e,t,n);return a=a.slice(0,s),[St(a,r)]}case"Gather":{let s=k("x",e,t,n),r=k("indices",e,t,n);return[Gu(s,me(r,"int32"),0)]}case"GatherV2":{let s=k("axis",e,t,n),r=k("batchDims",e,t,n),a=k("x",e,t,n),o=k("indices",e,t,n);return[Gu(a,me(o,"int32"),s,r)]}case"Reverse":{let s=k("dims",e,t,n),r=[];for(let o=0;o<s.length;o++)s[o]&&r.push(o);let a=k("x",e,t,n);return[Bs(a,r)]}case"ReverseV2":{let s=k("axis",e,t,n),r=k("x",e,t,n);return[Bs(r,s)]}case"Slice":{let s=k("begin",e,t,n),r=k("size",e,t,n);return[Fe(k("x",e,t,n),s,r)]}case"StridedSlice":{let s=k("begin",e,t,n),r=k("end",e,t,n),a=k("strides",e,t,n),o=k("beginMask",e,t,n),i=k("endMask",e,t,n),l=k("ellipsisMask",e,t,n),c=k("newAxisMask",e,t,n),u=k("shrinkAxisMask",e,t,n),d=k("x",e,t,n);return[Kv(d,s,r,a,o,i,l,c,u)]}case"Pack":return X(()=>{let s=k("axis",e,t,n),r=k("tensors",e,t,n),a=r[0].shape,o=Ke(r[0]).shape,i=r.map(l=>{let c=v.arraysEqual(l.shape,a);if(!c&&!v.arraysEqual(Ke(l).shape,o))throw new Error("the input tensors shape does not match");return c?l:H(l,a)});return[an(i,s)]});case"Unpack":{let s=k("axis",e,t,n),r=k("tensor",e,t,n);return os(r,s)}case"Tile":{let s=k("reps",e,t,n);return[Ys(k("x",e,t,n),s)]}case"Split":case"SplitV":{let s=k("axis",e,t,n),r=k("numOrSizeSplits",e,t,n),a=k("x",e,t,n);return Yt(a,r,s)}case"ScatterNd":{let s=k("indices",e,t,n),r=k("values",e,t,n),a=k("shape",e,t,n);return[nw(s,r,a)]}case"GatherNd":{let s=k("x",e,t,n),r=k("indices",e,t,n);return[sw(s,r)]}case"SparseToDense":{let s=k("sparseIndices",e,t,n),r=k("outputShape",e,t,n),a=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[$y(s,a,r,a.dtype===o.dtype?o:me(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},jG=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:o}=Kd.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[s,r,a,o]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=Kd.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[Kd.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[Kd.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},qG=(e,t,n)=>{switch(e.op){case"FFT":return[Ef(k("x",e,t,n))];case"IFFT":return[qd(k("x",e,t,n))];case"RFFT":return[Rf(k("x",e,t,n))];case"IRFFT":return[Ny(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},XG=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=Of.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=Of.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[Of.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},KG=(e,t,n)=>{switch(e.op){case"Cast":return[me(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let s=k("axis",e,t,n);return[Zt(k("x",e,t,n),s)]}case"Squeeze":{let s=k("axis",e,t,n);return[Ke(k("x",e,t,n),s)]}case"Reshape":return[H(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[Vv(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[Js(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let s=k("blockShape",e,t,n),r=k("paddings",e,t,n);return[Cf(k("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=k("blockShape",e,t,n),r=k("crops",e,t,n);return[yf(k("x",e,t,n),s,r)]}case"DepthToSpace":{let s=k("blockSize",e,t,n),r=k("dataFormat",e,t,n).toUpperCase();return[Tv(k("x",e,t,n),s,r)]}case"BroadcastTo":return[Bd(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[xv(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function US(e,t,n,s){let r=((a,o,i)=>{switch(a.category){case"arithmetic":return X(()=>IG(a,o,i));case"basic_math":return X(()=>CG(a,o,i));case"control":return DG(a,o,i);case"convolution":return X(()=>$G(a,o,i));case"creation":return X(()=>PG(a,o,i));case"dynamic":return FG(a,o,i);case"evaluation":return X(()=>OG(a,o,i));case"image":return X(()=>BG(a,o,i));case"graph":return X(()=>MG(a,o,i));case"logical":return X(()=>WG(a,o,i));case"matrices":return X(()=>VG(a,o,i));case"normalization":return X(()=>UG(a,o,i));case"reduction":return X(()=>GG(a,o,i));case"slice_join":return X(()=>HG(a,o,i));case"sparse":return X(()=>jG(a,o,i));case"spectral":return X(()=>qG(a,o,i));case"string":return X(()=>XG(a,o,i));case"transformation":return X(()=>KG(a,o,i));case"hash_table":return LG(a,o,i,s);case"custom":let l=yS(a.op);if(l&&l.customExecutor)return l.customExecutor(new SG(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var GS=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function HS(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,c=Object.keys(e).map(p=>vs(p)[0]),u=[];s!=null&&(u=s.map(p=>vs(p.name)[0]));let d=[...t];for(;d.length>0;){let p=d.pop();if((jS(p)||eH(p)||tH(p))&&o==null&&(o=p,i=o.children.map(h=>h.name).filter(h=>r.has(h))),r.add(p.name),n[p.name]==null&&c.indexOf(p.name)===-1&&u.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),d.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function ZG(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(u=>vs(u)[0]).map(u=>e.nodes[u]),i=e.initNodes;o.forEach(u=>{s.has(u.name)&&a.push(u)}),e.weights.forEach(u=>{s.has(u.name)&&a.push(u)}),i!=null&&i.forEach(u=>{s.has(u.name)&&a.push(u)});let l=new Set,c=[];for(;a.length>0;){let u=a.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(d=>{!l.has(d.name)&&s.has(d.name)&&d.inputs.every(p=>l.has(p.name))&&a.push(d)})}return c}var YG=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],JG=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],QG=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function jS(e){return YG.indexOf(e.op)>=0}function eH(e){return JG.indexOf(e.op)>=0}function tH(e){return QG.indexOf(e.op)>=0}var VA=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new VA(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=HS(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return ZG(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(u=>this.graph.nodes[vs(u)[0]]),r=t.map(u=>vs(u)[0]),a=r.map(u=>this.graph.nodes[u]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},c={};return X(()=>{let u=new GS(this.weightMap,l,c,this.functionExecutorMap),d={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=vs(f),y=[];y[g]=e[f],d[m]=y});let p=this.getFrozenTensorIds(d),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!d[m.name]){let g=US(m,d,u,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,u,p,r,h)}}return this.parent==null&&u.dispose(p),t.map(f=>Un(f,d,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=sG(i.name,n,s);l!=null&&l.forEach(c=>{if(c&&!c.kept&&!r.has(c.id)){let u=o[c.id];if(u===1){if(!this.keepTensorForDebug)c.dispose();else{let[d,p]=zr(t.name,s);this.intermediateTensors[d]?this.intermediateTensors[d][p]=c:(this.intermediateTensors[d]=[],this.intermediateTensors[d][p]=c)}delete o[c.id]}else u!=null&&o[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){console.warn(c.message)}this.resetIntermediateTensors();let a=new GS(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(c=>Un(c,this.tensorsMap,a)),i=o.map(c=>c.id),l=Object.keys(e).map(c=>e[c].id);return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(x=>this.graph.nodes[vs(x)[0]]),o=n.map(x=>vs(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:u,syncInputs:d}=HS(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(x=>{let[A,b]=vs(x),w=[];w[b]=e[x],h[A]=w});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let x=this.processStack(a,p,t,h,g,m,o,f,l);await Promise.all(x)}u==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=i.filter(x=>!jS(x)&&!Un(x.name,h,t)).map(x=>x.name);if(y.length>0){let x="";throw u!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${c}]. ${x}`)}return h}processStack(e,t,n,s,r,a,o,i,l){let c=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let d="";if(u.node.op==="Enter"&&k("isConstant",u.node,s,n)&&([d]=zr(u.node.name,n)),s[u.node.name]==null){let p=US(u.node,s,n,this._resourceManager);d||([d]=zr(u.node.name,n));let h=n.currentContext;v.isPromise(p)?c.push(p.then(f=>(s[d]=f,n.currentContext=h,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l),f))):(s[d]=p,this.checkTensorForDisposal(d,u.node,s,n,a,o,i),this.processChildNodes(u.node,t,n,s,r,l))}else this.processChildNodes(u.node,t,n,s,r,l)}return c}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=zr(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Un(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!Un(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=vs(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);v.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&v.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=vs(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=vs(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},nH=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},sH="?tfjs-format=file",rH="model.json",qS=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new nH}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=rs.browserHTTPRequest(e,this.loadOptions);else{let t=rs.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(rs.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=rs.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new VA(MS.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=MS.Instance.transformGraph(e.modelInitializer);this.initializer=new VA(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=rs.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof tt)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Be(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${rH}${sH}`);let n=new qS(e,t);return await n.load(),n}var aH="0.0.0",XS={};Me(XS,{CSVDataset:()=>l7,Dataset:()=>rc,FileDataSource:()=>m7,TextLineDataset:()=>a7,URLDataSource:()=>g7,array:()=>NH,csv:()=>LH,func:()=>BH,generator:()=>WH,microphone:()=>UH,version_data:()=>GH,webcam:()=>VH,zip:()=>EH});var oH=pi(wh()),iH=pi(wh());function lH(e,t){return Im(e,t)}function Im(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(sc(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=Im(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function uH(e,t=ZS){return KS(e,t)}function KS(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(sc(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(c=>c[o]),l=KS(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function ZS(e){return e===null?null:sc(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function YS(e,t){let n=new Map;Im(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let o=await a;n.set(r,o)}}return Im(e,t,n)}function sc(e){let t=!1;if(Y().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=M5();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof tt)&&!(e instanceof Promise)&&!t)}function cH(e){return e==null||dH(e)||Array.isArray(e)||typeof e=="object"&&e instanceof tt||v.isTypedArray(e)}function dH(e){return e===null||typeof e!="object"&&typeof e!="function"}function pH(e){return lH(e,hH)}function hH(e){return e instanceof tt?{value:e.clone(),recurse:!1}:sc(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var JS=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},QS=class extends JS{constructor(){super(QS.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},e7=QS;e7.INITIAL_CAPACITY=32;function t7(e){return new gH(e)}function UA(e){return new yH(e)}function fH(e,t){return new s7(e,t)}function mH(e,t=HA.FAIL){return new CH(e,t)}var bn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new SH(this,e)}filter(e){return new wH(this,e)}map(e){return new kH(this,e)}mapAsync(e){return new n7(this,e)}serialMapAsync(e){return new n7(this,e).serial()}flatmap(e){return new IH(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new vH(this,e,t)}columnMajorBatch(e,t=!0,n=ZS){return this.rowMajorBatch(e,t).map(r=>uH(r,n))}concatenate(e,t){return new s7(t7([this,e]),t)}take(e){return e<0||e==null?this:new bH(this,e)}skip(e){return e<0||e==null?this:new xH(this,e)}prefetch(e){return new r7(this,e)}shuffle(e,t){return new TH(this,e,t)}serial(){return new AH(this)}},gH=class extends bn{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:pH(e),done:!1}}},yH=class extends bn{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},AH=class extends bn{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},xH=class extends bn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ne(e.value)}return this.upstream.next()}},bH=class extends bn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},vH=class extends bn{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},wH=class extends bn{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ne(e.value)}}},kH=class extends bn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=cr.getTensorsInContainer(e.value),n=this.transform(e.value),s=cr.getTensorsInContainer(n);for(let r of t)cr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},SH=class extends bn{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},n7=class extends bn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=cr.getTensorsInContainer(e.value),n=await this.transform(e.value),s=cr.getTensorsInContainer(n);for(let r of t)cr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},GA=class extends bn{constructor(){super();this.outputQueue=new e7,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},IH=class extends GA{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=cr.getTensorsInContainer(e.value),n=this.transform(e.value),s=cr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)cr.isTensorInList(r,s)||r.dispose();return!0}},s7=class extends bn{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},HA=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(HA||{}),CH=class extends bn{constructor(e,t=0){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof bn?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await YS(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},r7=class extends bn{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new JS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},TH=class extends r7{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=iH.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},rc=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),ws(async()=>(await n.iterator()).columnMajorBatch(e,t,RH),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,ws(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,ws(async()=>(await t.iterator()).filter(s=>X(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return ws(async()=>(await t.iterator()).map(n=>X(()=>e(n))),this.size)}mapAsync(e){let t=this;return ws(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return ws(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,ws(async()=>{let s=UA(async()=>({value:await t.iterator(),done:!1}));return fH(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,ws(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=oH.alea(t||v.now().toString());return ws(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,ws(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};rc.MAX_BUFFER_SIZE=1e4;function ws(e,t=null){return new class extends rc{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function NH(e){return ws(async()=>t7(e),e.length)}function EH(e){if(!sc(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return ws(async()=>{let n=await YS(e,s=>{if(s instanceof rc)return{value:s.iterator(),recurse:!1};if(sc(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return mH(n,HA.SHORTEST)},t)}function RH(e){if(e===null)return null;let t=e[0];return cH(t)?{value:_H(e),recurse:!1}:{value:null,recurse:!0}}function _H(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof tt?an(e):pt(e)}var a7=class extends rc{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Cm='"',mp=Symbol("out"),o7=Symbol("field"),Tm=Symbol("quote"),jA=Symbol("quoteafterquote"),i7=Symbol("quoteinquote"),l7=class extends rc{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new a7(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let c=Number(i);if(isNaN(c))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=c;else switch(o.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(i);break;default:l=c}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=mp;for(let o=0;o<r;o++)switch(a){case mp:switch(e.charAt(o)){case Cm:s=o+1,a=Tm;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=mp;break;default:a=o7,s=o;break}break;case o7:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=mp,s=o+1;break;default:}break;case Tm:switch(e.charAt(o)){case Cm:a=jA;break;default:}break;case jA:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=mp,s=o+1;break;case Cm:a=Tm;break;default:a=i7;break}break;case i7:switch(e.charAt(o)){case Cm:a=Tm;break;default:}break;default:}if(a===jA?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},u7=class extends bn{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Y().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new u7(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(v.sizeFromShape(t));return n.set(e,n.length-e.length),pt(n,t)}},c7=class extends bn{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ct([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=hr([a,r,i,o],[1,4])}else this.cropBox=hr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Y().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new c7(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=$s.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return X(()=>{let t=Zt(me(e,"float32"),0),n;n=Se.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return H(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},d7=class{},p7=class extends bn{split(e){return new DH(this,e)}},DH=class extends p7{constructor(e,t){super();this.upstream=e,this.impl=new $H(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},$H=class extends GA{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},PH=class extends bn{decodeUTF8(){return new FH(this)}},FH=class extends p7{constructor(e){super();this.upstream=e,this.impl=new OH(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},OH=class extends GA{constructor(e){super();if(this.upstream=e,Y().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=M5();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Y().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},h7=class extends PH{constructor(e,t={}){super();this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(Y().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function MH(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=zH(e));let a=await(n||v.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new h7(o,t)}else throw new Error(a.statusText)}var zH=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function f7(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var m7=class extends d7{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(f7(this.input)&&Y().get("IS_NODE")){let e=kh();this.input=e.readFileSync(this.input.substr(7))}return new h7(this.input,this.options)}},g7=class extends d7{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return f7(this.url)?new m7(this.url,this.fileOptions).iterator():MH(this.url,this.fileOptions)}};function LH(e,t={}){return new l7(new g7(e),t)}function BH(e){let t=UA(e);return ws(async()=>t)}function WH(e){return ws(async()=>{let t=await e();return UA(()=>t.next())})}async function VH(e,t){return c7.create(e,t)}async function UH(e){return u7.create(e)}var GH="0.0.0";function Ee(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var HH=Qs.whereImpl,y7=class extends su{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new od(this,as())}nextDataId(){return y7.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}makeOutput(e,t,n){let s=this.write(e,t,n);return as().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ee([e],"where");let t=this.readSync(e.dataId);return HH(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},qA=y7;qA.nextDataId=0;var Nm={};Me(Nm,{addImpl:()=>x7,bincountImpl:()=>KA,bincountReduceImpl:()=>b7,ceilImpl:()=>v7,concatImpl:()=>ZA,equalImpl:()=>w7,expImpl:()=>S7,expm1Impl:()=>C7,floorImpl:()=>T7,gatherNdImpl:()=>N7,gatherV2Impl:()=>E7,greaterEqualImpl:()=>_7,greaterImpl:()=>R7,lessEqualImpl:()=>$7,lessImpl:()=>D7,linSpaceImpl:()=>P7,logImpl:()=>F7,maxImpl:()=>O7,maximumImpl:()=>M7,minimumImpl:()=>z7,multiplyImpl:()=>YA,negImpl:()=>L7,notEqualImpl:()=>B7,prodImpl:()=>W7,rangeImpl:()=>QA,rsqrtImpl:()=>V7,sigmoidImpl:()=>$j,simpleAbsImpl:()=>A7,sliceImpl:()=>_m,sparseFillEmptyRowsImpl:()=>G7,sparseReshapeImpl:()=>H7,sparseSegmentReductionImpl:()=>ex,sqrtImpl:()=>Oj,squaredDifferenceImpl:()=>j7,stridedSliceImpl:()=>q7,stringNGramsImpl:()=>X7,stringSplitImpl:()=>K7,stringToHashBucketFastImpl:()=>Z7,subImpl:()=>Y7,tileImpl:()=>J7,topKImpl:()=>eI,transposeImpl:()=>JA,uniqueImpl:()=>tI});function A7(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var jH=e=>{let{x:t}=e.inputs,n=e.backend;Ee(t,"abs");let s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=A7(r),n.makeOutput(s,t.shape,t.dtype)},qH={kernelName:mi,backendName:"cpu",kernelFunc:jH};function Qt(e){return(t,n,s,r,a)=>{let o=N.assertAndGetBroadcastShape(t,n),i=o.length,l=v.computeStrides(o),c=v.sizeFromShape(o),u=v.getTypedArrayFromDType(a,c),d=t.length,p=n.length,h=v.computeStrides(t),f=v.computeStrides(n),m=N.getBroadcastDims(t,o),g=N.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(s[y%s.length],r[y%r.length]);else for(let y=0;y<u.length;++y){let x=v.indexToLoc(y,i,l),A=x.slice(-d);m.forEach(S=>A[S]=0);let b=v.locToIndex(A,d,h),w=x.slice(-p);g.forEach(S=>w[S]=0);let C=v.locToIndex(w,p,f);u[y]=e(s[b],r[C])}return[u,o]}}function ks(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var XH={kernelName:cd,backendName:"cpu",kernelFunc:ks};function Em(e,t,n="float32"){if(n==="complex64"){let r=Em(e,t,"float32"),a=Em(e,t,"float32");return ks({inputs:{real:r,imag:a},backend:e})}let s=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Lr(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var KH={kernelName:Za,backendName:"cpu",kernelFunc:Lr};function Cl(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var ZH={kernelName:xd,backendName:"cpu",kernelFunc:Cl};function qo(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Lr({inputs:{x:r},backend:n});let o=Em(n,r.shape,r.dtype),i=qo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=ks({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Cl({inputs:{input:r},backend:n}),i=qo({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Lr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=v.toTypedArray([0],r.dtype),[l,c]=Qt((u,d)=>u!==d?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var YH={kernelName:Oa,backendName:"cpu",kernelFunc:qo};function vn(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Ee([o,i],e);let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=o.dtype==="string"?N.fromUint8ToStringArray(c):c,p=o.dtype==="string"?N.fromUint8ToStringArray(u):u,h=s||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let c=qo({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,h=l.data.get(d.dataId).values,f=l.data.get(p.dataId).values,m=qo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,A=l.data.get(y.dataId).values,b=l.data.get(x.dataId).values,[w,C,S]=n(o.shape,i.shape,h,f,A,b),E=l.makeTensorInfo(S,"float32",w),R=l.makeTensorInfo(S,"float32",C),F=ks({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),F}else{let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=s||o.dtype,[p,h]=t(o.shape,i.shape,c,u,d);return l.makeTensorInfo(h,d,p)}}}function XA(e){return(t,n,s,r,a,o)=>{let i=N.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(i),c=i.length,u=v.computeStrides(i),d=v.getTypedArrayFromDType("float32",l),p=v.getTypedArrayFromDType("float32",l),h=N.getBroadcastDims(t,i),f=N.getBroadcastDims(n,i),m=N.mergeRealAndImagArrays(s,r),g=N.mergeRealAndImagArrays(a,o),y=t.length,x=v.computeStrides(t),A=n.length,b=v.computeStrides(n);if(h.length+f.length===0)for(let w=0;w<d.length;w++){let C=w%m.length,S=w%g.length,E=e(m[C*2],m[C*2+1],g[S*2],g[S*2+1]);d[w]=E.real,p[w]=E.imag}else for(let w=0;w<d.length;w++){let C=v.indexToLoc(w,c,u),S=C.slice(-y);h.forEach(P=>S[P]=0);let E=v.locToIndex(S,y,x),R=C.slice(-A);f.forEach(P=>R[P]=0);let F=v.locToIndex(R,A,b),_=e(m[E*2],m[E*2+1],g[F*2],g[F*2+1]);d[w]=_.real,p[w]=_.imag}return[d,p,i]}}var x7=Qt((e,t)=>e+t),JH=XA((e,t,n,s)=>({real:e+n,imag:t+s})),gp=vn(Xr,x7,JH),QH={kernelName:Xr,backendName:"cpu",kernelFunc:gp};function KA(e,t,n,s,r){let a=v.sizeFromShape(s),o=v.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function b7(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=ze([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let c=e.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(s?o.set(1,i,c):t.size>0?o.set(o.get(i,c)+t.get(i,l),i,c):o.set(o.get(i,c)+1,i,c))}return o}function Xo(e){return(t,n,s)=>{let r=v.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function mt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ee(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=v.sizeFromShape(o.shape),u=n||o.dtype,d=v.getArrayFromDType(u,c);for(let p=0;p<c;++p)d[p]=t(l[p],r);return i.makeTensorInfo(o.shape,u,d)}}function ac(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ee(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=n||o.dtype,u=t(l,c,r);return i.makeTensorInfo(o.shape,c,u)}}var v7=Xo(e=>Math.ceil(e)),ej=ac(Ma,v7),tj={kernelName:Ma,backendName:"cpu",kernelFunc:ej};function ZA(e,t,n,s){let r=v.getArrayFromDType(n,v.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=v.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?N.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let c=0;c<o.shape[0];++c){let u=c*t[1]+a;for(let d=0;d<o.shape[1];++d)r[u+d]=i[l++]}a+=o.shape[1]})}return r}var w7=Qt((e,t)=>e===t?1:0),k7=vn(vi,w7,null,"bool"),nj={kernelName:vi,backendName:"cpu",kernelFunc:k7},S7=Xo(e=>Math.exp(e)),I7=ac(Ha,S7,"float32"),sj={kernelName:Ha,backendName:"cpu",kernelFunc:I7},C7=Xo(e=>Math.expm1(e)),rj=ac(ki,C7),aj={kernelName:ki,backendName:"cpu",kernelFunc:rj},T7=Xo(e=>Math.floor(e)),oj=ac(ja,T7),ij={kernelName:ja,backendName:"cpu",kernelFunc:oj};function N7(e,t,n,s,r,a,o,i,l){let c=ze([s,a],n);for(let u=0;u<s;u++){let d=[],p=0;for(let h=0;h<r;h++){let f=e[u*r+h];p+=f*o[h],d.push(f)}if(p<0||p>=l/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<a;h++)c.values[u*a+h]=t.get(...t.indexToLoc(p*a+h))}return c}function E7(e,t,n){let s=ze(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],c=t.locToIndex([i,l]);o[2]=t.values[c];let u=e.locToIndex(o);s.values[r]=e.values[u]}return s}var R7=Qt((e,t)=>e>t?1:0),lj=vn(Ti,R7,null,"bool"),uj={kernelName:Ti,backendName:"cpu",kernelFunc:lj},_7=Qt((e,t)=>e>=t?1:0),cj=vn(Ka,_7,null,"bool"),dj={kernelName:Ka,backendName:"cpu",kernelFunc:cj},D7=Qt((e,t)=>e<t?1:0),pj=vn(Ni,D7,null,"bool"),hj={kernelName:Ni,backendName:"cpu",kernelFunc:pj},$7=Qt((e,t)=>e<=t?1:0),fj=vn(Ei,$7,null,"bool"),mj={kernelName:Ei,backendName:"cpu",kernelFunc:fj};function P7(e,t,n){let s=(t-e)/(n-1),r=v.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var F7=Xo(e=>Math.log(e)),gj=ac(Ja,F7),yj={kernelName:Ja,backendName:"cpu",kernelFunc:gj};function O7(e,t,n,s){let r=v.getTypedArrayFromDType(s,v.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let c=e[o+l];(Number.isNaN(c)||c>i)&&(i=c)}r[a]=i}return r}var M7=Qt((e,t)=>Math.max(e,t)),Aj=vn(eo,M7),xj={kernelName:eo,backendName:"cpu",kernelFunc:Aj},z7=Qt((e,t)=>Math.min(e,t)),bj=vn(ro,z7),vj={kernelName:ro,backendName:"cpu",kernelFunc:bj},YA=Qt((e,t)=>e*t),wj=XA((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Rm=vn(oo,YA,wj),kj={kernelName:oo,backendName:"cpu",kernelFunc:Rm};function L7(e,t,n){let s=v.createScalarValue(-1,n);return YA([],t,s,e,n)}function Sj(e){let{inputs:t,backend:n}=e,{x:s}=t;Ee(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=L7(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var Ij={kernelName:_i,backendName:"cpu",kernelFunc:Sj},B7=Qt((e,t)=>e!==t?1:0),Cj=vn(Di,B7,null,"bool"),Tj={kernelName:Di,backendName:"cpu",kernelFunc:Cj};function JA(e,t,n,s,r){let a=t.length,o=v.sizeFromShape(t),i=v.computeStrides(t),l=v.computeStrides(r),c=v.getTypedArrayFromDType(n,v.sizeFromShape(r));for(let u=0;u<o;++u){let d=v.indexToLoc(u,a,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[s[f]];let h=v.locToIndex(p,a,l);c[h]=e[u]}return c}function Vs(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Ee(r,"transpose");let o=r.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=r.shape[a[d]];let l=s.data.get(r.dataId).values,c=JA(l,r.shape,r.dtype,a,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}var Nj={kernelName:ko,backendName:"cpu",kernelFunc:Vs};function W7(e,t,n,s){let[r,a]=N.computeOutAndReduceShapes(e,s),o=Ln(t,"int32"),i=v.makeZerosTypedArray(v.sizeFromShape(r),o),l=v.sizeFromShape(a);for(let c=0;c<i.length;++c){let u=c*l,d=1;for(let p=0;p<l;++p)d*=n[u+p];i[c]=d}return{outVals:i,outShape:r,outDtype:o}}function Ej(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"prod");let i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=N.getAxesPermutation(l,i),u=l,d=r,p=[];c!=null&&(d=Vs({inputs:{x:r},backend:n,attrs:{perm:c}}),p.push(d),u=N.getInnerMostAxes(u.length,i));let h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=W7(d.shape,d.dtype,h,u),y=m;return o&&(y=N.expandShapeToKeepDim(m,l)),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(y,g,f)}var Rj={kernelName:zi,backendName:"cpu",kernelFunc:Ej};function QA(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return v.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var V7=Xo(e=>1/Math.sqrt(e)),_j=ac(fo,V7),Dj={kernelName:fo,backendName:"cpu",kernelFunc:_j},$j=Xo(e=>1/(1+Math.exp(-e))),U7=mt(go,e=>1/(1+Math.exp(-e))),Pj={kernelName:go,backendName:"cpu",kernelFunc:U7};function _m(e,t,n,s,r){let a=Mt.isSliceContinous(s,t,n),o=v.sizeFromShape(n),i=v.computeStrides(s);if(a){let d=Mt.computeFlatOffset(t,i);return r==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let l=r==="string"?N.fromUint8ToStringArray(e):e,c=ze(s,r,l),u=ze(n,r);for(let d=0;d<u.size;++d){let p=u.indexToLoc(d),h=p.map((f,m)=>f+t[m]);u.set(c.get(...h),...p)}return r==="string"?N.fromStringArrayToUint8(u.values):u.values}function Tl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Ee(r,"slice");let[i,l]=Mt.parseSliceParams(r,a,o);Mt.assertParamsValid(r,i,l);let c=n.data.get(r.dataId).values,u=_m(c,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var Fj={kernelName:Gi,backendName:"cpu",kernelFunc:Tl};function G7(e,t,n,s,r,a,o){let i=t[0],l=a[0],c=new Array(l),u=new Array(i),d=t[1];if(l===0){if(i!==0)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=v.getArrayFromDType(n,0),y=v.getArrayFromDType(r,0);return[g,[0,d],y,c,u]}let p=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let y=e[g*d];if(y<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],p=p&&y>=h,h=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,y=s;for(let x=0;x<i;++x)u[x]=x;return[g,[i,d],y,c,u]}else{let g=f[l-1],y=v.getArrayFromDType(n,g*d),x=v.getArrayFromDType(r,g),A=new Array(l).fill(0);for(let b=0;b<i;++b){let w=e[b*d],C=A[w],S=(w===0?0:f[w-1])+C;A[w]++;for(let E=0;E<d;++E)y[S*d+E]=e[b*d+E];x[S]=s[b],u[b]=S}for(let b=0;b<l;++b)if(A[b]===0){let C=b===0?0:f[b-1];y[C*d+0]=b;for(let S=1;S<d;++S)y[C*d+S]=0;x[C]=o}return[y,[g,d],x,c,u]}}function H7(e,t,n,s,r){let a=v.sizeFromShape(s),o=t[0],i=r.length,l=[],c=1,u=-1;for(let g=0;g<i;++g){let y=r[g];if(y===-1){if(u!==-1)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,g));u=g,l.push(1)}else{if(y<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(g,y));c*=y,l.push(y)}}if(u!==-1){if(c<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/c);if(c*g!==a)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[u]=g}if(v.sizeFromShape(l)!==a)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(s,l));let p=s.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=v.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let y=0;for(let x=0;x<p;++x)y+=e[g*p+x]*h[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(y/f[x]),y%=f[x]}return[m,[o,i],l]}function ex(e,t,n,s,r,a=!1,o=0){let i=s.length,l=[t[0],e.length/t[0]],c=l[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=d;let h=p.reduce((A,b)=>A*b,1),f=v.getArrayFromDType(n,h);if(i===0)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=r[m];for(;;){let A=0;if(g<i){if(A=r[g],x===A){++g;continue}if(x>=A)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=d)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,d));x>y&&f.fill(o,y*c,x*c);for(let b=m;b<g;++b){let w=s[b];if(w<0||w>=l[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b,s[b],l[0]));for(let C=0;C<c;C++)f[x*c+C]+=e[w*c+C]}if(a)for(let b=0;b<c;b++)f[x*c+b]/=g-m;if(m=g,++g,y=x+1,x=A,g>i)break}return y<d&&f.fill(o,y*c,d*c),[f,p]}var Oj=Xo(e=>Math.sqrt(e)),Mj=mt(yo,e=>Math.sqrt(e)),zj={kernelName:yo,backendName:"cpu",kernelFunc:Mj},j7=Qt((e,t)=>{let n=e-t;return n*n}),Lj=vn(bo,j7),Bj={kernelName:bo,backendName:"cpu",kernelFunc:Lj};function q7(e,t,n,s){let r=ze(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var Wj=class{constructor(e,t,n,s,r,a){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),u=a-(l+c),d=t+(l>0?0:o-i),p=0;p+=l*this.leftPad.length;for(let y=0;y<u;++y)p+=e[d+y].length;p+=c*this.rightPad.length,p+=(l+c+u-1)*this.separator.length,n[s+o]=new Uint8Array(p);let f=n[s+o],m=0,g=y=>y.forEach(x=>f[m++]=x);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<u-1;++y)g(e[d+y]),g(this.separator);if(u>0){g(e[d+u-1]);for(let y=0;y<c;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<c-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let c=t[l]>=i;if(c=c&&t[l]<=n,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=v.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],c=0;this.nGramWidths.forEach(u=>{c+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&c===0&&(c=1),a[i]=a[i-1]+c}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],c=a[i];if(this.nGramWidths.forEach(u=>{let d=t[i+1]-t[i],p=this.getNumNGrams(d,u);this.createNGrams(e,l,o,c,p,u),c+=p}),this.preserveShort&&c===a[i]){let u=t[i+1]-t[i];if(u===0)continue;let d=u+2*this.padWidth,p=1;this.createNGrams(e,l,o,c,p,d)}}return[o,a]}};function X7(e,t,n,s,r,a,o,i){return new Wj(n,s,r,a,o,i).compute(e,t)}function Vj(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function K7(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let p=0;p<s;++p){let h=r.length;Vj(e[p],t,n,r);let f=r.length-h;i[p]=f,a+=f,o=Math.max(o,f)}let l=v.getArrayFromDType("int32",a*2),c=new Array(a),u=[s,o],d=0;for(let p=0;p<s;++p)for(let h=0;h<i[p];++h)l[d*2]=p,l[d*2+1]=h,c[d]=r[d],++d;return[l,c,u]}function Z7(e,t){let n=v.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=v.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var Y7=Qt((e,t)=>e-t),Uj=XA((e,t,n,s)=>({real:e-n,imag:t-s})),tx=vn(vo,Y7,Uj),Gj={kernelName:vo,backendName:"cpu",kernelFunc:tx};function J7(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=ze(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var yp=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function Q7(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,c=Math.log(i),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(i-u)/i)*Math.sign(l-i/2),p=Math.max(n,Math.floor(t-l*u/i+d)),h=Math.min(s,Math.floor(t+(i-l)*u/i+d));Q7(e,t,p,h)}let r=e[t],a=n,o=s;for(v.swap(e,n,t),yp(e[s],r)>0&&v.swap(e,n,s);a<o;){for(v.swap(e,a,o),a++,o--;yp(e[a],r)<0;)a=a+1;for(;yp(e[o],r)>0;)o=o-1}yp(e[n],r)===0?v.swap(e,n,o):(o=o+1,v.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function eI(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=v.getTypedArrayFromDType(n,o*s),c=v.getTypedArrayFromDType("int32",o*s);for(let d=0;d<o;d++){let p=d*i,h=e.subarray(p,p+i),f=new Array(h.length);h.forEach((x,A)=>f[A]={value:x,index:A}),s<f.length&&(Q7(f,s),f=f.slice(0,s)),r&&f.sort(yp);let m=d*s,g=l.subarray(m,m+s),y=c.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,y[x]=f[x].index}let u=t.slice();return u[u.length-1]=s,[ze(u,n,l),ze(u,"int32",c)]}function tI(e,t,n,s){let r=v.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new sn(a,s,e),c=[],u=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let x=0;x<a[2];x++)g.push(l.get(y,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let p=new sn(d,s);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)p.set(l.get(g,f,y),g,m,y)});let h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:i}}var Hj="0.0.0";ul("cpu",()=>new qA,1);var nI=mt(Ga,e=>e>=0?e:Math.exp(e)-1),jj={kernelName:Ga,backendName:"cpu",kernelFunc:nI};function sI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Ee([r],"leakyRelu");let o=v.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=v.getTypedArrayFromDType("float32",o);for(let c=0;c<i.length;c++)l[c]=i[c]<0?a*i[c]:i[c];return n.makeTensorInfo(r.shape,"float32",l)}var qj={kernelName:Ya,backendName:"cpu",kernelFunc:sI},Xj=Qt((e,t)=>e<0?t*e:e);function rI(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Ee([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=Xj(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var Kj={kernelName:uo,backendName:"cpu",kernelFunc:rI},aI=mt(co,e=>Math.max(0,e)),Zj={kernelName:co,backendName:"cpu",kernelFunc:aI},oI=mt(ho,e=>Math.min(Math.max(0,e),6)),Yj={kernelName:ho,backendName:"cpu",kernelFunc:oI};function nx(e,t,n,s,r){if(n==="linear")return Lr({inputs:{x:t},backend:e});if(n==="relu")return aI({inputs:{x:t},backend:e});if(n==="elu")return nI({inputs:{x:t},backend:e});if(n==="relu6")return oI({inputs:{x:t},backend:e});if(n==="prelu")return rI({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return sI({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return U7({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Ft(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,o),l=v.sizeFromShape(i);v.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let c=n.data.get(r.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var Jj={kernelName:Li,backendName:"cpu",kernelFunc:Ft};function iI(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Ee([r,a],"matMul");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=ol.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);v.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],w=i?[y,h,d]:[y,d,h],C=Ft({inputs:{x:r},backend:n,attrs:{shape:b}}),S=Ft({inputs:{x:a},backend:n,attrs:{shape:w}}),E=o?C.shape[1]:C.shape[2],R=o?C.shape[2]:C.shape[1],F=i?S.shape[1]:S.shape[2],_=Math.max(g,y),P=n.data.get(C.dataId).values,T=n.data.get(S.dataId).values,O=v.computeStrides(C.shape),G=v.computeStrides(S.shape),[K,z,j]=o?[O[0],1,O[1]]:[O[0],O[1],1],[W,Q,te]=i?[1,G[1],G[0]]:[G[1],1,G[0]],ae=R*F,Z=ze([_,R,F],C.dtype),oe=Z.values,re=n.blockSize;for(let ge=0;ge<_;ge++)for(let ve=0;ve<R;ve+=re)for(let Re=0;Re<F;Re+=re)for(let Te=0;Te<E;Te+=re){let Pe=Math.min(ve+re,R),Ue=Math.min(Re+re,F),ot=Math.min(Te+re,E);for(let Qe=ve;Qe<Pe;Qe++)for(let Ye=Re;Ye<Ue;Ye++){let gt=0;for(let it=Te;it<ot;it++){let yt=Math.min(ge,g-1)*K,_t=Math.min(ge,y-1)*te,Qn=P[yt+Qe*z+it*j],lt=T[it*W+Ye*Q+_t];gt+=Qn*lt}oe[ge*ae+(Qe*F+Ye)]+=gt}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(A,Z.dtype,Z.values)}var Qj={kernelName:Fa,backendName:"cpu",kernelFunc:iI};function eq(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p,h,f,m=[];p=iI({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:c},backend:n}),o&&(h=gp({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),u&&(f=nx(n,p,u,i,d),m.push(p),p=f);for(let y of m)n.disposeIntermediateTensorInfo(y);return p}var tq={kernelName:Io,backendName:"cpu",kernelFunc:eq},nq=mt(iu,e=>Math.acos(e)),sq={kernelName:iu,backendName:"cpu",kernelFunc:nq},rq=mt(lu,e=>Math.acosh(e)),aq={kernelName:lu,backendName:"cpu",kernelFunc:rq};function oq(e){let{inputs:t,backend:n}=e,s=t;Ee(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=ze(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let c=0;c<o.length;c++)o[c]+=l[c]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var iq={kernelName:Da,backendName:"cpu",kernelFunc:oq};function lq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"all");let i=v.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Vs({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("all",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];A=A&&w}f[y]=A}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),x=Ft({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var uq={kernelName:uu,backendName:"cpu",kernelFunc:lq};function cq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"any");let i=v.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Vs({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("any",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];A=A||w}f[y]=A}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),x=Ft({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var dq={kernelName:cu,backendName:"cpu",kernelFunc:cq};function pq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ee(r,"argMax");let o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Vs({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=v.sizeFromShape(u),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w>x&&(x=w,A=b)}h[g]=A}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var hq={kernelName:$a,backendName:"cpu",kernelFunc:pq};function fq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ee(r,"argMin");let o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Vs({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=v.sizeFromShape(u),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w<x&&(x=w,A=b)}h[g]=A}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var mq={kernelName:du,backendName:"cpu",kernelFunc:fq},gq=mt(pu,e=>Math.asin(e)),yq={kernelName:pu,backendName:"cpu",kernelFunc:gq},Aq=mt(hu,e=>Math.asinh(e)),xq={kernelName:hu,backendName:"cpu",kernelFunc:Aq},bq=mt(fu,e=>Math.atan(e)),vq={kernelName:fu,backendName:"cpu",kernelFunc:bq},wq=Qt((e,t)=>Math.atan2(e,t)),kq=vn(gu,wq),Sq={kernelName:gu,backendName:"cpu",kernelFunc:kq},Iq=mt(mu,e=>Math.atanh(e)),Cq={kernelName:mu,backendName:"cpu",kernelFunc:Iq};function sx(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ze(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],A=r.outShape[3];for(let b=0;b<r.batchSize;++b){let w=b*y,C=b*s[0];for(let S=0;S<r.inChannels;++S)for(let E=0;E<r.outHeight;++E){let R=E*o-p,F=Math.max(0,R),_=Math.min(r.inHeight,u+R),P=w+E*x;for(let T=0;T<r.outWidth;++T){let O=T*i-h,G=Math.max(0,O),K=Math.min(r.inWidth,d+O),z=f,j=0,W=0;for(let te=F;te<_;te+=l){let ae=C+te*s[1];for(let Z=G;Z<K;Z+=c){let oe=ae+Z*s[2],re=e[oe+S];a==="max"&&re>z?z=re:a==="avg"&&(j+=re,W++)}if(isNaN(z))break}let Q=P+T*A+S;g[Q]=a==="avg"?j/W:z}}}return m}function lI(e,t,n,s,r=!1,a=!1){let o=ze(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=ze(t,n,e);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){let A=x*i-h,b=A;for(;b<0;)b+=c;let w=Math.min(s.inHeight,d+A);for(let C=0;C<s.outWidth;++C){let S=C*l-f,E=S;for(;E<0;)E+=u;let R=Math.min(s.inWidth,p+S),F=Number.NEGATIVE_INFINITY,_=-1;for(let P=b;P<w;P+=c){let T=P-A;for(let O=E;O<R;O+=u){let G=O-S,K=m.get(g,P,O,y);K>F&&(F=K,r?_=a?((g*s.inHeight+P)*s.inWidth+O)*s.inChannels+y:(P*s.inWidth+O)*s.inChannels+y:_=T*p+G)}}o.set(_,g,x,C,y)}}return o}function uI(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=ze(r.outShape,n),b=A.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){let F=R*w,_=R*s[0];for(let P=0;P<r.inChannels;++P)for(let T=0;T<r.outDepth;++T){let O=T*o-m,G=O;for(;G<0;)G+=c;let K=Math.min(r.inDepth,p+O),z=F+T*C;for(let j=0;j<r.outHeight;++j){let W=j*i-g,Q=W;for(;Q<0;)Q+=u;let te=Math.min(r.inHeight,h+W),ae=z+j*S;for(let Z=0;Z<r.outWidth;++Z){let oe=Z*l-y,re=oe;for(;re<0;)re+=d;let ge=Math.min(r.inWidth,f+oe),ve=ae+Z*E,Re=x,Te=0,Pe=0;for(let ot=G;ot<K;ot+=c){let Qe=_+ot*s[1];for(let Ye=Q;Ye<te;Ye+=u){let gt=Qe+Ye*s[2];for(let it=re;it<ge;it+=d){let yt=gt+it*s[3],_t=e[yt+P];if(a==="max"&&_t>Re?Re=_t:a==="avg"&&(Te+=_t,Pe++),isNaN(Re))break}if(isNaN(Re))break}if(isNaN(Re))break}let Ue=ve+P;b[Ue]=a==="avg"?Te/Pe:Re}}}}return A}function Tq(e,t){let n=ze(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let x=y*s-p,A=x;for(;A<0;)A+=o;let b=Math.min(t.inDepth,c+x);for(let w=0;w<t.outHeight;++w){let C=w*r-h,S=C;for(;S<0;)S+=i;let E=Math.min(t.inHeight,u+C);for(let R=0;R<t.outWidth;++R){let F=R*a-f,_=F;for(;_<0;)_+=l;let P=Math.min(t.inWidth,d+F),T=Number.NEGATIVE_INFINITY,O=-1;for(let G=A;G<b;G+=o){let K=G-x;for(let z=S;z<E;z+=i){let j=z-C;for(let W=_;W<P;W+=l){let Q=W-F,te=e.get(m,G,z,W,g);te>=T&&(T=te,O=K*u*d+j*u+Q)}}}n.set(O,m,y,w,R,g)}}}return n}function Nq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ee(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))d=Lr({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=sx(p,r.shape,r.dtype,h,u,"avg");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var Eq={kernelName:Pa,backendName:"cpu",kernelFunc:Nq};function Rq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Ee(r,"avgPool3d");let u=N.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=uI(d,r.shape,r.dtype,v.computeStrides(r.shape),u,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var _q={kernelName:ud,backendName:"cpu",kernelFunc:Rq};function Dq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Ee([r,a],"avgPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=u.strideDepth,p=u.strideHeight,h=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,x=u.dilationHeight,A=u.dilationWidth,b=u.effectiveFilterDepth,w=u.effectiveFilterHeight,C=u.effectiveFilterWidth,S=b-1-u.padInfo.front,E=C-1-u.padInfo.left,R=w-1-u.padInfo.top,F=ze(a.shape,"float32"),_=1/(f*m*g),P=n.bufferSync(r);for(let T=0;T<u.batchSize;++T)for(let O=0;O<u.inChannels;++O)for(let G=0;G<u.inDepth;++G)for(let K=0;K<u.inHeight;++K)for(let z=0;z<u.inWidth;++z){let j=G-S,W=K-R,Q=z-E,te=0;for(let ae=0;ae<b;ae+=y){let Z=(j+ae)/d;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let oe=0;oe<w;oe+=x){let re=(W+oe)/p;if(!(re<0||re>=u.outHeight||Math.floor(re)!==re))for(let ge=0;ge<C;ge+=A){let ve=(Q+ge)/h;if(ve<0||ve>=u.outWidth||Math.floor(ve)!==ve)continue;te+=P.get(T,Z,re,ve,O)}}}F.set(te*_,T,G,K,z,O)}return n.makeTensorInfo(F.shape,F.dtype,F.values)}var $q={kernelName:Eh,backendName:"cpu",kernelFunc:Dq};function Pq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Ee([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=N.computePool2DInfo(o.shape,i,l,1,c),d=u.strideHeight,p=u.strideWidth,h=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,x=u.effectiveFilterWidth,A=x-1-u.padInfo.left,b=y-1-u.padInfo.top,w=ze(o.shape,"float32"),C=1/(h*f),S=n.data.get(r.dataId).values,E=ze(r.shape,"float32",S);for(let R=0;R<u.batchSize;++R)for(let F=0;F<u.inChannels;++F)for(let _=0;_<u.inHeight;++_)for(let P=0;P<u.inWidth;++P){let T=_-b,O=P-A,G=0;for(let K=0;K<y;K+=m){let z=(T+K)/d;if(!(z<0||z>=u.outHeight||Math.floor(z)!==z))for(let j=0;j<x;j+=g){let W=(O+j)/p;if(W<0||W>=u.outWidth||Math.floor(W)!==W)continue;G+=E.get(R,z,W,F)}}w.set(G*C,R,_,P,F)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var Fq={kernelName:Nh,backendName:"cpu",kernelFunc:Pq};function Oq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;v.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ee([r,i,l,a,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);let u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(l.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=h.length,x=p.length,A=d.length,b=0,w=0,C=0,S=0;for(let E=0;E<u.length;++E)m[E]=f[b++]+(u[E]-d[w++])*h[C++]/Math.sqrt(p[S++]+c),b>=g&&(b=0),w>=A&&(w=0),C>=y&&(C=0),S>=x&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var Mq={kernelName:Xa,backendName:"cpu",kernelFunc:Oq};function zq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Ee([r],"batchToSpaceND");let i=a.reduce((y,x)=>y*x),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=Ft({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Vs({inputs:{x:h},backend:n,attrs:{perm:c}}),m=Ft({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Tl({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var Lq={kernelName:gi,backendName:"cpu",kernelFunc:zq};function Bq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=KA(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var Wq={kernelName:Rh,backendName:"cpu",kernelFunc:Bq};function Vq(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var Uq={kernelName:_h,backendName:"cpu",kernelFunc:Vq},Gq=mt(Kr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),Hq={kernelName:Kr,backendName:"cpu",kernelFunc:Gq},jq=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){let u=i[c],d=l[c];s[c]=Math.hypot(u,d)}return n.makeOutput(s,t.shape,"float32")},qq={kernelName:dd,backendName:"cpu",kernelFunc:jq};function oc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var Xq={kernelName:md,backendName:"cpu",kernelFunc:oc};function ic(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(m=>m.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>v.sizeFromShape(m.shape)>0);if(i.length===1)return Lr({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(N.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>Cl({inputs:{input:b},backend:n})),g=i.map(b=>oc({inputs:{input:b},backend:n})),y=ic({inputs:m,backend:n,attrs:{axis:a}}),x=ic({inputs:g,backend:n,attrs:{axis:a}}),A=ks({inputs:{real:y,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),A}let c=i.map(m=>{let g=v.sizeFromShape(m.shape.slice(a));return Ft({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=N.computeOutShape(c.map(m=>m.shape),1);let d=c[0].shape[0]===1,p=ZA(u,o,t[0].dtype,d),h=N.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,p);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Kq={kernelName:yi,backendName:"cpu",kernelFunc:ic};function cI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s;Ee([r,a],"conv2d");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,x=p.padInfo.top,A=p.dataFormat==="channelsLast",b=new sn(p.outShape,r.dtype),w=v.computeStrides(r.shape),C=v.computeStrides(a.shape),S=w[0],E=A?w[1]:w[2],R=A?w[2]:1,F=A?1:w[1],_=b.strides[0],P=A?b.strides[1]:b.strides[2],T=A?b.strides[2]:1,O=A?1:b.strides[1],G=n.data.get(r.dataId).values,K=n.data.get(a.dataId).values,z=b.values;for(let j=0;j<p.batchSize;++j){let W=j*S,Q=j*_;for(let te=0;te<p.outHeight;++te){let ae=Q+te*P,Z=te*p.strideHeight-x;for(let oe=0;oe<h;++oe){let re=Z+oe*m;if(re<0||re>=p.inHeight)continue;let ge=oe*C[0],ve=W+re*E;for(let Re=0;Re<p.outWidth;++Re){let Te=ae+Re*T,Pe=Re*p.strideWidth-y;for(let Ue=0;Ue<f;++Ue){let ot=Pe+Ue*g;if(ot<0||ot>=p.inWidth)continue;let Qe=ge+Ue*C[1],Ye=ve+ot*R,gt=Qe;for(let it=0;it<p.inChannels;++it){let yt=G[Ye+it*F];for(let _t=0;_t<p.outChannels;++_t)z[Te+_t*O]+=yt*K[gt+_t];gt+=p.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,z)}var Zq={kernelName:za,backendName:"cpu",kernelFunc:cI};function Yq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;Ee([r,a],"conv2dBackpropFilter");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=p.dataFormat==="channelsLast",x=new sn(p.filterShape,"float32"),A=p.padInfo.left,b=p.padInfo.top,w=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,S=new sn(r.shape,r.dtype,w),E=new sn(a.shape,a.dtype,C);for(let R=0;R<m;++R){let F=Math.max(0,Math.ceil((b-R)/h)),_=Math.min(p.outHeight,(p.inHeight+b-R)/h);for(let P=0;P<g;++P){let T=Math.max(0,Math.ceil((A-P)/f)),O=Math.min(p.outWidth,(p.inWidth+A-P)/f);for(let G=0;G<p.inChannels;++G)for(let K=0;K<p.outChannels;++K){let z=0;for(let j=0;j<p.batchSize;++j)for(let W=F;W<_;++W){let Q=R+W*h-b;for(let te=T;te<O;++te){let ae=P+te*f-A;y?z+=S.get(j,Q,ae,G)*E.get(j,W,te,K):z+=S.get(j,G,Q,ae)*E.get(j,K,W,te)}}x.set(z,R,P,G,K)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var Jq={kernelName:Dh,backendName:"cpu",kernelFunc:Yq};function Qq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s;Ee([r,a],"conv2dBackpropInput");let d=v.computeStrides(a.shape),p=v.computeStrides(r.shape),h=N.convertConv2DDataFormat(c),f=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,h),m=new sn(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[A,b,w]=d,{batchSize:C,filterHeight:S,filterWidth:E,inChannels:R,inHeight:F,inWidth:_,outChannels:P,outHeight:T,outWidth:O,strideHeight:G,strideWidth:K}=f;h=f.dataFormat;let z=S-1-f.padInfo.top,j=E-1-f.padInfo.left,W=h==="channelsLast",Q=m.strides[0],te=W?m.strides[1]:m.strides[2],ae=W?m.strides[2]:1,Z=W?1:m.strides[1],oe=p[0],re=W?p[1]:p[2],ge=W?p[2]:1,ve=W?1:p[1];for(let Re=0;Re<C;++Re)for(let Te=0;Te<R;++Te)for(let Pe=0;Pe<F;++Pe){let Ue=Pe-z,ot=Math.max(0,Math.ceil(Ue/G)),Qe=Math.min(T,(S+Ue)/G);for(let Ye=0;Ye<_;++Ye){let gt=Ye-j,it=Math.max(0,Math.ceil(gt/K)),yt=Math.min(O,(E+gt)/K),_t=0;for(let lt=ot;lt<Qe;++lt){let ms=lt*G-Ue;for(let kn=it;kn<yt;++kn){let js=kn*K-gt,es=oe*Re+re*lt+ge*kn,gs=A*(S-1-ms)+b*(E-1-js)+w*Te;for(let Es=0;Es<P;++Es){let qs=y[es+ve*Es],Rs=x[gs+Es];_t+=qs*Rs}}}let Qn=Q*Re+te*Pe+ae*Ye+Z*Te;g[Qn]=_t}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var eX={kernelName:La,backendName:"cpu",kernelFunc:Qq};function tX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Ee([r,a],"conv3d");let c=N.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:u,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,x=g.left,A=g.top,b=new sn(c.outShape,r.dtype),w=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,S=b.values,E=v.computeStrides(r.shape),R=v.computeStrides(a.shape);for(let F=0;F<c.batchSize;++F){let _=F*E[0],P=F*b.strides[0];for(let T=0;T<c.outDepth;++T){let O=P+T*b.strides[1],G=T*c.strideDepth-y;for(let K=0;K<u;++K){let z=G+K*h;if(z<0||z>=c.inDepth)continue;let j=K*R[0],W=_+z*E[1];for(let Q=0;Q<c.outHeight;++Q){let te=O+Q*b.strides[2],ae=Q*c.strideHeight-A;for(let Z=0;Z<d;++Z){let oe=ae+Z*f;if(oe<0||oe>=c.inHeight)continue;let re=j+Z*R[1],ge=W+oe*E[2];for(let ve=0;ve<c.outWidth;++ve){let Re=te+ve*c.outChannels,Te=ve*c.strideWidth-x;for(let Pe=0;Pe<p;++Pe){let Ue=Te+Pe*m;if(Ue<0||Ue>=c.inWidth)continue;let ot=re+Pe*R[2],Qe=ge+Ue*c.inChannels,Ye=ot;for(let gt=0;gt<c.inChannels;++gt){let it=w[Qe+gt];for(let yt=0;yt<c.outChannels;++yt)S[Re+yt]+=it*C[Ye+yt];Ye+=c.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var nX={kernelName:pd,backendName:"cpu",kernelFunc:tX};function sX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Ee([r,a],"conv3dBackpropFilterV2");let c=v.computeStrides(r.shape),u=v.computeStrides(a.shape),d=N.computeConv3DInfo(r.shape,l,o,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,x=new sn(d.filterShape,"float32"),A=x.values,[b,w,C,S]=x.strides,E=n.data.get(a.dataId).values,[R,F,_,P]=u,T=n.data.get(r.dataId).values,[O,G,K,z]=c,j=d.padInfo.front,W=d.padInfo.left,Q=d.padInfo.top;for(let te=0;te<m;++te){let ae=Math.max(0,Math.ceil((j-te)/p)),Z=Math.min(d.outDepth,(d.inDepth+j-te)/p),oe=te*b;for(let re=0;re<g;++re){let ge=Math.max(0,Math.ceil((Q-re)/h)),ve=Math.min(d.outHeight,(d.inHeight+Q-re)/h),Re=re*w+oe;for(let Te=0;Te<y;++Te){let Pe=Math.max(0,Math.ceil((W-Te)/f)),Ue=Math.min(d.outWidth,(d.inWidth+W-Te)/f),ot=Te*C+Re;for(let Qe=0;Qe<d.inChannels;++Qe){let Ye=Qe*S+ot;for(let gt=0;gt<d.outChannels;++gt){let it=0;for(let yt=0;yt<d.batchSize;++yt){let _t=yt*O,Qn=yt*R;for(let lt=ae;lt<Z;++lt){let kn=(te+lt*p-j)*G+_t,js=lt*F+Qn;for(let es=ge;es<ve;++es){let Es=(re+es*h-Q)*K+kn,qs=es*_+js;for(let Rs=Pe;Rs<Ue;++Rs){let ba=(Te+Rs*f-W)*z+Es,Nn=Rs*P+qs;it+=T[ba+Qe]*E[Nn+gt]}}}}A[Ye+gt]=it}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var rX={kernelName:$h,backendName:"cpu",kernelFunc:sX};function aX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Ee([r],"conv3dBackpropInputV2");let c=v.computeStrides(r.shape),u=v.computeStrides(a.shape),d=N.computeConv3DInfo(l,a.shape,i,1,o),p=new sn(d.inShape,"float32"),h=p.values,[f,m,g,y]=p.strides,x=n.data.get(r.dataId).values,[A,b,w,C]=c,S=n.data.get(a.dataId).values,[E,R,F,_]=u,{batchSize:P,filterDepth:T,filterHeight:O,filterWidth:G,inChannels:K,inDepth:z,inHeight:j,inWidth:W,outChannels:Q,outDepth:te,outHeight:ae,outWidth:Z,strideDepth:oe,strideHeight:re,strideWidth:ge}=d,ve=T-1-d.padInfo.front,Re=O-1-d.padInfo.top,Te=G-1-d.padInfo.left;for(let Pe=0;Pe<P;++Pe)for(let Ue=0;Ue<K;++Ue)for(let ot=0;ot<z;++ot){let Qe=ot-ve,Ye=Math.max(0,Math.ceil(Qe/oe)),gt=Math.min(te,(T+Qe)/oe);for(let it=0;it<j;++it){let yt=it-Re,_t=Math.max(0,Math.ceil(yt/re)),Qn=Math.min(ae,(O+yt)/re);for(let lt=0;lt<W;++lt){let ms=lt-Te,kn=Math.max(0,Math.ceil(ms/ge)),js=Math.min(Z,(G+ms)/ge),es=0;for(let gs=Ye;gs<gt;++gs){let Es=gs*oe-Qe;for(let qs=_t;qs<Qn;++qs){let Rs=qs*re-yt;for(let ts=kn;ts<js;++ts){let ba=ts*ge-ms,Nn=A*Pe+b*gs+w*qs+C*ts,va=E*(T-1-Es)+R*(O-1-Rs)+F*(G-1-ba)+_*Ue;for(let _s=0;_s<Q;++_s){let Vc=x[Nn+_s],Uc=S[va+_s];es+=Vc*Uc}}}}h[f*Pe+m*ot+g*it+y*lt+Ue]=es}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var oX={kernelName:Ph,backendName:"cpu",kernelFunc:aX},iX=mt(Ba,e=>Math.cos(e)),lX={kernelName:Ba,backendName:"cpu",kernelFunc:iX},uX=mt(Wa,e=>Math.cosh(e)),cX={kernelName:Wa,backendName:"cpu",kernelFunc:uX};function dX(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,[u,d,p,h]=r.shape,f=a.shape[0],[m,g]=i,y=ze([f,m,g,h],"float32"),x=n.data.get(a.dataId).values,A=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,w=v.computeStrides(r.shape),C=v.computeStrides(y.shape);for(let S=0;S<f;S++){let E=S*4,R=x[E],F=x[E+1],_=x[E+2],P=x[E+3],T=A[S];if(T>=u)continue;let O=m>1?(_-R)*(d-1)/(m-1):0,G=g>1?(P-F)*(p-1)/(g-1):0;for(let K=0;K<m;K++){let z=m>1?R*(d-1)+K*O:.5*(R+_)*(d-1);if(z<0||z>d-1){for(let j=0;j<g;j++)for(let W=0;W<h;W++){let Q=W+j*C[2]+K*C[1]+S*C[0];y.values[Q]=c}continue}if(l==="bilinear"){let j=Math.floor(z),W=Math.ceil(z),Q=z-j;for(let te=0;te<g;te++){let ae=g>1?F*(p-1)+te*G:.5*(F+P)*(p-1);if(ae<0||ae>p-1){for(let ge=0;ge<h;ge++){let ve=ge+te*C[2]+K*C[1]+S*C[0];y.values[ve]=c}continue}let Z=Math.floor(ae),oe=Math.ceil(ae),re=ae-Z;for(let ge=0;ge<h;ge++){let ve=ge+Z*w[2]+j*w[1]+T*w[0],Re=b[ve];ve=ge+oe*w[2]+j*w[1]+T*w[0];let Te=b[ve];ve=ge+Z*w[2]+W*w[1]+T*w[0];let Pe=b[ve];ve=ge+oe*w[2]+W*w[1]+T*w[0];let Ue=b[ve],ot=Re+(Te-Re)*re,Qe=Pe+(Ue-Pe)*re;ve=ge+te*C[2]+K*C[1]+S*C[0],y.values[ve]=ot+(Qe-ot)*Q}}}else for(let j=0;j<g;++j){let W=g>1?F*(p-1)+j*G:.5*(F+P)*(p-1);if(W<0||W>p-1){for(let ae=0;ae<h;ae++){let Z=ae+j*C[2]+K*C[1]+S*C[0];y.values[Z]=c}continue}let Q=Math.round(W),te=Math.round(z);for(let ae=0;ae<h;ae++){let Z=ae+Q*w[2]+te*w[1]+T*w[0],oe=ae+j*C[2]+K*C[1]+S*C[0];y.values[oe]=b[Z]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var pX={kernelName:xi,backendName:"cpu",kernelFunc:dX};function hX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Ee(r,"cumsum");let l=N.getAxesPermutation([a],r.shape.length),c=r;l!=null&&(c=Vs({inputs:{x:r},backend:n,attrs:{perm:l}}));let u=N.getInnerMostAxes(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let d=Ln(c.dtype,"int32"),p=v.makeZerosTypedArray(v.sizeFromShape(c.shape),d),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)p[A]=o?0:h[A];else{let b=m(y,x-1);p[A]=o?h[b]+p[b]:h[A]+p[b]}}let g=n.makeTensorInfo(c.shape,d,p);if(l!=null){let y=N.getUndoAxesPermutation(l),x=Vs({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),x}return g}var fX={kernelName:Ai,backendName:"cpu",kernelFunc:hX};function mX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=KA(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=b7(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var gX={kernelName:Fh,backendName:"cpu",kernelFunc:mX};function yX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;v.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],d=l*a,p=c*a,h=u/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*d*p*h),g=0;for(let y=0;y<i;++y)for(let x=0;x<d;++x){let A=Math.floor(x/a),b=x%a;for(let w=0;w<p;++w){let C=Math.floor(w/a),S=w%a,E=(b*a+S)*h;for(let R=0;R<h;++R){let _=R+E+u*(C+c*(A+l*y));m[g++]=f[_]}}}return n.makeTensorInfo([i,d,p,h],r.dtype,m)}var AX={kernelName:bi,backendName:"cpu",kernelFunc:yX};function dI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s;Ee([r,a],"depthwiseConv2DNative");let u=v.computeStrides(r.shape),d=v.computeStrides(a.shape),p=l;p==null&&(p=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let h=N.computeConv2DInfo(r.shape,a.shape,o,p,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=h,A=x.left,b=x.top,w=h.outChannels/h.inChannels,C=new sn(h.outShape,r.dtype),S=n.data.get(r.dataId).values,E=n.data.get(a.dataId).values,R=C.values;for(let F=0;F<h.batchSize;++F){let _=F*u[0],P=F*C.strides[0];for(let T=0;T<h.outHeight;++T){let O=P+T*C.strides[1],G=T*h.strideHeight-b;for(let K=0;K<f;++K){let z=G+K*g;if(z<0||z>=h.inHeight)continue;let j=K*d[0],W=_+z*u[1];for(let Q=0;Q<h.outWidth;++Q){let te=O+Q*C.strides[2],ae=Q*h.strideWidth-A;for(let Z=0;Z<m;++Z){let oe=ae+Z*y;if(oe<0||oe>=h.inWidth)continue;let re=j+Z*d[1],ge=W+oe*h.inChannels,ve=te,Re=re;for(let Te=0;Te<h.inChannels;++Te){let Pe=S[ge+Te];for(let Ue=0;Ue<w;++Ue)R[ve+Ue]+=Pe*E[Re+Ue];ve+=w,Re+=w}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var xX={kernelName:Va,backendName:"cpu",kernelFunc:dI};function bX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s;Ee([r,a],"depthwiseConv2dNativeBackpropFilter");let d=N.computeConv2DInfo(r.shape,u,o,i,l,c,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new sn(d.filterShape,"float32"),y=d.padInfo.left,x=d.padInfo.top,A=d.outChannels/d.inChannels,b=n.data.get(r.dataId).values,w=new sn(r.shape,r.dtype,b),C=n.data.get(a.dataId).values,S=new sn(a.shape,a.dtype,C);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((x-E)/p)),F=Math.min(d.outHeight,(d.inHeight+x-E)/p);for(let _=0;_<m;++_){let P=Math.max(0,Math.ceil((y-_)/h)),T=Math.min(d.outWidth,(d.inWidth+y-_)/h);for(let O=0;O<d.outChannels;++O){let G=Math.trunc(O/A),K=O%A,z=0;for(let j=0;j<d.batchSize;++j)for(let W=R;W<F;++W){let Q=E+W*p-x;for(let te=P;te<T;++te){let ae=_+te*h-y;z+=w.get(j,Q,ae,G)*S.get(j,W,te,O)}}g.set(z,E,_,G,K)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var vX={kernelName:Oh,backendName:"cpu",kernelFunc:bX};function wX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s;Ee([r,a],"depthwiseConv2DNativeBackpropInput");let d=v.computeStrides(r.shape),p=v.computeStrides(a.shape),h=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),f=new sn(h.inShape,"float32"),m=f.values,[g,y,x]=f.strides,A=n.data.get(r.dataId).values,[b,w,C]=d,S=n.data.get(a.dataId).values,[E,R,F]=p,{batchSize:_,filterHeight:P,filterWidth:T,inChannels:O,inHeight:G,inWidth:K,outChannels:z,outHeight:j,outWidth:W,strideHeight:Q,strideWidth:te}=h,ae=P-1-h.padInfo.top,Z=T-1-h.padInfo.left,oe=z/O;for(let re=0;re<_;++re)for(let ge=0;ge<O;++ge)for(let ve=0;ve<G;++ve){let Re=ve-ae,Te=Math.max(0,Math.ceil(Re/Q)),Pe=Math.min(j,(P+Re)/Q);for(let Ue=0;Ue<K;++Ue){let ot=Ue-Z,Qe=Math.max(0,Math.ceil(ot/te)),Ye=Math.min(W,(T+ot)/te),gt=0;for(let it=Te;it<Pe;++it){let yt=it*Q-Re;for(let _t=Qe;_t<Ye;++_t){let Qn=_t*te-ot,lt=b*re+w*it+C*_t,ms=E*(P-1-yt)+R*(T-1-Qn)+F*ge;for(let kn=0;kn<oe;++kn){let js=ge*oe+kn,es=A[lt+js],gs=S[ms+kn];gt+=es*gs}}}m[g*re+y*ve+x*Ue+ge]=gt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var kX={kernelName:Mh,backendName:"cpu",kernelFunc:wX};function SX(e){let{inputs:t,backend:n}=e,{x:s}=t,r=v.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=ze([r,r],s.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*r+c]=a[c];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var IX={kernelName:zh,backendName:"cpu",kernelFunc:SX},CX={kernelName:hd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,d=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:A,strideHeight:b,strideWidth:w,filterHeight:C,filterWidth:S,dilationHeight:E,dilationWidth:R,outShape:F}=N.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),_=v.sizeFromShape(F),P=F.length,T=v.getArrayFromDType(s.dtype,_);for(let G=0;G<h;++G)for(let K=0;K<y;++K){let z=K*b-A.top;for(let j=0;j<x;++j){let W=j*w-A.left;for(let Q=0;Q<g;++Q){let te=Number.MIN_SAFE_INTEGER;for(let Z=0;Z<C;++Z){let oe=z+Z*E;if(oe>=0&&oe<f)for(let re=0;re<S;++re){let ge=W+re*R;if(ge>=0&&ge<m){let ve=v.locToIndex([G,oe,ge,Q],u,v.computeStrides(s.shape)),Re=v.locToIndex([Z,re,Q],p,v.computeStrides(r.shape)),Te=c[ve]+d[Re];Te>te&&(te=Te)}}}let ae=v.locToIndex([G,K,j,Q],P,v.computeStrides(F));T[ae]=te}}}return{dataId:l.write(v.toTypedArray(T,s.dtype),F,s.dtype),shape:F,dtype:s.dtype}}},TX={kernelName:Bh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=v.toNestedArray(s.shape,c.data.get(s.dataId).values),d=v.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:C,dilationHeight:S,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${Bh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let F=v.toNestedArray(R,c.data.get(a.dataId).values),_=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<p;++T)for(let O=0;O<g;++O){let G=O*A-x.top;for(let K=0;K<y;++K){let z=K*b-x.left;for(let j=0;j<m;++j){let W=Number.MIN_SAFE_INTEGER,Q=0,te=0;for(let ae=0;ae<w;++ae){let Z=G+ae*S;if(Z>=0&&Z<h)for(let oe=0;oe<C;++oe){let re=z+oe*E;if(re>=0&&re<f){let ge=u[T][Z][re][j]+d[ae][oe][j];ge>W&&(W=ge,Q=ae,te=oe)}}}_[Q][te][j]+=F[T][O][K][j]}}}return{dataId:c.write(v.toTypedArray(_,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},NX={kernelName:Lh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=v.toNestedArray(s.shape,c.data.get(s.dataId).values),d=v.toNestedArray(r.shape,c.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:C,dilationHeight:S,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${Lh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let F=v.toNestedArray(R,c.data.get(a.dataId).values),_=v.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<p;++T)for(let O=0;O<g;++O){let G=O*A-x.top;for(let K=0;K<y;++K){let z=K*b-x.left;for(let j=0;j<m;++j){let W=Number.MIN_SAFE_INTEGER,Q=G<0?0:G,te=z<0?0:z;for(let ae=0;ae<w;++ae){let Z=G+ae*S;if(Z>=0&&Z<h)for(let oe=0;oe<C;++oe){let re=z+oe*E;if(re>=0&&re<f){let ge=u[T][Z][re][j]+d[ae][oe][j];ge>W&&(W=ge,Q=Z,te=re)}}}_[T][Q][te][j]+=F[T][O][K][j]}}}return{dataId:c.write(v.toTypedArray(_,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function Ap(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"sum");let i;r.dtype==="bool"?i=qo({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Lr({inputs:{x:r},backend:n});let l=i.shape.length,c=v.parseAxisParam(a,i.shape),u=N.getAxesPermutation(c,l),d=c,p=i;u!=null&&(p=Vs({inputs:{x:i},backend:n,attrs:{perm:u}}),d=N.getInnerMostAxes(d.length,l)),N.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=N.computeOutAndReduceShapes(p.shape,d),m=N.upcastType(p.dtype,"int32"),g=Em(n,h,m),y=v.sizeFromShape(f),x=n.data.get(g.dataId).values,A=n.data.get(p.dataId).values;for(let b=0;b<x.length;++b){let w=b*y,C=0;for(let S=0;S<y;++S)C+=A[w+S];x[b]=C}if(o){let b=N.expandShapeToKeepDim(g.shape,c),w=g;g=Ft({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(w)}return n.disposeIntermediateTensorInfo(i),u!=null&&n.disposeIntermediateTensorInfo(p),g}var EX={kernelName:Ao,backendName:"cpu",kernelFunc:Ap};function RX(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:x}=N.getEinsumPermutation(h,l[g]),A;N.isIdentityPermutation(y)?A=a[g]:(A=Vs({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=Ft({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),p===null?p=A:(p=Rm({inputs:{a:A,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Ap({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var _X={kernelName:fd,backendName:"cpu",kernelFunc:RX};function DX(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Ee([s,r],"eluGrad");let a=new Float32Array(v.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let c=o[l];c>=1?a[l]=i[l]:a[l]=i[l]*(c+1)}return n.makeTensorInfo(r.shape,"float32",a)}var $X={kernelName:Wh,backendName:"cpu",kernelFunc:DX},PX=N.ERF_P,FX=N.ERF_A1,OX=N.ERF_A2,MX=N.ERF_A3,zX=N.ERF_A4,LX=N.ERF_A5,BX=mt(yu,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+PX*n);return t*(1-((((LX*s+zX)*s+MX)*s+OX)*s+FX)*s*Math.exp(-n*n))}),WX={kernelName:yu,backendName:"cpu",kernelFunc:BX};function Dm(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),Ft({inputs:{x:r},backend:n,attrs:{shape:i}})}var VX={kernelName:wi,backendName:"cpu",kernelFunc:Dm},UX=Qt((e,t)=>e/t),rx=vn(Ua,UX),ax={kernelName:Ua,backendName:"cpu",kernelFunc:rx};function pI(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[r,a],u=v.sizeFromShape(c),d=v.getTypedArrayFromDType("float32",u),p=v.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){let y=Tl({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=Tl({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),A=ks({inputs:{real:y,imag:x},backend:n}),{real:b,imag:w}=GX(A,t,n),C=N.mergeRealAndImagArrays(b,w);for(let S=0;S<a;S++){let E=N.getComplexWithIndex(C,S);d[g*a+S]=E.real,p[g*a+S]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(A)}let h=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",p),m=ks({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function GX(e,t,n){let s=v.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(HX(s)){let i=ox(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(l,"float32",i.real),u=n.makeTensorInfo(l,"float32",i.imag),d=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),p=Lr({inputs:{x:d},backend:n}),h=ax.kernelFunc({inputs:{a:c,b:d},backend:n}),f=ax.kernelFunc({inputs:{a:u,b:p},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=N.mergeRealAndImagArrays(a,o),l=jX(i,s,t);return N.splitRealAndImagArrays(l)}}function HX(e){return(e&e-1)==0}function ox(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=N.mergeRealAndImagArrays(e,t),o=n/2,i=N.complexWithEvenIndex(a),l=i.real,c=i.imag,u=[l.length],d=r.makeTensorInfo(u,"float32",l),p=r.makeTensorInfo(u,"float32",c),h=ks({inputs:{real:d,imag:p},backend:r}),f=N.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),A=r.makeTensorInfo(y,"float32",g),b=ks({inputs:{real:x,imag:A},backend:r}),w=ox(l,c,o,s,r),C=w.real,S=w.imag,E=[C.length],R=r.makeTensorInfo(E,"float32",C),F=r.makeTensorInfo(E,"float32",S),_=ks({inputs:{real:R,imag:F},backend:r}),P=ox(m,g,o,s,r),T=P.real,O=P.imag,G=[T.length],K=r.makeTensorInfo(G,"float32",T),z=r.makeTensorInfo(G,"float32",O),j=ks({inputs:{real:K,imag:z},backend:r}),W=N.exponents(n,s),Q=[W.real.length],te=r.makeTensorInfo(Q,"float32",W.real),ae=r.makeTensorInfo(Q,"float32",W.imag),Z=ks({inputs:{real:te,imag:ae},backend:r}),oe=Rm({inputs:{a:Z,b:j},backend:r}),re=gp({inputs:{a:_,b:oe},backend:r}),ge=tx({inputs:{a:_,b:oe},backend:r}),ve=Cl({inputs:{input:re},backend:r}),Re=Cl({inputs:{input:ge},backend:r}),Te=oc({inputs:{input:re},backend:r}),Pe=oc({inputs:{input:ge},backend:r}),Ue=ic({inputs:[ve,Re],backend:r,attrs:{axis:0}}),ot=ic({inputs:[Te,Pe],backend:r,attrs:{axis:0}}),Qe=r.data.get(Ue.dataId).values,Ye=r.data.get(ot.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(ve),r.disposeIntermediateTensorInfo(Te),r.disposeIntermediateTensorInfo(Re),r.disposeIntermediateTensorInfo(Pe),r.disposeIntermediateTensorInfo(Ue),r.disposeIntermediateTensorInfo(ot),{real:Qe,imag:Ye}}function jX(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=N.exponent(r*i,t,n),c=N.getComplexWithIndex(e,i);a+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}n&&(a/=t,o/=t),N.assignToTypedArray(s,a,o,r)}return s}function qX(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Ft({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=pI(i,!1,n),c=Ft({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var XX={kernelName:Vh,backendName:"cpu",kernelFunc:qX};function ix(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||v.inferDtype(r),i=v.getArrayFromDType(o,v.sizeFromShape(s));return ZX(i,r,o),t.makeTensorInfo(s,o,i)}var KX={kernelName:Au,backendName:"cpu",kernelFunc:ix};function ZX(e,t,n){e.fill(t)}var YX={kernelName:Si,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[o,i,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let p=0;p<o;p++){let h=p*l*i*c;for(let f=0;f<i;f++){let m=f*(l*c);for(let g=0;g<l;g++){let y=g*c;for(let x=0;x<c;x++){let A=Math.round(l-g-1),b=h+m+y+x,w=u[b];if(A>=0&&A<l){let C=A*c,S=h+m+C+x;w=u[S]}a[b]=w}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},JX=Qt((e,t)=>Math.floor(e/t)),QX=vn(qa,JX,null,"int32"),eK={kernelName:qa,backendName:"cpu",kernelFunc:QX};function tK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=cI({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=gp({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=nx(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var nK={kernelName:Co,backendName:"cpu",kernelFunc:tK};function sK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=dI({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=gp({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=nx(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var rK={kernelName:To,backendName:"cpu",kernelFunc:sK};function aK(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=v.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,c,u,d]=N.prepareAndValidate(s,r);if(c===0)return n.makeTensorInfo(l,s.dtype,[]);let p=n.data.get(r.dataId).values,h=n.bufferSync(s),f=N7(p,h,s.dtype,c,i,u,d,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var oK={kernelName:Ci,backendName:"cpu",kernelFunc:aK};function iK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Ee([r,a],"gatherV2");let l=v.parseAxisParam(o,r.shape)[0],c=n.data.get(a.dataId).values,u=r.shape[l];for(let b=0;b<c.length;++b){let w=c[b];v.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);let p=v.sizeFromShape(a.shape),h=N.segment_util.collectGatherOpShapeInfo(r,a,l,d),f=Ft({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Ft({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],y=n.bufferSync(m),x=n.bufferSync(f),A=E7(x,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,A.dtype,A.values)}var lK={kernelName:Ii,backendName:"cpu",kernelFunc:iK};function uK(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=Ft({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=pI(i,!0,n),c=Ft({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var cK={kernelName:Uh,backendName:"cpu",kernelFunc:uK},dK=mt(xu,e=>Number.isFinite(e)?1:0,"bool"),pK={kernelName:xu,backendName:"cpu",kernelFunc:dK},hK=mt(bu,e=>Math.abs(e)===1/0?1:0,"bool"),fK={kernelName:bu,backendName:"cpu",kernelFunc:hK},mK=mt(vu,e=>Number.isNaN(e)?1:0,"bool"),gK={kernelName:vu,backendName:"cpu",kernelFunc:mK};function yK(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=P7(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var AK={kernelName:Gh,backendName:"cpu",kernelFunc:yK},xK=mt(wu,e=>Math.log1p(e)),bK={kernelName:wu,backendName:"cpu",kernelFunc:xK},vK=Qt((e,t)=>e&&t),wK=vn(Ri,vK,null,"bool"),kK={kernelName:Ri,backendName:"cpu",kernelFunc:wK},SK=mt(ku,e=>e?0:1,"bool"),IK={kernelName:ku,backendName:"cpu",kernelFunc:SK},CK=Qt((e,t)=>e||t),TK=vn(gd,CK,null,"bool"),NK={kernelName:gd,backendName:"cpu",kernelFunc:TK};function EK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Ee(r,"LRN");let c=r.shape[3],u=c-1,d=n.data.get(r.dataId).values,p=v.sizeFromShape(r.shape),h=new Float32Array(p);function f(m){let g=m%c,y=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,u),A=0;for(;y<=x;y++){let b=d[y];A+=b*b}return A}for(let m=0;m<p;m++){let g=f(m),y=d[m]*Math.pow(o+i*g,-l);h[m]=y}return n.makeTensorInfo(r.shape,r.dtype,h)}var RK={kernelName:yd,backendName:"cpu",kernelFunc:EK};function _K(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s;Ee(o,"LRNGrad");let d=v.sizeFromShape(o.shape),p=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),y=d;for(let x=0;x<y;x++){let A=x%p,b=x-A+Math.max(0,A-i),w=x-A+Math.min(p,A+i+1),C=0;for(let S=b;S<w;S++)C+=Math.pow(f[S],2);C=c*C+l;for(let S=b;S<w;S++){let E=-2*c*u*f[S]*m[x]/C;x===S&&(E+=Math.pow(C,-u)),E*=h[x],g[S]+=E}}return n.makeTensorInfo(o.shape,r.dtype,g)}var DK={kernelName:Hh,backendName:"cpu",kernelFunc:_K};function hI(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,c=l.length,u=v.parseAxisParam(a,l),d=u,p=N.getAxesPermutation(d,c),h=i.data.get(r.dataId).values;if(p!=null){let b=new Array(c);for(let w=0;w<b.length;w++)b[w]=l[p[w]];h=JA(h,l,r.dtype,p,b),d=N.getInnerMostAxes(d.length,c),l=b}Ee(r,"max"),N.assertAxesAreInnerMostDims("max",d,c);let[f,m]=N.computeOutAndReduceShapes(l,d),g=v.sizeFromShape(m),y=O7(h,g,f,r.dtype),x=i.write(y,f,r.dtype),A=f;return o&&(A=N.expandShapeToKeepDim(f,u)),{dataId:x,shape:A,dtype:r.dtype}}var $K={kernelName:Qa,backendName:"cpu",kernelFunc:hI};function PK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ee(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))d=Lr({inputs:{x:r},backend:n});else{let p=n.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=sx(p,r.shape,r.dtype,h,u,"max");d=n.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}var FK={kernelName:to,backendName:"cpu",kernelFunc:PK};function OK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s;Ee(r,"maxPool3d");let u=N.computePool3DInfo(r.shape,a,o,1,i,l,c),d=n.data.get(r.dataId).values,p=uI(d,r.shape,r.dtype,v.computeStrides(r.shape),u,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var MK={kernelName:Ad,backendName:"cpu",kernelFunc:OK};function zK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=s;Ee([r,a],"maxPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=n.bufferSync(a),p=Tq(d,u),h=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,x=u.dilationWidth,A=u.effectiveFilterDepth,b=u.effectiveFilterHeight,w=u.effectiveFilterWidth,C=A-1-u.padInfo.front,S=w-1-u.padInfo.left,E=b-1-u.padInfo.top,R=ze(a.shape,"float32"),F=n.bufferSync(r);for(let _=0;_<u.batchSize;++_)for(let P=0;P<u.inChannels;++P)for(let T=0;T<u.inDepth;++T)for(let O=0;O<u.inHeight;++O)for(let G=0;G<u.inWidth;++G){let K=T-C,z=O-E,j=G-S,W=0;for(let Q=0;Q<A;Q+=g){let te=(K+Q)/h;if(!(te<0||te>=u.outDepth||Math.floor(te)!==te))for(let ae=0;ae<b;ae+=y){let Z=(z+ae)/f;if(!(Z<0||Z>=u.outHeight||Math.floor(Z)!==Z))for(let oe=0;oe<w;oe+=x){let re=(j+oe)/m;if(re<0||re>=u.outWidth||Math.floor(re)!==re)continue;let ge=A*b*w-1-p.get(_,te,Z,re,P),ve=Q*b*w+ae*w+oe,Re=ge===ve?1:0;if(Re===0)continue;W+=F.get(_,te,Z,re,P)*Re}}}R.set(W,_,T,O,G,P)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var LK={kernelName:qh,backendName:"cpu",kernelFunc:zK};function BK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Ee([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=n.data.get(i.dataId).values,f=ze(p.outShape,i.dtype,lI(h,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,x=p.dilationWidth,A=p.effectiveFilterHeight,b=p.effectiveFilterWidth,w=b-1-p.padInfo.left,C=A-1-p.padInfo.top,S=ze(i.shape,"float32"),E=n.data.get(r.dataId).values,R=ze(r.shape,"float32",E);for(let F=0;F<p.batchSize;++F)for(let _=0;_<p.inChannels;++_)for(let P=0;P<p.inHeight;++P)for(let T=0;T<p.inWidth;++T){let O=P-C,G=T-w,K=0;for(let z=0;z<A;z+=y){let j=(O+z)/m;if(!(j<0||j>=p.outHeight||Math.floor(j)!==j))for(let W=0;W<b;W+=x){let Q=(G+W)/g;if(Q<0||Q>=p.outWidth||Math.floor(Q)!==Q)continue;let te=A*b-1-f.get(F,j,Q,_),ae=z*b+W,Z=te===ae?1:0;if(Z===0)continue;K+=R.get(F,j,Q,_)*Z}}S.set(K,F,P,T,_)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}var WK={kernelName:jh,backendName:"cpu",kernelFunc:BK};function VK(e,t,n,s,r){let a=v.computeStrides(t),o=sx(e,t,n,a,r,"max"),i=lI(e,t,n,r,!0,s);return[o.values,i.values]}var UK={kernelName:Xh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Ee(s,"MaxPoolWithArgmax");let c=l.data.get(s.dataId).values,u=N.computePool2DInfo(s.shape,r,a,[1,1],o),[d,p]=VK(c,s.shape,s.dtype,i,u),h=l.write(d,u.outShape,s.dtype),f=l.write(p,u.outShape,s.dtype);return[{dataId:h,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function GK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=v.parseAxisParam(a,r.shape),c=N.computeOutAndReduceShapes(r.shape,i)[1],u=v.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=qo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(h);let f=rx({inputs:{a:h,b:p},backend:n});d.push(f);let m=Ap({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var HK={kernelName:no,backendName:"cpu",kernelFunc:GK};function jK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ee(r,"min");let i=v.parseAxisParam(a,r.shape),l=i,c=N.getAxesPermutation(l,r.shape.length),u=r;c!=null&&(u=Vs({inputs:{x:r},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];(Number.isNaN(w)||w<A)&&(A=w)}f[y]=A}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),x=Ft({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var qK={kernelName:so,backendName:"cpu",kernelFunc:jK};function XK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Ee(r,"mirrorPad");let i=a.map((A,b)=>A[0]+r.shape[b]+A[1]),l=a.map(A=>A[0]),c=a.map((A,b)=>A[0]+r.shape[b]),u=o==="reflect"?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,h=v.computeStrides(r.shape),f=v.sizeFromShape(i),m=i.length,g=v.computeStrides(i),y=v.getTypedArrayFromDType(r.dtype,f);for(let A=0;A<f;A++){let b=v.indexToLoc(A,m,g);for(let C=0;C<m;C++)b[C]<l[C]?b[C]=l[C]*2-b[C]-u:b[C]>=c[C]&&(b[C]=(c[C]-1)*2-b[C]+u);b=b.map((C,S)=>C-l[S]);let w=v.locToIndex(b,p,h);y[A]=d[w]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}var KK={kernelName:ao,backendName:"cpu",kernelFunc:XK},ZK=Qt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),YK=vn(Su,ZK),JK={kernelName:Su,backendName:"cpu",kernelFunc:YK},QK=pi(wh());function fI(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=v.parseAxisParam([i],r.shape),c=hI({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=N.expandShapeToKeepDim(c.shape,l),d=Ft({inputs:{x:c},backend:n,attrs:{shape:u}}),p=tx({inputs:{a:r,b:d},backend:n}),h=I7({inputs:{x:p},backend:n}),f=Ap({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=Ft({inputs:{x:f},backend:n,attrs:{shape:u}}),g=rx({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var eZ={kernelName:xo,backendName:"cpu",kernelFunc:fI};function tZ(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Ee(r,"multinomial");let l=i?r:fI({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],d=n.data.get(l.dataId).values,p=[c,a],h=v.makeZerosTypedArray(v.sizeFromShape(p),"int32");for(let f=0;f<c;++f){let m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let A=1;A<g.length;++A)g[A]=g[A-1]+d[m+A];let y=QK.alea(o.toString()),x=f*a;for(let A=0;A<a;++A){let b=y();h[x+A]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){h[x+A]=w;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",h)}var nZ={kernelName:Kh,backendName:"cpu",kernelFunc:tZ},sZ=Qs.nonMaxSuppressionV3Impl;function rZ(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Ee(r,"NonMaxSuppression");let c=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,{selectedIndices:d}=sZ(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var aZ={kernelName:$i,backendName:"cpu",kernelFunc:rZ},oZ=Qs.nonMaxSuppressionV4Impl;function iZ(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s;Ee(r,"NonMaxSuppressionPadded");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:h}=oZ(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var lZ={kernelName:Iu,backendName:"cpu",kernelFunc:iZ},uZ=Qs.nonMaxSuppressionV5Impl;function cZ(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s;Ee(r,"NonMaxSuppressionWithScore");let u=n.data.get(r.dataId).values,d=n.data.get(a.dataId).values,p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=uZ(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var dZ={kernelName:Pi,backendName:"cpu",kernelFunc:cZ};function pZ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;Ee(r,"oneHot");let l=v.sizeFromShape(r.shape),c=new Float32Array(l*a);c.fill(i);let u=n.data.get(r.dataId).values;for(let d=0;d<l;++d)u[d]>=0&&u[d]<a&&(c[d*a+u[d]]=o);return n.makeTensorInfo([...r.shape,a],"int32",c)}var hZ={kernelName:Oi,backendName:"cpu",kernelFunc:pZ};function $m(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Cl({inputs:{input:s},backend:n}),a=$m({inputs:{x:r},backend:n}),o=oc({inputs:{input:s},backend:n}),i=$m({inputs:{x:o},backend:n}),l=ks({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return ix({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var fZ={kernelName:Qi,backendName:"cpu",kernelFunc:$m};function mI(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Cl({inputs:{input:s},backend:n}),a=mI({inputs:{x:r},backend:n}),o=oc({inputs:{input:s},backend:n}),i=$m({inputs:{x:o},backend:n}),l=ks({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return ix({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var mZ={kernelName:Fi,backendName:"cpu",kernelFunc:mI};function gI(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Dm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Dm({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=ic({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var gZ={kernelName:Mi,backendName:"cpu",kernelFunc:gI};function yZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Ee(r,"pad");let i=a.map((x,A)=>x[0]+r.shape[A]+x[1]),l=a.map(x=>x[0]),c=n.data.get(r.dataId).values,u=v.sizeFromShape(r.shape),d=r.shape.length,p=v.computeStrides(r.shape),h=v.sizeFromShape(i),f=i.length,m=v.computeStrides(i),g=v.getTypedArrayFromDType(r.dtype,h);o!==0&&g.fill(o);for(let x=0;x<u;x++){let b=v.indexToLoc(x,d,p).map((C,S)=>C+l[S]),w=v.locToIndex(b,f,m);g[w]=c[x]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var yI={kernelName:io,backendName:"cpu",kernelFunc:yZ},AZ=Qt((e,t)=>Math.pow(e,t)),xZ=vn(lo,AZ),bZ={kernelName:lo,backendName:"cpu",kernelFunc:xZ};function vZ(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=QA(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var wZ={kernelName:Cu,backendName:"cpu",kernelFunc:vZ},kZ=mt(Tu,e=>1/e),SZ={kernelName:Tu,backendName:"cpu",kernelFunc:kZ};function IZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ee(r,"resizeBilinear");let l=v.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(v.sizeFromShape([d,c,u,f])),y=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],A=0,b=y[0]/x[0],w=y[1]/x[1];for(let C=0;C<d;C++)for(let S=0;S<c;S++){let E;o?E=b*(S+.5)-.5:E=b*S;let R=Math.max(0,Math.floor(E)),F=E-R,_=Math.min(p-1,Math.ceil(E)),P=C*l[0]+R*l[1],T=C*l[0]+_*l[1];for(let O=0;O<u;O++){let G;o?G=w*(O+.5)-.5:G=w*O;let K=Math.max(0,Math.floor(G)),z=G-K,j=Math.min(h-1,Math.ceil(G)),W=P+K*l[2],Q=T+K*l[2],te=P+j*l[2],ae=T+j*l[2];for(let Z=0;Z<f;Z++){let oe=m[W+Z],re=m[Q+Z],ge=m[te+Z],ve=m[ae+Z],Re=oe+(ge-oe)*z,Te=re+(ve-re)*z,Pe=Re+(Te-Re)*F;g[A++]=Pe}}}return n.makeTensorInfo([d,c,u,f],"float32",g)}var CZ={kernelName:po,backendName:"cpu",kernelFunc:IZ};function TZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ee([a,r],"resizeBilinearGrad");let i=v.computeStrides(r.shape),[l,c,u,d]=r.shape,[,p,h]=a.shape,f=new Float32Array(l*c*u*d),m=[o&&p>1?c-1:c,o&&h>1?u-1:u],g=[o&&p>1?p-1:p,o&&h>1?h-1:h],y=m[0]/g[0],x=m[1]/g[1],A=n.data.get(a.dataId).values,b=0;for(let w=0;w<l;w++){let C=w*i[0];for(let S=0;S<p;S++){let E=S*y,R=Math.floor(E),F=Math.min(Math.ceil(E),c-1),_=C+R*i[1],P=C+F*i[1],T=E-R,O=1-T;for(let G=0;G<h;G++){let K=G*x,z=Math.floor(K),j=Math.min(Math.ceil(K),u-1),W=K-z,Q=1-W,te=_+z*i[2],ae=_+j*i[2],Z=P+z*i[2],oe=P+j*i[2],re=O*Q,ge=O*W,ve=T*Q,Re=T*W;for(let Te=0;Te<d;Te++){let Pe=A[b++];f[te+Te]+=Pe*re,f[ae+Te]+=Pe*ge,f[Z+Te]+=Pe*ve,f[oe+Te]+=Pe*Re}}}}return n.makeTensorInfo([l,u,c,d],"float32",f)}var NZ={kernelName:Yh,backendName:"cpu",kernelFunc:TZ};function EZ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ee(r,"resizeNearestNeighbor");let l=v.computeStrides(r.shape),[c,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*c*u*f),y=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],A=y[0]/x[0],b=y[1]/x[1],w=0;for(let C=0;C<d;C++){let S=C*l[0];for(let E=0;E<c;E++){let R=o?A*(E+.5):A*E,F=Math.min(p-1,a?Math.round(R):Math.floor(R));o&&(F=Math.max(0,F));let _=S+F*l[1];for(let P=0;P<u;P++){let T=o?b*(P+.5):b*P,O=Math.min(h-1,a?Math.round(T):Math.floor(T));o&&(O=Math.max(0,O));let G=_+O*l[2];for(let K=0;K<f;K++){let z=m[G+K];g[w++]=z}}}}return n.makeTensorInfo([d,c,u,f],r.dtype,g)}var RZ={kernelName:Nu,backendName:"cpu",kernelFunc:EZ};function _Z(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ee([a,r],"resizeNearestNeighborGrad");let i=v.computeStrides(r.shape),l=v.computeStrides(a.shape),[c,u,d,p]=r.shape,[,h,f]=a.shape,m=new Float32Array(c*u*d*p),g=n.data.get(a.dataId).values,y=[o&&h>1?u-1:u,o&&f>1?d-1:d],x=[o&&h>1?h-1:h,o&&f>1?f-1:f],A=y[0]/x[0],b=y[1]/x[1],w=1/A,C=1/b,S=Math.ceil(w)*2+2,E=Math.ceil(C)*2+2;for(let R=0;R<c;R++){let F=R*i[0];for(let _=0;_<u;_++){let P=F+_*i[1],T=Math.floor(_*w),O=Math.floor(T-S/2);for(let G=0;G<d;G++){let K=P+G*i[2],z=Math.floor(G*C),j=Math.floor(z-E/2);for(let W=0;W<p;W++){let Q=0;for(let te=0;te<S;te++){let ae=te+O;if(ae<0||ae>=h)continue;let Z=F+ae*l[1],oe=ae*A,re=Math.min(u-1,o?Math.round(oe):Math.floor(oe));if(_===re)for(let ge=0;ge<E;ge++){let ve=ge+j;if(ve<0||ve>=f)continue;let Re=Z+ve*l[2],Te=ve*b,Pe=Math.min(d-1,o?Math.round(Te):Math.floor(Te));G===Pe&&(Q+=g[Re+W])}}m[K+W]=Q}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var DZ={kernelName:Zh,backendName:"cpu",kernelFunc:_Z};function $Z(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Ee(r,"reverse");let o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Lr({inputs:{x:r},backend:n});let l=new sn(r.shape,r.dtype),c=n.bufferSync(r);for(let u=0;u<l.size;u++){let d=l.indexToLoc(u),p=d.slice();i.forEach(h=>p[h]=r.shape[h]-1-p[h]),l.set(c.get(...p),...d)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var PZ={kernelName:Bi,backendName:"cpu",kernelFunc:$Z},FZ={kernelName:el,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[c,u,d,p]=s.shape,[h,f]=N.getImageCenter(o,u,d),m=255,g=Math.sin(r),y=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<c;b++){let w=b*d*u*p;for(let C=0;C<u;C++){let S=C*(d*p);for(let E=0;E<d;E++){let R=E*p;for(let F=0;F<p;F++){let _=[c,C,E,F],P=_[2],T=_[1],O=(P-h)*y-(T-f)*g,G=(P-h)*g+(T-f)*y;O=Math.round(O+h),G=Math.round(G+f);let K=a;if(typeof a!="number"&&(F===3?K=m:K=a[F]),O>=0&&O<d&&G>=0&&G<u){let j=G*(d*p),W=O*p,Q=w+j+W+F;K=x[Q]}let z=w+S+R+F;l[z]=K}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},OZ=mt(Wi,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),MZ={kernelName:Wi,backendName:"cpu",kernelFunc:OZ};function AI(e,t,n,s,r,a,o,i,l,c){let u=[s/r,r],d=e.values,p=t.values;if(s===0)return ze(n,t.dtype);let h=ze(u,t.dtype);h.values.fill(l);for(let f=0;f<a;f++){let m=[],g=0;for(let y=0;y<o;y++){let x=d[f*o+y];m.push(x),g+=x*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<r;y++)c?h.values[g*r+y]+=p[f*r+y]:h.values[g*r+y]=t.rank===0?p[0]:p[f*r+y]}return h}function zZ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=AI(h,f,o,d,c,l,i,u,0,p);return n.makeTensorInfo(o,m.dtype,m.values)}var LZ={kernelName:Vi,backendName:"cpu",kernelFunc:zZ};function BZ(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Ee([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=Ln(r.dtype,a.dtype),d=v.makeZerosTypedArray(v.sizeFromShape(r.shape),u),p=0,h=o===0||o>1||r.shape.length===1?1:v.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?d[p++]=l[f]:d[p++]=c[f];return n.makeTensorInfo(r.shape,u,d)}var WZ={kernelName:Ui,backendName:"cpu",kernelFunc:BZ},VZ=N.SELU_SCALEALPHA,UZ=N.SELU_SCALE,GZ=mt(Eu,e=>e>=0?UZ*e:VZ*(Math.exp(e)-1)),HZ={kernelName:Eu,backendName:"cpu",kernelFunc:GZ},jZ=mt(Ru,e=>e<0?-1:e>0?1:0),qZ={kernelName:Ru,backendName:"cpu",kernelFunc:jZ},XZ=mt(mo,e=>Math.sin(e)),KZ={kernelName:mo,backendName:"cpu",kernelFunc:XZ},ZZ=mt(Hi,e=>Math.sinh(e)),YZ={kernelName:Hi,backendName:"cpu",kernelFunc:ZZ},JZ=11920928955078125e-23,xI=Math.log(JZ)+2,QZ=mt(_u,e=>{let t=e>-xI,n=e<xI,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),eY={kernelName:_u,backendName:"cpu",kernelFunc:QZ};function tY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Ee([r],"spaceToBatchND");let i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<r.shape.length;++C)l.push([0,0]);let c=yI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=Ft({inputs:{x:c},backend:n,attrs:{shape:u}}),x=Vs({inputs:{x:m},backend:n,attrs:{perm:d}}),w=Ft({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),w}var nY={kernelName:ji,backendName:"cpu",kernelFunc:tY};function sY(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[d,p,h,f,m]=G7(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var rY={kernelName:bd,backendName:"cpu",kernelFunc:sY};function aY(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[c,u,d]=H7(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var oY={kernelName:Du,backendName:"cpu",kernelFunc:aY};function iY(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=ex(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var lY={kernelName:vd,backendName:"cpu",kernelFunc:iY};function uY(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[c,u]=ex(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var cY={kernelName:wd,backendName:"cpu",kernelFunc:uY};function dY(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=N.calculateShapes(a,r,i),h=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],y=AI(f,m,i,p,u,c,l,d,g,h);return n.makeTensorInfo(i,y.dtype,y.values)}var pY={kernelName:kd,backendName:"cpu",kernelFunc:dY};function hY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=Tl({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[i]+=d,h})}var fY={kernelName:qi,backendName:"cpu",kernelFunc:hY},mY={kernelName:$u,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Ee(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},gY=mt(So,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),yY={kernelName:So,backendName:"cpu",kernelFunc:gY};function AY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s;Ee(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Mt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=Ft({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=Mt.computeOutShape(x,A,b),S=Tl({inputs:{x:r},backend:n,attrs:{begin:x,size:C}});w=Ft({inputs:{x:S},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(S)}else{let C=n.bufferSync(r),S=q7(h,C,b,x);w=n.makeTensorInfo(f,S.dtype,S.values)}return w}var xY={kernelName:Xi,backendName:"cpu",kernelFunc:AY};function bY(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.data.get(u.dataId).values,h=n.data.get(d.dataId).values,[f,m]=X7(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var vY={kernelName:Sd,backendName:"cpu",kernelFunc:bY};function wY(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[c,u,d]=K7(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var kY={kernelName:Jh,backendName:"cpu",kernelFunc:wY};function SY(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=Z7(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var IY={kernelName:Qh,backendName:"cpu",kernelFunc:SY},CY=mt(Ki,e=>Math.tan(e)),TY={kernelName:Ki,backendName:"cpu",kernelFunc:CY},NY=mt(wo,e=>Math.tanh(e)),EY={kernelName:wo,backendName:"cpu",kernelFunc:NY};function RY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Ee(r,"tile");let o=J7(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var _Y={kernelName:Zr,backendName:"cpu",kernelFunc:RY};function DY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Ee(r,"topk");let i=n.data.get(r.dataId).values,[l,c]=eI(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var $Y={kernelName:Zi,backendName:"cpu",kernelFunc:DY};function PY(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=n,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=v.computeStrides(r.shape),x=y[0],A=y[1],b=y[2],w=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(g));w.fill(l);let C=s.data.get(r.dataId).values,S=s.data.get(a.dataId).values;for(let R=0;R<u;++R){let F=a.shape[0]===1?S:S.subarray(R*8,R*8+8);for(let _=0;_<f;++_)for(let P=0;P<m;++P)for(let T=0;T<h;++T){let O,G=F[6]*P+F[7]*_+1;if(G===0)continue;let K=(F[0]*P+F[1]*_+F[2])/G,z=(F[3]*P+F[4]*_+F[5])/G,j=bI(K,p,i),W=bI(z,d,i);switch(o){case"nearest":O=BY(C,d,p,x,A,b,R,W,j,T,l);break;case"bilinear":O=WY(C,d,p,x,A,b,R,W,j,T,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let Q=R*x+_*A+P*b+T;w[Q]=O}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}var FY={kernelName:Yi,backendName:"cpu",kernelFunc:PY};function bI(e,t,n){switch(n){case"reflect":return OY(e,t);case"wrap":return MY(e,t);case"nearest":return LY(e,t);case"constant":default:return zY(e,t)}}function OY(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return v.clamp(0,n,t-1)}function MY(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return v.clamp(0,n,t-1)}function zY(e,t){return e}function LY(e,t){return v.clamp(0,e,t-1)}function xp(e,t,n,s,r,a,o,i,l,c,u){let d=o*s+i*r+l*a+c;return 0<=i&&i<t&&0<=l&&l<n?e[d]:u}function BY(e,t,n,s,r,a,o,i,l,c,u){let d=Math.round(i),p=Math.round(l);return xp(e,t,n,s,r,a,o,d,p,c,u)}function WY(e,t,n,s,r,a,o,i,l,c,u){let d=Math.floor(i),p=Math.floor(l),h=d+1,f=p+1,m=(f-l)*xp(e,t,n,s,r,a,o,d,p,c,u)+(l-p)*xp(e,t,n,s,r,a,o,d,f,c,u),g=(f-l)*xp(e,t,n,s,r,a,o,h,p,c,u)+(l-p)*xp(e,t,n,s,r,a,o,h,f,c,u);return(h-i)*m+(i-d)*g}function VY(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Ee(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:c}=tI(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var UY={kernelName:ef,backendName:"cpu",kernelFunc:VY};function GY(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),c=0;for(let h=0;h<o;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o).fill(0),d=r.shape.slice();d[a]=1;let p=new Array(i);for(let h=0;h<p.length;h++){u[a]=h;let f=Tl({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});p[h]=Ft({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return p}var HY={kernelName:Ji,backendName:"cpu",kernelFunc:GY};function jY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Ee(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,c=[],u=[],d=i-l,p=a;for(let f=0;f<d;++f){let m=Dm({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,u.push(m)}for(let f=0;f<o;++f){let m=v.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=k7({inputs:{a:g,b:p},backend:n}),x=qo({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),A=Rm({inputs:{a:x,b:r},backend:n}),b=Ap({inputs:{x:A},backend:n,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(g),u.push(y),u.push(x),u.push(A),u.push(b)}let h=gI({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var qY={kernelName:Id,backendName:"cpu",kernelFunc:jY},XY=[tq,qH,sq,aq,QH,iq,uq,dq,hq,mq,yq,xq,vq,Sq,Cq,Eq,_q,$q,Fq,Qj,Mq,Lq,Wq,Uq,YH,tj,Hq,XH,qq,Kq,Jq,eX,Zq,rX,oX,nX,lX,cX,pX,fX,gX,AX,xX,vX,kX,IX,CX,NX,TX,ax,_X,jj,$X,nj,WX,sj,VX,aj,XX,KX,YX,ij,eK,nK,rK,oK,lK,uj,dj,KH,cK,Xq,pK,fK,gK,qj,hj,mj,AK,yj,bK,kK,IK,NK,RK,DK,xj,FK,MK,LK,WK,UK,$K,HK,qK,vj,KK,JK,nZ,kj,Ij,aZ,lZ,dZ,Tj,hZ,mZ,gZ,yI,bZ,Kj,Rj,wZ,ZH,SZ,Zj,Yj,Jj,CZ,NZ,RZ,DZ,PZ,FZ,MZ,Dj,LZ,WZ,HZ,Pj,qZ,KZ,YZ,Fj,eZ,eY,nY,rY,oY,lY,cY,pY,fY,zj,mY,Bj,yY,xY,vY,kY,IY,Gj,EX,TY,EY,_Y,$Y,Nj,FY,UY,HY,qY,fZ];for(let e of XY)ur(e);var vI={};Me(vI,{assertNotComplex:()=>uc,bindCanvasToFramebuffer:()=>oJ,bindColorTextureToFramebuffer:()=>zm,bindTextureToProgramUniformSampler:()=>OI,bindTextureUnit:()=>$I,bindVertexBufferToProgramAttribute:()=>cx,callAndCheck:()=>ke,canBeRepresented:()=>wI,createFragmentShader:()=>II,createFramebuffer:()=>DI,createProgram:()=>CI,createStaticIndexBuffer:()=>EI,createStaticVertexBuffer:()=>NI,createTexture:()=>RI,createVertexShader:()=>SI,getBatchDim:()=>El,getExtensionOrThrow:()=>vp,getFramebufferErrorMessage:()=>MI,getMaxTexturesInShader:()=>WI,getNumChannels:()=>rJ,getProgramUniformLocation:()=>FI,getProgramUniformLocationOrThrow:()=>PI,getRowsCols:()=>Rl,getShapeAs3D:()=>Lm,getTextureShapeFromLogicalShape:()=>LI,getWebGLDisjointQueryTimerVersion:()=>VI,getWebGLErrorMessage:()=>kI,getWebGLMaxTextureSize:()=>BI,hasExtension:()=>Us,isCapableOfRenderingToFloatTexture:()=>UI,isDownloadFloatTextureEnabled:()=>GI,isReshapeFree:()=>kp,isWebGLFenceEnabled:()=>HI,isWebGLVersionEnabled:()=>px,linkProgram:()=>TI,resetMaxTextureSize:()=>iJ,resetMaxTexturesInShader:()=>lJ,unbindColorTextureFromFramebuffer:()=>dx,unbindTextureUnit:()=>aJ,validateFramebuffer:()=>wp,validateProgram:()=>Mm,validateTextureSize:()=>_I});var Nl={},lx={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Pm(e,t){Nl[e]=t}function Br(e){if(!(e in Nl)){let n=ZY(e);if(n!==null)Nl[e]=n;else return console.log("Could not get context for WebGL version",e),null}let t=Nl[e];return t==null||t.isContextLost()?(delete Nl[e],Br(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Nl[e])}function KY(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function ZY(e){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let t=KY(e);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Nl[e]},!1),e===1?t.getContext("webgl",lx)||t.getContext("experimental-webgl",lx):t.getContext("webgl2",lx)}var Fm=(e=>(e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH",e))(Fm||{}),sr=(e=>(e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD",e))(sr||{}),$n=(e=>(e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",e))($n||{});function bp(e,t){return[t,e]}function YY(e,t){return e*t}function Om(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function lc(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function JY(e,t){let[n,s]=lc(e,t);return n*s*4}function ux(e,t){let n=e,s,r,a,o,i,l,c,u,d,p;return Y().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,u=1,d=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function ke(e,t){let n=t();return Y().getBool("DEBUG")&&QY(e),n}function QY(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+kI(e,t))}var eJ=596e-10,tJ=65504;function wI(e){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||eJ<Math.abs(e)&&Math.abs(e)<tJ)}function kI(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function vp(e,t){return ia(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function SI(e,t){let n=ia(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ke(e,()=>e.shaderSource(n,t)),ke(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function II(e,t){let n=ia(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ke(e,()=>e.shaderSource(n,t)),ke(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw sJ(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var nJ=/ERROR: [0-9]+:([0-9]+):/g;function sJ(e,t){let n=nJ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((d,p)=>v.rightPad((p+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let l=o.slice(0,s-1),c=o.slice(s-1,s),u=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function CI(e){return ia(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function TI(e,t){if(ke(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Mm(e,t){if(ke(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function NI(e,t){let n=ia(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),ke(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function EI(e,t){let n=ia(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),ke(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function rJ(){return Y().getNumber("WEBGL_VERSION")===2?1:4}function RI(e){return ia(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function _I(e,t){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function DI(e){return ia(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function cx(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),ke(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),ke(e,()=>e.enableVertexAttribArray(i)),!0)}function $I(e,t,n){zI(e,n),ke(e,()=>e.activeTexture(e.TEXTURE0+n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function aJ(e,t){zI(e,t),ke(e,()=>e.activeTexture(e.TEXTURE0+t)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function PI(e,t,n){return ia(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function FI(e,t,n){return e.getUniformLocation(t,n)}function OI(e,t,n,s){ke(e,()=>$I(e,t,s)),ke(e,()=>e.uniform1i(n,s))}function oJ(e){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ke(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function zm(e,t,n){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),ke(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function dx(e,t){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ke(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function wp(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+MI(e,t))}function MI(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ia(e,t,n){let s=ke(e,()=>t());if(s==null)throw new Error(n);return s}function zI(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function El(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function Rl(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Lm(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[El(e),...Rl(e)]),t}function LI(e,t=!1){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?v.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let s=v.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=El(e),a=2,o=2;return e.length&&([a,o]=Rl(e)),s=r*(a/2)*(o/2),v.sizeToSquarishShape(s).map(i=>i*2)}return v.sizeToSquarishShape(s)}function Bm(e){return e%2==0}function kp(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||Bm(n)&&Bm(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Bm(e[0])&&Bm(t[0])}var Wm,Vm;function BI(e){if(Wm==null){let t=Br(e);Wm=t.getParameter(t.MAX_TEXTURE_SIZE)}return Wm}function iJ(){Wm=null}function lJ(){Vm=null}function WI(e){if(Vm==null){let t=Br(e);Vm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Vm)}function VI(e){if(e===0)return 0;let t,n=Br(e);return Us(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Us(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Us(e,t){return e.getExtension(t)!=null}function px(e){try{if(Br(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function UI(e){if(e===0)return!1;let t=Br(e);if(e===1){if(!Us(t,"OES_texture_float"))return!1}else if(!Us(t,"EXT_color_buffer_float"))return!1;return hx(t)}function GI(e){if(e===0)return!1;let t=Br(e);if(e===1){if(!Us(t,"OES_texture_float")||!Us(t,"WEBGL_color_buffer_float"))return!1}else{if(Us(t,"EXT_color_buffer_float"))return hx(t);let s="EXT_color_buffer_half_float";if(Us(t,s)){let r=t.getExtension(s);return uJ(t,r)}return!1}return hx(t)}function hx(e){let t=ux(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function uJ(e,t){let n=ux(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function HI(e){return e!==2?!1:Br(e).fenceSync!=null}function uc(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var $e=Y();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>px(2)?2:px(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>BI($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>WI($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=$e.getNumber("WEBGL_VERSION");return e===0?0:VI(e)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ou.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>UI($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>GI($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>HI($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ou.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Gn(){let e,t,n,s,r,a,o,i,l,c;return Y().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}function _l(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function Um(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function cJ(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function dJ(e,t,n="index"){let s=e.map((a,o)=>o),r=cJ(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function fx(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function mx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var jI=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:qI}=N;function pJ(e,t,n){let s=[];if(e.forEach(h=>{let f=v.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=gx(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>hJ(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=Gn(),l=gJ(i),c,u,d=xJ(i);return t.isPacked?(c=fJ(t.logicalShape,o,n.enableShapeUniforms),u=AJ(i)):(c=mJ(t.logicalShape,o,n.enableShapeUniforms),u=yJ(i)),n.packedInputs&&(d+=kJ),[d,l,u,r,c,a,n.userCode].join(`
`)}function cc(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return FJ(e,t);case 1:return MJ(e,t);case 2:return LJ(e,t);case 3:return WJ(e,t);case 4:return UJ(e,t);case 5:return GJ(e);case 6:return HJ(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function XI(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return PJ(e);case 1:return OJ(e,t);case 2:return zJ(e,t);case 3:return BJ(e,t);default:return VJ(e,t)}}function hJ(e,t,n=!1,s){let r="";n?r+=XI(e,s):r+=cc(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=jJ(e,t):r+=qJ(e,t)),r}function fJ(e,t,n){switch(e.length){case 0:return KI();case 1:return SJ(e,t,n);case 2:return DJ(e,t,n);case 3:return CJ(e,t,n);default:return NJ(e,t,n)}}function mJ(e,t,n){switch(e.length){case 0:return KI();case 1:return IJ(e,t,n);case 2:return $J(e,t,n);case 3:return TJ(e,t,n);case 4:return EJ(e,t,n);case 5:return RJ(e,t);case 6:return _J(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function gJ(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function yJ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function AJ(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function xJ(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${bJ}
    ${vJ}
    ${wJ}
  `}var bJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vJ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,wJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,kJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function KI(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function SJ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function IJ(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function CJ(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function TJ(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Um(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=_l(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function NJ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+i,l=`b${c}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function EJ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Um(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=_l(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function RJ(e,t){let n=_l(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function _J(e,t){let n=_l(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function DJ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function $J(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Dl(e){return`offset${e}`}function PJ(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Gn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function FJ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Dl(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function OJ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=Gn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function MJ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${dc(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Dl(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function zJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=Gn();if(a!=null&&v.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function LJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&v.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let p=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=v.squeezeShape(n),l=o;if(l.length<n.length){let p=pc(e,l),h=["row","col"];return`
      ${cc(p,t)}
      float ${r}(int row, int col) {
        return ${r}(${hc(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${dc(e)}
      }
    `;let c=a[0],u=a[1],d=Dl(s);return u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function BJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let p=n.slice(1),h=[1,2],f=pc(e,p),m=["b","row","col"];return`
        ${XI(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${hc(m,h)});
        }
      `}let i=Gn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],c=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function WJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=v.squeezeShape(n),c=i;if(c.length<n.length){let m=pc(e,c),g=["row","col","depth"];return`
        ${cc(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${hc(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${dc(e)}
      }
    `;let u=e.shapeInfo.texShape,d=u[0],p=u[1],h=e.shapeInfo.flatOffset;if(p===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(p===o&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=Dl(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${s}, uv);
      }
  `}function VJ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Gn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=l[0],u=l[1],d=Math.ceil(a[o-1]/2),p=d*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${n}, uv);
    }
  `}function UJ(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:c}=v.squeezeShape(n);if(l.length<n.length){let x=pc(e,l),A=["row","col","depth","depth2"];return`
      ${cc(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${hc(A,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${dc(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===i&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${s}, uv);
      }
    `;let y=Dl(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function GJ(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:c}=v.squeezeShape(t);if(l.length<t.length){let m=pc(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${cc(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${hc(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${dc(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Dl(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function HJ(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=v.squeezeShape(t);if(r.length<t.length){let g=pc(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${cc(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${hc(y,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${dc(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Dl(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function dc(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function jJ(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=qI(e.shapeInfo.logicalShape,t.logicalShape),l=vt(o),c=o-a,u,d=["x","y","z","w","u","v"];a===0?u="":o<2&&i.length>=1?u="coords = 0;":u=i.map(x=>`coords.${d[x+c]} = 0;`).join(`
`);let p="";o<2&&a>0?p="coords":p=e.shapeInfo.logicalShape.map((x,A)=>`coords.${d[A+c]}`).join(", ");let h="return outputValue;",m=v.sizeFromShape(e.shapeInfo.logicalShape)===1,y=v.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!y)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,A=a-1;i.indexOf(x)>-1&&i.indexOf(A)>-1?h="return vec4(outputValue.x);":i.indexOf(x)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(A)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${p});
      ${h}
    }
  `}function qJ(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=vt(l),u=qI(e.shapeInfo.logicalShape,t.logicalShape),d=l-i,p,h=["x","y","z","w","u","v"];i===0?p="":l<2&&u.length>=1?p="coords = 0;":p=u.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${p}
      return get${s}(${f});
    }
  `}function vt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function gx(e,t,n){let{newShape:s,keptDims:r}=v.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!v.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function pc(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function hc(e,t){return t.map(n=>e[n]).join(", ")}function XJ(e,t,n,s){let r=n.map((b,w)=>{let C={logicalShape:b.shape,texShape:b.isUniform?null:b.texData.texShape,isUniform:b.isUniform,isPacked:b.isUniform?!1:b.texData.isPacked,flatOffset:null};return b.texData!=null&&b.texData.slice!=null&&b.texData.slice.flatOffset>0&&(C.flatOffset=b.texData.slice.flatOffset),{name:t.variableNames[w],shapeInfo:C}}),a=r.map(b=>b.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=pJ(r,o,t),l=II(e.gl,i),c=e.createProgram(l),u=null,d=e.getUniformLocation(c,"NAN",!1);Y().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(c,"INFINITY",!1));let p=!1,h={},f={},m={};for(let b=0;b<t.variableNames.length;b++){let w=t.variableNames[b];h[w]=e.getUniformLocation(c,w,p),h[`offset${w}`]=e.getUniformLocation(c,`offset${w}`,p),t.enableShapeUniforms&&(f[`${w}Shape`]=e.getUniformLocation(c,`${w}Shape`,p),m[`${w}TexShape`]=e.getUniformLocation(c,`${w}TexShape`,p))}let g,y,x;t.enableShapeUniforms&&(g=e.getUniformLocation(c,"outShape",p),x=e.getUniformLocation(c,"outShapeStrides",p),y=e.getUniformLocation(c,"outTexShape",p));let A=[];return t.customUniforms&&t.customUniforms.forEach((b,w)=>{A[w]=e.getUniformLocation(c,b.name,p)}),{program:t,fragmentShader:l,source:i,webGLProgram:c,uniformLocations:h,customUniformLocations:A,inShapeInfos:a,outShapeInfo:o,infLoc:u,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:y}}function ZI(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!v.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!v.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function KJ(e,t,n,s,r){t.program.enableShapeUniforms||(ZI(t.inShapeInfos,n),ZI([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a,o[0],o[1]):e.setOutputMatrixTexture(a,o[0],o[1]),e.setProgram(t.webGLProgram),Y().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,c)=>{let u=t.program.variableNames[c],d=t.uniformLocations[u],p=t.uniformLocations[`offset${u}`],h=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(h){let{uniformShape:m}=gx(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),d!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(d,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}l.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture,d,c)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,c)=>{let u=t.customUniformLocations[c],d=r[c];if(l.type==="float")e.gl.uniform1fv(u,d);else if(l.type==="vec2")e.gl.uniform2fv(u,d);else if(l.type==="vec3")e.gl.uniform3fv(u,d);else if(l.type==="vec4")e.gl.uniform4fv(u,d);else if(l.type==="int")e.gl.uniform1iv(u,d);else if(l.type==="ivec2")e.gl.uniform2iv(u,d);else if(l.type==="ivec3")e.gl.uniform3iv(u,d);else if(l.type==="ivec4")e.gl.uniform4iv(u,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function ZJ(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:d}=gx(e.packedInputs,o.shape,l),p="",h="",f="";if(u.length===1&&e.packedInputs){let w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!e.packedInputs)h=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let w=v.computeStrides(u);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}let m=o.shape.length,g=u.length===2&&v.arraysEqual(o.shape,l),y=v.sizeFromShape(o.shape)===1,x=N.getBroadcastDims(o.shape,n.shape),A=!e.packedInputs&&m===n.shape.length&&v.arraysEqual(l,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${A}_${c?d:""}_${u.length}_${y}_${x}_${g}_${p}_${h}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${Y().getNumber("WEBGL_VERSION")}`,a}function ds(e){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var YJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Fm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Gn();this.outputShape=e,this.enableShapeUniforms=ds(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Um(["r","c","d"],e):_l(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},JJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Fm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Gn();this.outputShape=e,this.enableShapeUniforms=ds(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Um(["r","c","d"],e):_l(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},QJ=class{constructor(e){this.variableNames=["A"],this.outTexUsage=sr.DOWNLOAD;let t=Gn();this.outputShape=e,this.userCode=`
      ${jI}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},eQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=sr.DOWNLOAD;let t=Gn();this.outputShape=e,this.userCode=`
      ${jI}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},tQ=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Gn();this.outputShape=e,this.enableShapeUniforms=ds(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?mx():fx(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},nQ=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Gn();this.outputShape=e,this.enableShapeUniforms=ds(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?mx():fx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},YI={};Me(YI,{bindVertexProgramAttributeStreams:()=>oC,createBufferFromOutputTexture:()=>uC,createFloat16MatrixTexture:()=>nC,createFloat16PackedMatrixTexture:()=>aC,createFloat32MatrixTexture:()=>tC,createIndexBuffer:()=>eC,createPackedMatrixTexture:()=>rC,createUnsignedBytesMatrixTexture:()=>sC,createVertexBuffer:()=>QI,createVertexShader:()=>JI,downloadByteEncodedFloatMatrixFromOutputTexture:()=>dC,downloadFloat32MatrixFromBuffer:()=>cC,downloadMatrixFromPackedOutputTexture:()=>hC,downloadPackedMatrixFromBuffer:()=>pC,getInternalFormatForFloat16MatrixTexture:()=>Ax,getInternalFormatForFloat16PackedMatrixTexture:()=>vx,getInternalFormatForFloat32MatrixTexture:()=>yx,getInternalFormatForPackedMatrixTexture:()=>bx,getInternalFormatForUnsignedBytesMatrixTexture:()=>xx,uploadDenseMatrixToTexture:()=>iC,uploadPixelDataToTexture:()=>lC});function JI(e){let t=Gn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return SI(e,n)}function QI(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return NI(e,t)}function eC(e){let t=new Uint16Array([0,1,2,2,1,3]);return EI(e,t)}function Sp(e,t,n,s,r,a){_I(t,n);let o=RI(e),i=e.TEXTURE_2D;return ke(e,()=>e.bindTexture(i,o)),ke(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ke(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ke(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),ke(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Y().getNumber("WEBGL_VERSION")===1?ke(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)):ke(e,()=>e.texStorage2D(i,1,s,t,n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null)),o}function yx(e){return e.internalFormatFloat}function tC(e,t,n,s){let[r,a]=bp(t,n);return Sp(e,r,a,yx(s),s.textureFormatFloat,e.FLOAT)}function Ax(e){return e.internalFormatHalfFloat}function nC(e,t,n,s){let[r,a]=bp(t,n);return Sp(e,r,a,Ax(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function xx(e){return e.downloadTextureFormat}function sC(e,t,n,s){let[r,a]=bp(t,n);return Sp(e,r,a,xx(s),e.RGBA,e.UNSIGNED_BYTE)}function bx(e){return e.internalFormatPackedFloat}function rC(e,t,n,s){let[r,a]=lc(t,n);return Sp(e,r,a,bx(s),e.RGBA,e.FLOAT)}function vx(e){return e.internalFormatPackedHalfFloat}function aC(e,t,n,s){let[r,a]=lc(t,n);return Sp(e,r,a,vx(s),e.RGBA,s.textureTypeHalfFloat)}function oC(e,t,n){let s=0,r=3*4,a=3*4+2*4;return ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),cx(e,t,"clipSpacePos",n,3,a,s)&&cx(e,t,"uv",n,2,a,r)}function iC(e,t,n,s,r,a){ke(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),Y().getNumber("WEBGL_VERSION")===2?ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,i,o)):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function lC(e,t,n){ke(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Y().getNumber("WEBGL_VERSION")===2?(ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)),e.flush()):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Y().getNumber("WEBGL_VERSION")===2?(ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)),e.flush()):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function uC(e,t,n,s){let r=e.createBuffer();ke(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return ke(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),ke(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),ke(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function cC(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function dC(e,t,n,s){let[r,a]=bp(t,n),o=4,i=new Uint8Array(YY(t*n,o));return ke(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function pC(e,t,n,s,r,a,o,i){let l=e,c=new Float32Array(JY(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function hC(e,t,n){let s=new Float32Array(t*n*4);return ke(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var Gm=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Y().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Pm(t,e)):this.gl=Br(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(Y().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=vp(this.gl,r),Us(this.gl,a))this.textureHalfFloatExtension=vp(this.gl,a);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Us(this.gl,s))this.colorBufferHalfFloatExtension=vp(this.gl,s);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Us(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Us(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=QI(this.gl),this.indexBuffer=eC(this.gl),this.framebuffer=DI(this.gl),this.textureConfig=ux(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ke(e,()=>e.finish()),ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.deleteFramebuffer(this.framebuffer)),ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ke(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),tC(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),nC(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),sC(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),lC(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),iC(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),aC(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),rC(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(dx(this.gl,this.framebuffer),this.outputTexture=null),ke(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>dC(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return pC(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return cC(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=uC(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>hC(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=JI(t));let n=CI(t);return ke(t,()=>t.attachShader(n,this.vertexShader)),ke(t,()=>t.attachShader(n,e)),TI(t,n),this.debug&&Mm(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=oC(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ke(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Mm(this.gl,this.program),ke(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?PI(this.gl,e,t):FI(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ke(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),OI(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=lc(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Mm(this.gl,this.program),wp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ke(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ke(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=vp(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=sQ(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),zm(this.gl,e,this.framebuffer),this.debug&&wp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(zm(this.gl,this.outputTexture,this.framebuffer),this.debug&&wp(this.gl)):dx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;zm(s,e,this.framebuffer),this.debug&&wp(s),this.outputTexture=e,ke(s,()=>s.viewport(0,0,t,n)),ke(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),ke(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function sQ(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:rQ,bincountImpl:fC,bincountReduceImpl:aQ,ceilImpl:oQ,concatImpl:iQ,equalImpl:lQ,expImpl:uQ,expm1Impl:cQ,floorImpl:dQ,gatherNdImpl:pQ,gatherV2Impl:hQ,greaterImpl:fQ,greaterEqualImpl:mQ,lessImpl:gQ,lessEqualImpl:yQ,linSpaceImpl:AQ,logImpl:xQ,maxImpl:bQ,maximumImpl:vQ,minimumImpl:wQ,multiplyImpl:kQ,negImpl:SQ,notEqualImpl:IQ,prodImpl:CQ,rangeImpl:TQ,rsqrtImpl:NQ,sigmoidImpl:EQ,simpleAbsImpl:mC,sliceImpl:RQ,sparseFillEmptyRowsImpl:_Q,sparseReshapeImpl:DQ,sparseSegmentReductionImpl:gC,sqrtImpl:$Q,stridedSliceImpl:PQ,stringNGramsImpl:FQ,stringSplitImpl:OQ,stringToHashBucketFastImpl:MQ,subImpl:zQ,tileImpl:LQ,topKImpl:BQ,transposeImpl:wx,uniqueImpl:WQ}=Nm;function yC(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Hn(e,t){return t===1?[e]:yC(e,t)}function VQ(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var UQ=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ds(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=Hn("rc",this.rank),n=vt(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc),
              rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1),
              0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},AC=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ds(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2==1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${GQ(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?mx():fx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function GQ(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?dJ(["r","c","d"],"inputShape"):_l(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var HQ=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=bC(t,n),r=vC(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=xC(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===$n.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===$n.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===$n.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===$n.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===$n.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=bC(n,s),a=vC(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=xC(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function jQ(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function xC(e,t,n,s,r){let a=qQ(t,s),o;if(r){let[l,c]=lc(e[0],e[1]);o=l*c}else{let[l,c]=bp(e[0],e[1]);o=l*c}let i=jQ(n,a);return o*i}function qQ(e,t){switch(e){case $n.PACKED_2X2_FLOAT32:return bx(t);case $n.PACKED_2X2_FLOAT16:return vx(t);case $n.UNPACKED_FLOAT32:return yx(t);case $n.UNPACKED_FLOAT16:return Ax(t);case $n.PACKED_4X1_UNSIGNED_BYTE:return xx(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function XQ(e){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?$n.PACKED_2X2_FLOAT32:$n.UNPACKED_FLOAT32:e?$n.PACKED_2X2_FLOAT16:$n.UNPACKED_FLOAT16}function bC(e,t){if(e===sr.UPLOAD)return $n.PACKED_2X2_FLOAT32;if(e===sr.RENDER||e==null)return XQ(t);if(e===sr.DOWNLOAD||e===sr.PIXELS)return $n.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function vC(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Ko=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ds(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},wr="if (isnan(x)) return x;",KQ="return x;",wC="return abs(x);",ZQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",YQ=wr+`
  return (x < 0.0) ? 0.0 : x;
`,JQ=wr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Hm="return x;",QQ="return 1.0 / (1.0 + exp(-1.0 * x));",eee="return x;",tee=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,nee=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,see=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ree="return 1.0 / (1.0 + exp(-1.0 * x));",fc=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ds(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},aee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ds(this.outputShape.length);let t=e.length,n=Hn("rc",t),s=vt(t),r=VQ(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},oee=Qs.whereImpl,iee=1e-7,lee=1e-4,jm={};function uee(e){return e in jm||(jm[e]={}),jm[e]}var cee=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),dee=600;function pee(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*dee/1024/1024}var kC=class extends su{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Br(Y().getNumber("WEBGL_VERSION"));this.binaryCache=uee(Y().getNumber("WEBGL_VERSION")),this.gpgpu=new Gm(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new HQ(this.gpgpu),this.numMBBeforeWarning=pee(),this.texData=new od(this,as())}nextDataId(){return kC.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:sr.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:sr.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new fc(o,Hm):d=new Ko(o,Hm);let p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:s}],s),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,c;l&&(c=v.now());let u;if(s==="complex64"){let d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);u=N.mergeRealAndImagArrays(d,p)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let h;i?h=new fc(s,Hm):h=new Ko(s,Hm);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(Y().getBool("DEBUG")&&!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(a!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let h=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(h.texture,...Om(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];u=N.mergeRealAndImagArrays(f,m)}else if(l==null)u=this.getValuesFromTexture(e);else{let h=v.sizeFromShape(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){let h=this.gpgpu.gl;ke(h,()=>h.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&as().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!wI(n))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=v.sizeFromShape(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),p=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture,...Om(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),h}let a=Y().getBool("WEBGL_PACK")&&s===!0,o=a?Lm(t):t,i=a?new eQ(o):new QJ(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=v.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=cee){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return oee(e.shape,t)}packedUnaryOp(e,t,n){let s=new fc(e.shape,t),r=this.compileAndRun(s,[e],n);return as().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=mC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,wC,e.dtype);let t=new Ko(e.shape,wC),n=this.compileAndRun(t,[e]);return as().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:s}=this.makeTensorInfo(e,t,n);return as().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){let t=new aee(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new UQ(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[El(e.shape),...Rl(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[El(t),...Rl(t)],a=new AC(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=Lm(s),o,i=Om(a);n?o=new JJ(a):o=new YJ(a);let l=!0,c=[i],u=this.runWebGLProgram(o,[{shape:a,dtype:r,dataId:e}],r,c,l);return{dtype:r,shape:s,dataId:u.dataId}}runWebGLProgram(e,t,n,s,r=!1){let a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Fm.DENSE){let m=Om(e.outputShape);o.texShape=m.map(g=>g*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),v.sizeFromShape(a.shape)===0)return o.values=v.getTypedArrayFromDType(a.dtype,0),a;let i=[],l=t.map(m=>{if(m.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(m.dataId);if(g.texture==null){if(!e.packedInputs&&v.sizeFromShape(m.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=m.shape)}if(this.uploadToGPU(m.dataId),!!g.isPacked!=!!e.packedInputs)m=g.isPacked?this.unpackTensor(m):this.packTensor(m),i.push(m),g=this.texData.get(m.dataId);else if(g.isPacked&&!kp(g.shape,m.shape)){let y=m,x=m.shape;m.shape=g.shape,m=this.packedReshape(m,x),i.push(m),g=this.texData.get(m.dataId),y.shape=x}return{shape:m.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let c={shape:a.shape,texData:o,isUniform:!1},u=ZJ(e,l,c),d=this.getAndSaveBinary(u,()=>XJ(this.gpgpu,e,l,c)),p=this.activeTimers!=null,h;p&&(h=this.startTimer()),KJ(this.gpgpu,d,l,c,s),i.forEach(m=>this.disposeIntermediateTensorInfo(m)),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let f=Y().get("WEBGL_FLUSH_THRESHOLD");if(f>0){let m=v.now();m-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=X(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Y().getBool("DEBUG");Y().set("DEBUG",!1);let t=this.abs(Ce(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?iee:lee}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,c;l&&(c=v.now());let u=t.texShape;if(u==null&&(u=LI(n,i),t.texShape=u),r!=null){let d=Lm(n),p,h=u[1],f=u[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(i||!m)&&([h,f]=lc(u[0],u[1])),i?p=new nQ(d,m):p=new tQ(d,m);let g=m?[f,h]:u,y=this.makeTensorInfo(g,s),x=this.texData.get(y.dataId);m?x.usage=sr.PIXELS:x.usage=sr.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),h,f,r);let A=[[f,h]],b=!0,w=this.runWebGLProgram(p,[y],s,A,b),C=this.texData.get(w.dataId);t.texture=C.texture,t.texShape=C.texShape,t.isPacked=C.isPacked,t.usage=C.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(w.dataId),t.values=null,l&&(this.uploadWaitMs+=v.now()-c)}else{let d=this.acquireTexture(u,o,s,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=hee(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}},Ip=kC;Ip.nextDataId=0;function hee(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var fee="0.0.0";function SC(){Y().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ou.isBrowser()&&ul("webgl",()=>new Ip,2);var mee={forceHalfFloat:SC},IC=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,mc=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ds(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},qm=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Cp=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=ds(r);let a="";if(s)if(r===0||v.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${vt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Hn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Ss(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var gee={kernelName:Za,backendName:"webgl",kernelFunc:Ss};function Zo(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=Ss({inputs:{x:s},backend:n}),l=Ss({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var yee={kernelName:cd,backendName:"webgl",kernelFunc:Zo},CC="return (a < 0.) ? b * a : a;",TC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Aee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",v.createScalarValue(a,"float32")),i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cp(TC,r.shape,o.shape):new mc(CC,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var xee={kernelName:Ya,backendName:"webgl",kernelFunc:Aee},NC="return (a < 0.) ? b * a : a;",EC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function bee(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cp(EC,s.shape,r.shape):new mc(NC,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var vee={kernelName:uo,backendName:"webgl",kernelFunc:bee},RC="if (isnan(x)) return x;",wee=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,kee=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function at({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),p=n(d.values,l);return i.makeTensorInfo(o.shape,l,p)}let c=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new fc(o.shape,t):u=new Ko(o.shape,e),i.runWebGLProgram(u,[o],l)}}function In({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:c}=o,u=i;if(s&&l.dtype==="complex64"){let f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(A=>{let[b,w]=A,C={dataId:b.dataId,dtype:b.dtype,shape:l.shape},S={dataId:w.dataId,dtype:w.dtype,shape:c.shape},E=new mc(e,l.shape,c.shape);return u.runWebGLProgram(E,[C,S],Ln(b.dtype,w.dtype))}),x=Zo({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),x}let d=a||Ln(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){let f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?N.fromUint8ToStringArray(f):f,y=l.dtype==="string"?N.fromUint8ToStringArray(m):m,[x,A]=r(l.shape,c.shape,g,y,d),b=u.makeTensorInfo(A,d),w=u.texData.get(b.dataId);return w.values=x,b}let p=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new Cp(t,l.shape,c.shape,n):h=new mc(e,l.shape,c.shape),u.runWebGLProgram(h,[l,c],d)}}function Xm(e,t=!1){if(e==="linear")return t?eee:KQ;if(e==="relu")return t?nee:YQ;if(e==="elu")return t?tee:ZQ;if(e==="relu6")return t?see:JQ;if(e==="prelu")return t?EC:NC;if(e==="leakyrelu")return t?TC:CC;if(e==="sigmoid")return t?ree:QQ;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var _C=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ds(this.outputShape.length);let c=s?e[1]:e[2],u=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",A="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(A=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${x};
          int batchB = ${A};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},DC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},$C=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},PC="return a * b;";function kx(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=N.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),c=new $C(DC.REAL,s.shape,r.shape),u=new $C(DC.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Zo({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[c,u]=kQ(s.shape,r.shape,i.values,l.values,a),d=n.makeTensorInfo(u,a),p=n.texData.get(d.dataId);return p.values=c,d}let o;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Cp(PC,s.shape,r.shape):o=new mc(PC,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var See={kernelName:oo,backendName:"webgl",kernelFunc:kx};function Iee(e,t,n){let s=[El(e.shape),...Rl(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[El(t),...Rl(t)],o=new AC(a,s),i=!0,l=[s],c=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function be(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=v.sizeFromShape(r.shape),l=v.inferFromImplicitShape(a,i),c=v.sizeFromShape(l);v.assert(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=o.texData.get(r.dataId);return u.isPacked&&!kp(r.shape,l)&&!(u.texture!==null&&kp(u.shape,l))?Iee(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var Cee={kernelName:Li,backendName:"webgl",kernelFunc:be},FC=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${v.isInt(u)?u.toPrecision(2):u}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},Tee=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,u=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function Nee(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=N.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function $l(e,t,n,s){let r=Nee(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:c}=r[o],u,d;n==="mean"?u=o===0?new FC({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},i):new FC({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c}):u=new Tee({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},n),d=a,a=s.runWebGLProgram(u,[a],t),d.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(d)}return a}var Eee=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=vt(this.rank),r=Ree(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function Ree(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var _ee=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=vt(this.rank),r=yC("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=r[c];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Km(e,t,n){let s=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _ee(e.shape,t):new Eee(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function Dee(e,t,n,s){let r=t,a=e.shape.length,o=v.parseAxisParam(r,e.shape),i=o,l=N.getAxesPermutation(i,a),c=l!=null,u=e;c&&(u=Km(e,l,s),i=N.getInnerMostAxes(i.length,a)),N.assertAxesAreInnerMostDims("sum",i,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,i),h=d;n&&(h=N.expandShapeToKeepDim(d,o));let f=v.sizeFromShape(p),g=v.sizeFromShape(e.shape)/f,y=be({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),x=Fd(e.dtype),A=$l(y,x,"sum",s),b=be({inputs:{x:A},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(A),c&&s.disposeIntermediateTensorInfo(u),b}function Zm(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Dee(r,a,o,n)}var $ee={kernelName:Ao,backendName:"webgl",kernelFunc:Zm};function jn(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];let c;if(o.shouldExecuteOnCPU([r])){let d=o.texData.get(r.dataId).values,p=wx(d,r.shape,r.dtype,a,l);c=o.makeTensorInfo(l,r.dtype);let h=o.texData.get(c.dataId);h.values=p}else c=Km(r,a,o);return c}var Pee={kernelName:ko,backendName:"webgl",kernelFunc:jn},OC=1e3;function Ym({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),b=ol.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[y,d,h]:[y,h,d],C=s?[x,f,p]:[x,p,f],S=be({inputs:{x:e},backend:r,attrs:{shape:w}}),E=be({inputs:{x:t},backend:r,attrs:{shape:C}}),R=[S,E],F=Math.max(y,x),_=n?S.shape[1]:S.shape[2],P=a!=null,T=o!=null,O=l==="leakyrelu",G=l!=null?Xm(l,!0):null,K=P||T||O||G!=null,z;if((h===1||f===1)&&_>OC&&K===!1){let W=S,Q=E;n&&(W=jn({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),R.push(W)),s&&(Q=jn({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(Q));let te=f!==1,ae=f===1,Z=W;te&&(Z=be({inputs:{x:W},backend:r,attrs:{shape:[F,_,1]}}),R.push(Z));let oe=f===1?2:1,re=Q;ae&&(re=be({inputs:{x:Q},backend:r,attrs:{shape:[F,1,_]}}),R.push(re));let ge=kx({inputs:{a:Z,b:re},backend:r});z=Zm({inputs:{x:ge},backend:r,attrs:{axis:oe,keepDims:!0}}),R.push(ge)}else{let W=Ln(e.dtype,t.dtype),Q=new _C(w,C,[F,h,f],n,s,P,G,T,O),te=[S,E];if(a!=null&&te.push(a),T&&te.push(o),O){let ae=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));te.push(ae),R.push(ae)}z=r.runWebGLProgram(Q,te,W)}let j=be({inputs:{x:z},backend:r,attrs:{shape:b}});R.push(z);for(let W of R)r.disposeIntermediateTensorInfo(W);return j}function Fee(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return Ym({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var Oee={kernelName:Io,backendName:"webgl",kernelFunc:Fee},MC="return abs(x);";function Mee(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=mC(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new fc(s.shape,MC):r=new Ko(s.shape,MC),n.runWebGLProgram(r,[s],s.dtype)}var zee={kernelName:mi,backendName:"webgl",kernelFunc:Mee},Lee=wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Bee=at({opSnippet:Lee}),Wee={kernelName:iu,backendName:"webgl",kernelFunc:Bee},Vee=wr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Uee=at({opSnippet:Vee}),Gee={kernelName:lu,backendName:"webgl",kernelFunc:Uee},zC="return a + b;",Hee=In({opSnippet:zC,packedOpSnippet:zC,supportsComplex:!0,cpuKernelImpl:rQ}),jee={kernelName:Xr,backendName:"webgl",kernelFunc:Hee},qee=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},Xee=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function Jm(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Ss({inputs:{x:s[0]},backend:n});if(s.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),c=Jm({inputs:s.slice(0,l),backend:n}),u=Jm({inputs:s.slice(l),backend:n});return Jm({inputs:[c,u],backend:n})}let r=s.map(l=>l.dtype).reduce((l,c)=>Ln(l,c)),a=s.map(l=>l.shape),i=Y().getBool("WEBGL_PACK")?new Xee(s[0].shape,a):new qee(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var Kee={kernelName:Da,backendName:"webgl",kernelFunc:Jm};function Zee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=jn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("all",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=be({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=$l(m,m.dtype,"all",n),y;if(o){let x=N.expandShapeToKeepDim(p,l);y=be({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=be({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var Yee={kernelName:uu,backendName:"webgl",kernelFunc:Zee};function Jee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=jn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("any",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=be({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=$l(m,m.dtype,"any",n),y;if(o){let x=N.expandShapeToKeepDim(p,l);y=be({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=be({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var Qee={kernelName:cu,backendName:"webgl",kernelFunc:Jee},ete=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},tte=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=vt(i),c=Hn("coords",i),u,d;if(a===1){d=i+1;let S=vt(d);u=`
        ${S} sourceLocR = ${S}(${c.join()}, 0);
        ++${c[i-1]};
        ${S} sourceLocG = ${S}(${c.join()}, 0);
        ++${c[i-2]};
        ${S} sourceLocA = ${S}(${c.join()}, 0);
        --${c[i-1]};
        ${S} sourceLocB = ${S}(${c.join()}, 0);
        --${c[i-2]};`}else d=i,u=`
        ${l} sourceLocR = coords;
        ++${c[i-1]};
        ${l} sourceLocG = coords;
        ++${c[i-2]};
        ${l} sourceLocA = coords;
        --${c[i-1]};
        ${l} sourceLocB = coords;
        --${c[i-2]};`;let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(S=>"int "+S),m=Hn("sourceLocR",d-1).concat("inIdx.r"),g=Hn("sourceLocG",d-1).concat("inIdx.g"),y=Hn("sourceLocB",d-1).concat("inIdx.b"),x=Hn("sourceLocA",d-1).concat("inIdx.a"),A=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,C=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function LC(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=N.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new ete(i,n,s==null),c=[t];s!=null&&c.push(s);let u=e.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let d=LC(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function BC(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=N.computeOptimalWindowSize(a),i=new tte(r,o,n,s==null),l=s==null?[t]:[t,s],c=e.runWebGLProgram(i,l,"int32");if(c.shape.length===t.shape.length){let u=BC(e,t,n,c);return e.disposeIntermediateTensorInfo(c),u}return c}function WC(e,t,n,s){let r=[n];if(N.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[c,u]=N.computeOutAndReduceShapes(l.shape,r),d=v.sizeFromShape(u),p=be({inputs:{x:l},backend:e,attrs:{shape:[-1,d]}});a.push(p);let h=LC(e,p,s);a.push(h);let f=be({inputs:{x:h},backend:e,attrs:{shape:c}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return BC(e,t,s)}function nte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=jn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=WC(n,l,o[0],"max");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var ste={kernelName:$a,backendName:"webgl",kernelFunc:nte};function rte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=jn({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=WC(n,l,o[0],"min");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var ate={kernelName:du,backendName:"webgl",kernelFunc:rte},ote=wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,ite=at({opSnippet:ote}),lte={kernelName:pu,backendName:"webgl",kernelFunc:ite},ute=wr+"return log(x + sqrt(x * x + 1.0));",cte=at({opSnippet:ute}),dte={kernelName:hu,backendName:"webgl",kernelFunc:cte},pte=wr+`
  return atan(x);
`,hte=at({opSnippet:pte}),fte={kernelName:fu,backendName:"webgl",kernelFunc:hte},mte=wee+`
  return atan(a, b);
`,gte=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+kee+`
  return result;
`,yte=In({opSnippet:mte,packedOpSnippet:gte}),Ate={kernelName:gu,backendName:"webgl",kernelFunc:yte},xte=wr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,bte=at({opSnippet:xte}),vte={kernelName:mu,backendName:"webgl",kernelFunc:bte},Tp=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let S=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");let b=Math.floor(a/4)*4,w=a%4,C=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${A});
      }
    `}},Sx=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",A="0.0";if(x||(A="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let C=Math.floor(a/4)*4,S=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${C};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${w});
        }
      }
    `}};function wte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;uc(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return Ss({inputs:{x:r},backend:n});let d=new Tp(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var kte={kernelName:Pa,backendName:"webgl",kernelFunc:wte};function Ste(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],d=N.computePool3DInfo(r.shape,a,o,u,i,l,c),p=new Sx(d,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var Ite={kernelName:ud,backendName:"webgl",kernelFunc:Ste},Cte=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.top,u=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Tte=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Nte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new Tte(p);return n.runWebGLProgram(h,[r],o.dtype)}var Ete={kernelName:Eh,backendName:"webgl",kernelFunc:Nte};function Rte(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;uc([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=s,u=N.computePool2DInfo(o.shape,i,l,1,c),d=new Cte(u);return n.runWebGLProgram(d,[r],o.dtype)}var _te={kernelName:Nh,backendName:"webgl",kernelFunc:Rte};function Dte(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Ym({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var $te={kernelName:Fa,backendName:"webgl",kernelFunc:Dte},Pte=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},Fte=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},Ote=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;v.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=[s,r,a],u=null;o!=null&&(u=o.shape,c.push(o));let d=null;i!=null&&(d=i.shape,c.push(i));let p=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Fte(s.shape,r.shape,a.shape,u,d,l):new Pte(s.shape,r.shape,a.shape,u,d,l);return t.runWebGLProgram(p,c,c[0].dtype)},Mte={kernelName:Xa,backendName:"webgl",kernelFunc:Ote},zte=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=vt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=Lte(this.rank),s,r=e.map((a,o)=>`sourceLoc.${Ix[o]} = start[${o}] + coords.${Ix[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Ix=["x","y","z","w","u","v"];function Lte(e){if(e===1)return"sourceLoc";if(e<=6)return Ix.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var Bte=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=vt(this.rank),n=Hn("coords",this.rank),s=Hn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,u)=>`start[${u}]`).join()});`:e.map((c,u)=>`${s[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function Wte(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Mt.computeFlatOffset(t,v.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function gc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Mt.parseSliceParams(r,a,o);if(Mt.assertParamsValid(r,i,l),v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.texData.get(r.dataId),p=RQ(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}let{isPacked:c}=n.texData.get(r.dataId),u=Mt.isSliceContinous(r.shape,i,l);if(c||!u){let d=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bte(l):new zte(l),p=[i];return n.runWebGLProgram(d,[r],r.dtype,p)}return n.uploadToGPU(r.dataId),Wte(r,i,l,n)}var Vte={kernelName:Gi,backendName:"webgl",kernelFunc:gc},Ute=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=be({inputs:{x:r},backend:n,attrs:{shape:l}}),m=jn({inputs:{x:f},backend:n,attrs:{perm:c}}),g=be({inputs:{x:m},backend:n,attrs:{shape:u}}),y=gc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),y},Gte={kernelName:gi,backendName:"webgl",kernelFunc:Ute};function Hte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),c=fC(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var jte={kernelName:Rh,backendName:"webgl",kernelFunc:Hte};function qte(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var Xte={kernelName:_h,backendName:"webgl",kernelFunc:qte},Kte="return float(a != b);",VC=In({opSnippet:Kte,cpuKernelImpl:IQ,dtype:"bool"}),Zte={kernelName:Di,backendName:"webgl",kernelFunc:VC};function Np(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Ss({inputs:{x:r.complexTensorInfos.real},backend:n})}var Yte={kernelName:xd,backendName:"webgl",kernelFunc:Np},Jte="return float(int(x));";function Qte(e,t){let n=new Ko(e.shape,Jte),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Cx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Ss({inputs:{x:r},backend:n});let o=Gt(r.shape),i=Cx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Zo({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Np({inputs:{input:r},backend:n}),i=Cx({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=Ss({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Qte(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=VC({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var ene={kernelName:Oa,backendName:"webgl",kernelFunc:Cx},UC="return ceil(x);",tne=at({opSnippet:UC,packedOpSnippet:UC,cpuKernelImpl:oQ}),nne={kernelName:Ma,backendName:"webgl",kernelFunc:tne},sne=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},rne=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function ane(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;Y().getBool("WEBGL_PACK_CLIP")?i=new rne(r.shape):i=new sne(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var one={kernelName:Kr,backendName:"webgl",kernelFunc:ane},ine=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function GC(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function lne(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new ine(s.shape),o=[GC(s,r.complexTensorInfos.real),GC(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var une={kernelName:dd,backendName:"webgl",kernelFunc:lne},cne=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},dne=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=vt(s),a=Hn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],c=o.slice(-2),u=o.join(),d=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${u}), vec2(${c.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${Qm(o,l,m)}),
            vec2(${Qm(c,l,m)}));
        }`}let p=i.length,h=i[i.length-1];d+=`
        return getChannel(
          getT${p}(${Qm(o,l,h)}),
          vec2(${Qm(c,l,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function Qm(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function e0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Ss({inputs:{x:r.complexTensorInfos.imag},backend:n})}var pne={kernelName:md,backendName:"webgl",kernelFunc:e0};function yc(e,t,n){let s=e[0].dtype;if(s==="complex64"){let u=e.map(m=>Np({inputs:{input:m},backend:n})),d=e.map(m=>e0({inputs:{input:m},backend:n})),p=yc(u,t,n),h=yc(d,t,n),f=Zo({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let u=e.map(y=>{let x=v.sizeFromShape(y.shape.slice(t));return be({inputs:{x:y},backend:n,attrs:{shape:[-1,x]}})}),d=u.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),p=N.computeOutShape(u.map(y=>y.shape),1),h=u[0].shape[0]===1,f=iQ(d,p,s,h),m=N.computeOutShape(e.map(y=>y.shape),t),g=n.makeTensorInfo(m,s,f);return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g}if(e.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),d=yc(e.slice(0,u),t,n),p=yc(e.slice(u),t,n),h=yc([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new dne(e.map(d=>d.shape),t);return n.runWebGLProgram(u,e,s)}let{tensors2D:a,outShape:o}=hne(e,t,n),i=new cne(a.map(u=>u.shape)),l=n.runWebGLProgram(i,a,s);a.forEach(u=>n.disposeIntermediateTensorInfo(u));let c=be({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function hne(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>be({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function HC(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return Ss({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),yc(i,a,n)}var fne={kernelName:yi,backendName:"webgl",kernelFunc:HC},jC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,x=m?3:1,A="",b="";n&&(s?A=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?A=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:A=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${A}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},mne=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},gne=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ds(this.outputShape.length);let{dataFormat:n}=t,s=Gn(),r=n==="channelsLast",a=r?0:1,o=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.y + ${u};
          pos = rc.x + ${c};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+u}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+u}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function qC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=s.texData.get(e.dataId),u=n.inChannels,d=l[0]*l[1]*l[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(!((d===1||p===1)&&u>OC)&&c.isPacked&&h&&c.texture!=null&&l[2]%2!=0&&v.arraysEqual(c.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),w={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,v.assert(kp(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);let S=be({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(S);let E=Ym({a:w,b:S,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=s.texData.get(E.dataId);v.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,R.shape=n.outShape,g=Ss({inputs:{x:E},backend:s}),g.shape=n.outShape,y.push(E)}else{let b=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],w=be({inputs:{x:e},backend:s,attrs:{shape:[1,b,n.inChannels]}}),C=be({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),S=Ym({a:w,b:C,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=be({inputs:{x:S},backend:s,attrs:{shape:n.outShape}}),y.push(w),y.push(C),y.push(S)}for(let b of y)s.disposeIntermediateTensorInfo(b);return g}function XC({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=l*c*u,g=p*d,y=[m,g],x=!0,A=!1,b=[],w=be({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),C=be({inputs:{x:t},backend:s,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w),b.push(C);let S=new gne(y,n),E=[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=s.runWebGLProgram(S,[w],"float32",E),F=be({inputs:{x:R},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(R),b.push(F);let _=r!=null,P=a!=null,T=i==="leakyrelu",O=i?Xm(i,!0):null,G=new _C(F.shape,C.shape,[1,g,n.outChannels],x,A,_,O,P,T),K=[F,C];if(r&&K.push(r),P&&K.push(a),T){let Q=s.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));K.push(Q),b.push(Q)}let z=s.runWebGLProgram(G,K,"float32"),j=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],W=be({inputs:{x:z},backend:s,attrs:{shape:j}});b.push(z);for(let Q of b)s.disposeIntermediateTensorInfo(Q);return W}function yne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=qC({x:r,filter:a,convInfo:p,backend:n});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=XC({x:r,filter:a,convInfo:p,backend:n});else{let m=new jC(p);h=n.runWebGLProgram(m,[r,a],"float32")}let f=be({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}var Ane={kernelName:za,backendName:"webgl",kernelFunc:yne},xne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},bne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,c=a?2:3,u=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},vne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},wne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function kne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,u,o,1,i,c,!1,d),h=new xne(p);return n.runWebGLProgram(h,[r,a],"float32")}var Sne={kernelName:Dh,backendName:"webgl",kernelFunc:kne};function Ine(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=new bne(p);return n.runWebGLProgram(h,[r,a],"float32")}var Cne={kernelName:La,backendName:"webgl",kernelFunc:Ine};function Tne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=N.computeConv3DInfo(r.shape,a.shape,o,l,i),u=new mne(c);return n.runWebGLProgram(u,[r,a],"float32")}var Nne={kernelName:pd,backendName:"webgl",kernelFunc:Tne};function Ene(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,c=N.computeConv3DInfo(r.shape,l,o,1,i),u=new vne(c);return n.runWebGLProgram(u,[r,a],"float32")}var Rne={kernelName:$h,backendName:"webgl",kernelFunc:Ene};function _ne(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,c=N.computeConv3DInfo(l,a.shape,i,1,o),u=new wne(c);return n.runWebGLProgram(u,[r,a],"float32")}var Dne={kernelName:Ph,backendName:"webgl",kernelFunc:_ne},$ne=RC+`
  return cos(x);
`,Pne=at({opSnippet:$ne}),Fne={kernelName:Ba,backendName:"webgl",kernelFunc:Pne},One=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Mne=at({opSnippet:One}),zne={kernelName:Wa,backendName:"webgl",kernelFunc:Mne},Lne=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[c]=t,[u,d]=n;this.outputShape=[c,u,d,l];let p=s==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,y]=u>1?[`${(o-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,A,b]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${A};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},Bne=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new Lne(r.shape,a.shape,i,l,c);return n.runWebGLProgram(u,[r,a,o],"float32")},Wne={kernelName:xi,backendName:"webgl",kernelFunc:Bne},KC=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let s=e.length,r=t?"0.0":`getX(${ZC(s,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${vt(s)} coords = getOutputCoords();
        int end = ${YC(s,"coords")};
        float val = ${r};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${YC(s,"coords")} = idx;
          val += getX(${ZC(s,"coords")});
        }
        setOutput(val);
      }
    `}};function ZC(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function YC(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Vne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length,c=N.getAxesPermutation([a],l),u=r;c!=null&&(u=jn({inputs:{x:r},backend:n,attrs:{perm:c}}));let d=N.getInnerMostAxes(1,l)[0];if(d!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);let p=u.shape[d],h=Ss({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new KC(u.shape,!1,i),g=[[f]],y=h;h=n.runWebGLProgram(m,[h],h.dtype,g),n.disposeIntermediateTensorInfo(y)}if(o){let f=new KC(u.shape,o,i),m=h;h=n.runWebGLProgram(f,[h],h.dtype),n.disposeIntermediateTensorInfo(m)}if(c!=null){let f=N.getUndoAxesPermutation(c),m=jn({inputs:{x:h},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),m}return h}var Une={kernelName:Ai,backendName:"webgl",kernelFunc:Vne};function Gne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=fC(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(r.shape.length===2){let l=n.bufferSync(r),c=n.bufferSync(a),u=aQ(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var Hne={kernelName:Fh,backendName:"webgl",kernelFunc:Gne},jne=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function qne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=new jne(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var Xne={kernelName:bi,backendName:"webgl",kernelFunc:qne},JC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ds(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",c="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${c}
        setOutput(result);
      }
    `}},QC=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ds(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,d=u,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<u;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let y=g*2;if(p+=`
          xC = xCCorner + ${y*l};
          `,i===1){if(y<u&&(o%2==1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<u)){let x=o%2==0?v.nearestLargerEven(l):l;l%2==0&&o%2==1||l%2!=0&&o%2!=1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):x===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<u&&(o%2==1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<u&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<u&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<u&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<u&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function Kne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let d=N.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p;Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?p=new QC(d):p=new JC(d);let h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",h)}var Zne={kernelName:Va,backendName:"webgl",kernelFunc:Kne},Yne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Jne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Qne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s,d=N.computeConv2DInfo(r.shape,u,o,i,l,c,!0),p=new Yne(d);return n.runWebGLProgram(p,[r,a],"float32")}var ese={kernelName:Oh,backendName:"webgl",kernelFunc:Qne};function tse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s,d=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),p=new Jne(d);return n.runWebGLProgram(p,[r,a],"float32")}var nse={kernelName:Mh,backendName:"webgl",kernelFunc:tse},sse=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function rse(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=v.sizeFromShape(s.shape),o=be({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new sse(a),l=n.runWebGLProgram(i,[o],o.dtype),c=be({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var ase={kernelName:zh,backendName:"webgl",kernelFunc:rse},ose=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:c}=e,{top:u,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${u}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function ise(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,c=N.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),u,d=new ose(c);u=n.runWebGLProgram(d,[r,a],"float32");let p=be({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),p}var lse={kernelName:hd,backendName:"webgl",kernelFunc:ise};function use(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:x}=N.getEinsumPermutation(h,l[g]),A;N.isIdentityPermutation(y)?A=a[g]:(A=jn({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=be({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),p===null?p=A:(p=kx({inputs:{a:A,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Zm({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var cse={kernelName:fd,backendName:"webgl",kernelFunc:use},dse="return (x >= 0.0) ? x : (exp(x) - 1.0);",pse=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,hse=at({opSnippet:dse,packedOpSnippet:pse}),fse={kernelName:Ga,backendName:"webgl",kernelFunc:hse},mse="return (b >= 1.0) ? a : a * (b + 1.0);",gse=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,yse=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cp(gse,s.shape,r.shape):new mc(mse,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},Ase={kernelName:Wh,backendName:"webgl",kernelFunc:yse},xse=`
  return vec4(equal(a, b));
`,bse="return float(a == b);",vse=In({opSnippet:bse,packedOpSnippet:xse,dtype:"bool",cpuKernelImpl:lQ}),wse={kernelName:vi,backendName:"webgl",kernelFunc:vse},kse=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Sse=at({opSnippet:kse}),Ise={kernelName:yu,backendName:"webgl",kernelFunc:Sse},e4="return exp(x);",t4=at({opSnippet:e4,packedOpSnippet:e4,cpuKernelImpl:uQ,dtype:"float32"}),Cse={kernelName:Ha,backendName:"webgl",kernelFunc:t4};function Tx(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),be({inputs:{x:a},backend:s,attrs:{shape:i}})}var Tse={kernelName:wi,backendName:"webgl",kernelFunc:Tx},n4="return exp(x) - 1.0;",Nse=at({opSnippet:n4,packedOpSnippet:n4,cpuKernelImpl:cQ}),Ese={kernelName:ki,backendName:"webgl",kernelFunc:Nse},s4=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function r4(e,t,n){let s=n.texData.get(e.dataId),r=v.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=be({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,c=new s4("real",l,t),u=new s4("imag",l,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Zo({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let m=be({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function Rse(e){let{inputs:t,backend:n}=e,{input:s}=t;return r4(s,!1,n)}var _se={kernelName:Vh,backendName:"webgl",kernelFunc:Rse},Dse=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Ep(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new Dse(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var $se={kernelName:Au,backendName:"webgl",kernelFunc:Ep},Pse=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Fse={kernelName:Si,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Pse(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},a4="return floor(x);",Ose=at({opSnippet:a4,packedOpSnippet:a4,cpuKernelImpl:dQ}),Mse={kernelName:ja,backendName:"webgl",kernelFunc:Ose},zse=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Lse=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Bse=In({opSnippet:zse,packedOpSnippet:Lse,dtype:"int32"}),Wse={kernelName:qa,backendName:"webgl",kernelFunc:Bse},Vse=class{constructor(e){this.variableNames=["A"];let t=Gn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},Use=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Gn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},Gse={kernelName:Cd,backendName:"webgl",kernelFunc:Hse},Ac;function Hse(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],d=[c,l,a];(i||o)&&(Ac==null&&(Ac=document.createElement("canvas").getContext("2d")),Ac.canvas.width=l,Ac.canvas.height=c,Ac.drawImage(r,0,0,l,c),r=Ac.canvas);let p=n.makeTensorInfo(u,"int32");n.texData.get(p.dataId).usage=sr.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);let h=Y().getBool("WEBGL_PACK")?new Use(d):new Vse(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}function jse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),y,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=qC({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=XC({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,w=i!=null,C=h==="leakyrelu",S=h?Xm(h,!1):null,E=new jC(g,b,S,w,C),R=[r,a];if(o&&R.push(o),i&&R.push(i),C){let F=n.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));R.push(F),x.push(F)}y=n.runWebGLProgram(E,R,"float32")}let A=be({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var qse={kernelName:Co,backendName:"webgl",kernelFunc:jse};function Xse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=s,f=[],m=u;m==null&&(m=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=N.computeConv2DInfo(r.shape,a.shape,l,m,c,d,!0),y=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=p?Xm(p,y):null,A=[r,a],b=o!=null,w=i!=null,C=p==="leakyrelu";if(b&&A.push(o),w&&A.push(i),C){let F=n.makeTensorInfo([],"float32",v.createScalarValue(h,"float32"));A.push(F),f.push(F)}let S;y?S=new QC(g,b,x,w,C):S=new JC(g,b,x,w,C);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(S,A,"float32",E);return f.forEach(F=>n.disposeIntermediateTensorInfo(F)),R}var Kse={kernelName:To,backendName:"webgl",kernelFunc:Xse},Zse=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=vt(t.length),r=vt(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Yse(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,c,u,d]=N.prepareAndValidate(s,r),p=be({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=be({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),x=n.bufferSync(s),A=pQ(y,x,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,A.values)}let f=new Zse(o,d,[c,u]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=be({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var Jse={kernelName:Ci,backendName:"webgl",kernelFunc:Yse},Qse=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=vt(this.rank),s=ere(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function ere(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[r]}`);return s.join()}function o4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=n.readSync(a.dataId),u=r.shape[l];for(let b=0;b<c.length;++b){let w=c[b];v.assert(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=v.sizeFromShape(a.shape),h=[],f=be({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=be({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}});h.push(f),h.push(m);let g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let b=n.bufferSync(m),w=n.bufferSync(f),C=hQ(w,b,g);return h.forEach(S=>n.disposeIntermediateTensorInfo(S)),n.makeTensorInfo(d.outputShape,C.dtype,C.values)}let y=new Qse(f.shape,g),x=n.runWebGLProgram(y,[f,m],f.dtype);h.push(x);let A=be({inputs:{x},backend:n,attrs:{shape:d.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var tre={kernelName:Ii,backendName:"webgl",kernelFunc:o4},nre="return float(a > b);",sre=`
  return vec4(greaterThan(a, b));
`,rre=In({opSnippet:nre,packedOpSnippet:sre,cpuKernelImpl:fQ,dtype:"bool"}),are={kernelName:Ti,backendName:"webgl",kernelFunc:rre},ore="return float(a >= b);",ire=`
  return vec4(greaterThanEqual(a, b));
`,lre=In({opSnippet:ore,packedOpSnippet:ire,dtype:"bool",cpuKernelImpl:mQ}),ure={kernelName:Ka,backendName:"webgl",kernelFunc:lre};function cre(e){let{inputs:t,backend:n}=e,{input:s}=t;return r4(s,!0,n)}var dre={kernelName:Uh,backendName:"webgl",kernelFunc:cre},pre="return float(!isnan(x) && !isinf(x));",hre=at({opSnippet:pre,dtype:"bool"}),fre={kernelName:xu,backendName:"webgl",kernelFunc:hre},mre="return float(isinf(x));",gre=at({opSnippet:mre,dtype:"bool"}),yre={kernelName:bu,backendName:"webgl",kernelFunc:gre},Are="return float(isnan(x));",xre=at({opSnippet:Are,dtype:"bool"}),bre={kernelName:vu,backendName:"webgl",kernelFunc:xre},vre="return float(a < b);",wre=`
  return vec4(lessThan(a, b));
`,kre=In({opSnippet:vre,packedOpSnippet:wre,cpuKernelImpl:gQ,dtype:"bool"}),Sre={kernelName:Ni,backendName:"webgl",kernelFunc:kre},Ire="return float(a <= b);",Cre=`
  return vec4(lessThanEqual(a, b));
`,Tre=In({opSnippet:Ire,packedOpSnippet:Cre,cpuKernelImpl:yQ,dtype:"bool"}),Nre={kernelName:Ei,backendName:"webgl",kernelFunc:Tre};function Ere(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=AQ(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var Rre={kernelName:Gh,backendName:"webgl",kernelFunc:Ere},_re=`if (x < 0.0) return NAN;
  return log(x);`,Dre=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,$re=at({opSnippet:_re,packedOpSnippet:Dre,cpuKernelImpl:xQ}),Pre={kernelName:Ja,backendName:"webgl",kernelFunc:$re},Fre="return log(1.0 + x);",Ore=at({opSnippet:Fre}),Mre={kernelName:wu,backendName:"webgl",kernelFunc:Ore},zre="return float(a >= 1.0 && b >= 1.0);",Lre=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Bre=In({opSnippet:zre,packedOpSnippet:Lre,dtype:"bool"}),Wre={kernelName:Ri,backendName:"webgl",kernelFunc:Bre},Vre="return float(!(x >= 1.0));",Ure=at({opSnippet:Vre}),Gre={kernelName:ku,backendName:"webgl",kernelFunc:Ure},Hre="return float(a >= 1.0 || b >= 1.0);",jre=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,qre=In({opSnippet:Hre,packedOpSnippet:jre,dtype:"bool"}),Xre={kernelName:gd,backendName:"webgl",kernelFunc:qre},Kre=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Zre=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},Yre=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,c=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Zre(r.shape,a,o,i,l):new Kre(r.shape,a,o,i,l);return n.runWebGLProgram(c,[r],r.dtype)},Jre={kernelName:yd,backendName:"webgl",kernelFunc:Yre},Qre=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},eae=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s,d=new Qre(r.shape,i,l,c,u);return n.runWebGLProgram(d,[r,a,o],r.dtype)},tae={kernelName:Hh,backendName:"webgl",kernelFunc:eae};function nae(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=be({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=$l(i,e.dtype,"max",s),c=be({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}function i4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=n.shouldExecuteOnCPU([r]),h=r;if(d){if(p){let A=n.texData.get(h.dataId).values,b=new Array(i);for(let S=0;S<b.length;S++)b[S]=r.shape[u[S]];let w=wx(A,r.shape,r.dtype,u,b);h=n.makeTensorInfo(b,r.dtype);let C=n.texData.get(h.dataId);C.values=w}else h=Km(r,u,n);c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("max",c,i);let[f,m]=N.computeOutAndReduceShapes(h.shape,c),g=f;o&&(g=N.expandShapeToKeepDim(f,l));let y;if(p){let A=n.texData.get(h.dataId).values,b=bQ(A,v.sizeFromShape(m),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let w=n.texData.get(y.dataId);w.values=b}else y=nae(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),y}var sae={kernelName:Qa,backendName:"webgl",kernelFunc:i4},rae=IC+`
  return max(a, b);
`,aae=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+qm+`
  return result;
`,oae=In({opSnippet:rae,packedOpSnippet:aae,cpuKernelImpl:vQ}),iae={kernelName:eo,backendName:"webgl",kernelFunc:oae};function lae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;uc(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1;v.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return Ss({inputs:{x:r},backend:n});let d=new Tp(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var uae={kernelName:to,backendName:"webgl",kernelFunc:lae};function cae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],d=N.computePool3DInfo(r.shape,a,o,u,i,c,l),p=new Sx(d,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var dae={kernelName:Ad,backendName:"webgl",kernelFunc:cae},pae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},hae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=l-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function fae(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new Sx(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new hae(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var mae={kernelName:qh,backendName:"webgl",kernelFunc:fae};function gae(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;uc([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=!0,f=new Tp(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new pae(p),y=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}var yae={kernelName:jh,backendName:"webgl",kernelFunc:gae};function Aae(e,t,n,s){let r=new Tp(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new Tp(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var xae={kernelName:Xh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;v.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let c=[1,1];v.assert(N.eitherStridesOrDilationsAreOne(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let u=N.computePool2DInfo(s.shape,r,a,c,o),[d,p]=Aae(s,i,u,l);return[d,p]}};function bae(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=be({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=$l(i,"float32","mean",s),c=be({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}var vae={kernelName:no,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=v.parseAxisParam(a,s.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=o.shouldExecuteOnCPU([s]),h=[],f=s;if(d){if(p){let b=o.texData.get(f.dataId).values,w=new Array(i);for(let E=0;E<w.length;E++)w[E]=s.shape[u[E]];let C=wx(b,s.shape,s.dtype,u,w);f=o.makeTensorInfo(w,s.dtype);let S=o.texData.get(f.dataId);S.values=C}else f=Km(s,u,o);h.push(f),c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("sum",c,i);let[m,g]=N.computeOutAndReduceShapes(f.shape,c),y=m;r&&(y=N.expandShapeToKeepDim(m,l));let x=bae(f,g,y,o);for(let A of h)o.disposeIntermediateTensorInfo(A);return x}};function wae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=r;u!=null&&(d=jn({inputs:{x:r},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,r.shape.length)),N.assertAxesAreInnerMostDims("min",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=v.sizeFromShape(h),m=be({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=$l(m,m.dtype,"min",n),y;if(o){let x=N.expandShapeToKeepDim(p,l);y=be({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=be({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var kae={kernelName:so,backendName:"webgl",kernelFunc:wae},Sae=IC+`
  return min(a, b);
`,Iae=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+qm+`
  return result;
`,Cae=In({opSnippet:Sae,packedOpSnippet:Iae,cpuKernelImpl:wQ}),Tae={kernelName:ro,backendName:"webgl",kernelFunc:Cae},Nae=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let s=e.length,r=vt(s),a=t.map(c=>c[0]).join(","),o=t.map((c,u)=>c[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},Eae=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=vt(s),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=Hn("rc",s),l=Hn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=n==="reflect"?0:1,p="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[s-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${i[s-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},Rae=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Eae(s.shape,r,a):new Nae(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},_ae={kernelName:ao,backendName:"webgl",kernelFunc:Rae},Dae=`if (b == 0.0) return NAN;
  return mod(a, b);`,$ae=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+qm+`
  return result;
`,Pae=In({opSnippet:Dae,packedOpSnippet:$ae}),Fae={kernelName:Su,backendName:"webgl",kernelFunc:Pae},Oae=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Mae=`
if (a == b) {
  return 1.0;
};
return a / b;`,zae=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,l4=In({opSnippet:Mae,packedOpSnippet:zae,checkOutOfBounds:!0}),Lae={kernelName:Ua,backendName:"webgl",kernelFunc:l4},u4="return a - b;",c4=In({opSnippet:u4,packedOpSnippet:u4,supportsComplex:!0,cpuKernelImpl:zQ}),Bae={kernelName:vo,backendName:"webgl",kernelFunc:c4};function d4(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=i4({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=be({inputs:{x:i},backend:n,attrs:{shape:l}}),u=c4({inputs:{a:r,b:c},backend:n}),d=t4({inputs:{x:u},backend:n}),p=Zm({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=be({inputs:{x:p},backend:n,attrs:{shape:l}}),f=l4({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var Wae={kernelName:xo,backendName:"webgl",kernelFunc:d4};function Vae(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:d4({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],d=new Oae(c,u,a),p=[[o]],h=n.runWebGLProgram(d,[l],"int32",p);return i||n.disposeIntermediateTensorInfo(l),h}var Uae={kernelName:Kh,backendName:"webgl",kernelFunc:Vae},p4="return -x;";function Gae(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=SQ(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new fc(s.shape,p4):r=new Ko(s.shape,p4),n.runWebGLProgram(r,[s],s.dtype)}var Hae={kernelName:_i,backendName:"webgl",kernelFunc:Gae},jae=Qs.nonMaxSuppressionV3Impl;function qae(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=jae(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Xae={kernelName:$i,backendName:"webgl",kernelFunc:qae},Kae=Qs.nonMaxSuppressionV4Impl;function Zae(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:h}=Kae(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Yae={kernelName:Iu,backendName:"webgl",kernelFunc:Zae},Jae=Qs.nonMaxSuppressionV5Impl;function Qae(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=Jae(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var eoe={kernelName:Pi,backendName:"webgl",kernelFunc:Qae},toe=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},noe=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=v.sizeFromShape(r.shape),c=new toe(l,a,o,i),u=be({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[u],r.dtype);n.disposeIntermediateTensorInfo(u);let p=[...r.shape,a],h=be({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},soe={kernelName:Oi,backendName:"webgl",kernelFunc:noe};function t0(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Np({inputs:{input:s},backend:n}),a=t0({inputs:{x:r},backend:n}),o=e0({inputs:{input:s},backend:n}),i=t0({inputs:{x:o},backend:n}),l=Zo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Ep({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var roe={kernelName:Qi,backendName:"webgl",kernelFunc:t0};function h4(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Np({inputs:{input:s},backend:n}),a=h4({inputs:{x:r},backend:n}),o=e0({inputs:{input:s},backend:n}),i=t0({inputs:{x:o},backend:n}),l=Zo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Ep({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var aoe={kernelName:Fi,backendName:"webgl",kernelFunc:h4};function ooe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Tx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Tx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=HC({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var ioe={kernelName:Mi,backendName:"webgl",kernelFunc:ooe},loe=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let s=e.length,r=vt(s),a=t.map(l=>l[0]).join(","),o=t.map((l,c)=>l[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},uoe=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=vt(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=Hn("rc",s),l=Hn("source",s),c=`${i[s-1]} < ${this.outputShape[s-1]}`,u=s===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${c}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${d[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${u});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},f4=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(v.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return Ep({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uoe(r.shape,a,o):new loe(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},coe={kernelName:io,backendName:"webgl",kernelFunc:f4},doe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,poe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+qm+`
  return result;
`,hoe=In({opSnippet:doe,packedOpSnippet:poe}),foe={kernelName:lo,backendName:"webgl",kernelFunc:hoe};function moe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],c=v.parseAxisParam(a,r.shape),u=c,d=N.getAxesPermutation(u,i),p=r;d!=null&&(p=jn({inputs:{x:r},backend:n,attrs:{perm:d}}),u=N.getInnerMostAxes(u.length,i),l.push(p)),N.assertAxesAreInnerMostDims("prod",u,i);let h;if(n.shouldExecuteOnCPU([p])){let f=n.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:y}=CQ(p.shape,p.dtype,f,u);h=n.makeTensorInfo(g,y,m)}else{let[f,m]=N.computeOutAndReduceShapes(p.shape,u),g=v.sizeFromShape(m),y=be({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),x=Fd(r.dtype),A=$l(y,x,"prod",n);h=be({inputs:{x:A},backend:n,attrs:{shape:f}}),l.push(y),l.push(A)}if(o){l.push(h);let f=N.expandShapeToKeepDim(h.shape,c);h=be({inputs:{x:h},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var goe={kernelName:zi,backendName:"webgl",kernelFunc:moe},m4=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=TQ(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},yoe={kernelName:Cu,backendName:"webgl",kernelFunc:m4},Aoe="return 1.0 / x;",xoe=at({opSnippet:Aoe}),boe={kernelName:Tu,backendName:"webgl",kernelFunc:xoe},voe=wr+`
  return (x < 0.0) ? 0.0 : x;
`,woe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,koe=at({opSnippet:voe,packedOpSnippet:woe}),Soe={kernelName:co,backendName:"webgl",kernelFunc:koe},Ioe=wr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Coe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Toe=at({opSnippet:Ioe,packedOpSnippet:Coe}),Noe={kernelName:ho,backendName:"webgl",kernelFunc:Toe},Eoe=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Roe=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function _oe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Roe(r.shape,l,c,a,o):new Eoe(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],"float32")}var Doe={kernelName:po,backendName:"webgl",kernelFunc:_oe},$oe=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Poe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new $oe(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var Foe={kernelName:Yh,backendName:"webgl",kernelFunc:Poe},Ooe=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Moe=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[s&&t>1?o-1:o,s&&n>1?i-1:i],u=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0",p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function zoe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Moe(r.shape,l,c,a,o):new Ooe(r.shape,l,c,a,o);return n.runWebGLProgram(u,[r],r.dtype)}var Loe={kernelName:Nu,backendName:"webgl",kernelFunc:zoe},Boe=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Woe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new Boe(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var Voe={kernelName:Zh,backendName:"webgl",kernelFunc:Woe},Uoe=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=vt(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},Goe=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=Hn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=vt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${r}) {
              result.a = ${u(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return d(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",d(h)}function c(h){return h[n-2]="("+h[n-2]+" + 1)",d(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",d(h)}function d(h){let f=e.map((y,x)=>p(x,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function Hoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return Ss({inputs:{x:r},backend:n});let l=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Goe(r.shape,i):new Uoe(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var joe={kernelName:Bi,backendName:"webgl",kernelFunc:Hoe},qoe=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Xoe={kernelName:el,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new qoe(s.shape,a),[c,u]=N.getImageCenter(o,s.shape[1],s.shape[2]),d=[[c,u,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,d)}},Koe=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Zoe=at({opSnippet:Koe}),Yoe={kernelName:Wi,backendName:"webgl",kernelFunc:Zoe},Joe="return inversesqrt(x);",Qoe=at({opSnippet:Joe,cpuKernelImpl:NQ}),eie={kernelName:fo,backendName:"webgl",kernelFunc:Qoe},g4=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=vt(r.length),l=vt(a.length),c="";n===1?c="i":n===2&&(c="i, j");let u=`getIndices(${c})`,d="";s===1?d="i":s===2&&(d="i, coords[1]");let p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function tie(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=be({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=be({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new g4(l,i,h.shape.length,f.shape.length,u,p),y=n.runWebGLProgram(g,[f,h,m],f.dtype),x=be({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}var nie={kernelName:Vi,backendName:"webgl",kernelFunc:tie},sie=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let c=0;c<t.length;c++)l.push(`${o[c]}`),c<e&&i.push(`${o[c]}`);s=i.join(),r=l.join()}let a=vt(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function rie(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new sie(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],Ln(r.dtype,a.dtype))}var aie={kernelName:Ui,backendName:"webgl",kernelFunc:rie},oie=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,iie=at({opSnippet:oie}),lie={kernelName:Eu,backendName:"webgl",kernelFunc:iie},y4="return 1.0 / (1.0 + exp(-1.0 * x));",uie=at({opSnippet:y4,packedOpSnippet:y4,cpuKernelImpl:EQ}),cie={kernelName:go,backendName:"webgl",kernelFunc:uie},die=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,pie=at({opSnippet:die}),hie={kernelName:Ru,backendName:"webgl",kernelFunc:pie},fie=RC+`
  return sin(x);
`,mie=at({opSnippet:fie}),gie={kernelName:mo,backendName:"webgl",kernelFunc:mie},yie=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Aie=at({opSnippet:yie}),xie={kernelName:Hi,backendName:"webgl",kernelFunc:Aie},bie=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,vie=at({opSnippet:bie}),wie={kernelName:_u,backendName:"webgl",kernelFunc:vie},kie=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let c=[],u=f4({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=be({inputs:{x:u},backend:n,attrs:{shape:d}}),m=jn({inputs:{x:f},backend:n,attrs:{perm:p}}),g=be({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},Sie={kernelName:ji,backendName:"webgl",kernelFunc:kie};function Iie(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),c=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[d,p,h,f,m]=_Q(i,s.shape,s.dtype,l,r.dtype,c,u);return[n.makeTensorInfo(p,s.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var Cie={kernelName:bd,backendName:"webgl",kernelFunc:Iie};function Tie(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[c,u,d]=DQ(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(u,s.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var Nie={kernelName:Du,backendName:"webgl",kernelFunc:Tie};function Eie(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=gC(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(u,s.dtype,c)}var Rie={kernelName:vd,backendName:"webgl",kernelFunc:Eie};function _ie(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[c,u]=gC(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(u,s.dtype,c)}var Die={kernelName:wd,backendName:"webgl",kernelFunc:_ie};function $ie(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,r,i),p=!1,h=new g4(c,l,r.shape.length,a.shape.length,u,[d,1],p),f=n.runWebGLProgram(h,[a,r,o],a.dtype),m=be({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var Pie={kernelName:kd,backendName:"webgl",kernelFunc:$ie};function Fie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=gc({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var Oie={kernelName:qi,backendName:"webgl",kernelFunc:Fie},A4="return sqrt(x);",Mie=at({opSnippet:A4,packedOpSnippet:A4,cpuKernelImpl:$Q}),zie={kernelName:yo,backendName:"webgl",kernelFunc:Mie},Lie="return x * x;",Bie=at({opSnippet:Lie}),Wie={kernelName:$u,backendName:"webgl",kernelFunc:Bie},x4="return (a - b) * (a - b);",Vie=In({opSnippet:x4,packedOpSnippet:x4}),Uie={kernelName:bo,backendName:"webgl",kernelFunc:Vie};function Gie({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=wr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Ko(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var Hie={kernelName:So,backendName:"webgl",kernelFunc:Gie},jie=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=vt(n.length),a=vt(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,c)=>(i++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${i-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function qie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Mt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=be({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=Mt.computeOutShape(x,A,b),E=gc({inputs:{x:r},backend:n,attrs:{begin:x,size:S}});w=be({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([r])){let E=n.readSync(r.dataId),R=ze(r.shape,r.dtype,E),F=PQ(h,R,b,x);w=n.makeTensorInfo(f,r.dtype,F.values)}else{let E=new jie(x,b,h);w=n.runWebGLProgram(E,[r],r.dtype)}let C=be({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),C}var Xie={kernelName:Xi,backendName:"webgl",kernelFunc:qie};function Kie(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=FQ(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Zie={kernelName:Sd,backendName:"webgl",kernelFunc:Kie};function Yie(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[c,u,d]=OQ(i,l,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var Jie={kernelName:Jh,backendName:"webgl",kernelFunc:Yie};function Qie(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=MQ(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var ele={kernelName:Qh,backendName:"webgl",kernelFunc:Qie},tle="return tan(x);",nle=at({opSnippet:tle}),sle={kernelName:Ki,backendName:"webgl",kernelFunc:nle},rle=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,ale=at({opSnippet:rle}),ole={kernelName:wo,backendName:"webgl",kernelFunc:ale},ile=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=vt(this.rank),r=lle(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function lle(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function b4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>v.decodeString(p)):l,u=ze(r.shape,r.dtype,c),d=LQ(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new ile(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var ule={kernelName:Zr,backendName:"webgl",kernelFunc:b4},cle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},dle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Pl(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function v4(e){let t=1;for(;t<e;)t*=2;return t}function ple(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(n.shouldExecuteOnCPU([r])||u<i||a>l){let F=n.readSync(r.dataId),[_,P]=BQ(F,c,r.dtype,a,o);return[n.makeTensorInfo(_.shape,_.dtype,_.values),n.makeTensorInfo(P.shape,P.dtype,P.values)]}if(a===0)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(u===1)return[r,Ep({attrs:{shape:c,dtype:"int32",value:0},backend:n})];let d=n.texData.get(r.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(r):r,m=v.sizeFromShape(c)/u,g=be({inputs:{x:h},attrs:{shape:[m,u]},backend:n});p&&Pl(n,h);let y=v4(a),x=v4(u),A=null,b=()=>A===null?[g,g]:[g,A],w=(F,_,P)=>{let T=b(),O=new cle(P),K=[[u],[A===null?1:0],[Number.NEGATIVE_INFINITY],[F],[_]],z=A;A=n.runWebGLProgram(O,T,"int32",K),Pl(n,z)};for(let F=1;F<y;F*=2){let _=F*2;for(let P=F;P>=1;P/=2)w(_,P,[m,x])}for(let F=x;F>y;F/=2){let _=b(),P=new dle([m,F/2]),O=[[u],[A===null?1:0],[y]],G=A;A=n.runWebGLProgram(P,_,"int32",O),Pl(n,G);let K=y/2,z=K*2;for(let j=K;j>=1;j/=2)w(z,j,A.shape)}let C=A;A=gc({inputs:{x:A},backend:n,attrs:{begin:0,size:[m,a]}}),Pl(n,C);let S=o4({inputs:{x:g,indices:A},backend:n,attrs:{axis:1,batchDims:1}});Pl(n,g);let E=c.slice(0,-1);E.push(a),C=A,A=be({inputs:{x:A},attrs:{shape:E},backend:n}),Pl(n,C);let R=S;return S=be({inputs:{x:S},attrs:{shape:E},backend:n}),Pl(n,R),[S,A]}var hle={kernelName:Zi,backendName:"webgl",kernelFunc:ple},fle=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function mle(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new fle(d,p,o,i,l,g);return n.runWebGLProgram(y,[r,a],"float32")}var gle={kernelName:Yi,backendName:"webgl",kernelFunc:mle};function yle(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;uc(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:c}=WQ(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}var Ale={kernelName:ef,backendName:"webgl",kernelFunc:yle};function xle(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=gc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),y=be({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var ble={kernelName:Ji,backendName:"webgl",kernelFunc:xle},vle=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",c=Math.floor(n/4)*4,u=n%4,d=`
        sumValue += dot(values, segFilter);
    `,p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function wle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],c=0,u=N.getAxesPermutation([c],i),d=r;u!=null&&(d=jn({inputs:{x:r},backend:n,attrs:{perm:u}}),l.push(d),c=N.getInnerMostAxes(1,i)[0]);let p=N.segment_util.computeOutShape(d.shape,c,o),h=v.sizeFromShape([d.shape[c]]),f=be({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=Fd(r.dtype),g=(b,w,C,S,E)=>{let R=b.shape[0],F=b.shape[1],_=N.segment_util.segOpComputeOptimalWindowSize(F,E),P={windowSize:_,inSize:F,batchSize:R,numSegments:E},T=new vle(P,w),O=n.compileAndRun(T,[b,C],S);if(l.push(O),O.shape[1]===E)return O;let G=m4({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),K=b4({inputs:{x:G},backend:n,attrs:{reps:[F/_]}});return l.push(G),l.push(K),g(O,w,K,S,E)},y=g(f,"unsortedSegmentSum",a,m,o),x=be({inputs:{x:y},backend:n,attrs:{shape:p}}),A=x;if(u!=null){l.push(x);let b=N.getUndoAxesPermutation(u);A=jn({inputs:{x:A},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var kle={kernelName:Id,backendName:"webgl",kernelFunc:wle},Sle=[Jre,tae,Oee,zee,Wee,Gee,jee,Kee,Yee,Qee,ste,ate,lte,dte,Ate,fte,vte,Ite,kte,Ete,_te,$te,Mte,Gte,jte,Xte,ene,nne,one,une,yee,fne,Sne,Cne,Ane,Rne,Dne,Nne,Fne,zne,Wne,Une,Hne,Xne,ese,nse,Zne,ase,lse,cse,fse,Ase,wse,Ise,Cse,Tse,Ese,_se,$se,Fse,Mse,Wse,Gse,qse,Kse,Jse,tre,are,ure,gee,dre,pne,fre,yre,bre,xee,Sre,Nre,Rre,Mre,Pre,Wre,Gre,Xre,sae,dae,uae,mae,yae,xae,iae,vae,kae,Tae,_ae,Fae,Uae,See,Hae,Xae,Yae,eoe,Zte,soe,aoe,ioe,coe,foe,vee,goe,yoe,Yte,Lae,boe,Noe,Soe,Cee,Doe,Foe,Loe,Voe,joe,Xoe,Yoe,eie,nie,aie,lie,cie,hie,gie,xie,Vte,Wae,wie,Sie,Cie,Nie,Rie,Die,Pie,Oie,zie,Wie,Uie,Hie,Xie,Zie,Jie,ele,Bae,$ee,sle,ole,ule,hle,gle,Pee,Ale,ble,kle,roe];for(let e of Sle)ur(e);var Wr=Y();Wr.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Wr.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Wr.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Wr.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Wr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Wr.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Wr.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Wr.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Wr.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Wr.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function Ile(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function wn(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function n0(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function Nx(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
`}function la(){return`
  ${Nx()}
  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,
          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,
          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Ze(){return`
    ${la()}
      let index = getGlobalIndex();
`}function Cle(e,t,n,s=!1){let r=`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;`;if(s===!0){let h=S4(t.shape),f=`
      struct Matrix0 {
        numbers: array<${n0(t.dtype,n.isVec4)}>;
      };
      struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `;return[w4,f,r,k4,h,n.getUserCode()].join(`
`)}let a=[],o="struct Uniforms { NAN : f32; ";n.variableNames.forEach((h,f)=>{o+=`${h.charAt(0).toLowerCase()+h.slice(1)}Shape : ${wn(e[f].shape.length)}; `}),o+=`outShape : ${wn(t.shape.length)} ; `;let i=t.shape.length-1;o+=`
       outShapeStrides: ${wn(i)}; `,n.size&&(o+="size : i32; "),n.uniforms&&(o+=n.uniforms),o+="};",a.push(o),n.atomic?a.push(`
    struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):a.push(`
    struct Matrix0 {
        numbers: array<${n0(t.dtype,n.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),n.variableNames.forEach((h,f)=>{a.push(`
    struct Matrix${1+f} {
      numbers: array<${n0(e[f].dtype,n.isVec4)}>;
    };
    [[group(0), binding(${1+f})]] var<storage, read> ${h} : Matrix${1+f};
    `)}),o!==""&&a.push(`
    [[group(0), binding(${1+n.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `),a.push(r);let[l,c]=Dle(t.shape,n.dispatchLayout),u=S4(t.shape),d=[w4,a.join(`
`),k4,u,l,Tle(t.shape.length)];if(n.atomic||d.push(Nle(t.shape,t.dtype,n.isVec4)),c===t.shape.length){let h=e.map(f=>Ele(f,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);d.push(h)}return d.push(n.getUserCode()),d.join(`
`)}var w4=`
  var<private> localId: vec3<u32>;
  var<private> globalId: vec3<u32>;
  var<private> numWorkgroups: vec3<u32>;

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }

  fn isNanCustomVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isNanCustom(val[0]), isNanCustom(val[1]), isNanCustom(val[2]), isNanCustom(val[3]));
  }

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) &&
        all(coord < shape);
  }

  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) &&
        all(coord < shape);
  }
  `,k4=`
  fn getFlatIndex1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }

  fn getFlatIndex2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }

  fn getFlatIndex3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }

  fn getFlatIndex4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  // Only used when the y/z dimension of workgroup size is 1.
  fn getGlobalIndex() -> i32 {
    if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
      return i32(globalId.x);
    }

    let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
        localId.y * workGroupSizeX + localId.x;
    let workGroupID = (globalId - localId)/vec3<u32>(
        workGroupSizeX, workGroupSizeY, workGroupSizeZ);

    return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
      workGroupID.y * numWorkgroups.x + workGroupID.x) *
      (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
      localInvocationIndex);
  }
`;function Tle(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputFlatIndex(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputFlatIndex(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputFlatIndex(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputFlatIndex(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function Nle(e,t,n){let s=e.length,r=n0(t,n),a;if(n?a=`fn setOutputFlat(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${r}(value);
    }`:a=`fn setOutputFlat(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${r}(value);
    }
    fn setOutputFlatI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3"].slice(0,s),i=wn(s);n?a+=`
      fn setOutput(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex / 4, value);
      }
      fn setOutputI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutput(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlat(flatIndex, value);
      }
      fn setOutputI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputFlatIndex(${i}(${o.join(", ")}));
        setOutputFlatI32(flatIndex, value);
      }
    `}return a}function Ele(e,t,n,s){let r=Rle(e,n);return e.shape.length<=t.length&&(r+=_le(e,t,n,s)),r}function Rle(e,t){let n=e.name,s=e.shape.length,r=wn(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3"].slice(0,s),i=o.map(u=>`${u} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}.numbers[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}.numbers[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,c=`${s}D`;return s===0&&(c="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}.numbers[getFlatIndex${c}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function _le(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"AtOutCoords",i=e.shape.length,l=t.length,c=wn(l);if(v.arraysEqual(e.shape,t)&&s)return n?`
        fn ${o}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[globalIndex]);
        }

        fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
          return vec4<f32>(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}ByGlobalIndex(globalIndex : i32) -> f32 {
        return f32(${r}.numbers[globalIndex]);
      }

      fn ${o}ByCoords(coords : ${c}) -> f32 {
        return f32(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"}]);
      }
      `;let u=N.getBroadcastDims(e.shape,t),d=l-i,p="";if(i===0)return n?`
      fn ${o}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}ByGlobalIndex(globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}ByCoords(coords : ${c}) -> f32{
        return get${a}();
      }
    `;l<2&&u.length>=1?p="coords = 0;":p=u.map(g=>`coords[${g+d}] = 0;`).join(`
`);let h="";if(l<2&&i>0)h="coords";else if(l>1){let g=wn(i),y=e.shape.map((x,A)=>`coords[${A+d}]`).join(", ");h=`${g}(${y})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromFlatIndex(globalIndex);
        ${p}
        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];
      }

      fn ${o}ByCoords(coordsIn : ${c}) -> vec4<f32> {
        var coords = coordsIn;
        ${p}
        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${o}ByGlobalIndex(globalIndex : i32) -> f32 {
      var coords = getCoordsFromFlatIndex(globalIndex);
      ${p}
      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);
    }

    fn ${o}ByCoords(coordsIn : ${c}) -> f32 {
      var coords = coordsIn;
      ${p}
      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);
    }
  `}function Dle(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords() -> ${wn(a)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromFlatIndex(globalIndex);
    }
    `,a];let o="",i=[n,s,r],l=0;for(let p=0;p<i.length;p++){let h=i[p];if(h.length!==0)if(l+=h.length,h.length===1)o+=`let d${h[0]} = i32(globalId[${p}]);`;else{let f=Ile(h,"uniforms.outShape");o+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${p} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${p} - d${h[m]} * ${f[m]};`:o+=`index${p} = index${p} - d${h[m]} * ${f[m]};`}}let c=[];for(let p=0;p<l;p++)c.push(`d${p}`);let u=wn(l),d=`fn getOutputCoords() -> ${u} {
    ${o}
  `;return c.length===0?d+=`return ${u}(0); }`:d+=`return ${u}(${c.join(",")}); }`,[d,l]}function S4(e){let t=e.length;if(t<=1)return"fn getCoordsFromFlatIndex(index : i32) -> i32 { return index; }";let n=v.computeStrides(e),s=wn(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromFlatIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides[${i}]`,c=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`;return`${l}; ${c};`}).join("");return`
    fn getCoordsFromFlatIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var I4={};Me(I4,{ArrayBufferToTypedArray:()=>C4,GPUBytesPerElement:()=>Dx,computeDispatch:()=>Oe,computeWorkGroupSizeForConv2d:()=>Ex,computeWorkGroupSizeForMatMul:()=>Rx,computeWorkPerThreadForConv2d:()=>_x,flatDispatchLayout:()=>He,isWebGPUSupported:()=>$x,tilesFitEvenlyIntoShape:()=>ua});var xc=65535,Fl=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function ua(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]==0)}function Oe(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(Fl(e.x.map(l=>t[l]))/(n[0]*s[0])),e.y?Math.ceil(Fl(e.y.map(l=>t[l]))/(n[1]*s[1])):1,e.z?Math.ceil(Fl(e.z.map(l=>t[l]))/(n[2]*s[2])):1];if(r<=xc&&a<=xc&&o<=xc)return[r,a,o];v.assert(r>xc&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r));return i>xc?(i=Math.ceil(Math.cbrt(r)),v.assert(i<=xc,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function Ex(e,t){let n=Fl(e.x.map(r=>t[r])),s=Fl(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function Rx(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function _x(e,t){let n=Fl(e.x.map(r=>t[r])),s=Fl(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function He(e){return{x:e.map((t,n)=>n)}}function Dx(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function C4(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string"){let n=new Int32Array(e),s=new ArrayBuffer(n.length),r=new Uint8Array(s);for(let a=0;a<n.length;a++)r[a]=n[a];return r}else throw new Error(`Unknown dtype ${t}`)}function $x(){return!!navigator.gpu}var jt=(e=>(e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG",e))(jt||{}),$le="return a + b;",Ple="return areal * breal - aimag * bimag;",Fle="return areal * bimag + aimag * breal;",Ole="return a / b;",Mle="return a * b;",zle="return (a - b) * (a - b);",Lle="return a - b;",Ble="return f32(a == b);",Wle="return vec4<f32>(a == b);",Vle="return f32(a > b);",Ule="return vec4<f32>(a > b);",Gle="return f32(a >= b);",Hle="return vec4<f32>(a >= b);",jle="return f32(a < b);",qle="return vec4<f32>(a < b);",Xle="return f32(a <= b);",Kle="return vec4<f32>(a <= b);",Zle="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Yle=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Jle=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,T4=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Qle=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,eue=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,tue="return f32(a != b);",nue="return vec4<f32>(a != b);",sue=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,rue=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${T4}
  return resultTemp;
  `,aue="if (a < 0.0) { return b * a; }  return a;",oue=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function N4(e,t){let n=t?T4:Jle;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isNanCustomVec4(a) | isNanCustomVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function Rp(e,t){switch(e){case 0:return Mle;case 1:return $le;case 2:return Lle;case 3:return Ole;case 4:return t?Wle:Ble;case 5:return t?Ule:Vle;case 6:return t?Hle:Gle;case 7:return t?qle:jle;case 8:return t?Kle:Xle;case 9:return t?Yle:Zle;case 10:return t?nue:tue;case 11:return zle;case 12:return t?eue:Qle;case 14:return t?oue:aue;case 15:return N4("max",t);case 16:return N4("min",t);case 13:return t?rue:sue;case 17:return Ple;case 18:return Fle;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var wt=(e=>(e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.PRELU=12]="PRELU",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.LEAKYRELU=15]="LEAKYRELU",e[e.RSQRT=16]="RSQRT",e[e.SIN=17]="SIN",e[e.SINH=18]="SINH",e[e.SIGMOID=19]="SIGMOID",e[e.SQRT=20]="SQRT",e[e.SQUARE=21]="SQUARE",e[e.TANH=22]="TANH",e[e.TO_INT=23]="TO_INT",e))(wt||{}),iue="return abs(a);",lue="return ceil(a);",uue="return cos(a);",cue=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,due="return exp(a) - 1.0;",pue="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",hue=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,fue="return exp(a);",mue="return floor(a);",gue="return a;",yue=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Aue="return f32(!(a >= 1.0));",xue="return -a;",bue="return (a < 0.0) ? b * a : a;",vue="if (a < 0.0) { return uniforms.alpha * a; } return a;",wue="return max(a, 0.0);",kue="return clamp(a, 0.0, 6.0);",Sue="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Iue=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNanCustomVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Cue="return 1.0/sqrt(a);",Tue="return 1.0 / (1.0 + exp(-1.0 * a));",Nue="return sin(a);",Eue=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Rue="return sqrt(a);",_ue="return a * a;",Due=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,$ue="return f32(i32((a)));";function bc(e,t){switch(e){case 0:return iue;case 2:return uue;case 3:return cue;case 1:return lue;case 4:return t?hue:pue;case 5:return fue;case 6:return due;case 7:return mue;case 8:return gue;case 9:return yue;case 10:return Aue;case 11:return xue;case 12:return bue;case 15:return vue;case 13:return t?Iue:wue;case 14:return t?Sue:kue;case 16:return Cue;case 19:return Tue;case 17:return Nue;case 18:return Eue;case 20:return Rue;case 21:return _ue;case 22:return Due;case 23:return $ue;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function ca(e,t=!1){if(e===null)return null;if(e==="linear")return bc(wt.LINEAR);if(e==="relu")return bc(wt.RELU,t);if(e==="elu")return bc(wt.ELU,t);if(e==="relu6")return bc(wt.RELU6,t);if(e==="prelu")return Rp(jt.PRELU,t);if(e==="sigmoid")return bc(wt.SIGMOID);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function E4(e,t){let n={RowPerThread:e[1],ColPerThread:e[0],TileAOuter:t[1]*e[1],TileBOuter:t[0]*e[0],TileInner:t[0]*e[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${n.TileInner/n.ColPerThread}>, ${n.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n.TileBOuter/n.ColPerThread}>, ${n.TileInner}>;

  let RowPerThread = ${n.RowPerThread};
  let ColPerThread = ${n.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${n.TileAOuter};
  let TileBOuter = ${n.TileBOuter};
  let TileInner = ${n.TileInner};

  ${la()}

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${n.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${t[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}function Pue(e){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;
  let tileSize = ${e[0]*4};
  ${la()}
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var Fue=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.isVec4=!0,this.vecSize=4,this.outputShape=t,this.workGroupSize=Rx(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.vecSize,a=r,o=[s,a],i=[a,r];return[ua(o,this.aShape.slice(1)),ua(i,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let o=ca(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutput(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?E4([this.vecSize,this.workPerThread,1],this.workGroupSize):Pue(this.workGroupSize)}

    `}};function Px(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${la()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function Oue(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${la()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var R4=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=s?e[1]:e[2];this.workGroupSize=Rx(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),v.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=a!=null,u=i!=null;c&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=s,this.transposeB=r,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=u;let d=this.outputShape[2],p=this.transposeB?[this.outputShape[0],d,l]:[this.outputShape[0],l,d];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${s}_${r}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),v.assert(s%this.workGroupSize[0]==0&&s%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[ua(r,this.aShape.slice(1)),ua(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let o=ca(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutput(batch, row, col, value);
      }
      ${this.outputShape[1]>1?Px([this.workPerThread,this.workPerThread,1],this.workGroupSize):Oue(this.workGroupSize)}
    `}};function Mue(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${la()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var zue=class{constructor(e,t=!1,n=!1,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize);let o=s!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",s="";if(this.activation){let o=ca(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutput(batch, row, col, value);
      }
      ${Mue()}
    `}};function Lue(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${la()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var Bue=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],v.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=s!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let o=ca(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutput(batch, row, col, value);
        }
      }
      ${Lue(this.workGroupSize)}
    `}};function qe(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a),i=v.sizeFromShape(o);return v.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var Wue={kernelName:Li,backendName:"webgpu",kernelFunc:qe};function Fx({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=s?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),b=ol.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[y,d,h]:[y,h,d],C=s?[x,f,p]:[x,p,f],S=qe({inputs:{x:e},backend:r,attrs:{shape:w}}),E=qe({inputs:{x:t},backend:r,attrs:{shape:C}}),R=[S,E],F=Math.max(y,x),_=d%4==0&&f%4==0&&!n&&!s&&f>=32,P;h*f<=32?P=new zue([F,h,f],n,s,a,l,o):!n&&!s&&(h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||d>=2*h))?P=new Bue(w,C,[F,h,f],a,l,o):_?P=new Fue(w,[F,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,l,o):P=new R4(w,[F,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,s,a,l,o);let T=[S,E];a&&T.push(a),o&&T.push(o);let O=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[d]}],G=r.runWebGPUProgram(P,T,e.dtype,O),K=qe({inputs:{x:G},backend:r,attrs:{shape:b}});R.push(G);for(let z of R)r.disposeData(z.dataId);return K}function Vue(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return Fx({a:r,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var Uue={kernelName:Io,backendName:"webgpu",kernelFunc:Vue},_4=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Rp(this.op,!1)}
      }

      ${Ze()}
        if(index < uniforms.size) {
          let areal = getARealAtOutCoordsByGlobalIndex(index);
          let aimag = getAImagAtOutCoordsByGlobalIndex(index);
          let breal = getBRealAtOutCoordsByGlobalIndex(index);
          let bimag = getBImagAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Gue=class{constructor(e,t,n,s){this.variableNames=["A","B"],this.size=!0;let r=256;this.workGroupSize=[r,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=He(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAAtOutCoordsByCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBAtOutCoordsByCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Rp(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ze()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromFlatIndex(flatIndex);

              ${t}
              setOutputFlat(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},Hue=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Rp(this.op,this.isVec4)}
      }
      ${Ze()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalIndex(index);
          let b = getBAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
    `}},D4=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Rp(this.op,!1)}
      }
      ${Ze()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalIndex(index);
          let b = getBAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, binaryOperation(a, b));
        }
      }
      `}};function $4(e,t,n){if(v.arraysEqual(t,n)&&v.sizeFromShape(t)%4==0)return new Hue(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new Gue(e,t,n,a):new D4(e,t,n)}function rr(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var jue={kernelName:Za,backendName:"webgpu",kernelFunc:rr};function vc(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=rr({inputs:{x:s},backend:n}),l=rr({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var que={kernelName:cd,backendName:"webgpu",kernelFunc:vc},_p=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${bc(this.op,!1)}
      }
      ${Ze()}
        if (index < uniforms.size) {
          let a = getAAtOutCoordsByGlobalIndex(index);
          setOutputFlat(index, unaryOperation(a));
        }
      }
      `}};function Cn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let c=o.tensorMap.get(a.dataId),u=t(c.values,i);return o.makeTensorInfo(a.shape,i,u)}let l=new _p(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function qn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let d=l.tensorMap.get(o.dataId),p=l.tensorMap.get(i.dataId),h,f;if(e!==jt.MUL)[h,f]=[[d.complexTensorInfos.real,p.complexTensorInfos.real],[d.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(g=>{let[y,x]=g,A={dataId:y.dataId,dtype:y.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},w=$4(e,o.shape,i.shape);return l.runWebGPUProgram(w,[A,b],Ln(y.dtype,x.dtype))});else{let g=new _4(jt.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),y=new _4(jt.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),x=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape}];h=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(y,x,"float32")}let m=vc({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let c=s||Ln(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let d=l.tensorMap.get(o.dataId).values,p=l.tensorMap.get(i.dataId).values,h=o.dtype==="string"?N.fromUint8ToStringArray(d):d,f=o.dtype==="string"?N.fromUint8ToStringArray(p):p,[m,g]=t(o.shape,i.shape,h,f,c);return l.makeTensorInfo(g,c,m)}let u=$4(e,o.shape,i.shape);return l.runWebGPUProgram(u,[o,i],c)}}var{addImpl:Xue,ceilImpl:Kue,concatImpl:Zue,equalImpl:Yue,expImpl:Jue,expm1Impl:Que,floorImpl:ece,gatherNdImpl:tce,gatherV2Impl:nce,greaterEqualImpl:sce,greaterImpl:rce,lessEqualImpl:ace,lessImpl:oce,logImpl:ice,maxImpl:lce,maximumImpl:uce,minimumImpl:cce,multiplyImpl:dce,negImpl:pce,notEqualImpl:hce,prodImpl:fce,rangeImpl:mce,rsqrtImpl:gce,simpleAbsImpl:yce,sliceImpl:Ace,stridedSliceImpl:xce,stringNGramsImpl:bce,subImpl:vce,tileImpl:wce,topKImpl:kce,transposeImpl:Sce,uniqueImpl:Qye}=Nm,Ice=Cn({opType:wt.ABS,cpuKernelImpl:yce}),Cce={kernelName:mi,backendName:"webgpu",kernelFunc:Ice},Tce=qn({opSnippet:jt.ADD,cpuKernelImpl:Xue,supportsComplex:!0}),Nce={kernelName:Xr,backendName:"webgpu",kernelFunc:Tce},Ece=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}AtOutCoordsByCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Ze()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputFlat(flatIndex, ${t});
          }
        }
      }
    `}};function Rce(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return rr({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>Ln(i,l)),a=s.map(i=>i.shape),o=new Ece(a);return n.runWebGPUProgram(o,s,r)}var _ce={kernelName:Da,backendName:"webgpu",kernelFunc:Rce},P4=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32; infinityValue : f32;",this.size=!0;let s=[t];N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=N.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(r,a)=>this.outputShape.length===1?r:`${r}[${a}]`,n=r=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${r}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromFlatIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Ze()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputFlatI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},Dce=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Nx()}
      fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
              [[builtin(workgroup_id)]] workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputFlat((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},$ce=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=wn(this.outputShape.length),t=Pce(this.newDim);return`
      ${Ze()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromFlatIndex(flatIndex);
            setOutputFlat(flatIndex, A.numbers[getFlatIndex${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function Pce(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC[${s}]`;return n.join()}function Ol(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[a[u]];if(n.shouldExecuteOnCPU([r])){let d=o.tensorMap.get(r.dataId).values,p=Sce(d,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,p)}if(r.shape.length===2&&v.arraysEqual(a,[1,0])){let u=new Dce(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}let c=new $ce(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}var Fce={kernelName:ko,backendName:"webgpu",kernelFunc:Ol};function Oce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ol({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=new P4(l.shape,o[0],"max"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var Mce={kernelName:$a,backendName:"webgpu",kernelFunc:Oce};function zce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=N.getAxesPermutation(o,r.shape.length),l=r,c=[];i!=null&&(l=Ol({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=new P4(l.shape,o[0],"min"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var Lce={kernelName:du,backendName:"webgpu",kernelFunc:zce},F4=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Ze()}
      if (index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputFlat(index, ${t});
        }
      }
    `}},O4=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputFlat(index, value);
        }
      }
    `}};function Bce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=N.computePool2DInfo(r.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&v.arraysEqual(u.inShape,u.outShape))return rr({inputs:{x:r},backend:n});let d,p=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return u.filterHeight===1&&u.filterWidth===1?d=new O4(u):(d=new F4(u,"avg"),p.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[r],r.dtype,p)}var Wce={kernelName:Pa,backendName:"webgpu",kernelFunc:Bce};function Vce(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Fx({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var Uce={kernelName:Fa,backendName:"webgpu",kernelFunc:Vce},Gce=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${wn(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=wn(this.rank),t=Hce(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${Ox[a]} = uniforms.start[${a}] + coords.${Ox[a]};`),`
      ${Ze()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromFlatIndex(index);
          ${n.join(`
`)}
          setOutputFlat(index, getSource(${t}));
        }
      }
    `}},Ox=["x","y","z","w","u","v"];function Hce(e){if(e===1)return"sourceLoc";if(e<=6)return Ox.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function wc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Mt.parseSliceParams(r,a,o);if(Mt.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let d=n.tensorMap.get(r.dataId),p=Ace(d.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,p)}if(v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let c=new Gce(i,l),u=[{type:"int32",data:i}];return n.runWebGPUProgram(c,[r],r.dtype,u)}var jce={kernelName:Gi,backendName:"webgpu",kernelFunc:wc},qce=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=qe({inputs:{x:r},backend:n,attrs:{shape:l}}),m=Ol({inputs:{x:f},backend:n,attrs:{perm:c}}),g=qe({inputs:{x:m},backend:n,attrs:{shape:u}}),y=wc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeData(x.dataId)),y},Xce={kernelName:gi,backendName:"webgpu",kernelFunc:qce},M4=qn({opSnippet:jt.NOT_EQUAL,dtype:"bool",cpuKernelImpl:hce}),Kce={kernelName:Di,backendName:"webgpu",kernelFunc:M4};function Dp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return rr({inputs:{x:r.complexTensorInfos.real},backend:n})}var Zce={kernelName:xd,backendName:"webgpu",kernelFunc:Dp};function Yce(e,t){let n=new _p(e.shape,wt.TO_INT),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Mx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return rr({inputs:{x:r},backend:n});let o=Gt(r.shape),i=Mx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=vc({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=Dp({inputs:{input:r},backend:n}),i=Mx({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=rr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Yce(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=M4({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Jce={kernelName:Oa,backendName:"webgpu",kernelFunc:Mx},Qce=Cn({opType:wt.CEIL,cpuKernelImpl:Kue}),ede={kernelName:Ma,backendName:"webgpu",kernelFunc:Qce},tde=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ze()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputFlat(index, clampedValue);
        }
      }
    `}},nde=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ze()}
        if(index < uniforms.size) {
          let value = getAAtOutCoordsByGlobalIndex(index);
          if (isNanCustom(value)) {
            setOutputFlat(index, value);
            return;
          }
          setOutputFlat(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function sde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return v.sizeFromShape(r.shape)%4==0?i=new tde(r.shape):i=new nde(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var rde={kernelName:Kr,backendName:"webgpu",kernelFunc:sde},ade=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutput(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`elseif (yC < uniforms.offset${[r]}){ setOutput(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutput(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutput(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ze()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function s0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return rr({inputs:{x:r.complexTensorInfos.imag},backend:n})}var ode={kernelName:md,backendName:"webgpu",kernelFunc:s0};function zx(e,t,n){let s=e[0].dtype;if(s==="complex64"){let h=e.map(x=>Dp({inputs:{input:x},backend:n})),f=e.map(x=>s0({inputs:{input:x},backend:n})),m=zx(h,t,n),g=zx(f,t,n),y=vc({inputs:{real:m,imag:g},backend:n});return h.forEach(x=>n.disposeData(x.dataId)),f.forEach(x=>n.disposeData(x.dataId)),n.disposeData(m.dataId),n.disposeData(g.dataId),y}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let h=e.map(b=>{let w=v.sizeFromShape(b.shape.slice(t));return qe({inputs:{x:b},backend:n,attrs:{shape:[-1,w]}})}),f=h.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),m=N.computeOutShape(h.map(b=>b.shape),1),g=h[0].shape[0]===1,y=Zue(f,m,s,g),x=N.computeOutShape(e.map(b=>b.shape),t),A=n.makeTensorInfo(x,s,y);return h.forEach(b=>n.disposeData(b.dataId)),A}let{tensors2D:a,outShape:o}=ide(e,t,n),i=a.map(h=>h.shape),l=new ade(i),c=[],u=new Array(i.length-1);if(u.length>0){u[0]=i[0][1],c.push({type:"int32",data:[u[0]]});for(let h=1;h<u.length;h++)u[h]=u[h-1]+i[h][1],c.push({type:"int32",data:[u[h]]})}let d=n.runWebGPUProgram(l,a,a[0].dtype,c);a.forEach(h=>n.disposeData(h.dataId));let p=qe({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeData(d.dataId),p}function ide(e,t,n){let s=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>qe({inputs:{x:a},backend:n,attrs:{shape:[v.sizeFromShape(a.shape.slice(0,t)),v.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function z4(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return rr({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),zx(i,a,n)}var lde={kernelName:yi,backendName:"webgpu",kernelFunc:z4},ude=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Ze()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromFlatIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputFlat(flatIndex, value);
        }
      }
    }
  `}};function L4({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=n.dataFormat==="channelsLast",u=!1,d=!1,p=c?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],h=qe({inputs:{x:e},backend:s,attrs:{shape:[1,p,n.inChannels]}}),f=qe({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),m=Fx({a:h,b:f,transposeA:u,transposeB:d,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=qe({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});return s.disposeData(h.dataId),s.disposeData(f.dataId),s.disposeData(m.dataId),g}function cde({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,strideWidth:d,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=n,A=x==="channelsLast",b=l*c*u,w=m*f,C=[w,b],S=!1,E=!1,R=[],F=qe({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),_=qe({inputs:{x:t},backend:s,attrs:{shape:[1,b,-1]}});R.push(F),R.push(_);let P=new ude(C,A),T=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[d,p]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[u*l]},{type:"int32",data:[u]}],O=s.runWebGPUProgram(P,[F],F.dtype,T),G=qe({inputs:{x:O},backend:s,attrs:{shape:[1,C[0],C[1]]}});R.push(O),R.push(G);let K=[1,C[0],C[1]],z=new R4(K,[1,w,n.outChannels],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),S,E),j=K[1],W=K[2],Q=n.outChannels,te=[{type:"int32",data:[j]},{type:"int32",data:[Q]},{type:"int32",data:[W]}],ae=s.runWebGPUProgram(z,[G,_],G.dtype,te),Z=A?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],oe=qe({inputs:{x:ae},backend:s,attrs:{shape:Z}});R.push(ae);for(let re of R)s.disposeData(re.dataId);return oe}var B4=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.isVec4=!0,this.outputShape=e.outShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let a=[4,4,1];this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,a),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(a),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],s=n,r=[t,s],a=[s,n],o=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ua(r,[o,l]),ua(a,[l,i])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getFlatIndex4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } elseif (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } elseif (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=E4([4,4,1],this.workGroupSize),r=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getFlatIndex4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } elseif (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${r}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${r}
         }
         return vec4<f32>(0.0);
        `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,i="",l="";if(this.activation){let d=ca(this.activation,this.isVec4);if(this.hasPreluActivationWeights)i=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${d}
        }`;else{if(this.hasLeakyreluAlpha)throw i=`fn activation(a: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaAtOutCoords();
          ${d}
        }`,new Error("Leakyrelu is not supported.");i=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${d}
        }`}l="value = activation(value, outCoord);"}let c=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
        ${i}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${o}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${c}
            ${l}
            setOutput(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}},W4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Ex(this.dispatchLayout,this.outputShape),this.elementsPerThread=_x(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;v.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[ua(s,[a,i]),ua(r,[i,o])]}getUserCode(){let e=Px(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,s=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,r="",a="";if(this.activation){let l=ca(this.activation,!1);this.hasPreluActivationWeights?r=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
                  ${l}
                }`:r=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,a="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
    ${r}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${s}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${o}
      ${a}
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},V4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ca(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutput(batch, row, col, chan, value);
        }
      }

      ${la()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function dde(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=n,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!1,d);if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))return L4({x:r,filter:a,convInfo:p,backend:s});if(Y().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&r.shape[0]===1)return cde({x:r,filter:a,convInfo:p,backend:s});let h,f=[p.padInfo.top,p.padInfo.left],m=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]}],g=Y().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?h=new V4(p):(p.inChannels%4==0||p.inChannels===3&&p.padInfo.type==="VALID")&&p.outChannels%4==0&&p.outChannels>=64?h=new B4(p):h=new W4(p),!g){let y=p.outShape[1]*p.outShape[2],x=p.outShape[3],A=p.filterHeight*p.filterWidth*p.inShape[3];m.push({type:"int32",data:[y]},{type:"int32",data:[x]},{type:"int32",data:[A]})}return s.runWebGPUProgram(h,[r,a],r.dtype,m)}var pde={kernelName:za,backendName:"webgpu",kernelFunc:dde},hde=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Ex(this.dispatchLayout,this.outputShape),this.elementsPerThread=_x(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getFlatIndex4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;
    }

    ${Px(this.elementsPerThread,this.workGroupSize)}
  `}},fde=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Ze()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputFlat(index, dotProd);
      }
    }
  `}};function mde(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}],f;if(Y().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new fde(p);else{f=new hde(p);let m=p.inShape[1]*p.inShape[2],g=p.inShape[3],y=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var gde={kernelName:La,backendName:"webgpu",kernelFunc:mde},yde=Cn({opType:wt.COS}),Ade={kernelName:Ba,backendName:"webgpu",kernelFunc:yde},xde=Cn({opType:wt.COSH}),bde={kernelName:Wa,backendName:"webgpu",kernelFunc:xde},vde=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Ze()}
      if (index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputFlat(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputFlat(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputFlat(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputFlat(index, newValue);
        }
      }
    }
    `}},wde=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new vde(r.shape[3],a.shape,i,l),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(u,[r,a,o],"float32",d)},kde={kernelName:xi,backendName:"webgpu",kernelFunc:wde},Sde=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputFlat(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Ide(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=[{type:"int32",data:[a]}],g=new Sde(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var Cde={kernelName:bi,backendName:"webgpu",kernelFunc:Ide},U4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=ca(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${e}

      ${Nx()}
      fn main([[builtin(global_invocation_id)]] globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutput(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},G4=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;
      channelMul : i32;`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ca(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);
          ${r}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${r}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasAtOutCoordsByCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutput(batch, row, col, chan, value);
        }
      }

      ${la()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function Tde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=s,u=l;u==null&&(u=[1,1]);let d=N.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!0),p=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}],h;return d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4==0?h=new U4(d):(h=new G4(d),p.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.outChannels/d.inChannels]})),n.runWebGPUProgram(h,[r,a],r.dtype,p)}var Nde={kernelName:Va,backendName:"webgpu",kernelFunc:Tde},H4=qn({opSnippet:jt.MUL,cpuKernelImpl:dce,supportsComplex:!0}),Ede={kernelName:oo,backendName:"webgpu",kernelFunc:H4},Rde=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=N.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } elseif (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputFlat(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputFlat(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromFlatIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ze()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function $p(e,t,n,s,r){let a=e.shape.length,o=[],i=v.parseAxisParam(t,e.shape),l=i,c=N.getAxesPermutation(l,a),u=e;c!=null&&(u=Ol({inputs:{x:e},attrs:{perm:c},backend:r}),l=N.getInnerMostAxes(l.length,a),o.push(u)),N.assertAxesAreInnerMostDims(s,l,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=d;n&&(h=N.expandShapeToKeepDim(d,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([u])){let m=r.tensorMap.get(u.dataId).values;switch(s){case"max":let g=lce(m,v.sizeFromShape(p),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:A}=fce(u.shape,u.dtype,m,l);f=r.makeTensorInfo(x,A,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(p),y=v.sizeFromShape(u.shape)/m,x={windowSize:m,inSize:m,batchSize:y,outSize:1},A=s==="mean"?"float32":Fd(e.dtype),b=[{type:"int32",data:[m]}],w=new Rde(x,s),C=r.runWebGPUProgram(w,[u],A,b);o.push(C),f=qe({inputs:{x:C},attrs:{shape:h},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function Lx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return $p(r,a,o,"sum",n)}var _de={kernelName:Ao,backendName:"webgpu",kernelFunc:Lx};function Dde(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(r,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:x}=N.getEinsumPermutation(h,l[g]),A;N.isIdentityPermutation(y)?A=a[g]:(A=Ol({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=qe({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),p===null?p=A:(p=H4({inputs:{a:A,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Lx({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeData(m.dataId);return p}var $de={kernelName:fd,backendName:"webgpu",kernelFunc:Dde},Pde=Cn({opType:wt.ELU}),Fde={kernelName:Ga,backendName:"webgpu",kernelFunc:Pde},Ode=qn({opSnippet:jt.EQUAL,dtype:"bool",cpuKernelImpl:Yue}),Mde={kernelName:vi,backendName:"webgpu",kernelFunc:Ode},j4=Cn({opType:wt.EXP,cpuKernelImpl:Jue,dtype:"float32"}),zde={kernelName:Ha,backendName:"webgpu",kernelFunc:j4};function Bx(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),qe({inputs:{x:a},backend:s,attrs:{shape:i}})}var Lde={kernelName:wi,backendName:"webgpu",kernelFunc:Bx},Bde=Cn({opType:wt.EXPM1,cpuKernelImpl:Que}),Wde={kernelName:ki,backendName:"webgpu",kernelFunc:Bde},Vde=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ze()}
      if (index < uniforms.size) {
        setOutputFlat(index, uniforms.value);
      }
    }
  `}};function kc(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new Vde(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var Ude={kernelName:Au,backendName:"webgpu",kernelFunc:kc},Gde=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputFlat(index, outputValue);
        }
      }
    `}},Hde={kernelName:Si,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Gde(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},jde=Cn({opType:wt.FLOOR,cpuKernelImpl:ece}),qde={kernelName:ja,backendName:"webgpu",kernelFunc:jde},Xde=qn({opSnippet:jt.INT_DIV,dtype:"int32"}),Kde={kernelName:qa,backendName:"webgpu",kernelFunc:Xde},Zde=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},q4=(e,t,n,s,r,a=!1)=>{let o={dtype:r.dtype,shape:r.shape},i=Cle(s,o,t,a),l=e.createShaderModule({code:i,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function X4(e,t,n,s="",r=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r}function K4(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:o}=s,i=v.sizeFromShape(r),l=v.computeStrides(r),c=n.makeTensorInfo(r,"int32"),u=n.getFromPixelsProgram(a?"import":"copyExternal");u.updateOutputShape(r);let d=[c.shape],p=[c.dtype,a?"import":"copyExternal"],h=X4(u,d,p),f=u.getLayout(n.device),m=n.getAndSavePipeline(h,()=>q4(n.device,u,f.pipelineLayout,[],c,!0));u.setPipeline(m),a||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:u.makeInputTexture(n.device,r[1],r[0])},[r[1],r[0]]);let g=n.tensorMap.get(c.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let y=[i,o,...l,...u.dispatch];u.setUniform(n.device,y);let x;if(a){let A={source:t};x=n.device.importExternalTexture(A)}else x=u.inputTexture.createView();return n.runFromPixelsProgram(u,g.bufferInfo.buffer,f,x,c.dataId),c}var Yde={kernelName:Cd,backendName:"webgpu",kernelFunc:Jde},Sc;function Jde(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,c=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[u,d]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[d,u,a];if(Y().getBool("WEBGPU_USE_IMPORT")&&o)return K4({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!0});if((o||i)&&(Sc==null&&(Sc=document.createElement("canvas").getContext("2d")),Sc.canvas.width=u,Sc.canvas.height=d,Sc.drawImage(r,0,0,u,d),r=Sc.canvas),c||l||o||i)return K4({externalImage:r,backend:n,attrs:s,outShape:p,useImport:!1});let h=r.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let y=h.length,x=0;for(let A=0;A<y;A++)A%4<a&&(f[x++]=h[A])}let m=n.makeTensorInfo(p,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}var Qde=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetAtOutCoordsByGlobalIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleAtOutCoordsByGlobalIndex(index)"),`
      ${Ze()}
        if (index < uniforms.size)
        {
          let xValue = getXAtOutCoordsByGlobalIndex(index);
          let meanValue = getMeanAtOutCoordsByGlobalIndex(index);
          let varianValue = getVarianceAtOutCoordsByGlobalIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputFlat(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},epe={kernelName:Xa,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,c=n,u=[s,o,i],d=null;a!=null&&(d=a.shape,u.push(a));let p=null;r!=null&&(p=r.shape,u.push(r));let h=new Qde(s.shape,o.shape,i.shape,d,p),f=[{type:"float32",data:[l]}];return c.runWebGPUProgram(h,u,s.dtype,f)}};function tpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=s,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!1,m),y=o!=null,x=i!=null,A;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return L4({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});let b=Y().getBool("WEBGPU_USE_NAIVE_CONV2D"),w=g.inChannels%4==0&&g.outChannels%4==0,C=[g.padInfo.top,g.padInfo.left],S=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...C]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(b)A=new V4(g,y,h,x);else{w?A=new B4(g,y,h,x):A=new W4(g,y,h,x);let R=g.outShape[1]*g.outShape[2],F=g.outShape[3],_=g.filterHeight*g.filterWidth*g.inShape[3];S.push({type:"int32",data:[R]},{type:"int32",data:[F]},{type:"int32",data:[_]})}let E=[r,a];return y&&E.push(o),x&&E.push(i),n.runWebGPUProgram(A,E,r.dtype,S)}var npe={kernelName:Co,backendName:"webgpu",kernelFunc:tpe};function spe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p}=s,h=u;h==null&&(h=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let f=N.computeConv2DInfo(r.shape,a.shape,l,h,c,d,!0),m=[r,a],g=o!=null,y=i!=null;g&&m.push(o),y&&m.push(i);let x=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}],A;return f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4==0?A=new U4(f,g,p,y):(A=new G4(f,g,p,y),x.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.outChannels/f.inChannels]})),n.runWebGPUProgram(A,m,"float32",x)}var rpe={kernelName:To,backendName:"webgpu",kernelFunc:spe},ape=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${wn(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputFlat(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function ope(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,c,u,d]=N.prepareAndValidate(s,r),p=qe({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),h=qe({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/u,u]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let x=n.readSync(r.dataId),A=n.bufferSync(s),b=tce(x,A,s.dtype,c,o,u,d,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new ape(o,[c,u]),m=[{type:"int32",data:[o]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),y=qe({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}var ipe={kernelName:Ci,backendName:"webgpu",kernelFunc:ope},lpe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=upe(this.aShape,"i32");return`
      ${Ze()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromFlatIndex(index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function upe(e,t="int"){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push(`${t}(getIndices(resRC.x, resRC.z))`):s.push(`${n[r]}`);return s.join()}function Z4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),u=v.sizeFromShape(a.shape),d=[],p=qe({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=qe({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(p),d.push(h);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let A=n.tensorMap.get(h.dataId).values,b=ze(h.shape,h.dtype,A),C=n.tensorMap.get(p.dataId).values,S=ze(p.shape,p.dtype,C),E=nce(S,b,f);return d.forEach(R=>n.disposeData(R.dataId)),n.makeTensorInfo(c.outputShape,E.dtype,E.values)}let m=new lpe(p.shape,f),g=n.runWebGPUProgram(m,[p,h],p.dtype);d.push(g);let y=qe({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(x=>n.disposeData(x.dataId)),y}var cpe={kernelName:Ii,backendName:"webgpu",kernelFunc:Z4},dpe=qn({opSnippet:jt.GREATER,cpuKernelImpl:rce,dtype:"bool"}),ppe={kernelName:Ti,backendName:"webgpu",kernelFunc:dpe},hpe=qn({opSnippet:jt.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:sce}),fpe={kernelName:Ka,backendName:"webgpu",kernelFunc:hpe},mpe=qn({opSnippet:jt.LESS,dtype:"bool",cpuKernelImpl:oce}),gpe={kernelName:Ni,backendName:"webgpu",kernelFunc:mpe},ype=qn({opSnippet:jt.LESS_EQUAL,dtype:"bool",cpuKernelImpl:ace}),Ape={kernelName:Ei,backendName:"webgpu",kernelFunc:ype},xpe=Cn({opType:wt.LOG,cpuKernelImpl:ice}),bpe={kernelName:Ja,backendName:"webgpu",kernelFunc:xpe},vpe=qn({opSnippet:jt.LOGICAL_AND,dtype:"bool"}),wpe={kernelName:Ri,backendName:"webgpu",kernelFunc:vpe},kpe=Cn({opType:wt.LOGICAL_NOT}),Spe={kernelName:ku,backendName:"webgpu",kernelFunc:kpe};function Y4(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return $p(r,a,o,"max",n)}var Ipe={kernelName:Qa,backendName:"webgpu",kernelFunc:Y4},Cpe=qn({opSnippet:jt.MAX,cpuKernelImpl:uce}),Tpe={kernelName:eo,backendName:"webgpu",kernelFunc:Cpe};function Npe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,c=1,u=N.computePool2DInfo(r.shape,a,o,c,i,l),d,p=[];if(u.filterHeight===1&&u.filterWidth===1){if(v.arraysEqual(u.inShape,u.outShape))return rr({inputs:{x:r},backend:n});d=new O4(u),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else d=new F4(u,"max"),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return n.runWebGPUProgram(d,[r],r.dtype,p)}var Epe={kernelName:to,backendName:"webgpu",kernelFunc:Npe};function Rpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return $p(r,o,a,"mean",n)}var _pe={kernelName:no,backendName:"webgpu",kernelFunc:Rpe};function Dpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return $p(r,a,o,"min",n)}var $pe={kernelName:so,backendName:"webgpu",kernelFunc:Dpe},Ppe=qn({opSnippet:jt.MIN,cpuKernelImpl:cce}),Fpe={kernelName:ro,backendName:"webgpu",kernelFunc:Ppe},Ope=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((l,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=wn(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ze()}
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${n});
          var outC = getCoordsFromFlatIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } elseif(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputFlat(index, getX(${i}));
        }
      }
    `}},Mpe={kernelName:ao,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new Ope(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function zpe(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=pce(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new _p(s.shape,wt.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}var Lpe={kernelName:_i,backendName:"webgpu",kernelFunc:zpe};function Bpe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,c=n.readSync(r.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=Qs.nonMaxSuppressionV3Impl(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Wpe={kernelName:$i,backendName:"webgpu",kernelFunc:Bpe};function Vpe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=n.readSync(r.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=Qs.nonMaxSuppressionV5Impl(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Upe={kernelName:Pi,backendName:"webgpu",kernelFunc:Vpe};function r0(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Dp({inputs:{input:s},backend:n}),a=r0({inputs:{x:r},backend:n}),o=s0({inputs:{input:s},backend:n}),i=r0({inputs:{x:o},backend:n}),l=vc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return kc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Gpe={kernelName:Qi,backendName:"webgpu",kernelFunc:r0};function J4(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Dp({inputs:{input:s},backend:n}),a=J4({inputs:{x:r},backend:n}),o=s0({inputs:{input:s},backend:n}),i=r0({inputs:{x:o},backend:n}),l=vc({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return kc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Hpe={kernelName:Fi,backendName:"webgpu",kernelFunc:J4};function jpe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Bx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Bx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=z4({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var qpe={kernelName:Mi,backendName:"webgpu",kernelFunc:jpe},Xpe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=wn(e),n=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),s=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ze()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromFlatIndex(index);

          if (${o} || ${i}) {
            setOutputFlat(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputFlat(index, getX(${l}));
          }
        }
      }
    `}},Q4=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(c=>v.arraysEqual(c,[0,0])))return rr({inputs:{x:r},backend:n});if(v.sizeFromShape(r.shape)===0){let c=a.map((u,d)=>u[0]+r.shape[d]+u[1]);return kc({backend:n,attrs:{shape:c,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(c=>i.push({type:"int32",data:[c[0],c[1]]}));let l=new Xpe(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},Kpe={kernelName:io,backendName:"webgpu",kernelFunc:Q4},Zpe=qn({opSnippet:jt.POW}),Ype={kernelName:lo,backendName:"webgpu",kernelFunc:Zpe};function Jpe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new D4(jt.PRELU,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var Qpe={kernelName:uo,backendName:"webgpu",kernelFunc:Jpe};function ehe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return $p(r,a,o,"prod",n)}var the={kernelName:zi,backendName:"webgpu",kernelFunc:ehe},nhe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=mce(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},she={kernelName:Cu,backendName:"webgpu",kernelFunc:nhe},e6=qn({opSnippet:jt.DIV}),rhe={kernelName:Ua,backendName:"webgpu",kernelFunc:e6},ahe=Cn({opType:wt.RELU}),ohe={kernelName:co,backendName:"webgpu",kernelFunc:ahe},ihe=Cn({opType:wt.RELU6}),lhe={kernelName:ho,backendName:"webgpu",kernelFunc:ihe};function uhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=[{type:"float32",data:[a]}],i=new _p(r.shape,wt.LEAKYRELU);return i.uniforms="alpha : f32;",n.runWebGPUProgram(i,[r],"float32",o)}var che={kernelName:Ya,backendName:"webgpu",kernelFunc:uhe},dhe=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ze()}
        if (index < uniforms.size) {
        let coords = getCoordsFromFlatIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputFlat(index, newValue);
        }
      }
    `}};function phe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,c]=o,u=a&&l>1?1:0,d=a&&c>1?1:0,h=[{type:"float32",data:[u,d]},{type:"float32",data:[i?.5:0]}],f=new dhe(r.shape,l,c);return n.runWebGPUProgram(f,[r],"float32",h)}var hhe={kernelName:po,backendName:"webgpu",kernelFunc:phe},fhe=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ze()}
        if (index < uniforms.size) {
          let coords = getCoordsFromFlatIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputFlat(index, newValue);
        }
      }
    `}};function mhe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,u=a&&l>1?1:0,d=a&&c>1?1:0,h=[{type:"float32",data:[u,d]},{type:"float32",data:[a?.5:0]}],f=new fhe(r.shape,l,c,o);return n.runWebGPUProgram(f,[r],r.dtype,h)}var ghe={kernelName:Nu,backendName:"webgpu",kernelFunc:mhe},yhe=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ze()}

          if (index < uniforms.size) {
            let coords = getCoordsFromFlatIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputFlat(index, outputValue);
          }
        }
      `}},Ahe={kernelName:el,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new yhe(s.shape,a),[c,u]=N.getImageCenter(o,s.shape[1],s.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[u]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,d)}},xhe=Cn({opType:wt.RSQRT,cpuKernelImpl:gce}),bhe={kernelName:fo,backendName:"webgpu",kernelFunc:xhe},vhe=class{constructor(e,t,n,s,r,a,o){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.dispatchLayout=He(e),this.dispatch=Oe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}`;let i=wn(r.length);this.uniforms=`sliceDim : i32; strides: ${i}; size: i32;`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${s})`,i=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${Ze()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${o};
          let flatIndex = getOutputFlatIndex(${r});

         ${i}
        }
      }`}};function whe(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,r,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,r.dtype);let h=qe({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=qe({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=f.dtype,g=kc({backend:n,attrs:{shape:p,value:0,dtype:m}}),y=v.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:u},{type:"int32",data:[y]}],A=new vhe(f.shape,i,h.shape.length,f.shape.length,u,p,m),b=n.runWebGPUProgram(A,[f,h],m,x,g),w=qe({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),w}var khe={kernelName:Vi,backendName:"webgpu",kernelFunc:whe},She=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${Ze()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromFlatIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputFlat(index, getA(${t}));
          } else {
            setOutputFlat(index, getB(${t}));
          }
        }
      }
    `}};function Ihe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new She(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],Ln(r.dtype,a.dtype))}var Che={kernelName:Ui,backendName:"webgpu",kernelFunc:Ihe},The=Cn({opType:wt.SIGMOID}),Nhe={kernelName:go,backendName:"webgpu",kernelFunc:The},Ehe=Cn({opType:wt.SIN}),Rhe={kernelName:mo,backendName:"webgpu",kernelFunc:Ehe},_he=Cn({opType:wt.SINH}),Dhe={kernelName:Hi,backendName:"webgpu",kernelFunc:_he},t6=qn({opSnippet:jt.SUB,cpuKernelImpl:vce,supportsComplex:!0}),$he={kernelName:vo,backendName:"webgpu",kernelFunc:t6};function Phe(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=Y4({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=qe({inputs:{x:i},backend:n,attrs:{shape:l}}),u=t6({inputs:{a:r,b:c},backend:n}),d=j4({inputs:{x:u},backend:n}),p=Lx({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=qe({inputs:{x:p},backend:n,attrs:{shape:l}}),f=e6({inputs:{a:d,b:h},backend:n});return n.disposeData(i.dataId),n.disposeData(c.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),f}var Fhe={kernelName:xo,backendName:"webgpu",kernelFunc:Phe},Ohe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let c=[],u=Q4({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=qe({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Ol({inputs:{x:f},backend:n,attrs:{perm:p}}),g=qe({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>n.disposeData(y.dataId)),g},Mhe={kernelName:ji,backendName:"webgpu",kernelFunc:Ohe},zhe=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=a,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${s}_${i}`;let l=wn(r.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let c="";n===1?c="i":n===2&&(c="i, j"),this.indicesSnippet=`getIndices(${c})`;let u="";s===1?u="i":s===2&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Ze()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromFlatIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputFlat(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function Lhe(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,r,i),p=!1,h=[{type:"int32",data:[c]},{type:"int32",data:[l]},{type:"int32",data:u}],f=new zhe(c,l,r.shape.length,a.shape.length,u,[d,1],p),m=n.runWebGPUProgram(f,[a,r,o],a.dtype,h),g=qe({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),g}var Bhe={kernelName:kd,backendName:"webgpu",kernelFunc:Lhe};function Whe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=wc({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var Vhe={kernelName:qi,backendName:"webgpu",kernelFunc:Whe},Uhe=Cn({opType:wt.SQRT}),Ghe={kernelName:yo,backendName:"webgpu",kernelFunc:Uhe},Hhe={kernelName:$u,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new _p(n.shape,wt.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}},jhe=qn({opSnippet:jt.SQUARED_DIFFERENCE}),qhe={kernelName:bo,backendName:"webgpu",kernelFunc:jhe},Xhe=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=wn(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Ze()}
         if (index < uniforms.size) {
           let coords = getCoordsFromFlatIndex(index);
           setOutputFlat(index, getX(${t}));
         }
       }
     `}};function Khe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Mt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=qe({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=Mt.computeOutShape(x,A,b),S=wc({inputs:{x:r},backend:n,attrs:{begin:x,size:C}});w=qe({inputs:{x:S},backend:n,attrs:{shape:f}}),n.disposeData(S.dataId)}else if(n.shouldExecuteOnCPU([r])){let S=n.readSync(r.dataId),E=ze(r.shape,r.dtype,S),R=xce(h,E,b,x);w=n.makeTensorInfo(f,r.dtype,R.values)}else{let S=new Xhe(h),E=[{type:"int32",data:x},{type:"int32",data:b}],R=n.runWebGPUProgram(S,[r],r.dtype,E);w=qe({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}return w}var Zhe={kernelName:Xi,backendName:"webgpu",kernelFunc:Khe};function Yhe(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=bce(p,h,r,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Jhe={kernelName:Sd,backendName:"webgpu",kernelFunc:Yhe},Qhe=Cn({opType:wt.TANH}),efe={kernelName:wo,backendName:"webgpu",kernelFunc:Qhe},tfe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=nfe(this.rank,"uniforms.");return`
      ${Ze()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromFlatIndex(index);
          setOutputFlat(index, getA(${e}));
        }
      }
    `}};function nfe(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function sfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),c=r.dtype==="string"?l.map(p=>v.decodeString(p)):l,u=ze(r.shape,r.dtype,c),d=wce(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new tfe(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var rfe={kernelName:Zr,backendName:"webgpu",kernelFunc:sfe},afe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${Ze()}
          if (index < uniforms.size) {
            let outC = getCoordsFromFlatIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}},ofe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${Ze()}
          if (index < uniforms.size) {
            let outC = getCoordsFromFlatIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputFlat(index, f32(i0));
            } else {
              setOutputFlat(index, f32(i1));
            }
          }
        }
      `}};function Ic(e,t){t!==null&&e.disposeData(t.dataId)}function n6(e){let t=1;for(;t<e;)t*=2;return t}function ife(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let w=n.readSync(r.dataId),[C,S]=kce(w,i,r.dtype,a,o);return[n.makeTensorInfo(C.shape,C.dtype,C.values),n.makeTensorInfo(S.shape,S.dtype,S.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[r,kc({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let u=v.sizeFromShape(i)/l,d=qe({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),p=n6(a),h=n6(l),f=null,m=()=>f===null?[d,d]:[d,f],g=(w,C,S)=>{let E=m(),R=new afe(S),_=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[w]},{type:"int32",data:[C]}],P=f;f=n.runWebGPUProgram(R,E,"int32",_),Ic(n,P)};for(let w=1;w<p;w*=2){let C=w*2;for(let S=w;S>=1;S/=2)g(C,S,[u,h])}for(let w=h;w>p;w/=2){let C=m(),S=new ofe([u,w/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[p]}],F=f;f=n.runWebGPUProgram(S,C,"int32",R),Ic(n,F);let _=p/2,P=_*2;for(let T=_;T>=1;T/=2)g(P,T,f.shape)}let y=f;f=wc({inputs:{x:f},backend:n,attrs:{begin:0,size:[u,a]}}),Ic(n,y);let x=Z4({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});Ic(n,d);let A=i.slice(0,-1);A.push(a),y=f,f=qe({inputs:{x:f},attrs:{shape:A},backend:n}),Ic(n,y);let b=x;return x=qe({inputs:{x},attrs:{shape:A},backend:n}),Ic(n,b),[x,f]}var lfe={kernelName:Zi,backendName:"webgpu",kernelFunc:ife},ufe=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } elseif (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } elseif (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ze()}
            if (index < uniforms.size) {
              let coords = getCoordsFromFlatIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputFlat(index, outputValue);
            }
          }
        `}};function cfe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new ufe(g),x=o==="nearest"?1:2,A;switch(i){case"constant":A=1;break;case"reflect":A=2;break;case"wrap":A=3;break;case"nearest":A=4;break;default:A=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[A]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[r,a],"float32",b)}var dfe={kernelName:Yi,backendName:"webgpu",kernelFunc:cfe};function pfe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=wc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),y=qe({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>n.disposeData(m.dataId)),f}var hfe={kernelName:Ji,backendName:"webgpu",kernelFunc:pfe},ffe=[Uue,Cce,Nce,_ce,Mce,Lce,Wce,Uce,Xce,Jce,ede,rde,que,lde,pde,gde,Ade,bde,kde,Cde,Nde,$de,Fde,Mde,Lde,zde,Wde,Ude,Hde,Yde,qde,Kde,epe,npe,rpe,ipe,cpe,ppe,fpe,jue,ode,gpe,Ape,bpe,wpe,Spe,Ipe,Tpe,Epe,_pe,$pe,Fpe,Mpe,Ede,Lpe,Wpe,Upe,Kce,Hpe,qpe,Kpe,Qpe,the,Ype,she,Zce,rhe,ohe,lhe,che,Wue,hhe,ghe,Ahe,bhe,khe,Che,Nhe,Rhe,Dhe,jce,Zhe,Jhe,Fhe,Mhe,Vhe,Bhe,Ghe,Hhe,qhe,$he,_de,efe,rfe,lfe,dfe,Fce,hfe,Gpe];for(let e of ffe)ur(e);var mfe=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n=s6(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let r=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(r),r}this.numBytesAllocated+=e;let s=this.device.createBuffer({size:e,usage:t});return this.usedBuffers.get(n).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers==null)return;let s=s6(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}reset(){this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}dispose(){this.freeBuffers==null&&this.usedBuffers==null||(this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=null,this.usedBuffers=null,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0)}};function s6(e,t){return`${e}_${t}`}var r6=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){v.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Ze()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromFlatIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,s)=>n===this.lastUniformData[s])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},gfe=class extends r6{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),s=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}},yfe=Y().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),a6=class extends su{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!$x())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new mfe(this.device),this.tensorMap=new od(this,as()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return a6.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=v.sizeFromShape(t)*Dx(n);return n==="bool"&&e instanceof Uint8Array&&(e=Int32Array.from(e)),this.tensorMap.set(s,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=v.sizeFromShape(n)*Dx(s);this.tensorMap.set(e,{dtype:s,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new r6),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new gfe),this.fromPixelImportProgram;default:v.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=N.mergeRealAndImagArrays(a,o)}else{let r=await this.getBufferData(t);s=C4(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>v.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return ze(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values&&this.queue.writeBuffer(t.bufferInfo.buffer,0,t.values))}makeUniformsDataView(e){let t=this.acquireBuffer(e.byteLength,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(t,0,e),{offset:0,size:e.byteLength,buffer:t}}arrayToDataView(e,t){let n=4,s=new DataView(new ArrayBuffer(t*n)),r=0;return e.forEach(a=>{let o=a.data;if(a.type!=="int32"&&a.type!=="float32"&&a.type!=="uint32")throw new Error(`${a.type} not supported!`);a.type==="int32"?o.forEach(i=>{s.setInt32(r*n,i,!0),r++}):a.type==="uint32"?o.forEach(i=>{s.setUint32(r*n,i,!0),r++}):o.forEach(i=>{s.setFloat32(r*n,i,!0),r++})}),s}computePadding(e){let t=0,n=0,s=0,r=[];return e.forEach((a,o)=>{a.data.length===0&&(a.data=[1]);let i;switch(a.data.length){case 0:i=1;break;case 1:i=1;break;case 2:i=2;break;case 3:i=4;break;case 4:i=4;break;default:v.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}n=Math.ceil(t/i)*i-t;for(let l=0;l<n;++l)r.push({type:a.type,data:[0]}),s++;r.push({type:a.type,data:a.data}),s=s+a.data.length,t+=a.data.length+n}),this.arrayToDataView(r,s)}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),v.sizeFromShape(r.shape)===0){let E=this.tensorMap.get(r.dataId);return E.values=v.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}let a=[{type:"float32",data:[NaN]}],o=t.concat(r).map(E=>E.shape),i="int32";o.map(E=>{a.push({type:i,data:E})});let l=v.computeStrides(r.shape);if(a.push({type:i,data:l}),e.size){let E=v.sizeFromShape(e.outputShape);a.push({type:i,data:[e.isVec4?E/4:E]})}s&&(a=[...a,...s]);let c=null,u=this.computePadding(a),d=u.byteLength;c=this.makeUniformsDataView(u);let p=t.map((E,R)=>{if(E.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(E.dataId),{dtype:this.tensorMap.get(E.dataId).dtype,shape:E.shape,name:e.variableNames[R]}}),h=p.map(E=>E.dtype).concat(r.dtype),f=p.map(E=>N.getBroadcastDims(E.shape,r.shape)),m=p.map(E=>v.arraysEqual(E.shape,r.shape)).join("_"),g=f.map(E=>E.join("_")).join(";"),y=X4(e,o,h,g,m),{bindGroupLayout:x,pipelineLayout:A}=this.getCachedOrCreateLayout(e.variableNames.length),b=this.getAndSavePipeline(y,()=>q4(this.device,e,A,p,r)),w=this.activeTimers!=null,C=Zde(this.device,x,t.map(E=>this.tensorToBinding(E)),this.tensorToBinding(r),c);this.ensureCommandEncoderReady();let S=this.getComputePass();if(w&&this.supportTimeQuery&&S.writeTimestamp(this.querySet,0),S.setPipeline(b),S.setBindGroup(0,C),S.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),w&&this.supportTimeQuery&&S.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(E=>{this.commandQueueOwnedIds.add(E.dataId)}),this.commandQueueOwnedIds.add(r.dataId),c){let E={byteSize:d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:c.buffer};this.uniformDisposalQueue.push(E)}return Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),w&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}runFromPixelsProgram(e,t,n,s,r){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:s},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let o=this.getComputePass(),i=this.activeTimers!=null;i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,0),o.setPipeline(e.pipeline),o.setBindGroup(0,a),o.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(r),this.submitQueue(),i&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=yfe){return Y().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&v.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Wx=a6;Wx.nextDataId=0;var o6={};Me(o6,{WebGPUBackend:()=>Wx,webgpu_util:()=>I4});Ou.isBrowser()&&$x()&&ul("webgpu",async()=>{Y().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Y().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},s=t.features.has("timestamp-query");s?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let r=await t.requestDevice(n);return new Wx(r,s)},3);var qt=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(qt||{}),a0=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(a0||{}),i6;function Afe(e){i6=e.wasm.cwrap(Io,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function xfe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let E=n.dataIdMap.get(o.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=a0[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],x=c?a.shape[1]:a.shape[2],A=ol.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...A,y,x],r.dtype),w=n.dataIdMap.get(b.dataId).id,C=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(a.shape).buffer);return i6(p,C,r.shape.length,h,S,a.shape.length,l,c,g,f,m,d||0,w),b}var bfe={kernelName:Io,backendName:"wasm",setupFunc:Afe,kernelFunc:xfe};function Tn(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,c=o.makeOutput(i.shape,t||i.dtype),u=o.dataIdMap.get(c.dataId).id;return v.sizeFromShape(c.shape)===0||n(l,qt[i.dtype],u),c}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var vfe=Tn(mi);function Xn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:c,b:u}=l,d=i.dataIdMap.get(c.dataId).id,p=i.dataIdMap.get(u.dataId).id,h=n!=null?n:c.dtype,f=N.assertAndGetBroadcastShape(c.shape,u.shape),m=i.makeOutput(f,h);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(c.shape).buffer),y=new Uint8Array(new Int32Array(u.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>s(d,g,c.shape.length,p,y,u.shape.length,qt[c.dtype],x))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var wfe=!0,kfe=Xn(Xr,wfe),l6;function Sfe(e){l6=e.wasm.cwrap(Da,null,["array","number","number","number"])}function Ife(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return l6(a,r.length,qt[s.dtype],o),s}var Cfe={kernelName:Da,backendName:"wasm",setupFunc:Sfe,kernelFunc:Ife};function o0(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var Tfe={kernelName:Za,backendName:"wasm",kernelFunc:o0},u6;function Nfe(e){u6=e.wasm.cwrap(ko,null,["number","array","number","number","number","array","number"])}function Cc(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=Rfe(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=Efe(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=o0({inputs:t,backend:n});return f.shape=i,f}let c=n.makeOutput(i,l.dtype),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(c.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return u6(u,h,l.shape.length,qt[l.dtype],d,p,a.length),c}function Efe(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function Rfe(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var _fe={kernelName:ko,backendName:"wasm",kernelFunc:Cc,setupFunc:Nfe};function Yo(e,t,n){let s=e.shape,r=e.shape.length,a=v.parseAxisParam(t,s),o=a,i=N.getAxesPermutation(o,r),l=null,c=!1;if(i!=null){let u=new Array(r);for(let h=0;h<u.length;h++)u[h]=s[i[h]];o=N.getInnerMostAxes(o.length,r),l=Cc({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==d&&(c=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:c}}var c6;function Dfe(e){c6=e.wasm.cwrap(uu,null,["number, number, number"])}function $fe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Yo(o,r,t);if(h){let A=t.dataIdMap.get(u.dataId).id;c=u,l=A}let f=c.shape.length;N.assertAxesAreInnerMostDims("all",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;c6(l,y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var Pfe={kernelName:uu,backendName:"wasm",setupFunc:Dfe,kernelFunc:$fe},d6;function Ffe(e){d6=e.wasm.cwrap(cu,null,["number, number, number"])}function Ofe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Yo(o,r,t);if(h){let A=t.dataIdMap.get(u.dataId).id;c=u,l=A}let f=c.shape.length;N.assertAxesAreInnerMostDims("any",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;d6(l,y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var Mfe={kernelName:cu,backendName:"wasm",setupFunc:Ffe,kernelFunc:Ofe},p6;function zfe(e){p6=e.wasm.cwrap($a,null,["number","number","number","number","number"])}function Lfe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:c,axes:u,inputWasTransposed:d}=Yo(a,r,t);if(d){let y=t.dataIdMap.get(c.dataId).id;y!==o&&(l=c,i=y)}let p=l.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=v.sizeFromShape(h.shape),g=l.shape[u[0]];return p6(i,qt[l.dtype],m,g,f),d&&t.disposeData(c.dataId),h}var Bfe={kernelName:$a,backendName:"wasm",kernelFunc:Lfe,setupFunc:zfe},h6;function Wfe(e){h6=e.wasm.cwrap(Pa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vfe(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.strideHeight,x=u.strideWidth,A=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let b=s.makeOutput(u.outShape,"float32"),w=s.dataIdMap.get(b.dataId).id;return h6(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,x,A,w),b}var Ufe={kernelName:Pa,backendName:"wasm",setupFunc:Wfe,kernelFunc:Vfe};function ps(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a);return v.assert(a===v.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var Gfe={kernelName:Li,backendName:"wasm",kernelFunc:ps},f6;function Hfe(e){f6=e.wasm.cwrap(Fa,null,["number","array","number","number","array","number","number","number","number"])}function jfe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,c=a.shape.length,u=o?r.shape[l-2]:r.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=ol.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);v.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],w=i?[y,h,d]:[y,d,h],C=ps({inputs:{x:r},backend:n,attrs:{shape:b}}),S=ps({inputs:{x:a},backend:n,attrs:{shape:w}}),E=n.dataIdMap.get(C.dataId).id,R=n.dataIdMap.get(S.dataId).id,F=o?C.shape[2]:C.shape[1],_=i?S.shape[1]:S.shape[2],P=Math.max(g,y),T=n.makeOutput([P,F,_],C.dtype),O=n.dataIdMap.get(T.dataId).id,G=new Uint8Array(new Int32Array(C.shape).buffer),K=new Uint8Array(new Int32Array(S.shape).buffer);return f6(E,G,C.shape.length,R,K,S.shape.length,o,i,O),n.disposeData(C.dataId),n.disposeData(S.dataId),T.shape=A,T}var qfe={kernelName:Fa,backendName:"wasm",setupFunc:Hfe,kernelFunc:jfe};function Ml(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=Mt.parseSliceParams(t,n,s),i=Mt.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),c=r.makeOutput(o,t.dtype),u=v.computeStrides(t.shape),d=r.dataIdMap.get(c.dataId);if(i){let f=Mt.computeFlatOffset(a,u);return t.dtype==="string"?d.stringBytes=l.slice(f,f+v.sizeFromShape(o)):r.typedArrayFromHeap(c).set(l.subarray(f,f+v.sizeFromShape(o))),c}if(t.dtype==="string"){let f=_m(l,a,o,t.shape,t.dtype);return d.stringBytes=f,c}let p=r.typedArrayFromHeap(c),h=t.shape.length;if(h===2)Xfe(l,u[0],p,a,o);else if(h===3)Kfe(l,u[0],u[1],p,a,o);else if(h===4)Zfe(l,u[0],u[1],u[2],p,a,o);else{let f=_m(l,a,o,t.shape,t.dtype);p.set(f)}return c}function Xfe(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let c=o;c<l;c++){let u=c*t+i;n.set(e.subarray(u,u+r[1]),a),a+=r[1]}}function Kfe(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],c=r[2],u=i+a[0],d=l+a[1];for(let p=i;p<u;p++)for(let h=l;h<d;h++){let f=p*t+h*n+c;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function Zfe(e,t,n,s,r,a,o){let i=0,l=a[0],c=a[1],u=a[2],d=l+o[0],p=c+o[1],h=u+o[2],f=a[3];for(let m=l;m<d;m++)for(let g=c;g<p;g++)for(let y=u;y<h;y++){let x=m*t+g*n+y*s+f;r.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var Yfe={kernelName:Gi,backendName:"wasm",kernelFunc:Ml};function Jfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((y,x)=>y*x),l=N.getReshaped(r.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(r.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=ps({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Cc({inputs:{x:h},backend:n,attrs:{perm:c}}),m=ps({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Ml({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var Qfe={kernelName:gi,backendName:"wasm",kernelFunc:Jfe};function Pp(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var eme={kernelName:Oa,backendName:"wasm",kernelFunc:Pp},tme=Tn(Ma),m6;function nme(e){m6=e.wasm.cwrap(Kr,null,["number","number","number","number"])}function sme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id;return m6(i,a,o,c),l}var rme={kernelName:Kr,backendName:"wasm",setupFunc:nme,kernelFunc:sme};function g6(e){let{inputs:t,backend:n}=e,s=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=N.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>v.sizeFromShape(h.shape)>0);if(a.length===1)return o0({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(v.sizeFromShape(r)===0)return o;let i=a.map(h=>h.shape);if(N.assertParamsConsistent(i,s),a[0].dtype==="string"){let h=a.map(A=>{let b=v.sizeFromShape(A.shape.slice(s));return ps({inputs:{x:A},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(A=>({vals:n.readSync(A.dataId),shape:A.shape}));r=N.computeOutShape(h.map(A=>A.shape),1);let m=h[0].shape[0]===1,g=ZA(f,r,t[0].dtype,m),y=N.computeOutShape(a.map(A=>A.shape),s);o.shape=y;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=N.fromStringArrayToUint8(g),h.forEach(A=>n.disposeData(A.dataId)),o}let l=v.sizeFromShape(a[0].shape.slice(0,s)),c=0,u=a.map(h=>{let f=v.sizeFromShape(h.shape.slice(s));return c+=f,f}),d=a.map(h=>n.typedArrayFromHeap(h)),p=n.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*c;for(let m=0;m<d.length;m++){let g=u[m],y=h*g,x=d[m].subarray(y,y+g);p.set(x,f),f+=g}}return o}var ame={kernelName:yi,backendName:"wasm",kernelFunc:g6},y6;function ome(e){y6=e.wasm.cwrap(za,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ime(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d,dataFormat:p}=n,h=N.convertConv2DDataFormat(p),f=N.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,A=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,C=f.dilationWidth,S=f.strideHeight,E=f.strideWidth,R=f.inChannels,F=f.outChannels,_=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let P=s.makeOutput(f.outShape,"float32"),T=s.dataIdMap.get(P.dataId).id;return y6(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,x,A,b,_,w,C,S,E,R,F,T),P}var lme={kernelName:za,backendName:"wasm",setupFunc:ome,kernelFunc:ime},A6;function ume(e){A6=e.wasm.cwrap(La,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function cme(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,inputShape:u}=s,d=1,p=N.convertConv2DDataFormat(l),h=N.computeConv2DInfo(u,a.shape,o,d,i,c,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:x,inWidth:A,outChannels:b,outHeight:w,outWidth:C,strideHeight:S,strideWidth:E}=h,R=m-1-h.padInfo.top,F=g-1-h.padInfo.left,_=h.dataFormat==="channelsLast",P=v.computeStrides(h.inShape),T=v.computeStrides(r.shape),[O,G,K]=v.computeStrides(a.shape),z=P[0],j=_?P[1]:P[2],W=_?P[2]:1,Q=_?1:P[1],te=T[0],ae=_?T[1]:T[2],Z=_?T[2]:1,oe=_?1:T[1],re=t.makeOutput(h.inShape,"float32"),ge=t.dataIdMap.get(re.dataId).id,ve=t.dataIdMap.get(r.dataId).id,Re=t.dataIdMap.get(a.dataId).id;return A6(ve,Re,f,m,g,x,A,y,w,C,b,S,E,R,F,O,G,K,z,j,W,Q,te,ae,Z,oe,ge),re}var dme={kernelName:La,backendName:"wasm",setupFunc:ume,kernelFunc:cme},pme=Tn(Ba),hme=Tn(Wa),x6=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(x6||{}),b6;function fme(e){b6=e.wasm.cwrap(xi,null,["number","number","number","number","array","number","number","number","number","number"])}function mme(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:c}=n,u=l.shape[0],[d,p]=o,h=[u,d,p,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Pp({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(c.dataId).id,A=t.makeOutput(h,"float32"),b=t.dataIdMap.get(A.dataId).id,w=new Uint8Array(new Int32Array(i.shape).buffer);return b6(g,y,x,u,w,d,p,x6[r],a,b),m!=null&&t.disposeData(m.dataId),A}var gme={kernelName:xi,backendName:"wasm",setupFunc:fme,kernelFunc:mme},v6;function yme(e){v6=e.wasm.cwrap(Ai,null,["number","number","number","number","number","number"])}function Ame(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let c=N.getAxesPermutation([a],l),u=r;c!==null&&(u=Cc({inputs:{x:r},attrs:{perm:c},backend:n}));let d=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[d],l);let p=n.makeOutput(u.shape,u.dtype),h=u.shape[d],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(p.dataId).id;v6(f,o?1:0,i?1:0,h,m,qt[r.dtype]);let g=p;if(c!==null){let y=N.getUndoAxesPermutation(c);g=Cc({inputs:{x:p},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(p.dataId)}return g}var xme={kernelName:Ai,backendName:"wasm",setupFunc:yme,kernelFunc:Ame},w6;function bme(e){w6=e.wasm.cwrap(bi,null,["number","number","number","array","number","array","array","number","number"])}function vme(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=t.makeOutput(f,"float32"),y=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return w6(y,a,o==="NHWC"?1:0,x,r.shape.length-1,A,b,f.length,w),m}var wme={kernelName:bi,backendName:"wasm",setupFunc:bme,kernelFunc:vme},k6;function kme(e){k6=e.wasm.cwrap(Va,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Sme(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d}=n,p=c==null?[1,1]:c,h=N.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,x=h.padInfo.bottom,A=h.padInfo.left,b=h.dilationHeight,w=h.dilationWidth,C=h.strideHeight,S=h.strideWidth,E=h.inChannels,R=h.outChannels,F=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let _=s.makeOutput(h.outShape,"float32"),P=s.dataIdMap.get(_.dataId).id;return k6(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,x,A,F,b,w,C,S,E,R,P),_}var Ime={kernelName:Va,backendName:"wasm",setupFunc:kme,kernelFunc:Sme},Cme=Tn(Ga),Tme=!1,Nme=Xn(vi,Tme,"bool"),Eme=Tn(Ha,"float32");function Vx(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),ps({inputs:{x:r},backend:s,attrs:{shape:i}})}var Rme={kernelName:wi,backendName:"wasm",kernelFunc:Vx};function S6(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var _me={kernelName:Au,backendName:"wasm",kernelFunc:S6},I6;function Dme(e){I6=e.wasm.cwrap(Si,null,["number","number","number","number","number","number"])}function $me(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,c,u]=s.shape;return I6(a,i,l,c,u,o),r}var Pme={kernelName:Si,backendName:"wasm",kernelFunc:$me,setupFunc:Dme},Fme=Tn(ja),Ome=!1,Mme=Xn(qa,Ome),C6;function zme(e){C6=e.wasm.cwrap(Xa,null,["number","number","number","number","number","number","number"])}function Lme(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:c}=n,u=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(v.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return C6(u,d,p,h,f,r,g),m}var Bme={kernelName:Xa,backendName:"wasm",setupFunc:zme,kernelFunc:Lme},T6;function Wme(e){T6=e.wasm.cwrap(Co,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vme(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,l,u,c,p),g=a0[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let Z=s.dataIdMap.get(o.dataId);if(Z.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${Z.shape.length}.`);if(Z.shape[0]!==A)throw new Error(`FusedConv2D bias shape (${Z.shape}) does not match the number of output channels (${A})`);b=Z.id}let w=m.filterHeight,C=m.filterWidth,S=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,_=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,O=m.strideWidth,G=m.inChannels,K=m.padInfo.type==="SAME"?1:0,z=m.batchSize,j=m.inHeight,W=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Q=s.makeOutput(m.outShape,"float32"),te=s.dataIdMap.get(Q.dataId).id,ae=i==null?0:s.dataIdMap.get(i.dataId).id;return T6(y,z,j,W,x,w,C,b,S,E,R,F,K,_,P,T,O,G,A,g,ae,f||0,te),Q}var Ume={kernelName:Co,backendName:"wasm",setupFunc:Wme,kernelFunc:Vme},N6;function Gme(e){N6=e.wasm.cwrap(To,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Hme(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(r.shape,a.shape,l,u,c,p,!0),g=a0[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let Z=s.dataIdMap.get(o.dataId);if(Z.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${Z.shape.length}.`);if(Z.shape[0]!==A)throw new Error(`FusedDepthwiseConv2D bias shape (${Z.shape}) does not match the number of output channels (${A})`);b=Z.id}let w=m.filterHeight,C=m.filterWidth,S=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,_=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,O=m.strideWidth,G=m.inChannels,K=m.padInfo.type==="SAME"?1:0,z=m.batchSize,j=m.inHeight,W=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Q=s.makeOutput(m.outShape,"float32"),te=s.dataIdMap.get(Q.dataId).id,ae=i==null?0:s.dataIdMap.get(i.dataId).id;return N6(y,z,j,W,x,w,C,b,S,E,R,F,K,_,P,T,O,G,A,g,ae,f||0,te),Q}var jme={kernelName:To,backendName:"wasm",setupFunc:Gme,kernelFunc:Hme},E6;function qme(e){E6=e.wasm.cwrap(Ci,null,["number","number","number","number","number","number","array","number"])}function Xme(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=G2.prepareAndValidate(s,r),c=t.makeOutput(a,s.dtype);if(o===0)return c;let u=r.shape,d=u[u.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=t.dataIdMap.get(c.dataId).id;return E6(h,qt[s.dtype],m,o,d,i,g,y),c}var Kme={kernelName:Ci,backendName:"wasm",setupFunc:qme,kernelFunc:Xme},R6;function Zme(e){R6=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Yme(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],c=t.readSync(a.dataId),u=r.shape[l];for(let R=0;R<c.length;++R){let F=c[R];v.assert(F<=u-1&&F>=0,()=>`GatherV2: the index value ${F} is not in [0, ${u-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(r,a,l,i),p=ps({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=v.sizeFromShape(a.shape),f=ps({inputs:{x:a},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(v.sizeFromShape(r.shape)===0)return g;let y=p.shape.length-1,A=t.dataIdMap.get(p.dataId).id,w=t.dataIdMap.get(f.dataId).id,C=t.dataIdMap.get(g.dataId).id,S=new Uint8Array(new Int32Array(v.computeStrides(p.shape)).buffer),E=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return R6(A,qt[r.dtype],S,y,w,d.batchSize,E,C),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var Jme={kernelName:Ii,backendName:"wasm",setupFunc:Zme,kernelFunc:Yme},Qme=!1,e0e=Xn(Ti,Qme,"bool"),t0e=!1,n0e=Xn(Ka,t0e,"bool"),_6;function s0e(e){_6=e.wasm.cwrap(Ya,null,["number","number","number","number"])}function r0e(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;_6(r,qt[t.dtype],n,o)}return a}var a0e={kernelName:Ya,backendName:"wasm",setupFunc:s0e,kernelFunc:r0e},o0e=!1,i0e=Xn(Ni,o0e,"bool"),l0e=!1,u0e=Xn(Ei,l0e,"bool"),c0e=Tn(Ja),d0e=!1,p0e=Xn(Ri,d0e,"bool"),D6;function h0e(e){D6=e.wasm.cwrap(Qa,null,["number","number","number","number"])}function f0e(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Yo(o,r,t);if(h){let A=t.dataIdMap.get(u.dataId).id;c=u,l=A}let f=c.shape.length;N.assertAxesAreInnerMostDims("max",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;D6(l,qt[o.dtype],y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var m0e={kernelName:Qa,backendName:"wasm",setupFunc:h0e,kernelFunc:f0e},g0e=!1,y0e=Xn(eo,g0e),$6;function A0e(e){$6=e.wasm.cwrap(to,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function x0e(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;v.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(r.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.dilationHeight,x=u.dilationWidth,A=u.strideHeight,b=u.strideWidth,w=u.inChannels,C=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let S=s.makeOutput(u.outShape,"float32"),E=s.dataIdMap.get(S.dataId).id;return $6(a,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,x,A,b,w,C,E),S}var b0e={kernelName:to,backendName:"wasm",setupFunc:A0e,kernelFunc:x0e},P6;function v0e(e){P6=e.wasm.cwrap(no,null,["number, number, number"])}function w0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Yo(o,r,t),f=d;if(h){let b=t.dataIdMap.get(u.dataId).id;b!==i&&(c=u,l=b,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("mean",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=v.sizeFromShape(g),x=c;c.dtype!=="float32"&&(x=Pp({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let A=t.makeOutput(m,"float32");if(v.sizeFromShape(c.shape)!==0){let b=t.dataIdMap.get(A.dataId).id;P6(l,y,b)}if(h&&t.disposeData(u.dataId),a){let b=N.expandShapeToKeepDim(A.shape,p);A.shape=b}return c.dtype!=="float32"&&t.disposeData(x.dataId),A}var k0e={kernelName:no,backendName:"wasm",setupFunc:v0e,kernelFunc:w0e},F6;function S0e(e){F6=e.wasm.cwrap(so,null,["number","number","number","number"])}function I0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Yo(o,r,t);if(h){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(c=u,l=A)}let f=c.shape.length;N.assertAxesAreInnerMostDims("min",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=v.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;F6(l,qt[o.dtype],y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var C0e={kernelName:so,backendName:"wasm",setupFunc:S0e,kernelFunc:I0e},T0e=!1,N0e=Xn(ro,T0e),O6=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(O6||{}),M6;function E0e(e){M6=e.wasm.cwrap(ao,null,["number","array","number","number","array","array","number","number"])}function R0e(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=s.map(f=>f[0]),d=s.map(f=>f[1]),p=new Uint8Array(new Int32Array(u).buffer),h=new Uint8Array(new Int32Array(d).buffer);return M6(o,c,t.shape.length,qt[t.dtype],p,h,O6[r],l),i}var _0e={kernelName:ao,backendName:"wasm",kernelFunc:R0e,setupFunc:E0e},D0e=!0,$0e=Xn(oo,D0e),P0e=Tn(_i);function Ux(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var z6;function F0e(e){z6=e.wasm.cwrap($i,"number",["number","number","number","number","number"])}function O0e(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,c=t.dataIdMap.get(i.dataId).id,u=t.dataIdMap.get(l.dataId).id,d=z6(c,u,a,r,o),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=Ux(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var M0e={kernelName:$i,backendName:"wasm",setupFunc:F0e,kernelFunc:O0e},L6;function z0e(e){L6=e.wasm.cwrap(Iu,"number",["number","number","number","number","number","bool"])}function L0e(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=L6(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ux(t,p);t.wasm._free(m);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([],"int32",g);return[y,x]}var B0e={kernelName:Iu,backendName:"wasm",setupFunc:z0e,kernelFunc:L0e},B6;function W0e(e){B6=e.wasm.cwrap(Pi,"number",["number","number","number","number","number","number"])}function V0e(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=B6(u,d,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Ux(t,p);t.wasm._free(g);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([f],"float32",m);return[y,x]}var U0e={kernelName:Pi,backendName:"wasm",setupFunc:W0e,kernelFunc:V0e},G0e=!1,H0e=Xn(Di,G0e,"bool"),W6;function j0e(e){W6=e.wasm.cwrap(Oi,null,["number","number","number","number","number"])}function q0e(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=n.makeOutput([...r.shape,a],"int32"),c=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(r.dataId).id;return W6(d,a,o,i,c),l}var X0e={kernelName:Oi,backendName:"wasm",setupFunc:j0e,kernelFunc:q0e};function K0e(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var Z0e={kernelName:Fi,backendName:"wasm",kernelFunc:K0e};function Y0e(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Vx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{v.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Vx({inputs:{input:u},backend:n,attrs:{dim:r}});return i.push(d),d}),c=g6({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(u=>n.disposeData(u.dataId)),c}var J0e={kernelName:Mi,backendName:"wasm",kernelFunc:Y0e},V6;function Q0e(e){V6=e.wasm.cwrap(io,null,["number","array","number","number","array","array","number","number"])}function ege(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(v.sizeFromShape(t.shape)===0)return S6({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),p=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return V6(o,u,t.shape.length,qt[t.dtype],h,f,r,c),i}var U6={kernelName:io,backendName:"wasm",kernelFunc:ege,setupFunc:Q0e},tge=!1,nge=Xn(lo,tge),G6;function sge(e){G6=e.wasm.cwrap(uo,null,["number","number","number"])}function rge(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,c=l;l.dtype!=="float32"&&(c=Pp({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(c.dataId).id);let u=n.makeOutput(s.shape,"float32"),d=n.dataIdMap.get(u.dataId).id;return G6(i,o,d),l.dtype!=="float32"&&n.disposeData(c.dataId),u}var age={kernelName:uo,backendName:"wasm",setupFunc:sge,kernelFunc:rge},H6;function oge(e){H6=e.wasm.cwrap(zi,null,["number","number","number","number"])}function ige(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Yo(o,r,t),f=d;if(h){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(c=u,l=A,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("prod",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;H6(l,y,qt[x.dtype],A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var lge={kernelName:zi,backendName:"wasm",setupFunc:oge,kernelFunc:ige},uge=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=QA(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},cge={kernelName:Cu,backendName:"wasm",kernelFunc:uge},dge=!0,pge=Xn(Ua,dge),hge=Tn(co),fge=Tn(ho),j6;function mge(e){j6=e.wasm.cwrap(po,null,["number","number","number","number","number","number","number","number","number","number"])}function gge(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,c]=i,[u,d,p,h]=r.shape,f=[u,l,c,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Pp({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,x=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return x;let A=t.dataIdMap.get(x.dataId).id;return j6(y,u,d,p,h,l,c,a?1:0,o?1:0,A),g!=null&&t.disposeData(g.dataId),x}var yge={kernelName:po,backendName:"wasm",setupFunc:mge,kernelFunc:gge},q6;function Age(e){q6=e.wasm.cwrap(Bi,null,["number","array","number","array","number","number"])}function xge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=v.parseAxisParam(a,r.shape);if(r.shape.length===0)return o0({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);q6(l,u,o.length,d,r.shape.length,c);let p=ps({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),p}var bge={kernelName:Bi,backendName:"wasm",kernelFunc:xge,setupFunc:Age},X6;function vge(e){X6=e.wasm.cwrap(el,null,["number","number","number","number","number","number","number","number","array","number","number"])}function wge(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(l.dataId).id,[d,p,h,f]=r.shape,[m,g]=N.getImageCenter(i,p,h),y=o===0,x=255,A=typeof o=="number"?[o,o,o,y?0:x]:[...o,x],b=new Uint8Array(new Int32Array(A).buffer);return X6(c,d,p,h,f,a,m,g,b,A.length,u),l}var kge={kernelName:el,backendName:"wasm",kernelFunc:wge,setupFunc:vge},Sge=Tn(Wi),Ige=Tn(fo),K6;function Cge(e){K6=e.wasm.cwrap(Vi,null,["number","number","number","number","number","number","array","number","number"])}function Tge(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(v.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=H2.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),x=t.dataIdMap.get(i.dataId).id;return K6(f,g,qt[a.dtype],l,c,u,y,p,x),i}var Nge={kernelName:Vi,backendName:"wasm",setupFunc:Cge,kernelFunc:Tge},Z6;function Ege(e){Z6=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Rge(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,c=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(c.dataId).id,d=s.shape.length,p=r.shape.length,h=d===0||d>1||p===1?1:v.sizeFromShape(r.shape.slice(1));return Z6(o,i,l,h,u),c}var _ge={kernelName:Ui,backendName:"wasm",kernelFunc:Rge,setupFunc:Ege},Y6;function Dge(e){Y6=e.wasm.cwrap(go,null,["number","number"])}function $ge(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return v.sizeFromShape(r.shape)===0||Y6(s,a),r}var Pge={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Dge,kernelFunc:$ge},Fge=Tn(mo),J6;function Oge(e){J6=e.wasm.cwrap(xo,null,["number","number","number","number"])}function Mge(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=v.sizeFromShape(n.shape)/i;return v.sizeFromShape(a.shape)===0||J6(r,o,i,l),a}var zge={kernelName:xo,backendName:"wasm",setupFunc:Oge,kernelFunc:Mge};function Lge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<r.shape.length;++C)l.push([0,0]);let c=U6.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=ps({inputs:{x:c},backend:n,attrs:{shape:u}}),x=Cc({inputs:{x:m},backend:n,attrs:{perm:d}}),w=ps({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),w}var Bge={kernelName:ji,backendName:"wasm",kernelFunc:Lge},Q6;function Wge(e){Q6=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Vge(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=n,i=s.shape[0],l=s.shape[1],c=t.readSync(a.dataId)[0],u=[i+c,l],d=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(o.dataId).id,f=t.makeOutput(u,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(u.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([c],"bool"),A=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([i],s.dtype),w=t.dataIdMap.get(b.dataId).id,C=t.makeOutput([4],"int32"),S=t.dataIdMap.get(C.dataId).id,E=Q6(d,p,qt[r.dtype],i,c,l,h,m,y,A,w,S),R=t.readSync(C.dataId),F;switch(R[0]){case 1:{F=N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{F=N.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:F=N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:F=""}if(t.disposeData(C.dataId),F)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error(F);let _=f,P=g;return E!==u[0]&&(_=Ml({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),P=Ml({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[_,P,x,b]}var Uge={kernelName:bd,backendName:"wasm",setupFunc:Wge,kernelFunc:Vge},e8;function Gge(e){e8=e.wasm.cwrap(Du,null,["number","number","number","number","number","number","number"])}function Hge(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(a.dataId).id,c=s.shape[0],u=v.sizeFromShape(a.shape),d=t.makeOutput([c,u],s.dtype),p=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([u],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;e8(o,i,l,c,p,f,g);let y=t.readSync(m.dataId),x;switch(y[0]){case 0:{x=N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{x=N.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:x=N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=N.getSparseReshapeInputOutputMultipleErrorMessage(A,b);break}case 4:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=N.getSparseReshapeInputOutputMismatchErrorMessage(A,b);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(d.dataId),t.disposeData(h.dataId),new Error(x);return[d,h]}var jge={kernelName:Du,backendName:"wasm",setupFunc:Gge,kernelFunc:Hge},t8;function n8(e){t8=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function s8(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:o}=s,i=a.shape[0],l=n.readSync(o.dataId,i-1,i)[0],u=i>0?l+1:0;if(u<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=r.shape.slice();d[0]=u;let p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(d,r.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput([4],"int32"),x=n.dataIdMap.get(y.dataId).id;t8(p,qt[r.dtype],r.shape[0],h,f,g,x,t,0);let A=n.readSync(y.dataId),b;switch(A[0]){case 0:{b=N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{b=N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:b=N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:b=N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(y.dataId),b)throw n.disposeData(m.dataId),new Error(b);return m}function qge(e){return s8(e,!0)}var Xge={kernelName:vd,backendName:"wasm",setupFunc:n8,kernelFunc:qge};function Kge(e){return s8(e,!1)}var Zge={kernelName:wd,backendName:"wasm",setupFunc:n8,kernelFunc:Kge};function Yge(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=v.parseAxisParam(o,r.shape)[0],l=N.prepareSplitSize(r,a,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=Ml({inputs:{x:r},attrs:{begin:c,size:p},backend:s});return c[i]+=d,h})}var Jge={kernelName:qi,backendName:"wasm",kernelFunc:Yge},Qge=Tn(yo),e2e=Tn($u),t2e=!0,n2e=Xn(bo,t2e),r8;function s2e(e){r8=e.wasm.cwrap(So,null,["number","number","number","number"])}function r2e(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return r8(o,r,qt[a.dtype],l),i}var a2e={kernelName:So,backendName:"wasm",setupFunc:s2e,kernelFunc:r2e},a8;function o2e(e){a8=e.wasm.cwrap(Xi,null,["number","array","number","array","array","array","array","array","number","number"])}function i2e(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Mt.sliceInfo(r.shape,a,o,i,l,c,u,d,p),w;if(m)w=ps({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=Mt.computeOutShape(x,A,b),S=Ml({inputs:{x:r},backend:t,attrs:{begin:x,size:C}});w=ps({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}else{let C=t.makeOutput(h,"float32"),S=t.dataIdMap.get(r.dataId).id,E=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(A).buffer),_=new Uint8Array(new Int32Array(b).buffer),P=new Uint8Array(new Int32Array(h).buffer),T=new Uint8Array(new Int32Array(v.computeStrides(h)).buffer),O=t.dataIdMap.get(C.dataId).id;a8(S,E,r.shape.length,R,F,_,P,T,h.length,O),w=ps({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}return w}var l2e={kernelName:Xi,backendName:"wasm",setupFunc:o2e,kernelFunc:i2e},u2e=!0,c2e=Xn(vo,u2e),o8;function d2e(e){o8=e.wasm.cwrap(Ao,null,["number","number","number","number"])}function p2e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Yo(o,r,t),f=d;if(h){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(c=u,l=A,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("sum",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(v.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;o8(l,y,qt[x.dtype],A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var h2e={kernelName:Ao,backendName:"wasm",setupFunc:d2e,kernelFunc:p2e},f2e=Tn(Ki),m2e=Tn(wo),i8;function g2e(e){i8=e.wasm.cwrap(Zr,null,["number","array","number","array","number","number"])}function y2e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let p=0;p<i.length;p++)i[p]=r.shape[p]*o[p];let l=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),u=n.makeOutput(i,r.dtype),d=n.dataIdMap.get(u.dataId).id;return i8(a,l,r.shape.length,c,i.length,qt[u.dtype],d),u}var A2e={kernelName:Zr,backendName:"wasm",setupFunc:g2e,kernelFunc:y2e},l8;function x2e(e){l8=e.wasm.cwrap(Zi,null,["number","array","number","number","number","bool","number","number"])}var b2e=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let c=t.makeOutput(l,s.dtype),u=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(l,"int32"),p=t.dataIdMap.get(d.dataId).id;return l8(o,i,s.shape.length,qt[s.dtype],r,a,u,p),[c,d]},v2e={kernelName:Zi,backendName:"wasm",setupFunc:x2e,kernelFunc:b2e},u8;function w2e(e){u8=e.wasm.cwrap(Yi,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function k2e(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,p,h]=r.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),x=t.makeOutput(g,r.dtype),A=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(r.dataId).id,S=t.dataIdMap.get(a.dataId).id,E=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return u8(w,S,a.shape[0]>1,u,f,m,h,p,d,y,r.shape.length-1,E,R,l,A),x}var S2e={kernelName:Yi,backendName:"wasm",setupFunc:w2e,kernelFunc:k2e};function I2e(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==a&&(l[c++]=r.shape[h]);let u=new Array(o),d=new Array(i).fill(0),p=r.shape.slice();p[a]=1;for(let h=0;h<u.length;h++)d[a]=h,u[h]=Ml({inputs:{x:r},attrs:{begin:d,size:p},backend:n});return u.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var C2e={kernelName:Ji,backendName:"wasm",kernelFunc:I2e};function T2e(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var N2e={kernelName:Qi,backendName:"wasm",kernelFunc:T2e},E2e=[vfe,kfe,Cfe,Pfe,Mfe,Bfe,Ufe,qfe,Qfe,eme,tme,rme,ame,lme,dme,pme,hme,gme,xme,wme,Ime,Cme,Nme,Eme,Rme,_me,Pme,Fme,Mme,bfe,Bme,Ume,jme,Kme,Jme,e0e,n0e,Tfe,a0e,i0e,u0e,c0e,p0e,m0e,y0e,b0e,k0e,C0e,N0e,_0e,$0e,P0e,M0e,B0e,U0e,H0e,X0e,Z0e,J0e,U6,nge,age,lge,cge,pge,hge,fge,Gfe,yge,bge,kge,Ige,Sge,Nge,_ge,Pge,Fge,Yfe,zge,Bge,Uge,jge,Xge,Zge,Jge,Qge,e2e,n2e,a2e,l2e,c2e,h2e,f2e,m2e,A2e,v2e,S2e,_fe,C2e,N2e];for(let e of E2e)ur(e);var Gx=Y();Gx.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));Gx.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Gx.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var c8=pi(s9()),R2e='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',_2e=pi(r9()),d8=class extends su{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(f8),jx=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new od(this,as())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=v.sizeFromShape(n),i=o*v.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:o}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=o.length)?o:o.slice(t,n);t=t||0,n=n||v.sizeFromShape(a);let i=v.bytesPerElement(r),l=this.wasm.HEAPU8.slice(s+t*i,s+n*i);return P2e(l.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function D2e(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function p8(e,t,n){if(i0!=null)return i0;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),Op!=null&&Op[s]!=null?Op[s]:n+s}async function $2e(){let[e,t]=await Promise.all([Y().getAsync("WASM_HAS_SIMD_SUPPORT"),Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let c=R2e,u=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(u)}return i.endsWith(".wasm")?p8(e,t,Fp!=null?Fp:l):l+i},Hx&&(r.instantiateWasm=D2e(p8(e,t,Fp!=null?Fp:"")));let a=!1;r.onAbort=()=>{if(a||Mp)return;Mp=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&i0==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+c8.default.toString()],{type:"text/javascript"}),o=(0,c8.default)(r)):o=(0,_2e.default)(r),o.then(i=>{a=!0,Mp=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})})})}function P2e(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var F2e=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],i0=null,Fp=null,Op={},Mp=!1,Hx=!1;function O2e(e,t=!1){if(J2("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Mp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");i0=e,Hx=t}function h8(e,t=!1){if(Mp)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Fp=e;else{Op=e;let n=F2e.filter(s=>Op[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Hx=t}var f8=-1,jx=-1;function M2e(e){f8=e}function z2e(){if(jx===-1)throw new Error("WASM backend not initialized.");return jx}var L2e="0.0.0",B2e=2;ul("wasm",async()=>{let{wasm:e}=await $2e();return new d8(e)},B2e);var Jo="3.12.0-20211215",l0={tfjs:Jo,"tfjs-core":Jo,"tfjs-data":Jo,"tfjs-layers":Jo,"tfjs-converter":Jo,"tfjs-backend-cpu":Jo,"tfjs-backend-webgl":Jo,"tfjs-backend-wasm":Jo};var m8=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var g8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,y8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,A8=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,x8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,b8=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var qx=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},v8=class{constructor(t,n,s){fe(this,"uniform",{});fe(this,"attribute",{});fe(this,"gl");fe(this,"id");fe(this,"compile",(t,n)=>{let s=this.gl.createShader(n);return s?(this.gl.shaderSource(s,t),this.gl.compileShader(s),this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS)?s:(J(`filter: gl compile failed: ${this.gl.getShaderInfoLog(s)}`),null)):(J("filter: could not create shader"),null)});this.gl=t;let r=this.compile(n,this.gl.VERTEX_SHADER),a=this.compile(s,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!r||!a)){if(!this.id){J("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){J(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),qx(n,"attribute",this.attribute);for(let o in this.attribute)this.attribute[o]=this.gl.getAttribLocation(this.id,o);qx(n,"uniform",this.uniform),qx(s,"uniform",this.uniform);for(let o in this.uniform)this.uniform[o]=this.gl.getUniformLocation(this.id,o)}}};function w8(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=Kn(100,100),c={},u={INTERMEDIATE:1},d=l.getContext("webgl");if(this.gl=d,!d){J("filter: cannot get webgl context");return}function p(x,A){if(!(x===l.width&&A===l.height)){if(l.width=x,l.height=A,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,o),d.bufferData(d.ARRAY_BUFFER,b,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),r=[null,null]}}function h(x,A){let b=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,b);let w=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,w);let C=d.createTexture();return d.bindTexture(d.TEXTURE_2D,C),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,x,A,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,C,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:b,texture:C}}function f(x){return r[x]=r[x]||h(l.width,l.height),r[x]}function m(x=0){if(!i)return;let A=null,b=null,w=!1;e===0?A=t:A=f(s).texture||null,e++,n&&!(x&u.INTERMEDIATE)?(b=null,w=e%2==0):(s=(s+1)%2,b=f(s).fbo||null),d.bindTexture(d.TEXTURE_2D,A),d.bindFramebuffer(d.FRAMEBUFFER,b),d.uniform1f(i.uniform.flipY,w?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function g(x){if(c[x])return i=c[x],d.useProgram((i?i.id:null)||null),i;if(i=new v8(d,m8,x),!i)return J("filter: could not get webgl program"),null;let A=Float32Array.BYTES_PER_ELEMENT,b=4*A;return d.enableVertexAttribArray(i.attribute.pos),d.vertexAttribPointer(i.attribute.pos,2,d.FLOAT,!1,b,0*A),d.enableVertexAttribArray(i.attribute.uv),d.vertexAttribPointer(i.attribute.uv,2,d.FLOAT,!1,b,2*A),c[x]=i,i}let y={colorMatrix:x=>{let A=new Float32Array(x);A[4]/=255,A[9]/=255,A[14]/=255,A[19]/=255;let b=A[18]===1&&A[3]===0&&A[8]===0&&A[13]===0&&A[15]===0&&A[16]===0&&A[17]===0&&A[19]===0?y8:g8,w=g(b);!w||(d.uniform1fv(w.uniform.m,A),m())},brightness:x=>{let A=(x||0)+1;y.colorMatrix([A,0,0,0,0,0,A,0,0,0,0,0,A,0,0,0,0,0,1,0])},saturation:x=>{let A=(x||0)*2/3+1,b=(A-1)*-.5;y.colorMatrix([A,b,b,0,0,b,A,b,0,0,b,b,A,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:x=>{let A=(x||0)+1,b=-128*(A-1);y.colorMatrix([A,0,0,0,b,0,A,0,0,b,0,0,A,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let A=Math.cos(x),b=Math.sin(x),w=.213,C=.715,S=.072;y.colorMatrix([w+A*(1-w)+b*-w,C+A*-C+b*-C,S+A*-S+b*(1-S),0,0,w+A*-w+b*.143,C+A*(1-C)+b*.14,S+A*-S+b*-.283,0,0,w+A*-w+b*-(1-w),C+A*-C+b*C,S+A*(1-S)+b*S,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let A=new Float32Array(x),b=1/l.width,w=1/l.height,C=g(b8);!C||(d.uniform1fv(C.uniform.m,A),d.uniform2f(C.uniform.px,b,w),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let A=x||1;y.convolution.call(this,[0,-1*A,0,-1*A,1+4*A,-1*A,0,-1*A,0])},emboss:x=>{let A=x||1;y.convolution.call(this,[-2*A,-1*A,0,-1*A,1,1*A,0,1*A,2*A])},blur:x=>{let A=x/7/l.width,b=x/7/l.height,w=g(x8);!w||(d.uniform2f(w.uniform.px,0,b),m(u.INTERMEDIATE),d.uniform2f(w.uniform.px,A,0),m())},pixelate:x=>{let A=x/l.width,b=x/l.height,w=g(A8);!w||(d.uniform2f(w.uniform.size,A,b),m())}};this.add=function(x){let A=Array.prototype.slice.call(arguments,1),b=y[x];a.push({func:b,args:A})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){p(x.width,x.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,x);for(let A=0;A<a.length;A++){n=A===a.length-1;let b=a[A];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function u0(e){let t=e.shape.length===4?Ke(e):e,n=Yt(t,3,2),s=[Oo(n[0]),Oo(n[1]),Oo(n[2])],r=[An(n[0]),An(n[1]),An(n[2])],a=await Promise.all(r.map(h=>h.data())),o=.99*Math.max(a[0][0],a[1][0],a[2][0]),i=[he(n[0],s[0]),he(n[1],s[1]),he(n[2],s[2])],l=[he(r[0],s[0]),he(r[1],s[1]),he(r[2],s[2])],c=[de(o,l[0]),de(o,l[1]),de(o,l[2])],u=[L(i[0],c[0]),L(i[1],c[1]),L(i[2],c[2])],d=an([u[0],u[1],u[2]],2),p=H(d,[1,t.shape[0],t.shape[1],3]);return ne([...n,...s,...r,...i,...l,...c,...u,d,t]),p}var c0=2048,ct=null,cn=null,Tc=null,Nt,da={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function Kn(e,t){let n;if(pe.browser)if(pe.worker){if(typeof OffscreenCanvas=="undefined")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if(typeof document=="undefined")throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof pe.Canvas!="undefined"?n=new pe.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(n=new globalThis.Canvas(e,t));return n}function Xx(e,t){let n=t||Kn(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function Nc(e,t,n=!0){if(!e)return t.debug&&J("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof tt)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof pe.Canvas!="undefined"&&e instanceof pe.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof tt){let s=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)s=Zt(e,0);else if(e.shape[2]===4){let r=fl(e,[0,0,0],[-1,-1,3]);s=Zt(r,0),ne(r)}}else e.shape.length===4&&(e.shape[3]===3?s=Bn(e):e.shape[3]===4&&(s=ml(e,[0,0,0,0],[-1,-1,-1,3])));if(s==null||s.shape.length!==4||s.shape[0]!==1||s.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(s.dtype==="int32"){let r=me(s,"float32");ne(s),s=r}return{tensor:s,canvas:t.filter.return?cn:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&J("input stream is not ready"),{tensor:null,canvas:ct};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!r)return t.debug&&J("cannot determine input dimensions"),{tensor:null,canvas:ct};let a=s,o=r;if(a>c0&&(a=c0,o=Math.trunc(a*r/s)),o>c0&&(o=c0,a=Math.trunc(o*s/r)),(t.filter.width||0)>0?a=t.filter.width:(t.filter.height||0)>0&&(a=s*((t.filter.height||0)/r)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=r*((t.filter.width||0)/s)),!a||!o)throw new Error("input error: cannot determine dimension");(!ct||(ct==null?void 0:ct.width)!==a||(ct==null?void 0:ct.height)!==o)&&(ct=Kn(a,o));let i=ct.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate!="undefined"?(i.translate(s,0),i.scale(-1,1),i.drawImage(e,0,0,s,r,0,0,ct==null?void 0:ct.width,ct==null?void 0:ct.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,s,r,0,0,ct==null?void 0:ct.width,ct==null?void 0:ct.height),(!cn||ct.width!==cn.width||(ct==null?void 0:ct.height)!==(cn==null?void 0:cn.height))&&(cn=Kn(ct.width,ct.height)),t.filter.enabled&&pe.webgl.supported){if(Nt||(Nt=pe.browser?new w8:null),pe.filter=!!Nt,!Nt||!Nt.add)return t.debug&&J("input process error: cannot initialize filters"),{tensor:null,canvas:ct};Nt.reset(),t.filter.brightness!==0&&Nt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Nt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Nt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Nt.add("blur",t.filter.blur),t.filter.saturation!==0&&Nt.add("saturation",t.filter.saturation),t.filter.hue!==0&&Nt.add("hue",t.filter.hue),t.filter.negative&&Nt.add("negative"),t.filter.sepia&&Nt.add("sepia"),t.filter.vintage&&Nt.add("brownie"),t.filter.sepia&&Nt.add("sepia"),t.filter.kodachrome&&Nt.add("kodachrome"),t.filter.technicolor&&Nt.add("technicolor"),t.filter.polaroid&&Nt.add("polaroid"),t.filter.pixelate!==0&&Nt.add("pixelate",t.filter.pixelate),Nt.get()>0?cn=Nt.apply(ct):cn=Nt.draw(ct)}else Xx(ct,cn),Nt&&(Nt=null),pe.filter=!!Nt;if(!n)return{tensor:null,canvas:cn};if(!cn)throw new Error("canvas error: cannot create output");let l,c=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(pe.browser&&$s)l=$s?$s.fromPixels(e):null;else{c=e.data.length/e.height/e.width;let p=new Uint8Array(e.data.buffer);l=pt(p,[e.height,e.width,c],"int32")}else if((!Tc||cn.width!==Tc.width||cn.height!==Tc.height)&&(Tc=Kn(cn.width,cn.height)),$s&&pe.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=$s.fromPixels(cn):(Tc=Xx(cn),l=$s.fromPixels(Tc));else{let f=Xx(cn).getContext("2d").getImageData(0,0,a,o);c=f.data.length/a/o;let m=new Uint8Array(f.data.buffer);l=pt(m,[a,o,c])}if(c===4){let p=fl(l,[0,0,0],[-1,-1,3]);ne(l),l=p}if(!l)throw new Error("input error: cannot create tensor");let u=me(l,"float32"),d=t.filter.equalization?await u0(u):Zt(u,0);return ne([l,u]),{tensor:d,canvas:t.filter.return?cn:null}}}async function k8(e,t){let n=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return n;if(!da.inputTensor)da.inputTensor=Bn(t);else if(da.inputTensor.shape[1]!==t.shape[1]||da.inputTensor.shape[2]!==t.shape[2])ne(da.inputTensor),da.inputTensor=Bn(t);else{let s={};s.diff=he(t,da.inputTensor),s.squared=L(s.diff,s.diff),s.sum=we(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;ne([da.inputTensor,s.diff,s.squared,s.sum]),da.inputTensor=Bn(t),n=a<=(e.cacheSensitivity||0)}return n}async function S8(e,t,n){let s={};if(!t||!n||t.shape.length!==4||t.shape.length!==n.shape.length)return e.debug||J("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(t.shape[0]!==1||n.shape[0]!==1||t.shape[3]!==3||n.shape[3]!==3)return e.debug||J("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;s.input1=Bn(t),s.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Se.resizeBilinear(n,[t.shape[1],t.shape[2]]):Bn(n),s.diff=he(s.input1,s.input2),s.squared=L(s.diff,s.diff),s.sum=we(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return ne([s.input1,s.input2,s.diff,s.squared,s.sum]),a}var I8=class{constructor(){fe(this,"browser");fe(this,"node");fe(this,"worker");fe(this,"platform","");fe(this,"agent","");fe(this,"backends",[]);fe(this,"initial");fe(this,"filter");fe(this,"tfjs");fe(this,"offscreen");fe(this,"perfadd",!1);fe(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});fe(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});fe(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});fe(this,"cpu",{model:void 0,flags:[]});fe(this,"kernels",[]);fe(this,"Canvas");fe(this,"Image");fe(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined",this.tfjs={version:l0["tfjs-core"]},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t&&t[0]){let n=t[0].match(/\(([^()]+)\)/g);this.platform=n&&n[0]?n[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(as().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&Ps()==="wasm"&&(this.wasm.simd=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let t=Kn(100,100),n=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof n!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(Ps()==="webgl"||Ps()==="humangl")){let s=Er().gpgpu!=="undefined"?await Er().getGPGPUContext().gl:null;s&&(this.webgl.version=s.getParameter(s.VERSION),this.webgl.renderer=s.getParameter(s.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(s){this.webgpu.supported=!1}try{this.kernels=Yr(Ps()).map(s=>s.kernelName.toLowerCase())}catch(s){}}async updateCPU(){let t={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},pe=new I8;var Kx="2.5.7";var hs,Zx=[],V2e=["white","black","asian","indian","other"],U2e=[15,23,28,35.5,45.5,55.5,65],C8=0,T8=0,Yx=Number.MAX_SAFE_INTEGER;async function N8(e){return pe.initial&&(hs=null),hs?e.debug&&J("cached model:",hs.modelUrl):(hs=await Be(We(e.modelBasePath,e.face.gear.modelPath)),!hs||!hs.modelUrl?J("load model failed:",e.face.gear.modelPath):e.debug&&J("load model:",hs.modelUrl)),hs}async function Jx(e,t,n,s){var o,i;if(!hs)return{age:0,gender:"unknown",genderScore:0,race:[]};let r=Yx<(((o=t.face.gear)==null?void 0:o.skipFrames)||0),a=(((i=t.face.gear)==null?void 0:i.skipTime)||0)>ie()-T8;return t.skipAllowed&&a&&r&&C8===s&&Zx[n]?(Yx++,Zx[n]):(Yx=0,new Promise(async l=>{var y,x;if(!(hs==null?void 0:hs.inputs[0].shape))return;let c={},u=[[0,.1,.9,.9]];c.resize=Se.cropAndResize(e,u,[0],[hs.inputs[0].shape[2],hs.inputs[0].shape[1]]);let d={age:0,gender:"unknown",genderScore:0,race:[]};((y=t.face.gear)==null?void 0:y.enabled)&&([c.age,c.gender,c.race]=hs.execute(c.resize,["age_output","gender_output","race_output"]));let p=await c.gender.data();d.gender=p[0]>p[1]?"male":"female",d.genderScore=Math.round(100*(p[0]>p[1]?p[0]:p[1]))/100;let h=await c.race.data();for(let A=0;A<h.length;A++)h[A]>(((x=t.face.gear)==null?void 0:x.minConfidence)||.2)&&d.race.push({score:Math.round(100*h[A])/100,race:V2e[A]});d.race.sort((A,b)=>b.score-A.score);let m=Array.from(await c.age.data()).map((A,b)=>[U2e[b],A]).sort((A,b)=>b[1]-A[1]),g=m[0][0];for(let A=1;A<m.length;A++)g+=m[A][1]*(m[A][0]-g);d.age=Math.round(10*g)/10,Object.keys(c).forEach(A=>ne(c[A])),Zx[n]=d,C8=s,T8=ie(),l(d)}))}var Xe={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function E8(){Xe.tf255=Ce(255,"float32"),Xe.tf1=Ce(1,"float32"),Xe.tf2=Ce(2,"float32"),Xe.tf05=Ce(.5,"float32"),Xe.tf127=Ce(127.5,"float32"),Xe.rgb=Ct([.2989,.587,.114],"float32")}var Pn,d0=[],R8=0,_8=0,Qx=Number.MAX_SAFE_INTEGER;async function D8(e){return pe.initial&&(Pn=null),Pn?e.debug&&J("cached model:",Pn.modelUrl):(Pn=await Be(We(e.modelBasePath,e.face.ssrnet.modelPathAge)),!Pn||!Pn.modelUrl?J("load model failed:",e.face.ssrnet.modelPathAge):e.debug&&J("load model:",Pn.modelUrl)),Pn}async function eb(e,t,n,s){var o,i,l,c;if(!Pn)return{age:0};let r=Qx<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-_8;return t.skipAllowed&&r&&a&&R8===s&&((l=d0[n])==null?void 0:l.age)&&((c=d0[n])==null?void 0:c.age)>0?(Qx++,d0[n]):(Qx=0,new Promise(async u=>{if(!(Pn==null?void 0:Pn.inputs)||!Pn.inputs[0]||!Pn.inputs[0].shape)return;let d={};d.resize=Se.resizeBilinear(e,[Pn.inputs[0].shape[2],Pn.inputs[0].shape[1]],!1),d.enhance=L(d.resize,Xe.tf255);let p={age:0};if(t.face.ssrnet.enabled&&(d.age=Pn.execute(d.enhance)),d.age){let h=await d.age.data();p.age=Math.trunc(10*h[0])/10}Object.keys(d).forEach(h=>ne(d[h])),d0[n]=p,R8=s,_8=ie(),u(p)}))}var fs,p0=[],$8=0,P8=0,tb=Number.MAX_SAFE_INTEGER,nb=[.2989,.587,.114];async function F8(e){return pe.initial&&(fs=null),fs?e.debug&&J("cached model:",fs.modelUrl):(fs=await Be(We(e.modelBasePath,e.face.ssrnet.modelPathGender)),!fs||!fs.modelUrl?J("load model failed:",e.face.ssrnet.modelPathGender):e.debug&&J("load model:",fs.modelUrl)),fs}async function sb(e,t,n,s){var o,i,l,c;if(!fs)return{gender:"unknown",genderScore:0};let r=tb<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-P8;return t.skipAllowed&&r&&a&&$8===s&&((l=p0[n])==null?void 0:l.gender)&&((c=p0[n])==null?void 0:c.genderScore)>0?(tb++,p0[n]):(tb=0,new Promise(async u=>{if(!(fs==null?void 0:fs.inputs[0].shape))return;let d={};d.resize=Se.resizeBilinear(e,[fs.inputs[0].shape[2],fs.inputs[0].shape[1]],!1),d.enhance=X(()=>{let[f,m,g]=Yt(d.resize,3,3),y=L(f,nb[0]),x=L(m,nb[1]),A=L(g,nb[2]),b=hf([y,x,A]);return L(he(b,Xe.tf05),2)});let p={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(d.gender=fs.execute(d.enhance));let h=await d.gender.data();p.gender=h[0]>h[1]?"female":"male",p.genderScore=h[0]>h[1]?Math.trunc(100*h[0])/100:Math.trunc(100*h[1])/100,Object.keys(d).forEach(f=>ne(d[f])),p0[n]=p,$8=s,P8=ie(),u(p)}))}var dn,h0=[],rb=Number.MAX_SAFE_INTEGER,O8=0,M8=0;async function z8(e){var t,n;return pe.initial&&(dn=null),dn?e.debug&&J("cached model:",dn.modelUrl):(dn=await Be(We(e.modelBasePath,((t=e.face.antispoof)==null?void 0:t.modelPath)||"")),!dn||!dn.modelUrl?J("load model failed:",(n=e.face.antispoof)==null?void 0:n.modelPath):e.debug&&J("load model:",dn.modelUrl)),dn}async function ab(e,t,n,s){var o,i;if(!dn)return 0;let r=(((o=t.face.antispoof)==null?void 0:o.skipTime)||0)>ie()-M8,a=rb<(((i=t.face.antispoof)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&O8===s&&h0[n]?(rb++,h0[n]):(rb=0,new Promise(async l=>{let c=Se.resizeBilinear(e,[(dn==null?void 0:dn.inputs[0].shape)?dn.inputs[0].shape[2]:0,(dn==null?void 0:dn.inputs[0].shape)?dn.inputs[0].shape[1]:0],!1),u=dn==null?void 0:dn.execute(c),d=(await u.data())[0];h0[n]=Math.round(100*d)/100,O8=s,M8=ie(),ne([c,u]),l(h0[n])}))}var ar={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},ob={count:468,mouth:13,symmetryLine:[13,ar.midwayBetweenEyes[0]]},zp={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},ib=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],Lp=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],zl=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var G2e=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],H2e=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],j2e=[33,133,362,263,1,78,308],M1e=G2e.map(e=>Lp[e]),z1e=H2e.map(e=>Lp[e]),L1e=j2e.map(e=>Lp[e]);var Ec=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],f0=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],lb=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],ub=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],L8=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s,landmarks:e.landmarks,confidence:e.confidence}},cb=(e,t,n)=>{let s=t.shape[1],r=t.shape[2],a=[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r],o=Se.cropAndResize(t,[a],[0],n),i=de(o,Xe.tf255);return ne(o),i},m0=(e,t)=>{let n=f0(e),s=Ec(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},g0=e=>{let t=f0(e),n=Ec(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks,confidence:e.confidence}},B8=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},db=[[1,0,0],[0,1,0],[0,0,1]],q2e=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),X2e=(e,t)=>q2e(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var W8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Ll=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},K2e=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},V8=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Ll(e[r],K2e(t,a)))}return n},U8=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=W8(t[0],t[1]),o=V8(a,r),i=W8(-t[0],-t[1]);return V8(o,i)},Z2e=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Ll(t[0],n),-Ll(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},Y2e=(e,t)=>[Ll(e,t[0]),Ll(e,t[1])];function G8(e){let t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let c=r*(l+.5);for(let u=0;u<o;u++){let d=r*(u+.5);for(let p=0;p<i;p++)n.push([d,c])}}}return n}function H8(e,t,n,s,r){let a=Ec(t),o=e.map(h=>[a[0]/r*(h[0]-r/2),a[1]/r*(h[1]-r/2),h[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?U8(n,[0,0]):db,c=i?o.map(h=>[...Y2e(h,l),h[2]]):o,u=i?Z2e(s):db,d=f0(t),p=[Ll(d,u[0]),Ll(d,u[1])];return c.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2]||0)])}function j8(e,t,n,s){let r=t.landmarks.length>=ob.count?ob.symmetryLine:zp.symmetryLine,a=0,o=db,i;if(e&&pe.kernels.includes("rotatewithoffset"))if(a=X2e(t.landmarks[r[0]],t.landmarks[r[1]]),a&&a!==0&&Math.abs(a)>.2){let c=f0(t),u=[c[0]/n.shape[2],c[1]/n.shape[1]],d=Se.rotateWithOffset(n,a,0,u);o=U8(-a,c),i=cb(t,d,[s,s]),ne(d)}else i=cb(t,n,[s,s]);else i=cb(t,n,[s,s]);return[a,o,i]}var J2e=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]},q8=(e,t)=>{let n=J2e(e),s=Ec(t);return{startPoint:[n[0]-s[0]/2,n[1]-s[1]/2],endPoint:[n[0]+s[0]/2,n[1]+s[1]/2]}};var X8=6,Q2e=1.2,Gs,K8=null,Qo=0,Bp=null,y0=()=>Qo;async function Z8(e){var t,n;return pe.initial&&(Gs=null),Gs?e.debug&&J("cached model:",Gs.modelUrl):(Gs=await Be(We(e.modelBasePath,((t=e.face.detector)==null?void 0:t.modelPath)||"")),!Gs||!Gs.modelUrl?J("load model failed:",(n=e.face.detector)==null?void 0:n.modelPath):e.debug&&J("load model:",Gs.modelUrl)),Qo=Gs.inputs[0].shape?Gs.inputs[0].shape[2]:0,Bp=Ce(Qo,"int32"),K8=hr(G8(Qo)),Gs}function eye(e){let t={};t.boxStarts=Fe(e,[0,1],[-1,2]),t.centers=ue(t.boxStarts,K8),t.boxSizes=Fe(e,[0,3],[-1,2]),t.boxSizesNormalized=de(t.boxSizes,Bp),t.centersNormalized=de(t.centers,Bp),t.halfBoxSize=de(t.boxSizesNormalized,Xe.tf2),t.starts=he(t.centersNormalized,t.halfBoxSize),t.ends=ue(t.centersNormalized,t.halfBoxSize),t.startNormalized=L(t.starts,Bp),t.endNormalized=L(t.ends,Bp);let n=Vu([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(s=>ne(t[s])),n}async function Y8(e,t){var i,l,c,u;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let n={};n.resized=Se.resizeBilinear(e,[Qo,Qo]),n.div=de(n.resized,Xe.tf127),n.normalized=he(n.div,Xe.tf05);let s=Gs==null?void 0:Gs.execute(n.normalized);if(Array.isArray(s)){let d=s.sort((p,h)=>p.size-h.size);n.concat384=St([d[0],d[2]],2),n.concat512=St([d[1],d[3]],2),n.concat=St([n.concat512,n.concat384],1),n.batch=Ke(n.concat,0)}else n.batch=Ke(s);ne(s),n.boxes=eye(n.batch),n.logits=Fe(n.batch,[0,0],[-1,1]),n.sigmoid=_n(n.logits),n.scores=Ke(n.sigmoid),n.nms=await Se.nonMaxSuppressionAsync(n.boxes,n.scores,((i=t.face.detector)==null?void 0:i.maxDetected)||0,((l=t.face.detector)==null?void 0:l.iouThreshold)||0,((c=t.face.detector)==null?void 0:c.minConfidence)||0);let r=await n.nms.array(),a=[],o=await n.scores.data();for(let d=0;d<r.length;d++){let p=o[r[d]];if(p>(((u=t.face.detector)==null?void 0:u.minConfidence)||0)){let h={};h.bbox=Fe(n.boxes,[r[d],0],[1,-1]),h.slice=Fe(n.batch,[r[d],X8-1],[1,-1]),h.squeeze=Ke(h.slice),h.landmarks=H(h.squeeze,[X8,-1]);let f=await h.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await h.landmarks.array(),confidence:p},g=L8(m,[(e.shape[2]||0)/Qo,(e.shape[1]||0)/Qo]),y=m0(g,t.face.scale||Q2e),x=g0(y);a.push(x),Object.keys(h).forEach(A=>ne(h[A]))}}return Object.keys(n).forEach(d=>ne(n[d])),a}var fb={};td(fb,{connected:()=>hb,kpt:()=>pb});var pb=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],hb={leftLeg:["leftHip","leftKnee","leftAnkle","leftHeel","leftFoot"],rightLeg:["rightHip","rightKnee","rightAnkle","rightHeel","rightFoot"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder","rightShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist","leftPalm"],rightArm:["rightShoulder","rightElbow","rightWrist","rightPalm"],leftEye:["leftEyeInside","leftEye","leftEyeOutside"],rightEye:["rightEyeInside","rightEye","rightEyeOutside"],mouth:["leftMouth","rightMouth"]};var J8=224,tye,nye=5,A0=[8,16,32,32,32];async function Q8(){let e=[],t=0;for(;t<nye;){let n=0,s=t;for(;s<A0.length&&A0[s]===A0[t];)n+=2,s++;let r=A0[t],a=Math.ceil(J8/r),o=Math.ceil(J8/r);for(let i=0;i<a;++i)for(let l=0;l<o;++l)for(let c=0;c<n;++c)e.push({x:(l+.5)/o,y:(i+.5)/a});t=s}tye={x:Ct(e.map(n=>n.x)),y:Ct(e.map(n=>n.y))}}function pa(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function eT(e,t=[1,1]){let n=[e.map(c=>c[0]),e.map(c=>c[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function x0(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}function mb(e){return[Math.max(0,e[1]),Math.max(0,e[0]),Math.min(1,e[3]+e[1]),Math.min(1,e[2]+e[0])]}var tT={initial:!0},pn={detector:null,landmarks:null},Rc={detector:[224,224],landmarks:[256,256]},gb=Number.MAX_SAFE_INTEGER,sye={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},b0=null,Wp,ei=[[0,0],[0,0],[0,0],[0,0]],nT=0,sT=e=>1-1/(1+Math.exp(e));async function rT(e){if(tT.initial&&(pn.detector=null),!pn.detector&&e.body.detector&&e.body.detector.modelPath){pn.detector=await Be(We(e.modelBasePath,e.body.detector.modelPath||""));let t=Object.values(pn.detector.modelSignature.inputs);Rc.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Rc.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!pn.detector||!pn.detector.modelUrl?J("load model failed:",e.body.detector.modelPath):e.debug&&J("load model:",pn.detector.modelUrl)}else e.debug&&pn.detector&&J("cached model:",pn.detector.modelUrl);return await Q8(),pn.detector}async function aT(e){if(tT.initial&&(pn.landmarks=null),pn.landmarks)e.debug&&J("cached model:",pn.landmarks.modelUrl);else{pn.landmarks=await Be(We(e.modelBasePath,e.body.modelPath||""));let t=Object.values(pn.landmarks.modelSignature.inputs);Rc.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Rc.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!pn.landmarks||!pn.landmarks.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",pn.landmarks.modelUrl)}return pn.landmarks}async function rye(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let s;if(Wp&&(n.cropped=Se.cropAndResize(e,[Wp],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let r=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];ei=[[0,0],r,a,[0,0]],n.pad=Js(n.cropped||e,ei),n.resize=Se.resizeBilinear(n.pad,[t,t]),s=de(n.resize,Xe.tf255)}else e.shape[1]!==t?(n.resize=Se.resizeBilinear(n.cropped||e,[t,t]),s=de(n.resize,Xe.tf255)):s=de(n.cropped||e,Xe.tf255);return Object.keys(n).forEach(r=>ne(n[r])),s}function aye(e,t){for(let n of e)n.position=[Math.trunc(n.position[0]*(t[0]+ei[2][0]+ei[2][1])/t[0]-ei[2][0]),Math.trunc(n.position[1]*(t[1]+ei[1][0]+ei[1][1])/t[1]-ei[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],n.position[2]];if(Wp)for(let n of e)n.positionRaw=[n.positionRaw[0]+Wp[1],n.positionRaw[1]+Wp[0],n.positionRaw[2]],n.position=[Math.trunc(n.positionRaw[0]*t[0]),Math.trunc(n.positionRaw[1]*t[1]),n.positionRaw[2]];return e}async function oye(e,t,n){var h;let s={};[s.ld,s.segmentation,s.heatmap,s.world,s.poseflag]=(h=pn.landmarks)==null?void 0:h.execute(e,sye.landmarks);let r=(await s.poseflag.data())[0],a=await s.ld.data();Object.keys(s).forEach(f=>ne(s[f]));let o=[],i=5;for(let f=0;f<a.length/i;f++){let m=sT(a[i*f+3]),g=sT(a[i*f+4]),y=Math.trunc(100*m*g*r)/100,x=[a[i*f+0]/Rc.landmarks[0],a[i*f+1]/Rc.landmarks[1],a[i*f+2]+0],A=[Math.trunc(n[0]*x[0]),Math.trunc(n[1]*x[1]),x[2]];o.push({part:pb[f],positionRaw:x,position:A,score:y})}if(r<(t.body.minConfidence||0))return null;let l=aye(o,n),c=l.map(f=>f.position),u=pa(c,[n[0],n[1]]),d={};for(let[f,m]of Object.entries(hb)){let g=[];for(let y=0;y<m.length-1;y++){let x=l.find(b=>b.part===m[y]),A=l.find(b=>b.part===m[y+1]);x&&A&&g.push([x.position,A.position])}d[f]=g}return{id:0,score:Math.trunc(100*r)/100,box:u.box,boxRaw:u.boxRaw,keypoints:l,annotations:d}}async function yb(e,t){let n=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>ie()-nT,r=gb<(t.body.skipFrames||0);if(t.skipAllowed&&s&&r&&b0!==null)gb++;else{let a={};a.landmarks=await rye(e,256),b0=await oye(a.landmarks,t,n),Object.keys(a).forEach(o=>ne(a[o])),nT=ie(),gb=0}return b0?[b0]:[]}var _c=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var or,Bl=0,Ab=[],oT=0,xb=Number.MAX_SAFE_INTEGER;async function iT(e){if(pe.initial&&(or=null),or)e.debug&&J("cached model:",or.modelUrl);else{or=await Be(We(e.modelBasePath,e.object.modelPath||""));let t=Object.values(or.modelSignature.inputs);Bl=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!or||!or.modelUrl?J("load model failed:",e.object.modelPath):e.debug&&J("load model:",or.modelUrl)}return or}async function iye(e,t,n){if(!e)return[];let s={},r=[],a=await e.array();s.squeeze=Ke(e);let o=Yt(s.squeeze,6,1);s.stack=an([o[1],o[0],o[3],o[2]],1),s.boxes=Ke(s.stack),s.scores=Ke(o[4]),s.classes=Ke(o[5]),ne([e,...o]),s.nms=await Se.nonMaxSuppressionAsync(s.boxes,s.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);let i=await s.nms.data(),l=0;for(let c of Array.from(i)){let u=Math.trunc(100*a[0][c][4])/100,d=a[0][c][5],p=_c[d].label,[h,f]=[a[0][c][0]/Bl,a[0][c][1]/Bl],m=[h,f,a[0][c][2]/Bl-h,a[0][c][3]/Bl-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:l++,score:u,class:d,label:p,box:g,boxRaw:m})}return Object.keys(s).forEach(c=>ne(s[c])),r}async function bb(e,t){let n=(t.object.skipTime||0)>ie()-oT,s=xb<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&Ab.length>0?(xb++,Ab):(xb=0,new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Se.resizeBilinear(e,[Bl,Bl]),i=t.object.enabled?or==null?void 0:or.execute(o,["tower_0/detections"]):null;oT=ie(),ne(o);let l=await iye(i,a,t);Ab=l,r(l)}))}var kb={};td(kb,{connected:()=>wb,kpt:()=>vb});var vb=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],wb={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var hn,lT=0,Zn={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},Sb=Number.MAX_SAFE_INTEGER;async function uT(e){return pe.initial&&(hn=null),hn?e.debug&&J("cached model:",hn.modelUrl):(hn=await Be(We(e.modelBasePath,e.body.modelPath||"")),!hn||!hn.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",hn.modelUrl)),hn}async function lye(e,t){let[n,s]=e.shape,r=H(e,[s*n]),a=An(r,0),o=(await a.data())[0];if(ne([r,a]),o>t){let i=Fs(r,0),l=Hd(i,n),c=(await l.data())[0],u=de(i,Ce(n,"int32")),d=(await u.data())[0];return ne([l,u]),[c,d,o]}return[0,0,o]}async function Ib(e,t){let n=(t.body.skipTime||0)>ie()-lT,s=Sb<(t.body.skipFrames||0);return t.skipAllowed&&n&&s&&Object.keys(Zn.keypoints).length>0?(Sb++,[Zn]):(Sb=0,new Promise(async r=>{var d;let a=X(()=>{if(!(hn==null?void 0:hn.inputs[0].shape))return null;let p=Se.resizeBilinear(e,[hn.inputs[0].shape[2],hn.inputs[0].shape[1]],!1),h=L(p,Xe.tf2);return he(h,Xe.tf1)}),o;if(t.body.enabled&&(o=hn==null?void 0:hn.execute(a)),lT=ie(),ne(a),o){Zn.keypoints.length=0;let p=o.squeeze();ne(o);let h=p.unstack(2);ne(p);for(let f=0;f<h.length;f++){let[m,g,y]=await lye(h[f],t.body.minConfidence);y>(((d=t.body)==null?void 0:d.minConfidence)||0)&&Zn.keypoints.push({score:Math.round(100*y)/100,part:vb[f],positionRaw:[m/hn.inputs[0].shape[2],g/hn.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/hn.inputs[0].shape[2]),Math.round(e.shape[1]*g/hn.inputs[0].shape[1])]})}h.forEach(f=>ne(f))}Zn.score=Zn.keypoints.reduce((p,h)=>h.score>p?h.score:p,0);let i=Zn.keypoints.map(p=>p.position[0]),l=Zn.keypoints.map(p=>p.position[1]);Zn.box=[Math.min(...i),Math.min(...l),Math.max(...i)-Math.min(...i),Math.max(...l)-Math.min(...l)];let c=Zn.keypoints.map(p=>p.positionRaw[0]),u=Zn.keypoints.map(p=>p.positionRaw[1]);Zn.boxRaw=[Math.min(...c),Math.min(...u),Math.max(...c)-Math.min(...c),Math.max(...u)-Math.min(...u)];for(let[p,h]of Object.entries(wb)){let f=[];for(let m=0;m<h.length-1;m++){let g=Zn.keypoints.find(x=>x.part===h[m]),y=Zn.keypoints.find(x=>x.part===h[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}Zn.annotations[p]=f}r([Zn])}))}var uye=["angry","disgust","fear","happy","sad","surprise","neutral"],Yn,v0=[],cT=0,dT=0,Cb=Number.MAX_SAFE_INTEGER;async function pT(e){var t,n;return pe.initial&&(Yn=null),Yn?e.debug&&J("cached model:",Yn.modelUrl):(Yn=await Be(We(e.modelBasePath,((t=e.face.emotion)==null?void 0:t.modelPath)||"")),!Yn||!Yn.modelUrl?J("load model failed:",(n=e.face.emotion)==null?void 0:n.modelPath):e.debug&&J("load model:",Yn.modelUrl)),Yn}async function Tb(e,t,n,s){var o,i;if(!Yn)return[];let r=Cb<(((o=t.face.emotion)==null?void 0:o.skipFrames)||0),a=(((i=t.face.emotion)==null?void 0:i.skipTime)||0)>ie()-dT;return t.skipAllowed&&a&&r&&cT===s&&v0[n]&&v0[n].length>0?(Cb++,v0[n]):(Cb=0,new Promise(async l=>{var u,d;let c=[];if((u=t.face.emotion)==null?void 0:u.enabled){let p={},h=(Yn==null?void 0:Yn.inputs[0].shape)?Yn.inputs[0].shape[2]:0;p.resize=Se.resizeBilinear(e,[h,h],!1),p.channels=L(p.resize,Xe.rgb),p.grayscale=we(p.channels,3,!0),p.grayscaleSub=he(p.grayscale,Xe.tf05),p.grayscaleMul=L(p.grayscaleSub,Xe.tf2),p.emotion=Yn==null?void 0:Yn.execute(p.grayscaleMul),dT=ie();let f=await p.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((d=t.face.emotion)==null?void 0:d.minConfidence)||0)&&c.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:uye[m]});c.sort((m,g)=>g.score-m.score),Object.keys(p).forEach(m=>ne(p[m]))}v0[n]=c,cT=s,l(c)}))}var Is,Nb=[],hT=0,fT=0,mT=Number.MAX_SAFE_INTEGER;async function gT(e){let t=We(e.modelBasePath,e.face.mobilefacenet.modelPath);return pe.initial&&(Is=null),Is?e.debug&&J("cached model:",t):(Is=await Be(t),Is?e.debug&&J("load model:",t):J("load model failed:",e.face.mobilefacenet.modelPath)),Is}async function Eb(e,t,n,s){var o,i;if(!Is)return[];let r=mT<(((o=t.face.embedding)==null?void 0:o.skipFrames)||0),a=(((i=t.face.embedding)==null?void 0:i.skipTime)||0)>ie()-fT;return t.skipAllowed&&a&&r&&hT===s&&Nb[n]?(mT++,Nb[n]):new Promise(async l=>{var u;let c=[];if(((u=t.face.embedding)==null?void 0:u.enabled)&&(Is==null?void 0:Is.inputs[0].shape)){let d={};d.crop=Se.resizeBilinear(e,[Is.inputs[0].shape[2],Is.inputs[0].shape[1]],!1),d.data=Is==null?void 0:Is.execute(d.crop);let p=await d.data.data();c=Array.from(p)}Nb[n]=c,hT=s,fT=ie(),l(c)})}var ir,ti=0,cye=2.3,Rb=ar.leftEyeLower0,_b=ar.rightEyeLower0,Dc={leftBounds:[Rb[0],Rb[Rb.length-1]],rightBounds:[_b[0],_b[_b.length-1]]},$c={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function yT(e){var t,n;return pe.initial&&(ir=null),ir?e.debug&&J("cached model:",ir.modelUrl):(ir=await Be(We(e.modelBasePath,((t=e.face.iris)==null?void 0:t.modelPath)||"")),!ir||!ir.modelUrl?J("load model failed:",(n=e.face.iris)==null?void 0:n.modelPath):e.debug&&J("load model:",ir.modelUrl)),ti=ir.inputs[0].shape?ir.inputs[0].shape[2]:0,ti===-1&&(ti=64),ir}function w0(e,t,n,s){for(let r=0;r<ib.length;r++){let{key:a,indices:o}=ib[r],i=ar[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let c=o[l];e[i[l]]=[t[c][0],t[c][1],(t[c][2]+e[i[l]][2])/2]}}}var dye=e=>{let t=e[Dc.leftBounds[0]][2],n=e[Dc.rightBounds[0]][2];return t-n},AT=(e,t,n,s,r,a=!1)=>{let o=g0(m0(B8([e[n],e[s]]),cye)),i=Ec(o),l=Se.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[ti,ti]);if(a&&pe.kernels.includes("flipleftright")){let c=Se.flipLeftRight(l);ne(l),l=c}return{box:o,boxSize:i,crop:l}},xT=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<$c.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/ti:o/ti)*n[0]+t.startPoint[0],i/ti*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice($c.index)}},bT=(e,t,n)=>{let s=e[ar[`${n}EyeUpper0`][$c.upperCenter]][2],r=e[ar[`${n}EyeLower0`][$c.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function vT(e,t,n,s){if(!ir)return n.debug&&J("face mesh iris detection requested, but model is not loaded"),e;let{box:r,boxSize:a,crop:o}=AT(e,t,Dc.leftBounds[0],Dc.leftBounds[1],s,!0),{box:i,boxSize:l,crop:c}=AT(e,t,Dc.rightBounds[0],Dc.rightBounds[1],s,!0),u=St([o,c]);ne(o),ne(c);let d=ir.execute(u);ne(u);let p=await d.data();ne(d);let h=p.slice(0,$c.numCoordinates*3),{rawCoords:f,iris:m}=xT(h,r,a,!0),g=p.slice($c.numCoordinates*3),{rawCoords:y,iris:x}=xT(g,i,l),A=dye(e);Math.abs(A)<30?(w0(e,f,"left",null),w0(e,y,"right",null)):A<1?w0(e,f,"left",["EyeUpper0","EyeLower0"]):w0(e,y,"right",["EyeUpper0","EyeLower0"]);let b=bT(e,m,"left"),w=bT(e,x,"right");return e.concat(b).concat(w)}var Ur={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},lr=null,Pc=0;async function wT(e,t){var i,l,c,u,d,p,h,f;let n=(((i=t.face.detector)==null?void 0:i.skipTime)||0)>ie()-Ur.timestamp,s=Ur.skipped<(((l=t.face.detector)==null?void 0:l.skipFrames)||0);!t.skipAllowed||!n||!s||Ur.boxes.length===0?(Ur.boxes=await Y8(e,t),Ur.timestamp=ie(),Ur.skipped=0):Ur.skipped++;let r=[],a=[],o=0;for(let m=0;m<Ur.boxes.length;m++){let g=Ur.boxes[m],y=0,x,A={id:o++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([y,x,A.tensor]=j8((c=t.face.detector)==null?void 0:c.rotation,g,e,((u=t.face.mesh)==null?void 0:u.enabled)?Pc:y0()),(d=t==null?void 0:t.filter)==null?void 0:d.equalization){let b=await u0(A.tensor);ne(A.tensor),A.tensor=b}if(A.boxScore=Math.round(100*g.confidence)/100,(p=t.face.mesh)==null?void 0:p.enabled)if(!lr)t.debug&&J("face mesh detection requested, but model is not loaded");else{let[b,w,C]=lr.execute(A.tensor),S=await w.data();A.faceScore=Math.round(100*S[0])/100;let E=H(C,[-1,3]),R=await E.array();if(ne([C,E,w,b]),A.faceScore<(((h=t.face.detector)==null?void 0:h.minConfidence)||1))g.confidence=A.faceScore;else{((f=t.face.iris)==null?void 0:f.enabled)&&(R=await vT(R,A.tensor,t,Pc)),A.mesh=H8(R,g,y,x,Pc),A.meshRaw=A.mesh.map(_=>[_[0]/(e.shape[2]||0),_[1]/(e.shape[1]||0),(_[2]||0)/Pc]);for(let _ of Object.keys(ar))A.annotations[_]=ar[_].map(P=>A.mesh[P]);A.score=A.faceScore;let F={...q8(A.mesh,g),confidence:g.confidence,landmarks:g.landmarks};A.box=lb(F,e),A.boxRaw=ub(F,e),a.push(F)}}else{A.box=lb(g,e),A.boxRaw=ub(g,e),A.score=A.boxScore,A.mesh=g.landmarks.map(b=>[(g.startPoint[0]+g.endPoint[0])/2+(g.endPoint[0]+g.startPoint[0])*b[0]/y0(),(g.startPoint[1]+g.endPoint[1])/2+(g.endPoint[1]+g.startPoint[1])*b[1]/y0()]),A.meshRaw=A.mesh.map(b=>[b[0]/(e.shape[2]||0),b[1]/(e.shape[1]||0),(b[2]||0)/Pc]);for(let b of Object.keys(zp))A.annotations[b]=[A.mesh[zp[b]]]}r.push(A)}return Ur.boxes=a,r}async function kT(e){var t,n;return pe.initial&&(lr=null),lr?e.debug&&J("cached model:",lr.modelUrl):(lr=await Be(We(e.modelBasePath,((t=e.face.mesh)==null?void 0:t.modelPath)||"")),!lr||!lr.modelUrl?J("load model failed:",(n=e.face.mesh)==null?void 0:n.modelPath):e.debug&&J("load model:",lr.modelUrl)),Pc=lr.inputs[0].shape?lr.inputs[0].shape[2]:0,lr}var ST=zl,IT=Lp;var Cs,k0=[],CT=0,TT=0,Db=Number.MAX_SAFE_INTEGER;async function NT(e){var n,s;let t=We(e.modelBasePath,((n=e.face.description)==null?void 0:n.modelPath)||"");return pe.initial&&(Cs=null),Cs?e.debug&&J("cached model:",t):(Cs=await Be(t),Cs?e.debug&&J("load model:",t):J("load model failed:",((s=e.face.description)==null?void 0:s.modelPath)||"")),Cs}function $b(e){let t=e.image||e.tensor||e;if(!(Cs==null?void 0:Cs.inputs[0].shape))return t;let n=Se.resizeBilinear(t,[Cs.inputs[0].shape[2],Cs.inputs[0].shape[1]],!1),s=L(n,Xe.tf255);return ne(n),s}async function Pb(e,t,n,s){var o,i,l,c;if(!Cs)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let r=Db<(((o=t.face.description)==null?void 0:o.skipFrames)||0),a=(((i=t.face.description)==null?void 0:i.skipTime)||0)>ie()-CT;return t.skipAllowed&&r&&a&&TT===s&&((l=k0[n])==null?void 0:l.age)&&((c=k0[n])==null?void 0:c.age)>0?(Db++,k0[n]):(Db=0,new Promise(async u=>{var p,h;let d={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((p=t.face.description)==null?void 0:p.enabled){let f=$b(e),m=Cs==null?void 0:Cs.execute(f);CT=ie(),ne(f);let y=await(await m.find(R=>R.shape[1]===1)).data(),x=Math.trunc(200*Math.abs(y[0]-.5))/100;x>(((h=t.face.description)==null?void 0:h.minConfidence)||0)&&(d.gender=y[0]<=.5?"female":"male",d.genderScore=Math.min(.99,x));let A=Fs(m.find(R=>R.shape[1]===100),1),b=(await A.data())[0];ne(A);let C=await m.find(R=>R.shape[1]===100).data();d.age=Math.round(C[b-1]>C[b+1]?10*b-100*C[b-1]:10*b+100*C[b+1])/10;let S=m.find(R=>R.shape[1]===1024),E=S?await S.data():[];d.descriptor=Array.from(E),m.forEach(R=>ne(R))}k0[n]=d,TT=s,u(d)}))}function S0(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Vp(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function ET(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return Se.cropAndResize(t,a,[0],n)}function RT(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function I0(e,t=1.5){let n=Vp(e),s=S0(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function C0(e){let t=Vp(e),n=S0(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function pye(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function _T(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return pye(n)}var DT=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function ni(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function hye(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function $T(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(ni(e[r],hye(t,a)))}return n}function Fb(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=DT(t[0],t[1]),o=$T(a,r),i=DT(-t[0],-t[1]);return $T(o,i)}function PT(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-ni(t[0],n),-ni(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function Ob(e,t){return[ni(e,t[0]),ni(e,t[1])]}var FT=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var Mb=class{constructor(t){fe(this,"model");fe(this,"anchors");fe(this,"anchorsTensor");fe(this,"inputSize");fe(this,"inputSizeTensor");fe(this,"doubleInputSizeTensor");this.model=t,this.anchors=FT.map(n=>[n.x,n.y]),this.anchorsTensor=hr(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Ct([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Ct([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){let n={};n.boxOffsets=Fe(t,[0,0],[-1,2]),n.boxSizes=Fe(t,[0,2],[-1,2]),n.div=de(n.boxOffsets,this.inputSizeTensor),n.boxCenterPoints=ue(n.div,this.anchorsTensor),n.halfBoxSizes=de(n.boxSizes,this.doubleInputSizeTensor),n.sub=he(n.boxCenterPoints,n.halfBoxSizes),n.startPoints=L(n.sub,this.inputSizeTensor),n.add=ue(n.boxCenterPoints,n.halfBoxSizes),n.endPoints=L(n.add,this.inputSizeTensor);let s=Vu([n.startPoints,n.endPoints],1);return Object.keys(n).forEach(r=>ne(n[r])),s}normalizeLandmarks(t,n){let s={};s.reshape=H(t,[-1,7,2]),s.div=de(s.reshape,this.inputSizeTensor),s.landmarks=ue(s.div,this.anchors[n]);let r=L(s.landmarks,this.inputSizeTensor);return Object.keys(s).forEach(a=>ne(s[a])),r}async predict(t,n){let s={};s.resize=Se.resizeBilinear(t,[this.inputSize,this.inputSize]),s.div=de(s.resize,Xe.tf127),s.image=he(s.div,Xe.tf1),s.batched=this.model.execute(s.image),s.predictions=Ke(s.batched),s.slice=Fe(s.predictions,[0,0],[-1,1]),s.sigmoid=_n(s.slice),s.scores=Ke(s.sigmoid);let r=await s.scores.data();s.boxes=Fe(s.predictions,[0,1],[-1,4]),s.norm=this.normalizeBoxes(s.boxes),s.nms=await Se.nonMaxSuppressionAsync(s.norm,s.scores,3*n.hand.maxDetected,n.hand.iouThreshold,n.hand.minConfidence);let a=await s.nms.array(),o=[];for(let i of a){let l={};l.box=Fe(s.norm,[i,0],[1,-1]),l.slice=Fe(s.predictions,[i,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,i),l.palmLandmarks=H(l.norm,[-1,2]);let c=await l.box.data(),u=c.slice(0,2),d=c.slice(2,4),p=await l.palmLandmarks.array(),h={startPoint:u,endPoint:d,palmLandmarks:p,confidence:r[i]},f=RT(h,[t.shape[2]/this.inputSize,t.shape[1]/this.inputSize]);o.push(f),Object.keys(l).forEach(m=>ne(l[m]))}return Object.keys(s).forEach(i=>ne(s[i])),o}};var fye=5,OT=1.65,MT=[0,5,9,13,17,1,2],mye=0,gye=2,zT=0,zb=class{constructor(t,n){fe(this,"handDetector");fe(this,"handPoseModel");fe(this,"inputSize");fe(this,"storedBoxes");fe(this,"skipped");fe(this,"detectedHands");this.handDetector=t,this.handPoseModel=n,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(t){let n=t.map(o=>o[0]),s=t.map(o=>o[1]),r=[Math.min(...n),Math.min(...s)],a=[Math.max(...n),Math.max(...s)];return{startPoint:r,endPoint:a}}getBoxForPalmLandmarks(t,n){let s=t.map(a=>Ob([...a,1],n)),r=this.calculateLandmarksBoundingBox(s);return I0(C0(r),fye)}getBoxForHandLandmarks(t){let n=this.calculateLandmarksBoundingBox(t),s=I0(C0(n),OT);s.palmLandmarks=[];for(let r=0;r<MT.length;r++)s.palmLandmarks.push(t[MT[r]].slice(0,2));return s}transformRawCoords(t,n,s,r){let a=S0(n),o=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=t.map(h=>[o[0]*(h[0]-this.inputSize/2),o[1]*(h[1]-this.inputSize/2),o[2]*h[2]]),l=Fb(s,[0,0]),c=i.map(h=>[...Ob(h,l),h[2]]),u=PT(r),d=[...Vp(n),1],p=[ni(d,u[0]),ni(d,u[1])];return c.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2])])}async estimateHands(t,n){let s=!1,r,a=(n.hand.skipTime||0)>ie()-zT,o=this.skipped<(n.hand.skipFrames||0);n.skipAllowed&&a&&o&&(r=await this.handDetector.predict(t,n),this.skipped=0),n.skipAllowed&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==n.hand.maxDetected||!n.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(s=!0));let i=[];for(let l=0;l<this.storedBoxes.length;l++){let c=this.storedBoxes[l];if(!!c)if(n.hand.landmarks){let u=n.hand.rotation?_T(c.palmLandmarks[mye],c.palmLandmarks[gye]):0,d=Vp(c),p=[d[0]/t.shape[2],d[1]/t.shape[1]],h=n.hand.rotation&&pe.kernels.includes("rotatewithoffset")?Se.rotateWithOffset(t,u,0,p):t.clone(),f=Fb(-u,d),m=s?this.getBoxForPalmLandmarks(c.palmLandmarks,f):c,g=ET(m,h,[this.inputSize,this.inputSize]),y=de(g,Xe.tf255);ne(g),ne(h);let[x,A]=this.handPoseModel.execute(y);zT=ie(),ne(y);let b=(await x.data())[0];if(ne(x),b>=n.hand.minConfidence/4){let w=H(A,[-1,3]),C=await w.array();ne(A),ne(w);let S=this.transformRawCoords(C,m,u,f),E=this.getBoxForHandLandmarks(S);this.storedBoxes[l]={...E,confidence:b};let R={landmarks:S,confidence:b,boxConfidence:c.confidence,fingerConfidence:b,box:{topLeft:E.startPoint,bottomRight:E.endPoint}};i.push(R)}else this.storedBoxes[l]=null;ne(A)}else{let u=I0(C0(c),OT),d={confidence:c.confidence,boxConfidence:c.confidence,fingerConfidence:0,box:{topLeft:u.startPoint,bottomRight:u.endPoint},landmarks:[]};i.push(d)}}return this.storedBoxes=this.storedBoxes.filter(l=>l!==null),this.detectedHands=i.length,i.length>n.hand.maxDetected&&(i.length=n.hand.maxDetected),i}};var Jn={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>Jn.nameMapping[e],getPoints:e=>Jn.pointsMapping[e]},si={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>si.nameMapping[e]},Bt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Bt.nameMapping[e]},Wl=class{constructor(t){fe(this,"name");fe(this,"curls");fe(this,"directions");fe(this,"weights");fe(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(t,n,s){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([n,s])}direction(t,n,s){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([n,s])}weight(t,n){this.weights[t]=n;let s=this.weights.reduce((r,a)=>r+a,0);this.weightsRelative=this.weights.map(r=>r*5/s)}matchAgainst(t,n){let s=0;for(let r in t){let a=t[r],o=this.curls[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}for(let r in n){let a=n[r],o=this.directions[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}return s/10}};var{thumb:kr,index:ha,middle:fa,ring:Vl,pinky:Ul}=Jn,{none:Sr,half:yye,full:Ir}=si,{verticalUp:Fc,verticalDown:dxe,horizontalLeft:Lb,horizontalRight:Aye,diagonalUpRight:xye,diagonalUpLeft:Oc,diagonalDownRight:pxe,diagonalDownLeft:hxe}=Bt,ri=new Wl("thumbs up");ri.curl(kr,Sr,1);ri.direction(kr,Fc,1);ri.direction(kr,Oc,.25);ri.direction(kr,xye,.25);for(let e of[Jn.index,Jn.middle,Jn.ring,Jn.pinky])ri.curl(e,Ir,1),ri.direction(e,Lb,1),ri.direction(e,Aye,1);var en=new Wl("victory");en.curl(kr,yye,.5);en.curl(kr,Sr,.5);en.direction(kr,Fc,1);en.direction(kr,Oc,1);en.curl(ha,Sr,1);en.direction(ha,Fc,.75);en.direction(ha,Oc,1);en.curl(fa,Sr,1);en.direction(fa,Fc,1);en.direction(fa,Oc,.75);en.curl(Vl,Ir,1);en.direction(Vl,Fc,.2);en.direction(Vl,Oc,1);en.direction(Vl,Lb,.2);en.curl(Ul,Ir,1);en.direction(Ul,Fc,.2);en.direction(Ul,Oc,1);en.direction(Ul,Lb,.2);en.weight(ha,2);en.weight(fa,2);var ai=new Wl("point");ai.curl(kr,Ir,1);ai.curl(ha,Sr,.5);ai.curl(fa,Ir,.5);ai.curl(Vl,Ir,.5);ai.curl(Ul,Ir,.5);ai.weight(ha,2);ai.weight(fa,2);var oi=new Wl("middle finger");oi.curl(kr,Sr,1);oi.curl(ha,Ir,.5);oi.curl(fa,Ir,.5);oi.curl(Vl,Ir,.5);oi.curl(Ul,Ir,.5);oi.weight(ha,2);oi.weight(fa,2);var Mc=new Wl("open palm");Mc.curl(kr,Sr,.75);Mc.curl(ha,Sr,.75);Mc.curl(fa,Sr,.75);Mc.curl(Vl,Sr,.75);Mc.curl(Ul,Sr,.75);var LT=[ri,en,ai,oi,Mc];var bye=.7,Gl={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function BT(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function WT(e,t){if(!e||!t)return[0,0];let n=BT(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=BT(e[1],e[2],t[1],t[2]);return[n,s]}function VT(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function vye(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],c=e[2]-t[2],u=e[2]-n[2],d=t[2]-n[2],p=Math.sqrt(s*s+o*o+c*c),h=Math.sqrt(r*r+i*i+u*u),f=Math.sqrt(a*a+l*l+d*d),m=(f*f+p*p-h*h)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>Gl.NO_CURL_START_LIMIT?y=si.none:g>Gl.HALF_CURL_START_LIMIT?y=si.half:y=si.full,y}function UT(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=Bt.horizontalLeft:r=Bt.horizontalRight:s===Math.abs(t)?t>0?r=Bt.horizontalLeft:r=Bt.horizontalRight:n>0?r=Bt.horizontalLeft:r=Bt.horizontalRight,r}function GT(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=Bt.verticalDown:r=Bt.verticalUp:s===Math.abs(t)?t<0?r=Bt.verticalDown:r=Bt.verticalUp:n<0?r=Bt.verticalDown:r=Bt.verticalUp,r}function wye(e,t,n,s,r,a,o,i){let l,c=GT(e,t,n,s),u=UT(r,a,o,i);return c===Bt.verticalUp?u===Bt.horizontalLeft?l=Bt.diagonalUpLeft:l=Bt.diagonalUpRight:u===Bt.horizontalLeft?l=Bt.diagonalDownLeft:l=Bt.diagonalDownRight,l}function kye(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],c=t[1]-n[1],u=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),d=Math.max(Math.abs(i),Math.abs(l),Math.abs(c)),p=0,h=0,f=0,m=d/(u+1e-5);m>1.5?p+=Gl.DISTANCE_VOTE_POWER:m>.66?h+=Gl.DISTANCE_VOTE_POWER:f+=Gl.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),y=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+c*c),A=Math.max(g,y,x),b=e[0],w=e[1],C=n[0],S=n[1];A===g?(C=n[0],S=n[1]):A===x&&(b=t[0],w=t[1]);let F=WT([b,w],[C,S]),_=VT(F,Gl.TOTAL_ANGLE_VOTE_POWER);p+=_[0],h+=_[1],f+=_[2];for(let T of s){let O=VT(T,Gl.SINGLE_ANGLE_VOTE_POWER);p+=O[0],h+=O[1],f+=O[2]}let P;return p===Math.max(p,h,f)?P=GT(l,i,c,d):f===Math.max(h,f)?P=UT(a,r,o,u):P=wye(l,i,c,d,a,r,o,u),P}function HT(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of Jn.all){let o=Jn.getPoints(a),i=[],l=[];for(let c of o){let u=e[c[0]],d=e[c[1]],p=WT(u,d),h=p[0],f=p[1];i.push(h),l.push(f)}t.push(i),n.push(l)}for(let a of Jn.all){let o=a===Jn.thumb?1:0,i=Jn.getPoints(a),l=e[i[o][0]],c=e[i[o+1][1]],u=e[i[3][1]],d=vye(l,c,u),p=kye(l,c,u,t[a].slice(o));s[a]=d,r[a]=p}return{curls:s,directions:r}}function T0(e){if(!e||e.length===0)return null;let t=HT(e),n={};for(let s of Jn.all)n[Jn.getName(s)]={curl:si.getName(t.curls[s]),direction:Bt.getName(t.directions[s])};return n}function jT(e){let t=[];if(!e||e.length===0)return t;let n=HT(e);for(let s of LT){let r=s.matchAgainst(n.curls,n.directions);r>=bye&&t.push({name:s.name,confidence:r})}return t}var qT={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},ma,ga,XT;async function Bb(e,t){let n=await XT.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let u of Object.keys(qT))a[u]=qT[u].map(d=>n[r].landmarks[d]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let u of o)u[0]<i[0]&&(i[0]=u[0]),u[1]<i[1]&&(i[1]=u[1]),u[0]>i[2]&&(i[2]=u[0]),u[1]>i[3]&&(i[3]=u[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let c=T0(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:c})}return s}async function Wb(e){var n,s,r,a,o,i;pe.initial&&(ma=null,ga=null),!ma||!ga?([ma,ga]=await Promise.all([e.hand.enabled?Be(We(e.modelBasePath,((n=e.hand.detector)==null?void 0:n.modelPath)||""),{fromTFHub:(((s=e.hand.detector)==null?void 0:s.modelPath)||"").includes("tfhub.dev")}):null,e.hand.landmarks?Be(We(e.modelBasePath,((r=e.hand.skeleton)==null?void 0:r.modelPath)||""),{fromTFHub:(((a=e.hand.skeleton)==null?void 0:a.modelPath)||"").includes("tfhub.dev")}):null]),e.hand.enabled&&(!ma||!ma.modelUrl?J("load model failed:",((o=e.hand.detector)==null?void 0:o.modelPath)||""):e.debug&&J("load model:",ma.modelUrl),!ga||!ga.modelUrl?J("load model failed:",((i=e.hand.skeleton)==null?void 0:i.modelPath)||""):e.debug&&J("load model:",ga.modelUrl))):(e.debug&&J("cached model:",ma.modelUrl),e.debug&&J("cached model:",ga.modelUrl));let t=new Mb(ma);return XT=new zb(t,ga),[ma,ga]}var Et=[null,null],Sye=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ii=[[0,0],[0,0]],Iye=["hand","fist","pinch","point","face","tip","pinchtip"],KT=4,ZT=1.6,Cye=512,Tye=1.4,N0=Number.MAX_SAFE_INTEGER,Vb=0,ya=[0,0],Xt={boxes:[],hands:[]},YT={thumb:[0,1,2,3,4],index:[0,5,6,7,8],middle:[0,9,10,11,12],ring:[0,13,14,15,16],pinky:[0,17,18,19,20],palm:[0]};async function JT(e){var t,n;if(pe.initial&&(Et[0]=null),Et[0])e.debug&&J("cached model:",Et[0].modelUrl);else{E0(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Et[0]=await Be(We(e.modelBasePath,((t=e.hand.detector)==null?void 0:t.modelPath)||""));let s=Object.values(Et[0].modelSignature.inputs);ii[0][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,ii[0][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Et[0]||!Et[0].modelUrl?J("load model failed:",(n=e.hand.detector)==null?void 0:n.modelPath):e.debug&&J("load model:",Et[0].modelUrl)}return Et[0]}async function QT(e){var t,n;if(pe.initial&&(Et[1]=null),Et[1])e.debug&&J("cached model:",Et[1].modelUrl);else{Et[1]=await Be(We(e.modelBasePath,((t=e.hand.skeleton)==null?void 0:t.modelPath)||""));let s=Object.values(Et[1].modelSignature.inputs);ii[1][0]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[1].size):0,ii[1][1]=Array.isArray(s)?parseInt(s[0].tensorShape.dim[2].size):0,!Et[1]||!Et[1].modelUrl?J("load model failed:",(n=e.hand.skeleton)==null?void 0:n.modelPath):e.debug&&J("load model:",Et[1].modelUrl)}return Et[1]}async function Nye(e,t){let n=[];if(!e||!Et[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,Cye),o=Math.round(a*r/8)*8;s.resize=Se.resizeBilinear(e,[a,o]),s.cast=me(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await Et[0].executeAsync(s.cast,Sye),s.boxes=Ke(s.rawBoxes,[0,2]),s.scores=Ke(s.rawScores,[0]);let i=os(s.scores,1);ne(i[KT]),i.splice(KT,1),s.filtered=an(i,1),ne(i),s.max=An(s.filtered,1),s.argmax=Fs(s.filtered,1);let l=0;s.nms=await Se.nonMaxSuppressionAsync(s.boxes,s.max,t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);let c=await s.nms.data(),u=await s.max.data(),d=await s.argmax.data();for(let p of Array.from(c)){let h=Fe(s.boxes,p,1),f=await h.data();ne(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=x0(m,Tye),y=mb(g),x=[Math.trunc(m[0]*ya[0]),Math.trunc(m[1]*ya[1]),Math.trunc(m[2]*ya[0]),Math.trunc(m[3]*ya[1])],A=u[p],b=Iye[d[p]],w={id:l++,score:A,box:x,boxRaw:g,boxCrop:y,label:b};n.push(w)}return Object.keys(s).forEach(p=>ne(s[p])),n.sort((p,h)=>h.score-p.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function Ub(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Et[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={};r.crop=Se.cropAndResize(e,[t.boxCrop],[0],[ii[1][0],ii[1][1]],"bilinear"),r.div=de(r.crop,Xe.tf255),[r.score,r.keypoints]=Et[1].execute(r.div,["Identity_1","Identity"]);let a=(await r.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(a))))/100;if(o>=(n.hand.minConfidence||0)){s.fingerScore=o,r.reshaped=H(r.keypoints,[-1,3]);let c=(await r.reshaped.array()).map(u=>[u[0]/ii[1][1],u[1]/ii[1][0],u[2]||0]).map(u=>[u[0]*t.boxRaw[2],u[1]*t.boxRaw[3],u[2]||0]);s.keypoints=c.map(u=>[ya[0]*(u[0]+t.boxRaw[0]),ya[1]*(u[1]+t.boxRaw[1]),u[2]||0]),s.landmarks=T0(s.keypoints);for(let u of Object.keys(YT))s.annotations[u]=YT[u].map(d=>s.landmarks&&s.keypoints[d]?s.keypoints[d]:null)}Object.keys(r).forEach(i=>ne(r[i]))}return s}async function Gb(e,t){var r,a;if(!Et[0]||!Et[1]||!((r=Et[0])==null?void 0:r.inputs[0].shape)||!((a=Et[1])==null?void 0:a.inputs[0].shape))return[];ya=[e.shape[2]||0,e.shape[1]||0],N0++;let n=(t.hand.skipTime||0)>ie()-Vb,s=N0<(t.hand.skipFrames||0);return t.skipAllowed&&n&&s?Xt.hands:new Promise(async o=>{let i=3*(t.hand.skipTime||0)>ie()-Vb,l=N0<3*(t.hand.skipFrames||0);t.skipAllowed&&Xt.hands.length===t.hand.maxDetected?Xt.hands=await Promise.all(Xt.boxes.map(u=>Ub(e,u,t))):t.skipAllowed&&i&&l&&Xt.hands.length>0?Xt.hands=await Promise.all(Xt.boxes.map(u=>Ub(e,u,t))):(Xt.boxes=await Nye(e,t),Vb=ie(),Xt.hands=await Promise.all(Xt.boxes.map(u=>Ub(e,u,t))),N0=0);let c=[...Xt.boxes];if(Xt.boxes.length=0,t.cacheSensitivity>0)for(let u=0;u<Xt.hands.length;u++){let d=eT(Xt.hands[u].keypoints,ya);if(d.box[2]/(e.shape[2]||1)>.05&&d.box[3]/(e.shape[1]||1)>.05&&Xt.hands[u].fingerScore&&Xt.hands[u].fingerScore>(t.hand.minConfidence||0)){let p=x0(d.box,ZT),h=x0(d.boxRaw,ZT),f=mb(h);Xt.boxes.push({...c[u],box:p,boxRaw:h,boxCrop:f})}}for(let u=0;u<Xt.hands.length;u++){let d=pa(Xt.hands[u].keypoints,ya);Xt.hands[u].box=d.box,Xt.hands[u].boxRaw=d.boxRaw}o(Xt.hands)})}var fn,R0=[],Hb=Number.MAX_SAFE_INTEGER,eN=0,tN=0;async function nN(e){var t,n;return pe.initial&&(fn=null),fn?e.debug&&J("cached model:",fn.modelUrl):(fn=await Be(We(e.modelBasePath,((t=e.face.liveness)==null?void 0:t.modelPath)||"")),!fn||!fn.modelUrl?J("load model failed:",(n=e.face.liveness)==null?void 0:n.modelPath):e.debug&&J("load model:",fn.modelUrl)),fn}async function jb(e,t,n,s){var o,i;if(!fn)return 0;let r=(((o=t.face.liveness)==null?void 0:o.skipTime)||0)>ie()-tN,a=Hb<(((i=t.face.liveness)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&eN===s&&R0[n]?(Hb++,R0[n]):(Hb=0,new Promise(async l=>{let c=Se.resizeBilinear(e,[(fn==null?void 0:fn.inputs[0].shape)?fn.inputs[0].shape[2]:0,(fn==null?void 0:fn.inputs[0].shape)?fn.inputs[0].shape[1]:0],!1),u=fn==null?void 0:fn.execute(c),d=(await u.data())[0];R0[n]=Math.round(100*d)/100,eN=s,tN=ie(),ne([c,u]),l(R0[n])}))}var Zb={};td(Zb,{connected:()=>D0,horizontal:()=>qb,kpt:()=>_0,relative:()=>Kb,vertical:()=>Xb});var _0=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],qb=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],Xb=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],Kb=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],D0={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var sN=.005,Ts={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function Yb(e){for(let t of qb){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of Xb){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of Kb){let s=e.keypoints.findIndex(c=>c&&c.part===t[0]),r=e.keypoints.findIndex(c=>c&&c.part===t[1]),a=e.keypoints.findIndex(c=>c&&c.part===n[0]),o=e.keypoints.findIndex(c=>c&&c.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let c=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=c}}}function rN(e){for(let t=0;t<e.length;t++)if(e[t]&&Ts.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-Ts.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Ts.keypoints[t].positionRaw[1])];n[0]<sN&&n[1]<sN?e[t]=Ts.keypoints[t]:Ts.keypoints[t]=e[t]}else Ts.keypoints[t]=e[t];return e}function aN(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Ts.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=Js(e,Ts.padding),n.resize=Se.resizeBilinear(n.pad,[t,t]);let s=me(n.resize,"int32");return Object.keys(n).forEach(r=>ne(n[r])),s}function oN(e,t){e.keypoints=e.keypoints.filter(s=>s&&s.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+Ts.padding[2][0]+Ts.padding[2][1])/t[0]-Ts.padding[2][0],s.position[1]*(t[1]+Ts.padding[1][0]+Ts.padding[1][1])/t[1]-Ts.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=pa(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Fn,iN=0,Jb=Number.MAX_SAFE_INTEGER,Hl={boxes:[],bodies:[],last:0};async function lN(e){return pe.initial&&(Fn=null),Fn?e.debug&&J("cached model:",Fn.modelUrl):(E0(["size"],e),Fn=await Be(We(e.modelBasePath,e.body.modelPath||"")),!Fn||!Fn.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",Fn.modelUrl)),iN=Fn.inputs[0].shape?Fn.inputs[0].shape[2]:0,Fn}async function Eye(e,t,n){let s=e[0][0],r=[],a=0;for(let u=0;u<s.length;u++)if(a=s[u][2],a>t.body.minConfidence){let d=[s[u][1],s[u][0]];r.push({score:Math.round(100*a)/100,part:_0[u],positionRaw:d,position:[Math.round((n.shape[2]||0)*d[0]),Math.round((n.shape[1]||0)*d[1])]})}a=r.reduce((u,d)=>d.score>u?d.score:u,0);let o=[],i=pa(r.map(u=>u.position),[n.shape[2],n.shape[1]]),l={};for(let[u,d]of Object.entries(D0)){let p=[];for(let h=0;h<d.length-1;h++){let f=r.find(g=>g.part===d[h]),m=r.find(g=>g.part===d[h+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&p.push([f.position,m.position])}l[u]=p}let c={id:0,score:a,box:i.box,boxRaw:i.boxRaw,keypoints:r,annotations:l};return Yb(c),o.push(c),o}async function Rye(e,t,n){let s=[];for(let r=0;r<e[0].length;r++){let a=e[0][r],o=Math.round(100*a[51+4])/100;if(o>t.body.minConfidence){let i=[];for(let d=0;d<17;d++){let p=a[3*d+2];if(p>t.body.minConfidence){let h=[a[3*d+1],a[3*d+0]];i.push({part:_0[d],score:Math.round(100*p)/100,positionRaw:h,position:[Math.round((n.shape[2]||0)*h[0]),Math.round((n.shape[1]||0)*h[1])]})}}let l=pa(i.map(d=>d.position),[n.shape[2],n.shape[1]]),c={};for(let[d,p]of Object.entries(D0)){let h=[];for(let f=0;f<p.length-1;f++){let m=i.find(y=>y.part===p[f]),g=i.find(y=>y.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}c[d]=h}let u={id:r,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:[...i],annotations:c};Yb(u),s.push(u)}}return s.sort((r,a)=>a.score-r.score),s.length>t.body.maxDetected&&(s.length=t.body.maxDetected),s}async function Qb(e,t){if(!Fn||!(Fn==null?void 0:Fn.inputs[0].shape))return[];t.skipAllowed||(Hl.boxes.length=0),Jb++;let n=(t.body.skipTime||0)>ie()-Hl.last,s=Jb<(t.body.skipFrames||0);return t.skipAllowed&&n&&s?Hl.bodies:new Promise(async r=>{let a={};Jb=0,a.input=aN(e,iN),a.res=Fn==null?void 0:Fn.execute(a.input),Hl.last=ie();let o=await a.res.array();Hl.bodies=a.res.shape[2]===17?await Eye(o,t,e):await Rye(o,t,e);for(let i of Hl.bodies)oN(i,[e.shape[2]||1,e.shape[1]||1]),rN(i.keypoints);Object.keys(a).forEach(i=>ne(a[i])),r(Hl.bodies)})}var Aa,$0=[],uN=0,e5=Number.MAX_SAFE_INTEGER,P0=0,F0=2.5;async function cN(e){if(!Aa||pe.initial){Aa=await Be(We(e.modelBasePath,e.object.modelPath||""));let t=Object.values(Aa.modelSignature.inputs);P0=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!Aa||!Aa.modelUrl?J("load model failed:",e.object.modelPath):e.debug&&J("load model:",Aa.modelUrl)}else e.debug&&J("cached model:",Aa.modelUrl);return Aa}async function _ye(e,t,n){let s=0,r=[];for(let l of[1,2,4])X(async()=>{let c=l*13,u=Ke(e.find(m=>m.shape[1]===c**2&&(m.shape[2]||0)===_c.length)),d=Ke(e.find(m=>m.shape[1]===c**2&&(m.shape[2]||0)<_c.length)),h=await d.reshape([-1,4,d.shape[1]/4]).argMax(2).array(),f=await u.array();for(let m=0;m<u.shape[0];m++)for(let g=0;g<u.shape[1];g++){let y=f[m][g];if(y>(n.object.minConfidence||0)&&g!==61){let x=(.5+Math.trunc(m%c))/c,A=(.5+Math.trunc(m/c))/c,b=h[m].map(P=>P*(c/l/P0)),[w,C]=[x-F0/l*b[0],A-F0/l*b[1]],[S,E]=[x+F0/l*b[2]-w,A+F0/l*b[3]-C],R=[w,C,S,E];R=R.map(P=>Math.max(0,Math.min(P,1)));let F=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],_={id:s++,score:Math.round(100*y)/100,class:g+1,label:_c[g].label,box:F.map(P=>Math.trunc(P)),boxRaw:R};r.push(_)}}});e.forEach(l=>ne(l));let a=r.map(l=>[l.boxRaw[1],l.boxRaw[0],l.boxRaw[3],l.boxRaw[2]]),o=r.map(l=>l.score),i=[];if(a&&a.length>0){let l=await Se.nonMaxSuppressionAsync(a,o,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);i=await l.data(),ne(l)}return r=r.filter((l,c)=>i.includes(c)).sort((l,c)=>c.score-l.score),r}async function t5(e,t){let n=(t.object.skipTime||0)>ie()-uN,s=e5<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&$0.length>0?(e5++,$0):(e5=0,!pe.kernels.includes("mod")||!pe.kernels.includes("sparsetodense")?$0:new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Se.resizeBilinear(e,[P0,P0],!1),i=de(o,Xe.tf255),l=i.transpose([0,3,1,2]);ne(i),ne(o);let c;t.object.enabled&&(c=Aa.execute(l)),uN=ie(),ne(l);let u=await _ye(c,a,t);$0=u,r(u)}))}var Up=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Dye=Up.length,Gp=Up.reduce((e,t,n)=>(e[t]=n,e),{}),$ye=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],tbe=$ye.map(([e,t])=>[Gp[e],Gp[t]]),dN=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function pN(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function hN(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(c,u)=>({id:u,score:c.score,boxRaw:[c.box[0]/r,c.box[1]/s,c.box[2]/r,c.box[3]/s],box:[Math.trunc(c.box[0]*o),Math.trunc(c.box[1]*a),Math.trunc(c.box[2]*o),Math.trunc(c.box[3]*a)],keypoints:c.keypoints.map(({score:d,part:p,position:h})=>({score:d,part:p,position:[Math.trunc(h.x*o),Math.trunc(h.y*a)],positionRaw:[h.x/s,h.y/s]})),annotations:{}});return e.map((c,u)=>i(c,u))}var n5=class{constructor(t,n){fe(this,"priorityQueue");fe(this,"numberOfElements");fe(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=n}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let n=2*t;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(t,n))break;this.exchange(t,n),t=n}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,n){return this.getValueAt(t)<this.getValueAt(n)}exchange(t,n){let s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[n],this.priorityQueue[n]=s}};function s5(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+Dye)}}function r5(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=s5(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function a5(e,t,n){return e<t?t:e>n?n:e}function fN(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function o5(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Ns,Pye=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],O0=1,zc=16,Fye=50**2;function mN(e,t,n,s,r,a,o=2){let i=y=>({y:a.get(y.y,y.x,e),x:a.get(y.y,y.x,a.shape[2]/2+e)}),l=(y,x,A)=>({y:a5(Math.round(y.y/zc),0,x-1),x:a5(Math.round(y.x/zc),0,A-1)}),[c,u]=s.shape,d=l(t.position,c,u),p=i(d),f=o5(t.position,p);for(let y=0;y<o;y++){let x=l(f,c,u),A=s5(x.y,x.x,n,r);f=o5({x:x.x*zc,y:x.y*zc},{x:A.x,y:A.y})}let m=l(f,c,u),g=s.get(m.y,m.x,n);return{position:f,part:Up[n],score:g}}function Oye(e,t,n,s,r){let a=dN.map(([p,h])=>[Gp[p],Gp[h]]),o=a.map(([,p])=>p),i=a.map(([p])=>p),l=t.shape[2],c=o.length,u=new Array(l),d=r5(e.part,zc,n);u[e.part.id]={score:e.score,part:Up[e.part.id],position:d};for(let p=c-1;p>=0;--p){let h=o[p],f=i[p];u[h]&&!u[f]&&(u[f]=mN(p,u[h],f,t,n,r))}for(let p=0;p<c;++p){let h=i[p],f=o[p];u[h]&&!u[f]&&(u[f]=mN(p,u[h],f,t,n,s))}return u}function Mye(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-O0,0),c=Math.min(n+O0+1,a);for(let u=l;u<c;++u){let d=Math.max(s-O0,0),p=Math.min(s+O0+1,o);for(let h=d;h<p;++h)if(r.get(u,h,e)>t){i=!1;break}if(!i)break}return i}function zye(e,t){let[n,s,r]=t.shape,a=new n5(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let c=t.get(o,i,l);c<e||Mye(l,c,o,i,t)&&a.enqueue({score:c,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function gN(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var o;let a=(o=r[s])==null?void 0:o.position;return a?fN(n,t,a.y,a.x)<=Fye:!1})}function Lye(e,t){return t.reduce((s,{position:r,score:a},o)=>(gN(e,r,o)||(s+=a),s),0)/t.length}function Bye(e,t,n,s,r,a){let o=[],i=zye(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),c=r5(l.part,zc,e);if(gN(o,c,l.part.id))continue;let u=Oye(l,t,e,n,s);u=u.filter(h=>h.score>a);let d=Lye(o,u),p=pN(u);d>a&&o.push({keypoints:u,box:p,score:Math.round(100*d)/100})}return o}async function i5(e,t){let n=X(()=>{if(!Ns.inputs[0].shape)return[];let o=Se.resizeBilinear(e,[Ns.inputs[0].shape[2],Ns.inputs[0].shape[1]]),i=he(de(me(o,"float32"),127.5),1),c=Ns.execute(i,Pye).map(u=>Ke(u,[0]));return c[1]=_n(c[1]),c}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)ne(o);let r=await Bye(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return Ns.inputs[0].shape?hN(r,[e.shape[1],e.shape[2]],[Ns.inputs[0].shape[2],Ns.inputs[0].shape[1]]):[]}async function yN(e){return!Ns||pe.initial?(Ns=await Be(We(e.modelBasePath,e.body.modelPath||"")),!Ns||!Ns.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",Ns.modelUrl)):e.debug&&J("cached model:",Ns.modelUrl),Ns}var Hs,l5=!1;async function u5(e){return!Hs||pe.initial?(Hs=await Be(We(e.modelBasePath,e.segmentation.modelPath||"")),!Hs||!Hs.modelUrl?J("load model failed:",e.segmentation.modelPath):e.debug&&J("load model:",Hs.modelUrl)):e.debug&&J("cached model:",Hs.modelUrl),Hs}async function AN(e,t,n){var m,g;if(l5)return{data:[],canvas:null,alpha:null};l5=!0,Hs||await u5(n);let s=await Nc(e,n),r=((m=s.tensor)==null?void 0:m.shape[2])||0,a=((g=s.tensor)==null?void 0:g.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};let o={};o.resize=Se.resizeBilinear(s.tensor,[Hs.inputs[0].shape?Hs.inputs[0].shape[1]:0,Hs.inputs[0].shape?Hs.inputs[0].shape[2]:0],!1),ne(s.tensor),o.norm=de(o.resize,Xe.tf255),o.res=Hs.execute(o.norm),o.squeeze=Ke(o.res,0),o.squeeze.shape[2]===2?(o.softmax=Ku(o.squeeze),[o.bg,o.fg]=os(o.softmax,2),o.expand=Zt(o.fg,2),o.pad=Zt(o.expand,0),o.crop=Se.cropAndResize(o.pad,[[0,0,.5,.5]],[0],[r,a]),o.data=Ke(o.crop,0)):o.data=Se.resizeBilinear(o.squeeze,[a,r]);let i=Array.from(await o.data.data());if(pe.node&&!pe.Canvas&&typeof ImageData=="undefined")return n.debug&&J("canvas support missing"),Object.keys(o).forEach(y=>ne(o[y])),{data:i,canvas:null,alpha:null};let l=Kn(r,a);$s&&await $s.toPixels(o.data,l);let c=l.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(c.filter=`blur(${n.segmentation.blur}px)`);let u=c.getImageData(0,0,r,a),d=Kn(r,a),p=d.getContext("2d");s.canvas&&p.drawImage(s.canvas,0,0),p.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(p.filter=`blur(${n.segmentation.blur}px)`),p.drawImage(l,0,0),p.globalCompositeOperation="source-over",p.filter="none";let h=p.getImageData(0,0,r,a);for(let y=0;y<r*a;y++)h.data[4*y+3]=u.data[4*y+0];p.putImageData(h,0,0);let f=null;if(t&&d){f=Kn(r,a);let y=await Nc(t,n);ne(y.tensor);let x=f.getContext("2d");x.drawImage(y.canvas,0,0,f.width,f.height),x.drawImage(d,0,0)}return Object.keys(o).forEach(y=>ne(o[y])),l5=!1,{data:i,canvas:d,alpha:l}}var c5=class{constructor(){fe(this,"ssrnetage",null);fe(this,"gear",null);fe(this,"blazeposedetect",null);fe(this,"blazepose",null);fe(this,"centernet",null);fe(this,"efficientpose",null);fe(this,"mobilefacenet",null);fe(this,"emotion",null);fe(this,"facedetect",null);fe(this,"faceiris",null);fe(this,"facemesh",null);fe(this,"faceres",null);fe(this,"ssrnetgender",null);fe(this,"handpose",null);fe(this,"handskeleton",null);fe(this,"handtrack",null);fe(this,"liveness",null);fe(this,"movenet",null);fe(this,"nanodet",null);fe(this,"posenet",null);fe(this,"segmentation",null);fe(this,"antispoof",null)}};function d5(e){for(let t of Object.keys(e.models))e.models[t]=null}async function xN(e){var t,n,s,r,a,o,i,l,c,u,d,p,h,f,m,g,y,x,A,b,w,C,S,E,R,F,_,P,T,O;pe.initial&&d5(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await Wb(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await Wb(e.config))),e.config.body.enabled&&!e.models.blazepose&&((o=(a=e.config.body)==null?void 0:a.modelPath)==null?void 0:o.includes("blazepose"))&&(e.models.blazepose=aT(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=rT(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(i=e.config.body)==null?void 0:i.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=uT(e.config)),e.config.body.enabled&&!e.models.movenet&&((u=(c=e.config.body)==null?void 0:c.modelPath)==null?void 0:u.includes("movenet"))&&(e.models.movenet=lN(e.config)),e.config.body.enabled&&!e.models.posenet&&((p=(d=e.config.body)==null?void 0:d.modelPath)==null?void 0:p.includes("posenet"))&&(e.models.posenet=yN(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=Z8(e.config)),e.config.face.enabled&&((h=e.config.face.antispoof)==null?void 0:h.enabled)&&!e.models.antispoof&&(e.models.antispoof=z8(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=nN(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=NT(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=pT(e.config)),e.config.face.enabled&&((y=e.config.face.iris)==null?void 0:y.enabled)&&!e.models.faceiris&&(e.models.faceiris=yT(e.config)),e.config.face.enabled&&((x=e.config.face.mesh)==null?void 0:x.enabled)&&!e.models.facemesh&&(e.models.facemesh=kT(e.config)),e.config.face.enabled&&((A=e.config.face.gear)==null?void 0:A.enabled)&&!e.models.gear&&(e.models.gear=N8(e.config)),e.config.face.enabled&&((b=e.config.face.ssrnet)==null?void 0:b.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=D8(e.config)),e.config.face.enabled&&((w=e.config.face.ssrnet)==null?void 0:w.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=F8(e.config)),e.config.face.enabled&&((C=e.config.face.mobilefacenet)==null?void 0:C.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=gT(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((E=(S=e.config.hand.detector)==null?void 0:S.modelPath)==null?void 0:E.includes("handtrack"))&&(e.models.handtrack=JT(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((F=(R=e.config.hand.detector)==null?void 0:R.modelPath)==null?void 0:F.includes("handtrack"))&&(e.models.handskeleton=QT(e.config)),e.config.object.enabled&&!e.models.centernet&&((P=(_=e.config.object)==null?void 0:_.modelPath)==null?void 0:P.includes("centernet"))&&(e.models.centernet=iT(e.config)),e.config.object.enabled&&!e.models.nanodet&&((O=(T=e.config.object)==null?void 0:T.modelPath)==null?void 0:O.includes("nanodet"))&&(e.models.nanodet=cN(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=u5(e.config));for await(let G of Object.keys(e.models))e.models[G]&&typeof e.models[G]!="undefined"&&(e.models[G]=await e.models[G])}async function bN(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let n of Object.keys(e.models)){let s=e.models[n];if(!s)continue;let r=[],a=s==null?void 0:s.executor;if(a&&a.graph.nodes)for(let i of Object.values(a.graph.nodes)){let l=i.op.toLowerCase();r.includes(l)||r.push(l)}else!a&&e.config.debug&&J("model signature not determined:",n);let o=[];for(let i of r)!t.includes(i)&&!e.env.kernels.includes(i)&&!e.env.kernels.includes(i.replace("_",""))&&!e.env.kernels.includes(i.replace("native",""))&&!e.env.kernels.includes(i.replace("v2",""))&&o.push(i);e.config.debug&&o.length>0&&J("model validation failed:",n,o)}}var Rt={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function Wye(){let e=Rt.gl;!e||(Rt.extensions=e.getSupportedExtensions())}async function vN(e){var t;if(e.config.backend==="humangl"&&(Rt.name in as().registry&&(!Rt.gl||!Rt.gl.getParameter(Rt.gl.VERSION))&&(J("error: humangl backend invalid context"),d5(e)),!Q2(Rt.name))){try{Rt.canvas=await Kn(100,100)}catch(s){J("error: cannot create canvas:",s);return}try{if(Rt.gl=(t=Rt.canvas)==null?void 0:t.getContext("webgl2",Rt.webGLattr),!Rt.gl.getParameter(Rt.gl.VERSION).includes("2.0")){J("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}Rt.canvas&&(Rt.canvas.addEventListener("webglcontextlost",async r=>{throw J("error: humangl:",r.type),J("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),Rt.canvas.addEventListener("webglcontextrestored",r=>{J("error: humangl context restored:",r)}),Rt.canvas.addEventListener("webglcontextcreationerror",r=>{J("error: humangl context create:",r)}))}catch(s){J("error: cannot get WebGL context:",s);return}try{Pm(2,Rt.gl)}catch(s){J("error: cannot set WebGL context:",s);return}try{let s=new Gm(Rt.gl);ul(Rt.name,()=>new Ip(s),Rt.priority)}catch(s){J("error: cannot register WebGL backend:",s);return}try{Yr("webgl").forEach(r=>{let a={...r,backendName:Rt.name};ur(a)})}catch(s){J("error: cannot update WebGL backend registration:",s);return}let n=Er().getGPGPUContext?Er().getGPGPUContext().gl:null;if(n)J(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);else{J("error: no current gl context:",n,Rt.gl);return}try{Cr.set("WEBGL_VERSION",2)}catch(s){J("error: cannot set WebGL backend flags:",s);return}Wye(),J("backend registered:",Rt.name)}}function Vye(){if(!pe.kernels.includes("mod")){let e={kernelName:"Mod",backendName:Ps(),kernelFunc:t=>X(()=>he(t.inputs.a,L(de(t.inputs.a,t.inputs.b),t.inputs.b)))};ur(e),pe.kernels.push("mod")}if(!pe.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:Ps(),kernelFunc:t=>X(()=>pf(t.inputs.a/t.inputs.b)*t.inputs.b+Hd(t.inputs.a,t.inputs.b))};ur(e),pe.kernels.push("floormod")}}async function M0(e,t=!1){if(e.state="backend",t||pe.initial||e.config.backend&&e.config.backend.length>0&&Ps()!==e.config.backend){let n=ie();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&J("running inside web worker"),pe.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&J("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),pe.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&J(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),pe.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")J("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let r=await navigator.gpu.requestAdapter();e.config.debug&&J("enumerated webgpu adapter:",r)}e.config.backend==="humangl"&&await vN(e);let s=Object.keys(as().registryFactory);if(e.config.debug&&J("available backends:",s),s.includes(e.config.backend)||(J(`error: backend ${e.config.backend} not found in registry`),e.config.backend=pe.node?"tensorflow":"webgl",e.config.debug&&J(`override: setting backend ${e.config.backend}`)),e.config.debug&&J("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&J("wasm path:",e.config.wasmPath),typeof(Vr==null?void 0:Vr.setWasmPaths)!="undefined")await h8(e.config.wasmPath);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let r=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),a=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&J(`wasm execution: ${r?"SIMD":"no SIMD"} ${a?"multithreaded":"singlethreaded"}`),e.config.debug&&!r&&J("warning: wasm simd support is not enabled")}try{await rv(e.config.backend),await df(),E8()}catch(r){return J("error: cannot set backend:",e.config.backend,r),!1}}if(Ps()==="humangl"&&(Cr.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Cr.set("WEBGL_CPU_FORWARD",!0),Cr.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Cr.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(J("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Cr.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Er().getGPGPUContext)){let s=await Er().getGPGPUContext().gl;e.config.debug&&J(`gl version:${s.getParameter(s.VERSION)} renderer:${s.getParameter(s.RENDERER)}`)}Ps()==="webgpu",sv(),await df(),e.performance.initBackend=Math.trunc(ie()-n),e.config.backend=Ps(),await pe.updateBackend(),Vye()}return!0}function E0(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&J("kernelFunc",n,t.backend)}};ur(s)}pe.kernels=Yr(Ps()).map(n=>n.kernelName.toLowerCase())}var xa={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},p5=0,jl=e=>{if(!e)J("draw error: invalid canvas");else if(!e.getContext)J("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)J("draw error: cannot get canvas context");else return t}return null},Lc=e=>Math.round(e*180/Math.PI);function h5(e,t,n,s,r){s=s||0,e.fillStyle=r.useDepth&&s?`rgba(${127.5+2*s}, ${127.5-2*s}, 255, 0.3)`:r.color,e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function Hp(e,t,n,s,r,a){if(e.beginPath(),e.lineWidth=a.lineWidth,a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function wN(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t){let r=s[2]||0;e.strokeStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&r!==0?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:n.color,e.lineTo(s[0],Math.round(s[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function Uye(e,t,n){if(!(t.length<2)){if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2){wN(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function kN(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}async function f5(e,t,n){let s=En(xa,n);if(!(!t||!e)&&s.drawGestures){let r=jl(e);if(!r)return;r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let c=i[1]>0?`#${i[1]}`:"",u=`${i[0]} ${c}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(u,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(u,6,0+a*s.lineHeight),a+=1}}}}async function m5(e,t,n){var a,o,i,l,c;let s=En(xa,n);if(!t||!e)return;let r=jl(e);if(!!r)for(let u of t){if(r.font=s.font,r.strokeStyle=s.color,r.fillStyle=s.color,s.drawBoxes&&Hp(r,u.box[0],u.box[1],u.box[2],u.box[3],s),s.drawLabels){let d=[];if(d.push(`face: ${Math.trunc(100*u.score)}%`),u.genderScore&&d.push(`${u.gender||""} ${Math.trunc(100*u.genderScore)}%`),u.age&&d.push(`age: ${u.age||""}`),u.iris&&d.push(`distance: ${u.iris}`),u.real&&d.push(`real: ${Math.trunc(100*u.real)}%`),u.live&&d.push(`live: ${Math.trunc(100*u.live)}%`),u.emotion&&u.emotion.length>0){let p=u.emotion.map(h=>`${Math.trunc(100*h.score)}% ${h.emotion}`);p.length>3&&(p.length=3),d.push(p.join(" "))}u.rotation&&u.rotation.angle&&u.rotation.gaze&&(u.rotation.angle.roll&&d.push(`roll: ${Lc(u.rotation.angle.roll)}\xB0 yaw:${Lc(u.rotation.angle.yaw)}\xB0 pitch:${Lc(u.rotation.angle.pitch)}\xB0`),u.rotation.gaze.bearing&&d.push(`gaze: ${Lc(u.rotation.gaze.bearing)}\xB0`)),d.length===0&&d.push("face"),r.fillStyle=s.color;for(let p=d.length-1;p>=0;p--){let h=Math.max(u.box[0],0),f=p*s.lineHeight+u.box[1];s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(d[p],h+5,f+16)),r.fillStyle=s.labelColor,r.fillText(d[p],h+4,f+15)}}if(r.lineWidth=2,u.mesh&&u.mesh.length>0){if(s.drawPoints)for(let d of u.mesh)h5(r,d[0],d[1],d[2],s);if(s.drawPolygons){if(u.mesh.length>450)for(let d=0;d<zl.length/3;d++){let p=[zl[d*3+0],zl[d*3+1],zl[d*3+2]].map(h=>u.mesh[h]);wN(r,p,s)}if(u.annotations&&u.annotations.leftEyeIris&&u.annotations.leftEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.leftEyeIris[3][0]-u.annotations.leftEyeIris[1][0])/2,p=Math.abs(u.annotations.leftEyeIris[4][1]-u.annotations.leftEyeIris[2][1])/2;r.ellipse(u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(u.annotations&&u.annotations.rightEyeIris&&u.annotations.rightEyeIris[0]){r.strokeStyle=s.useDepth?"rgba(255, 200, 255, 0.3)":s.color,r.beginPath();let d=Math.abs(u.annotations.rightEyeIris[3][0]-u.annotations.rightEyeIris[1][0])/2,p=Math.abs(u.annotations.rightEyeIris[4][1]-u.annotations.rightEyeIris[2][1])/2;r.ellipse(u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1],d,p,0,0,2*Math.PI),r.stroke(),s.fillPolygons&&(r.fillStyle=s.useDepth?"rgba(255, 255, 200, 0.3)":s.color,r.fill())}if(s.drawGaze&&((a=u.rotation)==null?void 0:a.angle)&&typeof Path2D!="undefined"){r.strokeStyle="pink";let d=u.box[0]+u.box[2]/2-u.box[3]*Lc(u.rotation.angle.yaw)/90,p=u.box[1]+u.box[3]/2+u.box[2]*Lc(u.rotation.angle.pitch)/90,h=new Path2D(`
            M ${u.box[0]+u.box[2]/2} ${u.box[1]}
            C
              ${d} ${u.box[1]},
              ${d} ${u.box[1]+u.box[3]},
              ${u.box[0]+u.box[2]/2} ${u.box[1]+u.box[3]}
          `),f=new Path2D(`
            M ${u.box[0]} ${u.box[1]+u.box[3]/2}
            C 
              ${u.box[0]} ${p},
              ${u.box[0]+u.box[2]} ${p},
              ${u.box[0]+u.box[2]} ${u.box[1]+u.box[3]/2}
          `);r.stroke(f),r.stroke(h)}if(s.drawGaze&&((i=(o=u.rotation)==null?void 0:o.gaze)==null?void 0:i.strength)&&((c=(l=u.rotation)==null?void 0:l.gaze)==null?void 0:c.bearing)&&u.annotations.leftEyeIris&&u.annotations.rightEyeIris&&u.annotations.leftEyeIris[0]&&u.annotations.rightEyeIris[0]){r.strokeStyle="pink",r.fillStyle="pink";let d=[u.annotations.leftEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.leftEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];kN(r,[u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1]],[d[0],d[1]],4);let p=[u.annotations.rightEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.rightEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];kN(r,[u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1]],[p[0],p[1]],4)}}}}}async function g5(e,t,n){var a;let s=En(xa,n);if(!t||!e)return;let r=jl(e);if(!!r){r.lineJoin="round";for(let o=0;o<t.length;o++){if(r.strokeStyle=s.color,r.fillStyle=s.color,r.lineWidth=s.lineWidth,r.font=s.font,s.drawBoxes&&t[o].box&&((a=t[o].box)==null?void 0:a.length)===4&&(Hp(r,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+3,1+t[o].box[1]+s.lineHeight,t[o].box[2])),r.fillStyle=s.labelColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+2,0+t[o].box[1]+s.lineHeight,t[o].box[2]))),s.drawPoints&&t[o].keypoints)for(let i=0;i<t[o].keypoints.length;i++)!t[o].keypoints[i].score||t[o].keypoints[i].score===0||(r.fillStyle=s.useDepth&&t[o].keypoints[i].position[2]?`rgba(${127.5+2*(t[o].keypoints[i].position[2]||0)}, ${127.5-2*(t[o].keypoints[i].position[2]||0)}, 255, 0.5)`:s.color,h5(r,t[o].keypoints[i].position[0],t[o].keypoints[i].position[1],0,s));if(s.drawLabels&&t[o].keypoints){r.font=s.font;for(let i of t[o].keypoints)!i.score||i.score===0||(r.fillStyle=s.useDepth&&i.position[2]?`rgba(${127.5+2*i.position[2]}, ${127.5-2*i.position[2]}, 255, 0.5)`:s.color,r.fillText(`${i.part} ${Math.trunc(100*i.score)}%`,i.position[0]+4,i.position[1]+4))}if(s.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let i of Object.values(t[o].annotations))for(let l of i)Uye(r,l,s)}}}async function y5(e,t,n){let s=En(xa,n);if(!t||!e)return;let r=jl(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,Hp(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=s.useDepth?`rgba(${127.5+2*(o[2]||0)}, ${127.5-2*(o[2]||0)}, 255, 0.5)`:s.color,h5(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{if(!i||i.length===0||!i[0])return;let c=i[i.length-1][2]||0;r.fillStyle=s.useDepth?`rgba(${127.5+2*c}, ${127.5-2*c}, 255, 0.5)`:s.color,r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4)};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++){r.beginPath();let c=i[l][2]||0;r.strokeStyle=s.useDepth?`rgba(${127.5+l*c}, ${127.5-l*c}, 255, 0.5)`:s.color,r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()}};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}}async function A5(e,t,n){let s=En(xa,n);if(!t||!e)return;let r=jl(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Hp(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}}async function SN(e,t,n){let s=En(xa,n);if(!t||!e)return;let r=jl(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Hp(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}}async function IN(e,t){if(!e||!t)return;let n=jl(t);!n||n.drawImage(e,0,0)}async function CN(e,t,n){if(!t||!t.performance||!t||!e)return null;let s=ie(),r=En(xa,n),a=Promise.all([m5(e,t.face,r),g5(e,t.body,r),y5(e,t.hand,r),A5(e,t.object,r),f5(e,t.gesture,r)]);return p5=pe.perfadd?p5+Math.round(ie()-s):Math.round(ie()-s),t.performance.draw=p5,a}var Bc=.1,x5=.5;function Gye(e,t,n){let s=!1,r=n.length-1;for(let a=0;a<n.length;r=a++)n[a].y>t!=n[r].y>t&&e<(n[r].x-n[a].x)*(t-n[a].y)/(n[r].y-n[a].y)+n[a].x&&(s=!s);return s}async function TN(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,s=await e.tensor.buffer(),r=[];for(let o of ar.silhouette)r.push({x:(e.mesh[o][0]-e.box[0])/e.box[2],y:(e.mesh[o][1]-e.box[1])/e.box[3]});Bc&&Bc>0&&(r=r.map(o=>({x:o.x>.5?o.x+Bc:o.x-Bc,y:o.y>.5?o.y+Bc:o.y-Bc})));for(let o=0;o<t;o++)for(let i=0;i<n;i++)Gye(o/t,i/t,r)||(s.set(x5*s.get(0,i,o,0),0,i,o,0),s.set(x5*s.get(0,i,o,1),0,i,o,1),s.set(x5*s.get(0,i,o,2),0,i,o,2));let a=s.toTensor();return ne(s),a}var Hye=e=>{let t=(d,p)=>Math.atan2(d[1]-p[1],d[0]-p[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],c=Math.sqrt(l[0]**2+l[1]**2);return c=Math.min(c,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:c}},NN=(e,t)=>{let n=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},s=(m,g)=>{let y=m[0]-g[0],x=m[1]-g[1],A=m[2]-g[2];return[y,x,A]},r=(m,g)=>{let y=m[1]*g[2]-m[2]*g[1],x=m[2]*g[0]-m[0]*g[2],A=m[0]*g[1]-m[1]*g[0];return[y,x,A]},a=m=>{let[g,y,x,A,b,w,C,S,E]=m,R,F,_;return A<1?A>-1?(_=Math.asin(A),F=Math.atan2(-C,g),R=Math.atan2(-w,b)):(_=-Math.PI/2,F=-Math.atan2(S,E),R=0):(_=Math.PI/2,F=Math.atan2(S,E),R=0),isNaN(R)&&(R=0),isNaN(F)&&(F=0),isNaN(_)&&(_=0),{pitch:2*-R,yaw:2*-F,roll:2*-_}},o=e.meshRaw;if(!o||o.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[o[10],o[152],o[234],o[454]].map(m=>[m[0]*t[0]/i,m[1]*t[1]/i,m[2]]),c=n(s(l[1],l[0])),u=n(s(l[3],l[2])),d=n(r(u,c));u=r(c,d);let p=[u[0],u[1],u[2],c[0],c[1],c[2],d[0],d[1],d[2]],h=a(p),f=o.length===478?Hye(e):{bearing:0,strength:0};return{angle:h,matrix:p,gaze:f}};var b5=async(e,t)=>{var h,f,m,g,y,x,A,b,w,C,S,E,R,F,_,P,T,O,G,K,z,j;let n=ie(),s,r,a,o,i,l,c,u,d=[];e.state="run:face";let p=await wT(t,e.config);if(e.performance.face=pe.perfadd?(e.performance.face||0)+Math.trunc(ie()-n):Math.trunc(ie()-n),!t.shape||t.shape.length!==4)return[];if(!p)return[];for(let W=0;W<p.length;W++){if(e.analyze("Get Face"),!p[W].tensor||p[W].tensor.isDisposedInternal){J("Face object is disposed:",p[W].tensor);continue}if((h=e.config.face.detector)==null?void 0:h.mask){let oe=await TN(p[W]);ne(p[W].tensor),p[W].tensor=oe}let Q=p[W].mesh&&p[W].mesh.length>200?NN(p[W],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?o=((f=e.config.face.emotion)==null?void 0:f.enabled)?Tb(p[W].tensor||pt([]),e.config,W,p.length):[]:(e.state="run:emotion",n=ie(),o=((m=e.config.face.emotion)==null?void 0:m.enabled)?await Tb(p[W].tensor||pt([]),e.config,W,p.length):[],e.performance.emotion=pe.perfadd?(e.performance.emotion||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?l=((g=e.config.face.antispoof)==null?void 0:g.enabled)?ab(p[W].tensor||pt([]),e.config,W,p.length):0:(e.state="run:antispoof",n=ie(),l=((y=e.config.face.antispoof)==null?void 0:y.enabled)?await ab(p[W].tensor||pt([]),e.config,W,p.length):0,e.performance.antispoof=pe.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?c=((x=e.config.face.liveness)==null?void 0:x.enabled)?jb(p[W].tensor||pt([]),e.config,W,p.length):0:(e.state="run:liveness",n=ie(),c=((A=e.config.face.liveness)==null?void 0:A.enabled)?await jb(p[W].tensor||pt([]),e.config,W,p.length):0,e.performance.liveness=pe.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?r=((b=e.config.face.gear)==null?void 0:b.enabled)?Jx(p[W].tensor||pt([]),e.config,W,p.length):null:(e.state="run:gear",n=ie(),r=((w=e.config.face.gear)==null?void 0:w.enabled)?await Jx(p[W].tensor||pt([]),e.config,W,p.length):null,e.performance.gear=Math.trunc(ie()-n)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(s=((C=e.config.face.ssrnet)==null?void 0:C.enabled)?eb(p[W].tensor||pt([]),e.config,W,p.length):null,a=((S=e.config.face.ssrnet)==null?void 0:S.enabled)?sb(p[W].tensor||pt([]),e.config,W,p.length):null):(e.state="run:ssrnet",n=ie(),s=((E=e.config.face.ssrnet)==null?void 0:E.enabled)?await eb(p[W].tensor||pt([]),e.config,W,p.length):null,a=((R=e.config.face.ssrnet)==null?void 0:R.enabled)?await sb(p[W].tensor||pt([]),e.config,W,p.length):null,e.performance.ssrnet=Math.trunc(ie()-n)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?i=((F=e.config.face.mobilefacenet)==null?void 0:F.enabled)?Eb(p[W].tensor||pt([]),e.config,W,p.length):null:(e.state="run:mobilefacenet",n=ie(),i=((_=e.config.face.mobilefacenet)==null?void 0:_.enabled)?await Eb(p[W].tensor||pt([]),e.config,W,p.length):null,e.performance.mobilefacenet=Math.trunc(ie()-n)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?u=((P=e.config.face.description)==null?void 0:P.enabled)?Pb(p[W].tensor||pt([]),e.config,W,p.length):null:(e.state="run:description",n=ie(),u=((T=e.config.face.description)==null?void 0:T.enabled)?await Pb(p[W].tensor||pt([]),e.config,W,p.length):null,e.performance.description=pe.perfadd?(e.performance.description||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Description:"),e.config.async&&([s,a,o,i,u,r,l,c]=await Promise.all([s,a,o,i,u,r,l,c])),e.analyze("Finish Face:"),((O=e.config.face.ssrnet)==null?void 0:O.enabled)&&s&&a&&(u={...u,age:s.age,gender:a.gender,genderScore:a.genderScore}),((G=e.config.face.gear)==null?void 0:G.enabled)&&r&&(u={...u,age:r.age,gender:r.gender,genderScore:r.genderScore,race:r.race}),((K=e.config.face.mobilefacenet)==null?void 0:K.enabled)&&i&&(u.descriptor=i),!((z=e.config.face.iris)==null?void 0:z.enabled);let te=p[W].annotations&&p[W].annotations.leftEyeIris&&p[W].annotations.leftEyeIris[0]&&p[W].annotations.rightEyeIris&&p[W].annotations.rightEyeIris[0]&&p[W].annotations.leftEyeIris.length>0&&p[W].annotations.rightEyeIris.length>0&&p[W].annotations.leftEyeIris[0]!==null&&p[W].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(p[W].annotations.leftEyeIris[3][0]-p[W].annotations.leftEyeIris[1][0]),Math.abs(p[W].annotations.rightEyeIris[4][1]-p[W].annotations.rightEyeIris[2][1]))/t.shape[2]:0,ae=((j=e.config.face.detector)==null?void 0:j.return)?Ke(p[W].tensor):null;ne(p[W].tensor),p[W].tensor&&delete p[W].tensor;let Z={...p[W],id:W};(u==null?void 0:u.age)&&(Z.age=u.age),(u==null?void 0:u.gender)&&(Z.gender=u.gender),(u==null?void 0:u.genderScore)&&(Z.genderScore=u==null?void 0:u.genderScore),(u==null?void 0:u.descriptor)&&(Z.embedding=u==null?void 0:u.descriptor),(u==null?void 0:u.race)&&(Z.race=u==null?void 0:u.race),o&&(Z.emotion=o),l&&(Z.real=l),c&&(Z.live=c),te&&te!==0&&(Z.iris=Math.trunc(500/te/11.7)/100),Q&&(Z.rotation=Q),ae&&(Z.tensor=ae),d.push(Z),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),d};var EN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&Math.abs(o.positionRaw[1]-i.positionRaw[1])>.1&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},RN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(s/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});let l=e[n].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:n,gesture:`head ${l<0?"up":"down"}`})}return t},_N=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let s=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(s*r),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),c=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(c=!0,t.push({iris:n,gesture:"facing center"}));let d=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],p=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(d>.06||p>.06)&&(c=!1),d>p?d>.05&&t.push({iris:n,gesture:"looking right"}):p>.05&&t.push({iris:n,gesture:"looking left"});let h=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||h<.01||f>.022||h>.022)&&(c=!1),(f<.01||h<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||h>.022)&&t.push({iris:n,gesture:"looking up"}),c&&t.push({iris:n,gesture:"looking center"})}return t},DN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>(o.position[2]||0)<(i.position[2]||0)?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=jT(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t};var De={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},v5=0;function $N(e,t){var o,i,l,c,u,d,p,h,f,m,g,y,x,A,b,w,C,S,E,R,F,_,P,T,O,G,K;let n=ie();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let s=Date.now()-e.timestamp,r=s<1e3?8-Math.log(s+1):1;if(e.canvas&&(De.canvas=e.canvas),e.error&&(De.error=e.error),!De.body||e.body.length!==De.body.length)De.body=JSON.parse(JSON.stringify(e.body));else for(let z=0;z<e.body.length;z++){let j=e.body[z].box.map((Z,oe)=>((r-1)*De.body[z].box[oe]+Z)/r),W=e.body[z].boxRaw.map((Z,oe)=>((r-1)*De.body[z].boxRaw[oe]+Z)/r),Q=e.body[z].keypoints.map((Z,oe)=>({score:Z.score,part:Z.part,position:[De.body[z].keypoints[oe]?((r-1)*(De.body[z].keypoints[oe].position[0]||0)+(Z.position[0]||0))/r:Z.position[0],De.body[z].keypoints[oe]?((r-1)*(De.body[z].keypoints[oe].position[1]||0)+(Z.position[1]||0))/r:Z.position[1],De.body[z].keypoints[oe]?((r-1)*(De.body[z].keypoints[oe].position[2]||0)+(Z.position[2]||0))/r:Z.position[2]],positionRaw:[De.body[z].keypoints[oe]?((r-1)*(De.body[z].keypoints[oe].positionRaw[0]||0)+(Z.positionRaw[0]||0))/r:Z.position[0],De.body[z].keypoints[oe]?((r-1)*(De.body[z].keypoints[oe].positionRaw[1]||0)+(Z.positionRaw[1]||0))/r:Z.position[1],De.body[z].keypoints[oe]?((r-1)*(De.body[z].keypoints[oe].positionRaw[2]||0)+(Z.positionRaw[2]||0))/r:Z.position[2]]})),te={},ae={connected:{}};((i=(o=t.body)==null?void 0:o.modelPath)==null?void 0:i.includes("efficientpose"))?ae=kb:((c=(l=t.body)==null?void 0:l.modelPath)==null?void 0:c.includes("blazepose"))?ae=fb:((d=(u=t.body)==null?void 0:u.modelPath)==null?void 0:d.includes("movenet"))&&(ae=Zb);for(let[Z,oe]of Object.entries(ae.connected)){let re=[];for(let ge=0;ge<oe.length-1;ge++){let ve=Q.find(Te=>Te.part===oe[ge]),Re=Q.find(Te=>Te.part===oe[ge+1]);ve&&Re&&re.push([ve.position,Re.position])}te[Z]=re}De.body[z]={...e.body[z],box:j,boxRaw:W,keypoints:Q,annotations:te}}if(!De.hand||e.hand.length!==De.hand.length)De.hand=JSON.parse(JSON.stringify(e.hand));else for(let z=0;z<e.hand.length;z++){let j=e.hand[z].box.map((ae,Z)=>((r-1)*De.hand[z].box[Z]+ae)/r),W=e.hand[z].boxRaw.map((ae,Z)=>((r-1)*De.hand[z].boxRaw[Z]+ae)/r);De.hand[z].keypoints.length!==e.hand[z].keypoints.length&&(De.hand[z].keypoints=e.hand[z].keypoints);let Q=e.hand[z].keypoints&&e.hand[z].keypoints.length>0?e.hand[z].keypoints.map((ae,Z)=>ae.map((oe,re)=>((r-1)*(De.hand[z].keypoints[Z][re]||1)+(oe||0))/r)):[],te={};if(Object.keys(De.hand[z].annotations).length!==Object.keys(e.hand[z].annotations).length)De.hand[z].annotations=e.hand[z].annotations,te=De.hand[z].annotations;else if(e.hand[z].annotations)for(let ae of Object.keys(e.hand[z].annotations))te[ae]=e.hand[z].annotations[ae]&&e.hand[z].annotations[ae][0]?e.hand[z].annotations[ae].map((Z,oe)=>Z.map((re,ge)=>((r-1)*De.hand[z].annotations[ae][oe][ge]+re)/r)):null;De.hand[z]={...e.hand[z],box:j,boxRaw:W,keypoints:Q,annotations:te}}if(!De.face||e.face.length!==De.face.length)De.face=JSON.parse(JSON.stringify(e.face));else for(let z=0;z<e.face.length;z++){let j=e.face[z].box.map((Q,te)=>((r-1)*De.face[z].box[te]+Q)/r),W=e.face[z].boxRaw.map((Q,te)=>((r-1)*De.face[z].boxRaw[te]+Q)/r);if(e.face[z].rotation){let Q={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};Q.matrix=(p=e.face[z].rotation)==null?void 0:p.matrix,Q.angle={roll:((r-1)*(((f=(h=De.face[z].rotation)==null?void 0:h.angle)==null?void 0:f.roll)||0)+(((g=(m=e.face[z].rotation)==null?void 0:m.angle)==null?void 0:g.roll)||0))/r,yaw:((r-1)*(((x=(y=De.face[z].rotation)==null?void 0:y.angle)==null?void 0:x.yaw)||0)+(((b=(A=e.face[z].rotation)==null?void 0:A.angle)==null?void 0:b.yaw)||0))/r,pitch:((r-1)*(((C=(w=De.face[z].rotation)==null?void 0:w.angle)==null?void 0:C.pitch)||0)+(((E=(S=e.face[z].rotation)==null?void 0:S.angle)==null?void 0:E.pitch)||0))/r},Q.gaze={bearing:((r-1)*(((F=(R=De.face[z].rotation)==null?void 0:R.gaze)==null?void 0:F.bearing)||0)+(((P=(_=e.face[z].rotation)==null?void 0:_.gaze)==null?void 0:P.bearing)||0))/r,strength:((r-1)*(((O=(T=De.face[z].rotation)==null?void 0:T.gaze)==null?void 0:O.strength)||0)+(((K=(G=e.face[z].rotation)==null?void 0:G.gaze)==null?void 0:K.strength)||0))/r},De.face[z]={...e.face[z],rotation:Q,box:j,boxRaw:W}}De.face[z]={...e.face[z],box:j,boxRaw:W}}if(!De.object||e.object.length!==De.object.length)De.object=JSON.parse(JSON.stringify(e.object));else for(let z=0;z<e.object.length;z++){let j=e.object[z].box.map((Q,te)=>((r-1)*De.object[z].box[te]+Q)/r),W=e.object[z].boxRaw.map((Q,te)=>((r-1)*De.object[z].boxRaw[te]+Q)/r);De.object[z]={...e.object[z],box:j,boxRaw:W}}if(e.persons){let z=e.persons;if(!De.persons||z.length!==De.persons.length)De.persons=JSON.parse(JSON.stringify(z));else for(let j=0;j<z.length;j++)De.persons[j].box=z[j].box.map((W,Q)=>((r-1)*De.persons[j].box[Q]+W)/r)}e.gesture&&(De.gesture=e.gesture);let a=ie();return v5=pe.perfadd?v5+Math.round(a-n):Math.round(a-n),e.performance&&(De.performance={...e.performance,interpolate:v5}),De}function z0(e,t,n={order:2,multiplier:25}){let s=0;for(let r=0;r<e.length;r++){let a=!n.order||n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*s}var PN=(e,t,n,s)=>{if(e===0)return 1;let r=t===2?Math.sqrt(e):e**(1/t),a=(1-r/100-n)/(s-n);return Math.max(Math.min(a,1),0)};function FN(e,t,n={order:2,multiplier:25,min:.2,max:.8}){let s=z0(e,t,n);return PN(s,n.order||2,n.min||0,n.max||1)}function ON(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let o=0;o<t.length;o++){let i=z0(e,t[o],n);if(i<s&&(s=i,r=o),s<(n.threshold||0))break}let a=PN(s,n.order||2,n.min||0,n.max||1);return{index:r,distance:s,similarity:a}}function MN(e,t,n,s,r){var i,l,c,u,d,p,h,f,m,g,y,x,A,b,w,C;let a=0,o=[];for(let S of e){let E={id:a++,face:S,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let O of t)S.box[0]>O.box[0]&&S.box[0]<O.box[0]+O.box[2]&&S.box[1]+S.box[3]>O.box[1]&&S.box[1]+S.box[3]<O.box[1]+O.box[3]&&(E.body=O);if(E.body)for(let O of n)O.box[0]+O.box[2]>E.body.box[0]&&O.box[0]+O.box[2]<E.body.box[0]+E.body.box[2]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=O),O.box[0]<E.body.box[0]+E.body.box[2]&&O.box[0]>E.body.box[0]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=O);for(let O of s)O.face!==void 0&&O.face===S.id?(i=E.gestures)==null||i.push(O):O.iris!==void 0&&O.iris===S.id?(l=E.gestures)==null||l.push(O):O.body!==void 0&&O.body===((c=E.body)==null?void 0:c.id)?(u=E.gestures)==null||u.push(O):O.hand!==void 0&&O.hand===((p=(d=E.hands)==null?void 0:d.left)==null?void 0:p.id)?(h=E.gestures)==null||h.push(O):O.hand!==void 0&&O.hand===((m=(f=E.hands)==null?void 0:f.right)==null?void 0:m.id)&&((g=E.gestures)==null||g.push(O));let R=[],F=[],_=O=>{O&&O.length===4&&(R.push(O[0],O[0]+O[2]),F.push(O[1],O[1]+O[3]))};_((y=E.face)==null?void 0:y.box),_((x=E.body)==null?void 0:x.box),_((b=(A=E.hands)==null?void 0:A.left)==null?void 0:b.box),_((C=(w=E.hands)==null?void 0:w.right)==null?void 0:C.box);let P=Math.min(...R),T=Math.min(...F);E.box=[P,T,Math.max(...R)-P,Math.max(...F)-T],r&&r[1]&&r[2]&&(E.boxRaw=[E.box[0]/r[2],E.box[1]/r[1],E.box[2]/r[2],E.box[3]/r[1]]),o.push(E)}return o}var L0=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,B0=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function jye(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(L0);break;case"body":case"full":n=await t(B0);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function qye(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+L0;break;case"full":case"body":n="data:image/jpeg;base64,"+B0;break;default:n=null}let s;if(typeof Image!="undefined")s=new Image;else if(pe.Image)s=new pe.Image;else return;s.onload=async()=>{let r=Kn(s.naturalWidth,s.naturalHeight);if(!r)J("Warmup: Canvas not found"),t(void 0);else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=await e.detect(o.tensor,e.config);t(i)}},n?s.src=n:t(void 0)})}async function Xye(e){let t=r=>Buffer.from(r,"base64"),n;e.config.warmup==="face"?n=t(L0):n=t(B0);let s;if("node"in Vr){let r=(void 0).decodeJpeg(n),a=r.expandDims(0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&J("Warmup tfjs-node not loaded");return s}async function zN(e,t){let n=ie();if(e.state="warmup",t&&(e.config=En(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none")return{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:ie(),persons:[],error:null};let s;return new Promise(async r=>{typeof createImageBitmap=="function"?s=await jye(e):typeof Image!="undefined"||pe.Canvas!==void 0?s=await qye(e):s=await Xye(e);let a=ie();e.config.debug&&J("Warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),r(s)})}var Wc,jp,qp,W0,LN=class{constructor(t){fe(this,"version");fe(this,"config");fe(this,"result");fe(this,"state");fe(this,"process");fe(this,"tf");fe(this,"env");fe(this,"draw");fe(this,"models");fe(this,"events");fe(this,"faceTriangulation");fe(this,"faceUVMap");fe(this,"performance");sd(this,Wc,void 0);sd(this,jp,void 0);sd(this,qp,void 0);fe(this,"gl");fe(this,"analyze",(...t)=>{if(!nd(this,jp))return;let n=this.tf.engine().state.numTensors,s=nd(this,Wc);rd(this,Wc,n);let r=n-s;r!==0&&J(...t,r)});sd(this,W0,t=>{if(!nd(this,qp))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof tt))return"input must be a tensor";try{this.tf.getBackend()}catch(n){return"backend not loaded"}return null});fe(this,"similarity",FN);fe(this,"distance",z0);fe(this,"match",ON);fe(this,"emit",t=>{var n;this.events&&this.events.dispatchEvent&&((n=this.events)==null||n.dispatchEvent(new Event(t)))});this.env=pe,Na.wasmPath=l0["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${nv}/dist/`,Na.modelBasePath=pe.browser?"../models/":"file://models/",Na.backend=pe.browser?"humangl":"tensorflow",this.version=Kx,Object.defineProperty(this,"version",{value:Kx}),this.config=JSON.parse(JSON.stringify(Na)),Object.seal(this.config),t&&(this.config=En(this.config,t)),this.tf=Vr,this.state="idle",rd(this,Wc,0),rd(this,jp,!1),rd(this,qp,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new c5,this.draw={options:xa,canvas:(n,s)=>IN(n,s),face:(n,s,r)=>m5(n,s,r),body:(n,s,r)=>g5(n,s,r),hand:(n,s,r)=>y5(n,s,r),gesture:(n,s,r)=>f5(n,s,r),object:(n,s,r)=>A5(n,s,r),person:(n,s,r)=>SN(n,s,r),all:(n,s,r)=>CN(n,s,r)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=ST,this.faceUVMap=IT,this.gl=Rt,this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(Na)),this.config.backend=t}validate(t){return m2(Na,t||this.config)}now(){return ie()}image(t,n=!0){return Nc(t,this.config,n)}async segmentation(t,n){return AN(t,n,this.config)}enhance(t){return $b(t)}compare(t,n){return S8(this.config,t,n)}async init(){await M0(this,!0),await this.tf.ready()}async load(t){this.state="load";let n=ie(),s=Object.values(this.models).filter(o=>o).length;t&&(this.config=En(this.config,t)),this.env.initial&&(this.config.debug&&J(`version: ${this.version}`),this.config.debug&&J(`tfjs version: ${this.tf.version["tfjs-core"]}`),await M0(this)||J("error: backend check failed"),await df(),this.env.browser&&(this.config.debug&&J("configuration:",this.config),this.config.debug&&J("environment:",this.env),this.config.debug&&J("tf flags:",this.tf.ENV.flags))),await xN(this),this.env.initial&&this.config.debug&&J("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(o=>o).length!==s&&(await bN(this),this.emit("load"));let a=Math.trunc(ie()-n);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(t=this.result){return $N(t,this.config)}async warmup(t){let n=ie(),s=await zN(this,t),r=ie();return this.performance.warmup=Math.trunc(r-n),s}async profile(t,n){let s=await this.tf.profile(()=>this.detect(t,n)),r={};for(let i of s.kernels)r[i.name]?r[i.name]+=i.kernelTimeMs:r[i.name]=i.kernelTimeMs;let a=[];Object.entries(r).forEach(i=>a.push({name:i[0],ms:i[1]})),a.sort((i,l)=>l.ms-i.ms),a.length=20;let o={};for(let i of a)o[i.name]=i.ms;return o}async detect(t,n){return this.state="detect",new Promise(async s=>{var g,y,x,A,b,w,C,S,E,R,F,_,P,T,O,G,K,z,j,W,Q,te;this.state="config";let r;this.config=En(this.config,n),this.state="check";let a=nd(this,W0).call(this,t);a&&(J(a,t),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:a}));let o=ie();await M0(this),await this.load(),r=ie(),this.state="image";let i=await Nc(t,this.config);if(this.process=i,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ie()-r):Math.trunc(ie()-r),this.analyze("Get Image:"),!i.tensor){this.config.debug&&J("could not convert input to tensor"),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),r=ie(),this.config.skipAllowed=await k8(this.config,i.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ie()-r):Math.trunc(ie()-r),this.analyze("Check Changed:");let l=[],c=[],u=[],d=[];this.state="detect:face",this.config.async?(l=this.config.face.enabled?b5(this,i.tensor):[],this.performance.face&&delete this.performance.face):(r=ie(),l=this.config.face.enabled?await b5(this,i.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(l=await l),this.analyze("Start Body:"),this.state="detect:body";let p=this.config.body.maxDetected===-1?En(this.config,{body:{maxDetected:this.config.face.enabled?1*l.length:1}}):this.config;this.config.async?(((g=this.config.body.modelPath)==null?void 0:g.includes("posenet"))?c=this.config.body.enabled?i5(i.tensor,p):[]:((y=this.config.body.modelPath)==null?void 0:y.includes("blazepose"))?c=this.config.body.enabled?yb(i.tensor,p):[]:((x=this.config.body.modelPath)==null?void 0:x.includes("efficientpose"))?c=this.config.body.enabled?Ib(i.tensor,p):[]:((A=this.config.body.modelPath)==null?void 0:A.includes("movenet"))&&(c=this.config.body.enabled?Qb(i.tensor,p):[]),this.performance.body&&delete this.performance.body):(r=ie(),((b=this.config.body.modelPath)==null?void 0:b.includes("posenet"))?c=this.config.body.enabled?await i5(i.tensor,p):[]:((w=this.config.body.modelPath)==null?void 0:w.includes("blazepose"))?c=this.config.body.enabled?await yb(i.tensor,p):[]:((C=this.config.body.modelPath)==null?void 0:C.includes("efficientpose"))?c=this.config.body.enabled?await Ib(i.tensor,p):[]:((S=this.config.body.modelPath)==null?void 0:S.includes("movenet"))&&(c=this.config.body.enabled?await Qb(i.tensor,p):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let h=this.config.hand.maxDetected===-1?En(this.config,{hand:{maxDetected:this.config.face.enabled?2*l.length:1}}):this.config;this.config.async?(((R=(E=this.config.hand.detector)==null?void 0:E.modelPath)==null?void 0:R.includes("handdetect"))?u=this.config.hand.enabled?Bb(i.tensor,h):[]:((_=(F=this.config.hand.detector)==null?void 0:F.modelPath)==null?void 0:_.includes("handtrack"))&&(u=this.config.hand.enabled?Gb(i.tensor,h):[]),this.performance.hand&&delete this.performance.hand):(r=ie(),((T=(P=this.config.hand.detector)==null?void 0:P.modelPath)==null?void 0:T.includes("handdetect"))?u=this.config.hand.enabled?await Bb(i.tensor,h):[]:((G=(O=this.config.hand.detector)==null?void 0:O.modelPath)==null?void 0:G.includes("handtrack"))&&(u=this.config.hand.enabled?await Gb(i.tensor,h):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?(((K=this.config.object.modelPath)==null?void 0:K.includes("nanodet"))?d=this.config.object.enabled?t5(i.tensor,this.config):[]:((z=this.config.object.modelPath)==null?void 0:z.includes("centernet"))&&(d=this.config.object.enabled?bb(i.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(r=ie(),((j=this.config.object.modelPath)==null?void 0:j.includes("nanodet"))?d=this.config.object.enabled?await t5(i.tensor,this.config):[]:((W=this.config.object.modelPath)==null?void 0:W.includes("centernet"))&&(d=this.config.object.enabled?await bb(i.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([l,c,u,d]=await Promise.all([l,c,u,d])),this.state="detect:gesture";let f=[];this.config.gesture.enabled&&(r=ie(),f=[...RN(l),...EN(c),...DN(u),..._N(l)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ie()-r):Math.trunc(ie()-r)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ie()-o):Math.trunc(ie()-o);let m=((te=(Q=this.process)==null?void 0:Q.tensor)==null?void 0:te.shape)||[];this.result={face:l,body:c,hand:u,gesture:f,object:d,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return MN(l,c,u,f,m)}},ne(i.tensor),this.emit("detect"),this.state="idle",s(this.result)})}};Wc=new WeakMap,jp=new WeakMap,qp=new WeakMap,W0=new WeakMap;return Kye;})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
