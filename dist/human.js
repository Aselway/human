/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var Human=(()=>{var Rh=Object.defineProperty;var oR=Object.getOwnPropertyDescriptor;var iR=Object.getOwnPropertyNames;var lR=Object.prototype.hasOwnProperty;var uR=(e,t,n)=>t in e?Rh(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var cR=e=>Rh(e,"__esModule",{value:!0});var id=(e,t)=>{for(var n in t)Rh(e,n,{get:t[n],enumerable:!0})},dR=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of iR(t))!lR.call(e,s)&&(n||s!=="default")&&Rh(e,s,{get:()=>t[s],enumerable:!(r=oR(t,s))||r.enumerable});return e};var pR=(e=>(t,n)=>e&&e.get(t)||(n=dR(cR({}),t,1),e&&e.set(t,n),n))(typeof WeakMap!="undefined"?new WeakMap:0);var fe=(e,t,n)=>(uR(e,typeof t!="symbol"?t+"":t,n),n),K5=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var ld=(e,t,n)=>(K5(e,t,"read from private field"),n?n.call(e):t.get(e)),ud=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},cd=(e,t,n,r)=>(K5(e,t,"write to private field"),r?r.call(e,n):t.set(e,n),n);var tAe={};id(tAe,{Human:()=>cE,default:()=>cE,defaults:()=>_a,env:()=>he});function J(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function Ve(e,t){let n=e.endsWith("/")?"":"/",s=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!s.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${s}`);return s}var ie=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function k2(e,t,n="config",r=[]){for(let s of Object.keys(t))if(typeof t[s]=="object")k2(e[s],t[s],s,r);else{let a=e&&typeof e[s]!="undefined";a||r.push({reason:"unknown property",where:`${n}.${s} = ${t[s]}`});let o=e&&typeof e[s]==typeof t[s];a&&!o&&r.push({reason:"property type mismatch",where:`${n}.${s} = ${t[s]}`,expected:typeof e[s]})}return t.debug&&n==="config"&&r.length>0&&J("invalid configuration",r),r}function yn(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,r)=>(Object.keys(r||{}).forEach(s=>{let a=n[s],o=r[s];Array.isArray(a)&&Array.isArray(o)?n[s]=a.concat(...o):t(a)&&t(o)?n[s]=yn(a,o):n[s]=o}),n),{})}var _a={backend:"",modelBasePath:"",wasmPath:"",debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var We={};id(We,{Abs:()=>yi,Acos:()=>uu,Acosh:()=>cu,AdadeltaOptimizer:()=>Hf,AdagradOptimizer:()=>jf,AdamOptimizer:()=>qf,AdamaxOptimizer:()=>Xf,Add:()=>Zs,AddN:()=>Fa,All:()=>du,Any:()=>pu,ArgMax:()=>Oa,ArgMin:()=>hu,Asin:()=>fu,Asinh:()=>mu,Atan:()=>gu,Atan2:()=>Au,Atanh:()=>yu,AvgPool:()=>Ma,AvgPool3D:()=>md,AvgPool3DGrad:()=>Lh,AvgPoolGrad:()=>zh,BackendWasm:()=>yT,BatchMatMul:()=>za,BatchToSpaceND:()=>Ai,Bincount:()=>Bh,BroadcastArgs:()=>Wh,BroadcastTo:()=>d3,Callback:()=>II,CallbackList:()=>pk,Cast:()=>La,Ceil:()=>Ba,ClipByValue:()=>Ys,Complex:()=>gd,ComplexAbs:()=>yd,Concat:()=>xi,Conv2D:()=>Wa,Conv2DBackpropFilter:()=>Vh,Conv2DBackpropInput:()=>Va,Conv3D:()=>Ad,Conv3DBackpropFilterV2:()=>Uh,Conv3DBackpropInputV2:()=>Gh,Cos:()=>Ua,Cosh:()=>Ga,CropAndResize:()=>vi,Cumsum:()=>bi,CustomCallback:()=>fk,DataStorage:()=>pd,DenseBincount:()=>Hh,DepthToSpace:()=>wi,DepthwiseConv2dNative:()=>Ha,DepthwiseConv2dNativeBackpropFilter:()=>jh,DepthwiseConv2dNativeBackpropInput:()=>qh,Diag:()=>Xh,Dilation2D:()=>xd,Dilation2DBackpropFilter:()=>Zh,Dilation2DBackpropInput:()=>Kh,ENV:()=>ps,EarlyStopping:()=>CI,Einsum:()=>bd,Elu:()=>qa,EluGrad:()=>Yh,Environment:()=>u3,Equal:()=>ki,Erf:()=>xu,Exp:()=>Xa,ExpandDims:()=>Ii,Expm1:()=>Si,FFT:()=>Jh,Fill:()=>bu,FlipLeftRight:()=>Ci,Floor:()=>Ka,FloorDiv:()=>Za,FromPixels:()=>Dd,FusedBatchNorm:()=>Ya,FusedConv2D:()=>Eo,FusedDepthwiseConv2D:()=>Ro,GPGPUContext:()=>Ac,GatherNd:()=>Ni,GatherV2:()=>Ti,GraphModel:()=>sS,Greater:()=>Ei,GreaterEqual:()=>Ja,History:()=>hk,IFFT:()=>Qh,Identity:()=>Qa,Imag:()=>vd,InputSpec:()=>Qt,IsFinite:()=>vu,IsInf:()=>wu,IsNan:()=>ku,KernelBackend:()=>au,LRN:()=>kd,LRNGrad:()=>tf,LayerVariable:()=>lk,LayersModel:()=>aa,LeakyRelu:()=>eo,Less:()=>Ri,LessEqual:()=>_i,LinSpace:()=>ef,Log:()=>to,Log1p:()=>Iu,LogSoftmax:()=>p3,LogicalAnd:()=>Di,LogicalNot:()=>Su,LogicalOr:()=>wd,MathBackendCPU:()=>ax,MathBackendWebGL:()=>_p,Max:()=>no,MaxPool:()=>so,MaxPool3D:()=>Id,MaxPool3DGrad:()=>rf,MaxPoolGrad:()=>nf,MaxPoolWithArgmax:()=>sf,Maximum:()=>ro,Mean:()=>ao,Min:()=>oo,Minimum:()=>io,MirrorPad:()=>lo,Mod:()=>Cu,MomentumOptimizer:()=>Kf,Multinomial:()=>af,Multiply:()=>uo,Neg:()=>Pi,NonMaxSuppressionV3:()=>Fi,NonMaxSuppressionV4:()=>Tu,NonMaxSuppressionV5:()=>Oi,NotEqual:()=>$i,OP_SCOPE_SUFFIX:()=>D3,OneHot:()=>zi,OnesLike:()=>Mi,Optimizer:()=>na,OptimizerConstructors:()=>Vo,Pack:()=>Li,PadV2:()=>co,Pool:()=>r9,Pow:()=>po,Prelu:()=>ho,Prod:()=>Bi,RMSPropOptimizer:()=>Zf,RNN:()=>oa,Range:()=>Nu,Rank:()=>b3,Real:()=>Sd,RealDiv:()=>ja,Reciprocal:()=>Eu,Reduction:()=>lr,Relu:()=>fo,Relu6:()=>go,Reshape:()=>Wi,ResizeBilinear:()=>mo,ResizeBilinearGrad:()=>lf,ResizeNearestNeighbor:()=>Ru,ResizeNearestNeighborGrad:()=>of,Reverse:()=>Vi,RotateWithOffset:()=>nl,Round:()=>Ui,Rsqrt:()=>yo,SGDOptimizer:()=>np,ScatterNd:()=>Gi,Select:()=>Hi,Selu:()=>_u,Sequential:()=>vm,Sigmoid:()=>xo,Sign:()=>Du,Sin:()=>Ao,Sinh:()=>qi,Slice:()=>ji,Softmax:()=>wo,Softplus:()=>Pu,SpaceToBatchND:()=>Xi,SparseFillEmptyRows:()=>Cd,SparseReshape:()=>$u,SparseSegmentMean:()=>Td,SparseSegmentSum:()=>Nd,SparseToDense:()=>Ed,SplitV:()=>Ki,Sqrt:()=>bo,Square:()=>Fu,SquaredDifference:()=>ko,Step:()=>To,StridedSlice:()=>Zi,StringNGrams:()=>Rd,StringSplit:()=>uf,StringToHashBucketFast:()=>cf,Sub:()=>Io,Sum:()=>vo,SymbolicTensor:()=>ks,Tan:()=>Yi,Tanh:()=>So,Tensor:()=>nt,TensorBuffer:()=>sn,Tile:()=>Js,TopK:()=>Ji,Transform:()=>Qi,Transpose:()=>Co,Unique:()=>df,Unpack:()=>el,UnsortedSegmentSum:()=>_d,Variable:()=>Bd,ZerosLike:()=>tl,_FusedMatMul:()=>No,abs:()=>an,acos:()=>gv,acosh:()=>yv,add:()=>ue,addN:()=>vf,all:()=>dy,any:()=>wf,argMax:()=>Mr,argMin:()=>Av,asin:()=>xv,asinh:()=>bv,atan:()=>vv,atan2:()=>wv,atanh:()=>kv,avgPool:()=>If,avgPool3d:()=>fy,backend:()=>gs,backend_util:()=>N,basicLSTMCell:()=>GD,batchNorm:()=>Gu,batchNorm2d:()=>Tv,batchNorm3d:()=>Nv,batchNorm4d:()=>Ev,batchToSpaceND:()=>Sf,bincount:()=>my,booleanMaskAsync:()=>nO,broadcastArgs:()=>Rv,broadcastTo:()=>qd,broadcast_util:()=>ll,browser:()=>Or,buffer:()=>Le,callbacks:()=>EG,cast:()=>ge,ceil:()=>_v,clipByValue:()=>br,clone:()=>Vn,complex:()=>Po,concat:()=>St,concat1d:()=>Dv,concat2d:()=>Hu,concat3d:()=>Pv,concat4d:()=>$v,constraints:()=>Ww,conv1d:()=>gy,conv2d:()=>zo,conv2dTranspose:()=>Ay,conv3d:()=>xy,conv3dTranspose:()=>Ov,copyRegisteredKernels:()=>i9,cos:()=>Cf,cosh:()=>by,cosineWindow:()=>Hy,cumsum:()=>vy,customGrad:()=>Fs,data:()=>aS,denseBincount:()=>Mv,deprecationWarn:()=>ly,depthToSpace:()=>zv,depthwiseConv2d:()=>Xd,deregisterOp:()=>DG,device_util:()=>zu,diag:()=>bP,dilation2d:()=>Lv,disableDeprecationWarnings:()=>oD,dispose:()=>te,disposeVariables:()=>iD,div:()=>de,divNoNan:()=>Bv,dot:()=>TP,dropout:()=>mw,einsum:()=>Wv,elu:()=>Kd,enableDebugMode:()=>aD,enableProdMode:()=>iy,enclosingPowerOfTwo:()=>gw,engine:()=>Dn,env:()=>Y,equal:()=>zr,erf:()=>Vv,exp:()=>Lr,expandDims:()=>Yt,expm1:()=>Uv,eye:()=>wy,fft:()=>Mf,fill:()=>ju,findBackend:()=>cy,findBackendFactory:()=>dD,floor:()=>Zd,floorDiv:()=>Hd,forceHalfFloat:()=>FC,fused:()=>Wo,gather:()=>qu,gatherND:()=>fw,gather_util:()=>J2,getBackend:()=>xr,getGradient:()=>R2,getKernel:()=>pf,getKernelsForBackend:()=>Ds,getThreadsCount:()=>bye,gpgpu_util:()=>lC,grad:()=>JP,grads:()=>QP,greater:()=>vr,greaterEqual:()=>hl,ifft:()=>Qd,imag:()=>Tf,image:()=>Ie,inTopKAsync:()=>hO,initializers:()=>Xw,input:()=>Mk,io:()=>or,irfft:()=>Ly,isFinite:()=>VP,isInf:()=>GP,isNaN:()=>Gv,keep:()=>xn,kernel_impls:()=>ts,layers:()=>ak,leakyRelu:()=>Nf,less:()=>ky,lessEqual:()=>fl,linalg:()=>Cw,linspace:()=>Hv,loadGraphModel:()=>ex,loadLayersModel:()=>BV,localResponseNormalization:()=>jv,log:()=>Br,log1p:()=>Ef,logSigmoid:()=>a$,logSoftmax:()=>Iy,logSumExp:()=>Yv,logicalAnd:()=>ys,logicalNot:()=>_f,logicalOr:()=>Ty,logicalXor:()=>y$,losses:()=>YM,matMul:()=>qe,math:()=>Z3,max:()=>bn,maxPool:()=>Df,maxPool3d:()=>Ny,maxPoolWithArgmax:()=>Jv,maximum:()=>ea,mean:()=>Gt,memory:()=>bf,meshgrid:()=>k$,metrics:()=>vI,min:()=>Lo,minimum:()=>Yd,mirrorPad:()=>Qv,mod:()=>Ku,model:()=>zV,models:()=>wI,moments:()=>Pf,movingAverage:()=>aO,mul:()=>L,multiRNNCell:()=>_$,multinomial:()=>ew,neg:()=>Lt,nextFrame:()=>Tw,norm:()=>Uy,notEqual:()=>Zu,oneHot:()=>Gd,ones:()=>wr,onesLike:()=>Wr,op:()=>U,outerProduct:()=>O$,pad:()=>es,pad1d:()=>L$,pad2d:()=>W$,pad3d:()=>U$,pad4d:()=>H$,pool:()=>Z$,pow:()=>Bo,prelu:()=>Ff,print:()=>G3,prod:()=>Ey,profile:()=>lD,rand:()=>tF,randomGamma:()=>aF,randomNormal:()=>tw,randomUniform:()=>Yu,range:()=>Ju,ready:()=>Wu,real:()=>Jd,reciprocal:()=>nw,registerBackend:()=>dl,registerCallbackConstructor:()=>WV,registerGradient:()=>h3,registerKernel:()=>Jr,registerOp:()=>_G,regularizers:()=>kI,relu:()=>Os,relu6:()=>Dy,removeBackend:()=>cD,reshape:()=>H,reverse:()=>Vr,reverse1d:()=>fF,reverse2d:()=>gF,reverse3d:()=>AF,reverse4d:()=>bF,rfft:()=>zf,round:()=>Py,rsqrt:()=>$y,scalar:()=>Te,scatterND:()=>hw,scatter_util:()=>Q2,selu:()=>Fy,separableConv2d:()=>rw,sequential:()=>LV,serialization:()=>ce,setBackend:()=>uy,setPlatform:()=>pD,setThreadsCount:()=>xye,setWasmPath:()=>Aye,setWasmPaths:()=>sb,setWebGLContext:()=>Vm,setdiff1dAsync:()=>sw,shared:()=>Om,sigmoid:()=>Pn,sign:()=>aw,signal:()=>ZM,sin:()=>Oy,sinh:()=>My,slice:()=>Fe,slice1d:()=>Of,slice2d:()=>zy,slice3d:()=>gl,slice4d:()=>yl,slice_util:()=>zt,softmax:()=>Qu,softplus:()=>Xu,spaceToBatchND:()=>$f,sparse:()=>tp,sparseToDense:()=>Gy,spectral:()=>KM,split:()=>Jt,sqrt:()=>$n,square:()=>bt,squaredDifference:()=>By,squeeze:()=>Ye,stack:()=>on,step:()=>ep,stridedSlice:()=>ow,string:()=>Gf,sub:()=>pe,sum:()=>we,sumOutType:()=>Wd,tan:()=>iw,tanh:()=>Uu,tensor:()=>ht,tensor1d:()=>Tt,tensor2d:()=>As,tensor3d:()=>J3,tensor4d:()=>jF,tensor5d:()=>qF,tensor6d:()=>XF,tensor_util:()=>fs,test_util:()=>hv,tidy:()=>X,tile:()=>Qr,time:()=>uD,topk:()=>lw,train:()=>Al,transpose:()=>st,truncatedNormal:()=>Lf,unique:()=>Wy,unregisterGradient:()=>o9,unregisterKernel:()=>a9,unsortedSegmentSum:()=>uw,unstack:()=>ir,upcastType:()=>Wn,util:()=>w,valueAndGrad:()=>e$,valueAndGrads:()=>t$,variable:()=>cw,variableGrads:()=>qv,version:()=>Gp,version_converter:()=>FH,version_core:()=>oy,version_cpu:()=>vq,version_layers:()=>T1,version_wasm:()=>vye,version_webgl:()=>Gee,webgl:()=>Hee,webgl_util:()=>D7,webgpu:()=>p6,where:()=>Gn,whereAsync:()=>Vy,zeros:()=>Ht,zerosLike:()=>at});var hR=Object.create,_h=Object.defineProperty,fR=Object.getOwnPropertyDescriptor,mR=Object.getOwnPropertyNames,gR=Object.getPrototypeOf,yR=Object.prototype.hasOwnProperty,Z5=e=>_h(e,"__esModule",{value:!0}),rn=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},Me=(e,t)=>{Z5(e);for(var n in t)_h(e,n,{get:t[n],enumerable:!0})},AR=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of mR(t))!yR.call(e,r)&&r!=="default"&&_h(e,r,{get:()=>t[r],enumerable:!(n=fR(t,r))||n.enumerable});return e},fi=e=>AR(Z5(_h(e!=null?hR(gR(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),xR=rn({"src/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(P){}function r(P,T,O){this.low=P|0,this.high=T|0,this.unsigned=!!O}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function s(P){return(P&&P.__isLong__)===!0}r.isLong=s;var a={},o={};function i(P,T){var O,G,K;return T?(P>>>=0,(K=0<=P&&P<256)&&(G=o[P],G)?G:(O=c(P,(P|0)<0?-1:0,!0),K&&(o[P]=O),O)):(P|=0,(K=-128<=P&&P<128)&&(G=a[P],G)?G:(O=c(P,P<0?-1:0,!1),K&&(a[P]=O),O))}r.fromInt=i;function l(P,T){if(isNaN(P))return T?b:A;if(T){if(P<0)return b;if(P>=g)return R}else{if(P<=-y)return F;if(P+1>=y)return E}return P<0?l(-P,T).neg():c(P%m|0,P/m|0,T)}r.fromNumber=l;function c(P,T,O){return new r(P,T,O)}r.fromBits=c;var u=Math.pow;function d(P,T,O){if(P.length===0)throw Error("empty string");if(P==="NaN"||P==="Infinity"||P==="+Infinity"||P==="-Infinity")return A;if(typeof T=="number"?(O=T,T=!1):T=!!T,O=O||10,O<2||36<O)throw RangeError("radix");var G;if((G=P.indexOf("-"))>0)throw Error("interior hyphen");if(G===0)return d(P.substring(1),T,O).neg();for(var K=l(u(O,8)),z=A,j=0;j<P.length;j+=8){var W=Math.min(8,P.length-j),Q=parseInt(P.substring(j,j+W),O);if(W<8){var ne=l(u(O,W));z=z.mul(ne).add(l(Q))}else z=z.mul(K),z=z.add(l(Q))}return z.unsigned=T,z}r.fromString=d;function p(P,T){return typeof P=="number"?l(P,T):typeof P=="string"?d(P,T):c(P.low,P.high,typeof T=="boolean"?T:P.unsigned)}r.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,y=g/2,x=i(f),A=i(0);r.ZERO=A;var b=i(0,!0);r.UZERO=b;var v=i(1);r.ONE=v;var C=i(1,!0);r.UONE=C;var I=i(-1);r.NEG_ONE=I;var E=c(4294967295|0,2147483647|0,!1);r.MAX_VALUE=E;var R=c(4294967295|0,4294967295|0,!0);r.MAX_UNSIGNED_VALUE=R;var F=c(0,2147483648|0,!1);r.MIN_VALUE=F;var _=r.prototype;_.toInt=function(){return this.unsigned?this.low>>>0:this.low},_.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},_.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(F)){var O=l(T),G=this.div(O),K=G.mul(O).sub(this);return G.toString(T)+K.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var z=l(u(T,6),this.unsigned),j=this,W="";;){var Q=j.div(z),ne=j.sub(Q.mul(z)).toInt()>>>0,oe=ne.toString(T);if(j=Q,j.isZero())return oe+W;for(;oe.length<6;)oe="0"+oe;W=""+oe+W}},_.getHighBits=function(){return this.high},_.getHighBitsUnsigned=function(){return this.high>>>0},_.getLowBits=function(){return this.low},_.getLowBitsUnsigned=function(){return this.low>>>0},_.getNumBitsAbs=function(){if(this.isNegative())return this.eq(F)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,O=31;O>0&&(T&1<<O)==0;O--);return this.high!=0?O+33:O+1},_.isZero=function(){return this.high===0&&this.low===0},_.eqz=_.isZero,_.isNegative=function(){return!this.unsigned&&this.high<0},_.isPositive=function(){return this.unsigned||this.high>=0},_.isOdd=function(){return(this.low&1)===1},_.isEven=function(){return(this.low&1)===0},_.equals=function(T){return s(T)||(T=p(T)),this.unsigned!==T.unsigned&&this.high>>>31===1&&T.high>>>31===1?!1:this.high===T.high&&this.low===T.low},_.eq=_.equals,_.notEquals=function(T){return!this.eq(T)},_.neq=_.notEquals,_.ne=_.notEquals,_.lessThan=function(T){return this.comp(T)<0},_.lt=_.lessThan,_.lessThanOrEqual=function(T){return this.comp(T)<=0},_.lte=_.lessThanOrEqual,_.le=_.lessThanOrEqual,_.greaterThan=function(T){return this.comp(T)>0},_.gt=_.greaterThan,_.greaterThanOrEqual=function(T){return this.comp(T)>=0},_.gte=_.greaterThanOrEqual,_.ge=_.greaterThanOrEqual,_.compare=function(T){if(s(T)||(T=p(T)),this.eq(T))return 0;var O=this.isNegative(),G=T.isNegative();return O&&!G?-1:!O&&G?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},_.comp=_.compare,_.negate=function(){return!this.unsigned&&this.eq(F)?F:this.not().add(v)},_.neg=_.negate,_.add=function(T){s(T)||(T=p(T));var O=this.high>>>16,G=this.high&65535,K=this.low>>>16,z=this.low&65535,j=T.high>>>16,W=T.high&65535,Q=T.low>>>16,ne=T.low&65535,oe=0,Z=0,ae=0,se=0;return se+=z+ne,ae+=se>>>16,se&=65535,ae+=K+Q,Z+=ae>>>16,ae&=65535,Z+=G+W,oe+=Z>>>16,Z&=65535,oe+=O+j,oe&=65535,c(ae<<16|se,oe<<16|Z,this.unsigned)},_.subtract=function(T){return s(T)||(T=p(T)),this.add(T.neg())},_.sub=_.subtract,_.multiply=function(T){if(this.isZero())return A;if(s(T)||(T=p(T)),n){var O=n.mul(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}if(T.isZero())return A;if(this.eq(F))return T.isOdd()?F:A;if(T.eq(F))return this.isOdd()?F:A;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(x)&&T.lt(x))return l(this.toNumber()*T.toNumber(),this.unsigned);var G=this.high>>>16,K=this.high&65535,z=this.low>>>16,j=this.low&65535,W=T.high>>>16,Q=T.high&65535,ne=T.low>>>16,oe=T.low&65535,Z=0,ae=0,se=0,me=0;return me+=j*oe,se+=me>>>16,me&=65535,se+=z*oe,ae+=se>>>16,se&=65535,se+=j*ne,ae+=se>>>16,se&=65535,ae+=K*oe,Z+=ae>>>16,ae&=65535,ae+=z*ne,Z+=ae>>>16,ae&=65535,ae+=j*Q,Z+=ae>>>16,ae&=65535,Z+=G*oe+K*ne+z*Q+j*W,Z&=65535,c(se<<16|me,Z<<16|ae,this.unsigned)},_.mul=_.multiply,_.divide=function(T){if(s(T)||(T=p(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var O=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:A;var G,K,z;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return b;if(T.gt(this.shru(1)))return C;z=b}else{if(this.eq(F)){if(T.eq(v)||T.eq(I))return F;if(T.eq(F))return v;var j=this.shr(1);return G=j.div(T).shl(1),G.eq(A)?T.isNegative()?v:I:(K=this.sub(T.mul(G)),z=G.add(K.div(T)),z)}else if(T.eq(F))return this.unsigned?b:A;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();z=A}for(K=this;K.gte(T);){G=Math.max(1,Math.floor(K.toNumber()/T.toNumber()));for(var W=Math.ceil(Math.log(G)/Math.LN2),Q=W<=48?1:u(2,W-48),ne=l(G),oe=ne.mul(T);oe.isNegative()||oe.gt(K);)G-=Q,ne=l(G,this.unsigned),oe=ne.mul(T);ne.isZero()&&(ne=v),z=z.add(ne),K=K.sub(oe)}return z},_.div=_.divide,_.modulo=function(T){if(s(T)||(T=p(T)),n){var O=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return c(O,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},_.mod=_.modulo,_.rem=_.modulo,_.not=function(){return c(~this.low,~this.high,this.unsigned)},_.and=function(T){return s(T)||(T=p(T)),c(this.low&T.low,this.high&T.high,this.unsigned)},_.or=function(T){return s(T)||(T=p(T)),c(this.low|T.low,this.high|T.high,this.unsigned)},_.xor=function(T){return s(T)||(T=p(T)),c(this.low^T.low,this.high^T.high,this.unsigned)},_.shiftLeft=function(T){return s(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?c(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):c(0,this.low<<T-32,this.unsigned)},_.shl=_.shiftLeft,_.shiftRight=function(T){return s(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?c(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):c(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},_.shr=_.shiftRight,_.shiftRightUnsigned=function(T){if(s(T)&&(T=T.toInt()),T&=63,T===0)return this;var O=this.high;if(T<32){var G=this.low;return c(G>>>T|O<<32-T,O>>>T,this.unsigned)}else return T===32?c(O,0,this.unsigned):c(O>>>T-32,0,this.unsigned)},_.shru=_.shiftRightUnsigned,_.shr_u=_.shiftRightUnsigned,_.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},_.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},_.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},_.toBytesLE=function(){var T=this.high,O=this.low;return[O&255,O>>>8&255,O>>>16&255,O>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},_.toBytesBE=function(){var T=this.high,O=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,O>>>24,O>>>16&255,O>>>8&255,O&255]},r.fromBytes=function(T,O,G){return G?r.fromBytesLE(T,O):r.fromBytesBE(T,O)},r.fromBytesLE=function(T,O){return new r(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,O)},r.fromBytesBE=function(T,O){return new r(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],O)}}}),bR=rn({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),vR=rn({"(disabled):util"(){}}),wR=rn({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,r,s){function a(c){var u=this,d=l();u.next=function(){var p=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=p-(u.c=p|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(c),u.s0<0&&(u.s0+=1),u.s1-=d(c),u.s1<0&&(u.s1+=1),u.s2-=d(c),u.s2<0&&(u.s2+=1),d=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var d=new a(c),p=u&&u.state,h=d.next;return h.int32=function(){return d.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&o(p,d),h.state=function(){return o(d,{})}),h}function l(){var c=4022871197,u=function(d){d=String(d);for(var p=0;p<d.length;p++){c+=d.charCodeAt(p);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),kR=rn({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,r,s){function a(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),IR=rn({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,r,s){function a(l){var c=this,u="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var d=0;d<u.length+64;d++)c.x^=u.charCodeAt(d)|0,d==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),SR=rn({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,r,s){function a(l){var c=this;c.next=function(){var d=c.x,p=c.i,h,f,m;return h=d[p],h^=h>>>7,f=h^h<<24,h=d[p+1&7],f^=h^h>>>10,h=d[p+3&7],f^=h^h>>>3,h=d[p+4&7],f^=h^h<<7,h=d[p+7&7],h=h^h<<13,f^=h^h<<9,d[p]=f,c.i=p+1&7,f};function u(d,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],d.x=m,d.i=0,h=256;h>0;--h)d.next()}u(c,l)}function o(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.x&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),CR=rn({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,r,s){function a(l){var c=this;c.next=function(){var d=c.w,p=c.X,h=c.i,f,m;return c.w=d=d+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,c.i=h,m+(d^d>>>16)|0};function u(d,p){var h,f,m,g,y,x=[],A=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,A=Math.max(A,p.length)),m=0,g=-32;g<A;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=x[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(x[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;d.w=y,d.X=x,d.i=m}u(c,l)}function o(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(d.X&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),TR=rn({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,r,s){function a(l){var c=this,u="";c.next=function(){var p=c.b,h=c.c,f=c.d,m=c.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,c.b=p=p<<20^p>>>12^h,c.c=h=h-f|0,c.d=f<<16^h>>>16^m,c.a=m-p|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var d=0;d<u.length+20;d++)c.b^=u.charCodeAt(d)|0,c.next()}function o(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new a(l),d=c&&c.state,p=function(){return(u.next()>>>0)/4294967296};return p.double=function(){do var h=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=u.next,p.quick=p,d&&(typeof d=="object"&&o(d,u),p.state=function(){return o(u,{})}),p}r&&r.exports?r.exports=i:s&&s.amd?s(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),NR=rn({"(disabled):crypto"(){}}),ER=rn({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,r,s){var a=256,o=6,i=52,l="random",c=s.pow(a,o),u=s.pow(2,i),d=u*2,p=a-1,h;function f(v,C,I){var E=[];C=C==!0?{entropy:!0}:C||{};var R=x(y(C.entropy?[v,b(r)]:v==null?A():v,3),E),F=new m(E),_=function(){for(var P=F.g(o),T=c,O=0;P<u;)P=(P+O)*a,T*=a,O=F.g(1);for(;P>=d;)P/=2,T/=2,O>>>=1;return(P+O)/T};return _.int32=function(){return F.g(4)|0},_.quick=function(){return F.g(4)/4294967296},_.double=_,x(b(F.S),r),(C.pass||I||function(P,T,O,G){return G&&(G.S&&g(G,F),P.state=function(){return g(F,{})}),O?(s[l]=P,T):P})(_,R,"global"in C?C.global:this==s,C.state)}function m(v){var C,I=v.length,E=this,R=0,F=E.i=E.j=0,_=E.S=[];for(I||(v=[I++]);R<a;)_[R]=R++;for(R=0;R<a;R++)_[R]=_[F=p&F+v[R%I]+(C=_[R])],_[F]=C;(E.g=function(P){for(var T,O=0,G=E.i,K=E.j,z=E.S;P--;)T=z[G=p&G+1],O=O*a+z[p&(z[G]=z[K=p&K+T])+(z[K]=T)];return E.i=G,E.j=K,O})(a)}function g(v,C){return C.i=v.i,C.j=v.j,C.S=v.S.slice(),C}function y(v,C){var I=[],E=typeof v,R;if(C&&E=="object")for(R in v)try{I.push(y(v[R],C-1))}catch(F){}return I.length?I:E=="string"?v:v+"\0"}function x(v,C){for(var I=v+"",E,R=0;R<I.length;)C[p&R]=p&(E^=C[p&R]*19)+I.charCodeAt(R++);return b(C)}function A(){try{var v;return h&&(v=h.randomBytes)?v=v(a):(v=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(v)),b(v)}catch(E){var C=n.navigator,I=C&&C.plugins;return[+new Date,n,I,n.screen,b(r)]}}function b(v){return String.fromCharCode.apply(0,v)}if(x(s.random(),r),typeof t=="object"&&t.exports){t.exports=f;try{h=NR()}catch(v){}}else typeof define=="function"&&define.amd?define(function(){return f}):s["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),Dh=rn({"src/node_modules/seedrandom/index.js"(e,t){var n=wR(),r=kR(),s=IR(),a=SR(),o=CR(),i=TR(),l=ER();l.alea=n,l.xor128=r,l.xorwow=s,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),Y5=rn({"(disabled):src/node_modules/string_decoder/index.js"(){}}),Ph=rn({"(disabled):fs"(){}}),dd=rn({"(disabled):path"(){}}),RR=rn({"(disabled):worker_threads"(){}}),_R=rn({"(disabled):perf_hooks"(){}}),DR=rn({"(disabled):os"(){}}),PR=rn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(s){s=s||{};function a(){return se.buffer!=ut&&rr(se.buffer),gr}function o(){return se.buffer!=ut&&rr(se.buffer),Sn}function i(){return se.buffer!=ut&&rr(se.buffer),yr}function l(){return se.buffer!=ut&&rr(se.buffer),_r}function c(){return se.buffer!=ut&&rr(se.buffer),Dr}var u=typeof s!="undefined"?s:{},d,p;u.ready=new Promise(function(S,D){d=S,p=D});var h;typeof process!="undefined"&&process.listeners&&(h={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f={},m;for(m in u)u.hasOwnProperty(m)&&(f[m]=u[m]);var g=[],y="./this.program",x=function(S,D){throw D},A=!1,b=!1,v=!1,C=!1;A=typeof window=="object",b=typeof importScripts=="function",v=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=!A&&!v&&!b;var I=u.ENVIRONMENT_IS_PTHREAD||!1;I&&(ut=u.buffer);var E="";function R(S){return u.locateFile?u.locateFile(S,E):E+S}var F,_,P,T,O,G;if(v){b?E=dd().dirname(E)+"/":E=__dirname+"/",F=function(D,B){return O||(O=Ph()),G||(G=dd()),D=G.normalize(D),O.readFileSync(D,B?null:"utf8")},P=function(D){var B=F(D,!0);return B.buffer||(B=new Uint8Array(B)),Se(B.buffer),B},process.argv.length>1&&(y=process.argv[1].replace(/\\/g,"/")),g=process.argv.slice(2),process.on("uncaughtException",function(S){if(!(S instanceof od))throw S}),process.on("unhandledRejection",qs),x=function(S){process.exit(S)},u.inspect=function(){return"[Emscripten Module object]"};var K;try{K=RR()}catch(S){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),S}global.Worker=K.Worker}else C?(typeof read!="undefined"&&(F=function(D){return read(D)}),P=function(D){var B;return typeof readbuffer=="function"?new Uint8Array(readbuffer(D)):(B=read(D,"binary"),Se(typeof B=="object"),B)},typeof scriptArgs!="undefined"?g=scriptArgs:typeof arguments!="undefined"&&(g=arguments),typeof quit=="function"&&(x=function(S){quit(S)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(A||b)&&(b?E=self.location.href:typeof document!="undefined"&&document.currentScript&&(E=document.currentScript.src),typeof r!="undefined"&&r&&(E=r),E.indexOf("blob:")!==0?E=E.substr(0,E.lastIndexOf("/")+1):E="",v?(F=function(D,B){return O||(O=Ph()),G||(G=dd()),D=G.normalize(D),O.readFileSync(D,B?null:"utf8")},P=function(D){var B=F(D,!0);return B.buffer||(B=new Uint8Array(B)),Se(B.buffer),B}):(F=function(S){var D=new XMLHttpRequest;return D.open("GET",S,!1),D.send(null),D.responseText},b&&(P=function(S){var D=new XMLHttpRequest;return D.open("GET",S,!1),D.responseType="arraybuffer",D.send(null),new Uint8Array(D.response)}),_=function(S,D,B){var ee=new XMLHttpRequest;ee.open("GET",S,!0),ee.responseType="arraybuffer",ee.onload=function(){if(ee.status==200||ee.status==0&&ee.response){D(ee.response);return}B()},ee.onerror=B,ee.send(null)}),T=function(S){document.title=S});v&&typeof performance=="undefined"&&(global.performance=_R().performance);var z=u.print||console.log.bind(console),j=u.printErr||console.warn.bind(console);for(m in f)f.hasOwnProperty(m)&&(u[m]=f[m]);f=null,u.arguments&&(g=u.arguments),u.thisProgram&&(y=u.thisProgram),u.quit&&(x=u.quit);function W(S){W.shown||(W.shown={}),W.shown[S]||(W.shown[S]=1,j(S))}var Q=Atomics.load,ne=Atomics.store,oe=Atomics.compareExchange,Z;u.wasmBinary&&(Z=u.wasmBinary);var ae=u.noExitRuntime||!0;typeof WebAssembly!="object"&&qs("no native wasm support detected");var se,me,be=!1,Ne;function Se(S,D){S||qs("Assertion failed: "+D)}function Pe(S){var D=u["_"+S];return Se(D,"Cannot call unknown function "+S+", make sure it is exported"),D}function ze(S,D,B,ee,xe){var ye={string:function(zn){var su=0;if(zn!=null&&zn!==0){var X5=(zn.length<<2)+1;su=tu(X5),lt(zn,su,X5)}return su},array:function(zn){var su=tu(zn.length);return Dt(zn,su),su}};function Ae(zn){return D==="string"?et(zn):D==="boolean"?Boolean(zn):zn}var Ee=Pe(S),ft=[],gn=0;if(ee)for(var nn=0;nn<ee.length;nn++){var Ra=ye[B[nn]];Ra?(gn===0&&(gn=ad()),ft[nn]=Ra(ee[nn])):ft[nn]=ee[nn]}var ru=Ee.apply(null,ft);return ru=Ae(ru),gn!==0&&eu(gn),ru}function Qe(S,D,B,ee){B=B||[];var xe=B.every(function(Ae){return Ae==="number"}),ye=D!=="string";return ye&&xe&&!ee?Pe(S):function(){return ze(S,D,B,arguments,ee)}}function Ze(S,D,B){for(var ee=D+B,xe="";!(D>=ee);){var ye=S[D++];if(!ye)return xe;if(!(ye&128)){xe+=String.fromCharCode(ye);continue}var Ae=S[D++]&63;if((ye&224)==192){xe+=String.fromCharCode((ye&31)<<6|Ae);continue}var Ee=S[D++]&63;if((ye&240)==224?ye=(ye&15)<<12|Ae<<6|Ee:ye=(ye&7)<<18|Ae<<12|Ee<<6|S[D++]&63,ye<65536)xe+=String.fromCharCode(ye);else{var ft=ye-65536;xe+=String.fromCharCode(55296|ft>>10,56320|ft&1023)}}return xe}function et(S,D){return S?Ze(o(),S,D):""}function yt(S,D,B,ee){if(!(ee>0))return 0;for(var xe=B,ye=B+ee-1,Ae=0;Ae<S.length;++Ae){var Ee=S.charCodeAt(Ae);if(Ee>=55296&&Ee<=57343){var ft=S.charCodeAt(++Ae);Ee=65536+((Ee&1023)<<10)|ft&1023}if(Ee<=127){if(B>=ye)break;D[B++]=Ee}else if(Ee<=2047){if(B+1>=ye)break;D[B++]=192|Ee>>6,D[B++]=128|Ee&63}else if(Ee<=65535){if(B+2>=ye)break;D[B++]=224|Ee>>12,D[B++]=128|Ee>>6&63,D[B++]=128|Ee&63}else{if(B+3>=ye)break;D[B++]=240|Ee>>18,D[B++]=128|Ee>>12&63,D[B++]=128|Ee>>6&63,D[B++]=128|Ee&63}}return D[B]=0,B-xe}function lt(S,D,B){return yt(S,o(),D,B)}function At(S){for(var D=0,B=0;B<S.length;++B){var ee=S.charCodeAt(B);ee>=55296&&ee<=57343&&(ee=65536+((ee&1023)<<10)|S.charCodeAt(++B)&1023),ee<=127?++D:ee<=2047?D+=2:ee<=65535?D+=3:D+=4}return D}function Dt(S,D){a().set(S,D)}function tr(S,D){return S%D>0&&(S+=D-S%D),S}var ut,gr,Sn,Xr,nr,yr,_r,Kr,Dr;function rr(S){ut=S,u.HEAP8=gr=new Int8Array(S),u.HEAP16=Xr=new Int16Array(S),u.HEAP32=yr=new Int32Array(S),u.HEAPU8=Sn=new Uint8Array(S),u.HEAPU16=nr=new Uint16Array(S),u.HEAPU32=_r=new Uint32Array(S),u.HEAPF32=Kr=new Float32Array(S),u.HEAPF64=Dr=new Float64Array(S)}var ka=u.INITIAL_MEMORY||16777216;if(I)se=u.wasmMemory,ut=u.buffer;else if(u.wasmMemory)se=u.wasmMemory;else if(se=new WebAssembly.Memory({initial:ka/65536,maximum:2147483648/65536,shared:!0}),!(se.buffer instanceof SharedArrayBuffer))throw j("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");se&&(ut=se.buffer),ka=ut.byteLength,rr(ut);var Rn,Ia=[],Pr=[],Xc=[],Kc=[],js=[],rh=!1,Y0=!1;I||Pr.push({func:function(){vh()}});function sh(){if(!I){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)J0(u.preRun.shift());Kl(Ia)}}function ah(){rh=!0,!I&&Kl(Pr)}function oh(){I||Kl(Xc)}function sr(){I||(Y0=!0)}function ih(){if(!I){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)Q0(u.postRun.shift());Kl(js)}}function J0(S){Ia.unshift(S)}function Q0(S){js.unshift(S)}var Zr=0,Zc=null,ci=null;function eg(S){Se(!I,"addRunDependency cannot be used in a pthread worker"),Zr++,u.monitorRunDependencies&&u.monitorRunDependencies(Zr)}function tg(S){if(Zr--,u.monitorRunDependencies&&u.monitorRunDependencies(Zr),Zr==0&&(Zc!==null&&(clearInterval(Zc),Zc=null),ci)){var D=ci;ci=null,D()}}u.preloadedImages={},u.preloadedAudios={};function qs(S){u.onAbort&&u.onAbort(S),I&&console.error("Pthread aborting at "+new Error().stack),S+="",j(S),be=!0,Ne=1,S="abort("+S+"). Build with -s ASSERTIONS=1 for more info.";var D=new WebAssembly.RuntimeError(S);throw p(D),D}function di(S,D){return String.prototype.startsWith?S.startsWith(D):S.indexOf(D)===0}var ng="data:application/octet-stream;base64,";function lh(S){return di(S,ng)}var rg="file://";function uh(S){return di(S,rg)}var ar="tfjs-backend-wasm-threaded-simd.wasm";lh(ar)||(ar=R(ar));function sg(S){try{if(S==ar&&Z)return new Uint8Array(Z);if(P)return P(S);throw"both async and sync fetching of the wasm failed"}catch(D){qs(D)}}function ch(){if(!Z&&(A||b)){if(typeof fetch=="function"&&!uh(ar))return fetch(ar,{credentials:"same-origin"}).then(function(S){if(!S.ok)throw"failed to load wasm binary file at '"+ar+"'";return S.arrayBuffer()}).catch(function(){return sg(ar)});if(_)return new Promise(function(S,D){_(ar,function(B){S(new Uint8Array(B))},D)})}return Promise.resolve().then(function(){return sg(ar)})}function ag(){var S={a:Yg};function D(Ae,Ee){var ft=Ae.exports;if(u.asm=ft,Rn=u.asm.nb,me=Ee,!I){var gn=De.unusedWorkers.length;De.unusedWorkers.forEach(function(nn){De.loadWasmModuleToWorker(nn,function(){--gn||tg("wasm-instantiate")})})}}I||eg("wasm-instantiate");function B(Ae){D(Ae.instance,Ae.module)}function ee(Ae){return ch().then(function(Ee){return WebAssembly.instantiate(Ee,S)}).then(Ae,function(Ee){j("failed to asynchronously prepare wasm: "+Ee),qs(Ee)})}function xe(){return!Z&&typeof WebAssembly.instantiateStreaming=="function"&&!lh(ar)&&!uh(ar)&&typeof fetch=="function"?fetch(ar,{credentials:"same-origin"}).then(function(Ae){var Ee=WebAssembly.instantiateStreaming(Ae,S);return Ee.then(B,function(ft){return j("wasm streaming compile failed: "+ft),j("falling back to ArrayBuffer instantiation"),ee(B)})}):ee(B)}if(u.instantiateWasm)try{var ye=u.instantiateWasm(S,D);return ye}catch(Ae){return j("Module.instantiateWasm callback failed with error: "+Ae),!1}return xe().catch(p),{}}var dh={10216:function(){throw"Canceled!"},10234:function(S,D){setTimeout(function(){V5(S,D)},0)}};function og(){De.initRuntime()}function Kl(S){for(;S.length>0;){var D=S.shift();if(typeof D=="function"){D(u);continue}var B=D.func;typeof B=="number"?D.arg===void 0?Rn.get(B)():Rn.get(B)(D.arg):B(D.arg===void 0?null:D.arg)}}var Sa={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function Yc(S,D){if(S<=0||S>a().length||S&!0||D<0)return-28;if(D==0)return 0;D>=2147483647&&(D=1/0);var B=Atomics.load(i(),nu>>2),ee=0;if(B==S){var xe=Atomics.compareExchange(i(),nu>>2,B,0);if(xe==B&&(--D,ee=1,D<=0))return 1}var ye=Atomics.notify(i(),S>>2,D);if(ye>=0)return ye+ee;throw"Atomics.notify returned an unexpected value "+ye}u._emscripten_futex_wake=Yc;function ig(S){if(I)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in killThread!";i()[S+12>>2]=0;var D=De.pthreads[S];D.worker.terminate(),De.freeThreadData(D),De.runningWorkers.splice(De.runningWorkers.indexOf(D.worker),1),D.worker.pthread=void 0}function lg(S){if(I)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cancelThread!";var D=De.pthreads[S];D.worker.postMessage({cmd:"cancel"})}function ph(S){if(I)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!S)throw"Internal Error! Null pthread_ptr in cleanupThread!";var D=De.pthreads[S];if(D){i()[S+12>>2]=0;var B=D.worker;De.returnWorkerToPool(B)}}var De={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var S=8,D=0;D<S;++D)De.allocateUnusedWorker()},initRuntime:function(){for(var S=hi(228),D=0;D<228/4;++D)l()[S/4+D]=0;i()[S+12>>2]=S;var B=S+152;i()[B>>2]=B;for(var ee=hi(512),D=0;D<128;++D)l()[ee/4+D]=0;Atomics.store(l(),S+100>>2,ee),Atomics.store(l(),S+40>>2,S),v2(S,!b,1),B5(S)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;De.threadExitHandlers.length>0;)De.threadExitHandlers.pop()();I&&Ea()&&L5()},runExitHandlersAndDeinitThread:function(S,D){Atomics.store(l(),S+56>>2,1),Atomics.store(l(),S+60>>2,0),De.runExitHandlers(),Atomics.store(l(),S+4>>2,D),Atomics.store(l(),S+0>>2,1),Yc(S+0,2147483647),v2(0,0,0)},threadExit:function(S){var D=Ea();D&&(De.runExitHandlersAndDeinitThread(D,S),I&&postMessage({cmd:"exit"}))},threadCancel:function(){De.runExitHandlersAndDeinitThread(Ea(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var S in De.pthreads){var D=De.pthreads[S];D&&D.worker&&De.returnWorkerToPool(D.worker)}De.pthreads={};for(var B=0;B<De.unusedWorkers.length;++B){var ee=De.unusedWorkers[B];ee.terminate()}De.unusedWorkers=[];for(var B=0;B<De.runningWorkers.length;++B){var ee=De.runningWorkers[B],D=ee.pthread;De.freeThreadData(D),ee.terminate()}De.runningWorkers=[]},freeThreadData:function(S){if(!!S){if(S.threadInfoStruct){var D=i()[S.threadInfoStruct+100>>2];i()[S.threadInfoStruct+100>>2]=0,sd(D),sd(S.threadInfoStruct)}S.threadInfoStruct=0,S.allocatedOwnStack&&S.stackBase&&sd(S.stackBase),S.stackBase=0,S.worker&&(S.worker.pthread=null)}},returnWorkerToPool:function(S){De.runWithoutMainThreadQueuedCalls(function(){delete De.pthreads[S.pthread.threadInfoStruct],De.unusedWorkers.push(S),De.runningWorkers.splice(De.runningWorkers.indexOf(S),1),De.freeThreadData(S.pthread),S.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(S){i()[q5>>2]=0;try{S()}finally{i()[q5>>2]=1}},receiveObjectTransfer:function(S){},loadWasmModuleToWorker:function(S,D){S.onmessage=function(B){var ee=B.data,xe=ee.cmd;if(S.pthread&&(De.currentProxiedOperationCallerThread=S.pthread.threadInfoStruct),ee.targetThread&&ee.targetThread!=Ea()){var ye=De.pthreads[ee.targetThread];ye?ye.worker.postMessage(B.data,ee.transferList):console.error('Internal error! Worker sent a message "'+xe+'" to target pthread '+ee.targetThread+", but that thread no longer exists!"),De.currentProxiedOperationCallerThread=void 0;return}if(xe==="processQueuedMainThreadWork")Ch();else if(xe==="spawnThread")xh(B.data);else if(xe==="cleanupThread")ph(ee.thread);else if(xe==="killThread")ig(ee.thread);else if(xe==="cancelThread")lg(ee.thread);else if(xe==="loaded")S.loaded=!0,D&&D(S),S.runPthread&&(S.runPthread(),delete S.runPthread);else if(xe==="print")z("Thread "+ee.threadId+": "+ee.text);else if(xe==="printErr")j("Thread "+ee.threadId+": "+ee.text);else if(xe==="alert")alert("Thread "+ee.threadId+": "+ee.text);else if(xe==="exit"){var Ae=S.pthread&&Atomics.load(l(),S.pthread.threadInfoStruct+64>>2);Ae&&De.returnWorkerToPool(S)}else if(xe==="exitProcess")try{sR(ee.returnCode)}catch(Ee){if(Ee instanceof od)return;throw Ee}else xe==="cancelDone"?De.returnWorkerToPool(S):xe==="objectTransfer"?De.receiveObjectTransfer(B.data):B.data.target==="setimmediate"?S.postMessage(B.data):j("worker sent an unknown command "+xe);De.currentProxiedOperationCallerThread=void 0},S.onerror=function(B){j("pthread sent an error! "+B.filename+":"+B.lineno+": "+B.message)},v&&(S.on("message",function(B){S.onmessage({data:B})}),S.on("error",function(B){S.onerror(B)}),S.on("exit",function(B){})),S.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:se,wasmModule:me})},allocateUnusedWorker:function(){var S=R("tfjs-backend-wasm-threaded-simd.worker.js");De.unusedWorkers.push(new Worker(S))},getNewWorker:function(){return De.unusedWorkers.length==0&&(De.allocateUnusedWorker(),De.loadWasmModuleToWorker(De.unusedWorkers[0])),De.unusedWorkers.length>0?De.unusedWorkers.pop():null},busySpinWait:function(S){for(var D=performance.now()+S;performance.now()<D;);}};function ug(S,D){H5(S,D),eu(S)}u.establishStackSpace=ug;function cg(){return ae}u.getNoExitRuntime=cg;function dg(S,D){return Rn.get(S)(D)}u.invokeEntryPoint=dg;function pg(S,D,B,ee){qs("Assertion failed: "+et(S)+", at: "+[D?et(D):"unknown filename",B,ee?et(ee):"unknown function"])}function hg(S,D){var B=_main(S,D)}var pi;v?pi=function(){var S=process.hrtime();return S[0]*1e3+S[1]/1e6}:I?pi=function(){return performance.now()-u.__performance_now_clock_drift}:typeof dateNow!="undefined"?pi=dateNow:pi=function(){return performance.now()};function fg(S){return i()[M5()>>2]=S,S}function mg(S,D){if(I)return Ca(1,1,S,D)}function gg(S,D){if(S==D)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:S,cmd:"processThreadQueue"});else{var B=De.pthreads[S],ee=B&&B.worker;if(!ee)return;ee.postMessage({cmd:"processThreadQueue"})}return 1}function yg(){qs()}function Ag(S,D,B){var ee=wg(D,B);return dh[S].apply(null,ee)}function xg(S,D){}function hh(S,D,B){if(S<=0||S>a().length||S&!0)return-28;if(A){if(Atomics.load(i(),S>>2)!=D)return-6;for(var xe=performance.now(),ye=xe+B,Ae=Atomics.exchange(i(),nu>>2,S);;){if(xe=performance.now(),xe>ye)return Ae=Atomics.exchange(i(),nu>>2,0),-73;if(Ae=Atomics.exchange(i(),nu>>2,0),Ae==0)break;if(Ch(),Atomics.load(i(),S>>2)!=D)return-6;Ae=Atomics.exchange(i(),nu>>2,S)}return 0}else{var ee=Atomics.wait(i(),S>>2,D,B);if(ee==="timed-out")return-73;if(ee==="not-equal")return-6;if(ee==="ok")return 0;throw"Atomics.wait returned an unexpected value "+ee}}function bg(S,D,B){o().copyWithin(S,D,D+B)}function vg(){return v?DR().cpus().length:navigator.hardwareConcurrency}function Ca(S,D){for(var B=arguments.length-2,ee=ad(),xe=B,ye=tu(xe*8),Ae=ye>>3,Ee=0;Ee<B;Ee++){var ft=arguments[2+Ee];c()[Ae+Ee]=ft}var gn=G5(S,xe,ye,D);return eu(ee),gn}var Jc=[],Qc=[];function wg(S,D){Qc.length=0;var B;for(D>>=2;B=o()[S++];){var ee=B<105;ee&&D&1&&D++,Qc.push(ee?c()[D++>>1]:i()[D]),++D}return Qc}function kg(S,D,B){Jc.length=D;for(var ee=B>>3,xe=0;xe<D;xe++)Jc[xe]=c()[ee+xe];var ye=S<0,Ae=ye?dh[-S-1]:Zg[S];return Ae.apply(null,Jc)}function Ig(){return o().length}function Sg(S){try{return se.grow(S-ut.byteLength+65535>>>16),rr(se.buffer),1}catch(D){}}function Cg(S){var D=Ig();if(S<=D)return!1;var B=2147483648;if(S>B)return!1;for(var ee=1;ee<=4;ee*=2){var xe=D*(1+.2/ee);xe=Math.min(xe,S+100663296);var ye=Math.min(B,tr(Math.max(S,xe),65536)),Ae=Sg(ye);if(Ae)return!0}return!1}var Ge={inEventHandler:0,removeAllEventListeners:function(){for(var S=Ge.eventHandlers.length-1;S>=0;--S)Ge._removeHandler(S);Ge.eventHandlers=[],Ge.deferredCalls=[]},registerRemoveEventListeners:function(){Ge.removeEventListenersRegistered||(Kc.push(Ge.removeAllEventListeners),Ge.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(S,D,B){function ee(Ae,Ee){if(Ae.length!=Ee.length)return!1;for(var ft in Ae)if(Ae[ft]!=Ee[ft])return!1;return!0}for(var xe in Ge.deferredCalls){var ye=Ge.deferredCalls[xe];if(ye.targetFunction==S&&ee(ye.argsList,B))return}Ge.deferredCalls.push({targetFunction:S,precedence:D,argsList:B}),Ge.deferredCalls.sort(function(Ae,Ee){return Ae.precedence<Ee.precedence})},removeDeferredCalls:function(S){for(var D=0;D<Ge.deferredCalls.length;++D)Ge.deferredCalls[D].targetFunction==S&&(Ge.deferredCalls.splice(D,1),--D)},canPerformEventHandlerRequests:function(){return Ge.inEventHandler&&Ge.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Ge.canPerformEventHandlerRequests())for(var S=0;S<Ge.deferredCalls.length;++S){var D=Ge.deferredCalls[S];Ge.deferredCalls.splice(S,1),--S,D.targetFunction.apply(null,D.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(S,D){for(var B=0;B<Ge.eventHandlers.length;++B)Ge.eventHandlers[B].target==S&&(!D||D==Ge.eventHandlers[B].eventTypeString)&&Ge._removeHandler(B--)},_removeHandler:function(S){var D=Ge.eventHandlers[S];D.target.removeEventListener(D.eventTypeString,D.eventListenerFunc,D.useCapture),Ge.eventHandlers.splice(S,1)},registerOrRemoveHandler:function(S){var D=function(xe){++Ge.inEventHandler,Ge.currentEventHandler=S,Ge.runDeferredCalls(),S.handlerFunc(xe),Ge.runDeferredCalls(),--Ge.inEventHandler};if(S.callbackfunc)S.eventListenerFunc=D,S.target.addEventListener(S.eventTypeString,D,S.useCapture),Ge.eventHandlers.push(S),Ge.registerRemoveEventListeners();else for(var B=0;B<Ge.eventHandlers.length;++B)Ge.eventHandlers[B].target==S.target&&Ge.eventHandlers[B].eventTypeString==S.eventTypeString&&Ge._removeHandler(B--)},queueEventHandlerOnThread_iiii:function(S,D,B,ee,xe){var ye=ad(),Ae=tu(12);i()[Ae>>2]=B,i()[Ae+4>>2]=ee,i()[Ae+8>>2]=xe,b2(0,S,637534208,D,ee,Ae),eu(ye)},getTargetThreadForEventCallback:function(S){switch(S){case 1:return 0;case 2:return De.currentProxiedOperationCallerThread;default:return S}},getNodeNameForTarget:function(S){return S?S==window?"#window":S==screen?"#screen":S&&S.nodeName?S.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Tg(S){var D=At(S)+1,B=hi(D);return lt(S,B,D),B}function Ng(S,D,B,ee){var xe=ad(),ye=tu(12),Ae=0;D&&(Ae=Tg(D)),i()[ye>>2]=Ae,i()[ye+4>>2]=B,i()[ye+8>>2]=ee,b2(0,S,657457152,0,Ae,ye),eu(xe)}function Eg(S,D,B,ee){D=D?et(D):"",Ng(S,D,B,ee)}function Rg(S){return S>2?et(S):S}var _g=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function Dg(S){S=Rg(S);var D=_g[S]||(typeof document!="undefined"?document.querySelector(S):void 0);return D}function ed(S){return Dg(S)}function fh(S,D,B){var ee=ed(S);if(!ee)return-4;if(ee.canvasSharedPtr&&(i()[ee.canvasSharedPtr>>2]=D,i()[ee.canvasSharedPtr+4>>2]=B),ee.offscreenCanvas||!ee.controlTransferredOffscreen){ee.offscreenCanvas&&(ee=ee.offscreenCanvas);var xe=!1;if(ee.GLctxObject&&ee.GLctxObject.GLctx){var ye=ee.GLctxObject.GLctx.getParameter(2978);xe=ye[0]===0&&ye[1]===0&&ye[2]===ee.width&&ye[3]===ee.height}ee.width=D,ee.height=B,xe&&ee.GLctxObject.GLctx.viewport(0,0,D,B)}else if(ee.canvasSharedPtr){var Ae=i()[ee.canvasSharedPtr+8>>2];return Eg(Ae,S,D,B),1}else return-4;return 0}function mh(S,D,B){return I?Ca(2,1,S,D,B):fh(S,D,B)}function Pg(S,D,B){var ee=ed(S);return ee?fh(S,D,B):mh(S,D,B)}function $g(S){}function Fg(S,D){}function Og(S){var D=S.getExtension("ANGLE_instanced_arrays");if(D)return S.vertexAttribDivisor=function(B,ee){D.vertexAttribDivisorANGLE(B,ee)},S.drawArraysInstanced=function(B,ee,xe,ye){D.drawArraysInstancedANGLE(B,ee,xe,ye)},S.drawElementsInstanced=function(B,ee,xe,ye,Ae){D.drawElementsInstancedANGLE(B,ee,xe,ye,Ae)},1}function Mg(S){var D=S.getExtension("OES_vertex_array_object");if(D)return S.createVertexArray=function(){return D.createVertexArrayOES()},S.deleteVertexArray=function(B){D.deleteVertexArrayOES(B)},S.bindVertexArray=function(B){D.bindVertexArrayOES(B)},S.isVertexArray=function(B){return D.isVertexArrayOES(B)},1}function zg(S){var D=S.getExtension("WEBGL_draw_buffers");if(D)return S.drawBuffers=function(B,ee){D.drawBuffersWEBGL(B,ee)},1}function Lg(S){return!!(S.multiDrawWebgl=S.getExtension("WEBGL_multi_draw"))}var pt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(D){pt.lastError||(pt.lastError=D)},getNewId:function(S){for(var D=pt.counter++,B=S.length;B<D;B++)S[B]=null;return D},getSource:function(S,D,B,ee){for(var xe="",ye=0;ye<D;++ye){var Ae=ee?i()[ee+ye*4>>2]:-1;xe+=et(i()[B+ye*4>>2],Ae<0?void 0:Ae)}return xe},createContext:function(S,D){var B=S.getContext("webgl",D);if(!B)return 0;var ee=pt.registerContext(B,D);return ee},registerContext:function(S,D){var B=hi(8);i()[B+4>>2]=Ea();var ee={handle:B,attributes:D,version:D.majorVersion,GLctx:S};return S.canvas&&(S.canvas.GLctxObject=ee),pt.contexts[B]=ee,(typeof D.enableExtensionsByDefault=="undefined"||D.enableExtensionsByDefault)&&pt.initExtensions(ee),B},makeContextCurrent:function(S){return pt.currentContext=pt.contexts[S],u.ctx=Ta=pt.currentContext&&pt.currentContext.GLctx,!(S&&!Ta)},getContext:function(S){return pt.contexts[S]},deleteContext:function(S){pt.currentContext===pt.contexts[S]&&(pt.currentContext=null),typeof Ge=="object"&&Ge.removeAllHandlersOnTarget(pt.contexts[S].GLctx.canvas),pt.contexts[S]&&pt.contexts[S].GLctx.canvas&&(pt.contexts[S].GLctx.canvas.GLctxObject=void 0),sd(pt.contexts[S].handle),pt.contexts[S]=null},initExtensions:function(S){if(S||(S=pt.currentContext),!S.initExtensionsDone){S.initExtensionsDone=!0;var D=S.GLctx;Og(D),Mg(D),zg(D),D.disjointTimerQueryExt=D.getExtension("EXT_disjoint_timer_query"),Lg(D);var B=D.getSupportedExtensions()||[];B.forEach(function(ee){ee.indexOf("lose_context")<0&&ee.indexOf("debug")<0&&D.getExtension(ee)})}},populateUniformTable:function(S){for(var D=pt.programs[S],B=pt.programInfos[S]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},ee=B.uniforms,xe=Ta.getProgramParameter(D,35718),ye=0;ye<xe;++ye){var Ae=Ta.getActiveUniform(D,ye),Ee=Ae.name;B.maxUniformLength=Math.max(B.maxUniformLength,Ee.length+1),Ee.slice(-1)=="]"&&(Ee=Ee.slice(0,Ee.lastIndexOf("[")));var ft=Ta.getUniformLocation(D,Ee);if(ft){var gn=pt.getNewId(pt.uniforms);ee[Ee]=[Ae.size,gn],pt.uniforms[gn]=ft;for(var nn=1;nn<Ae.size;++nn){var Ra=Ee+"["+nn+"]";ft=Ta.getUniformLocation(D,Ra),gn=pt.getNewId(pt.uniforms),pt.uniforms[gn]=ft}}}}},Bg=["default","low-power","high-performance"];function Wg(S,D){var B=D>>2,ee=i()[B+(24>>2)],xe={alpha:!!i()[B+(0>>2)],depth:!!i()[B+(4>>2)],stencil:!!i()[B+(8>>2)],antialias:!!i()[B+(12>>2)],premultipliedAlpha:!!i()[B+(16>>2)],preserveDrawingBuffer:!!i()[B+(20>>2)],powerPreference:Bg[ee],failIfMajorPerformanceCaveat:!!i()[B+(28>>2)],majorVersion:i()[B+(32>>2)],minorVersion:i()[B+(36>>2)],enableExtensionsByDefault:i()[B+(40>>2)],explicitSwapControl:i()[B+(44>>2)],proxyContextToMainThread:i()[B+(48>>2)],renderViaOffscreenBackBuffer:i()[B+(52>>2)]},ye=ed(S);if(!ye||xe.explicitSwapControl)return 0;var Ae=pt.createContext(ye,xe);return Ae}function Vg(S,D){return Wg(S,D)}var Zl={mappings:{},buffers:[null,[],[]],printChar:function(S,D){var B=Zl.buffers[S];D===0||D===10?((S===1?z:j)(Ze(B,0)),B.length=0):B.push(D)},varargs:void 0,get:function(){Zl.varargs+=4;var S=i()[Zl.varargs-4>>2];return S},getStr:function(S){var D=et(S);return D},get64:function(S,D){return S}};function gh(S){return I?Ca(3,1,S):0}function yh(S,D,B,ee,xe){if(I)return Ca(4,1,S,D,B,ee,xe)}function Ah(S,D,B,ee){if(I)return Ca(5,1,S,D,B,ee);for(var xe=0,ye=0;ye<B;ye++){for(var Ae=i()[D+ye*8>>2],Ee=i()[D+(ye*8+4)>>2],ft=0;ft<Ee;ft++)Zl.printChar(S,o()[Ae+ft]);xe+=Ee}return i()[ee>>2]=xe,0}function Ug(S){var D=De.threadExitHandlers.pop();S&&D()}function Gg(S,D){De.threadExitHandlers.push(function(){Rn.get(S)(D)})}function xh(S){if(I)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var D=De.getNewWorker();if(D.pthread!==void 0)throw"Internal error!";if(!S.pthread_ptr)throw"Internal error, no pthread ptr!";De.runningWorkers.push(D);for(var B=hi(128*4),ee=0;ee<128;++ee)i()[B+ee*4>>2]=0;var xe=S.stackBase+S.stackSize,ye=De.pthreads[S.pthread_ptr]={worker:D,stackBase:S.stackBase,stackSize:S.stackSize,allocatedOwnStack:S.allocatedOwnStack,threadInfoStruct:S.pthread_ptr},Ae=ye.threadInfoStruct>>2;Atomics.store(l(),Ae+(64>>2),S.detached),Atomics.store(l(),Ae+(100>>2),B),Atomics.store(l(),Ae+(40>>2),ye.threadInfoStruct),Atomics.store(l(),Ae+(80>>2),S.stackSize),Atomics.store(l(),Ae+(76>>2),xe),Atomics.store(l(),Ae+(104>>2),S.stackSize),Atomics.store(l(),Ae+(104+8>>2),xe),Atomics.store(l(),Ae+(104+12>>2),S.detached);var Ee=z5(),ft=Ee+40;Atomics.store(l(),Ae+(172>>2),ft),D.pthread=ye;var gn={cmd:"run",start_routine:S.startRoutine,arg:S.arg,threadInfoStruct:S.pthread_ptr,stackBase:S.stackBase,stackSize:S.stackSize};D.runPthread=function(){gn.time=performance.now(),D.postMessage(gn,S.transferList)},D.loaded&&(D.runPthread(),delete D.runPthread)}function Hg(S,D,B,ee){if(typeof SharedArrayBuffer=="undefined")return j("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!S)return j("pthread_create called with a null thread pointer!"),28;var xe=[],ye=0;if(I&&(xe.length===0||ye))return U5(687865856,S,D,B,ee);if(ye)return ye;var Ae=0,Ee=0,ft=0;D&&D!=-1?(Ae=i()[D>>2],Ae+=81920,Ee=i()[D+8>>2],ft=i()[D+12>>2]!==0):Ae=2097152;var gn=Ee==0;gn?Ee=j5(16,Ae):(Ee-=Ae,Se(Ee>0));for(var nn=hi(228),Ra=0;Ra<228>>2;++Ra)l()[(nn>>2)+Ra]=0;i()[S>>2]=nn,i()[nn+12>>2]=nn;var ru=nn+152;i()[ru>>2]=ru;var zn={stackBase:Ee,stackSize:Ae,allocatedOwnStack:gn,detached:ft,startRoutine:B,pthread_ptr:nn,arg:ee,transferList:xe};return I?(zn.cmd="spawnThread",postMessage(zn,xe)):xh(zn),0}function jg(){if(!!I){var S=Ea();if(!!S){var D=Atomics.load(l(),S+56>>2);if(!D){var B=Atomics.load(l(),S+0>>2);if(B==2)throw"Canceled!"}}}}function qg(){v||b||W("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Xg(S,D,B){if(!S)return j("pthread_join attempted on a null thread pointer!"),Sa.ESRCH;if(I&&Ea()==S)return j("PThread "+S+" is attempting to join to itself!"),Sa.EDEADLK;if(!I&&W5()==S)return j("Main thread "+S+" is attempting to join to itself!"),Sa.EDEADLK;var ee=i()[S+12>>2];if(ee!==S)return j("pthread_join attempted on thread "+S+", which does not point to a valid thread, or does not exist anymore!"),Sa.ESRCH;var xe=Atomics.load(l(),S+64>>2);if(xe)return j("Attempted to join thread "+S+", which was already detached!"),Sa.EINVAL;for(B&&qg();;){var ye=Atomics.load(l(),S+0>>2);if(ye==1){var Ae=Atomics.load(l(),S+4>>2);return D&&(i()[D>>2]=Ae),Atomics.store(l(),S+64>>2,1),I?postMessage({cmd:"cleanupThread",thread:S}):ph(S),0}if(!B)return Sa.EBUSY;jg(),I||Ch(),hh(S+0,ye,I?100:1)}}function Kg(S,D){return Xg(S,D,!0)}function bh(S){if(I)return Ca(6,1,S);switch(S){case 30:return 16384;case 85:var D=2147483648;return D/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return fg(28),-1}I||De.initMainThreadBlock();var Ta,Zg=[null,mg,mh,gh,yh,Ah,bh],Yg={e:pg,r:hg,x:gg,b:yg,y:Ag,j:xg,d:hh,c:Yc,f:pi,p:bg,A:vg,u:kg,q:Cg,v:Pg,i:$g,s:Fg,w:Vg,l:gh,n:yh,g:Ah,o:og,a:se||u.wasmMemory,z:Ug,k:Gg,h:Hg,m:Kg,t:bh},O5=ag(),vh=u.___wasm_call_ctors=function(){return(vh=u.___wasm_call_ctors=u.asm.B).apply(null,arguments)},Jg=u._init=function(){return(Jg=u._init=u.asm.C).apply(null,arguments)},Qg=u._init_with_threads_count=function(){return(Qg=u._init_with_threads_count=u.asm.D).apply(null,arguments)},e2=u._get_threads_count=function(){return(e2=u._get_threads_count=u.asm.E).apply(null,arguments)},t2=u._register_tensor=function(){return(t2=u._register_tensor=u.asm.F).apply(null,arguments)},n2=u._dispose_data=function(){return(n2=u._dispose_data=u.asm.G).apply(null,arguments)},r2=u._dispose=function(){return(r2=u._dispose=u.asm.H).apply(null,arguments)},s2=u._Abs=function(){return(s2=u._Abs=u.asm.I).apply(null,arguments)},a2=u._Add=function(){return(a2=u._Add=u.asm.J).apply(null,arguments)},o2=u._AddN=function(){return(o2=u._AddN=u.asm.K).apply(null,arguments)},i2=u._All=function(){return(i2=u._All=u.asm.L).apply(null,arguments)},l2=u._Any=function(){return(l2=u._Any=u.asm.M).apply(null,arguments)},u2=u._ArgMax=function(){return(u2=u._ArgMax=u.asm.N).apply(null,arguments)},c2=u._AvgPool=function(){return(c2=u._AvgPool=u.asm.O).apply(null,arguments)},d2=u._BatchMatMul=function(){return(d2=u._BatchMatMul=u.asm.P).apply(null,arguments)},p2=u._Ceil=function(){return(p2=u._Ceil=u.asm.Q).apply(null,arguments)},h2=u._ClipByValue=function(){return(h2=u._ClipByValue=u.asm.R).apply(null,arguments)},f2=u._Conv2D=function(){return(f2=u._Conv2D=u.asm.S).apply(null,arguments)},m2=u._Conv2DBackpropInput=function(){return(m2=u._Conv2DBackpropInput=u.asm.T).apply(null,arguments)},g2=u._Cos=function(){return(g2=u._Cos=u.asm.U).apply(null,arguments)},y2=u._Cosh=function(){return(y2=u._Cosh=u.asm.V).apply(null,arguments)},wh=u._CropAndResize=function(){return(wh=u._CropAndResize=u.asm.W).apply(null,arguments)},kh=u._Cumsum=function(){return(kh=u._Cumsum=u.asm.X).apply(null,arguments)},td=u._DepthToSpace=function(){return(td=u._DepthToSpace=u.asm.Y).apply(null,arguments)},Yl=u._DepthwiseConv2dNative=function(){return(Yl=u._DepthwiseConv2dNative=u.asm.Z).apply(null,arguments)},A2=u._Elu=function(){return(A2=u._Elu=u.asm._).apply(null,arguments)},nd=u._Equal=function(){return(nd=u._Equal=u.asm.$).apply(null,arguments)},Jl=u._Exp=function(){return(Jl=u._Exp=u.asm.aa).apply(null,arguments)},Ql=u._FlipLeftRight=function(){return(Ql=u._FlipLeftRight=u.asm.ba).apply(null,arguments)},x2=u._Floor=function(){return(x2=u._Floor=u.asm.ca).apply(null,arguments)},re=u._FloorDiv=function(){return(re=u._FloorDiv=u.asm.da).apply(null,arguments)},le=u._FusedBatchNorm=function(){return(le=u._FusedBatchNorm=u.asm.ea).apply(null,arguments)},Ce=u._FusedConv2D=function(){return(Ce=u._FusedConv2D=u.asm.fa).apply(null,arguments)},ct=u._FusedDepthwiseConv2D=function(){return(ct=u._FusedDepthwiseConv2D=u.asm.ga).apply(null,arguments)},Vt=u._Gather=function(){return(Vt=u._Gather=u.asm.ha).apply(null,arguments)},Pt=u._GatherNd=function(){return(Pt=u._GatherNd=u.asm.ia).apply(null,arguments)},tt=u._Greater=function(){return(tt=u._Greater=u.asm.ja).apply(null,arguments)},rt=u._GreaterEqual=function(){return(rt=u._GreaterEqual=u.asm.ka).apply(null,arguments)},Cn=u._LeakyRelu=function(){return(Cn=u._LeakyRelu=u.asm.la).apply(null,arguments)},Xs=u._Less=function(){return(Xs=u._Less=u.asm.ma).apply(null,arguments)},Ks=u._LessEqual=function(){return(Ks=u._LessEqual=u.asm.na).apply(null,arguments)},Ih=u._Log=function(){return(Ih=u._Log=u.asm.oa).apply(null,arguments)},rd=u._LogicalAnd=function(){return(rd=u._LogicalAnd=u.asm.pa).apply(null,arguments)},Ar=u._Max=function(){return(Ar=u._Max=u.asm.qa).apply(null,arguments)},Na=u._MaxPool=function(){return(Na=u._MaxPool=u.asm.ra).apply(null,arguments)},Sh=u._Maximum=function(){return(Sh=u._Maximum=u.asm.sa).apply(null,arguments)},dE=u._Mean=function(){return(dE=u._Mean=u.asm.ta).apply(null,arguments)},pE=u._Min=function(){return(pE=u._Min=u.asm.ua).apply(null,arguments)},hE=u._Minimum=function(){return(hE=u._Minimum=u.asm.va).apply(null,arguments)},fE=u._MirrorPad=function(){return(fE=u._MirrorPad=u.asm.wa).apply(null,arguments)},mE=u._Multiply=function(){return(mE=u._Multiply=u.asm.xa).apply(null,arguments)},gE=u._Neg=function(){return(gE=u._Neg=u.asm.ya).apply(null,arguments)},yE=u._NonMaxSuppressionV3=function(){return(yE=u._NonMaxSuppressionV3=u.asm.za).apply(null,arguments)},AE=u._NonMaxSuppressionV4=function(){return(AE=u._NonMaxSuppressionV4=u.asm.Aa).apply(null,arguments)},xE=u._NonMaxSuppressionV5=function(){return(xE=u._NonMaxSuppressionV5=u.asm.Ba).apply(null,arguments)},bE=u._NotEqual=function(){return(bE=u._NotEqual=u.asm.Ca).apply(null,arguments)},vE=u._OneHot=function(){return(vE=u._OneHot=u.asm.Da).apply(null,arguments)},wE=u._PadV2=function(){return(wE=u._PadV2=u.asm.Ea).apply(null,arguments)},kE=u._Pow=function(){return(kE=u._Pow=u.asm.Fa).apply(null,arguments)},IE=u._Prelu=function(){return(IE=u._Prelu=u.asm.Ga).apply(null,arguments)},SE=u._Prod=function(){return(SE=u._Prod=u.asm.Ha).apply(null,arguments)},CE=u._RealDiv=function(){return(CE=u._RealDiv=u.asm.Ia).apply(null,arguments)},TE=u._Relu=function(){return(TE=u._Relu=u.asm.Ja).apply(null,arguments)},NE=u._Relu6=function(){return(NE=u._Relu6=u.asm.Ka).apply(null,arguments)},EE=u._ResizeBilinear=function(){return(EE=u._ResizeBilinear=u.asm.La).apply(null,arguments)},RE=u._Reverse=function(){return(RE=u._Reverse=u.asm.Ma).apply(null,arguments)},_E=u._RotateWithOffset=function(){return(_E=u._RotateWithOffset=u.asm.Na).apply(null,arguments)},DE=u._Round=function(){return(DE=u._Round=u.asm.Oa).apply(null,arguments)},PE=u._Rsqrt=function(){return(PE=u._Rsqrt=u.asm.Pa).apply(null,arguments)},$E=u._ScatterNd=function(){return($E=u._ScatterNd=u.asm.Qa).apply(null,arguments)},FE=u._SelectV2=function(){return(FE=u._SelectV2=u.asm.Ra).apply(null,arguments)},OE=u._Sigmoid=function(){return(OE=u._Sigmoid=u.asm.Sa).apply(null,arguments)},ME=u._Sin=function(){return(ME=u._Sin=u.asm.Ta).apply(null,arguments)},zE=u._Softmax=function(){return(zE=u._Softmax=u.asm.Ua).apply(null,arguments)},LE=u._SparseFillEmptyRows=function(){return(LE=u._SparseFillEmptyRows=u.asm.Va).apply(null,arguments)},BE=u._SparseReshape=function(){return(BE=u._SparseReshape=u.asm.Wa).apply(null,arguments)},WE=u._SparseSegmentReduction=function(){return(WE=u._SparseSegmentReduction=u.asm.Xa).apply(null,arguments)},VE=u._Sqrt=function(){return(VE=u._Sqrt=u.asm.Ya).apply(null,arguments)},UE=u._Square=function(){return(UE=u._Square=u.asm.Za).apply(null,arguments)},GE=u._SquaredDifference=function(){return(GE=u._SquaredDifference=u.asm._a).apply(null,arguments)},HE=u._Step=function(){return(HE=u._Step=u.asm.$a).apply(null,arguments)},jE=u._StridedSlice=function(){return(jE=u._StridedSlice=u.asm.ab).apply(null,arguments)},qE=u._Sub=function(){return(qE=u._Sub=u.asm.bb).apply(null,arguments)},XE=u._Sum=function(){return(XE=u._Sum=u.asm.cb).apply(null,arguments)},KE=u._Tan=function(){return(KE=u._Tan=u.asm.db).apply(null,arguments)},ZE=u._Tanh=function(){return(ZE=u._Tanh=u.asm.eb).apply(null,arguments)},YE=u._Tile=function(){return(YE=u._Tile=u.asm.fb).apply(null,arguments)},JE=u._TopK=function(){return(JE=u._TopK=u.asm.gb).apply(null,arguments)},QE=u._Transform=function(){return(QE=u._Transform=u.asm.hb).apply(null,arguments)},eR=u._Transpose=function(){return(eR=u._Transpose=u.asm.ib).apply(null,arguments)},tR=u.__FusedMatMul=function(){return(tR=u.__FusedMatMul=u.asm.jb).apply(null,arguments)},hi=u._malloc=function(){return(hi=u._malloc=u.asm.kb).apply(null,arguments)},sd=u._free=function(){return(sd=u._free=u.asm.lb).apply(null,arguments)},M5=u.___errno_location=function(){return(M5=u.___errno_location=u.asm.mb).apply(null,arguments)},z5=u._emscripten_get_global_libc=function(){return(z5=u._emscripten_get_global_libc=u.asm.ob).apply(null,arguments)},Ea=u._pthread_self=function(){return(Ea=u._pthread_self=u.asm.pb).apply(null,arguments)},L5=u.___pthread_tsd_run_dtors=function(){return(L5=u.___pthread_tsd_run_dtors=u.asm.qb).apply(null,arguments)},Ch=u._emscripten_main_thread_process_queued_calls=function(){return(Ch=u._emscripten_main_thread_process_queued_calls=u.asm.rb).apply(null,arguments)},nR=u._emscripten_current_thread_process_queued_calls=function(){return(nR=u._emscripten_current_thread_process_queued_calls=u.asm.sb).apply(null,arguments)},B5=u._emscripten_register_main_browser_thread_id=function(){return(B5=u._emscripten_register_main_browser_thread_id=u.asm.tb).apply(null,arguments)},W5=u._emscripten_main_browser_thread_id=function(){return(W5=u._emscripten_main_browser_thread_id=u.asm.ub).apply(null,arguments)},V5=u.__emscripten_do_dispatch_to_thread=function(){return(V5=u.__emscripten_do_dispatch_to_thread=u.asm.vb).apply(null,arguments)},U5=u._emscripten_sync_run_in_main_thread_4=function(){return(U5=u._emscripten_sync_run_in_main_thread_4=u.asm.wb).apply(null,arguments)},G5=u._emscripten_run_in_main_runtime_thread_js=function(){return(G5=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},b2=u.__emscripten_call_on_thread=function(){return(b2=u.__emscripten_call_on_thread=u.asm.yb).apply(null,arguments)},rR=u._emscripten_tls_init=function(){return(rR=u._emscripten_tls_init=u.asm.zb).apply(null,arguments)},v2=u.__emscripten_thread_init=function(){return(v2=u.__emscripten_thread_init=u.asm.Ab).apply(null,arguments)},ad=u.stackSave=function(){return(ad=u.stackSave=u.asm.Bb).apply(null,arguments)},eu=u.stackRestore=function(){return(eu=u.stackRestore=u.asm.Cb).apply(null,arguments)},tu=u.stackAlloc=function(){return(tu=u.stackAlloc=u.asm.Db).apply(null,arguments)},H5=u._emscripten_stack_set_limits=function(){return(H5=u._emscripten_stack_set_limits=u.asm.Eb).apply(null,arguments)},j5=u._memalign=function(){return(j5=u._memalign=u.asm.Fb).apply(null,arguments)},q5=u.__emscripten_allow_main_runtime_queued_calls=10208,nu=u.__emscripten_main_thread_futex=10412;u.cwrap=Qe,u.PThread=De,u.PThread=De,u.wasmMemory=se,u.ExitStatus=od;var Th;function od(S){this.name="ExitStatus",this.message="Program terminated with exit("+S+")",this.status=S}ci=function S(){Th||w2(),Th||(ci=S)};function w2(S){if(S=S||g,Zr>0)return;if(I){d(u),ah(),postMessage({cmd:"loaded"});return}if(sh(),Zr>0)return;function D(){Th||(Th=!0,u.calledRun=!0,!be&&(ah(),oh(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),ih()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),D()},1)):D()}u.run=w2;function sR(S,D){if(!(D&&ae&&S===0)){if(!D&&I)throw postMessage({cmd:"exitProcess",returnCode:S}),new od(S);ae||(De.terminateAllThreads(),Ne=S,sr(),u.onExit&&u.onExit(S),be=!0),x(S,new od(S))}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();I&&(ae=!1,De.initWorker()),w2();var Nh;h&&(Nh={uncaughtException:process.listeners("uncaughtException").filter(function(S){return!h.uncaughtException.indexOf(S)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(S){return!h.unhandledRejection.indexOf(S)>-1})});var Eh;if(typeof WasmBackendModule!="undefined")Eh=WasmBackendModule;else if(typeof s!="undefined")Eh=s;else throw new Error("Could not find wasm module in post.js");if(Nh){var aR=Eh._dispose;Eh._dispose=function(){aR(),Nh.uncaughtException.forEach(function(S){process.removeListener("uncaughtException",S)}),Nh.unhandledRejection.forEach(function(S){process.removeListener("unhandledRejection",S)})}}return s.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),$R=rn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(s){s=s||{};var a=typeof s!="undefined"?s:{},o,i;a.ready=new Promise(function(re,le){o=re,i=le});var l;typeof process!="undefined"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c={},u;for(u in a)a.hasOwnProperty(u)&&(c[u]=a[u]);var d=[],p="./this.program",h=function(re,le){throw le},f=!1,m=!1,g=!1,y=!1;f=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y=!f&&!g&&!m;var x="";function A(re){return a.locateFile?a.locateFile(re,x):x+re}var b,v,C,I,E,R;g?(m?x=dd().dirname(x)+"/":x=__dirname+"/",b=function(le,Ce){return E||(E=Ph()),R||(R=dd()),le=R.normalize(le),E.readFileSync(le,Ce?null:"utf8")},C=function(le){var Ce=b(le,!0);return Ce.buffer||(Ce=new Uint8Array(Ce)),z(Ce.buffer),Ce},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(re){if(!(re instanceof A2))throw re}),process.on("unhandledRejection",js),h=function(re){process.exit(re)},a.inspect=function(){return"[Emscripten Module object]"}):y?(typeof read!="undefined"&&(b=function(le){return read(le)}),C=function(le){var Ce;return typeof readbuffer=="function"?new Uint8Array(readbuffer(le)):(Ce=read(le,"binary"),z(typeof Ce=="object"),Ce)},typeof scriptArgs!="undefined"?d=scriptArgs:typeof arguments!="undefined"&&(d=arguments),typeof quit=="function"&&(h=function(re){quit(re)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(f||m)&&(m?x=self.location.href:typeof document!="undefined"&&document.currentScript&&(x=document.currentScript.src),r&&(x=r),x.indexOf("blob:")!==0?x=x.substr(0,x.lastIndexOf("/")+1):x="",b=function(re){var le=new XMLHttpRequest;return le.open("GET",re,!1),le.send(null),le.responseText},m&&(C=function(re){var le=new XMLHttpRequest;return le.open("GET",re,!1),le.responseType="arraybuffer",le.send(null),new Uint8Array(le.response)}),v=function(re,le,Ce){var ct=new XMLHttpRequest;ct.open("GET",re,!0),ct.responseType="arraybuffer",ct.onload=function(){if(ct.status==200||ct.status==0&&ct.response){le(ct.response);return}Ce()},ct.onerror=Ce,ct.send(null)},I=function(re){document.title=re});var F=a.print||console.log.bind(console),_=a.printErr||console.warn.bind(console);for(u in c)c.hasOwnProperty(u)&&(a[u]=c[u]);c=null,a.arguments&&(d=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(h=a.quit);var P;a.wasmBinary&&(P=a.wasmBinary);var T=a.noExitRuntime||!0;typeof WebAssembly!="object"&&js("no native wasm support detected");var O,G=!1,K;function z(re,le){re||js("Assertion failed: "+le)}function j(re){var le=a["_"+re];return z(le,"Cannot call unknown function "+re+", make sure it is exported"),le}function W(re,le,Ce,ct,Vt){var Pt={string:function(Ar){var Na=0;if(Ar!=null&&Ar!==0){var Sh=(Ar.length<<2)+1;Na=td(Sh),se(Ar,Na,Sh)}return Na},array:function(Ar){var Na=td(Ar.length);return me(Ar,Na),Na}};function tt(Ar){return le==="string"?Z(Ar):le==="boolean"?Boolean(Ar):Ar}var rt=j(re),Cn=[],Xs=0;if(ct)for(var Ks=0;Ks<ct.length;Ks++){var Ih=Pt[Ce[Ks]];Ih?(Xs===0&&(Xs=wh()),Cn[Ks]=Ih(ct[Ks])):Cn[Ks]=ct[Ks]}var rd=rt.apply(null,Cn);return rd=tt(rd),Xs!==0&&kh(Xs),rd}function Q(re,le,Ce,ct){Ce=Ce||[];var Vt=Ce.every(function(tt){return tt==="number"}),Pt=le!=="string";return Pt&&Vt&&!ct?j(re):function(){return W(re,le,Ce,arguments,ct)}}var ne=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function oe(re,le,Ce){for(var ct=le+Ce,Vt=le;re[Vt]&&!(Vt>=ct);)++Vt;if(Vt-le>16&&re.subarray&&ne)return ne.decode(re.subarray(le,Vt));for(var Pt="";le<Vt;){var tt=re[le++];if(!(tt&128)){Pt+=String.fromCharCode(tt);continue}var rt=re[le++]&63;if((tt&224)==192){Pt+=String.fromCharCode((tt&31)<<6|rt);continue}var Cn=re[le++]&63;if((tt&240)==224?tt=(tt&15)<<12|rt<<6|Cn:tt=(tt&7)<<18|rt<<12|Cn<<6|re[le++]&63,tt<65536)Pt+=String.fromCharCode(tt);else{var Xs=tt-65536;Pt+=String.fromCharCode(55296|Xs>>10,56320|Xs&1023)}}return Pt}function Z(re,le){return re?oe(Pe,re,le):""}function ae(re,le,Ce,ct){if(!(ct>0))return 0;for(var Vt=Ce,Pt=Ce+ct-1,tt=0;tt<re.length;++tt){var rt=re.charCodeAt(tt);if(rt>=55296&&rt<=57343){var Cn=re.charCodeAt(++tt);rt=65536+((rt&1023)<<10)|Cn&1023}if(rt<=127){if(Ce>=Pt)break;le[Ce++]=rt}else if(rt<=2047){if(Ce+1>=Pt)break;le[Ce++]=192|rt>>6,le[Ce++]=128|rt&63}else if(rt<=65535){if(Ce+2>=Pt)break;le[Ce++]=224|rt>>12,le[Ce++]=128|rt>>6&63,le[Ce++]=128|rt&63}else{if(Ce+3>=Pt)break;le[Ce++]=240|rt>>18,le[Ce++]=128|rt>>12&63,le[Ce++]=128|rt>>6&63,le[Ce++]=128|rt&63}}return le[Ce]=0,Ce-Vt}function se(re,le,Ce){return ae(re,Pe,le,Ce)}function me(re,le){Se.set(re,le)}function be(re,le){return re%le>0&&(re+=le-re%le),re}var Ne,Se,Pe,ze,Qe,Ze,et,yt,lt;function At(re){Ne=re,a.HEAP8=Se=new Int8Array(re),a.HEAP16=ze=new Int16Array(re),a.HEAP32=Ze=new Int32Array(re),a.HEAPU8=Pe=new Uint8Array(re),a.HEAPU16=Qe=new Uint16Array(re),a.HEAPU32=et=new Uint32Array(re),a.HEAPF32=yt=new Float32Array(re),a.HEAPF64=lt=new Float64Array(re)}var Dt=a.INITIAL_MEMORY||16777216,tr,ut=[],gr=[],Sn=[],Xr=[],nr=!1;gr.push({func:function(){ch()}});function yr(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)rr(a.preRun.shift());Zr(ut)}function _r(){nr=!0,Zr(gr)}function Kr(){Zr(Sn)}function Dr(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)ka(a.postRun.shift());Zr(Xr)}function rr(re){ut.unshift(re)}function ka(re){Xr.unshift(re)}var Rn=0,Ia=null,Pr=null;function Xc(re){Rn++,a.monitorRunDependencies&&a.monitorRunDependencies(Rn)}function Kc(re){if(Rn--,a.monitorRunDependencies&&a.monitorRunDependencies(Rn),Rn==0&&(Ia!==null&&(clearInterval(Ia),Ia=null),Pr)){var le=Pr;Pr=null,le()}}a.preloadedImages={},a.preloadedAudios={};function js(re){a.onAbort&&a.onAbort(re),re+="",_(re),G=!0,K=1,re="abort("+re+"). Build with -s ASSERTIONS=1 for more info.";var le=new WebAssembly.RuntimeError(re);throw i(le),le}function rh(re,le){return String.prototype.startsWith?re.startsWith(le):re.indexOf(le)===0}var Y0="data:application/octet-stream;base64,";function sh(re){return rh(re,Y0)}var ah="file://";function oh(re){return rh(re,ah)}var sr="tfjs-backend-wasm.wasm";sh(sr)||(sr=A(sr));function ih(re){try{if(re==sr&&P)return new Uint8Array(P);if(C)return C(re);throw"both async and sync fetching of the wasm failed"}catch(le){js(le)}}function J0(){if(!P&&(f||m)){if(typeof fetch=="function"&&!oh(sr))return fetch(sr,{credentials:"same-origin"}).then(function(re){if(!re.ok)throw"failed to load wasm binary file at '"+sr+"'";return re.arrayBuffer()}).catch(function(){return ih(sr)});if(v)return new Promise(function(re,le){v(sr,function(Ce){re(new Uint8Array(Ce))},le)})}return Promise.resolve().then(function(){return ih(sr)})}function Q0(){var re={a:ar};function le(tt,rt){var Cn=tt.exports;a.asm=Cn,O=a.asm.h,At(O.buffer),tr=a.asm.Va,Kc("wasm-instantiate")}Xc("wasm-instantiate");function Ce(tt){le(tt.instance)}function ct(tt){return J0().then(function(rt){return WebAssembly.instantiate(rt,re)}).then(tt,function(rt){_("failed to asynchronously prepare wasm: "+rt),js(rt)})}function Vt(){return!P&&typeof WebAssembly.instantiateStreaming=="function"&&!sh(sr)&&!oh(sr)&&typeof fetch=="function"?fetch(sr,{credentials:"same-origin"}).then(function(tt){var rt=WebAssembly.instantiateStreaming(tt,re);return rt.then(Ce,function(Cn){return _("wasm streaming compile failed: "+Cn),_("falling back to ArrayBuffer instantiation"),ct(Ce)})}):ct(Ce)}if(a.instantiateWasm)try{var Pt=a.instantiateWasm(re,le);return Pt}catch(tt){return _("Module.instantiateWasm callback failed with error: "+tt),!1}return Vt().catch(i),{}}function Zr(re){for(;re.length>0;){var le=re.shift();if(typeof le=="function"){le(a);continue}var Ce=le.func;typeof Ce=="number"?le.arg===void 0?tr.get(Ce)():tr.get(Ce)(le.arg):Ce(le.arg===void 0?null:le.arg)}}function Zc(){js()}function ci(re,le,Ce){Pe.copyWithin(re,le,le+Ce)}function eg(){return Pe.length}function tg(re){try{return O.grow(re-Ne.byteLength+65535>>>16),At(O.buffer),1}catch(le){}}function qs(re){var le=eg(),Ce=2147483648;if(re>Ce)return!1;for(var ct=1;ct<=4;ct*=2){var Vt=le*(1+.2/ct);Vt=Math.min(Vt,re+100663296);var Pt=Math.min(Ce,be(Math.max(re,Vt),65536)),tt=tg(Pt);if(tt)return!0}return!1}var di={mappings:{},buffers:[null,[],[]],printChar:function(re,le){var Ce=di.buffers[re];le===0||le===10?((re===1?F:_)(oe(Ce,0)),Ce.length=0):Ce.push(le)},varargs:void 0,get:function(){di.varargs+=4;var re=Ze[di.varargs-4>>2];return re},getStr:function(re){var le=Z(re);return le},get64:function(re,le){return re}};function ng(re){return 0}function lh(re,le,Ce,ct,Vt){}function rg(re,le,Ce,ct){for(var Vt=0,Pt=0;Pt<Ce;Pt++){for(var tt=Ze[le+Pt*8>>2],rt=Ze[le+(Pt*8+4)>>2],Cn=0;Cn<rt;Cn++)di.printChar(re,Pe[tt+Cn]);Vt+=rt}return Ze[ct>>2]=Vt,0}function uh(){return 28}var ar={a:Zc,d:ci,e:qs,f:ng,c:lh,b:rg,g:uh},sg=Q0(),ch=a.___wasm_call_ctors=function(){return(ch=a.___wasm_call_ctors=a.asm.i).apply(null,arguments)},ag=a._init=function(){return(ag=a._init=a.asm.j).apply(null,arguments)},dh=a._init_with_threads_count=function(){return(dh=a._init_with_threads_count=a.asm.k).apply(null,arguments)},og=a._get_threads_count=function(){return(og=a._get_threads_count=a.asm.l).apply(null,arguments)},Kl=a._register_tensor=function(){return(Kl=a._register_tensor=a.asm.m).apply(null,arguments)},Sa=a._dispose_data=function(){return(Sa=a._dispose_data=a.asm.n).apply(null,arguments)},Yc=a._dispose=function(){return(Yc=a._dispose=a.asm.o).apply(null,arguments)},ig=a._Abs=function(){return(ig=a._Abs=a.asm.p).apply(null,arguments)},lg=a._Add=function(){return(lg=a._Add=a.asm.q).apply(null,arguments)},ph=a._AddN=function(){return(ph=a._AddN=a.asm.r).apply(null,arguments)},De=a._All=function(){return(De=a._All=a.asm.s).apply(null,arguments)},ug=a._Any=function(){return(ug=a._Any=a.asm.t).apply(null,arguments)},cg=a._ArgMax=function(){return(cg=a._ArgMax=a.asm.u).apply(null,arguments)},dg=a._AvgPool=function(){return(dg=a._AvgPool=a.asm.v).apply(null,arguments)},pg=a._BatchMatMul=function(){return(pg=a._BatchMatMul=a.asm.w).apply(null,arguments)},hg=a._Ceil=function(){return(hg=a._Ceil=a.asm.x).apply(null,arguments)},pi=a._ClipByValue=function(){return(pi=a._ClipByValue=a.asm.y).apply(null,arguments)},fg=a._Conv2D=function(){return(fg=a._Conv2D=a.asm.z).apply(null,arguments)},mg=a._Conv2DBackpropInput=function(){return(mg=a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},gg=a._Cos=function(){return(gg=a._Cos=a.asm.B).apply(null,arguments)},yg=a._Cosh=function(){return(yg=a._Cosh=a.asm.C).apply(null,arguments)},Ag=a._CropAndResize=function(){return(Ag=a._CropAndResize=a.asm.D).apply(null,arguments)},xg=a._Cumsum=function(){return(xg=a._Cumsum=a.asm.E).apply(null,arguments)},hh=a._DepthToSpace=function(){return(hh=a._DepthToSpace=a.asm.F).apply(null,arguments)},bg=a._DepthwiseConv2dNative=function(){return(bg=a._DepthwiseConv2dNative=a.asm.G).apply(null,arguments)},vg=a._Elu=function(){return(vg=a._Elu=a.asm.H).apply(null,arguments)},Ca=a._Equal=function(){return(Ca=a._Equal=a.asm.I).apply(null,arguments)},Jc=a._Exp=function(){return(Jc=a._Exp=a.asm.J).apply(null,arguments)},Qc=a._FlipLeftRight=function(){return(Qc=a._FlipLeftRight=a.asm.K).apply(null,arguments)},wg=a._Floor=function(){return(wg=a._Floor=a.asm.L).apply(null,arguments)},kg=a._FloorDiv=function(){return(kg=a._FloorDiv=a.asm.M).apply(null,arguments)},Ig=a._FusedBatchNorm=function(){return(Ig=a._FusedBatchNorm=a.asm.N).apply(null,arguments)},Sg=a._FusedConv2D=function(){return(Sg=a._FusedConv2D=a.asm.O).apply(null,arguments)},Cg=a._FusedDepthwiseConv2D=function(){return(Cg=a._FusedDepthwiseConv2D=a.asm.P).apply(null,arguments)},Ge=a._Gather=function(){return(Ge=a._Gather=a.asm.Q).apply(null,arguments)},Tg=a._GatherNd=function(){return(Tg=a._GatherNd=a.asm.R).apply(null,arguments)},Ng=a._Greater=function(){return(Ng=a._Greater=a.asm.S).apply(null,arguments)},Eg=a._GreaterEqual=function(){return(Eg=a._GreaterEqual=a.asm.T).apply(null,arguments)},Rg=a._LeakyRelu=function(){return(Rg=a._LeakyRelu=a.asm.U).apply(null,arguments)},_g=a._Less=function(){return(_g=a._Less=a.asm.V).apply(null,arguments)},Dg=a._LessEqual=function(){return(Dg=a._LessEqual=a.asm.W).apply(null,arguments)},ed=a._Log=function(){return(ed=a._Log=a.asm.X).apply(null,arguments)},fh=a._LogicalAnd=function(){return(fh=a._LogicalAnd=a.asm.Y).apply(null,arguments)},mh=a._Max=function(){return(mh=a._Max=a.asm.Z).apply(null,arguments)},Pg=a._MaxPool=function(){return(Pg=a._MaxPool=a.asm._).apply(null,arguments)},$g=a._Maximum=function(){return($g=a._Maximum=a.asm.$).apply(null,arguments)},Fg=a._Mean=function(){return(Fg=a._Mean=a.asm.aa).apply(null,arguments)},Og=a._Min=function(){return(Og=a._Min=a.asm.ba).apply(null,arguments)},Mg=a._Minimum=function(){return(Mg=a._Minimum=a.asm.ca).apply(null,arguments)},zg=a._MirrorPad=function(){return(zg=a._MirrorPad=a.asm.da).apply(null,arguments)},Lg=a._Multiply=function(){return(Lg=a._Multiply=a.asm.ea).apply(null,arguments)},pt=a._Neg=function(){return(pt=a._Neg=a.asm.fa).apply(null,arguments)},Bg=a._NonMaxSuppressionV3=function(){return(Bg=a._NonMaxSuppressionV3=a.asm.ga).apply(null,arguments)},Wg=a._NonMaxSuppressionV4=function(){return(Wg=a._NonMaxSuppressionV4=a.asm.ha).apply(null,arguments)},Vg=a._NonMaxSuppressionV5=function(){return(Vg=a._NonMaxSuppressionV5=a.asm.ia).apply(null,arguments)},Zl=a._NotEqual=function(){return(Zl=a._NotEqual=a.asm.ja).apply(null,arguments)},gh=a._OneHot=function(){return(gh=a._OneHot=a.asm.ka).apply(null,arguments)},yh=a._PadV2=function(){return(yh=a._PadV2=a.asm.la).apply(null,arguments)},Ah=a._Pow=function(){return(Ah=a._Pow=a.asm.ma).apply(null,arguments)},Ug=a._Prelu=function(){return(Ug=a._Prelu=a.asm.na).apply(null,arguments)},Gg=a._Prod=function(){return(Gg=a._Prod=a.asm.oa).apply(null,arguments)},xh=a._RealDiv=function(){return(xh=a._RealDiv=a.asm.pa).apply(null,arguments)},Hg=a._Relu=function(){return(Hg=a._Relu=a.asm.qa).apply(null,arguments)},jg=a._Relu6=function(){return(jg=a._Relu6=a.asm.ra).apply(null,arguments)},qg=a._ResizeBilinear=function(){return(qg=a._ResizeBilinear=a.asm.sa).apply(null,arguments)},Xg=a._Reverse=function(){return(Xg=a._Reverse=a.asm.ta).apply(null,arguments)},Kg=a._RotateWithOffset=function(){return(Kg=a._RotateWithOffset=a.asm.ua).apply(null,arguments)},bh=a._Round=function(){return(bh=a._Round=a.asm.va).apply(null,arguments)},Ta=a._Rsqrt=function(){return(Ta=a._Rsqrt=a.asm.wa).apply(null,arguments)},Zg=a._ScatterNd=function(){return(Zg=a._ScatterNd=a.asm.xa).apply(null,arguments)},Yg=a._SelectV2=function(){return(Yg=a._SelectV2=a.asm.ya).apply(null,arguments)},O5=a._Sigmoid=function(){return(O5=a._Sigmoid=a.asm.za).apply(null,arguments)},vh=a._Sin=function(){return(vh=a._Sin=a.asm.Aa).apply(null,arguments)},Jg=a._Softmax=function(){return(Jg=a._Softmax=a.asm.Ba).apply(null,arguments)},Qg=a._SparseFillEmptyRows=function(){return(Qg=a._SparseFillEmptyRows=a.asm.Ca).apply(null,arguments)},e2=a._SparseReshape=function(){return(e2=a._SparseReshape=a.asm.Da).apply(null,arguments)},t2=a._SparseSegmentReduction=function(){return(t2=a._SparseSegmentReduction=a.asm.Ea).apply(null,arguments)},n2=a._Sqrt=function(){return(n2=a._Sqrt=a.asm.Fa).apply(null,arguments)},r2=a._Square=function(){return(r2=a._Square=a.asm.Ga).apply(null,arguments)},s2=a._SquaredDifference=function(){return(s2=a._SquaredDifference=a.asm.Ha).apply(null,arguments)},a2=a._Step=function(){return(a2=a._Step=a.asm.Ia).apply(null,arguments)},o2=a._StridedSlice=function(){return(o2=a._StridedSlice=a.asm.Ja).apply(null,arguments)},i2=a._Sub=function(){return(i2=a._Sub=a.asm.Ka).apply(null,arguments)},l2=a._Sum=function(){return(l2=a._Sum=a.asm.La).apply(null,arguments)},u2=a._Tan=function(){return(u2=a._Tan=a.asm.Ma).apply(null,arguments)},c2=a._Tanh=function(){return(c2=a._Tanh=a.asm.Na).apply(null,arguments)},d2=a._Tile=function(){return(d2=a._Tile=a.asm.Oa).apply(null,arguments)},p2=a._TopK=function(){return(p2=a._TopK=a.asm.Pa).apply(null,arguments)},h2=a._Transform=function(){return(h2=a._Transform=a.asm.Qa).apply(null,arguments)},f2=a._Transpose=function(){return(f2=a._Transpose=a.asm.Ra).apply(null,arguments)},m2=a.__FusedMatMul=function(){return(m2=a.__FusedMatMul=a.asm.Sa).apply(null,arguments)},g2=a._malloc=function(){return(g2=a._malloc=a.asm.Ta).apply(null,arguments)},y2=a._free=function(){return(y2=a._free=a.asm.Ua).apply(null,arguments)},wh=a.stackSave=function(){return(wh=a.stackSave=a.asm.Wa).apply(null,arguments)},kh=a.stackRestore=function(){return(kh=a.stackRestore=a.asm.Xa).apply(null,arguments)},td=a.stackAlloc=function(){return(td=a.stackAlloc=a.asm.Ya).apply(null,arguments)};a.cwrap=Q;var Yl;function A2(re){this.name="ExitStatus",this.message="Program terminated with exit("+re+")",this.status=re}Pr=function re(){Yl||nd(),Yl||(Pr=re)};function nd(re){if(re=re||d,Rn>0||(yr(),Rn>0))return;function le(){Yl||(Yl=!0,a.calledRun=!0,!G&&(_r(),Kr(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Dr()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),le()},1)):le()}if(a.run=nd,a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();nd();var Jl;l&&(Jl={uncaughtException:process.listeners("uncaughtException").filter(function(re){return!l.uncaughtException.indexOf(re)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(re){return!l.unhandledRejection.indexOf(re)>-1})});var Ql;if(typeof s!="undefined")Ql=s;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Ql=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Jl){var x2=Ql._dispose;Ql._dispose=function(){x2(),Jl.uncaughtException.forEach(function(re){process.removeListener("uncaughtException",re)}),Jl.unhandledRejection.forEach(function(re){process.removeListener("unhandledRejection",re)})}}return s.ready}}();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),FR=1e-7,OR=1e-4,pd=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},au=class{refCount(e){return $r("refCount")}incRef(e){return $r("incRef")}timerAvailable(){return!0}time(e){return $r("time")}read(e){return $r("read")}readSync(e){return $r("readSync")}readToGPU(e,t){return $r("readToGPU")}numDataIds(){return $r("numDataIds")}disposeData(e,t){return $r("disposeData")}write(e,t,n){return $r("write")}move(e,t,n,r,s){return $r("move")}memory(){return $r("memory")}floatPrecision(){return $r("floatPrecision")}epsilon(){return this.floatPrecision()===32?FR:OR}dispose(){return $r("dispose")}};function $r(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function J5(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,$h(e,t,n)}function MR(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,$h(e,n,r),$h(t,n,r)}function hd(e,t,n){return Math.max(e,Math.min(t,n))}function zR(e){return e%2===0?e:e+1}function $h(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function LR(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function BR(e,t){let n=Math.random();return t*n+(1-n)*e}function WR(e,t){let n=0;for(let r=0;r<e.length;r++){let s=Number(e[r])-Number(t[r]);n+=s*s}return n}function M(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Ln(e,t,n=""){M(Da(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function mi(e){M(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function gi(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||_n(e)&&!n)for(let r=0;r<e.length;++r)gi(e[r],t,n);else t.push(e);return t}function Ct(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function VR(e){return e.length===0}function Da(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ou(e){return e%1===0}function UR(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function GR(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function HR(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return J5(t),t}function fd(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function jR(e,t=r=>0,n){return new Promise((r,s)=>{let a=0,o=()=>{if(e()){r();return}a++;let i=t(a);if(n!=null&&a>=n){s();return}setTimeout(o,i)};o()})}function qR(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let s=e.slice();return s[r]=t/n,s}function Yr(e,t){let n=t.length;return e=e==null?t.map((r,s)=>s):[].concat(e),M(e.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),M(e.every(r=>ou(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function Q5(e,t){let n=[],r=[],s=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||s?null:Yr(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),r.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function e3(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function t3(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function n3(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function r3(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function XR(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function _n(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function I2(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function s3(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Pa(e){return typeof e=="string"||e instanceof String}function a3(e){return typeof e=="boolean"}function o3(e){return typeof e=="number"}function Fh(e){return Array.isArray(e)?Fh(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":o3(e)?"float32":Pa(e)?"string":a3(e)?"bool":"float32"}function $a(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Oh(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function iu(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function i3(e,t,n,r=!1){let s=new Array;if(t.length===1){let a=t[0]*(r?2:1);for(let o=0;o<a;o++)s[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,c)=>l*c)*(r?2:1);for(let l=0;l<a;l++)s[l]=i3(e+l*i,o,n,r)}return s}function lu(e,t,n=!1){if(e.length===0)return t[0];let r=e.reduce((s,a)=>s*a)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return i3(0,e,t,n)}function S2(e,t){let n=Mh(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Mh(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function KR(e,t){let n=e.reduce((r,s)=>r*s,1);if(t==null||t==="float32")return lu(e,new Float32Array(n));if(t==="int32")return lu(e,new Int32Array(n));if(t==="bool")return lu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function C2(e){e.forEach(t=>{M(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function ZR(e,t,n){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function YR(e,t,n){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function T2(e){return e&&e.then&&typeof e.then=="function"}var l3="tfjsflags",u3=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=JR,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let r=this.urlFlags[e];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(T2(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);l3 in e&&e[l3].split(",").forEach(n=>{let[r,s]=n.split(":");this.urlFlags[r]=e9(r,s)})}};function JR(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(QR(t,r[0],r[1]),r.join("="))),t}function QR(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function e9(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Y(){return ps}var ps=null;function t9(e){ps=e}var N2;function c3(){if(N2==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");N2=e}return N2}function n9(){let e=c3();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function E2(e,t){let n=n9();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var yi="Abs",uu="Acos",cu="Acosh",Zs="Add",Fa="AddN",du="All",pu="Any",Oa="ArgMax",hu="ArgMin",fu="Asin",mu="Asinh",gu="Atan",yu="Atanh",Au="Atan2",Ma="AvgPool",zh="AvgPoolGrad",md="AvgPool3D",Lh="AvgPool3DGrad",za="BatchMatMul",Ai="BatchToSpaceND",Bh="Bincount",d3="BroadcastTo",Wh="BroadcastArgs",La="Cast",Ba="Ceil",Ys="ClipByValue",gd="Complex",yd="ComplexAbs",xi="Concat",Wa="Conv2D",Vh="Conv2DBackpropFilter",Va="Conv2DBackpropInput",Ad="Conv3D",Uh="Conv3DBackpropFilterV2",Gh="Conv3DBackpropInputV2",Ua="Cos",Ga="Cosh",bi="Cumsum",vi="CropAndResize",Hh="DenseBincount",wi="DepthToSpace",Ha="DepthwiseConv2dNative",jh="DepthwiseConv2dNativeBackpropFilter",qh="DepthwiseConv2dNativeBackpropInput",Xh="Diag",xd="Dilation2D",Kh="Dilation2DBackpropInput",Zh="Dilation2DBackpropFilter",ja="RealDiv",bd="Einsum",qa="Elu",Yh="EluGrad",xu="Erf",ki="Equal",Xa="Exp",Ii="ExpandDims",Si="Expm1",Jh="FFT",bu="Fill",Ci="FlipLeftRight",Ka="Floor",Za="FloorDiv",Ya="FusedBatchNorm",Ti="GatherV2",Ni="GatherNd",Ei="Greater",Ja="GreaterEqual",Qa="Identity",Qh="IFFT",vd="Imag",vu="IsFinite",wu="IsInf",ku="IsNan",eo="LeakyRelu",Ri="Less",_i="LessEqual",ef="LinSpace",to="Log",Iu="Log1p",Di="LogicalAnd",Su="LogicalNot",wd="LogicalOr",p3="LogSoftmax",kd="LRN",tf="LRNGrad",no="Max",ro="Maximum",so="MaxPool",nf="MaxPoolGrad",Id="MaxPool3D",rf="MaxPool3DGrad",sf="MaxPoolWithArgmax",ao="Mean",oo="Min",io="Minimum",lo="MirrorPad",Cu="Mod",af="Multinomial",uo="Multiply",Pi="Neg",$i="NotEqual",Fi="NonMaxSuppressionV3",Tu="NonMaxSuppressionV4",Oi="NonMaxSuppressionV5",Mi="OnesLike",zi="OneHot",Li="Pack",co="PadV2",r9="Pool",po="Pow",ho="Prelu",Bi="Prod",Nu="Range",Sd="Real",Eu="Reciprocal",fo="Relu",Wi="Reshape",Ru="ResizeNearestNeighbor",of="ResizeNearestNeighborGrad",mo="ResizeBilinear",lf="ResizeBilinearGrad",go="Relu6",Vi="Reverse",Ui="Round",yo="Rsqrt",Gi="ScatterNd",Hi="Select",_u="Selu",ji="Slice",Ao="Sin",qi="Sinh",Du="Sign",xo="Sigmoid",Pu="Softplus",bo="Sqrt",vo="Sum",Xi="SpaceToBatchND",Ki="SplitV",wo="Softmax",Cd="SparseFillEmptyRows",$u="SparseReshape",Td="SparseSegmentMean",Nd="SparseSegmentSum",Ed="SparseToDense",ko="SquaredDifference",Fu="Square",Zi="StridedSlice",Rd="StringNGrams",uf="StringSplit",cf="StringToHashBucketFast",Io="Sub",Yi="Tan",So="Tanh",Js="Tile",Ji="TopK",Qi="Transform",Co="Transpose",df="Unique",el="Unpack",_d="UnsortedSegmentSum",tl="ZerosLike",To="Step",Dd="FromPixels",nl="RotateWithOffset",No="_FusedMatMul",Eo="FusedConv2D",Ro="FusedDepthwiseConv2D";function _o(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...e)}function s9(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...e)}var Ou=E2("kernelRegistry",()=>new Map),Pd=E2("gradRegistry",()=>new Map);function pf(e,t){let n=_2(e,t);return Ou.get(n)}function R2(e){return Pd.get(e)}function Ds(e){let t=Ou.entries(),n=[];for(;;){let{done:r,value:s}=t.next();if(r)break;let[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function Jr(e){let{kernelName:t,backendName:n}=e,r=_2(t,n);Ou.has(r)&&_o(`The kernel '${t}' for backend '${n}' is already registered`),Ou.set(r,e)}function h3(e){let{kernelName:t}=e;Pd.has(t)&&Y().getBool("DEBUG")&&_o(`Overriding the gradient for '${t}'`),Pd.set(t,e)}function a9(e,t){let n=_2(e,t);if(!Ou.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Ou.delete(n)}function o9(e){if(!Pd.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Pd.delete(e)}function i9(e,t){Ds(e).forEach(r=>{let s=Object.assign({},r,{backendName:t});Jr(s)})}function _2(e,t){return`${t}_${e}`}var w={};Me(w,{arraysEqual:()=>Da,assert:()=>M,assertNonNegativeIntegerDimensions:()=>C2,assertNonNull:()=>mi,assertShapesMatch:()=>Ln,bytesFromStringArray:()=>s3,bytesPerElement:()=>I2,checkConversionForErrors:()=>n3,clamp:()=>hd,computeStrides:()=>iu,createScalarValue:()=>h9,createShuffledIndices:()=>HR,decodeString:()=>mf,distSquared:()=>WR,encodeString:()=>Od,fetch:()=>m9,fingerPrint64:()=>p9,flatten:()=>gi,getArrayFromDType:()=>t3,getTypedArrayFromDType:()=>e3,hasEncodingLoss:()=>XR,hexToLong:()=>$d,indexToLoc:()=>YR,inferDtype:()=>Fh,inferFromImplicitShape:()=>qR,isBoolean:()=>a3,isFunction:()=>$a,isInt:()=>ou,isNumber:()=>o3,isPromise:()=>T2,isScalarShape:()=>VR,isString:()=>Pa,isTypedArray:()=>_n,isValidDtype:()=>r3,locToIndex:()=>ZR,makeOnesTypedArray:()=>S2,makeZerosNestedTypedArray:()=>KR,makeZerosTypedArray:()=>Mh,nearestDivisor:()=>Oh,nearestLargerEven:()=>zR,now:()=>Fd,parseAxisParam:()=>Yr,randUniform:()=>BR,repeatedTry:()=>jR,rightPad:()=>fd,shuffle:()=>J5,shuffleCombo:()=>MR,sizeFromShape:()=>Ct,sizeToSquarishShape:()=>GR,squeezeShape:()=>Q5,sum:()=>LR,swap:()=>$h,tanh:()=>UR,toNestedArray:()=>lu,toTypedArray:()=>ff});var f3=fi(xR()),rl=f3.default||f3;function $d(e){return rl.fromString(e,!0,16)}var m3=$d("c3a5c85c97cb3127"),sl=$d("b492b66fbe98f273"),Bn=$d("9ae16a3b2f90404f");function D2(e){return e.xor(e.shru(47))}function g3(e,t,n){let r=e.slice(t,t+n);return rl.fromBytes(Array.from(r),!0,!0)}function It(e,t){return g3(e,t,8)}function y3(e,t){return g3(e,t,4)}function An(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Do(e,t,n=$d("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function l9(e,t,n,r,s,a){s=s.add(e),a=An(a.add(s).add(r),21);let o=s;return s=s.add(t),s=s.add(n),a=a.add(An(s,44)),[s.add(r),a.add(o)]}function hf(e,t,n,r){return l9(It(e,t),It(e,t+8),It(e,t+16),It(e,t+24),n,r)}function u9(e,t=e.length){if(t>=8){let n=Bn.add(t*2),r=It(e,0).add(Bn),s=It(e,t-8),a=An(s,37).mul(n).add(r),o=An(r,25).add(s).mul(n);return Do(a,o,n)}if(t>=4){let n=Bn.add(t*2),r=y3(e,0);return Do(r.shl(3).add(t),y3(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],s=e[t-1],a=n+(r<<8),o=t+(s<<2);return D2(Bn.mul(a).xor(m3.mul(o))).mul(Bn)}return Bn}function c9(e,t=e.length){let n=Bn.add(t*2),r=It(e,0).mul(sl),s=It(e,8),a=It(e,t-8).mul(n),o=It(e,t-16).mul(Bn);return Do(An(r.add(s),43).add(An(a,30)).add(o),r.add(An(s.add(Bn),18)).add(a),n)}function d9(e,t=e.length){let n=Bn.add(t*2),r=It(e,0).mul(Bn),s=It(e,8),a=It(e,t-8).mul(n),o=It(e,t-16).mul(Bn),i=An(r.add(s),43).add(An(a,30)).add(o),l=Do(i,r.add(An(s.add(Bn),18)).add(a),n),c=It(e,16).mul(n),u=It(e,24),d=i.add(It(e,t-32)).mul(n),p=l.add(It(e,t-24)).mul(n);return Do(An(c.add(u),43).add(An(d,30)).add(p),c.add(An(u.add(r),18)).add(d),n)}function p9(e,t=e.length){let n=rl.fromNumber(81,!0);if(t<=32)return t<=16?u9(e,t):c9(e,t);if(t<=64)return d9(e,t);let r=n,s=n.mul(sl).add(113),a=D2(s.mul(Bn).add(113)).mul(Bn),o=[rl.UZERO,rl.UZERO],i=[rl.UZERO,rl.UZERO];r=r.mul(Bn).add(It(e,0));let l=0,c=(t-1>>6)*64,u=c+(t-1&63)-63;do r=An(r.add(s).add(o[0]).add(It(e,l+8)),37).mul(sl),s=An(s.add(o[1]).add(It(e,l+48)),42).mul(sl),r=r.xor(i[1]),s=s.add(o[0]).add(It(e,l+40)),a=An(a.add(i[0]),33).mul(sl),o=hf(e,l,o[1].mul(sl),r.add(i[0])),i=hf(e,l+32,a.add(i[1]),s.add(It(e,l+16))),[a,r]=[r,a],l+=64;while(l!==c);let d=sl.add(a.and(255).shl(1));return l=u,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),r=An(r.add(s).add(o[0]).add(It(e,l+8)),37).mul(d),s=An(s.add(o[1]).add(It(e,l+48)),42).mul(d),r=r.xor(i[1].mul(9)),s=s.add(o[0].mul(9).add(It(e,l+40))),a=An(a.add(i[0]),33).mul(d),o=hf(e,l,o[1].mul(d),r.add(i[0])),i=hf(e,l+32,a.add(i[1]),s.add(It(e,l+16))),[a,r]=[r,a],Do(Do(o[0],i[0],d).add(D2(s).mul(m3)).add(a),Do(o[1],i[1],d).add(r),d)}function h9(e,t){return t==="string"?Od(e):ff([e],t)}function f9(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function ff(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=gi(e)),Y().getBool("DEBUG")&&n3(e,t),f9(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)Math.round(e[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Fd(){return Y().platform.now()}function m9(e,t){return Y().platform.fetch(e,t)}function Od(e,t="utf-8"){return t=t||"utf-8",Y().platform.encode(e,t)}function mf(e,t="utf-8"){return t=t||"utf-8",Y().platform.decode(e,t)}var g9=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new A9)}profileKernel(e,t,n){let r,s=()=>{r=n()},a,o=Fd();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let l of r)l.dataSync();a=Promise.resolve({kernelMs:Fd()-o})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<r.length;l++){let c=r[l];c.data().then(u=>{y9(u,c.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),r,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],s,i[2])})})}};function y9(e,t,n){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let s=e[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}var A9=class{logKernelProfile(e,t,n,r,s,a){let o=typeof r=="number"?fd(`${r}ms`,9):r.error,i=fd(e,25),l=t.rank,c=t.size,u=fd(t.shape.toString(),14),d="";for(let p in s){let h=s[p];if(h!=null){let f=h.shape||t.shape,m=f.length;d+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${u}	%c${c}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function x9(e,t,n){let r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){let c=e[l],u=c.inputs;for(let d in u){let p=u[d],h=!1;for(let f=0;f<t.length;f++)if(r[p.id]){c.outputs.forEach(m=>r[m.id]=!0),h=!0,s[c.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let c=e[l],u=c.inputs;for(let d=0;d<c.outputs.length;d++)if(a[c.outputs[d].id]){for(let p in u)a[u[p].id]=!0,o[c.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let c=e[l];if(s[c.id]&&o[c.id]){let u={};for(let p in c.inputs){let h=c.inputs[p];r[h.id]&&(u[p]=h)}let d=Object.assign({},c);d.inputs=u,d.outputs=c.outputs,i.push(d)}}return i}function b9(e,t,n,r){for(let s=t.length-1;s>=0;s--){let a=t[s],o=[];if(a.outputs.forEach(l=>{let c=e[l.id];c!=null?o.push(c):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let c=n(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);let u=a.inputs[l];if(!Da(c.shape,u.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(e[u.id]==null)e[u.id]=c;else{let d=e[u.id];e[u.id]=r(d,c),d.dispose()}}}}var A3=20,Md=3,P2=7;function v9(e,t,n,r){let s=iu(t),a=w9(e,t,n,s),o=t.length,i=gf(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function w9(e,t,n,r){let s=Ct(t),a=r[r.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?Ld(e):e;if(i>1)for(let c=0;c<s/a;c++){let u=c*a;for(let d=0;d<a;d++)o[d]=Math.max(o[d],zd(l[u+d],0,n).length)}return o}function zd(e,t,n){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(P2))} + ${parseFloat(e[1].toFixed(P2))}j`:Pa(e)?r=`'${e}'`:n==="bool"?r=x3(e):r=parseFloat(e.toFixed(P2)).toString(),fd(r,t)}function x3(e){return e===0?"false":"true"}function gf(e,t,n,r,s,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=Ld(e);return[zd(m[0],0,n)]}return n==="bool"?[x3(e[0])]:[e[0].toString()]}if(l===1){if(i>A3){let g=Md*o,y=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-Md)*o,i*o));return n==="complex64"&&(y=Ld(y),x=Ld(x)),["["+y.map((A,b)=>zd(A,s[b],n)).join(", ")+", ..., "+x.map((A,b)=>zd(A,s[i-Md+b],n)).join(", ")+"]"]}let m=n==="complex64"?Ld(e):Array.from(e);return["["+m.map((g,y)=>zd(g,s[y],n)).join(", ")+"]"]}let c=t.slice(1),u=r.slice(1),d=r[0]*o,p=[];if(i>A3){for(let m=0;m<Md;m++){let g=m*d,y=g+d;p.push(...gf(e.slice(g,y),c,n,u,s,!1))}p.push("...");for(let m=i-Md;m<i;m++){let g=m*d,y=g+d;p.push(...gf(e.slice(g,y),c,n,u,s,m===i-1))}}else for(let m=0;m<i;m++){let g=m*d,y=g+d;p.push(...gf(e.slice(g,y),c,n,u,s,m===i-1))}let h=l===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Ld(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var sn=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ct(e),n!=null){let r=n.length;M(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||t3(t,this.size),this.strides=iu(e)}set(e,...t){t.length===0&&(t=[0]),M(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return hs().makeTensor(this.values,this.shape,this.dtype)}},hs=null,Mu=null,k9=null;function I9(e){hs=e}function S9(e){Mu=e}function C9(e){k9=e}var nt=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ct(e),this.strides=iu(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Mu.buffer(this.shape,this.dtype,e)}bufferSync(){return Mu.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return lu(this.shape,e,this.dtype==="complex64")}arraySync(){return lu(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=hs().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>mf(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),hs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=hs().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>mf(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await hs().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(hs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Mu.print(this,e)}clone(){return this.throwIfDisposed(),Mu.clone(this)}toString(e=!1){let t=this.dataSync();return v9(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Mu.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),hs().makeVariable(this,e,t,n)}};Object.defineProperty(nt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function T9(){return E2("Tensor",()=>nt)}T9();var Bd=class extends nt{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Da(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);hs().disposeTensor(this),this.dataId=e.dataId,hs().incRef(this,null)}dispose(){hs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Bd,Symbol.hasInstance,{value:e=>e instanceof nt&&e.assign!=null&&e.assign instanceof Function});var fs={};Me(fs,{assertTypesMatch:()=>S3,getTensorsInContainer:()=>$2,isTensorInList:()=>E9,makeTypesMatch:()=>Mt});var b3=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(b3||{}),v3=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(v3||{}),w3=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(w3||{}),k3=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(k3||{}),I3=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(I3||{}),N9={float32:k3,int32:v3,bool:w3,complex64:I3};function Wn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return N9[e][t]}function Wd(e){return Wn(e,"int32")}function Mt(e,t){if(e.dtype===t.dtype)return[e,t];let n=Wn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function S3(e,t){M(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function E9(e,t){return t.some(n=>n.id===e.id)}function $2(e){let t=[];return C3(e,t,new Set),t}function C3(e,t,n){if(e==null)return;if(e instanceof nt){t.push(e);return}if(!R9(e))return;let r=e;for(let s in r){let a=r[s];n.has(a)||(n.add(a),C3(a,t,n))}}function R9(e){return Array.isArray(e)||typeof e=="object"}function F2(e){return e.kernelName!=null}var T3=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},O2=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new T3}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(_o(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new g9(this.backendInstance),!0}setupRegisteredKernels(){Ds(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ds(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof au)&&typeof n.then=="function"){let r=++this.pendingBackendInitId,s=n.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,_o(`Initialization of backend ${e} failed`),_o(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return _o(`Initialization of backend ${e} failed`),_o(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let r;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,n){e();try{let r=n();return t(),r}catch(r){throw t(),r}}nextTensorId(){return O2.nextTensorId++}nextVariableId(){return O2.nextVariableId++}clone(e){let t=V.runKernel(Qa,{x:e}),n={x:e},r=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return V.runKernel(La,i,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,s,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(pf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),s=0;n.forEach(i=>{s+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=F2(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(F2(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=pf(h,this.backendName);M(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let y=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,y,x);let A=x.map(b=>{if(b.rank!=null)return b;let{dataId:v,shape:C,dtype:I}=b;return this.makeTensorFromDataId(v,C,I)});if(r){let b=this.getTensorsForGradient(h,f,A);n=this.saveTensorsForBackwardMode(b)}return A}}else{let{forwardFunc:h}=e,f=m=>{!r||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:c,attrs:u}=e,d=F2(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(p=this.profiler.profileKernel(l,c,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(l,c,t,d,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(h=>c[h]!=null?c[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let r=R2(e);if(r!=null){let s=r.inputsToSave||[],a=r.outputsToSave||[],o;r.saveAllInputs?(M(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=s.map(l=>t[l]);let i=n.filter((l,c)=>a[c]);return o.concat(i)}return[]}makeTensor(e,t,n,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;n==="string"&&Pa(e[0])&&(s=e.map(i=>Od(i)));let a=r.write(s,t,n),o=new nt(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),n==="string"){let i=this.state.tensorInfo.get(a),l=s3(s);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";let s=new nt(t,n,e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));let s=new Bd(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*I2(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Bd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*I2(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,r,s,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=R2(e);i!=null&&(r=i.gradFunc),r!=null&&(o.gradient=l=>(l=l.map((c,u)=>{if(c==null){let d=n[u],p=Mh(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),r(l.length>1?l:l[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=$2(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===r.id&&this.track(s)})}gradients(e,t,n,r=!1){if(M(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));M(s instanceof nt,()=>"The result y returned by f() must be a tensor.");let a=x9(this.state.activeTape,t,s);if(!r&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[s.id]=n==null?_9(s.shape):n,b9(o,a,l=>this.tidy(l),D9);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:s,grads:i}})}customGrad(e){return M($a(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{M(t.every(o=>o instanceof nt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};t.forEach((o,i)=>{r[i]=o});let s=(o,i)=>(n=e(...t,i),M(n.value instanceof nt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M($a(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),c=Array.isArray(l)?l:[l];M(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(c.every(d=>d instanceof nt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return c.forEach((d,p)=>{u[p]=()=>d}),u};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Fd(),n=await this.backend.time(e);return n.wallMs=Fd()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new T3;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},M2=O2;M2.nextTensorId=0;M2.nextVariableId=0;function _9(e){let t=S2(Ct(e),"float32");return V.makeTensor(t,e,"float32")}function N3(){let e=c3();if(e._tfengine==null){let t=new u3(e);e._tfengine=new M2(t)}return t9(e._tfengine.ENV),I9(()=>e._tfengine),e._tfengine}var V=N3();function D9(e,t){let n={a:e,b:t};return V.runKernel(Zs,n)}var zu={};Me(zu,{isBrowser:()=>E3,isMobile:()=>F9,mockIsMobile:()=>$9});function P9(){return typeof navigator!="undefined"&&navigator!=null}var z2;function $9(e){z2=e}function F9(e){if(z2!==void 0)return z2;if(e||P9()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function E3(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var ms=Y();ms.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ms.registerFlag("IS_BROWSER",()=>E3());ms.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");ms.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ms.registerFlag("PROD",()=>!1);ms.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ms.getBool("DEBUG"));ms.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ms.registerFlag("IS_TEST",()=>!1);ms.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);ms.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function Ps(e,t){let n=e;if(_n(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||_n(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&R3(e,r,[]),r}function R3(e,t,n){if(n=n||[],!Array.isArray(e)&&!_n(e)){M(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}M(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),M(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let s=0;s<e.length;++s)R3(e[s],r,n.concat(s))}function _3(e,t,n,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function $(e,t,n,r="numeric"){if(e instanceof nt)return _3(r,e.dtype,t,n),e;let s=Fh(e);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),_3(r,s,t,n),e==null||!_n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=Ps(e,s);!_n(e)&&!Array.isArray(e)&&(e=[e]);let i=s!=="string"?ff(e,s):gi(e,[],!0);return V.makeTensor(i,a,s)}function Vd(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>$(a,`${t}[${o}]`,n,r))}var D3="__op";function U(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+D3;let s=(...a)=>{V.startScope(n);try{let o=r(...a);return T2(o)&&console.error("Cannot return a Promise inside of tidy."),V.endScope(o),o}catch(o){throw V.endScope(null),o}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}function O9(e,t){let n=$(e,"real","complex"),r=$(t,"imag","complex");Ln(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let s={real:n,imag:r};return V.runKernel(gd,s)}var Po=U({complex_:O9});function $o(e,t,n,r){if(r==null&&(r=Fh(e)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!_n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){C2(t);let s=Ct(t),a=Ct(n);M(s===a,()=>`Based on the provided shape, [${t}], the tensor should have ${s} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==Ct(t.slice(o)):!0;M(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!_n(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=r!=="string"?ff(e,r):gi(e,[],!0),V.makeTensor(e,t,r)}function ht(e,t,n){let r=Ps(e,n);return $o(e,t,r,n)}var L2={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},yf=4;async function M9(e,t){let n=[],r=[],s=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<s.length;++o){let i=s[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let u=new Promise(async d=>{let p=await l.bytes(),h=p.reduce((g,y)=>g+y.length,0)+yf*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let y=p[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,m),m+=yf,f.set(y,m),m+=y.length}d(f)});r.push(u)}else r.push(l.data());t!=null&&(c.group=t),n.push(c)}let a=await Promise.all(r);return{data:z9(a),specs:n}}function P3(e,t){let n={},r,s=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,c=Ct(l),u;if("quantization"in a){let d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=L2[d.dtype],h=e.slice(s,s+c*p),f=d.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=g*d.scale+d.min}}else if(d.dtype==="float16")r===void 0&&(r=G9()),u=r(f);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(i==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];u[m]=Math.round(g*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);s+=c*p}else if(i==="string"){let d=Ct(a.shape);u=[];for(let p=0;p<d;p++){let h=new Uint32Array(e.slice(s,s+yf))[0];s+=yf;let f=new Uint8Array(e.slice(s,s+h));u.push(f),s+=h}}else{let d=L2[i],p=e.slice(s,s+c*d);if(i==="float32")u=new Float32Array(p);else if(i==="int32")u=new Int32Array(p);else if(i==="bool")u=new Uint8Array(p);else if(i==="complex64"){u=new Float32Array(p);let h=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<h.length;y++)h[y]=u[y*2],f[y]=u[y*2+1];let m=ht(h,l,"float32"),g=ht(f,l,"float32");n[o]=Po(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);s+=c*d}i!=="complex64"&&(n[o]=ht(u,l,i))}return n}function z9(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let r=new Uint8Array(t),s=0;return n.forEach(a=>{r.set(new Uint8Array(a.buffer),s),s+=a.byteLength}),r.buffer}var B2=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function $3(e){return B2?Buffer.byteLength(e):new Blob([e]).size}function L9(e){if(B2)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function B9(e){if(B2){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function W2(e){if(e.length===1)return e[0];let t=0;e.forEach(s=>{t+=s.byteLength});let n=new Uint8Array(t),r=0;return e.forEach(s=>{n.set(new Uint8Array(s),r),r+=s.byteLength}),n.buffer}function F3(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function O3(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function V2(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Ud(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:$3(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:$3(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function W9(){let e=n=>{let r=n<<13,s=0;for(;(r&8388608)===0;)s-=8388608,r<<=1;return r&=~8388608,s+=947912704,r|s},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function V9(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function U9(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function G9(){let e=W9(),t=V9(),n=U9();return r=>{let s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let o=0;o<r.length;o++){let i=r[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(s)}}var Ut=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ut.instance==null&&(Ut.instance=new Ut),Ut.instance}static registerSaveRouter(e){Ut.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ut.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ut.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ut.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return(t==="load"?Ut.getInstance().loadRouters:Ut.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&r.push(o)}),r}},H9=e=>Ut.registerSaveRouter(e),j9=e=>Ut.registerLoadRouter(e),q9=e=>Ut.getSaveHandlers(e),X9=(e,t)=>Ut.getLoadHandlers(e,t),U2="tensorflowjs",G2=1,al="models_store",Fo="model_info_store";function M3(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function H2(e){let t=e.result;t.createObjectStore(al,{keyPath:"modelPath"}),t.createObjectStore(Fo,{keyPath:"modelPath"})}var ol=class{constructor(e){if(this.indexedDB=M3(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,r)=>{let s=this.indexedDB.open(U2,G2);s.onupgradeneeded=()=>H2(s),s.onsuccess=()=>{let a=s.result;if(t==null){let o=a.transaction(al,"readonly"),l=o.objectStore(al).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=c=>(a.close(),r(l.error)),o.oncomplete=()=>a.close()}else{let o=Ud(t),i=a.transaction(Fo,"readwrite"),l=i.objectStore(Fo),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),u;c.onsuccess=()=>{u=a.transaction(al,"readwrite");let p=u.objectStore(al).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});p.onsuccess=()=>n({modelArtifactsInfo:o}),p.onerror=h=>{l=i.objectStore(Fo);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),r(p.error)),f.onerror=m=>(a.close(),r(p.error))}},c.onerror=d=>(a.close(),r(c.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}}},s.onerror=a=>r(s.error)})}};ol.URL_SCHEME="indexeddb://";var z3=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ol.URL_SCHEME)?K9(e.slice(ol.URL_SCHEME.length)):null;Ut.registerSaveRouter(z3);Ut.registerLoadRouter(z3);function K9(e){return new ol(e)}function Z9(e){return e.startsWith(ol.URL_SCHEME)?e.slice(ol.URL_SCHEME.length):e}var Y9=class{constructor(){this.indexedDB=M3()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(U2,G2);n.onupgradeneeded=()=>H2(n),n.onsuccess=()=>{let r=n.result,s=r.transaction(Fo,"readonly"),o=s.objectStore(Fo).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(r.close(),t(o.error)),s.oncomplete=()=>r.close()},n.onerror=r=>t(n.error)})}async removeModel(e){return e=Z9(e),new Promise((t,n)=>{let r=this.indexedDB.open(U2,G2);r.onupgradeneeded=()=>H2(r),r.onsuccess=()=>{let s=r.result,a=s.transaction(Fo,"readwrite"),o=a.objectStore(Fo),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=o.delete(e),u=()=>{l=s.transaction(al,"readwrite");let p=l.objectStore(al).delete(e);p.onsuccess=()=>t(i.result.modelArtifactsInfo),p.onerror=h=>n(i.error)};c.onsuccess=u,c.onerror=d=>(u(),s.close(),n(i.error))}},i.onerror=c=>(s.close(),n(i.error)),a.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},r.onerror=s=>n(r.error)})}},Qs="/",Lu="tensorflowjs_models",L3="info",J9="model_topology",Q9="weight_specs",e_="weight_data",t_="model_metadata";function B3(e){return{info:[Lu,e,L3].join(Qs),topology:[Lu,e,J9].join(Qs),weightSpecs:[Lu,e,Q9].join(Qs),weightData:[Lu,e,e_].join(Qs),modelMetadata:[Lu,e,t_].join(Qs)}}function W3(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function n_(e){let t=e.split(Qs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Qs)}function r_(e){return e.startsWith(il.URL_SCHEME)?e.slice(il.URL_SCHEME.length):e}var il=class{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=B3(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ud(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,L9(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(s){throw W3(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let o=JSON.parse(s);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=B9(a),t}};il.URL_SCHEME="localstorage://";var V3=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(il.URL_SCHEME)?s_(e.slice(il.URL_SCHEME.length)):null;Ut.registerSaveRouter(V3);Ut.registerLoadRouter(V3);function s_(e){return new il(e)}var a_=class{constructor(){M(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Lu+Qs,n=Qs+L3;for(let r=0;r<this.LS.length;++r){let s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){let a=n_(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=r_(e);let t=B3(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return W3(t),n}},Bu="://",Fr=class{constructor(){this.managers={}}static getInstance(){return Fr.instance==null&&(Fr.instance=new Fr),Fr.instance}static registerManager(e,t){M(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Bu)&&(e=e.slice(0,e.indexOf(Bu))),M(e.length>0,()=>"scheme must not be an empty string.");let n=Fr.getInstance();M(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Af(e){if(e.indexOf(Bu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Fr.getSchemes().join(",")}`);return{scheme:e.split(Bu)[0],path:e.split(Bu)[1]}}async function U3(e,t,n=!1){M(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=Ut.getLoadHandlers(e);M(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),M(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let s=r[0],a=Ut.getSaveHandlers(t);M(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),M(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let o=a[0],i=Af(e).scheme,l=Af(e).path,c=i===Af(e).scheme,u=await s.load();n&&c&&await Fr.getManager(i).removeModel(l);let d=await o.save(u);return n&&!c&&await Fr.getManager(i).removeModel(l),d.modelArtifactsInfo}async function o_(){let e=Fr.getSchemes(),t={};for(let n of e){let r=await Fr.getManager(n).listModels();for(let s in r){let a=n+Bu+s;t[a]=r[s]}}return t}async function i_(e){let t=Af(e);return Fr.getManager(t.scheme).removeModel(t.path)}async function l_(e,t){return U3(e,t,!1)}async function u_(e,t){return U3(e,t,!0)}var c_=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new c_);try{Fr.registerManager(il.URL_SCHEME,new a_)}catch(e){}try{Fr.registerManager(ol.URL_SCHEME,new Y9)}catch(e){}}var d_={importFetch:()=>bR()},j2,p_=class{constructor(){this.util=vR(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(j2==null&&(j2=d_.importFetch()),j2(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Y().get("IS_NODE")&&Y().setPlatform("node",new p_);function Le(e,t="float32",n){return t=t||"float32",C2(e),new sn(e,t,n)}function h_(e,t){let n=$(e,"x","cast");if(!r3(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:n},s={dtype:t};return V.runKernel(La,r,s)}var ge=U({cast_:h_});function f_(e){let n={x:$(e,"x","clone","string_or_numeric")};return V.runKernel(Qa,n)}var Vn=U({clone_:f_});function G3(e,t=!1){console.log(e.toString(t))}N3();var m_={buffer:Le,cast:ge,clone:Vn,print:G3};S9(m_);var or={};Me(or,{browserFiles:()=>w_,browserHTTPRequest:()=>T_,concatenateArrayBuffers:()=>W2,copyModel:()=>l_,decodeWeights:()=>P3,encodeWeights:()=>M9,fromMemory:()=>E_,getLoadHandlers:()=>X9,getModelArtifactsForJSON:()=>V2,getModelArtifactsInfoForJSON:()=>Ud,getSaveHandlers:()=>q9,http:()=>Z2,isHTTPScheme:()=>K2,listModels:()=>o_,loadWeights:()=>k_,moveModel:()=>u_,registerLoadRouter:()=>j9,registerSaveRouter:()=>H9,removeModel:()=>i_,weightsLoaderFactory:()=>X3,withSaveHandler:()=>R_});var g_="model",y_=".json",A_=".weights.bin";function H3(e){return new Promise(t=>setTimeout(t)).then(e)}var q2=class{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(q2.URL_SCHEME)&&(e=e.slice(q2.URL_SCHEME.length)),(e==null||e.length===0)&&(e=g_),this.modelJsonFileName=e+y_,this.weightDataFileName=e+A_}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=O3(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await H3(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await H3(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ud(e)}}}},xf=q2;xf.URL_SCHEME="downloads://";var x_=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=r=>{let s=JSON.parse(r.target.result),a=s.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=V2(s,l=>this.loadWeights(l));e(i)},n.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let r=this.checkManifestAndWeightFiles(e),s=n.map(a=>this.loadWeightsFile(a,r[a]));return Promise.all(s).then(a=>[t,W2(a)])}loadWeightsFile(e,t){return new Promise((n,r)=>{let s=new FileReader;s.onload=a=>{let o=a.target.result;n(o)},s.onerror=a=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(s=>F3(s.name)),r={};for(let s of e)s.paths.forEach(a=>{let o=F3(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);r[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},b_=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(xf.URL_SCHEME)?v_(e.slice(xf.URL_SCHEME.length)):null;Ut.registerSaveRouter(b_);function v_(e="model"){return new xf(e)}function w_(e){return new x_(e)}function j3(e,t,n,r){o(e),n=n==null?0:n,r=r==null?1:r,i(n,r);let s=0,a=l=>(l.then(c=>{let u=n+ ++s/e.length*(r-n);return t(u),c}),l);function o(l){M(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){M(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),M(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),M(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(e.map(a))}async function q3(e,t){t==null&&(t={});let n=t.fetchFunc==null?Y().platform.fetch:t.fetchFunc,r=e.map(d=>n(d,t.requestInit,{isBinary:!0})),s=0,a=.5,i=(t.onProgress==null?await Promise.all(r):await j3(r,t.onProgress,s,a)).map(d=>d.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(i):await j3(i,t.onProgress,l,c)}async function k_(e,t="",n,r){return X3(o=>q3(o,{requestInit:r}))(e,t,n)}function X3(e){return async(t,n="",r)=>{let s=t.map(()=>!1),a={},o=r!=null?r.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=L2[y]*Ct(g.shape),A=()=>{s[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};r!=null?r.forEach((b,v)=>{b===g.name&&(A(),o[v]=!0)}):A(),i.push(g.name),m+=x})}),!o.every(h=>h)){let h=r.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=s.reduce((h,f,m)=>(f&&h.push(m),h),[]),c=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;c.push(m)})});let u=await e(c),d={},p=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let b=0;b<f;b++)m+=u[p+b].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let v=new Uint8Array(u[p+b]);y.set(v,x),x+=v.byteLength}a[h].forEach(b=>{let v=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),C=P3(v,[b.manifestEntry]);for(let I in C)d[I]=C[I]}),p+=f}),d}}var I_="application/octet-stream",S_="application/json",X2=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(M(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,M(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&M(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=O3(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:S_}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:I_}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Ud(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,r=t.weightsManifest;if(n==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return V2(t,s=>this.loadWeights(s))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=C_(t),s=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let o=[],i=[];for(let c of e)for(let u of c.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(u)):o.push(s+u+r);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await q3(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,W2(l)]}};X2.URL_SCHEME_REGEX=/^https?:\/\//;function C_(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}function K2(e){return e.match(X2.URL_SCHEME_REGEX)!=null}var K3=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(r=>K2(r)):n=K2(e),n)return Z2(e,t)}return null};Ut.registerSaveRouter(K3);Ut.registerLoadRouter(K3);function Z2(e,t){return new X2(e,t)}function T_(e,t){return Z2(e,t)}var Y2=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},N_=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function E_(e,t,n,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Y2(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Y2({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Y2({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function R_(e){return new N_(e)}var Z3={};Me(Z3,{confusionMatrix:()=>F_});function __(e,t,n=!1,r=!1){let s=$(e,"a","matMul"),a=$(t,"b","matMul");[s,a]=Mt(s,a);let o={a:s,b:a},i={transposeA:n,transposeB:r};return V.runKernel(za,o,i)}var qe=U({matMul_:__});function D_(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:$(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:r};return V.runKernel(zi,a,o)}var Gd=U({oneHot_:D_});function P_(e,t){let n=$(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{M(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let r={x:n},s={perm:t};return V.runKernel(Co,r,s)}var st=U({transpose_:P_});function $_(e,t,n){let r=$(e,"labels","confusionMatrix"),s=$(t,"predictions","confusionMatrix");M(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),M(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),M(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),M(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),M(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=Gd(ge(r,"int32"),n),o=Gd(ge(s,"int32"),n),i=st(a),l=qe(i,o);return ge(l,"int32")}var F_=U({confusionMatrix_:$_}),ll={};Me(ll,{assertAndGetBroadcastShape:()=>xt,getBroadcastDims:()=>Y3,getReductionAxes:()=>Zt});function Y3(e,t){let n=e.length,r=[];for(let s=0;s<n;s++){let a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&o===1&&r.unshift(a)}return r}function Zt(e,t){let n=[];for(let r=0;r<t.length;r++){let s=e[e.length-r-1],a=t.length-r-1,o=t[a];(s==null||s===1&&o>1)&&n.unshift(a)}return n}function xt(e,t){let n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let a=e[e.length-s-1];a==null&&(a=1);let o=t[t.length-s-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var Or={};Me(Or,{fromPixels:()=>V_,fromPixelsAsync:()=>B_,toPixels:()=>W_});function J3(e,t,n){if(mi(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=Ps(e,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return $o(e,t,r,n)}var ul;function Q3(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(s){let f=2;if(s&&e.readyState<f)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(pf(Dd,V.backendName)!=null){let f={pixels:e},m={numChannels:t};return V.runKernel(Dd,f,m)}let[c,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(o)d=e.getContext("2d").getImageData(0,0,c,u).data;else if(r||n)d=e.data;else if(a||s||i){if(ul==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")ul=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ul=document.createElement("canvas").getContext("2d");ul.canvas.width=c,ul.canvas.height=u,ul.drawImage(e,0,0,c,u),d=ul.getImageData(0,0,c,u).data}let p;if(t===4)p=new Int32Array(d);else{let f=c*u;p=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)p[m*t+g]=d[m*4+g]}return J3(p,[u,c,t],"int32")}function O_(e){return e!=null&&e.data instanceof Uint8Array}function M_(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function z_(e){return e!=null&&e.width!==0&&e.height!==0}function L_(e){return M_()&&!(e instanceof ImageBitmap)&&z_(e)&&!O_(e)}async function B_(e,t=3){let n=null;if(Y().getBool("WRAP_TO_IMAGEBITMAP")&&L_(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(s){r=null}r!=null&&r.width===e.width&&r.height===e.height?n=r:n=e}else n=e;return Q3(n,t)}async function W_(e,t){let n=$(e,"img","toPixels");if(!(e instanceof nt)){let c=n;n=ge(c,"int32"),c.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,s]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(s*r*4);for(let c=0;c<r*s;++c){let u=[0,0,0,255];for(let p=0;p<a;p++){let h=o[c*a+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(u[0]=h*i,u[1]=h*i,u[2]=h*i):u[p]=h*i}let d=c*4;l[d+0]=Math.round(u[0]),l[d+1]=Math.round(u[1]),l[d+2]=Math.round(u[2]),l[d+3]=Math.round(u[3])}if(t!=null){t.width=s,t.height=r;let c=t.getContext("2d"),u=new ImageData(l,s,r);c.putImageData(u,0,0)}return n!==e&&n.dispose(),l}var V_=U({fromPixels_:Q3}),J2={};Me(J2,{prepareAndValidate:()=>ev});function ev(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(Ct(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let s=t.shape,a=s[s.length-1],o=1;for(let d=0;d<s.length-1;++d)o*=s[d];let i=e.shape,l=s.slice();l.pop();let c=1;for(let d=a;d<n;++d)c*=i[d],l.push(i[d]);let u=[...iu(e.shape).map(d=>d/c),1].slice(0,a);return[l,o,c,u]}var Q2={};Me(Q2,{calculateShapes:()=>tv,validateInput:()=>ty,validateUpdateShape:()=>ey});function ey(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+` update.rank != ${s+e.length-r}`);for(let o=0;o<s;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==e[o+r])throw new Error(a+` updates.shape[${o+s}] (${n.shape[o+s]}) != shape[${o+s}] (${e[o+s]})`)}function ty(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ey(n,t,e)}function tv(e,t,n){let r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length,o=1;for(let d=s;d<a;++d)o*=n[d];let i=s<1?1:s,l=Ct(t.shape)/i,c=[...iu(n.slice(0,s)),1],u=Ct(n);return{sliceRank:s,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}var zt={};Me(zt,{assertParamsValid:()=>G_,computeFlatOffset:()=>K_,computeOutShape:()=>j_,getNormalizedAxes:()=>q_,isSliceContinous:()=>X_,maskToAxes:()=>H_,parseSliceParams:()=>cv,sliceInfo:()=>Z_,startForAxis:()=>lv,startIndicesWithElidedDims:()=>av,stopForAxis:()=>uv,stopIndicesWithElidedDims:()=>ov,stridesForAxis:()=>iv,stridesWithElidedDims:()=>nv});var ny=-2,U_=-1;function G_(e,t,n){let r=e.shape.length;M(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),M(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)M(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function H_(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function j_(e,t,n){let r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function nv(e,t,n,r){let s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)a===0?s[t]=1:(s.splice(t,0,1),s.pop());return s}function rv(e,t,n){return n<=e?n:n-(t-1)}function sv(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function q_(e,t,n,r,s,a,o,i,l){let c=e.length,u=new Array(c),d=new Array(c),p=new Array(c);if(t.length&&n>0){let h=t[0],f=n+1;u=av(o,h,f,r,e),d=ov(i,h,f,s,e),p=nv(a,h,f,e)}else for(let h=0;h<c;h++)u[h]=lv(o,r,a,e,h,l),d[h]=uv(i,s,a,e,h,l),p[h]=iv(a,h,l);return{begin:u,end:d,strides:p}}function av(e,t,n,r,s){let a=[...s],o=sv(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=rv(t,n,i),c=r[l];e&1<<l&&(c=0),a[i]=c}return a}function ov(e,t,n,r,s){let a=[...s],o=sv(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=rv(t,n,i),c=r[l];e&1<<l&&(c=Number.MAX_SAFE_INTEGER),a[i]=c}for(let i=0;i<a.length;i++){let l=s[i];a[i]<0&&(a[i]+=l),a[i]=hd(0,a[i],s[i])}return a}function iv(e,t,n){let r=e[t];return(n&1<<t||r==null)&&(r=1),r}function lv(e,t,n,r,s,a){let o=t[s],i=n[s]||1;(e&1<<s||a&1<<s||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=r[s];return o<0&&(o+=l),o=hd(0,o,l-1),o}function uv(e,t,n,r,s,a){let o=t[s],i=n[s]||1;(e&1<<s||a&1<<s||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=r[s];return o<0&&(o+=l),i>0?o=hd(0,o,l):o=hd(-1,o,l-1),o}function X_(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function K_(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function cv(e,t,n){let r,s=e.shape.length;typeof t=="number"?r=[t,...new Array(s-1).fill(0)]:t.length<s?r=t.concat(new Array(s-t.length).fill(0)):r=t.slice(),r.forEach(o=>{M(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(s).fill(-1):typeof n=="number"?a=[n,...new Array(s-1).fill(-1)]:n.length<s?a=n.concat(new Array(s-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(M(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-r[i])),[r,a]}function Z_(e,t,n,r,s,a,o,i,l){let c;if(r==null?(c=new Array(t.length),c.fill(1)):c=r,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1,d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let A=0;A<d.dims;A++)u&&(1<<A&i)!==0&&d.numAddAxisAfterEllipsis++,1<<A&o&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Y_(d,p);let h=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(p.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let b=!!(p.shrinkAxisMask&1<<A),v=e[A];if(v===-1){g.push(b?1:-1);continue}let C=[p.beginMask&1<<A,p.endMask&1<<A],I=[p.strides[A]>0?0:-1,p.strides[A]>0?v:v-1];if(b&&p.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[A]===1;let E=!!(p.beginMask&1<<A&&p.endMask&1<<A);if(p.beginValid&&p.endValid){if(b){let P=p.begin[A]<0?v+p.begin[A]:p.begin[A];if(p.begin[A]=P,p.end[A]=p.begin[A]+1,P<0||P>=v)throw Error(`slice index ${p.begin[A]} of dimension ${A} out of bounds.`)}else p.begin[A]=dv(p.begin[A],0,p.strides[A],v,C,I),p.end[A]=dv(p.end[A],1,p.strides[A],v,C,I);let _=p.strides[A]===1&&p.begin[A]===0&&p.end[A]===v;h=h&&_,f=f&&(A===0&&p.strides[A]===1||_)}else h=h&&p.strides[A]===1&&E,f=f&&(A===0&&p.strides[A]===1||E);let R,F=!1;if(p.beginValid&&p.endValid?(R=p.end[A]-p.begin[A],F=!0):b?(R=1,F=!0):E&&v>=0&&(p.strides[A]<0?R=-v:R=v,F=!0),F){let _;R===0||R<0!=p.strides[A]<0?_=0:_=Math.trunc(R/p.strides[A])+(R%p.strides[A]!==0?1:0),g.push(_)}else g.push(-1)}for(let A=0;A<p.finalShapeGatherIndices.length;++A){let b=p.finalShapeGatherIndices[A];b>=0?y.push(g[b]):b===ny&&y.push(1)}return{finalShapeSparse:y.filter((A,b)=>p.finalShapeGatherIndices[b]!==ny),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Y_(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(ny),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[r]),e.end!=null&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(U_),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function dv(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{let o=e<0?r+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var ce={};Me(ce,{Serializable:()=>pv,SerializationMap:()=>cl,registerClass:()=>Oo});var pv=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},cl=class{constructor(){this.classNameMap={}}static getMap(){return cl.instance==null&&(cl.instance=new cl),cl.instance}static register(e){cl.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Oo(e){M(e.className!=null,()=>"Class being registered does not have the static className property defined."),M(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),M(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),cl.register(e)}var hv={};Me(hv,{TEST_EPSILON_FLOAT16:()=>fv,encodeStrings:()=>mv,expectArrayBuffersEqual:()=>sD,expectArraysClose:()=>Q_,expectArraysEqual:()=>tD,expectNumbersClose:()=>nD,expectPromiseToFail:()=>eD,expectValuesInRange:()=>rD,testEpsilon:()=>ry});var J_=.001,fv=.1;function Q_(e,t,n){return n==null&&(n=ry()),sy(e,t,(r,s)=>ay(r,s,n))}function ry(){return V.backend.floatPrecision()===32?J_:fv}function sy(e,t,n){let r=!0;if((_n(e)||_n(t))&&(r=!1),_n(e)&&_n(t)&&(r=!0),r){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Ps(e),i=Ps(t);if(!Da(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let s=_n(e)?e:gi(e),a=_n(t)?t:gi(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.
Actual:   ${s}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=s[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${s}.
Expected: ${a}.`)}}function eD(e,t){e().then(()=>t.fail(),()=>t())}function tD(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Pa(e)||Pa(e[0])||Pa(t)||Pa(t[0])?sy(e,n,(r,s)=>r==s):sy(e,t,(r,s)=>ay(r,s,0))}function nD(e,t,n){if(n==null&&(n=ry()),!ay(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function ay(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function rD(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function sD(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let s=0;s<r.length;s++)if(n[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${n[s]} instead`)}function mv(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?mv(n):e[t]=Od(n)}return e}var oy="0.0.0";function iy(){Y().set("PROD",!0)}function aD(){Y().set("DEBUG",!0)}function oD(){Y().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ly(e){Y().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}C9(ly);function iD(){V.disposeVariables()}function Dn(){return V}function bf(){return V.memory()}function lD(e){return V.profile(e)}function X(e,t){return V.tidy(e,t)}function te(e){$2(e).forEach(n=>n.dispose())}function xn(e){return V.keep(e)}function uD(e){return V.time(e)}function uy(e){return V.setBackend(e)}function Wu(){return V.ready()}function xr(){return V.backendName}function cD(e){V.removeBackend(e)}function cy(e){return V.findBackend(e)}function dD(e){return V.findBackendFactory(e)}function dl(e,t,n=1){return V.registerBackend(e,t,n)}function gs(){return V.backend}function pD(e,t){Y().setPlatform(e,t)}function hD(e,t){let n=$(e,"a","add"),r=$(t,"b","add");[n,r]=Mt(n,r);let s={a:n,b:r};return V.runKernel(Zs,s)}var ue=U({add_:hD});function fD(e,t){let n=$(e,"a","floorDiv"),r=$(t,"b","floorDiv");[n,r]=Mt(n,r);let s={a:n,b:r};return V.runKernel(Za,s)}var Hd=U({floorDiv_:fD});function mD(e,t){let n=$(e,"a","div"),r=$(t,"b","div");if([n,r]=Mt(n,r),n.dtype==="int32"&&r.dtype==="int32")return Hd(n,r);let s={a:n,b:r},a={};return V.runKernel(ja,s,a)}var de=U({div_:mD});function gD(e,t){let n=$(e,"a","mul"),r=$(t,"b","mul");[n,r]=Mt(n,r);let s={a:n,b:r};return V.runKernel(uo,s)}var L=U({mul_:gD});function yD(e){let t=$(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return V.runKernel(yd,n)}else{let n={x:t};return V.runKernel(yi,n)}}var an=U({abs_:yD});function AD(e){let n={x:$(e,"x","acos")};return V.runKernel(uu,n)}var gv=U({acos_:AD});function xD(e){let n={x:$(e,"x","acosh")};return V.runKernel(cu,n)}var yv=U({acosh_:xD});function bD(e){M(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),M(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((s,a)=>$(s,`tensors${a}`,"addN")),n=t[0];t.forEach(s=>{if(s.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(s=>{if(!Da(s.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return V.runKernel(Fa,r)}var vf=U({addN_:bD});function vD(e,t=null,n=!1){let s={x:$(e,"x","all","bool")},a={axis:t,keepDims:n};return V.runKernel(du,s,a)}var dy=U({all_:vD});function wD(e,t=null,n=!1){let s={x:$(e,"x","any","bool")},a={axis:t,keepDims:n};return V.runKernel(pu,s,a)}var wf=U({any_:wD});function kD(e,t=0){let r={x:$(e,"x","argMax")},s={axis:t};return V.runKernel(Oa,r,s)}var Mr=U({argMax_:kD});function ID(e,t=0){let r={x:$(e,"x","argMin")},s={axis:t};return V.runKernel(hu,r,s)}var Av=U({argMin_:ID});function SD(e){let n={x:$(e,"x","asin")};return V.runKernel(fu,n)}var xv=U({asin_:SD});function CD(e){let n={x:$(e,"x","asinh")};return V.runKernel(mu,n)}var bv=U({asinh_:CD});function TD(e){let n={x:$(e,"x","atan")};return V.runKernel(gu,n)}var vv=U({atan_:TD});function ND(e,t){let n=$(e,"a","atan2"),r=$(t,"b","atan2");[n,r]=Mt(n,r);let s={a:n,b:r};return V.runKernel(Au,s)}var wv=U({atan2_:ND});function ED(e){let n={x:$(e,"x","atanh")};return V.runKernel(yu,n)}var kv=U({atanh_:ED});function RD(e,t,n,r,s="NHWC",a){let o=e[3],i=[...t,o],l=Cv(s);return jd(e,i,n,a,r,null,null,l)}function Iv(e,t,n,r,s,a,o="channelsLast"){let[i,l]=kf(t),c;if(o==="channelsLast")c=[i,l,e[3],e[3]];else if(o==="channelsFirst")c=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return jd(e,c,n,r,s,a,!1,o)}function _D(e,t,n,r,s,a,o="NDHWC"){let[i,l,c]=hy(t),u,d;if(o==="NDHWC")d="channelsLast",u=[i,l,c,e[4],e[4]];else if(o==="NCDHW")d="channelsFirst",u=[i,l,c,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Sv(e,u,n,r,s,!1,d,a)}function jd(e,t,n,r,s,a,o=!1,i="channelsLast"){let[l,c,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,d]=e;else if(i==="channelsFirst")[l,d,c,u]=e;else throw new Error(`Unknown dataFormat ${i}`);let[p,h,,f]=t,[m,g]=kf(n),[y,x]=kf(r),A=Vu(p,y),b=Vu(h,x),{padInfo:v,outHeight:C,outWidth:I}=$D(s,c,u,m,g,A,b,a,i),E=o?f*d:f,R;return i==="channelsFirst"?R=[l,E,C,I]:i==="channelsLast"&&(R=[l,C,I,E]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:u,inChannels:d,outHeight:C,outWidth:I,outChannels:E,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:A,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:e,outShape:R,filterShape:t}}function Sv(e,t,n,r,s,a=!1,o="channelsLast",i){let[l,c,u,d,p]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,d,p]=e;else if(o==="channelsFirst")[l,p,c,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[y,x,A]=hy(n),[b,v,C]=hy(r),I=Vu(h,b),E=Vu(f,v),R=Vu(m,C),{padInfo:F,outDepth:_,outHeight:P,outWidth:T}=FD(s,c,u,d,y,x,A,I,E,R,i),O=a?g*p:g,G;return o==="channelsFirst"?G=[l,O,_,P,T]:o==="channelsLast"&&(G=[l,_,P,T,O]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:d,inChannels:p,outDepth:_,outHeight:P,outWidth:T,outChannels:O,padInfo:F,strideDepth:y,strideHeight:x,strideWidth:A,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:v,dilationWidth:C,inShape:e,outShape:G,filterShape:t}}function DD(e,t,n,r,s){r==null&&(r=py(e,t,n));let a=e[0],o=e[1],i=pl((a-t+2*r)/n+1,s),l=pl((o-t+2*r)/n+1,s);return[i,l]}function PD(e,t,n,r,s,a){s==null&&(s=py(e,t,r));let o=e[0],i=e[1],l=e[2],c=pl((o-t+2*s)/r+1,a),u=pl((i-t+2*s)/r+1,a),d=pl((l-t+2*s)/r+1,a);return[c,u,d,n]}function py(e,t,n,r=1){let s=Vu(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function kf(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function hy(e){return typeof e=="number"?[e,e,e]:e}function Vu(e,t){return t<=1?e:e+(e-1)*(t-1)}function $D(e,t,n,r,s,a,o,i,l){let c,u,d;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=DD([t,n],a,r,e,i);u=h[0],d=h[1]}else if(e==="same"){u=Math.ceil(t/r),d=Math.ceil(n/s);let p=Math.max(0,(u-1)*r+a-t),h=Math.max(0,(d-1)*s+o-n),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),y=h-g;c={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-a+1)/r),d=Math.ceil((n-o+1)/s);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];c={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=pl((t-a+p+h)/r+1,i),d=pl((n-o+f+m)/s+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:u,outWidth:d}}function FD(e,t,n,r,s,a,o,i,l,c,u){let d,p,h,f;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=PD([t,n,r,1],i,1,s,e,u);p=g[0],h=g[1],f=g[2]}else if(e==="same"){p=Math.ceil(t/s),h=Math.ceil(n/a),f=Math.ceil(r/o);let m=(p-1)*s+i-t,g=(h-1)*a+l-n,y=(f-1)*o+c-r,x=Math.floor(m/2),A=m-x,b=Math.floor(g/2),v=g-b,C=Math.floor(y/2),I=y-C;d={top:b,bottom:v,left:C,right:I,front:x,back:A,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/s),h=Math.ceil((n-l+1)/a),f=Math.ceil((r-c+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function pl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Mo(e){let[t,n,r]=kf(e);return t===1&&n===1&&r===1}function $s(e,t){return Mo(e)||Mo(t)}function Cv(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Un(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")M(ou(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(s=>{M(ou(s),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${s}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function OD(e,t){let r={x:$(e,"x","reshape","string_or_numeric")},s={shape:t};return V.runKernel(Wi,r,s)}var H=U({reshape_:OD});function MD(e,t,n,r,s){let a=$(e,"x","avgPool","float32"),o=1;M($s(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Un("avgPool",r,s);let c={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},d=V.runKernel(Ma,c,u);return d=ge(d,a.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var If=U({avgPool_:MD});function zD(e,t,n,r,s,a="NDHWC"){let o=$(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Un("avgPool3d",r,s);let c={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},d=V.runKernel(md,c,u);return d=ge(d,i.dtype),l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var fy=U({avgPool3d_:zD});function LD(e,t=0){M(e.length>=1,()=>"Pass at least one tensor to concat");let n=Vd(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Vn(n[0]);let r=n,s={axis:t};return V.runKernel(xi,r,s)}var St=U({concat_:LD});function BD(e){let n={x:$(e,"x","sigmoid","float32")};return V.runKernel(xo,n)}var Pn=U({sigmoid_:BD});function WD(e,t,n){let r=$(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let s={x:r},a={begin:t,size:n};return V.runKernel(ji,s,a)}var Fe=U({slice_:WD});function VD(e){let n={x:$(e,"x","tanh","float32")};return V.runKernel(So,n)}var Uu=U({tanh_:VD});function UD(e,t,n,r,s,a){let o=$(e,"forgetBias","basicLSTMCell"),i=$(t,"lstmKernel","basicLSTMCell"),l=$(n,"lstmBias","basicLSTMCell"),c=$(r,"data","basicLSTMCell"),u=$(s,"c","basicLSTMCell"),d=$(a,"h","basicLSTMCell"),p=St([c,d],1),h=qe(p,i),f=ue(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=Fe(f,[0,0],y),A=Fe(f,[0,g],y),b=Fe(f,[0,g*2],y),v=Fe(f,[0,g*3],y),C=ue(L(Pn(x),Uu(A)),L(u,Pn(ue(o,b)))),I=L(Uu(C),Pn(v));return[C,I]}var GD=U({basicLSTMCell_:UD});function HD(e,t,n){let r=$(e,"x","batchToSpaceND"),s=t.reduce((i,l)=>i*l);M(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),M(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),M(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);let a={x:r},o={blockShape:t,crops:n};return V.runKernel(Ai,a,o)}var Sf=U({batchToSpaceND_:HD});function jD(e){let t;return e.rank===0||e.rank===1?t=H(e,[1,1,1,e.size]):e.rank===2?t=H(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function qD(e,t,n,r,s,a){a==null&&(a=.001);let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;s!=null&&(c=$(s,"scale","batchNorm"));let u;r!=null&&(u=$(r,"offset","batchNorm")),M(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:jD(o),scale:c,offset:u,mean:i,variance:l},h={varianceEpsilon:a},f=V.runKernel(Ya,p,h);return H(f,o.shape)}var Gu=U({batchNorm_:qD});function XD(e,t,n,r,s,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;s!=null&&(c=$(s,"scale","batchNorm"));let u;return r!=null&&(u=$(r,"offset","batchNorm")),M(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),M(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),M(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Gu(o,i,l,u,c,a)}var Tv=U({batchNorm2d_:XD});function KD(e,t,n,r,s,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;s!=null&&(c=$(s,"scale","batchNorm"));let u;return r!=null&&(u=$(r,"offset","batchNorm")),M(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),M(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),M(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Gu(o,i,l,u,c,a)}var Nv=U({batchNorm3d_:KD});function ZD(e,t,n,r,s,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),c;s!=null&&(c=$(s,"scale","batchNorm"));let u;return r!=null&&(u=$(r,"offset","batchNorm")),M(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),M(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),M(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&M(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&M(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Gu(o,i,l,u,c,a)}var Ev=U({batchNorm4d_:ZD});function YD(e,t,n){let r=$(e,"x","bincount"),s=$(t,"weights","bincount");M(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);let a={x:r,weights:s},o={size:n};return V.runKernel(Bh,a,o)}var my=U({bincount_:YD});function JD(e,t){let n=$(e,"s0","broadcastArgs","int32"),r=$(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let s={s0:n,s1:r};return V.runKernel(Wh,s)}var Rv=U({broadcastArgs_:JD});function QD(e,t){let n=$(e,"broadcastTo","x"),r=n.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let c=n.shape.slice();for(;c.length<t.length;)c.unshift(1);n=H(n,c)}let s=n.shape,a=Array.from(t);for(let c=t.length-1;c>=0;c--)if(s[c]===t[c])a[c]=1;else if(n.shape[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(a.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return Vn(n);let i={x:n},l={reps:a};return V.runKernel(Js,i,l)}var qd=U({broadcastTo_:QD});function eP(e){let n={x:$(e,"x","ceil","float32")};return V.runKernel(Ba,n)}var _v=U({ceil_:eP});function tP(e,t,n){let r=$(e,"x","clipByValue");M(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let s={x:r},a={clipValueMin:t,clipValueMax:n};return V.runKernel(Ys,s,a)}var br=U({clipByValue_:tP});function nP(e){return St(e,0)}var Dv=U({concat1d_:nP});function rP(e,t){return St(e,t)}var Hu=U({concat2d_:rP});function sP(e,t){return St(e,t)}var Pv=U({concat3d_:sP});function aP(e,t){return St(e,t)}var $v=U({concat4d_:aP});function oP(e,t,n,r,s="NHWC",a=[1,1],o){let i=$(e,"x","conv2d","float32"),l=$(t,"filter","conv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Un("conv2d",r,o);let d=s==="NHWC"?c.shape[3]:c.shape[1];M(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),M($s(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let p={x:c,filter:l},h={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=V.runKernel(Wa,p,h);return u?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var zo=U({conv2d_:oP});function iP(e,t,n,r,s="NWC",a=1,o){let i=$(e,"x","conv1d"),l=$(t,"filter","conv1d"),c=i,u=!1;i.rank===2&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1]])),M(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),M(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Un("conv1d",r,o),M(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),M($s(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),M(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);let d=H(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=H(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=zo(p,d,[1,n],r,"NHWC",[1,a],o);return u?H(g,[g.shape[2],g.shape[3]]):H(g,[g.shape[0],g.shape[2],g.shape[3]])}var gy=U({conv1d_:iP});function lP(e,t,n,r,s,a="NHWC",o){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,c=!1;t.rank===3&&(c=!0,l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),M(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),M(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),M(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let u=a==="NHWC"?i[3]:i[1],d=a==="NHWC"?l.shape[3]:l.shape[1];M(u===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[2]}.`),M(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),Un("conv2dDerInput",s,o);let p={dy:l,filter:n},h={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,inputShape:i},f=V.runKernel(Va,p,h);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var yy=U({conv2DBackpropInput_:lP});function uP(e,t,n,r,s,a){let o=$(e,"x","conv2dTranspose"),i=$(t,"filter","conv2dTranspose");return yy(n,o,i,r,s,"NHWC",a)}var Ay=U({conv2dTranspose_:uP});function cP(e,t,n,r,s="NDHWC",a=[1,1,1]){let o=$(e,"x","conv3d"),i=$(t,"filter","conv3d"),l=o,c=!1;o.rank===4&&(c=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),M(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),M(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),M($s(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);let u={x:l,filter:i},d={strides:n,pad:r,dataFormat:s,dilations:a},p=V.runKernel(Ad,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var xy=U({conv3d_:cP});function dP(e,t,n,r,s){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],c=o.shape[4];M(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),M(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),M(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),M(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),M(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);let u={dy:o,filter:n},d={pad:s,strides:r,inputShape:a},p=V.runKernel(Gh,u,d);return i?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Fv=U({conv3DBackpropInput_:dP});function pP(e,t,n,r,s){let a=$(e,"x","conv3dTranspose"),o=$(t,"filter","conv3dTranspose");return Fv(n,a,o,r,s)}var Ov=U({conv3dTranspose_:pP});function hP(e){let n={x:$(e,"x","cos","float32")};return V.runKernel(Ua,n)}var Cf=U({cos_:hP});function fP(e){let n={x:$(e,"x","cosh","float32")};return V.runKernel(Ga,n)}var by=U({cosh_:fP});function mP(e,t=0,n=!1,r=!1){let a={x:$(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:r};return V.runKernel(bi,a,o)}var vy=U({cumsum_:mP});function gP(e,t,n,r=!1){let s=$(e,"x","denseBincount"),a=$(t,"weights","denseBincount");M(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),M(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(a.size===s.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`);let o={x:s,weights:a},i={size:n,binaryOutput:r};return V.runKernel(Hh,o,i)}var Mv=U({denseBincount_:gP});function yP(e,t,n="NHWC"){let r=$(e,"x","depthToSpace","float32"),s=n==="NHWC"?r.shape[1]:r.shape[2],a=n==="NHWC"?r.shape[2]:r.shape[3],o=n==="NHWC"?r.shape[3]:r.shape[1];M(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),M(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t}  for depthToSpace with input shape
    ${r.shape}`),M(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${r.shape}`),M(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`);let i={x:r},l={blockSize:t,dataFormat:n};return V.runKernel(wi,i,l)}var zv=U({depthToSpace_:yP});function AP(e,t,n,r,s="NHWC",a=[1,1],o){let i=$(e,"x","depthwiseConv2d","float32"),l=$(t,"filter","depthwiseConv2d","float32"),c=i,u=!1;i.rank===3&&(u=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),Un("depthwiseConv2d",r,o);let d={x:c,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},h=V.runKernel(Ha,d,p);return u?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Xd=U({depthwiseConv2d_:AP});function xP(e){let n={x:$(e,"x","diag")};return V.runKernel(Xh,n)}var bP=U({diag_:xP});function vP(e,t,n,r,s=[1,1],a="NHWC"){let o=$(e,"x","dilation2d"),i=$(t,"filter","dilation2d");M(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),M(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),M(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,c=!1;o.rank===3&&(l=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);let u={x:l,filter:i},d={strides:n,pad:r,dilations:s},p=V.runKernel(xd,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Lv=U({dilation2d_:vP});function wP(e,t){let n=$(e,"a","equal","string_or_numeric"),r=$(t,"b","equal","string_or_numeric");[n,r]=Mt(n,r),xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel(ki,s)}var zr=U({equal_:wP});function kP(e,t,n){let r=$(t,"a","where"),s=$(n,"b","where"),a=$(e,"condition","where","bool"),o=xt(xt(a.shape,r.shape),s.shape),i=qd(a,o),l=qd(r,o),c=qd(s,o),u={condition:i,t:l,e:c};return V.runKernel(Hi,u)}var Gn=U({where_:kP});function IP(e){let n={x:$(e,"x","zerosLike")};return V.runKernel(tl,n)}var at=U({zerosLike_:IP});function SP(e,t){let n=$(e,"a","div"),r=$(t,"b","div");[n,r]=Mt(n,r);let s=de(n,r),a=at(s),o=zr(r,a);return Gn(o,a,s)}var Bv=U({divNoNan_:SP});function CP(e,t){let n=$(e,"t1","dot"),r=$(t,"t2","dot");M((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let s=n.rank===1?n.size:n.shape[1],a=r.rank===1?r.size:r.shape[0];if(M(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),n.rank===1&&r.rank===1){let o=H(n,[1,-1]),i=H(r,[-1,1]),l=qe(o,i);return H(l,[])}else if(n.rank===1&&r.rank===2){let o=H(n,[1,-1]),i=H(r,[r.shape[0],r.shape[1]]),l=qe(o,i);return H(l,[l.size])}else if(n.rank===2&&r.rank===1){let o=H(r,[-1,1]),i=qe(n,o);return H(i,[i.size])}else{let o=H(r,[r.shape[0],r.shape[1]]);return qe(n,o)}}var TP=U({dot_:CP});function NP(e,...t){let n=t.map((s,a)=>$(s,`tensors${a}`,"einsum")),r={equation:e};return V.runKernel(bd,n,r)}var Wv=U({einsum_:NP});function EP(e){let n={x:$(e,"x","elu","float32")};return V.runKernel(qa,n)}var Kd=U({elu_:EP});function RP(e){let t=$(e,"x","erf");M(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ge(t,"float32"));let n={x:t};return V.runKernel(xu,n)}var Vv=U({erf_:RP});function _P(e){let n={x:$(e,"x","exp")};return V.runKernel(Xa,n)}var Lr=U({exp_:_P});function DP(e,t=0){let n=$(e,"x","expandDims","string_or_numeric");M(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},s={dim:t};return V.runKernel(Ii,r,s)}var Yt=U({expandDims_:DP});function PP(e){let n={x:$(e,"x","expm1")};return V.runKernel(Si,n)}var Uv=U({expm1_:PP});function $P(e,t){let n=$(e,"x","tile","string_or_numeric");M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},s={reps:t};return V.runKernel(Js,r,s)}var Qr=U({tile_:$P});function FP(e,t,n,r="float32"){t==null&&(t=e);let s=Le([e,t],r),a=e<=t?e:t;for(let i=0;i<a;++i)s.set(1,i,i);let o=H(s.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return Qr(Yt(o,0),[n[0],1,1]);if(n.length===2)return Qr(Yt(Yt(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return Qr(Yt(Yt(Yt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var wy=U({eye_:FP});function ju(e,t,n){let r={shape:e,value:t,dtype:n};return V.runKernel(bu,{},r)}function OP(e){let n={x:$(e,"x","floor","float32")};return V.runKernel(Ka,n)}var Zd=U({floor_:OP});function MP(e,t,n=0,r=0){let s=$(e,"x","gather"),a=$(t,"indices","gather","int32"),o={x:s,indices:a},i={axis:n,batchDims:r};return V.runKernel(Ti,o,i)}var qu=U({gather_:MP});function zP(e,t){let n=$(e,"a","greater","string_or_numeric"),r=$(t,"b","greater","string_or_numeric");[n,r]=Mt(n,r),xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel(Ei,s)}var vr=U({greater_:zP});function LP(e,t){let n=$(e,"a","greaterEqual","string_or_numeric"),r=$(t,"b","greaterEqual","string_or_numeric");[n,r]=Mt(n,r),xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel(Ja,s)}var hl=U({greaterEqual_:LP});function BP(e){let n={input:$(e,"input","imag")};return V.runKernel(vd,n)}var Tf=U({imag_:BP});function WP(e){let n={x:$(e,"x","isFinite")};return V.runKernel(vu,n)}var VP=U({isFinite_:WP});function UP(e){let n={x:$(e,"x","isInf")};return V.runKernel(wu,n)}var GP=U({isInf_:UP});function HP(e){let n={x:$(e,"x","isNaN")};return V.runKernel(ku,n)}var Gv=U({isNaN_:HP});function jP(e,t=.2){let r={x:$(e,"x","leakyRelu")},s={alpha:t};return V.runKernel(eo,r,s)}var Nf=U({leakyRelu_:jP});function qP(e,t){let n=$(e,"a","less","string_or_numeric"),r=$(t,"b","less","string_or_numeric");[n,r]=Mt(n,r),xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel(Ri,s)}var ky=U({less_:qP});function XP(e,t){let n=$(e,"a","lessEqual","string_or_numeric"),r=$(t,"b","lessEqual","string_or_numeric");[n,r]=Mt(n,r),xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel(_i,s)}var fl=U({lessEqual_:XP});function Hv(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return V.runKernel(ef,{},r)}function KP(e,t=5,n=1,r=1,s=.5){let a=$(e,"x","localResponseNormalization");M(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),M(ou(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=H(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},c={depthRadius:t,bias:n,alpha:r,beta:s},u=V.runKernel(kd,l,c);return i?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var jv=U({localResponseNormalization_:KP});function ZP(e){let n={x:$(e,"x","log","float32")};return V.runKernel(to,n)}var Br=U({log_:ZP});function YP(e){let n={x:$(e,"x","log1p")};return V.runKernel(Iu,n)}var Ef=U({log1p_:YP});function JP(e){return M($a(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=$(t,"x","tf.grad","string_or_numeric"),s=n!=null?$(n,"dy","tf.grad"):null;return V.tidy(()=>{let{value:a,grads:o}=V.gradients(()=>e(r),[r],s);return s!=null&&Ln(a.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Rf(o),o[0]})}}function QP(e){return M($a(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{M(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=Vd(t,"args","tf.grads","string_or_numeric"),s=n!=null?$(n,"dy","tf.grads"):null;return V.tidy(()=>{let{value:a,grads:o}=V.gradients(()=>e(...r),r,s);return s!=null&&Ln(a.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Rf(o),o})}}function e$(e){return M($a(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{M(t instanceof nt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),M(n==null||n instanceof nt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:s}=V.gradients(()=>e(t),[t],n);return Rf(r),{grad:r[0],value:s}}}function t$(e){return M($a(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{M(Array.isArray(t)&&t.every(s=>s instanceof nt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),M(n==null||n instanceof nt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=V.gradients(()=>e(...t),t,n);return n!=null&&Ln(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Rf(r.grads),r}}function qv(e,t){M($a(e),()=>"The f passed in variableGrads(f) must be a function"),M(t==null||Array.isArray(t)&&t.every(c=>c instanceof Bd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let c in V.registeredVariables)t.push(V.registeredVariables[c])}let r=n?t.filter(c=>!c.trainable):null,s=t.length;t=t.filter(c=>c.trainable),M(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);let a=!0,{value:o,grads:i}=V.gradients(e,t,null,a);M(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((c,u)=>{i[u]!=null&&(l[c.name]=i[u])}),r!=null&&r.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Fs(e){return V.customGrad(e)}function Rf(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function n$(e){let n={x:$(e,"x","neg")};return V.runKernel(Pi,n)}var Lt=U({neg_:n$});function r$(e){let n={x:$(e,"x","softplus")};return V.runKernel(Pu,n)}var Xu=U({softplus_:r$});function s$(e){let t=$(e,"x","logSigmoid");return Fs(r=>({value:Lt(Xu(Lt(r))),gradFunc:o=>L(o,Pn(Lt(r)))}))(t)}var a$=U({logSigmoid_:s$});function o$(e,t=null,n=!1){let s={x:$(e,"x","max")},a={reductionIndices:t,keepDims:n};return V.runKernel(no,s,a)}var bn=U({max_:o$});function i$(e,t){let n=$(e,"a","sub"),r=$(t,"b","sub");[n,r]=Mt(n,r);let s={a:n,b:r};return V.runKernel(Io,s)}var pe=U({sub_:i$});function l$(e,t=null,n=!1){let r=$(e,"x","sum");r.dtype==="bool"&&(r=ge(r,"int32"));let s={x:r},a={axis:t,keepDims:n};return V.runKernel(vo,s,a)}var we=U({sum_:l$});function u$(e,t=-1){let n=$(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Fs((s,a)=>{let o=!0,i=bn(s,t,!0),l=pe(s,i),c=pe(ge(l,"float32"),Br(we(Lr(l),t,o)));return a([c]),{value:c,gradFunc:(d,p)=>{let[h]=p,f=!0,m=Lr(h);return pe(d,L(we(d,t,f),m))}}})(n)}var Iy=U({logSoftmax_:u$});function Sy(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Xv(e,t,n){let r=e.length+t.length,s=[],a=0,o=0;for(let i=0;i<r;i++)n.indexOf(i)===-1?s.push(e[a++]):s.push(t[o++]);return s}function Kv(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)t.indexOf(a)===-1&&n.push(e[a]);let s=t.map(a=>e[a]);return[n,s]}function ml(e,t){let n=t.map(r=>1);return Xv(e,n,t)}function c$(e,t,n){M(Sy(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Zv(e,t){if(Sy(e,t))return null;let n=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&n.push(r);return e.forEach(r=>n.push(r)),n}function Cy(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function d$(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function p$(e,t=null,n=!1){let r=$(e,"x","logSumExp"),s=Yr(t,r.shape),a=bn(r,s,!0),o=pe(r,a),i=Lr(o),l=we(i,s),c=Br(l),u=ue(H(a,c.shape),c);if(n){let d=ml(u.shape,s);return H(u,d)}return u}var Yv=U({logSumExp_:p$});function h$(e,t){let n=$(e,"a","logicalAnd","bool"),r=$(t,"b","logicalAnd","bool");xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel(Di,s)}var ys=U({logicalAnd_:h$});function f$(e){let n={x:$(e,"x","logicalNot","bool")};return V.runKernel(Su,n)}var _f=U({logicalNot_:f$});function m$(e,t){let n=$(e,"a","logicalOr","bool"),r=$(t,"b","logicalOr","bool");xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel(wd,s)}var Ty=U({logicalOr_:m$});function g$(e,t){let n=$(e,"a","logicalXor","bool"),r=$(t,"b","logicalXor","bool");return xt(n.shape,r.shape),ys(Ty(e,t),_f(ys(e,t)))}var y$=U({logicalXor_:g$});function A$(e,t,n,r,s){let a=$(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),M($s(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),Un("maxPool",r,s);let c={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},d=V.runKernel(so,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Df=U({maxPool_:A$});function x$(e,t=[1,1,1],n,r,s,a="NDHWC"){let o=$(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Un("maxPool3d",r,s);let c={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},d=V.runKernel(Id,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Ny=U({maxPool3d_:x$});function b$(e,t,n,r,s=!1){let o={x:$(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},l=V.runKernel(sf,o,i);return{result:l[0],indexes:l[1]}}var Jv=U({maxPoolWithArgmax_:b$});function v$(e,t){let n=$(e,"a","maximum"),r=$(t,"b","maximum");[n,r]=Mt(n,r),n.dtype==="bool"&&(n=ge(n,"int32"),r=ge(r,"int32")),xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel(ro,s)}var ea=U({maximum_:v$});function w$(e,t=null,n=!1){let s={x:$(e,"x","mean")},a={axis:t,keepDims:n};return V.runKernel(ao,s,a)}var Gt=U({mean_:w$});function Ht(e,t="float32"){if(t==="complex64"){let r=Ht(e,"float32"),s=Ht(e,"float32");return Po(r,s)}let n=Mh(Ct(e),t);return V.makeTensor(n,e,t)}function wr(e,t="float32"){if(t==="complex64"){let r=wr(e,"float32"),s=Ht(e,"float32");return Po(r,s)}let n=S2(Ct(e),t);return V.makeTensor(n,e,t)}function k$(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=$(e,"x","meshgrid",e instanceof nt?e.dtype:"float32");if(t===void 0)return[r];let s=$(t,"y","meshgrid",t instanceof nt?t.dtype:"float32"),a=Ct(r.shape),o=Ct(s.shape);return n==="xy"?(r=H(r,[1,-1]),s=H(s,[-1,1]),[qe(wr([o,1],r.dtype),r),qe(s,wr([1,a],s.dtype))]):(r=H(r,[-1,1]),s=H(s,[1,-1]),[qe(r,wr([1,o],r.dtype)),qe(wr([a,1],s.dtype),s)])}function I$(e,t=null,n=!1){let s={x:$(e,"x","min")},a={axis:t,keepDims:n};return V.runKernel(oo,s,a)}var Lo=U({min_:I$});function S$(e,t){let n=$(e,"a","minimum"),r=$(t,"b","minimum");[n,r]=Mt(n,r),n.dtype==="bool"&&(n=ge(n,"int32"),r=ge(r,"int32")),xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel(io,s)}var Yd=U({minimum_:S$});function C$(e,t,n){M(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=$(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let s=n==="reflect"?1:0;for(let i=0;i<r.rank;i++)M(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),M(t[i][0]>=0&&t[i][0]<=r.shape[i]-s&&t[i][1]>=0&&t[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);let a={paddings:t,mode:n},o={x:r};return V.runKernel(lo,o,a)}var Qv=U({mirrorPad_:C$});function T$(e,t){let n=$(e,"a","mod"),r=$(t,"b","mod");[n,r]=Mt(n,r);let s={a:n,b:r};return V.runKernel(Cu,s)}var Ku=U({mod_:T$});function N$(e){let t=$(e,"x","square"),n={};return V.runKernel("Square",{x:t},n)}var bt=U({square_:N$});function E$(e,t=null,n=!1){e=$(e,"x","moments");let r=Yr(t,e.shape),s=Gt(e,r,n),a=s.shape;n||(a=ml(s.shape,r));let o=bt(pe(ge(e,"float32"),H(s,a))),i=Gt(o,r,n);return{mean:s,variance:i}}var Pf=U({moments_:E$});function R$(e,t,n,r){let s=$(t,"data","multiRNNCell"),a=Vd(n,"c","multiRNNCell"),o=Vd(r,"h","multiRNNCell"),i=s,l=[];for(let d=0;d<e.length;d++){let p=e[d](i,a[d],o[d]);l.push(p[0]),l.push(p[1]),i=p[1]}let c=[],u=[];for(let d=0;d<l.length;d+=2)c.push(l[d]),u.push(l[d+1]);return[c,u]}var _$=U({multiRNNCell_:R$});function D$(e,t,n,r=!1){let s=$(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?H(s,[1,-1]):s},c={numSamples:t,seed:n,normalized:r},u=V.runKernel(af,l,c);return o===1?H(u,[u.size]):u}var ew=U({multinomial_:D$});function P$(e,t){let n=$(e,"a","notEqual","string_or_numeric"),r=$(t,"b","notEqual","string_or_numeric");[n,r]=Mt(n,r),xt(n.shape,r.shape);let s={a:n,b:r};return V.runKernel($i,s)}var Zu=U({notEqual_:P$});function $$(e){let n={x:$(e,"x","onesLike")};return V.runKernel(Mi,n)}var Wr=U({onesLike_:$$});function F$(e,t){let n=$(e,"v1","outerProduct"),r=$(t,"v2","outerProduct");M(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let s=H(n,[-1,1]),a=H(r,[1,-1]);return qe(s,a)}var O$=U({outerProduct_:F$});function M$(e,t,n=0){let r=$(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let s={paddings:t,constantValue:n},a={x:r};return V.runKernel(co,a,s)}var es=U({pad_:M$});function z$(e,t,n=0){return M(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),es(e,[t],n)}var L$=U({pad1d_:z$});function B$(e,t,n=0){return M(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),es(e,t,n)}var W$=U({pad2d_:B$});function V$(e,t,n=0){return M(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),es(e,t,n)}var U$=U({pad3d_:V$});function G$(e,t,n=0){return M(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),es(e,t,n)}var H$=U({pad4d_:G$});function j$(e,t,n){let r=$(e,"x","spaceToBatchND");M(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),M(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),M(r.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let s={x:r},a={blockShape:t,paddings:n};return V.runKernel(Xi,s,a)}var $f=U({spaceToBatchND_:j$});function q$(e,t,n,r,s,a,o){s==null&&(s=[1,1]),a==null&&(a=1),r===0&&(r="valid");let i=$(e,"x","maxPool"),l=i,c=!1;i.rank===3&&(c=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M($s(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let u=Iv(l.shape,t,a,s,r),d=[u.dilationHeight,u.dilationWidth],p;r==="same"?p=K$([u.filterHeight,u.filterWidth],d):p=[[0,0],[0,0]];let h=d[0]===1&&d[1]===1,[f,m]=X$([u.inHeight,u.inWidth],d,p),g=h?r:"valid",y=h?l:$f(l,d,f),A=(n==="avg"?()=>If(y,t,a,g,o):()=>Df(y,t,a,g,o))(),b=h?A:Sf(A,d,m);return c?H(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function X$(e,t,n){let r=n.map(u=>u[0]),s=n.map(u=>u[1]),a=e.concat(r,s),o=t.map((u,d)=>(u-a[d]%u)%u),i=s.map((u,d)=>u+o[d]),l=t.map((u,d)=>[r[d],i[d]]),c=t.map((u,d)=>[0,o[d]]);return[l,c]}function K$(e,t){let r=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),s=r.map(o=>Math.floor(o/2)),a=r.map((o,i)=>o-s[i]);return r.map((o,i)=>[s[i],a[i]])}var Z$=U({pool_:q$});function Y$(e,t){let n=$(e,"base","pow"),r=$(t,"exp","pow");[n,r]=Mt(n,r);let s={a:n,b:r};return V.runKernel(po,s)}var Bo=U({pow_:Y$});function J$(e,t){let n=$(e,"x","prelu"),r=$(t,"alpha","prelu"),s={x:n,alpha:r};return V.runKernel(ho,s)}var Ff=U({prelu_:J$});function Q$(e,t=null,n=!1){let r=$(e,"x","prod");r.dtype==="bool"&&(r=ge(r,"int32"));let s={x:r},a={axis:t,keepDims:n};return V.runKernel(Bi,s,a)}var Ey=U({prod_:Q$});function eF(e,t,n){let r=Ct(e),s=null;if(n==null||n==="float32")s=new Float32Array(r);else if(n==="int32")s=new Int32Array(r);else if(n==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<r;a++)s[a]=t();return V.makeTensor(s,e,n)}var tF=U({rand_:eF}),Ry=fi(Dh()),_y=class{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=Ry.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,s,a;do r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},nF=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let s=r||Math.random();this.randu=Ry.alea(s.toString()),this.randn=new _y(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do r=this.randn.nextValue(),a=1+this.c*r;while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},rF=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ry.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function sF(e,t,n=1,r="float32",s){if(n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let a=new nF(t,n,r,s),o=Le(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var aF=U({randomGamma_:sF});function oF(e,t=0,n=1,r,s){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let a=new _y(t,n,r,!1,s),o=Le(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var tw=U({randomNormal_:oF});function iF(e,t=0,n=1,r="float32",s){let a=Le(e,r),o=new rF(t,n,null,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var Yu=U({randomUniform_:iF});function Ju(e,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");let s={start:e,stop:t,step:n,dtype:r};return V.runKernel(Nu,{},s)}function lF(e){let n={input:$(e,"input","real")};return V.runKernel(Sd,n)}var Jd=U({real_:lF});function uF(e){let n={x:$(e,"x","reciprocal")};return V.runKernel(Eu,n)}var nw=U({reciprocal_:uF});function cF(e){let n={x:$(e,"x","relu")};return V.runKernel(fo,n)}var Os=U({relu_:cF});function dF(e){let n={x:$(e,"x","relu6")};return V.runKernel(go,n)}var Dy=U({relu6_:dF});function pF(e,t){let r={x:$(e,"x","reverse")},s={dims:t};return V.runKernel(Vi,r,s)}var Vr=U({reverse_:pF});function hF(e){let t=$(e,"x","reverse");return M(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Vr(t,0)}var fF=U({reverse1d_:hF});function mF(e,t){let n=$(e,"x","reverse");return M(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Vr(n,t)}var gF=U({reverse2d_:mF});function yF(e,t){let n=$(e,"x","reverse");return M(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Vr(n,t)}var AF=U({reverse3d_:yF});function xF(e,t){let n=$(e,"x","reverse");return M(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Vr(n,t)}var bF=U({reverse4d_:xF});function vF(e){let n={x:$(e,"x","round")};return V.runKernel(Ui,n)}var Py=U({round_:vF});function wF(e){let n={x:$(e,"x","rsqrt","float32")};return V.runKernel(yo,n)}var $y=U({rsqrt_:wF});function Te(e,t){if((_n(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&_n(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return $o(e,[],[],t)}function kF(e){let n={x:$(e,"x","selu")};return V.runKernel(_u,n)}var Fy=U({selu_:kF});function IF(e,t,n,r,s,a=[1,1],o="NHWC"){let i=$(e,"x","separableConv2d"),l=$(t,"depthwiseFilter","separableConv2d"),c=$(n,"pointwiseFilter","separableConv2d"),u=i,d=!1;if(i.rank===3&&(d=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),M(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),M(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);let p=l.shape[2],h=l.shape[3];M(c.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${c.shape[2]}.`);let f=Xd(u,l,r,s,o,a),g=zo(f,c,1,"valid",o);return d?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var rw=U({separableConv2d_:IF});async function SF(e,t){let n=$(e,"x","setdiff1d"),r=$(t,"y","setdiff1d");M(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),M(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),M(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let s=await n.data(),a=await r.data(),o=new Set(a),i=0;for(let u=0;u<s.length;u++)o.has(s[u])||i++;let l=new sn([i],n.dtype),c=new sn([i],"int32");for(let u=0,d=0;u<s.length;u++)o.has(s[u])||(l.values[d]=s[u],c.values[d]=u,d++);return[l.toTensor(),c.toTensor()]}var sw=SF;function CF(e){let n={x:$(e,"x","sign")};return V.runKernel(Du,n)}var aw=U({sign_:CF});function TF(e){let n={x:$(e,"x","sin","float32")};return V.runKernel(Ao,n)}var Oy=U({sin_:TF});function NF(e){let n={x:$(e,"x","sinh")};return V.runKernel(qi,n)}var My=U({sinh_:NF});function EF(e,t,n){let r=$(e,"x","slice1d");return M(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Fe(r,[t],[n])}var Of=U({slice1d_:EF});function RF(e,t,n){let r=$(e,"x","slice2d");return M(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Fe(r,t,n)}var zy=U({slice2d_:RF});function _F(e,t,n){let r=$(e,"x","slice3d");return M(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Fe(r,t,n)}var gl=U({slice3d_:_F});function DF(e,t,n){let r=$(e,"x","slice4d");return M(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Fe(r,t,n)}var yl=U({slice4d_:DF});function PF(e,t=-1){let n=$(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},s={dim:t};return V.runKernel(wo,r,s)}var Qu=U({softmax_:PF});function $F(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(Jh,t)}var Mf=U({fft_:$F});function FF(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return V.runKernel(Qh,t)}var Qd=U({ifft_:FF});function OF(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2){let s=H(e,[n,t]);r=Qd(s)}else{let s=[n,2*(t-1)],a=H(Jd(e),[n,t]),o=H(Tf(e),[n,t]),i=Vr(Fe(a,[0,1],[n,t-2]),1),l=L(Vr(Fe(o,[0,1],[n,t-2]),1),Te(-1)),c=St([a,i],1),u=St([o,l],1),d=H(Po(c,u),[s[0],s[1]]);r=Qd(d)}if(r=Jd(r),e.rank===3&&e.shape[0]!==0){let s=r,a=e.shape[0];r=H(r,[a,r.shape[0]/a,r.shape[1]]),s.dispose()}return r}var Ly=U({irfft_:OF});function MF(e,t,n=0){let s={x:$(e,"x","split")},a={numOrSizeSplits:t,axis:n};return V.runKernel(Ki,s,a)}var Jt=U({split_:MF});function zF(e,t){M(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,s;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,s=Fe(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,s=St([e,Ht(f)],e.shape.length-1),n=t}else s=e;let a=at(s),o=H(Po(s,a),[r,n]),i=Mf(o),l=Math.floor(n/2)+1,c=Jd(i),u=Tf(i),d=Jt(c,[l,n-l],c.shape.length-1),p=Jt(u,[l,n-l],u.shape.length-1),h=s.shape.slice();return h[s.shape.length-1]=l,H(Po(d[0],p[0]),h)}var zf=U({rfft_:zF});function LF(e){let n={x:$(e,"x","sqrt","float32")};return V.runKernel(bo,n)}var $n=U({sqrt_:LF});function BF(e,t){let n=$(e,"a","squaredDifference"),r=$(t,"b","squaredDifference");[n,r]=Mt(n,r),xt(n.shape,r.shape);let s={a:n,b:r},a={};return V.runKernel(ko,s,a)}var By=U({squaredDifference_:BF});function WF(e,t){let n=$(e,"x","squeeze");return H(n,Q5(n.shape,t).newShape)}var Ye=U({squeeze_:WF});function VF(e,t=0){let n=Vd(e,"tensors","stack","string_or_numeric");M(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&M(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,s={axis:t};return V.runKernel(Li,r,s)}var on=U({stack_:VF});function UF(e,t=0){let r={x:$(e,"x","step")},s={alpha:t};return V.runKernel(To,r,s)}var ep=U({step_:UF});function GF(e,t,n,r,s=0,a=0,o=0,i=0,l=0){let u={x:$(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return V.runKernel(Zi,u,d)}var ow=U({stridedSlice_:GF});function HF(e){let n={x:$(e,"x","tan","float32")};return V.runKernel(Yi,n)}var iw=U({tan_:HF});function Tt(e,t){mi(e);let n=Ps(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return $o(e,null,n,t)}function As(e,t,n){if(mi(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=Ps(e,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return $o(e,t,r,n)}function jF(e,t,n){if(mi(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=Ps(e,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return $o(e,t,r,n)}function qF(e,t,n){if(mi(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=Ps(e,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return $o(e,t,r,n)}function XF(e,t,n){if(mi(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=Ps(e,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,$o(e,t,r,n)}function KF(e,t=1,n=!0){let r=$(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);let a={x:r},o={k:t,sorted:n},[i,l]=V.runKernel(Ji,a,o);return{values:i,indices:l}}var lw=U({topk_:KF});function ZF(e,t=0,n=1,r,s){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new _y(t,n,r,!0,s),o=Le(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var Lf=U({truncatedNormal_:ZF});function YF(e,t=0){let n=$(e,"x","unique","string_or_numeric");M(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},s={axis:t},[a,o]=V.runKernel(df,r,s);return{values:a,indices:o}}var Wy=U({unique_:YF});function JF(e,t,n){let r=$(e,"x","unsortedSegmentSum"),s=$(t,"segmentIds","unsortedSegmentSum","int32");M(ou(n),()=>"numSegments must be of dtype int");let a={x:r,segmentIds:s},o={numSegments:n};return V.runKernel(_d,a,o)}var uw=U({unsortedSegmentSum_:JF});function QF(e,t=0){let n=$(e,"x","unstack","string_or_numeric");M(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},s={axis:t};return V.runKernel(el,r,s)}var ir=U({unstack_:QF});function cw(e,t=!0,n,r){return V.makeVariable(e,t,n,r)}function dw(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let r=Le(e,"int32"),s=Le([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=r.indexToLoc(n[a]),i=a*e.length;s.values.set(o,i)}return s.toTensor()}async function eO(e){let t=$(e,"condition","whereAsync","bool"),n=await t.data(),r=dw(t.shape,n);return e!==t&&t.dispose(),r}var Vy=eO;async function tO(e,t,n){let r=$(e,"tensor","boolMask"),s=$(t,"mask","boolMask","bool"),a=n==null?0:n,o=s.rank,i=r.shape;M(o>0,()=>"mask cannot be scalar"),Ln(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let c=i.slice(0,a).concat([l],i.slice(a+o)),u=H(r,c),d=H(s,[-1]),p=await Vy(d),h=Ye(p,[1]),f=qu(u,h,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),h.dispose(),u.dispose(),d.dispose(),p.dispose(),f}var nO=tO;function rO(e,t="euclidean",n=null,r=!1){e=$(e,"x","norm");let s=pw(e,t,n),a=s.shape;if(r){let o=Yr(n,e.shape);a=ml(s.shape,o)}return H(s,a)}function pw(e,t,n=null){if(e.rank===0)return an(e);if(e.rank!==1&&n===null)return pw(H(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return we(an(e),n);if(t===1/0)return bn(an(e),n);if(t===-1/0)return Lo(an(e),n);if(t==="euclidean"||t===2)return $n(we(Bo(an(e),Te(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return bn(we(an(e),n[0]),n[1]-1);if(t===1/0)return bn(we(an(e),n[1]),n[0]);if(t===-1/0)return Lo(we(an(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return $n(we(bt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Uy=U({norm_:rO});function sO(e,t,n,r,s=!0){let a=$(e,"v","movingAverage"),o=$(t,"x","movingAverage"),i=$(n,"decay","movingAverage");S3(a,o),M(Da(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Te(1),c=pe(l,i),u=L(pe(o,a),c);if(s){M(r!=null,()=>"When using zeroDebias: true, step is required.");let d=$(r,"step","movingAverage");u=de(u,pe(l,Bo(i,d)))}return ue(a,u)}var aO=U({movingAverage_:sO});function oO(e,t,n){let r=$(e,"indices","scatterND","int32"),s=$(t,"updates","scatterND");ty(s,r,n);let a={indices:r,updates:s},o={shape:n};return V.runKernel(Gi,a,o)}var hw=U({scatterND_:oO});function iO(e,t,n,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function lO(e,t,n,r=0){let s=$(e,"sparseIndices","sparseToDense","int32"),a=$(t,"sparseValues","sparseToDense"),o=$(r,"defaultValue","sparseToDense",a.dtype);iO(s,a,n,o);let i={sparseIndices:s,sparseValues:a,defaultValue:o},l={outputShape:n};return V.runKernel(Ed,i,l)}var Gy=U({sparseToDense_:lO});function uO(e,t){let n=$(t,"indices","gatherND","int32"),s={params:$(e,"x","gatherND","string_or_numeric"),indices:n};return V.runKernel(Ni,s)}var fw=U({gatherND_:uO});function cO(e,t){if(t==null)return e.shape.slice();if(Da(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?n.push(e.shape[r]):n.push(t[r]);return n}return t}function dO(e,t,n,r){let s=$(e,"x","dropout");if(M(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),M(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof nt?s.clone():s;let a=cO(s,n),o=1-t,i=de(Zd(ue(Yu(a,0,1,"float32",r),o)),o);return L(s,i)}var mw=U({dropout_:dO});function gw(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Hy(e,t,n){let r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return Tt(s,"float32")}async function pO(e,t,n=1){let r=$(e,"predictions","inTopK"),s=$(t,"targets","inTopK");M(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),M(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Ln(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=r.shape[r.shape.length-1];M(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await r.data(),i=await s.data(),[l,c]=[o.length/a,a],u=e3("bool",l);for(let d=0;d<l;d++){let p=d*c,h=o.subarray(p,p+c),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),u[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){u[d]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),ht(u,s.shape,"bool")}var hO=pO,Wo={};Me(Wo,{conv2d:()=>gO,depthwiseConv2d:()=>bO,matMul:()=>wO});function fO(e,t,n,r,s,a="NHWC",o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]])),M(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),M(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),M(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let c=a==="NHWC"?i.shape[3]:i.shape[1],u=a==="NHWC"?l.shape[3]:l.shape[1];M(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),M(u===n[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${n[3]}).`),Un("conv2dDerFilter",s,o);let d={x:i,dy:l},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,filterShape:n};return V.runKernel(Vh,d,p)}var jy=U({conv2DBackpropFilter_:fO});function Bf(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return L(e,ep(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Wf(e,t){let n=t,r=Zt(e.shape,t.shape);return r.length>0&&(n=we(n,r)),H(n,e.shape)}function Vf(e,t,n,r){if(t==="linear")return e;if(t==="relu")return Os(e);if(t==="elu")return Kd(e);if(t==="relu6")return Dy(e);if(t==="prelu")return Ff(e,n);if(t==="leakyrelu")return Nf(e,r);if(t==="sigmoid")return Pn(e);throw new Error(`Unknown fused activation ${t}.`)}var Uf=(e,t)=>!(e>0)||t==="linear";function mO({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Uf(V.state.gradientDepth,l)===!1){let v=zo(e,t,n,r,s,a,o);return i!=null&&(v=ue(v,i)),Vf(v,l,c,u)}let d=$(e,"x","conv2d","float32"),p=$(t,"filter","conv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),M(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),Un("fused conv2d",r,o),M(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),M($s(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(s==="NHWC",()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);let m=jd(h.shape,p.shape,n,a,r,o),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Mt(g,d),xt(m.outShape,g.shape));let y;c!=null&&(y=$(c,"prelu weights","fused conv2d"));let x=(v,C)=>{let[I,E,R,F]=C,_=Bf(v,R,l);M(Mo(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let P=yy(E.shape,_,I,n,r),T=jy(E,_,I.shape,n,r),O=[P,T];if(F!=null){let G=Wf(F,_);O.push(G)}return O},A={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Fs((C,I,E)=>{let R=V.runKernel(Eo,A,b);return E([I,C,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):Fs((C,I,E,R)=>{let F=V.runKernel(Eo,A,b);return R([I,C,F,E]),f&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(h,p,g)}var gO=U({fusedConv2d_:mO});function yO(e,t,n,r,s,a=[1,1],o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={x:i,dy:l},u={strides:r,pad:s,dimRoundingMode:o,dilations:a,filterShape:n};return V.runKernel(jh,c,u)}var yw=U({depthwiseConv2dNativeBackpropFilter_:yO});function AO(e,t,n,r,s,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c={dy:i,filter:n},u={strides:r,pad:s,dimRoundingMode:o,dilations:a,inputShape:e},d=V.runKernel(qh,c,u);return l?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Aw=U({depthwiseConv2dNativeBackpropInput_:AO});function xO({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(Uf(V.state.gradientDepth,l)===!1){let v=Xd(e,t,n,r,s,a,o);return i!=null&&(v=ue(v,i)),Vf(v,l,c,u)}let d=$(e,"x","depthwiseConv2d","float32"),p=$(t,"filter","depthwiseConv2d","float32"),h=d,f=!1;d.rank===3&&(f=!0,h=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),M(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),M(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),M($s(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),Un("fused depthwiseConv2d",r,o);let m=jd(h.shape,p.shape,n,a,r,o,!0),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Mt(g,d),xt(m.outShape,g.shape));let y;c!=null&&(y=$(c,"prelu weights","fused depthwiseConv2d"));let x=(v,C)=>{M(Mo(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[I,E,R,F]=C,_=Bf(v,R,l),P=Aw(E.shape,_,I,n,r,a,o),T=yw(E,_,I.shape,n,r,a,o);if(F!=null){let O=Wf(g,_);return[P,T,O]}return[P,T]},A={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return i==null?Fs((C,I,E)=>{let R=V.runKernel(Ro,A,b);return E([I,C,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p):Fs((C,I,E,R)=>{let F=V.runKernel(Ro,A,b);return R([I,C,F,E]),f&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:x}})(h,p,g)}var bO=U({fusedDepthwiseConv2d_:xO});function vO({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(Uf(V.state.gradientDepth,a)===!1){let _=qe(e,t,n,r);return s!=null&&(_=ue(_,s)),Vf(_,a,o,i)}let l=$(e,"a","fused matMul"),c=$(t,"b","fused matMul");[l,c]=Mt(l,c);let u=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=Ct(f),y=Ct(m);M(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`);let A=xt(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,h]),b=n?H(l,[g,u,p]):H(l,[g,p,u]),v=r?H(c,[y,h,d]):H(c,[y,d,h]),C;s!=null&&(C=$(s,"bias","fused matMul"),[C]=Mt(C,l),xt(A,C.shape));let I;o!=null&&(I=$(o,"prelu weights","fused matMul"));let E=(_,P)=>{let[T,O,G,K]=P,z=Bf(H(_,G.shape),G,a),j,W;if(!n&&!r?(j=qe(z,O,!1,!0),W=qe(T,z,!0,!1)):!n&&r?(j=qe(z,O,!1,!1),W=qe(z,T,!0,!1)):n&&!r?(j=qe(O,z,!1,!0),W=qe(T,z,!1,!1)):(j=qe(O,z,!0,!0),W=qe(z,T,!0,!0)),s!=null){let Q=Wf(K,z);return[j,W,Q]}else return[j,W]},R={a:b,b:v,bias:C,preluActivationWeights:I},F={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:i};return s==null?Fs((P,T,O)=>{let G=V.runKernel(No,R,F);return O([P,T,G]),{value:H(G,A),gradFunc:E}})(b,v):Fs((P,T,O,G)=>{let K=V.runKernel(No,R,F);return G([P,T,K,O]),{value:H(K,A),gradFunc:E}})(b,v,C)}var wO=U({fusedMatMul_:vO});function kO(e){return Hy(e,.54,.46)}var IO=U({hammingWindow_:kO});function SO(e){return Hy(e,.5,.5)}var xw=U({hannWindow_:SO});function CO(e,t,n,r=!1,s=0){let a=0,o=[];for(;a+t<=e.size;)o.push(Fe(e,a,t)),a+=n;if(r)for(;a<e.size;){let i=a+t-e.size,l=St([Fe(e,a,t-i),ju([i],s)]);o.push(l),a+=n}return o.length===0?As([],[0,t]):H(St(o),[o.length,t])}var bw=U({frame_:CO});function TO(e,t,n,r,s=xw){r==null&&(r=gw(t));let a=bw(e,t,n),o=L(a,s(t));return zf(o,r)}var NO=U({stft_:TO});function EO(e,t,n,r,s="bilinear",a=0){let o=$(e,"image","cropAndResize"),i=$(t,"boxes","cropAndResize","float32"),l=$(n,"boxInd","cropAndResize","int32"),c=i.shape[0];M(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),M(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),M(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),M(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),M(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);let u={image:o,boxes:i,boxInd:l},d={method:s,extrapolationValue:a,cropSize:r};return V.runKernel(vi,u,d)}var RO=U({cropAndResize_:EO});function _O(e){let t=$(e,"image","flipLeftRight","float32");M(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return V.runKernel(Ci,n,{})}var DO=U({flipLeftRight_:_O});function PO(e){let t=$(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];M(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),M(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Qr(t,s)}var $O=U({grayscaleToRGB_:PO});function FO(e,t,n=0,r=.5){let s=$(e,"image","rotateWithOffset","float32");M(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);let a={image:s},o={radians:t,fillValue:n,center:r};return V.runKernel(nl,a,o)}var OO=U({rotateWithOffset_:FO});function ec(e,t,n,r,s,a){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),M(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),M(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),M(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),M(t.rank===1,()=>"scores must be a 1D tensor"),M(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),M(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function MO(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppression","float32"),o=$(t,"scores","nonMaxSuppression","float32"),i=ec(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return V.runKernel(Fi,{boxes:a,scores:o},l)}var zO=U({nonMaxSuppression_:MO});function LO(e,t,n){let r=BO(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function BO(e,t,n){return VO(e,t,n||WO)}function WO(e,t){return e>t?1:e<t?-1:0}function VO(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);let i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}function vw(e,t,n,r,s){return qy(e,t,n,r,s,0)}function ww(e,t,n,r,s,a){return qy(e,t,n,r,s,0,!1,a,!0)}function kw(e,t,n,r,s,a){return qy(e,t,n,r,s,a,!0)}function qy(e,t,n,r,s,a,o=!1,i=!1,l=!1){let c=[];for(let g=0;g<t.length;g++)t[g]>s&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Iw);let u=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&c.length>0;){let g=c.pop(),{score:y,boxIndex:x,suppressBeginIndex:A}=g;if(y<s)break;let b=!1;for(let v=d.length-1;v>=A;--v){let C=UO(e,x,d[v]);if(C>=r){b=!0;break}if(g.score=g.score*GO(r,u,C),g.score<=s)break}g.suppressBeginIndex=d.length,b||(g.score===y?(d.push(x),p.push(g.score)):g.score>s&&LO(c,g,Iw))}let h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:d};return o&&(m.selectedScores=p),l&&(m.validOutputs=h),m}function UO(e,t,n){let r=e.subarray(t*4,t*4+4),s=e.subarray(n*4,n*4+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),u=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),h=(i-a)*(l-o),f=(d-c)*(p-u);if(h<=0||f<=0)return 0;let m=Math.max(a,c),g=Math.max(o,u),y=Math.min(i,d),x=Math.min(l,p),A=Math.max(y-m,0)*Math.max(x-g,0);return A/(h+f-A)}function GO(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function Iw(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function HO(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppressionAsync"),o=$(t,"scores","nonMaxSuppressionAsync"),i=ec(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:d}=vw(c,u,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),Tt(d,"int32")}var jO=HO;function qO(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=ec(o,i,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;let c={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a},d=V.runKernel(Oi,c,u);return{selectedIndices:d[0],selectedScores:d[1]}}var XO=U({nonMaxSuppressionWithScore_:qO});async function KO(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=ec(o,i,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;let c=await Promise.all([o.data(),i.data()]),u=c[0],d=c[1],{selectedIndices:p,selectedScores:h}=kw(u,d,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Tt(p,"int32"),selectedScores:Tt(h)}}var ZO=KO;function YO(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=ec(o,i,n,r,s,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,p={boxes:o,scores:i},h={maxOutputSize:c,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:a},f=V.runKernel(Tu,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var JO=U({nonMaxSuppressionPadded_:YO});async function QO(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=ec(o,i,n,r,s,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=ww(p,h,c,u,d,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Tt(f,"int32"),validOutputs:Te(m,"int32")}}var eM=QO;function tM(e,t,n=!1,r=!1){let s=$(e,"images","resizeBilinear");M(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),M(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),M(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,o=!1;s.rank===3&&(o=!0,a=H(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},c=V.runKernel(mo,i,l);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var nM=U({resizeBilinear_:tM});function rM(e,t,n=!1,r=!1){let s=$(e,"images","resizeNearestNeighbor");M(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),M(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),M(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),M(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,o=!1;s.rank===3&&(o=!0,a=H(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},c=V.runKernel(Ru,i,l);return o?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var sM=U({resizeNearestNeighbor_:rM});function aM(e,t="binary",n=!1,r=.5){let s=$(e,"image","threshold"),a=.2989,o=.587,i=.114,l=s.shape[0]*s.shape[1],c=L(Tt([r]),255),u,d,p,h;if(M(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),M(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),M(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),M(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),s.shape[2]===3){[u,d,p]=Jt(s,[1,1,1],-1);let g=L(u,a),y=L(d,o),x=L(p,i);h=ue(ue(g,y),x)}else h=e;if(t==="otsu"){let g=my(ge(Py(h),"int32"),ht([]),256);c=oM(g,l)}let f=n?fl(h,c):vr(h,c);return ge(L(f,255),"int32")}function oM(e,t){let n=Tt([-1]),r=Tt([0]),s=Tt([0]),a,o,i,l,c,u;for(let d=0;d<e.size-1;d++){a=Fe(e,0,d+1),o=Fe(e,d+1),c=de(we(a),t),u=de(we(o),t);let p=we(L(a,Ju(0,a.size)));i=de(p,we(a));let h=ju(o.shape,a.size),f=ue(Ju(0,o.size),h),m=L(o,f);l=de(we(m),we(o));let g=pe(i,l),y=pe(i,l),x=L(c,u);s=L(L(x,g),y);let A=vr(s,r);r=Gn(A,s,r),n=Gn(A,Tt([d]),n)}return n}var iM=U({threshold_:aM});function lM(e,t,n="nearest",r="constant",s=0,a){let o=$(e,"image","transform","float32"),i=$(t,"transforms","transform","float32");M(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),M(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},c={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return V.runKernel(Qi,l,c)}var uM=U({transform_:lM});function cM(e,t,n){M(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),M(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let r=$(e,"a","bandPart");M(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=H(Ju(0,a,1,"int32"),[-1,1]),l=Ju(0,o,1,"int32"),c=pe(i,l),u=ys(fl(c,Te(+t,"int32")),hl(c,Te(-n,"int32"))),d=Ht([a,o],r.dtype);return H(on(ir(H(r,[-1,a,o])).map(p=>Gn(u,p,d))),s)}var dM=U({bandPart_:cM});function pM(e){let t;if(Array.isArray(e)){t=!1,M(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let s=e[0].shape[0];for(let a=1;a<e.length;++a)M(e[a].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${s})`)}else t=!0,e=Jt(e,e.shape[0],0).map(s=>Ye(s,[0]));M(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let s=0;s<e.length;++s)n.push(V.tidy(()=>{let a=r[s];if(s>0)for(let o=0;o<s;++o){let i=L(we(L(n[o],a)),n[o]);a=pe(a,i)}return de(a,Uy(a,"euclidean"))}));return t?on(n,0):n}var hM=U({gramSchmidt_:pM});function fM(e,t=!1){if(M(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Sw(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,c)=>l*c),r=ir(H(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach(l=>{let[c,u]=Sw(l,t);s.push(c),a.push(u)});let o=H(on(s,0),e.shape),i=H(on(a,0),e.shape);return[o,i]}}function Sw(e,t=!1){return V.tidy(()=>{M(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],s=wy(n),a=Vn(e),o=As([[1]],[1,1]),i=Vn(o),l=n>=r?r:n;for(let c=0;c<l;++c){let u=a,d=i,p=s;[i,a,s]=V.tidy(()=>{let h=Fe(a,[c,c],[n-c,1]),f=Uy(h),m=Fe(a,[c,c],[1,1]),g=Gn(vr(m,0),As([[-1]]),As([[1]])),y=pe(m,L(g,f)),x=de(h,y);x.shape[0]===1?i=Vn(o):i=St([o,Fe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let A=Lt(de(qe(g,y),f)),b=Fe(a,[c,0],[n-c,r]),v=L(A,i),C=st(i);if(c===0)a=pe(b,qe(v,qe(C,b)));else{let R=pe(b,qe(v,qe(C,b)));a=St([Fe(a,[0,0],[c,r]),R],0)}let I=st(v),E=Fe(s,[0,c],[n,s.shape[1]-c]);if(c===0)s=pe(E,qe(qe(E,i),I));else{let R=pe(E,qe(qe(E,i),I));s=St([Fe(s,[0,0],[n,c]),R],1)}return[i,a,s]}),te([u,d,p])}return!t&&n>r&&(s=Fe(s,[0,0],[n,r]),a=Fe(a,[0,0],[r,r])),[s,a]})}var mM=U({qr_:fM}),lr=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(lr||{});function gM(e,t,n=lr.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"losses","computeWeightedLoss"),s=null;t!=null&&(s=$(t,"weights","computeWeightedLoss"));let a=s==null?r:L(r,s);if(n===lr.NONE)return a;if(n===lr.SUM)return we(a);if(n===lr.MEAN){if(s==null)return Gt(a);{let o=r.size/s.size,i=de(we(a),we(s));return o>1?de(i,Te(o)):i}}if(n===lr.SUM_BY_NONZERO_WEIGHTS){if(s==null)return de(we(a),Te(r.size));{let o=L(s,wr(r.shape)),i=ge(we(Zu(o,Te(0))),"float32");return de(we(a),i)}}throw Error(`Unknown reduction: ${n}`)}var ta=U({computeWeightedLoss_:gM});function yM(e,t,n,r=lr.SUM_BY_NONZERO_WEIGHTS){let s=$(e,"labels","absoluteDifference"),a=$(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=$(n,"weights","absoluteDifference")),Ln(s.shape,a.shape,"Error in absoluteDifference: ");let i=an(pe(s,a));return ta(i,o,r)}var AM=U({absoluteDifference_:yM});function xM(e,t,n,r,s=lr.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","cosineDistance"),o=$(t,"predictions","cosineDistance"),i=null;r!=null&&(i=$(r,"weights","cosineDistance")),Ln(a.shape,o.shape,"Error in cosineDistance: ");let l=Te(1),c=pe(l,we(L(a,o),n,!0));return ta(c,i,s)}var bM=U({cosineDistance_:xM});function vM(e,t,n,r=lr.SUM_BY_NONZERO_WEIGHTS){let s=$(e,"labels","hingeLoss"),a=$(t,"predictions","hingeLoss"),o=null;n!=null&&(o=$(n,"weights","hingeLoss")),Ln(s.shape,a.shape,"Error in hingeLoss: ");let i=Te(1);s=pe(L(Te(2),s),i);let l=Os(pe(i,L(s,a)));return ta(l,o,r)}var wM=U({hingeLoss_:vM});function kM(e,t,n,r=1,s=lr.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","huberLoss"),o=$(t,"predictions","huberLoss"),i=null;n!=null&&(i=$(n,"weights","huberLoss")),Ln(a.shape,o.shape,"Error in huberLoss: ");let l=Te(r),c=an(pe(o,a)),u=Yd(c,l),d=pe(c,u),p=ue(L(Te(.5),bt(u)),L(l,d));return ta(p,i,s)}var IM=U({huberLoss_:kM});function SM(e,t,n,r=1e-7,s=lr.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","logLoss"),o=$(t,"predictions","logLoss"),i=null;n!=null&&(i=$(n,"weights","logLoss")),Ln(a.shape,o.shape,"Error in logLoss: ");let l=Te(1),c=Te(r),u=Lt(L(a,Br(ue(o,c)))),d=L(pe(l,a),Br(ue(pe(l,o),c))),p=pe(u,d);return ta(p,i,s)}var CM=U({logLoss_:SM});function TM(e,t,n,r=lr.SUM_BY_NONZERO_WEIGHTS){let s=$(e,"labels","meanSquaredError"),a=$(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=$(n,"weights","meanSquaredError")),Ln(s.shape,a.shape,"Error in meanSquaredError: ");let i=By(s,a);return ta(i,o,r)}var NM=U({meanSquaredError_:TM});function EM(e,t){let n=$(e,"labels","sigmoidCrossEntropyWithLogits"),r=$(t,"logits","sigmoidCrossEntropyWithLogits");Ln(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let s=Os(r),a=L(r,n),o=Ef(Lr(Lt(an(r))));return ue(pe(s,a),o)}function RM(e,t,n,r=0,s=lr.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"multiClassLabels","sigmoidCrossEntropy"),o=$(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","sigmoidCrossEntropy")),Ln(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){let c=Te(r),u=Te(1),d=Te(.5);a=ue(L(a,pe(u,c)),L(d,c))}let l=EM(a,o);return ta(l,i,s)}var _M=U({sigmoidCrossEntropy_:RM});function DM(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Fs((s,a,o)=>{let l=Yv(a,[n],!0),c=pe(ge(a,"float32"),l);o([s,c]);let u=Lt(L(c,s));return{value:we(u,[n]),gradFunc:(h,f)=>{let[m,g]=f,y=ml(h.shape,[n]);return[L(H(h,y),pe(ge(m,"float32"),Lr(g))),L(H(h,y),pe(Lr(g),ge(m,"float32")))]}}})(e,t)}function PM(e,t,n,r=0,s=lr.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"onehotLabels","softmaxCrossEntropy"),o=$(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","softmaxCrossEntropy")),Ln(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){let c=Te(r),u=Te(1),d=Te(a.shape[1]);a=ue(L(a,pe(u,c)),de(c,d))}let l=DM(a,o);return ta(l,i,s)}var $M=U({softmaxCrossEntropy_:PM});function FM(e,t,n,r){let s=$(e,"indices","sparseFillEmptyRows","int32"),a=$(t,"values","sparseFillEmptyRows"),o=$(n,"denseShape","sparseFillEmptyRows","int32"),i=$(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:s,values:a,denseShape:o,defaultValue:i},c=V.runKernel(Cd,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}var OM=U({sparseFillEmptyRows_:FM});function MM(e,t,n){let r=$(e,"inputIndices","sparseReshape","int32"),s=$(t,"inputShape","sparseReshape","int32"),a=$(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:r,inputShape:s,newShape:a},i=V.runKernel($u,o);return{outputIndices:i[0],outputShape:i[1]}}var zM=U({sparseReshape_:MM});function LM(e,t,n){let r=$(e,"data","sparseSegmentMean"),s=$(t,"indices","sparseSegmentMean","int32"),a=$(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:r,indices:s,segmentIds:a};return V.runKernel(Td,o)}var BM=U({sparseSegmentMean_:LM});function WM(e,t,n){let r=$(e,"data","sparseSegmentSum"),s=$(t,"indices","sparseSegmentSum","int32"),a=$(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:r,indices:s,segmentIds:a};return V.runKernel(Nd,o)}var VM=U({sparseSegmentSum_:WM});function UM(e,t,n,r,s,a,o,i){let l=$(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let c=$(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let u={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:o,preserveShortSequences:i},d={data:l,dataSplits:c},p=V.runKernel(Rd,d,u);return{nGrams:p[0],nGramsSplits:p[1]}}var GM=U({stringNGrams_:UM});function HM(e,t,n=!0){let r=$(e,"input","stringSplit","string"),s=$(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);let a={skipEmpty:n},o={input:r,delimiter:s},i=V.runKernel(uf,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var jM=U({stringSplit_:HM});function qM(e,t){let n=$(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let s={input:n};return V.runKernel(cf,s,r)}var XM=U({stringToHashBucketFast_:qM}),KM={fft:Mf,ifft:Qd,rfft:zf,irfft:Ly},ZM={hammingWindow:IO,hannWindow:xw,frame:bw,stft:NO},Ie={flipLeftRight:DO,grayscaleToRGB:$O,resizeNearestNeighbor:sM,resizeBilinear:nM,rotateWithOffset:OO,cropAndResize:RO,nonMaxSuppression:zO,nonMaxSuppressionAsync:jO,nonMaxSuppressionWithScore:XO,nonMaxSuppressionWithScoreAsync:ZO,nonMaxSuppressionPadded:JO,nonMaxSuppressionPaddedAsync:eM,threshold:iM,transform:uM},Cw={bandPart:dM,gramSchmidt:hM,qr:mM},YM={absoluteDifference:AM,computeWeightedLoss:ta,cosineDistance:bM,hingeLoss:wM,huberLoss:IM,logLoss:CM,meanSquaredError:NM,sigmoidCrossEntropy:_M,softmaxCrossEntropy:$M},tp={sparseFillEmptyRows:OM,sparseReshape:zM,sparseSegmentMean:BM,sparseSegmentSum:VM},Gf={stringNGrams:GM,stringSplit:jM,stringToHashBucketFast:XM},na=class extends pv{minimize(e,t=!1,n){let{value:r,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:s[o.name]}));this.applyGradients(a)}else this.applyGradients(s);return te(s),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return qv(e,t)}dispose(){this.iterations_!=null&&te(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Te(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(na,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Hf=class extends na{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=V.registeredVariables[n],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${n}/accum_grad`,variable:X(()=>at(s).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${n}/accum_var`,variable:X(()=>at(s).variable(a))});let o=Array.isArray(e)?e[r].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[r].variable,l=this.accumulatedUpdates[r].variable;X(()=>{let c=ue(L(i,this.rho),L(bt(o),1-this.rho)),u=L(de($n(ue(l,this.epsilon)),$n(ue(i,this.epsilon))),o),d=ue(L(l,this.rho),L(bt(u),1-this.rho));i.assign(c),l.assign(d);let p=ue(L(u,-this.learningRate),s);s.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(te(this.accumulatedGrads.map(e=>e.variable)),te(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Hf.className="Adadelta";Oo(Hf);var jf=class extends na{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=V.registeredVariables[n];if(this.accumulatedGrads[r]==null){let i=!1;this.accumulatedGrads[r]={originalName:`${n}/accumulator`,variable:X(()=>ju(s.shape,this.initialAccumulatorValue).variable(i))}}let a=Array.isArray(e)?e[r].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[r].variable;X(()=>{let i=ue(o,bt(a));o.assign(i);let l=ue(L(de(a,$n(ue(i,V.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&te(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};jf.className="Adagrad";Oo(jf);var qf=class extends na{constructor(e,t,n,r=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],X(()=>{this.accBeta1=Te(t).variable(),this.accBeta2=Te(n).variable()}),r==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);X(()=>{let n=pe(1,this.accBeta1),r=pe(1,this.accBeta2);t.forEach((s,a)=>{let o=V.registeredVariables[s],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:X(()=>at(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:X(()=>at(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=ue(L(c,this.beta1),L(l,1-this.beta1)),p=ue(L(u,this.beta2),L(bt(l),1-this.beta2)),h=de(d,n),f=de(p,r);c.assign(d),u.assign(p);let m=ue(L(de(h,ue($n(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&te(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&te(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),X(()=>{this.accBeta1.assign(Bo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Bo(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};qf.className="Adam";Oo(qf);var Xf=class extends na{constructor(e,t,n,r=null,s=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],X(()=>{this.iteration=Te(0).variable(),this.accBeta1=Te(t).variable()}),r==null&&(this.epsilon=V.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);X(()=>{let n=pe(1,this.accBeta1),r=de(-this.learningRate,ue(L(this.iteration,this.decay),1));t.forEach((s,a)=>{let o=V.registeredVariables[s],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:at(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:at(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[s];if(l==null)return;let c=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=ue(L(c,this.beta1),L(l,1-this.beta1)),p=L(u,this.beta2),h=an(l),f=ea(p,h);c.assign(d),u.assign(f);let m=ue(L(de(r,n),de(d,ue(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(ue(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&te(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&te(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Xf.className="Adamax";Oo(Xf);var np=class extends na{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=Array.isArray(e)?e[r].tensor:e[n];if(s==null)return;let a=V.registeredVariables[n];X(()=>{let o=ue(L(this.c,s),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=xn(Te(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};np.className="SGD";Oo(np);var Kf=class extends np{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Te(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=V.registeredVariables[n];if(this.accumulations[r]==null){let i=!1;this.accumulations[r]={originalName:`${n}/momentum`,variable:X(()=>at(s).variable(i))}}let a=this.accumulations[r].variable,o=Array.isArray(e)?e[r].tensor:e[n];o!=null&&X(()=>{let i,l=ue(L(this.m,a),o);this.useNesterov?i=ue(L(this.c,ue(o,L(l,this.m))),s):i=ue(L(this.c,l),s),a.assign(l),s.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&te(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Kf.className="Momentum";Oo(Kf);var Zf=class extends na{constructor(e,t=.9,n=0,r=null,s=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,r==null&&(this.epsilon=V.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,r)=>{let s=V.registeredVariables[n],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${n}/rms`,variable:X(()=>at(s).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${n}/momentum`,variable:X(()=>at(s).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${n}/mg`,variable:X(()=>at(s).variable(a))});let o=Array.isArray(e)?e[r].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;X(()=>{let c=ue(L(i,this.decay),L(bt(o),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[r].variable,d=ue(L(u,this.decay),L(o,1-this.decay)),p=de(L(o,this.learningRate),$n(pe(c,ue(bt(d),this.epsilon)))),h=ue(L(l,this.momentum),p);i.assign(c),u.assign(d),l.assign(h);let f=pe(s,h);s.assign(f)}else{let u=ue(L(i,this.decay),L(bt(o),1-this.decay)),d=ue(L(l,this.momentum),de(L(o,this.learningRate),$n(ue(u,this.epsilon))));i.assign(u),l.assign(d);let p=pe(s,d);s.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&te(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&te(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&te(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Zf.className="RMSProp";Oo(Zf);var Vo=class{static sgd(e){return new np(e)}static momentum(e,t,n=!1){return new Kf(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Zf(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new qf(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Hf(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Xf(e,t,n,r,s)}static adagrad(e,t=.1){return new jf(e,t)}},Al={sgd:Vo.sgd,momentum:Vo.momentum,adadelta:Vo.adadelta,adagrad:Vo.adagrad,rmsprop:Vo.rmsprop,adamax:Vo.adamax,adam:Vo.adam},JM=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function Tw(){return new Promise(e=>JM(()=>e()))}var N={};Me(N,{ERF_A1:()=>uz,ERF_A2:()=>cz,ERF_A3:()=>dz,ERF_A4:()=>pz,ERF_A5:()=>hz,ERF_P:()=>lz,PARALLELIZE_THRESHOLD:()=>Xy,SELU_SCALE:()=>Ew,SELU_SCALEALPHA:()=>Nw,applyActivation:()=>Vf,assertAndGetBroadcastShape:()=>xt,assertAxesAreInnerMostDims:()=>c$,assertParamsConsistent:()=>QM,assignToTypedArray:()=>xz,axesAreInnerMostDims:()=>Sy,calculateShapes:()=>tv,checkEinsumDimSizes:()=>Sz,checkPadOnDimRoundingMode:()=>Un,combineLocations:()=>Xv,complexWithEvenIndex:()=>gz,complexWithOddIndex:()=>yz,computeConv2DInfo:()=>jd,computeConv3DInfo:()=>Sv,computeDefaultPad:()=>py,computeDilation2DInfo:()=>RD,computeOptimalWindowSize:()=>tz,computeOutAndReduceShapes:()=>Kv,computeOutShape:()=>ez,computePool2DInfo:()=>Iv,computePool3DInfo:()=>_D,convertConv2DDataFormat:()=>Cv,decodeEinsumEquation:()=>kz,eitherStridesOrDilationsAreOne:()=>$s,expandShapeToKeepDim:()=>ml,exponent:()=>vz,exponents:()=>bz,fromStringArrayToUint8:()=>jz,fromUint8ToStringArray:()=>Hz,getAxesPermutation:()=>Zv,getBroadcastDims:()=>Y3,getComplexWithIndex:()=>Az,getEinsumComputePath:()=>Cz,getEinsumPermutation:()=>Iz,getFusedBiasGradient:()=>Wf,getFusedDyActivation:()=>Bf,getImageCenter:()=>nz,getInnerMostAxes:()=>d$,getPermuted:()=>sz,getReductionAxes:()=>Zt,getReshaped:()=>rz,getReshapedPermuted:()=>az,getSliceBeginCoords:()=>oz,getSliceSize:()=>iz,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Rz,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>_z,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Dz,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Fz,getSparseReshapeInputOutputMismatchErrorMessage:()=>Mz,getSparseReshapeInputOutputMultipleErrorMessage:()=>Oz,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Pz,getSparseReshapeNegativeOutputDimErrorMessage:()=>$z,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Wz,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>zz,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Lz,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Bz,getUndoAxesPermutation:()=>Cy,isIdentityPermutation:()=>Tz,log:()=>s9,mergeRealAndImagArrays:()=>fz,prepareAndValidate:()=>ev,prepareSplitSize:()=>Ez,segment_util:()=>Dw,shouldFuse:()=>Uf,slice_util:()=>zt,splitRealAndImagArrays:()=>mz,tupleValuesAreOne:()=>Mo,upcastType:()=>Wn,validateInput:()=>ty,validateUpdateShape:()=>ey,warn:()=>_o});function QM(e,t){let n=e[0].length;e.forEach((s,a)=>{M(s.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),M(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((s,a)=>{for(let o=0;o<n;o++)M(o===t||s[o]===r[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function ez(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Xy=30;function tz(e){return e<=Xy?e:Oh(e,Math.floor(Math.sqrt(e)))}function nz(e,t,n){let r=n*(typeof e=="number"?e:e[0]),s=t*(typeof e=="number"?e:e[1]);return[r,s]}function rz(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)s=s.concat([e[o+1]/t[o],t[o]]);s=s.concat(e.slice(a+1))}return s}function sz(e,t,n=!0){let r=[];if(n){r.push(t);for(let s=t+1;s<e;++s)s<=2*t?(r.push(s),r.push(s-(t+1))):r.push(s)}else{let s=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2===1?a.push(o):s.push(o);r.push(...s),r.push(0),r.push(...a)}return r}function az(e,t,n,r=!0){let s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function oz(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function iz(e,t,n){let r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}var Nw=1.7580993408473768,Ew=1.0507009873554805,lz=.3275911,uz=.254829592,cz=-.284496736,dz=1.421413741,pz=-1.453152027,hz=1.061405429;function fz(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function mz(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function gz(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function yz(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Az(e,t){let n=e[t*2],r=e[t*2+1];return{real:n,imag:r}}function xz(e,t,n,r){e[r*2]=t,e[r*2+1]=n}function bz(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){let a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function vz(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),s=Math.cos(r),a=Math.sin(r);return{real:s,imag:a}}var Ky="->",wz=/->/g,Rw=",",_w="...";function kz(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(wz,"").length)/Ky.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Ky}").`);let[r,s]=e.split(Ky);M(r.indexOf(_w)===-1,()=>`The ellipsis notation ("${_w}") is not supported yet.`);let a=r.split(Rw),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let p=0;p<s.length;++p){let h=s[p];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let p=0;p<r.length;++p){let h=r[p];i.indexOf(h)===-1&&h!==Rw&&i.push(h)}let l=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let h=0;h<a[p].length;++h)l[p].push(i.indexOf(a[p][h]))}let c=i.length,u=s.length,d=[];for(let p=u;p<c;++p)d.push(p);return{allDims:i,summedDims:d,idDims:l}}function Iz(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;let r=[];for(let s=0;s<e;++s)n[s]===-1&&r.push(s);return n=n.filter(s=>s!==-1),{permutationIndices:n,expandDims:r}}function Sz(e,t,n){let r=new Array(e);for(let s=0;s<n.length;++s){let a=n[s].shape;for(let o=0;o<t[s].length;++o)r[t[s][o]]===void 0?r[t[s][o]]=a[o]:M(r[t[s][o]]===a[o],()=>`Expected dimension ${r[t[s][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function Cz(e,t){let n=e,r=[],s=0;e.length===0&&n.push(-1),s=e.length+1;for(let o=0;o<s;++o)r.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=Nz(t,i);for(let c of l)a.indexOf(c)===-1&&(r[o].push(c),a.push(c))}return{path:n,steps:r}}function Tz(e){return e.every((t,n)=>t===n)}function Nz(e,t){let n=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function Ez(e,t,n=0){let r=[];if(typeof t=="number")M(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let s=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);M(s<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}M(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Rz(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function _z(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Dz(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Pz(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function $z(e,t){return`size ${e} must be non-negative, not ${t}`}function Fz(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Oz(e,t){let n=Ct(e),r=Ct(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function Mz(e,t){let n=Ct(e),r=Ct(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function zz(){return"segment ids must be >= 0"}function Lz(){return"segment ids are not increasing"}function Bz(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Wz(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Dw={};Me(Dw,{collectGatherOpShapeInfo:()=>Gz,computeOutShape:()=>Uz,segOpComputeOptimalWindowSize:()=>Vz});function Vz(e,t){let n=!1,r;for(e<=Xy?(r=e,n=!0):r=Oh(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=Oh(e,r+1);return r}function Uz(e,t,n){let r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Gz(e,t,n,r){let s=t.shape.length,a=e.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let o=e.shape[n],i=[],l=1,c=1,u=1;for(let d=0;d<r;++d)i.push(e.shape[d]),l*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),c*=e.shape[d];for(let d=r;d<s;d++)i.push(t.shape[d]);for(let d=n+1;d<a;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:i}}function Hz(e){try{return e.map(t=>mf(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function jz(e){return e.map(t=>Od(t))}var ts={};Me(ts,{nonMaxSuppressionV3Impl:()=>vw,nonMaxSuppressionV4Impl:()=>ww,nonMaxSuppressionV5Impl:()=>kw,whereImpl:()=>dw});var Pw={kernelName:yi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,ep(ge(n,"float32"),-1))}}},qz={kernelName:uu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=bt(ge(n,"float32")),s=$n(pe(Te(1),r));return Lt(de(e,s))}}}},Xz={kernelName:cu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=$n(pe(bt(ge(n,"float32")),1));return de(e,r)}}}},Kz={kernelName:Zs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=xt(n.shape,r.shape);return{a:()=>{let i=e,l=Zt(n.shape,s);return l.length>0&&(i=we(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Zt(r.shape,s);return l.length>0&&(i=we(i,l)),H(i,r.shape)}}}},Zz={kernelName:Fa,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,s)=>{n[s]=()=>e.clone()}),n}},Yz={kernelName:Oa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>at(n)}}},Jz={kernelName:hu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>at(n)}}},Qz={kernelName:fu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,$n(pe(Te(1),bt(ge(n,"float32")))))}}},eL={kernelName:mu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=$n(ue(Te(1),bt(ge(n,"float32"))));return de(e,r)}}}},tL={kernelName:Au,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=xt(n.shape,r.shape);return{a:()=>{let i=ue(bt(n),bt(r)),l=L(e,de(r,i)),c=Zt(n.shape,s);return c.length>0&&(l=we(l,c)),H(l,n.shape)},b:()=>{let i=ue(bt(n),bt(r)),l=Lt(L(e,de(n,i))),c=Zt(r.shape,s);return c.length>0&&(l=we(l,c)),H(l,r.shape)}}}},nL={kernelName:gu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ue(bt(ge(n,"float32")),1))}}},rL={kernelName:yu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,pe(Te(1),bt(ge(n,"float32"))))}}};function sL(e,t,n,r,s,a){let o=$(e,"dy","avgPool3dGrad"),i=$(t,"input","avgPool3dGrad"),l=o,c=i,u=!1;i.rank===4&&(u=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Un("avgPool3dGrad",s,a);let d={dy:l,input:c},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},h=V.runKernel(Lh,d,p);return u?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var aL=U({avgPool3dGrad_:sL}),oL={kernelName:md,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>aL(e,r,s,a,o,i)}}};function iL(e,t,n,r,s){let a=$(e,"dy","avgPoolGrad"),o=$(t,"input","avgPoolGrad");M(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,c=!1;o.rank===3&&(c=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),M(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let u={dy:l,input:i},d={filterSize:n,strides:r,pad:s},p=V.runKernel(zh,u,d);return c?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var lL=U({avgPoolGrad_:iL}),uL={kernelName:Ma,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>lL(e,r,s,a,o)}}},cL={kernelName:za,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,s]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>qe(e,s,!1,!0),b:()=>qe(r,e,!0,!1)}:!a&&o?{a:()=>qe(e,s,!1,!1),b:()=>qe(e,r,!0,!1)}:a&&!o?{a:()=>qe(s,e,!1,!0),b:()=>qe(r,e,!1,!1)}:{a:()=>qe(s,e,!0,!0),b:()=>qe(e,r,!0,!0)}}},dL={kernelName:Ai,gradFunc:(e,t,n)=>{let{blockShape:r,crops:s}=n;return{x:()=>$f(e,r,s)}}},pL={kernelName:d3,gradFunc:(e,t,n)=>{let r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let l=s.length-1;l>=0;l--)if(s[l]===a[l])o[l]=1;else if(s[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>we(e,i,!0)}}},hL={kernelName:La,gradFunc:e=>({x:()=>e.clone()})},fL={kernelName:Ba,gradFunc:e=>({x:()=>at(e)})},mL={kernelName:Ys,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Gn(ys(hl(r,s),fl(r,a)),e,at(e))}}},gL={kernelName:yd,inputsToSave:["x"],gradFunc:Pw.gradFunc},yL={kernelName:xi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(l=>l.shape),{axis:s}=n,a=Yr(s,t[0].shape)[0],o=r.map(l=>l[a]);return Jt(e,o,a).map(l=>()=>l)}},AL={kernelName:Wa,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return M(Mo(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>yy(r.shape,e,s,o,i,l),filter:()=>jy(r,e,s.shape,o,i,l)}}},xL={kernelName:Va,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>zo(e,s,a,o,i,1,l),filter:()=>jy(e,r,s.shape,a,o,i,l)}}};function bL(e,t,n,r,s){let a=e;e.rank===4&&(a=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),M(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),M(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),M(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),M(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:r,pad:s,filterShape:n};return V.runKernel(Uh,i,l)}var vL=U({conv3DBackpropFilter_:bL}),wL={kernelName:Ad,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:s,pad:a}=n;M(Mo(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[o,i]=t;return{x:()=>Fv(o.shape,e,i,s,a),filter:()=>vL(o,e,i.shape,s,a)}}},kL={kernelName:Ua,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Lt(Oy(ge(n,"float32"))),e)}}},IL={kernelName:Ga,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(My(ge(n,"float32")),e)}}},SL={kernelName:bi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{let i=Zv([s],r.rank),l=vy(e,s,a,!o);return i!=null&&(l=st(l,i)),l}}}},CL={kernelName:Ha,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=r==null?[1,1]:r;M(Mo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,c]=t;return M(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),M(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),M($s(s,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`),Un("depthwiseConv2d",a,o),{x:()=>Aw(l.shape,e,c,s,a,i,o),filter:()=>yw(l,e,c.shape,s,a,i,o)}}},TL={kernelName:xd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,s]=t,a={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>V.runKernel(Kh,a,n),filter:()=>V.runKernel(Zh,o,n)}}},NL={kernelName:qa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>V.runKernel(Yh,r)}}},EL={kernelName:xu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=L(Lr(Lt(bt(n))),2/Math.sqrt(Math.PI));return{x:()=>L(e,r)}}},RL={kernelName:Xa,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,n)}}},_L={kernelName:Ii,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>H(e,n.shape)}}},DL={kernelName:Si,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Lr(n))}}},PL={kernelName:Ka,gradFunc:e=>({x:()=>at(e)})},$L={kernelName:Za,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=xt(n.shape,r.shape);return{a:()=>{let i=de(e,ge(r,"float32")),l=Zt(n.shape,s);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Zt(r.shape,s);l.length>0&&(i=H(we(i,l),r.shape));let c=bt(r);return Lt(de(i,ge(c,"float32")))}}}},FL={kernelName:Ya,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[s,a,o,i]=t,l=i==null?Te(1):i,c=Zt(a.shape,s.shape),u=[];if(a.rank===1){for(let b=0;b<s.shape.length-1;++b)u.push(s.shape[b]);u.push(1)}let d=pe(s,a),p=L(e,l),h=$y(ue(o,Te(r))),f=L(L(L(h,h),h),Te(-.5));return{x:()=>a.rank===1?H(L(L(e,Qr(H(h,[1,1,1,a.shape[0]]),u)),l),s.shape):H(L(L(e,h),l),s.shape),mean:()=>{let b=L(L(h,Te(-1)),p);return a.rank===1&&(b=we(b,c)),H(b,a.shape)},variance:()=>{let b=L(L(f,d),p);return a.rank===1&&(b=we(b,c)),H(b,a.shape)},scale:()=>{let b=L(d,h),v=L(e,b);return a.rank===1&&(v=we(v,c)),H(v,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=we(b,c)),H(b,a.shape)}}}},OL={kernelName:Ti,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,s]=t,{axis:a}=n,o=Yr(a,r.shape)[0];return{x:()=>{let l=r.shape,c=s.size,u=l.slice(0,o),d=u.length,p=l.slice(a,l.length).slice(1),h=p.length,f=$w(0,d),m=$w(d+1,d+1+h),g=Fw([u,[c],p]),y=H(e,g),x=H(s,[c]),A=Fw([[d],f,m]),b=st(y,A),v=uw(b,x,r.shape[o]),C=Cy(A);return v=st(v,C),v},indices:()=>s}}};function $w(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Fw(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var ML={kernelName:Ja,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>at(n),b:()=>at(r)}}},zL={kernelName:Qa,gradFunc:e=>({x:()=>ge(e,"float32")})},LL={kernelName:vu,gradFunc:e=>({x:()=>at(e)})},BL={kernelName:wu,gradFunc:e=>({x:()=>at(e)})},WL={kernelName:ku,gradFunc:e=>({x:()=>at(e)})},VL={kernelName:eo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:s}=n,a=vr(r,0);return{x:()=>Gn(a,e,L(e,s))}}},UL={kernelName:Iu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ue(n,1))}}},GL={kernelName:to,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ge(n,"float32"))}}},HL={kernelName:p3,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:s}=n;return{logits:()=>{let a=!0,o=Lr(r);return pe(e,L(we(e,s,a),o))}}}};function jL(e,t,n,r=5,s=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:o};return V.runKernel(tf,i,l)}var qL=U({localResponseNormalizationBackprop_:jL}),XL={kernelName:kd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>qL(r,s,e,a,o,i,l)}}};function Ow(e,t,n,r){return t.rank<n.rank&&(t=H(t,ml(t.shape,r))),e.rank<n.rank&&(e=H(e,ml(e.shape,r))),{x:()=>L(e,ge(zr(n,t),e.dtype))}}var Mw={kernelName:no,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:s}=r,a=t[0],o=t[1],i=Yr(s,a.shape),l=Ow(e,o,a,i);return{x:()=>l.x()}}},KL={kernelName:ro,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>L(e,ge(hl(n,r),"float32")),b:()=>L(e,ge(ky(n,r),"float32"))}}};function ZL(e,t,n,r,s,a,o){let i=$(e,"dy","maxPool3dGrad"),l=$(t,"input","maxPool3dGrad"),c=$(n,"output","maxPool3dGrad"),u=i,d=l,p=c,h=!1;l.rank===4&&(h=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=H(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=H(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),M(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),M(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),M(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),Un("maxPool3dGrad",a,o);let f={dy:u,input:d,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:o},g=V.runKernel(rf,f,m);return h?H(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var YL=U({maxPool3dGrad_:ZL}),JL={kernelName:Id,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,s]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>YL(e,r,s,a,o,i,l)}}};function QL(e,t,n,r,s,a,o){let i=$(e,"dy","maxPoolGrad"),l=$(t,"input","maxPoolGrad"),c=$(n,"output","maxPoolGrad");M(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),M(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),M(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Un("maxPoolGrad",a,o);let u={dy:i,input:l,output:c},d={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return V.runKernel(nf,u,d)}var eB=U({maxPoolGrad_:QL}),tB={kernelName:so,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,s]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>eB(e,r,s,a,o,i)}}},nB={kernelName:ao,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:s}=n,a=Yr(s,r.shape),i=Kv(r.shape,a)[1],l=Ct(i);return{x:()=>{let u=r.shape.slice();a.forEach(h=>{u[h]=1});let d=H(e,u);return de(L(d,wr(r.shape,"float32")),l)}}}},rB={kernelName:oo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:s}=r,[a,o]=t,i=Yr(s,a.shape),l=Ow(e,o,a,i);return{x:()=>l.x()}}},sB={kernelName:io,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>L(e,ge(fl(n,r),"float32")),b:()=>L(e,ge(vr(n,r),"float32"))}}},aB={kernelName:lo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:s}=n,a=s.map(o=>o[0]);return{x:()=>Fe(e,a,r.shape)}}},oB={kernelName:Cu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=xt(n.shape,r.shape);return{a:()=>{let i=Zt(n.shape,s);return i.length>0?H(we(e,i),n.shape):e},b:()=>{let i=L(e,Lt(Zd(de(n,r)))),l=Zt(r.shape,s);return l.length>0?H(we(i,l),r.shape):i}}}},iB={kernelName:uo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=xt(n.shape,r.shape);return{a:()=>{let i=L(e,ge(r,"float32")),l=Zt(n.shape,s);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Zt(r.shape,s);return l.length>0?H(we(i,l),r.shape):i}}}},lB={kernelName:Pi,gradFunc:e=>({x:()=>Lt(e)})},uB={kernelName:zi,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Ht(n.shape,"float32")}}},cB={kernelName:Mi,gradFunc:e=>({x:()=>at(e)})},dB={kernelName:Li,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return ir(e,r).map(a=>()=>a)}},zw={kernelName:co,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:s}=n,a=s.map(o=>o[0]);return{x:()=>Fe(e,a,r.shape)}}},pB={kernelName:po,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,s]=t,a=n,o=r,i=xt(a.shape,o.shape);return{a:()=>{let u=ge(o,"float32"),d=L(e,L(u,Bo(a,pe(u,Te(1))))),p=Zt(a.shape,i);return p.length>0&&(d=we(d,p)),H(d,a.shape)},b:()=>{let u=vr(a,0),d=Gn(u,Br(a),at(a)),p=L(e,L(s,d)),h=Zt(o.shape,i);return h.length>0&&(p=we(p,h)),H(p,o.shape)}}}},hB={kernelName:ho,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,s=vr(n,0);return{x:()=>Gn(s,e,L(e,r)),alpha:()=>{let a=Gn(s,at(e),L(e,n)),o=Zt(r.shape,e.shape);return o.length>0&&(a=we(a,o)),H(a,r.shape)}}}},fB={kernelName:ja,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=xt(n.shape,r.shape);return{a:()=>{let i=de(e,ge(r,"float32")),l=Zt(n.shape,s);return l.length>0?H(we(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Zt(r.shape,s);l.length>0&&(i=H(we(i,l),r.shape));let c=bt(r);return Lt(de(i,ge(c,"float32")))}}}},mB={kernelName:Eu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,Lt(bt(n)))}}},gB={kernelName:go,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=L(fl(n,6),ep(n));return{x:()=>L(e,ge(r,"float32"))}}},yB={kernelName:fo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,ge(ep(n),"float32"))}}},AB={kernelName:Wi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>H(e,n.shape)}}},xB={kernelName:mo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,s={dy:e,images:r};return{images:()=>V.runKernel(lf,s,n)}}},bB={kernelName:Ru,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,s={dy:e,images:r};return{images:()=>V.runKernel(of,s,n)}}},vB={kernelName:Vi,gradFunc:(e,t,n)=>{let{dims:r}=n,s=Yr(r,e.shape);return{x:()=>Vr(e,s)}}},wB={kernelName:Ui,gradFunc:e=>({x:()=>at(e)})},kB={kernelName:yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Lt(de(e,L(Bo(n,1.5),2)))}}},IB={kernelName:Hi,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ge(at(n),"float32"),t:()=>L(e,ge(n,e.dtype)),e:()=>L(e,ge(_f(n),e.dtype))}}},SB={kernelName:_u,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=vr(n,Te(0)),s=Te(Nw),a=Te(Ew),o=L(e,a),i=L(L(e,s),Lr(ge(n,"float32")));return Gn(r,o,i)}}}},CB={kernelName:xo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(n,pe(Te(1),n)))}}},TB={kernelName:Du,gradFunc:e=>({x:()=>at(e)})},NB={kernelName:Ao,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Cf(ge(n,"float32")),e)}}},EB={kernelName:qi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(by(ge(n,"float32")),e)}}},RB={kernelName:ji,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:s,size:a}=n,o=r.shape,[i,l]=cv(r,s,a),c=[];for(let u=0;u<e.rank;u++)c.push([i[u],o[u]-i[u]-l[u]]);return{x:()=>es(e,c)}}},_B={kernelName:wo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:s}=n,a=!0,o=L(e,r);return{logits:()=>pe(o,L(we(o,[s],a),r))}}},DB={kernelName:Pu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Pn(n))}}},Lw={kernelName:Xi,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:s}=n;return{x:()=>Sf(e,r,s)}}},Bw={kernelName:Ki,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>St(e,r)}}},PB={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,L($n(ge(n,"float32")),2))}}},$B={kernelName:Fu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(ge(n,"float32"),2))}}},FB={kernelName:ko,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=Te(2);return{a:()=>L(e,L(s,pe(n,r))),b:()=>L(e,L(s,pe(r,n)))}}},OB={kernelName:To,gradFunc:e=>({x:()=>at(e)})},MB={kernelName:Io,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,s=xt(n.shape,r.shape);return{a:()=>{let i=e,l=Zt(n.shape,s);return l.length>0&&(i=we(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Zt(r.shape,s);return l.length>0&&(i=we(i,l)),H(Lt(i),r.shape)}}}},zB={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,s=r.shape.slice(),{axis:a}=n;Yr(a,r.shape).forEach(c=>{s[c]=1});let i=H(e,s),l=L(i,wr(r.shape,"float32"));return{x:()=>l}}},LB={kernelName:Yi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,bt(Cf(n)))}}},BB={kernelName:So,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(pe(Te(1),bt(n)),e)}}},WB={kernelName:Js,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:s}=n;return{x:()=>{let o=at(r);if(r.rank===1)for(let i=0;i<s[0];++i)o=ue(o,Fe(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<s[0];++i)for(let l=0;l<s[1];++l)o=ue(o,Fe(e,[i*r.shape[0],l*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<s[0];++i)for(let l=0;l<s[1];++l)for(let c=0;c<s[2];++c)o=ue(o,Fe(e,[i*r.shape[0],l*r.shape[1],c*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<s[0];++i)for(let l=0;l<s[1];++l)for(let c=0;c<s[2];++c)for(let u=0;u<s[3];++u)o=ue(o,Fe(e,[i*r.shape[0],l*r.shape[1],c*r.shape[2],u*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return o}}}},VB={kernelName:Co,gradFunc:(e,t,n)=>{let r=n,{perm:s}=r,a=Cy(s);return{x:()=>st(e,a)}}},UB={kernelName:el,gradFunc:(e,t,n)=>{let r=n,{axis:s}=r;return{value:()=>on(e,s)}}},GB={kernelName:_d,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>HB(e,n)}}};function HB(e,t){let n=ea(t,at(t)),r=qu(e,n),s=hl(t,Te(0,"int32")),a=r.rank-s.rank;for(let i=0;i<a;++i)s=Yt(s,i+1);s=ys(s,wr(r.shape,"bool"));let o=at(r);return Gn(s,r,o)}var jB={kernelName:tl,gradFunc:e=>({x:()=>at(e)})},qB=[Pw,qz,Xz,Kz,Zz,Yz,Jz,Qz,eL,tL,nL,rL,oL,uL,cL,dL,pL,hL,fL,mL,gL,yL,xL,AL,wL,kL,IL,SL,CL,TL,fB,NL,EL,RL,_L,DL,$L,PL,FL,OL,ML,zL,LL,BL,WL,VL,UL,GL,HL,XL,Mw,Mw,KL,JL,tB,nB,rB,sB,aB,oB,iB,lB,uB,cB,dB,zw,zw,pB,hB,mB,gB,yB,AB,xB,bB,vB,wB,kB,IB,SB,CB,TB,NB,EB,RB,_B,DB,Lw,Lw,Bw,Bw,PB,FB,$B,OB,MB,zB,LB,BB,WB,VB,UB,GB,jB];for(let e of qB)h3(e);var Ww={};Me(Ww,{maxNorm:()=>YB,minMaxNorm:()=>eW,nonNeg:()=>QB,unitNorm:()=>JB});var Zy;function ln(){return Zy==null&&(Zy=gs().epsilon()),Zy}function xs(){return"channelsLast"}var ra=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,ra.prototype)}},bs=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,bs.prototype)}},q=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,q.prototype)}},Be=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Be.prototype)}},Vw=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Vw.prototype)}};function xl(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Ms(e,t){if(!e)throw new Vw(t)}function Uw(e,t){let n=0;for(let r of e)r===t&&n++;return n}function ur(e){return e.length===1?e[0]:e}function Nt(e){return Array.isArray(e)?e:[e]}function sa(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function bl(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var ns={};function Yy(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Jy(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>Jy(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[n]=r.value:Jy(r))}}}function rp(e,t={},n={},r="object",s=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in ns)o=ns[a];else if(o=t[a],o==null)throw new q(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new q(`${r}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in ns?[i,l]=ns.className:o in t&&([i,l]=t[o]),i==null)throw new q(`Unknown ${r}: ${o}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let c={};for(let h of Object.keys(ns))c[h]=ns[h];for(let h of Object.keys(n))c[h]=n[h];let u=a.config;u.customObjects=c;let d={...ns};for(let h of Object.keys(n))ns[h]=n[h];Jy(a.config);let p=l(i,a.config,n,s);return ns={...d},p}else{let c={...ns};for(let d of Object.keys(n))ns[d]=n[d];let u=new i(a.config);return ns={...c},u}}}function XB(e,t){return e<t?-1:e>t?1:0}function Yf(e,t){return-1*XB(e,t)}function Uo(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function KB(e){if(e==null)throw new q(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function vl(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new q(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Qy(e,t,n=0,r=1/0){return Ms(n>=0),Ms(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(s=>typeof s===t)}function vn(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>vn(n,`element ${r+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Gw(e)}.`)}function Gw(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>Gw(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function ZB(e,t,n){let r=n!=null?n():w.now(),s;return(...o)=>{let i=n!=null?n():w.now();return i-r<t||(r=i,s=e(...o)),s}}function Hw(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}function e1(e,t){return X(()=>$n(we(L(e,e),t,!0)))}var sp=class extends ce.Serializable{getConfig(){return{}}},t1=class extends sp{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>{let t=e1(e,this.axis),n=br(t,0,this.maxValue);return L(e,de(n,ue(ln(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};t1.className="MaxNorm";ce.registerClass(t1);var n1=class extends sp{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>de(e,ue(ln(),e1(e,this.axis))))}getConfig(){return{axis:this.axis}}};n1.className="UnitNorm";ce.registerClass(n1);var r1=class extends sp{apply(e){return Os(e)}};r1.className="NonNeg";ce.registerClass(r1);var s1=class extends sp{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return X(()=>{let t=e1(e,this.axis),n=ue(L(this.rate,br(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,de(n,ue(ln(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};s1.className="MinMaxNorm";ce.registerClass(s1);var jw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function un(e){return Yy(e)}function qw(e,t={}){return rp(e,ce.SerializationMap.getMap().classNameMap,t,"constraint")}function cn(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in jw?jw[e]:e,config:{}};return qw(n)}else return e instanceof sp?e:qw(e)}function YB(e){return new t1(e)}function JB(e){return new n1(e)}function QB(){return new r1}function eW(e){return new s1(e)}var Xw={};Me(Xw,{constant:()=>kW,glorotNormal:()=>RW,glorotUniform:()=>EW,heNormal:()=>_W,heUniform:()=>DW,identity:()=>TW,leCunNormal:()=>PW,leCunUniform:()=>$W,ones:()=>wW,orthogonal:()=>FW,randomNormal:()=>SW,randomUniform:()=>IW,truncatedNormal:()=>CW,varianceScaling:()=>NW,zeros:()=>vW});var tW=["channelsFirst","channelsLast"],nW=["nearest","bilinear"],rW=["valid","same","causal"],sW=["max","avg"],aW=["sum","mul","concat","ave"],tc=new Map;function jt(e){vl(tW,"DataFormat",e)}function oW(e){vl(nW,"InterpolationFormat",e)}function Ur(e){vl(rW,"PaddingMode",e)}function Kw(e){vl(sW,"PoolMode",e)}var ap=[],Zw="/";function wl(e,t){ap.push(e);try{let n=t();return ap.pop(),n}catch(n){throw ap.pop(),n}}function iW(){return ap.length===0?"":ap.join(Zw)+Zw}function Yw(e){if(!Qw(e))throw new Error("Not a valid tensor name: '"+e+"'");return iW()+e}function Jw(e){if(!Qw(e))throw new Error("Not a valid tensor name: '"+e+"'");tc.has(e)||tc.set(e,0);let t=tc.get(e);if(tc.set(e,tc.get(e)+1),t>0){let n=`${e}_${t}`;return tc.set(n,1),n}else return e}var lW=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Qw(e){return!!e.match(lW)}function uW(e){return e===parseInt(e.toString(),10)}function Go(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function nc(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function Ho(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function vs(e,t){if(t<e)throw new q(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Jf(e,t){return ge(e,t)}function op(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),H(e,n)}function cW(e,t){return X(()=>{if(e.shape.length!==2)throw new q(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=op(e,1);return i1(n,[1,t,1])})}function dW(e){let t=[Go(e.shape)];return H(e,t)}function pW(e){if(e.rank<=1)throw new q(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Go(e.shape,1)];return H(e,t)}function kl(e,t,n){return X(()=>{switch(e.rank){case 1:return Of(e,t,n);case 2:return zy(e,[t,0],[n,e.shape[1]]);case 3:return gl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return yl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Fe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Fe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new q(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function a1(e,t,n){return X(()=>{switch(e.rank){case 1:return Of(e,t,n);case 2:return zy(e,[0,t],[e.shape[0],n]);case 3:return gl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return yl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Qf(e,t,n,r){return X(()=>{switch(e.rank){case 1:return Of(e,t,n);case 2:switch(r){case 1:return kl(e,t,n);case 2:return a1(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return kl(e,t,n);case 2:return gl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return a1(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return kl(e,t,n);case 2:return yl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return yl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return a1(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${r}`)}default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function o1(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),St(e,t)}function ek(e,t){switch(e.rank){case 1:return Dv([e,t]);case 2:return Hu([e,t],0);case 3:return Pv([e,t],0);case 4:return $v([e,t],0);default:throw new q(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function i1(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new q(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Qr(e,t)}function em(e,t=0,n=1,r,s){return tw(e,t,n,r,s)}function zs(e,t,n,r){if(e.rank<2||t.rank<2)throw new Be(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let s=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(s!==a)throw new Be(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2){let s=!1,a=!1;return Wo.matMul({a:e,b:t,transposeA:s,transposeB:a,bias:r?l1(e.rank,r,xs()):null,activation:n})}else{let s=e.shape.slice(),a=s.pop();e=H(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),c=[...o,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=H(st(t,u),[l,-1]);let d=[...s,...c],p=!1,h=!1;return H(Wo.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:r?l1(e.rank,r,xs()):null,activation:n}),d)}}function tk(e,t,n){return X(()=>(Array.isArray(t)?t=Tt(t,"int32"):t=ge(t,"int32"),qu(e,t,n)))}function ip(e){return L(e,e)}function l1(e,t,n){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new q(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return r.length===1?H(t,[1,r[0],1,1,1]):H(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?H(t,[1,1,1,1,r[0]]):H(t,[1].concat(r))}else if(e===4){if(n==="channelsFirst")return r.length===1?H(t,[1,r[0],1,1]):H(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?H(t,[1,1,1,r[0]]):H(t,[1].concat(r))}else if(e===3){if(n==="channelsFirst")return r.length===1?H(t,[1,r[0],1]):H(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?H(t,[1,1,r[0]]):H(t,[1].concat(r))}else if(e<3)return t;throw new q(`Unsupported input rank by biasAdd: ${t.rank}`)}function ws(e,t,n){return X(()=>(n==null&&(n=xs()),jt(n),ue(e,l1(e.rank,t,n))))}function hW(e,t=1){if(t!==1)throw new Be(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Kd(e)}function fW(e){return X(()=>de(e,ue(an(e),1)))}function nk(e,t,n,r){return X(()=>mw(e,t,n,r))}function mW(e){return X(()=>{let t=ue(.5,L(.2,e));return br(t,0,1)})}function lp(e,t,n=!1){return n?e():t()}var gW=["fanIn","fanOut","fanAvg"],yW=["normal","uniform","truncatedNormal"];function AW(e){vl(gW,"FanMode",e)}function xW(e){vl(yW,"Distribution",e)}var rs=class extends ce.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},u1=class extends rs{apply(e,t){return Ht(e,t)}};u1.className="Zeros";ce.registerClass(u1);var tm=class extends rs{apply(e,t){return wr(e,t)}};tm.className="Ones";ce.registerClass(tm);var c1=class extends rs{constructor(e){super();if(typeof e!="object")throw new q(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new q(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return X(()=>L(Te(this.value),wr(e,t)))}getConfig(){return{value:this.value}}};c1.className="Constant";ce.registerClass(c1);var d1=class extends rs{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Yu(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};d1.className="RandomUniform";ce.registerClass(d1);var p1=class extends rs{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`randomNormal does not support dType ${t}.`);return em(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};p1.className="RandomNormal";ce.registerClass(p1);var h1=class extends rs{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`truncatedNormal does not support dType ${t}.`);return Lf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};h1.className="TruncatedNormal";ce.registerClass(h1);var f1=class extends rs{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return X(()=>{if(e.length!==2||e[0]!==e[1])throw new q("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,wy(e[0]))})}getConfig(){return{gain:this.gain}}};f1.className="Identity";ce.registerClass(f1);function bW(e,t="channelsLast"){let n,r;if(jt(t),e.length===2)n=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let s=Go(e,2);n=e[1]*s,r=e[0]*s}else if(t==="channelsLast"){let s=Go(e,0,e.length-2);n=e[e.length-2]*s,r=e[e.length-1]*s}}else{let s=Go(e);n=Math.sqrt(s),r=Math.sqrt(s)}return[n,r]}var cr=class extends rs{constructor(e){super();if(e.scale<0)throw new q(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,AW(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,xW(this.distribution),this.seed=e.seed}apply(e,t){let n=bW(e),r=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`${this.getClassName()} does not support dType ${t}.`);return Lf(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return Yu(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};cr.className="VarianceScaling";ce.registerClass(cr);var nm=class extends cr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return cr.className}};nm.className="GlorotUniform";ce.registerClass(nm);var rm=class extends cr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return cr.className}};rm.className="GlorotNormal";ce.registerClass(rm);var sm=class extends cr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return cr.className}};sm.className="HeNormal";ce.registerClass(sm);var am=class extends cr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return cr.className}};am.className="HeUniform";ce.registerClass(am);var om=class extends cr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return cr.className}};om.className="LeCunNormal";ce.registerClass(om);var im=class extends cr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return cr.className}};im.className="LeCunNormal";ce.registerClass(im);var m1=class extends rs{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Be("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return X(()=>{if(e.length<2)throw new Be("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,r=em(n,0,1,"float32"),s=Cw.gramSchmidt(r);return e[0]>e[1]&&(s=st(s)),L(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};m1.className="Orthogonal";ce.registerClass(m1);var rk={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function sk(e,t={}){return rp(e,ce.SerializationMap.getMap().classNameMap,t,"initializer")}function Bt(e){return Yy(e)}function $t(e){if(typeof e=="string"){let t=e in rk?rk[e]:e;if(t==="GlorotNormal")return new rm;if(t==="GlorotUniform")return new nm;if(t==="HeNormal")return new sm;if(t==="HeUniform")return new am;if(t==="LeCunNormal")return new om;if(t==="LeCunUniform")return new im;{let n={};return n.className=t,n.config={},sk(n)}}else return e instanceof rs?e:sk(e)}function vW(){return new u1}function wW(){return new tm}function kW(e){return new c1(e)}function IW(e){return new d1(e)}function SW(e){return new p1(e)}function CW(e){return new h1(e)}function TW(e){return new f1(e)}function NW(e){return new cr(e)}function EW(e){return new nm(e)}function RW(e){return new rm(e)}function _W(e){return new sm(e)}function DW(e){return new am(e)}function PW(e){return new om(e)}function $W(e){return new im(e)}function FW(e){return new m1(e)}var ak={};Me(ak,{Layer:()=>ot,RNN:()=>oa,RNNCell:()=>mp,activation:()=>gU,add:()=>SU,alphaDropout:()=>lG,average:()=>CU,averagePooling1d:()=>OA,averagePooling2d:()=>MA,averagePooling3d:()=>zA,avgPool1d:()=>FU,avgPool2d:()=>MU,avgPool3d:()=>LU,avgPooling1d:()=>OU,avgPooling2d:()=>zU,avgPooling3d:()=>BU,batchNormalization:()=>DU,bidirectional:()=>eG,concatenate:()=>TU,conv1d:()=>iU,conv2d:()=>lU,conv2dTranspose:()=>uU,conv3d:()=>cU,conv3dTranspose:()=>dU,convLstm2d:()=>ZU,convLstm2dCell:()=>YU,cropping2D:()=>hU,dense:()=>yU,depthwiseConv2d:()=>mU,dot:()=>_U,dropout:()=>AU,elu:()=>tU,embedding:()=>IU,flatten:()=>bU,gaussianDropout:()=>iG,gaussianNoise:()=>oG,globalAveragePooling1d:()=>WU,globalAveragePooling2d:()=>VU,globalMaxPool1d:()=>nG,globalMaxPool2d:()=>rG,globalMaxPooling1d:()=>yI,globalMaxPooling2d:()=>AI,gru:()=>GU,gruCell:()=>HU,input:()=>Mk,inputLayer:()=>eU,layerNormalization:()=>PU,leakyReLU:()=>rU,lstm:()=>jU,lstmCell:()=>qU,masking:()=>uG,maxPool1d:()=>sG,maxPool2d:()=>aG,maxPooling1d:()=>xI,maxPooling2d:()=>bI,maxPooling3d:()=>UU,maximum:()=>NU,minimum:()=>EU,multiply:()=>RU,permute:()=>kU,prelu:()=>sU,reLU:()=>nU,repeatVector:()=>vU,reshape:()=>wU,rnn:()=>JU,separableConv2d:()=>pU,simpleRNN:()=>XU,simpleRNNCell:()=>KU,softmax:()=>aU,spatialDropout1d:()=>xU,stackedRNNCells:()=>QU,thresholdedReLU:()=>oU,timeDistributed:()=>tG,upSampling2d:()=>fU,zeroPadding2d:()=>$U});var OW=0;function ok(){return OW++}var lm={};function um(e=""){return e in lm||(lm[e]=0),lm[e]+=1,e+lm[e].toString()}function g1(e){return Array.isArray(e)&&Array.isArray(e[0])}function cm(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ue(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new q(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function mt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new q(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function dm(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((r,s)=>r*s);return t}var ik="Variable",lk=class{constructor(e,t="float32",n=ik,r=!0,s=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=ok(),n=n==null?ik:n,this.originalName=Yw(n),this.name=Jw(this.originalName),this.trainable_=r,this.constraint=s,this.val=cw(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),MW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function MW(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function y1(e){return e.map(t=>t.read())}function A1(e){e.forEach(t=>{t[0].write(t[1])})}var Qt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},ks=class{constructor(e,t,n,r,s,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=ok(),a!=null&&(this.originalName=Yw(a),this.name=Jw(this.originalName)),this.rank=t.length}},zW=0,pm=class{constructor(e,t){this.callArgs=t,this.id=zW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},LW=0,ot=class extends ce.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=LW++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=sa(n)+"_"+um(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new bs(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new q(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ur(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ur(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ra(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new ra(`Layer ${this.name} is not connected, no input to return.`);return ur(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new ra(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ra(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ur(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Nt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=Nt(this.inputSpec);if(e.length!==t.length)throw new q(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],s=t[n];if(s==null)continue;let a=r.rank;if(s.ndim!=null&&a!==s.ndim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&r.dtype!==s.dtype)throw new q(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){let o=r.shape;for(let i in s.axes){let l=Number(i),c=s.axes[i],u=l>=0?o[l]:o[o.length+l];if(c!=null&&[c,null].indexOf(u)===-1)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${o}.`)}}if(s.shape!=null)for(let o=0;o<s.shape.length;++o){let i=s.shape[o],l=r.shape[o];if(i!=null&&l!=null&&i!==l)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=Nt(e),r=!0;for(let a of n)if(!(a instanceof ks)){r=!1;break}let s=!0;for(let a of n)if(a instanceof ks){s=!1;break}if(r===s)throw new q("Arguments to apply() must be all SymbolicTensors or all Tensors");return wl(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of Nt(e))a.push(o.shape);this.build(ur(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),o=Nt(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=ur(i),this.activityRegularizer!=null)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=BW(e),o=this.computeOutputShape(a),i,l=WW(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((c,u)=>new ks(l,c,this,Nt(e),t,this.name,u)):i=new ks(l,o,this,Nt(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{n!=null&&e[r]!=null&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new ra(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new ra(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new bs(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return dm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return y1(e?this.trainableWeights:this.weights)}setWeights(e){X(()=>{let t=this.weights;if(t.length!==e.length)throw new q(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],r=y1(t);for(let s=0;s<r.length;++s){let a=r[s],o=t[s],i=e[s];if(!w.arraysEqual(a.shape,i.shape))throw new q(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}A1(n)})}addWeight(e,t,n,r,s,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new q(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(r=i!=null?i():$t("zeros"));let l=r.apply(t,n),c=new lk(l,n,e,a,o);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Nt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,r,s,a,o=null){let i=Nt(e);t=Nt(t),n=Nt(n),r=Nt(r),s=cm(s),a=cm(a);let l=[],c=[],u=[];for(let d of i)l.push(d.sourceLayer),c.push(d.nodeIndex),u.push(d.tensorIndex);new pm({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function BW(e){e=Nt(e);let t=[];for(let n of e)t.push(n.shape);return ur(t)}function WW(e){return"float32"}function uk(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{let s=[];for(let a=0;a<r.inboundLayers.length;a++){let o=r.inputTensors[a],i=r.inboundLayers[a],l=r.nodeIndices[a],c=uk(o,i,l);for(let u of c)s.indexOf(u)===-1&&s.push(u)}return s}}}var rc=class extends ot{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:um("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new q("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new q("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new q("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new ks(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new q(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};rc.className="InputLayer";ce.registerClass(rc);function ck(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new q("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new rc({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function jo(e){if(e==null)return;let t=[],n=[],r=[];for(let s in e){let a=e[s];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(s),r.push(o)}}if(t.length>0){let s=await Promise.all(t);for(let a=0;a<s.length;++a)e[n[a]]=s[a][0];te(r)}}function dk(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var VW=125,sc=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},pk=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},UW=class extends sc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let r in t){let s=t[r];if(typeof s=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+s*n;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;let o=X(()=>ue(this.totals[r],L(s,n)));this.totals[r]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:X(()=>{let r=L(de(1,this.seen),this.totals[n]);t[n]=r,this.totals[n].dispose(),xn(t[n])}))}},hk=class extends sc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(s),n.push(o)}}let r=await Promise.all(e);for(let s=0;s<r.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}},fk=class extends sc{constructor(e,t){super();if(this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Tw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=VW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=ZB(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];this.yield!=null&&(await jo(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await jo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await jo(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await jo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await jo(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await jo(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await jo(e),await this.trainEnd(e))}};function mk(e,t){return e==null&&(e={}),e instanceof sc?[e]:Array.isArray(e)&&e[0]instanceof sc?e:Nt(e).map(r=>new fk(r,t))}var Ls=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Ls.checkForDuplicate(t),Ls.constructors[e]==null&&(Ls.constructors[e]=[]),Ls.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Ls.constructors)Ls.constructors[+t].forEach(r=>{if(r===e)throw new q("Duplicate callback constructor.")})}static clear(){Ls.constructors={}}static createCallbacks(e){let t=[];for(let n in Ls.constructors){let r=+n;e>=r&&t.push(...Ls.constructors[r])}return t.map(n=>new n)}},x1=Ls;x1.constructors={};function gk(e,t,n,r,s,a,o,i,l){let c=new hk,u=[new UW,...x1.createCallbacks(t)];e!=null&&u.push(...e),u.push(c);let d=new pk(u);return d.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:d,history:c}}function Is(e,t={},n=!1){return rp(e,ce.SerializationMap.getMap().classNameMap,t,"layer",n)}function hm(e,t){return X(()=>{e.dtype!=="float32"&&(e=ge(e,"float32"));let n=we(ip(e),t,!0),r=ju(n.shape,ln()),s=$n(ea(n,r));return de(e,s)})}function Il(e,t){return X(()=>Gt(ip(pe(t,e)),-1))}function fm(e,t){return X(()=>Gt(an(pe(t,e)),-1))}function ac(e,t){return X(()=>{let n=pe(e,t),r=br(an(e),ln(),Number.MAX_VALUE),s=an(de(n,r));return L(100,Gt(s,-1))})}function GW(e,t){return X(()=>{let n=br(t,ln(),Number.MAX_VALUE),r=Br(ue(1,n)),s=br(e,ln(),Number.MAX_VALUE),a=Br(ue(1,s));return Gt(ip(pe(r,a)),-1)})}function HW(e,t){return X(()=>{let n=ea(0,pe(1,L(e,t)));return Gt(ip(n),-1)})}function jW(e,t){return X(()=>{let n=ea(0,pe(1,L(e,t)));return Gt(n,-1)})}function qW(e,t){return X(()=>{let n=we(L(e,t),-1),r=bn(L(pe(1,e),t),-1);return ea(0,ue(1,pe(r,n)))})}function XW(e,t){return X(()=>{let n=Math.log(2),r=pe(t,e),s=pe(ue(r,Xu(L(-2,r))),n);return Gt(s,-1)})}function up(e,t,n=!1){return X(()=>{if(n)t=Qu(t);else{let r=we(t,t.shape.length-1,!0);t=de(t,r)}return t=br(t,ln(),1-ln()),Lt(we(L(ge(e,"float32"),Br(t)),t.shape.length-1))})}function mm(e,t,n=!1){return X(()=>{let r=ge(Zd(dW(e)),"int32");t=br(t,ln(),1-ln());let s=t.shape,a=H(Gd(r,s[s.length-1]),s);return up(a,t,n)})}function KW(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new q(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return X(()=>{let n=Os(t),r=Lt(an(t));return ue(pe(n,L(t,e)),Ef(Lr(r)))})}function gm(e,t){return X(()=>{let n;return n=br(t,ln(),1-ln()),n=Br(de(n,pe(1,n))),Gt(KW(e,n),-1)})}function ZW(e,t){return X(()=>{let n=br(e,ln(),1),r=br(t,ln(),1);return we(L(e,Br(de(n,r))),-1)})}function YW(e,t){return X(()=>{let n=Br(ue(ln(),t));return Gt(pe(t,L(e,n)),-1)})}function b1(e,t){return X(()=>{let n=hm(e,-1),r=hm(t,-1),s=L(n,r);return Lt(we(s,-1))})}var ym={meanSquaredError:Il,meanAbsoluteError:fm,meanAbsolutePercentageError:ac,meanSquaredLogarithmicError:GW,squaredHinge:HW,hinge:jW,categoricalHinge:qW,logcosh:XW,categoricalCrossentropy:up,sparseCategoricalCrossentropy:mm,binaryCrossentropy:gm,kullbackLeiblerDivergence:ZW,poisson:YW,cosineProximity:b1};function v1(e){if(typeof e=="string"){if(e in ym)return ym[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new q(t)}else return e}function w1(e,t){return X(()=>{let n=L(.5,Wr(t)),r=Jf(vr(t,n),e.dtype);return Gt(zr(e,r),-1)})}function k1(e,t){return X(()=>Jf(zr(Mr(e,-1),Mr(t,-1)),"float32"))}function yk(e,t){return X(()=>ge(we(ys(zr(e,1),zr(t,1))),"float32"))}function JW(e,t){return X(()=>ge(we(ys(zr(e,1),zr(t,0))),"float32"))}function QW(e,t){return X(()=>ge(we(ys(zr(e,0),zr(t,1))),"float32"))}function Ak(e,t){return X(()=>{let n=yk(e,t),r=QW(e,t),s=ue(n,r);return ge(Gn(vr(s,0),de(n,s),0),"float32")})}function eV(e,t){return X(()=>{let n=yk(e,t),r=JW(e,t),s=ue(n,r);return ge(Gn(vr(s,0),de(n,s),0),"float32")})}function xk(e,t){return gm(e,t)}function bk(e,t){return e.rank===t.rank&&(e=Ye(e,[e.rank-1])),t=Mr(t,-1),t.dtype!==e.dtype&&(t=ge(t,e.dtype)),ge(zr(e,t),"float32")}var tV=Il,nV=Il,rV=fm,sV=fm,aV=ac,oV=ac,I1=up,iV=b1,vk=mm,Am={binaryAccuracy:w1,categoricalAccuracy:k1,precision:Ak,categoricalCrossentropy:I1,sparseCategoricalCrossentropy:vk,mse:tV,MSE:nV,mae:rV,MAE:sV,mape:aV,MAPE:oV,cosine:iV};function lV(e){if(typeof e=="string"&&e in Am)return Am[e];if(typeof e!="string"&&e!=null)return e;throw new q(`Unknown metric ${e}`)}function xm(e){if(Ms(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(ym))if(ym[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Am))if(Am[n]===e){t=n;break}return t!==void 0?t:e.name}}function uV(e){let t={Adagrad:()=>Al.adagrad(.01),Adadelta:()=>Al.adadelta(1,.95,ln()),Adam:()=>Al.adam(.001,.9,.999,ln()),Adamax:()=>Al.adamax(.002,.9,.999,ln(),0),RMSProp:()=>Al.rmsprop(.001,.9,0,ln()),SGD:()=>Al.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new q(`Unknown Optimizer ${e}`)}var wk=1*1024*1024;function kk(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!S1(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>wk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${wk}.`)}}function S1(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!S1(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!S1(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function cV(e,t,n,r=console.log){let s=pV(e),a=["Layer (type)","Output shape","Param #"];s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(u=>Math.floor(t*u)));let o;if(!s){a.push("Receives inputs"),o=[];for(let u in e.nodesByDepth)o.push(...e.nodesByDepth[u])}r("_".repeat(t)),bm(a,n,r),r("=".repeat(t));let i=e.layers;for(let u=0;u<i.length;++u)s?hV(i[u],n,r):fV(i[u],n,o,r),r((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=dV(e),c=dm(e.nonTrainableWeights);r(`Total params: ${l+c}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${c}`),r("_".repeat(t))}function dV(e){let t;return e.collectedTrainableWeights!=null?t=dm(e.collectedTrainableWeights):t=dm(e.trainableWeights),t}function pV(e){let t=!0,n=[],r=[];for(let s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(let s of n){if(s.length>1||s.length===1&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(let s of e.layers){let a=!1;for(let o of s.inboundNodes)if(r.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function bm(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function hV(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(i){r="multiple"}let s=e.name,a=e.getClassName(),o=[`${s} (${a})`,r,e.countParams().toString()];bm(o,t,n)}function fV(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(u){s="multiple"}let a=[];for(let u of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(u)===-1))for(let d=0;d<u.inboundLayers.length;++d){let p=u.inboundLayers[d].name,h=u.nodeIndices[d],f=u.tensorIndices[d];a.push(`${p}[${h}][${f}]`)}let o=e.name,i=e.getClassName(),l=a.length===0?"":a[0],c=[`${o} (${i})`,s,e.countParams().toString(),l];bm(c,t,r);for(let u=1;u<a.length;++u)bm(["","","",a[u]],t,r)}function Ik(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function cp(e,t){if(e===null)return null;if(typeof e=="string")return bl(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let s=0;s<r;++s){let a=e[s];Ik(t,s,a)?n.push(a):n.push(cp(a,t))}return n}else{let n={};for(let r of Object.keys(e)){let s=e[r];if(r==="name"&&typeof s=="string")n[r]=s;else{let a=bl(r);n[a]=cp(s,a)}}return n}}function C1(e,t){if(e==null)return null;if(typeof e=="string")return sa(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let s=0;s<r;++s){let a=e[s];Ik(t,s,a)?n.push(a):n.push(C1(a,t))}return n}else{let n={};for(let r of Object.keys(e)){let s=e[r],a=sa(r);(r==="name"||r==="className")&&typeof s=="string"?n[a]=s:n[a]=C1(s,r)}return n}}var T1="0.0.0";function mV(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ge(t,e.dtype)}catch(n){throw new q(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Sl=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Sl)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=mV(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new q(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ks){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ks){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&te(this.id2Mask)}},N1={},Sk={};function dp(e,t,n,r){let s=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],c=t.names();for(let f of i)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let u=i.join(",")+"|"+t.names().join(","),d,p;if(N1[u]==null){let f=gV(o,t);d=f.sorted,p=f.recipientCounts,N1[u]=d,Sk[u]=p}d=N1[u],p={},s||Object.assign(p,Sk[u]);let h=new Sl(t);for(let f=0;f<d.length;++f){if(r!=null){let R=bf().numTensors;R>r.maxNumTensors&&(r.maxNumTensors=R),R<r.minNumTensors&&(r.minNumTensors=R)}let m=d[f],g=m.sourceLayer;if(g instanceof rc)continue;let y=[],x=[],A=[],b=!1;for(let R of m.inputs){let F=h.getValue(R),_=h.getMask(R);y.push(F),x.push(_),_!=null&&(b=!0),s||(p[R.name]--,p[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!F.isDisposed&&R.sourceLayer.stateful!==!0&&A.push(F))}b&&(n=n||{},n.mask=x[0]);let v=Nt(g.apply(y,n)),C=null;g.supportsMasking&&(C=g.computeMask(y,x));let I=AV(m),E=Array.isArray(I)?I:[I];for(let R=0;R<E.length;++R){h.hasKey(E[R])||h.add(E[R],v[R],Array.isArray(C)?C[0]:C);let F=i.indexOf(E[R].name);F!==-1&&(l[F]=v[R])}s||te(A)}return h.disposeMasks(),a?l:l[0]}function gV(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(e.length===1){let s=Ck(e[0],t);n=s.sorted,r=s.recipientMap}else{let s=new Set;for(let a of e){let{sorted:o,recipientMap:i}=Ck(a,t);for(let l of o)s.has(l.name)||(n.push(l),s.add(l.name));for(let l in i)r[l]==null&&(r[l]=new Set),i[l].forEach(c=>r[l].add(c))}}return{sorted:n,recipientCounts:yV(r)}}function yV(e){let t={};for(let n in e)t[n]=e[n].size;return t}function Ck(e,t){let n=new Set,r=[],s={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),r.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let c of i.inputs)s[c.name]==null&&(s[c.name]=new Set),s[c.name].add(i.name),!n.has(c.name)&&a.push(c)}}return{sorted:r,recipientMap:s}}function AV(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let s of e.sourceLayer.inboundNodes[r].outputTensors)if(s.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}var Bs=class extends ot{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=um(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Uo(this.inputs).length!==this.inputs.length)throw new q(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Uo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(A),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;Ms(A===0,"input layer has >1 nodes"),Ms(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(A),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let x=this.inputLayers[y];if(!(x instanceof rc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},r={},s={},a={},o=[],i=(y,x,A,b,v,C)=>{(b==null||v==null||C==null)&&(b=y.sourceLayer,v=y.nodeIndex,C=y.tensorIndex);let I=b.inboundNodes[v];if(A.indexOf(I)!==-1)throw new bs(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(I)!==-1)return;this.containerNodes.add(Bs.nodeKey(b,v)),b.id in a||(a[b.id]=Object.keys(a).length),A.indexOf(I)===-1&&A.push(I);let E=I.inboundLayers.length;for(let R=0;R<E;R++){let F=I.inputTensors[R],_=I.inboundLayers[R],P=I.nodeIndices[R],T=I.tensorIndices[R];i(F,x,A,_,P,T)}for(x.push(I);A.indexOf(I)>=0;)A.splice(A.indexOf(I),1);o.push(I)},l=[],c=[];for(let y of this.outputs)i(y,l,c);let u=o.slice().reverse();for(let y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let x=t[y.id],A=r[y.outboundLayer.id]==null?0:r[y.outboundLayer.id];x=Math.max(x,A),r[y.outboundLayer.id]=x,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=x;for(let b=0;b<y.inboundLayers.length;b++){let v=y.inboundLayers[b],C=y.nodeIndices[b],I=v.inboundNodes[C],E=t[I.id]==null?0:t[I.id];t[I.id]=Math.max(x+1,E),n[I.id]=I}}let d={};for(let y in t){let x=t[y];x in d||(d[x]=[]),d[x].push(n[y])}let p={};for(let y in r){let x=r[y];x in p||(p[x]=[]),p[x].push(s[y])}let h=Object.keys(p).map(y=>parseInt(y,10)).sort(Yf);this.layers=[];for(let y of h){let x=p[y];x.sort((A,b)=>{let v=a[A.id],C=a[b.id];return v<C?-1:v>C?1:0});for(let A of x)A instanceof Bs&&this.internalContainerRefs.push(A),this.layers.push(A)}this.layersByDepth=p,h=Object.keys(d).map(y=>parseInt(y,10)).sort(Yf);let f=this.inputs.slice(),m=[];for(let y of h)for(let x of d[y]){let A=x.outboundLayer;if(A!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new bs(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${A.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(A.name)}}this.nodesByDepth=d;let g=this.layers.map(y=>y.name);for(let y of g){let x=g.filter(A=>A===y).length;if(x!==1)throw new bs(`The name "${y}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new q("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new q(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,r++}let s=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)s.push([n[o],e[a]]);else if(t)throw new q(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new q(`${a.length} of ${r} weights are not set: ${a}`)}A1(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${T1}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=C1(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return X(()=>{e=Nt(e);let n=new Sl;for(let r=0;r<this.inputs.length;++r)n.add(this.inputs[r],e[r]);return dp(this.outputs,n,t)})}computeMask(e,t){return X(()=>{e=Nt(e);let n;return t==null?n=xl(null,e.length):n=Nt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=cm(e);if(t.length!==this.inputLayers.length)throw new q(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],c=i.name+"_0_0";n[c]=l}let r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Yf);if(r.length>1)for(let o of r){let i=this.nodesByDepth[o];for(let l of i){let c=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(c.id)!==-1)continue;let u=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],x=`${m.name}_${g}_${y}`,A=n[x];u.push(A)}let d=c.computeOutputShape(ur(u)),p=cm(d),h=c.inboundNodes.indexOf(l);for(let f=0;f<p.length;f++){let m=`${c.name}_${h}_${f}`;n[m]=p[f]}}}let s=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=this.outputLayersTensorIndices[o],u=`${i.name}_${l}_${c}`;a.push(u)}for(let o=0;o<a.length;o++){let i=a[o];Ms(i in n),s.push(n[i])}return ur(s)}runInternalGraph(e,t){t==null&&(t=xl(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],c=e[i],u=t[i];n[l.id]=[c,u]}let r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Yf);for(let i of r){let l=this.nodesByDepth[i];for(let c of l){let u=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,h=new Array;for(let f of d)f.id in n&&h.push(n[f.id]);if(h.length===d.length){let f={},m,g,y,x;if(c.callArgs!=null&&(f=c.callArgs),h.length===1){let[A,b]=h[0];f.mask==null&&(f.mask=b),y=Nt(u.call(A,f)),x=Nt(u.computeMask(A,b)),m=[A],g=[b]}else m=h.map(A=>A[0]),g=h.map(A=>A[1]),f.mask==null&&(f.mask=g),y=Nt(u.call(m,f)),x=Nt(u.computeMask(m,g));if(u.activityRegularizer)throw new Be("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let A=0;A<p.length;++A){let b=p[A],v=y[A],C=x[A];n[b.id]=[v,C]}}}}let s=[],a=[],o=[];for(let i of this.outputs){Ms(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,c]=n[i.id];o.push(l.shape),s.push(l),a.push(c)}return[s,a,o]}buildNodeConversionMap(e){let t={},n;for(let r of this.layers){n=r instanceof Bs?1:0;for(let s=0;s<r.inboundNodes.length;s++){let a=Bs.nodeKey(r,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new q(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new q("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new q(`No such layer: ${e}`)}calculateLosses(){return X(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=Bs.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let u=0;u<a.inboundNodes.length;u++){let d=a.inboundNodes[u],p=Bs.nodeKey(a,u),h={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let f=[];for(let m=0;m<d.inboundLayers.length;m++){let g=d.inboundLayers[m],y=d.nodeIndices[m],x=d.tensorIndices[m],A=Bs.nodeKey(g,y),b=t[A];b==null&&(b=0),f.push([g.name,b,x,h])}l.push(f)}}}let c={};c.name=a.name,c.className=o,c.config=i,c.inboundNodes=l,n.push(c)}e.layers=n;let r=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=Bs.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.inputLayersTensorIndices[a];r.push([o.name,c,u])}e.inputLayers=r;let s=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=Bs.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let c=t[l];c==null&&(c=0);let u=this.outputLayersTensorIndices[a];s.push([o.name,c,u])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){let s={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let y=[],x;for(let A of g){let b=A[0],v=A[1],C=A[2];if(x=A[3]==null?{}:A[3],!(b in s)){o(m,g);return}let I=s[b];if(I.inboundNodes.length<=v){o(m,g);return}let E=I.inboundNodes[v];y.push(E.outputTensors[C])}y.length>0&&m.apply(ur(y),x)}function l(m){let g=m.name,y=Is(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(r),s[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new q(`Corrupted configuration, expected array for nodeData: ${A}`);o(y,A)})}let c=t.name,u=t.layers;for(let m of u)l(m);for(;!KB(a);)for(let m of u){let g=s[m.name];if(g.name in a){let y=a[g.name];delete a[g.name];for(let x of y)i(g,x)}}let d=[],p=[],h=t.inputLayers;for(let m of h){let g=m[0],y=m[1],x=m[2];Ms(g in s);let b=s[g].inboundNodes[y].outputTensors;d.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],x=m[2];Ms(g in s);let b=s[g].inboundNodes[y].outputTensors;p.push(b[x])}return new e({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new q("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){X(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function xV(e,t,n){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let s=[];return t.forEach(a=>{a in e?s.push(e[a]):s.push(null)}),s}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Tk(e,t){return xV(e,t,"classWeight")}async function Nk(e,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let s=X(()=>{if(e.shape.length===1)return Vn(e);if(e.shape.length===2){if(e.shape[1]>1)return Mr(e,1);if(e.shape[1]===1)return H(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await s.data());te(s);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),Tt(o,"float32")}else return null}function bV(e,t){return L(e,t)}var vV=32;function Ek(e,t){let n,r,s=t;n=s.xs,r=s.ys,w.assert(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=Rk("input",e.inputNames,n),o=Rk("output",e.outputNames,r),i=a[0].shape[0];w.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)w.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)w.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function Rk(e,t,n){if(n instanceof nt)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let s of t){if(n[s]==null)throw new q(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function wV(e){if(e.length===3)throw new Be("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function kV(e,t,n){let r=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let s=n.validationData!=null,a,o;if(s)if(_k(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=wV(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),c;s?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();let u=mk(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:h}=gk(u,d,n.epochs,null,null,IV(t,n),null,s,c);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await p.onEpochBegin(f);let y=0,x=0;for(r||(m=await t.iterator());r?y<n.batchesPerEpoch:!0;){let A=await m.next();if(r&&A.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(A.value!=null){let{xs:b,ys:v}=Ek(e,A.value),C={};C.batch=x,C.size=b[0].shape[0],await p.onBatchBegin(x,C);let I=[];if(n.classWeight!=null){let F=Tk(n.classWeight,e.outputNames);for(let _=0;_<F.length;++_)I.push(await Nk(v[_],null,F[_]))}let E=b.concat(v).concat(I),R=i(E);te(E);for(let F=0;F<l.length;++F){let _=l[F],P=R[F];C[_]=P,xn(P)}await p.onBatchEnd(x,C),dk(C),x++,y++}if(r?y>=n.batchesPerEpoch:A.done){if(s){let b;_k(n.validationData)?b=Nt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=Nt(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?vV:n.validationBatchSize,verbose:0}));for(let v=0;v<e.metricsNames.length;++v)g[`val_${e.metricsNames[v]}`]=b[v]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function IV(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function _k(e){return typeof e.iterator=="function"}function SV(e){return typeof e.next=="function"}async function CV(e,t,n){n=n||{};let r=n.batches!=null,s=e.testFunction,a=[];if(n.verbose>0)throw new Be("Verbose mode is not implemented yet.");w.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=SV(t)?t:await t.iterator(),i=0,l=0;for(;r?l<n.batches:!0;){let c=await o.next();if(a=X(()=>{if(c.value){let{xs:u,ys:d}=Ek(e,c.value),p=u.concat(d),h=X(()=>s(p));if(te(p),l===0)for(let m=0;m<h.length;++m)a.push(Te(0));let f=p[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],y=a[m];a[m]=X(()=>ue(a[m],L(f,g))),l>0&&te(y)}te(h),i+=f,++l}return a}),c.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<a.length;++c){let u=a[c];a[c]=de(a[c],i),te(u)}return ur(a)}function E1(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function pp(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(r=>kl(r,t,n-t)):kl(e,t,n-t)}function R1(e,t){return X(()=>e==null?null:Array.isArray(e)?e.map(n=>R1(n,t)):tk(e,t.dtype==="int32"?t:ge(t,"int32")))}function _1(e,t){let n=[],r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}async function TV(e,t,n,r,s,a,o,i,l,c,u,d,p,h,f){s==null&&(s=32),a==null&&(a=1),u==null&&(u=!0),p==null&&(p=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new q("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,s,h,"steps_per_epoch"),y;g!=null&&(y=vs(0,g)),o==null&&(o=1);let{callbackList:x,history:A}=gk(i,o,a,p,g,h,s,m,d);x.setModel(e),e.history=A,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=p;b<a;++b){await x.onEpochBegin(b);let v={};if(h!=null)throw new Be("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Be("batch shuffling is not implemneted yet");u&&w.shuffle(y);let C=Tt(y),I=_1(g,s);for(let E=0;E<I.length;++E){let R={};if(await x.onBatchBegin(E,R),X(()=>{let F=I[E][0],_=I[E][1],P=kl(C,F,_-F);R.batch=E,R.size=_-F;let T=R1(n,P),O=t(T);for(let G=0;G<r.length;++G){let K=r[G],z=O[G];R[K]=z,xn(z)}if(E===I.length-1&&m){let G=e.testLoop(l,c,s);for(let K=0;K<r.length;++K){let z=r[K],j=G[K];xn(j),v["val_"+z]=j}}}),await x.onBatchEnd(E,R),dk(R),e.stopTraining_)break}C.dispose()}if(await x.onEpochEnd(b,v),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function NV(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let s,a,o,i,l,c,u,d,p;try{let h=r.batchSize==null?32:r.batchSize;E1(h);let f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,h);s=m[0],a=m[1],p=m[2];let g=!1,y;if(r.validationData!=null&&r.validationData.length>0){if(g=!0,r.validationData.length===2)l=r.validationData[0],c=r.validationData[1];else throw r.validationData.length===3?new Be("validationData including sample weights is not supported yet."):new q(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);let R=!0,F=await e.standardizeUserData(l,c,null,null,R,h);u=F[0],d=F[1],y=u.concat(d)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){g=!0;let R=Math.floor(s[0].shape[0]*(1-r.validationSplit)),F=s[0].shape[0];u=pp(s,R,F),o=s,s=pp(s,0,R),d=pp(a,R,F),i=a,a=pp(a,0,R),y=u.concat(d)}else r.validationSteps!=null&&(g=!0);let x=s.concat(a).concat(p);e.checkTrainableWeightsConsistency();let A=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),v,C;g?(e.makeTestFunction(),v=e.testFunction,C=b.slice().concat(b.map(R=>"val_"+R))):(v=null,y=[],C=b.slice());let I=mk(r.callbacks,r.yieldEvery);return await TV(e,A,x,b,h,r.epochs,r.verbose,I,v,y,r.shuffle,C,r.initialEpoch,null,null)}finally{e.isTraining=!1,Ss(s,t),Ss(a,n),Ss(o,t),Ss(i,n),Ss(u,l),Ss(d,c),p!=null&&te(p)}}function Dk(e){let t=[];e instanceof nt&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(r.rank===1)t.push(op(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Ss(e,t){if(e==null)return;let n=[];if(t instanceof nt)n.push(t.id);else if(Array.isArray(t))t.forEach(s=>n.push(s.id));else if(t!=null)for(let s in t){let a=t[s];n.push(a.id)}let r=[];if(e instanceof nt)n.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(s=>{n.indexOf(s.id)===-1&&r.push(s)});else if(e!=null)for(let s in e){let a=e[s];n.indexOf(a.id)===-1&&r.push(a)}r.forEach(s=>{s.isDisposed||s.dispose()})}function EV(e){return e instanceof nt}function D1(e){return Array.isArray(e)}function Pk(e){return!EV(e)&&!D1(e)}function $k(e,t,n,r=!0,s=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(D1(e)&&e.length>0)o=!0;else if(Pk(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new q(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(Pk(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new q(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(D1(e)){if(e=e,e.length!==t.length)throw new q(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new q(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Dk(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!r)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u>=0&&c!==u)throw new q(`${s} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function RV(e,t,n){let r=Uo(e.map(a=>a.shape[0]));r.sort();let s=Uo(t.map(a=>a.shape[0]));if(s.sort(),r.length>1)throw new q(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(s.length>1)throw new q(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(r.length>0&&s.length>0&&!w.arraysEqual(r,s))throw new q(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function _V(e,t,n){let r=[Il,gm,up];for(let s=0;s<e.length;++s){let a=e[s],o=t[s],i=n[s];if(o!=null){if(o===up&&a.shape[a.shape.length-1]===1)throw new q(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(o)!==-1){let l=a.shape.slice(1),c=i.slice(1);for(let u=0;u<l.length;++u){let d=l[u],p=c[u];if(p!=null&&d!==p)throw new q(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Fk(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new q(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new q(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!r)continue;let c=i.shape[l],u=n[o][l];if(u!=null&&u!==c)throw new q(`Error when checking ${s}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function DV(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let s of t){let a=n.hasOwnProperty(s)?n[s]:[];Array.isArray(a)||(a=[a]),r.push(a)}return r}}var PV="layers-model",aa=class extends Bs{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new q("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");cV(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=uV(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof na))throw new q("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new q(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(v1(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new q(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>v1(o))}else{let a=v1(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],wl("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let r=DV(e.metrics,this.outputNames),s=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};wl("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=r[a];(l=>{let c="",u,d,p;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===gm?["accuracy","acc"].indexOf(h)!==-1?d=w1:["crossentropy","ce"].indexOf(h)!==-1&&(d=xk):this.lossFunctions[a]===mm?["accuracy","acc"].indexOf(h)!==-1?d=bk:["crossentropy","ce"].indexOf(h)!==-1&&(d=vk):["accuracy","acc"].indexOf(h)!==-1?d=k1:["crossentropy","ce"].indexOf(h)!==-1&&(d=I1);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),p=d,u=c+g}else p=lV(h),u=c+xm(h);let f;wl(u,()=>{f=p}),s(a,u,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=n.batchSize==null?32:n.batchSize;E1(r);let s=!0,a=this.standardizeUserDataXY(e,t,s,r);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,r,n.verbose,n.steps);return ur(l)}finally{Ss(a[0],e),Ss(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),CV(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(n!=null){if(s=null,t!=null)throw new q(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new q(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new q("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Sl;if(e instanceof nt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new q(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new q(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=dp(s,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=xl(null,e.length),n=e.length;for(let r of this.layers){let s=Array.isArray(r.output)?r.output:[r.output],a=s.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=s[i],n--),n===0)break}if(n===0)break}if(n>0){let r=[];throw t.forEach((s,a)=>{s==null&&r.push(e[a])}),new q(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return X(()=>{let r=this.checkNumSamples(e);if(n)throw new Be("Verbose predictLoop() is not implemented yet.");let s=_1(r,t),a=this.outputs.map(o=>[]);for(let o=0;o<s.length;++o)X(()=>{let l=s[o][0],c=s[o][1],u=pp(e,l,c),d=[];if(Array.isArray(u))for(let h=0;h<u.length;++h)d.push({key:this.inputs[h],value:u[h]});else d.push({key:this.inputs[0],value:u});let p=new Sl(d);return dp(this.outputs,p)}).forEach((l,c)=>a[c].push(l));return ur(a.map(o=>St(o,0)))})}predict(e,t={}){let n=Dk(e);Fk(n,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return E1(r),this.predictLoop(n,r)}finally{Ss(n,e)}}predictOnBatch(e){Fk(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(this.optimizer_==null)throw new bs("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===mm?s.push(o.slice(0,o.length-1).concat([1])):s.push(o)}if(e=$k(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=$k(t,this.feedOutputNames,s,!1,"target"),RV(e,t,null),_V(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new q(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){let c=Tk(r,this.outputNames);l=[];for(let u=0;u<c.length;++u)l.push(await Nk(i[u],null,c[u]))}return[o,i,l]}testLoop(e,t,n,r=0,s){return X(()=>{let a=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new Be("Verbose mode is not implemented yet.");if(s!=null)throw new Be("steps mode in testLoop() is not implemented yet");{let i=_1(a,n),l=Tt(vs(0,a));for(let c=0;c<i.length;++c){let u=i[c][0],d=i[c][1],p=kl(l,u,d-u),h=R1(t,p),f=e(h);if(c===0)for(let m=0;m<f.length;++m)o.push(Te(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=ue(o[m],L(d-u,g))}}for(let c=0;c<o.length;++c)o[c]=de(o[c],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],s=r;Uw(e,r)>1&&(s+=`_${Uw(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let u=[];for(let f=0;f<this.inputs.length;++f)u.push({key:this.inputs[f],value:n[f]});let d=new Sl(u),p=dp(this.outputs,d,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](r[f],p[f]);s[f]!=null&&(g=bV(g,s[f]));let y=Gt(g);t.push(y),f===0?h=g:h=ue(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],y=this.metricsTensors[f][1];m=Gt(g(r[y],p[y]))}xn(m),a.push(m)}return h=Gt(h),this.calculateLosses().forEach(f=>{h=ue(h,f)}),h},i=this.collectedTrainableWeights.map(u=>u.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>X(()=>{let t=[],n,r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:r[l]});let o=new Sl(a),i=dp(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],u=Gt(c(s[l],i[l]));l===0?n=u:n=ue(n,u),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],u=this.metricsTensors[l][1],d=Gt(c(s[u],i[u]));t.push(d)}return t})}async fit(e,t,n={}){return NV(this,e,t,n)}async fitDataset(e,t){return kV(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],s=n[1],o=this.makeTrainFunction()(r.concat(s)),i=[];for(let l of o){let c=await l.data();i.push(c[0])}return te(o),Ss(n[0],e),Ss(n[1],t),ur(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=bf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-bf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=sa(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>sa(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if(typeof n[r]=="string")e[r]=sa(n[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[sa(xm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>sa(xm(e)));{let e={};for(let t in this.metrics)e[t]=sa(xm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=cp(e.optimizer_config),n=Is(t),r;if(typeof e.loss=="string")r=bl(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>bl(a));else if(e.loss!=null){r={};for(let a in e.loss)r[a]=bl(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>bl(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=bl(e.metrics[a])}this.compile({loss:r,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=or.getSaveHandlers(e);if(l.length===0)throw new q(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new q(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new q("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await or.encodeWeights(this.getNamedWeights(t)),r=!1,s=null,o={modelTopology:this.toJSON(s,r),format:PV,generatedBy:`TensorFlow.js tfjs-layers v${T1}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:c,specs:u}=await or.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...u),n.data=or.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let l=!0;kk(this.userDefinedMetadata,this.name,l),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){kk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};aa.className="Model";ce.registerClass(aa);var Ok=class extends aa{};Ok.className="Functional";ce.registerClass(Ok);async function $V(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let r=cp(n),s=Is(r,t);if(e.weightsManifest!=null){let a=await or.loadWeights(e.weightsManifest,e.pathPrefix,s.weights.map(i=>i.originalName)),o={};for(let i of s.weights)o[i.originalName]=a[i.originalName];s.loadWeights(o),te(a)}return s}async function FV(e,t){if(t==null&&(t={}),typeof e=="string"){let n=or.getLoadHandlers(e,t);if(n.length===0)n.push(or.browserHTTPRequest(e,t));else if(n.length>1)throw new q(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return OV(e,void 0,t)}async function OV(e,t,n){if(n==null&&(n={}),e.load==null)throw new q("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),s=r.modelTopology;s.model_config!=null&&(s=s.model_config);let a=n.strict==null?!0:n.strict,o=r.weightData!=null&&r.weightSpecs!=null&&a,i=Is(cp(s),t,o),l=r.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),r.userDefinedMetadata!=null&&i.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new q("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:c,optimizerWeights:u}=MV(r.weightData,r.weightSpecs);i.loadWeights(c,a),i.optimizer!=null&&u.length>0&&await i.optimizer.setWeights(u),te(c),te(u.map(d=>d.tensor))}return i}function MV(e,t){let n=or.decodeWeights(e,t),r={},s=[];return t.forEach(a=>{a.group==="optimizer"?s.push({name:a.name,tensor:n[a.name]}):r[a.name]=n[a.name]}),{modelWeights:r,optimizerWeights:s}}var P1=class extends aa{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:um("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new q(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof P1||e instanceof aa,n;if(t){if(n=e,n.outputs.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new q("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new q("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let r=ck({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new q(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=uk(this.outputs[0])}this.inboundNodes=[],new pm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:xl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{let r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(mt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new aa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new bs("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new bs("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new bs("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new bs("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new q("Legacy serialization format not supported yet.");s=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof P1))throw new Be(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of s){let c=Is(i,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(e){if(this.model==null)throw new q("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new q("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},vm=P1;vm.className="Sequential";ce.registerClass(vm);function zV(e){return new aa(e)}function LV(e){return new vm(e)}function BV(e,t){return t==null&&(t={}),FV(e,t)}function Mk(e){return ck(e)}function WV(e,t){x1.registerCallbackConstructor(e,t)}var dr=class extends ce.Serializable{getConfig(){return{}}},zk=class extends dr{apply(e,t=1){return hW(e,t)}};zk.className="elu";ce.registerClass(zk);var Lk=class extends dr{apply(e){return Fy(e)}};Lk.className="selu";ce.registerClass(Lk);var Bk=class extends dr{apply(e){return Os(e)}};Bk.className="relu";ce.registerClass(Bk);var Wk=class extends dr{apply(e){return X(()=>Yd(6,Os(e)))}};Wk.className="relu6";ce.registerClass(Wk);var Vk=class extends dr{apply(e){return e}};Vk.className="linear";ce.registerClass(Vk);var Uk=class extends dr{apply(e){return Pn(e)}};Uk.className="sigmoid";ce.registerClass(Uk);var Gk=class extends dr{apply(e){return mW(e)}};Gk.className="hardSigmoid";ce.registerClass(Gk);var Hk=class extends dr{apply(e){return Xu(e)}};Hk.className="softplus";ce.registerClass(Hk);var jk=class extends dr{apply(e){return fW(e)}};jk.className="softsign";ce.registerClass(jk);var qk=class extends dr{apply(e){return Uu(e)}};qk.className="tanh";ce.registerClass(qk);var $1=class extends dr{apply(e,t=-1){return Qu(e,t)}};$1.className="softmax";ce.registerClass($1);var Xk=class extends dr{apply(e,t=-1){return Iy(e,t)}};Xk.className="logSoftmax";ce.registerClass(Xk);var Kk=class extends dr{apply(e,t=1){return X(()=>L(Pn(L(e,t)),e))}};Kk.className="swish";ce.registerClass(Kk);var Zk=class extends dr{apply(e){return X(()=>L(e,Uu(Xu(e))))}};Zk.className="mish";ce.registerClass(Zk);function qo(e){return e.getClassName()}function F1(e,t={}){return rp(e,ce.SerializationMap.getMap().classNameMap,t,"activation")}function Xo(e){if(e==null){let t={};return t.className="linear",t.config={},F1(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},F1(t)}else return e instanceof dr?e:F1(e)}function O1(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var Yk=class extends ce.Serializable{},hp=class extends Yk{constructor(e){super();O1(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return X(()=>{let t=Ht([1]);return this.hasL1&&(t=ue(t,we(L(this.l1,an(e))))),this.hasL2&&(t=ue(t,we(L(this.l2,ip(e))))),H(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};hp.className="L1L2";ce.registerClass(hp);function VV(e){return O1(e),new hp({l1:e!=null?e.l1:null,l2:0})}function UV(e){return O1(e),new hp({l2:e!=null?e.l2:null,l1:0})}var Jk={l1l2:"L1L2"};function vt(e){return Yy(e)}function Qk(e,t={}){return rp(e,ce.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ft(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Jk?Jk[e]:e,config:{}};return Qk(n)}else return e instanceof Yk?e:Qk(e)}var M1=class extends ot{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ue(e);let n=Os(e);return this.maxValue!=null&&(n=br(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};M1.className="ReLU";ce.registerClass(M1);var z1=class extends ot{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ue(e);return Nf(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};z1.className="LeakyReLU";ce.registerClass(z1);var L1=class extends ot{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=$t(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ft(e.alphaRegularizer),this.alphaConstraint=cn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new q(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=mt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Qt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ue(e),Ff(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Bt(this.alphaInitializer),alphaRegularizer:vt(this.alphaRegularizer),alphaConstraint:un(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};L1.className="PReLU";ce.registerClass(L1);var B1=class extends ot{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Be(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ue(e);return Kd(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};B1.className="ELU";ce.registerClass(B1);var W1=class extends ot{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ue(e);return L(n,ge(vr(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};W1.className="ThresholdedReLU";ce.registerClass(W1);var V1=class extends ot{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new $1().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ue(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};V1.className="Softmax";ce.registerClass(V1);function oc(e,t,n){if(typeof e=="number")return xl(e,t);if(e.length!==t)throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let s=e[r];if(!uW(s))throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function Cs(e,t,n,r,s=1){if(e==null)return e;let a=t+(t-1)*(s-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+r-1)/r)}function Ws(e,t,n,r){if(e==null)return null;if(r==="valid")e=e*t+Ho([n-t,0]);else if(r==="same")e=e*t;else throw new q(`Unsupport padding mode: ${r}.`);return e}function U1(e,t){return X(()=>(jt(t),t==="channelsFirst"?st(e,[0,2,3,1]):e))}function eI(e,t){return X(()=>(jt(t),t==="channelsFirst"?st(e,[0,2,3,4,1]):e))}function GV(e,t,n,r=1,s="valid",a,o=1){return X(()=>{if(a==null&&(a=xs()),jt(a),e.shape.length!==3)throw new q(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new q(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new q(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=st(e,[0,2,1])),s==="causal")throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=gy(e,t,r,s==="same"?"same":"valid","NWC",o);return n!=null&&(i=ws(i,n)),i})}function tI(e,t,n,r=[1,1],s="valid",a,o,i=null){return X(()=>{if(a==null&&(a=xs()),jt(a),e.rank!==3&&e.rank!==4)throw new q(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new q(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=U1(e,a);if(s==="causal")throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Wo.conv2d({x:l,filter:t,strides:r,pad:s==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=st(l,[0,3,1,2])),l})}function HV(e,t,n,r=[1,1,1],s="valid",a,o){return X(()=>{if(a==null&&(a=xs()),jt(a),e.rank!==4&&e.rank!==5)throw new q(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new q(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=eI(e,a);if(s==="causal")throw new Be("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=xy(i,t,r,s==="same"?"same":"valid","NDHWC",o),n!=null&&(i=ws(i,n)),a==="channelsFirst"&&(i=st(i,[0,4,1,2,3])),i})}var G1=class extends ot{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",G1.verifyArgs(t),this.rank=e,vn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Be(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=oc(t.kernelSize,e,"kernelSize"),this.strides=oc(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Ur(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,jt(this.dataFormat),this.activation=Xo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=$t(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cn(t.biasConstraint),this.biasRegularizer=Ft(t.biasRegularizer),this.activityRegularizer=Ft(t.activityRegularizer),this.dilationRate=oc(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new q(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new q(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new q(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ms("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Qy(e.kernelSize,"number",1,3))throw new q(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:qo(this.activation),useBias:this.useBias,biasInitializer:Bt(this.biasInitializer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},fp=class extends G1{constructor(e,t){super(e,t);this.kernel=null,fp.verifyArgs(t),this.filters=t.filters,vn(this.filters,"filters"),this.kernelInitializer=$t(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cn(t.kernelConstraint),this.kernelRegularizer=Ft(t.kernelRegularizer)}build(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return X(()=>{e=Ue(e);let n,r=this.bias==null?null:this.bias.read(),s=Hw(this.activation.getClassName());if(s!=null&&this.rank===2)n=tI(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=GV(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=tI(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=HV(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Be("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=mt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=Cs(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:Bt(this.kernelInitializer),kernelRegularizer:vt(this.kernelRegularizer),kernelConstraint:un(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new q(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},nI=class extends fp{constructor(e){super(2,e);nI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Qy(e.kernelSize,"number",1,2))throw new q(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},wm=nI;wm.className="Conv2D";ce.registerClass(wm);var rI=class extends fp{constructor(e){super(3,e);rI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new q(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},km=rI;km.className="Conv3D";ce.registerClass(km);var H1=class extends wm{constructor(e){super(e);if(this.inputSpec=[new Qt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=mt(e),e.length!==4)throw new q("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{let n=Ue(e);if(n.shape.length!==4)throw new q(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,s=r[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=r[a],l=r[o],c=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=Ws(i,d,c,this.padding),f=Ws(l,p,u,this.padding),m=[s,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=st(n,[0,2,3,1]));let g=Ay(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=st(g,[0,3,1,2])),this.bias!=null&&(g=ws(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=mt(e);let t=e.slice(),n,r,s;this.dataFormat==="channelsFirst"?(n=1,r=2,s=3):(n=3,r=1,s=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Ws(t[r],i,a,this.padding),t[s]=Ws(t[s],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};H1.className="Conv2DTranspose";ce.registerClass(H1);var j1=class extends km{constructor(e){super(e);if(this.inputSpec=[new Qt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=mt(e),e.length!==5)throw new q("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{let n=Ue(e);if(n.shape.length!==5)throw new q(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,s=r[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=r[i],c=r[a],u=r[o],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=Ws(l,f,d,this.padding),x=Ws(c,m,p,this.padding),A=Ws(u,g,h,this.padding),b=[s,y,x,A,this.filters];this.dataFormat!=="channelsLast"&&(n=st(n,[0,2,3,4,1]));let v=Ov(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=st(v,[0,4,1,2,3])),this.bias!==null&&(v=ws(v,this.bias.read(),this.dataFormat)),this.activation!==null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=mt(e);let t=e.slice(),n,r,s,a;this.dataFormat==="channelsFirst"?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=Ws(t[r],c,o,this.padding),t[s]=Ws(t[s],u,i,this.padding),t[a]=Ws(t[a],d,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};j1.className="Conv3DTranspose";ce.registerClass(j1);var sI=class extends fp{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new q("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new q("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new q(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=$t(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ft(t.depthwiseRegularizer),this.depthwiseConstraint=cn(t.depthwiseConstraint),this.pointwiseInitializer=$t(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ft(t.pointwiseRegularizer),this.pointwiseConstraint=cn(t.pointwiseConstraint)}build(e){if(e=mt(e),e.length<this.rank+2)throw new q(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Qt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return X(()=>{e=Ue(e);let n;if(this.rank===1)throw new Be("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=st(e,[0,2,3,1])),n=rw(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=ws(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=st(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Bt(this.depthwiseInitializer),e.pointwiseInitializer=Bt(this.pointwiseInitializer),e.depthwiseRegularizer=vt(this.depthwiseRegularizer),e.pointwiseRegularizer=vt(this.pointwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseConstraint),e.pointwiseConstraint=un(this.pointwiseConstraint),e}};sI.className="SeparableConv";var q1=class extends sI{constructor(e){super(2,e)}};q1.className="SeparableConv2D";ce.registerClass(q1);var aI=class extends fp{constructor(e){super(1,e);aI.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Qy(e.kernelSize,"number",1,1))throw new q(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},X1=aI;X1.className="Conv1D";ce.registerClass(X1);var K1=class extends ot{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return X(()=>{if(e=Ue(e),this.dataFormat==="channelsLast"){let n=Qf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Qf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Qf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Qf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};K1.className="Cropping2D";ce.registerClass(K1);var Z1=class extends ot{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,oW(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return X(()=>{let n=Ue(e),r=n.shape;if(this.dataFormat==="channelsFirst"){n=st(n,[0,2,3,1]);let s=this.size[0]*r[2],a=this.size[1]*r[3],o=this.interpolation==="nearest"?Ie.resizeNearestNeighbor(n,[s,a]):Ie.resizeBilinear(n,[s,a]);return st(o,[0,3,1,2])}else{let s=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?Ie.resizeNearestNeighbor(n,[s,a]):Ie.resizeBilinear(n,[s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Z1.className="UpSampling2D";ce.registerClass(Z1);function jV(e,t,n=[1,1],r="valid",s,a){return X(()=>{s==null&&(s=xs()),jt(s);let o=U1(e,s);if(e.rank!==4)throw new q(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new q(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Xd(o,t,n,r==="same"?"same":"valid","NHWC",a),s==="channelsFirst"&&(o=st(o,[0,3,1,2])),o})}var Y1=class extends G1{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=$t(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cn(e.depthwiseConstraint),this.depthwiseRegularizer=Ft(e.depthwiseRegularizer)}build(e){if(e=mt(e),e.length<4)throw new q(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{e=Ue(e);let n=jV(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=ws(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Cs(t,this.kernelSize[0],this.padding,this.strides[0]),a=Cs(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Bt(this.depthwiseInitializer),e.depthwiseRegularizer=vt(this.depthwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseRegularizer),e}};Y1.className="DepthwiseConv2D";ce.registerClass(Y1);function oI(e,t,n,r){if(Array.isArray(e)){if(t!=null||n!=null)throw new q("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(a){return a==null||Array.isArray(a)?a:[a]}return t=s(t),n=s(n),{inputs:e,initialState:t,constants:n}}function iI(e,t,n,r=!1,s,a,o=!1,i=!1){return X(()=>{let l=t.shape.length;if(l<3)throw new q(`Input should be at least 3D, but is ${l}D.`);let c=[1,0].concat(vs(2,l));if(t=st(t,c),a!=null)throw new Be("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),s!=null&&(s=ge(ge(s,"bool"),"float32"),s.rank===l-1&&(s=Yt(s,-1)),s=st(s,c)),r&&(t=Vr(t,0),s!=null&&(s=Vr(s,0)));let u=[],d,p=n,h=t.shape[0],f=ir(t),m;s!=null&&(m=ir(s));for(let y=0;y<h;++y){let x=f[y],A=X(()=>e(x,p));if(s==null)d=A[0],p=A[1];else{let b=X(()=>{let v=m[y],C=pe(Wr(v),v),I=ue(L(A[0],v),L(p[0],C)),E=p.map((R,F)=>ue(L(A[1][F],v),L(R,C)));return{output:I,newStates:E}});d=b.output,p=b.newStates}i&&u.push(d)}let g;return i&&(g=on(u,1)),[d,g,p]})}var lI=class extends ot{constructor(e){super(e);let t;if(e.cell==null)throw new q("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Cm({cells:e.cell}):t=e.cell,t.stateSize==null)throw new q("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Qt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return vs(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){g1(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],r;if(this.returnSequences?r=[e[0],e[1],n]:r=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[r].concat(s)}else return r}computeMask(e,t){return X(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let r=this.states.map(s=>null);return[n].concat(r)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Be("Constants support is not implemented in RNN yet.");g1(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new Qt({shape:[n,null,...r]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new Be("Constants support is not implemented in RNN yet.");this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new q(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new Qt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){X(()=>{if(!this.stateful)throw new ra("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Ht([n,r])):this.states_=[Ht([n,this.cell.stateSize])];else if(e==null)te(this.states_),this.keptStates!=null&&(te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Ht([n,r])):this.states_[0]=Ht([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):te(this.states_);for(let r=0;r<this.states_.length;++r){let s=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,o=[n,a];if(!w.arraysEqual(s.shape,o))throw new q(`State ${r} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${s.shape}`);this.states_[r]=s}}this.states_=this.states_.map(r=>xn(r.clone()))})}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let s=oI(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Qt({shape:l.shape}));o=o.concat(this.stateSpec)}if(r!=null&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof ks){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return X(()=>{let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;e=Ue(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new q(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:r},l=iI((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),c=l[0],u=l[1],d=l[2];this.stateful&&this.resetStates(d,r);let p=this.returnSequences?u:c;return this.returnState?[p].concat(d):p})}getInitialState(e){return X(()=>{let t=Ht(e.shape);return t=we(t,[1,2]),t=op(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?i1(t,[1,n]):t):this.cell.stateSize>1?[i1(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===lI.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let r=t.cell,s=Is(r,n);return new e(Object.assign(t,{cell:s}))}},oa=lI;oa.className="RNN";ce.registerClass(oa);var mp=class extends ot{},Im=class extends mp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,vn(this.units,"units"),this.activation=Xo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ft(e.kernelRegularizer),this.recurrentRegularizer=Ft(e.recurrentRegularizer),this.biasRegularizer=Ft(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=nc([1,Ho([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=nc([1,Ho([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{if(e=e,e.length!==2)throw new q(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ko({ones:()=>Wr(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ko({ones:()=>Wr(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let s,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?s=zs(L(e,a),this.kernel.read()):s=zs(e,this.kernel.read()),this.bias!=null&&(s=ws(s,this.bias.read())),o!=null&&(n=L(n,o));let i=ue(s,zs(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:qo(this.activation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:vt(this.kernelRegularizer),recurrentRegularizer:vt(this.recurrentRegularizer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};Im.className="SimpleRNNCell";ce.registerClass(Im);var J1=class extends oa{constructor(e){e.cell=new Im(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return new e(t)}};J1.className="SimpleRNN";ce.registerClass(J1);var Sm=class extends mp{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new q("GRUCell does not support reset_after parameter set to true.");this.units=e.units,vn(this.units,"units"),this.activation=Xo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Xo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ft(e.kernelRegularizer),this.recurrentRegularizer=Ft(e.recurrentRegularizer),this.biasRegularizer=Ft(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=nc([1,Ho([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=nc([1,Ho([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return X(()=>{if(e=e,e.length!==2)throw new q(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ko({ones:()=>Wr(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ko({ones:()=>Wr(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=L(e,s[0]));let c=zs(e,this.kernel.read());this.useBias&&(c=ws(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=L(r,a[0]));let u=this.recurrentKernel.read(),[d,p]=Jt(u,[2*this.units,this.units],u.rank-1),h=zs(r,d),[f,m,g]=Jt(c,3,c.rank-1),[y,x]=Jt(h,2,h.rank-1);o=this.recurrentActivation.apply(ue(f,y)),i=this.recurrentActivation.apply(ue(m,x));let A=zs(L(i,r),p);l=this.activation.apply(ue(g,A));let b=ue(L(o,r),L(ue(1,Lt(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:qo(this.activation),recurrentActivation:qo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:vt(this.kernelRegularizer),recurrentRegularizer:vt(this.recurrentRegularizer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};Sm.className="GRUCell";ce.registerClass(Sm);var Q1=class extends oa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sm(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Q1.className="GRU";ce.registerClass(Q1);var gp=class extends mp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,vn(this.units,"units"),this.activation=Xo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Xo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ft(e.kernelRegularizer),this.recurrentRegularizer=Ft(e.recurrentRegularizer),this.biasRegularizer=Ft(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=nc([1,Ho([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=nc([1,Ho([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=mt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;r=new(t=class extends rs{apply(o,i){let l=s.apply([a]),c=new tm().apply([a]),u=s.apply([a*2]);return ek(ek(l,c),u)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return X(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new q(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ko({ones:()=>Wr(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ko({ones:()=>Wr(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,c,u;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let d=zs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=L(r,o[0])),d=ue(d,zs(r,this.recurrentKernel.read())),this.useBias&&(d=ws(d,this.bias.read()));let[p,h,f,m]=Jt(d,4,d.rank-1);i=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(h),c=ue(L(l,s),L(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);let g=L(u,this.activation.apply(c));return[g,g,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:qo(this.activation),recurrentActivation:qo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),recurrentInitializer:Bt(this.recurrentInitializer),biasInitializer:Bt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:vt(this.kernelRegularizer),recurrentRegularizer:vt(this.recurrentRegularizer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};gp.className="LSTMCell";ce.registerClass(gp);var eA=class extends oa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gp(e);super(e)}call(e,t){return X(()=>{this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};eA.className="LSTM";ce.registerClass(eA);var Cm=class extends mp{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return X(()=>{e=e;let n=e.slice(1),r=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?r.push(n.splice(0,o.stateSize.length)):r.push(n.splice(0,1));r.reverse();let s=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=r[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),s.push(a.slice(1))}n=[];for(let o of s.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){g1(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,r)=>{wl(`RNNCell_${r}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),r={cells:this.cells.map(t)};return{...e,...r}}static fromConfig(e,t,n={}){let r=[];for(let s of t.cells)r.push(Is(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return y1(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,s=e.splice(r);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}A1(t)}};Cm.className="StackedRNNCells";ce.registerClass(Cm);function Ko(e){let{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):nk(t(),n),i=()=>lp(o,t,r);return!s||s<=1?xn(i().clone()):Array(s).fill(void 0).map(i).map(c=>xn(c.clone()))}var uI=class extends oa{constructor(e){if(e.unroll)throw new Be("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Be("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new Qt({ndim:5})]}call(e,t){return X(()=>{if(this.cell.dropoutMask!=null&&(te(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(te(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new q("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,r=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return X(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],a=Ht(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){X(()=>{if(!this.stateful)throw new ra("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(n[0]==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(s)):this.states_=[Ht(s)];else if(e==null)te(this.states_),this.keptStates!=null&&(te(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(s)):this.states_[0]=Ht(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):te(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=s;if(!w.arraysEqual(i.shape,l))throw new q(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>xn(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],c=e[i?4:3],u=Cs(l,r[0],s,a[0],o[0]),d=Cs(c,r[1],s,a[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}};uI.className="ConvRNN2D";var Tm=class extends gp{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:o}=e;super({...e,units:t});this.filters=t,vn(this.filters,"filters"),this.kernelSize=oc(n,2,"kernelSize"),this.kernelSize.forEach(i=>vn(i,"kernelSize")),this.strides=oc(r||1,2,"strides"),this.strides.forEach(i=>vn(i,"strides")),this.padding=s||"valid",Ur(this.padding),this.dataFormat=a||"channelsLast",jt(this.dataFormat),this.dilationRate=oc(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>vn(i,"dilationRate"))}build(e){var t;e=mt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],s=4,a=this.kernelSize.concat([r,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;i=new(t=class extends rs{apply(u,d){let p=l.apply([c]),h=wr([c]),f=l.apply([c*2]);return o1([p,h,f])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return X(()=>{if(e.length!==3)throw new q(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],s=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ko({ones:()=>Wr(r),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(W,Q,ne)=>!Q||!Q[ne]?W:L(Q[ne],W),c=l(r,i,0),u=l(r,i,1),d=l(r,i,2),p=l(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ko({ones:()=>Wr(s),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=l(s,h,0),m=l(s,h,1),g=l(s,h,2),y=l(s,h,3),x=3,[A,b,v,C]=Jt(this.kernel.read(),o,x),[I,E,R,F]=this.useBias?Jt(this.bias.read(),o):[null,null,null,null];c=this.inputConv(c,A,I,this.padding),u=this.inputConv(u,b,E,this.padding),d=this.inputConv(d,v,R,this.padding),p=this.inputConv(p,C,F,this.padding);let[_,P,T,O]=Jt(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,_),m=this.recurrentConv(m,P),g=this.recurrentConv(g,T),y=this.recurrentConv(y,O);let G=this.recurrentActivation.apply(ue(c,f)),K=this.recurrentActivation.apply(ue(u,m)),z=ue(L(K,a),L(G,this.activation.apply(ue(d,g)))),j=L(this.recurrentActivation.apply(ue(p,y)),this.activation.apply(z));return[j,j,z]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,r){let s=zo(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?ws(s,n,this.dataFormat):s}recurrentConv(e,t){return zo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Tm.className="ConvLSTM2DCell";ce.registerClass(Tm);var tA=class extends uI{constructor(e){let t=new Tm(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};tA.className="ConvLSTM2D";ce.registerClass(tA);var Nm=class extends ot{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return n}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ue(e);if(0<this.rate&&this.rate<1){let r=t.training==null?!1:t.training,s=this.getNoiseShape(n);return lp(()=>nk(n,this.rate,s,this.seed),()=>n,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Nm.className="Dropout";ce.registerClass(Nm);var nA=class extends Nm{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};nA.className="SpatialDropout1D";ce.registerClass(nA);var rA=class extends ot{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,vn(this.units,"units"),this.activation=Xo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cn(e.kernelConstraint),this.biasConstraint=cn(e.biasConstraint),this.kernelRegularizer=Ft(e.kernelRegularizer),this.biasRegularizer=Ft(e.biasRegularizer),this.activityRegularizer=Ft(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=mt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=mt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ue(e),r=Hw(this.activation.getClassName()),s;return r!=null?s=zs(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=zs(n,this.kernel.read()),this.bias!=null&&(s=ws(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:qo(this.activation),useBias:this.useBias,kernelInitializer:Bt(this.kernelInitializer),biasInitializer:Bt(this.biasInitializer),kernelRegularizer:vt(this.kernelRegularizer),biasRegularizer:vt(this.biasRegularizer),activityRegularizer:vt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};rA.className="Dense";ce.registerClass(rA);var sA=class extends ot{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=mt(e);for(let t of e.slice(1))if(t==null)throw new q(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Go(e,1)]}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ue(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let r=[0];for(let s=2;s<n.rank;++s)r.push(s);r.push(1),n=st(n,r)}return pW(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};sA.className="Flatten";ce.registerClass(sA);var aA=class extends ot{constructor(e){super(e);this.supportsMasking=!0,this.activation=Xo(e.activation)}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ue(e);return this.activation.apply(n)})}getConfig(){let e={activation:qo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};aA.className="Activation";ce.registerClass(aA);var oA=class extends ot{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return X(()=>(e=Ue(e),cW(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};oA.className="RepeatVector";ce.registerClass(oA);var iA=class extends ot{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),s=1,a=null;for(let i=0;i<r.length;++i){let l=r[i];if(this.isUnknown(l))if(a===null)a=i;else throw new q("Can only specifiy one unknown dimension.");else s*=l}let o=Go(e);if(a!==null){if(s===0||o%s!==0)throw new q(n);r[a]=o/s}else if(o!==s)throw new q(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ue(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return H(n,s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};iA.className="Reshape";ce.registerClass(iA);var lA=class extends ot{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=vs(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qt({ndim:this.dims.length+1})]}computeOutputShape(e){e=mt(e);let t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return st(Ue(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};lA.className="Permute";ce.registerClass(lA);var uA=class extends ot{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ue(e),r=-1;return wf(Zu(n,this.maskValue),r)}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ue(e),r=-1,s=!0,a=wf(Zu(n,this.maskValue),r,s);return L(n,ge(a,n.dtype))})}};uA.className="Masking";ce.registerClass(uA);var cA=class extends ot{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Nt(e.inputLength))}this.inputDim=e.inputDim,vn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,vn(this.outputDim,"outputDim"),this.embeddingsInitializer=$t(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ft(e.embeddingsRegularizer),this.activityRegularizer=Ft(e.activityRegularizer),this.embeddingsConstraint=cn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return X(()=>this.maskZero?(e=Ue(e),Zu(e,at(e))):null)}computeOutputShape(e){if(e=mt(e),this.inputLength==null)return[...e,this.outputDim];let t=Nt(this.inputLength);if(t.length!==e.length-1)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let s=t[r],a=e[r+1];if(s!=null&&a!=null&&s!==a)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ue(e);n.dtype!=="int32"&&(n=Jf(n,"int32"));let r=tk(this.embeddings.read(),H(n,[n.size]));return H(r,mt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Bt(this.embeddingsInitializer),embeddingsRegularizer:vt(this.embeddingsRegularizer),activityRegularizer:vt(this.activityRegularizer),embeddingsConstraint:un(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};cA.className="Embedding";ce.registerClass(cA);var Cl=class extends ot{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Be}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let s=e[e.length-t.length+r],a=t[r];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new q("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[mt(e)]),e=e,e.length<2)throw new q(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=Uo(t),t.length>1)throw new q(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let r=e.map(s=>s.length);e.indexOf(null)===-1&&Uo(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return X(()=>{if(e=e,this.reshapeRequired){let n=[],r=e.map(s=>s.rank);if(r.indexOf(null)===-1){let s=Ho(r);for(let a of e){let o=a.rank;for(let i=0;i<s-o;++i)a=op(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let i of e){let l=i.rank;if(l==null){let c=i.shape,u=c[0],d=c.slice(1).concat([u]),p=H(i,[u].concat(Go(c.slice(1))));p=st(p,[1,0]),p=H(p,d),n.push(p),s=!0}else if(l>1){let c=vs(1,l).concat([0]);n.push(st(i,c)),s=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(s){if(o==null){let i=a.shape,l=i.length,c=i[l-1],u=[c].concat(i.slice(0,i.length-1));a=H(st(H(a,[-1,c]),[1,0]),u)}else if(o>1){let i=[o-1].concat(vs(0,o-1));a=st(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let s=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let r of e)r!=null&&r[0]!==null&&n.push(r[0]);return n=Uo(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return X(()=>{if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an Array");if(!Array.isArray(e))throw new q("`inputs` should be an Array");if(t.length!==e.length)throw new q(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Yt(r,0));let n=t[0];for(let r=1;r<t.length-1;++r)n=ys(n,t[r]);return n})}},dA=class extends Cl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return t})}};dA.className="Add";ce.registerClass(dA);var pA=class extends Cl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};pA.className="Multiply";ce.registerClass(pA);var hA=class extends Cl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return L(1/e.length,t)})}};hA.className="Average";ce.registerClass(hA);var fA=class extends Cl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ea(t,e[n]);return t})}};fA.className="Maximum";ce.registerClass(fA);var mA=class extends Cl{constructor(e){super(e)}mergeFunction(e){return X(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Yd(t,e[n]);return t})}};mA.className="Minimum";ce.registerClass(mA);var gA=class extends Cl{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new q("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(r!=null){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let s=e[r].slice();s.splice(this.axis,1);let a=!1;for(let o of n)if(w.arraysEqual(o,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new q("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return X(()=>o1(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new q("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[r]==null||s[r]==null){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new q("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new q(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return X(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let r=[];for(let a=0;a<e.length;++a)t[a]==null?r.push(ge(Wr(e[a]),"bool")):t[a].rank<e[a].rank?r.push(Yt(t[a],-1)):r.push(t[a]);let s=St(r,this.axis);return dy(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};gA.className="Concatenate";ce.registerClass(gA);function yp(e,t){for(;e<0;)e+=t;return e}function qV(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Be("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Be("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,s=t.shape.length;n==null&&(n=[r-1,s-2]);let a=n;return X(()=>{let o;if(r>s){o=r-s;let l=[];for(let c=0;c<o;++c)l.push(1);t=H(t,t.shape.concat(l))}else if(s>r){o=s-r;let l=[];for(let c=0;c<o;++c)l.push(1);e=H(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=we(L(e,t),a[0]):i=we(L(st(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,c=a[1]===t.shape.length-1;i=qe(e,t,l,c)}if(o>0){let l;r>s?l=r+s-3:l=r-1;let c=[];for(let u=l;u<l+o;++u)c.push(u);i=Ye(i,c)}return i.shape.length===1&&(i=Yt(i,1)),i})}var yA=class extends Cl{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new q(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new q(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((s,a)=>yp(s,e[a].shape.length)):r=[yp(this.axes,t.shape.length),yp(this.axes,n.shape.length)],this.normalize&&(t=hm(t,r[0]),n=hm(n,r[1])),qV(t,n,r)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[yp(this.axes,e.length),yp(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};yA.className="Dot";ce.registerClass(yA);var AA=class extends ot{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ue(e);return lp(()=>ue(em(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};AA.className="GaussianNoise";ce.registerClass(AA);var xA=class extends ot{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return X(()=>{this.invokeCallHook(e,t);let n=Ue(e);return this.rate>0&&this.rate<1?lp(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return L(n,em(n.shape,1,s))},()=>n,t.training||!1):n})}};xA.className="GaussianDropout";ce.registerClass(xA);var bA=class extends ot{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ue(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return X(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return lp(()=>{let s=Ue(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=hl(Yu(n),this.rate);l=Jf(l,"float32");let c=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-c*i*this.rate,d=ue(L(s,l),L(ue(l,-1),i));return ue(L(d,c),u)},()=>Ue(e),t.training||!1)}return e})}};bA.className="AlphaDropout";ce.registerClass(bA);function Ap(e,t,n,r,s,a=.001){let o;if(e.rank===2)o=Tv(e,t,n,r,s,a);else if(e.rank===3)o=Nv(e,t,n,r,s,a);else if(e.rank===4)o=Ev(e,t,n,r,s,a);else throw new Be(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function XV(e,t,n,r,s=.001){return X(()=>{let a=Pf(e,r),o=a.mean,i=a.variance;return[Ap(e,o,i,n,t,s),o,i]})}function KV(e,t,n,r,s=.001){return X(()=>{let a=Pf(e,r),o=a.mean,i=a.variance,l=[];for(let f of vs(0,e.rank))r.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let c=H(o,l),u=H(i,l),d=t==null?null:H(t,l),p=n==null?null:H(n,l);return[Ap(e,c,u,p,d,s),o,i]})}function ZV(e,t,n,r,s=.001){return w.arraysEqual(r.slice().sort(),vs(0,e.rank-1))?XV(e,t,n,r,s):KV(e,t,n,r,s)}var vA=class extends ot{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=$t(e.betaInitializer||"zeros"),this.gammaInitializer=$t(e.gammaInitializer||"ones"),this.movingMeanInitializer=$t(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=$t(e.movingVarianceInitializer||"ones"),this.betaConstraint=cn(e.betaConstraint),this.gammaConstraint=cn(e.gammaConstraint),this.betaRegularizer=Ft(e.betaRegularizer),this.gammaRegularizer=Ft(e.gammaRegularizer)}build(e){e=mt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new q(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Qt({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return X(()=>{let n=t.training==null?!1:t.training,r=Ue(e),s=r.shape,a=s.length,o=vs(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=xl(1,a);l[i]=s[i];let c=o.slice();c.sort();let u=!w.arraysEqual(c,vs(0,a).slice(0,a-1)),d=()=>{if(u){let y=H(this.movingMean.read(),l),x=H(this.movingVariance.read(),l),A=this.center?H(this.beta.read(),l):null,b=this.scale?H(this.gamma.read(),l):null;return Ap(r,y,x,A,b,this.epsilon)}else return Ap(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[p,h,f]=ZV(r,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(y,x,A)=>{X(()=>{let b=1-A,v=y.read(),C=L(pe(v,x),b);y.write(pe(v,C))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bt(this.betaInitializer),gammaInitializer:Bt(this.gammaInitializer),movingMeanInitializer:Bt(this.movingMeanInitializer),movingVarianceInitializer:Bt(this.movingVarianceInitializer),betaRegularizer:vt(this.betaRegularizer),gammaRegularizer:vt(this.gammaRegularizer),betaConstraint:un(this.betaConstraint),gammaConstraint:un(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};vA.className="BatchNormalization";ce.registerClass(vA);var wA=class extends ot{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=$t(e.betaInitializer||"zeros"),this.gammaInitializer=$t(e.gammaInitializer||"ones"),this.betaRegularizer=Ft(e.betaRegularizer),this.gammaRegularizer=Ft(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=mt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Uo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Ue(e),r=n.shape,s=r.length;return X(()=>{let a=!0,{mean:o,variance:i}=Pf(n,this.axis,a),l=xl(1,s);for(let f of this.axis)l[f]=r[f];let c=f=>f!=null&&f.shape.length!==s?H(f,l):f,u=c(this.gamma.read()),d=c(this.beta.read()),p=[],h=[];for(let f=0;f<s;++f)this.axis.indexOf(f)!==-1?(p.push(r[f]),h.push(1)):(p.push(1),h.push(r[f]));return o=Qr(o,p),i=Qr(i,p),u=Qr(u,h),d=Qr(d,h),Ap(n,o,i,d,u,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bt(this.betaInitializer),gammaInitializer:Bt(this.gammaInitializer),betaRegularizer:vt(this.betaRegularizer),gammaRegularizer:vt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};wA.className="LayerNormalization";ce.registerClass(wA);function YV(e,t,n){return X(()=>{if(e.rank!==4)throw new q(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new q("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=xs()),n!=="channelsLast"&&n!=="channelsFirst")throw new q(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],es(e,r)})}var kA=class extends ot{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?xs():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new q(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new q(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new q(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){e=mt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return X(()=>YV(Ue(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};kA.className="ZeroPadding2D";ce.registerClass(kA);function Em(e,t,n,r,s,a){return X(()=>{jt(s),Kw(a),Ur(r),n==null&&(n=[1,1]),r==null&&(r="valid"),s==null&&(s=xs()),a==null&&(a="max"),e=U1(e,s);let o,i=r==="same"?"same":"valid";return a==="max"?o=Df(e,t,n,i):o=If(e,t,n,i),s==="channelsFirst"&&(o=st(o,[0,3,1,2])),o})}function cI(e,t,n,r,s,a){return X(()=>{jt(s),Kw(a),Ur(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),s==null&&(s=xs()),a==null&&(a="max"),e=eI(e,s);let o,i=r==="same"?"same":"valid";return a==="max"?o=Ny(e,t,n,i):o=fy(e,t,n,i),s==="channelsFirst"&&(o=st(o,[0,4,1,2,3])),o})}var dI=class extends ot{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new q(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(vn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new q(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);vn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Ur(this.padding),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(e){e=mt(e);let t=Cs(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return X(()=>{this.invokeCallHook(e,t),e=op(Ue(e),2);let n=this.poolingFunction(Ue(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ye(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},IA=class extends dI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jt(s),Ur(r),Em(e,t,n,r,s,"max")}};IA.className="MaxPooling1D";ce.registerClass(IA);var SA=class extends dI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jt(s),Ur(r),Em(e,t,n,r,s,"avg")}};SA.className="AveragePooling1D";ce.registerClass(SA);var pI=class extends ot{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new q(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];vn(this.poolSize,"poolSize"),vn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),Ur(this.padding),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Cs(t,this.poolSize[0],this.padding,this.strides[0]),n=Cs(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return X(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},CA=class extends pI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jt(s),Ur(r),Em(e,t,n,r,s,"max")}};CA.className="MaxPooling2D";ce.registerClass(CA);var TA=class extends pI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jt(s),Ur(r),Em(e,t,n,r,s,"avg")}};TA.className="AveragePooling2D";ce.registerClass(TA);var hI=class extends ot{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new q(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];vn(this.poolSize,"poolSize"),vn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),Ur(this.padding),this.inputSpec=[new Qt({ndim:5})]}computeOutputShape(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Cs(t,this.poolSize[0],this.padding,this.strides[0]),n=Cs(n,this.poolSize[1],this.padding,this.strides[1]),r=Cs(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return X(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ue(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},NA=class extends hI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jt(s),Ur(r),cI(e,t,n,r,s,"max")}};NA.className="MaxPooling3D";ce.registerClass(NA);var EA=class extends hI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jt(s),Ur(r),cI(e,t,n,r,s,"avg")}};EA.className="AveragePooling3D";ce.registerClass(EA);var fI=class extends ot{constructor(e){super(e);this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Be}},RA=class extends fI{constructor(e){super(e||{})}call(e,t){return X(()=>{let n=Ue(e);return Gt(n,1)})}};RA.className="GlobalAveragePooling1D";ce.registerClass(RA);var _A=class extends fI{constructor(e){super(e||{})}call(e,t){return X(()=>{let n=Ue(e);return bn(n,1)})}};_A.className="GlobalMaxPooling1D";ce.registerClass(_A);var mI=class extends ot{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,jt(this.dataFormat),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Be}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},DA=class extends mI{call(e,t){return X(()=>{let n=Ue(e);return this.dataFormat==="channelsLast"?Gt(n,[1,2]):Gt(n,[2,3])})}};DA.className="GlobalAveragePooling2D";ce.registerClass(DA);var PA=class extends mI{call(e,t){return X(()=>{let n=Ue(e);return this.dataFormat==="channelsLast"?bn(n,[1,2]):bn(n,[2,3])})}};PA.className="GlobalMaxPooling2D";ce.registerClass(PA);var gI=class extends ot{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,s=Is(r,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},$A=class extends gI{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=mt(e),e.length<3)throw new q(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=mt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return X(()=>(e=Ue(e),iI((a,o)=>[Ue(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};$A.className="TimeDistributed";ce.registerClass($A);function JV(e){vl(aW,"BidirectionalMergeMode",e)}var QV="concat",FA=class extends gI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Is(n),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Is(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?QV:e.mergeMode,JV(this.mergeMode),e.weights)throw new Be("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,r,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,r=[n]):this.mergeMode==null?r=[n,n.slice()]:r=[n],this.returnState?this.mergeMode==null?r.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):ur(r)}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let s=oI(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&r==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new q("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(u=>new Qt({shape:u.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),o.push(...c)}if(r!=null)throw new Be("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof ks;for(let l of a)if(l instanceof ks!==i)throw new q("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),c=this.inputSpec.concat(o),u=this.inputSpec;this.inputSpec=c;let d=super.apply(l,t);return this.inputSpec=u,d}else return super.apply(e,t)}call(e,t){return X(()=>{let n=t.initialState,r,s;if(n==null)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Vr(s,1));let o;return this.mergeMode==="concat"?o=o1([r,s]):this.mergeMode==="sum"?o=ue(r,s):this.mergeMode==="ave"?o=L(.5,ue(r,s)):this.mergeMode==="mul"?o=L(r,s):this.mergeMode==null&&(o=[r,s]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){wl(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),wl(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Is(t.layer);if(delete t.layer,t.numConstants!=null)throw new Be("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};FA.className="Bidirectional";ce.registerClass(FA);function eU(e){return new rc(e)}function tU(e){return new B1(e)}function nU(e){return new M1(e)}function rU(e){return new z1(e)}function sU(e){return new L1(e)}function aU(e){return new V1(e)}function oU(e){return new W1(e)}function iU(e){return new X1(e)}function lU(e){return new wm(e)}function uU(e){return new H1(e)}function cU(e){return new km(e)}function dU(e){return new j1(e)}function pU(e){return new q1(e)}function hU(e){return new K1(e)}function fU(e){return new Z1(e)}function mU(e){return new Y1(e)}function gU(e){return new aA(e)}function yU(e){return new rA(e)}function AU(e){return new Nm(e)}function xU(e){return new nA(e)}function bU(e){return new sA(e)}function vU(e){return new oA(e)}function wU(e){return new iA(e)}function kU(e){return new lA(e)}function IU(e){return new cA(e)}function SU(e){return new dA(e)}function CU(e){return new hA(e)}function TU(e){return new gA(e)}function NU(e){return new fA(e)}function EU(e){return new mA(e)}function RU(e){return new pA(e)}function _U(e){return new yA(e)}function DU(e){return new vA(e)}function PU(e){return new wA(e)}function $U(e){return new kA(e)}function OA(e){return new SA(e)}function FU(e){return OA(e)}function OU(e){return OA(e)}function MA(e){return new TA(e)}function MU(e){return MA(e)}function zU(e){return MA(e)}function zA(e){return new EA(e)}function LU(e){return zA(e)}function BU(e){return zA(e)}function WU(e){return new RA(e)}function VU(e){return new DA(e)}function yI(e){return new _A(e)}function AI(e){return new PA(e)}function xI(e){return new IA(e)}function bI(e){return new CA(e)}function UU(e){return new NA(e)}function GU(e){return new Q1(e)}function HU(e){return new Sm(e)}function jU(e){return new eA(e)}function qU(e){return new gp(e)}function XU(e){return new J1(e)}function KU(e){return new Im(e)}function ZU(e){return new tA(e)}function YU(e){return new Tm(e)}function JU(e){return new oa(e)}function QU(e){return new Cm(e)}function eG(e){return new FA(e)}function tG(e){return new $A(e)}var nG=yI,rG=AI,sG=xI,aG=bI;function oG(e){return new AA(e)}function iG(e){return new xA(e)}function lG(e){return new bA(e)}function uG(e){return new uA(e)}var vI={};Me(vI,{MAPE:()=>bG,MSE:()=>kG,binaryAccuracy:()=>cG,binaryCrossentropy:()=>dG,categoricalAccuracy:()=>hG,categoricalCrossentropy:()=>fG,cosineProximity:()=>yG,mape:()=>vG,meanAbsoluteError:()=>AG,meanAbsolutePercentageError:()=>xG,meanSquaredError:()=>wG,mse:()=>IG,precision:()=>mG,recall:()=>gG,sparseCategoricalAccuracy:()=>pG});function cG(e,t){return w1(e,t)}function dG(e,t){return xk(e,t)}function pG(e,t){return bk(e,t)}function hG(e,t){return k1(e,t)}function fG(e,t){return I1(e,t)}function mG(e,t){return Ak(e,t)}function gG(e,t){return eV(e,t)}function yG(e,t){return b1(e,t)}function AG(e,t){return fm(e,t)}function xG(e,t){return ac(e,t)}function bG(e,t){return ac(e,t)}function vG(e,t){return ac(e,t)}function wG(e,t){return Il(e,t)}function kG(e,t){return Il(e,t)}function IG(e,t){return Il(e,t)}var wI={};Me(wI,{modelFromJSON:()=>$V});var kI={};Me(kI,{l1:()=>CG,l1l2:()=>SG,l2:()=>TG});function SG(e){return new hp(e)}function CG(e){return VV(e)}function TG(e){return UV(e)}var II=class extends sc{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof aa))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Rm(e,t){return e<t}function SI(e,t){return e>t}var CI=class extends II{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Be("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Rm:this.mode==="max"?this.monitorFunc=SI:this.monitor.indexOf("acc")!==-1?this.monitorFunc=SI:this.monitorFunc=Rm,this.monitorFunc===Rm&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Rm?1/0:-1/0}async onEpochEnd(e,t){await jo(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function NG(e){return new CI(e)}var EG={earlyStopping:NG},RG=Y();RG.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Ts=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(Ts||{}),TI;(e=>{let t;(n=>{n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(TI||(TI={}));var LA={};function _G(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};LA[e]=n}function NI(e){return LA[e]}function DG(e){delete LA[e]}function k(e,t,n,r,s){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return Hn(t.inputNames[a.inputIndexStart],n,r,s);if(a.type==="tensors")return t.inputNames.slice(i,l).map(p=>Hn(p,n,r,s));let c=Hn(t.inputNames.slice(i)[0],n,r,s),u=c.dataSync();return a.type==="number"?u[0]:w.toNestedArray(c.shape,u)}let o=t.attrParams[e];return o&&o.value}function Hn(e,t,n,r){let[s,a]=kr(e);if(r!=null){let i=r.getHashTableHandleByName(s);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[_m(s,i)]);return o!==void 0?t[_m(s,o)][a]:void 0}function PG(e,t,n){return t[_m(e,n.currentContextId)]}function Vs(e,t){let[n,r,s]=kr(e);return[_m(n,t&&t.currentContextId),r,s]}function _m(e,t){return t?`${e}-${t}`:e}function kr(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],r=t.length===3?t[1]:void 0,s=Number(t[t.length-1]);return[n,s,r]}function Dm(e,t,n){let r=k("pad",e,t,n);if(r==="explicit"){r=k("explicitPaddings",e,t,n);let s=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)s[a][0]=r[a*2],s[a][1]=r[a*2+1];return s}return r}function ia(e){return e.kept?e:Vn(e)}var EI={};Me(EI,{json:()=>$G});var $G=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],RI={};Me(RI,{json:()=>FG});var FG=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_I={};Me(_I,{json:()=>OG});var OG=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],DI={};Me(DI,{json:()=>MG});var MG=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],PI={};Me(PI,{json:()=>zG});var zG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],$I={};Me($I,{json:()=>LG});var LG=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FI={};Me(FI,{json:()=>BG});var BG=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],OI={};Me(OI,{json:()=>WG});var WG=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],MI={};Me(MI,{json:()=>VG});var VG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],zI={};Me(zI,{json:()=>UG});var UG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],LI={};Me(LI,{json:()=>GG});var GG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],BI={};Me(BI,{json:()=>HG});var HG=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],WI={};Me(WI,{json:()=>jG});var jG=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],VI={};Me(VI,{json:()=>qG});var qG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],UI={};Me(UI,{json:()=>XG});var XG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],GI={};Me(GI,{json:()=>KG});var KG=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],HI={};Me(HI,{json:()=>ZG});var ZG=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],jI={};Me(jI,{json:()=>YG});var YG=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],qI={};Me(qI,{json:()=>JG});var JG=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],XI=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[EI,RI,_I,DI,PI,$I,FI,OI,MI,zI,LI,BI,WI,VI,UI,GI,HI,jI,qI],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}transformGraph(e,t={}){let n=e.node,r=[],s=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(f[m.name]):m.op==="Const"?s.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],c={},u={};t!=null&&(c=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));let d=Object.keys(o);d.forEach(f=>{let m=o[f];m.inputNames.forEach((g,y)=>{let[x,,A]=Vs(g),b=o[x];if(b.outputs!=null){let v=b.outputs.indexOf(A);if(v!==-1){let C=`${x}:${v}`;m.inputNames[y]=C}}m.inputs.push(b),b.children.push(m)})}),Object.keys(u).length===0?d.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(u).forEach(f=>{let[m]=Vs(f),g=o[m];g!=null&&(g.signatureKey=u[f],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(f=>{let[m]=Vs(f),g=o[m];g&&(g.signatureKey=c[f],i.push(g))}):i=r;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:l,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=NI(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.substr(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((r,s)=>(r[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},r),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((r,s)=>{let a=s.type,o;switch(s.type){case"string":o=BA(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=BA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":o=XA(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=XA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":o=VA(e.attr,s.tfName,s.defaultValue||0),o===void 0&&!!s.tfDeprecatedName&&(o=VA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":o=qA(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=qA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":o=WA(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=WA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":o=ZA(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=ZA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":o=jA(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=jA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":o=KA(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=KA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":o=GA(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=GA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":o=HA(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=HA(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":o=ZI(e.attr,s.tfName,s.defaultValue),o===void 0&&!!s.tfDeprecatedName&&(o=ZI(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return r[s.name]={value:o,type:a},r},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],s={};t!=null&&(s=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&r.push(u[d.name]),u),{}));let a=[],o=[];e.signature.inputArg.forEach(u=>{let[d]=Vs(u.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:UA(u.type),type:"dtype"}},children:[]};p.signatureKey=u.name,a.push(p),s[d]=p}),Object.keys(s).forEach(u=>{let d=s[u];d.inputNames.forEach((p,h)=>{let[f,,m]=Vs(p),g=s[f];if(g.outputs!=null){let y=g.outputs.indexOf(m);if(y!==-1){let x=`${f}:${y}`;d.inputNames[h]=x}}d.inputs.push(g),g.children.push(d)})});let l=e.ret;e.signature.outputArg.forEach(u=>{let[d,p]=Vs(l[u.name]),h=s[d];h!=null&&(h.defaultOutput=p,o.push(h))});let c=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:o,weights:r,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function QG(e){let t=Y().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function KI(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):QG(e);return t?n:n.toLowerCase()}function BA(e,t,n,r=!1){let s=e[t];return s!=null?KI(s.s,r):n}function WA(e,t,n){let r=e[t];return r?r.b:n}function VA(e,t,n){let r=e[t]||{},s=r.i!=null?r.i:r.f!=null?r.f:n;return typeof s=="number"?s:parseInt(s,10)}function UA(e){switch(typeof e=="string"&&(e=Ts[e]),e){case Ts.DT_FLOAT:case Ts.DT_HALF:return"float32";case Ts.DT_INT32:case Ts.DT_INT64:case Ts.DT_INT8:case Ts.DT_UINT8:return"int32";case Ts.DT_BOOL:return"bool";case Ts.DT_DOUBLE:return"float32";case Ts.DT_STRING:return"string";default:return null}}function ZI(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function GA(e,t,n){let r=e[t];return r&&r.type?UA(r.type):n}function HA(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(s=>UA(s)):n}function YI(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function jA(e,t,n){let r=e[t];return r&&r.shape?YI(r.shape):n}function qA(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):n}function XA(e,t,n,r=!1){let s=e[t];return s&&s.list&&s.list.s?s.list.s.map(a=>KI(a,r)):n}function KA(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(s=>YI(s)):n}function ZA(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var eH=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,s)=>(r[s]=this.getAttr(s),r),{}))}getInput(e){return Hn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Hn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return VA(this.node.rawAttrs,e,t);if(n.s!=null)return BA(this.node.rawAttrs,e,t);if(n.b!=null)return WA(this.node.rawAttrs,e,t);if(n.shape!=null)return jA(this.node.rawAttrs,e,t);if(n.type!=null)return GA(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return qA(this.node.rawAttrs,e,t);if(n.list.s!=null)return XA(this.node.rawAttrs,e,t);if(n.list.shape!=null)return KA(this.node.rawAttrs,e,t);if(n.list.b!=null)return ZA(this.node.rawAttrs,e,t);if(n.list.type!=null)return HA(this.node.rawAttrs,e,t)}return t}},tH=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ue(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[vf(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[Ku(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[L(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[de(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[Bv(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[Hd(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[pe(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[Yd(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[ea(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[Bo(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[By(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},nH=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[an(k("x",e,t,n))];case"Acos":return[gv(k("x",e,t,n))];case"Acosh":return[yv(k("x",e,t,n))];case"Asin":return[xv(k("x",e,t,n))];case"Asinh":return[bv(k("x",e,t,n))];case"Atan":return[vv(k("x",e,t,n))];case"Atan2":return[wv(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[kv(k("x",e,t,n))];case"Ceil":return[_v(k("x",e,t,n))];case"Complex":return[Po(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[Cf(k("x",e,t,n))];case"Cosh":return[by(k("x",e,t,n))];case"Elu":return[Kd(k("x",e,t,n))];case"Erf":return[Vv(k("x",e,t,n))];case"Exp":return[Lr(k("x",e,t,n))];case"Expm1":return[Uv(k("x",e,t,n))];case"Floor":return[Zd(k("x",e,t,n))];case"Log":return[Br(k("x",e,t,n))];case"Log1p":return[Ef(k("x",e,t,n))];case"Imag":return[Tf(k("x",e,t,n))];case"Neg":return[Lt(k("x",e,t,n))];case"Reciprocal":return[nw(k("x",e,t,n))];case"Real":return[Jd(k("x",e,t,n))];case"Relu":return[Os(k("x",e,t,n))];case"Round":return[Py(k("x",e,t,n))];case"Selu":return[Fy(k("x",e,t,n))];case"Sigmoid":return[Pn(k("x",e,t,n))];case"Sin":return[Oy(k("x",e,t,n))];case"Sign":return[aw(k("x",e,t,n))];case"Sinh":return[My(k("x",e,t,n))];case"Softplus":return[Xu(k("x",e,t,n))];case"Sqrt":return[$n(k("x",e,t,n))];case"Square":return[bt(k("x",e,t,n))];case"Tanh":return[Uu(k("x",e,t,n))];case"Tan":return[iw(k("x",e,t,n))];case"ClipByValue":return[br(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[Dy(k("x",e,t,n))];case"Rsqrt":return[$y(Hn(e.inputNames[0],t,n))];case"Prod":return[Ey(k("x",e,t,n),k("axes",e,t,n))];case"LeakyRelu":return[Nf(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[Ff(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[Gv(Hn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ss(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let s=e[r],a=t[r];w.assert(s<0||a<0||s===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function JI(e){return!(typeof e=="number"||e.some(t=>t<0))}function xp(e,t,n){let r=YA(e,n),s=!JI(r);if(s&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach(a=>{r=YA(a.shape,r)}),!JI(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function YA(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}var rH=class{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Te(0),xn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ss(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,xn(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return ht([],[0].concat(this.elementShape));let n=this.readMany(e);return ss(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),on(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return ht([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return ss(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),St(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ir(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];X(()=>{t=H(t,[1,n,s]);for(let i=0;i<e.length;++i){let l=i===0?0:r[i-1],c=[0,l,0],u=[1,e[i],s];a[i]=H(Fe(t,c,u),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},bp=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);ss(t,s.shape,"TensorList shape mismatch: "),xn(s)}),this.idTensor=Te(0),this.maxNumElements=r,xn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new bp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ss(e,this.elementShape,"TensorList shape mismatch: ");let r=xp(this.elementShape,this.tensors,e);return X(()=>{let s=this.tensors.map(a=>H(a,r));return on(s,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=xp(this.elementShape,this.tensors,e),r=this.tensors.pop();return ss(r.shape,e,"TensorList shape mismatch: "),H(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ss(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");xn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);ss(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=xp(this.elementShape,this.tensors,t);return H(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ss(this.elementShape,t.shape,"TensorList shape mismatch: "),xn(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ss(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=xp(this.elementShape,this.tensors,n);return e.length===0?ht([],[0].concat(r)):X(()=>{let s=e.map(a=>H(this.tensors[a],r));return on(s,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ss(this.elementShape,t,"TensorList shape mismatch: ");let n=xp(this.elementShape,this.tensors,t);return this.size()===0?ht([],[0].concat(n)):X(()=>{let r=this.tensors.map(s=>H(s,n));return St(r,0)})}};function sH(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let s=e.shape.slice(1);ss(s,t,"TensorList shape mismatch: ");let a=ir(e);return new bp(a,t,r)}function aH(e,t,n){return new bp([],e,t,n)}function oH(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let s=Math.max(...t);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);let a=new bp([],n,e.dtype,r),o=ir(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function iH(e,t,n){let r=0,s=t.map(u=>(r+=u,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=YA(a,n),i=r===0?0:e.size/r,l=X(()=>{let u=[];e=H(e,[1,r,i]);for(let d=0;d<t.length;++d){let p=d===0?0:s[d-1],h=[0,p,0],f=[1,t[d],i];u[d]=H(Fe(e,h,f),o)}return e.dispose(),u}),c=new bp([],n,e.dtype,t.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}var lH=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=k("thenBranch",e,t,n),s=k("elseBranch",e,t,n),a=k("cond",e,t,n),o=k("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=k("body",e,t,n),s=k("cond",e,t,n),a=k("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(u=>u.id),l=await o[0].data();o.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let c=a;for(;l[0];){let u=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);let d=c.map(h=>h.id);u.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});let p=await n.functionMap[s].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);l=await p[0].data(),p.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return c}case"LoopCond":{let r=k("pred",e,t,n);return[ia(r)]}case"Switch":{let r=k("pred",e,t,n),s=k("data",e,t,n);return s.kept||(s=ia(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{let r=e.inputNames.find(s=>Hn(s,t,n)!==void 0);if(r){let s=Hn(r,t,n);return[ia(s)]}return}case"Enter":{let r=k("frameName",e,t,n),s=k("tensor",e,t,n);return n.enterFrame(r),[ia(s)]}case"Exit":{let r=k("tensor",e,t,n);return n.exitFrame(),[ia(r)]}case"NextIteration":{let r=k("tensor",e,t,n);return n.nextIteration(),[ia(r)]}case"TensorArrayV3":{let r=k("size",e,t,n),s=k("dtype",e,t,n),a=k("elementShape",e,t,n),o=k("dynamicSize",e,t,n),i=k("clearAfterRead",e,t,n),l=k("identicalElementShapes",e,t,n),c=k("name",e,t,n),u=new rH(c,s,r,a,l,o,i);return n.addTensorArray(u),[u.idTensor,Te(1)]}case"TensorArrayWriteV3":{let r=k("tensorArrayId",e,t,n),s=k("index",e,t,n),a=k("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{let r=k("tensorArrayId",e,t,n),s=k("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{let r=k("tensorArrayId",e,t,n),s=k("indices",e,t,n),a=k("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{let r=k("tensorArrayId",e,t,n),s=k("indices",e,t,n),a=k("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{let r=k("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=k("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{let r=k("tensorArrayId",e,t,n),s=k("tensor",e,t,n),a=k("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{let r=k("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[Te(s.size(),"int32")]}case"TensorArrayCloseV3":{let r=k("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{let r=k("tensorListId",e,t,n),s=k("index",e,t,n),a=k("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{let r=k("tensorListId",e,t,n),s=k("index",e,t,n),a=k("elementShape",e,t,n),o=k("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let r=k("indices",e,t,n),s=k("tensor",e,t,n),a=k("elementShape",e,t,n),o=k("numElements",e,t,n),i=oH(s,r,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=k("elementShape",e,t,n),s=k("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=k(a,e,t,n),i=aH(r,s,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=k("tensorListId",e,t,n),s=k("indices",e,t,n),a=k("elementShape",e,t,n),o=k("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{let r=k("tensorListId",e,t,n),s=k("elementShape",e,t,n),a=k("elementDType",e,t,n),o=k("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{let r=k("tensor",e,t,n),s=k("elementShape",e,t,n),a=k("elementDType",e,t,n),o=sH(r,s,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let r=k("tensorListId",e,t,n),s=n.getTensorList(r.id),a=k("dtype",e,t,n),o=k("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{let r=k("tensorListId",e,t,n),s=k("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{let r=k("tensorListId",e,t,n),s=k("elementShape",e,t,n),a=k("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{let r=k("tensor",e,t,n),s=k("elementShape",e,t,n),a=k("lengths",e,t,n),o=iH(r,a,s);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function QI(e,t,n){let[r,s]=k("fusedOps",e,t,n),a=r==="biasadd",o=!a,i=s==="prelu",l=r==="fusedbatchnorm",c=k("numArgs",e,t,n);if(a){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=k("strides",e,t,n),d=Dm(e,t,n),p=k("dataFormat",e,t,n).toUpperCase(),h=k("dilations",e,t,n),[f,m]=k("args",e,t,n);o&&(m=f,f=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:u,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:g}}var uH=(e,t,n)=>{switch(e.op){case"Conv1D":{let r=k("stride",e,t,n),s=k("pad",e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[gy(k("x",e,t,n),k("filter",e,t,n),r,s,a,o)]}case"Conv2D":{let r=k("strides",e,t,n),s=Dm(e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[zo(k("x",e,t,n),k("filter",e,t,n),[r[1],r[2]],s,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=QI(e,t,n);return[Wo.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=QI(e,t,n);return[Wo.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=k("outputShape",e,t,n),s=k("strides",e,t,n),a=Dm(e,t,n);return[Ay(k("x",e,t,n),k("filter",e,t,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=k("strides",e,t,n),s=Dm(e,t,n),a=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[Xd(k("input",e,t,n),k("filter",e,t,n),[r[1],r[2]],s,o,[a[1],a[2]])]}case"Conv3D":{let r=k("strides",e,t,n),s=k("pad",e,t,n),a=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[xy(k("x",e,t,n),k("filter",e,t,n),[r[1],r[2],r[3]],s,a,[o[1],o[2],o[3]])]}case"AvgPool":{let r=k("strides",e,t,n),s=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[If(k("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{let r=k("strides",e,t,n),s=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[Df(k("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{let r=k("strides",e,t,n),s=k("pad",e,t,n),a=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:i,indexes:l}=Jv(k("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s,o);return[i,l]}case"AvgPool3D":{let r=k("strides",e,t,n),s=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[fy(k("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{let r=k("strides",e,t,n),s=k("pad",e,t,n),a=k("kernelSize",e,t,n);return[Ny(k("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{let r=k("strides",e,t,n),s=k("pad",e,t,n),a=k("dilations",e,t,n),o=r[1],i=r[2],l=a[1],c=a[2];return[Lv(k("x",e,t,n),k("filter",e,t,n),[o,i],s,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},cH=(e,t,n)=>{switch(e.op){case"Fill":{let r=k("shape",e,t,n),s=k("dtype",e,t,n),a=k("value",e,t,n);return[ju(r,a,s)]}case"LinSpace":{let r=k("start",e,t,n),s=k("stop",e,t,n),a=k("num",e,t,n);return[Hv(r,s,a)]}case"Multinomial":{let r=k("logits",e,t,n),s=k("numSamples",e,t,n),a=k("seed",e,t,n);return[ew(r,s,a)]}case"OneHot":{let r=k("indices",e,t,n),s=k("depth",e,t,n),a=k("onValue",e,t,n),o=k("offValue",e,t,n);return[Gd(r,s,a,o)]}case"Ones":return[wr(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[Wr(k("x",e,t,n))];case"RandomUniform":return[Yu(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"Range":{let r=k("start",e,t,n),s=k("stop",e,t,n),a=k("step",e,t,n);return[Ju(r,s,a,k("dtype",e,t,n))]}case"TruncatedNormal":{let r=k("shape",e,t,n),s=k("mean",e,t,n),a=k("stdDev",e,t,n),o=k("seed",e,t,n);return[Lf(r,s,a,k("dtype",e,t,n),o)]}case"Zeros":return[Ht(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[at(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function JA(e,t,n){let r=k("boxes",e,t,n),s=k("scores",e,t,n),a=k("maxOutputSize",e,t,n),o=k("iouThreshold",e,t,n),i=k("scoreThreshold",e,t,n),l=k("softNmsSigma",e,t,n);return{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var dH=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=JA(e,t,n),c=await Ie.nonMaxSuppressionWithScoreAsync(r,s,a,o,i,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=JA(e,t,n),l=k("padToMaxOutputSize",e,t,n),c=await Ie.nonMaxSuppressionPaddedAsync(r,s,a,o,i,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=JA(e,t,n);return[await Ie.nonMaxSuppressionAsync(r,s,a,o,i)]}case"Where":{let r=ge(k("condition",e,t,n),"bool"),s=[await Vy(r)];return r.dispose(),s}case"ListDiff":return sw(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},pH=(e,t,n)=>{switch(e.op){case"TopKV2":{let r=k("x",e,t,n),s=k("k",e,t,n),a=k("sorted",e,t,n),o=lw(r,s,a);return[o.values,o.indices]}case"Unique":{let r=k("x",e,t,n),s=Wy(r);return[s.values,s.indices]}case"UniqueV2":{let r=k("x",e,t,n),s=k("axis",e,t,n),a=Wy(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},hH=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=k("default",e,t,n);return[Hn(e.name,t,n)||r];case"Placeholder":return[Hn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=k("x",e,t,n);return[ia(c)]}case"IdentityN":return k("x",e,t,n).map(c=>ia(c));case"Snapshot":let s=k("x",e,t,n);return[ia(s)];case"Shape":return[Tt(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(c=>Tt(c.shape));case"Size":return[Te(k("x",e,t,n).size,"int32")];case"Rank":return[Te(k("x",e,t,n).rank,"int32")];case"NoOp":return[Te(1)];case"Print":let a=k("x",e,t,n),o=k("data",e,t,n),i=k("message",e,t,n),l=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},fH=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Te(0),this.tensorMap=new Map,xn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Te(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),X(()=>{let r=ir(t),s=n.length,a=r.length;w.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let o=0;o<s;o++){let i=n[o],l=r[o];xn(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return X(()=>{let r=[];for(let s=0;s<n.length;s++){let a=n[s],o=this.findWithDefault(a,t);r.push(o)}return on(r)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},mH=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let s=k("keyDType",e,t,n),a=k("valueDType",e,t,n),o=new fH(s,a);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let s=k("tableHandle",e,t,n,r),a=k("keys",e,t,n),o=k("values",e,t,n);return[await r.getHashTableById(s.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let s=k("tableHandle",e,t,n,r),a=k("keys",e,t,n),o=k("defaultValue",e,t,n);return[await r.getHashTableById(s.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let s=k("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},gH=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=k("images",e,t,n),s=k("size",e,t,n),a=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[Ie.resizeBilinear(r,[s[0],s[1]],a,o)]}case"ResizeNearestNeighbor":{let r=k("images",e,t,n),s=k("size",e,t,n),a=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[Ie.resizeNearestNeighbor(r,[s[0],s[1]],a,o)]}case"CropAndResize":{let r=k("image",e,t,n),s=k("boxes",e,t,n),a=k("boxInd",e,t,n),o=k("cropSize",e,t,n),i=k("method",e,t,n),l=k("extrapolationValue",e,t,n);return[Ie.cropAndResize(r,s,a,o,i,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},yH=(e,t,n)=>{switch(e.op){case"Equal":return[zr(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[Zu(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[vr(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[hl(k("a",e,t,n),k("b",e,t,n))];case"Less":return[ky(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[fl(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[ys(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[_f(k("a",e,t,n))];case"LogicalOr":return[Ty(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[Gn(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},AH=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[qe(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[Wv(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[st(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[r,s]=k("fusedOps",e,t,n),a=r==="biasadd",o=s==="prelu",i=k("numArgs",e,t,n),l=k("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,u]=k("args",e,t,n);return[Wo.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:c,activation:s,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},xH=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Gu(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[Gu(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[jv(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[Qu(k("x",e,t,n))];case"LogSoftmax":return[Iy(k("x",e,t,n))];case"SparseToDense":return[Gy(k("sparseIndices",e,t,n),k("outputShape",e,t,n),k("sparseValues",e,t,n),k("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},bH=(e,t,n)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[bn(k("x",e,t,n),o,i)]}case"Mean":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Gt(k("x",e,t,n),o,i)]}case"Min":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Lo(k("x",e,t,n),o,i)]}case"Sum":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[we(k("x",e,t,n),o,i)]}case"All":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[dy(k("x",e,t,n),o,i)]}case"Any":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[wf(k("x",e,t,n),o,i)]}case"ArgMax":{let o=k("axis",e,t,n);return[Mr(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[Av(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),i=k("keepDims",e,t,n);return[Ey(k("x",e,t,n),o,i)]}case"Cumsum":{let o=k("axis",e,t,n),i=k("exclusive",e,t,n),l=k("reverse",e,t,n);return[vy(k("x",e,t,n),o,i,l)]}case"Bincount":let r=k("x",e,t,n),s=k("weights",e,t,n),a=k("size",e,t,n);return[my(r,s,a)];case"DenseBincount":{let o=k("x",e,t,n),i=k("weights",e,t,n),l=k("size",e,t,n),c=k("binaryOutput",e,t,n);return[Mv(o,i,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},vH=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=k("n",e,t,n),s=k("axis",e,t,n),a=k("tensors",e,t,n);return a=a.slice(0,r),[St(a,s)]}case"Gather":{let r=k("x",e,t,n),s=k("indices",e,t,n);return[qu(r,ge(s,"int32"),0)]}case"GatherV2":{let r=k("axis",e,t,n),s=k("batchDims",e,t,n),a=k("x",e,t,n),o=k("indices",e,t,n);return[qu(a,ge(o,"int32"),r,s)]}case"Reverse":{let r=k("dims",e,t,n),s=[];for(let o=0;o<r.length;o++)r[o]&&s.push(o);let a=k("x",e,t,n);return[Vr(a,s)]}case"ReverseV2":{let r=k("axis",e,t,n),s=k("x",e,t,n);return[Vr(s,r)]}case"Slice":{let r=k("begin",e,t,n),s=k("size",e,t,n);return[Fe(k("x",e,t,n),r,s)]}case"StridedSlice":{let r=k("begin",e,t,n),s=k("end",e,t,n),a=k("strides",e,t,n),o=k("beginMask",e,t,n),i=k("endMask",e,t,n),l=k("ellipsisMask",e,t,n),c=k("newAxisMask",e,t,n),u=k("shrinkAxisMask",e,t,n),d=k("x",e,t,n);return[ow(d,r,s,a,o,i,l,c,u)]}case"Pack":return X(()=>{let r=k("axis",e,t,n),s=k("tensors",e,t,n),a=s[0].shape,o=Ye(s[0]).shape,i=s.map(l=>{let c=w.arraysEqual(l.shape,a);if(!c&&!w.arraysEqual(Ye(l).shape,o))throw new Error("the input tensors shape does not match");return c?l:H(l,a)});return[on(i,r)]});case"Unpack":{let r=k("axis",e,t,n),s=k("tensor",e,t,n);return ir(s,r)}case"Tile":{let r=k("reps",e,t,n);return[Qr(k("x",e,t,n),r)]}case"Split":case"SplitV":{let r=k("axis",e,t,n),s=k("numOrSizeSplits",e,t,n),a=k("x",e,t,n);return Jt(a,s,r)}case"ScatterNd":{let r=k("indices",e,t,n),s=k("values",e,t,n),a=k("shape",e,t,n);return[hw(r,s,a)]}case"GatherNd":{let r=k("x",e,t,n),s=k("indices",e,t,n);return[fw(r,s)]}case"SparseToDense":{let r=k("sparseIndices",e,t,n),s=k("outputShape",e,t,n),a=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[Gy(r,a,s,a.dtype===o.dtype?o:ge(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},wH=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:s,emptyRowIndicator:a,reverseIndexMap:o}=tp.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[r,s,a,o]}case"SparseReshape":{let{outputIndices:r,outputShape:s}=tp.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[tp.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[tp.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},kH=(e,t,n)=>{switch(e.op){case"FFT":return[Mf(k("x",e,t,n))];case"IFFT":return[Qd(k("x",e,t,n))];case"RFFT":return[zf(k("x",e,t,n))];case"IRFFT":return[Ly(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},IH=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:s}=Gf.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{let{indices:r,values:s,shape:a}=Gf.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[r,s,a]}case"StringToHashBucketFast":return[Gf.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},SH=(e,t,n)=>{switch(e.op){case"Cast":return[ge(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let r=k("axis",e,t,n);return[Yt(k("x",e,t,n),r)]}case"Squeeze":{let r=k("axis",e,t,n);return[Ye(k("x",e,t,n),r)]}case"Reshape":return[H(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[Qv(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[es(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let r=k("blockShape",e,t,n),s=k("paddings",e,t,n);return[$f(k("x",e,t,n),r,s)]}case"BatchToSpaceND":{let r=k("blockShape",e,t,n),s=k("crops",e,t,n);return[Sf(k("x",e,t,n),r,s)]}case"DepthToSpace":{let r=k("blockSize",e,t,n),s=k("dataFormat",e,t,n).toUpperCase();return[zv(k("x",e,t,n),r,s)]}case"BroadcastTo":return[qd(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[Rv(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function eS(e,t,n,r){let s=((a,o,i)=>{switch(a.category){case"arithmetic":return X(()=>tH(a,o,i));case"basic_math":return X(()=>nH(a,o,i));case"control":return lH(a,o,i);case"convolution":return X(()=>uH(a,o,i));case"creation":return X(()=>cH(a,o,i));case"dynamic":return dH(a,o,i);case"evaluation":return X(()=>pH(a,o,i));case"image":return X(()=>gH(a,o,i));case"graph":return X(()=>hH(a,o,i));case"logical":return X(()=>yH(a,o,i));case"matrices":return X(()=>AH(a,o,i));case"normalization":return X(()=>xH(a,o,i));case"reduction":return X(()=>bH(a,o,i));case"slice_join":return X(()=>vH(a,o,i));case"sparse":return X(()=>wH(a,o,i));case"spectral":return X(()=>kH(a,o,i));case"string":return X(()=>IH(a,o,i));case"transformation":return X(()=>SH(a,o,i));case"hash_table":return mH(a,o,i,r);case"custom":let l=NI(a.op);if(l&&l.customExecutor)return l.customExecutor(new eH(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var tS=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function nS(e,t,n,r){let s=new Set,a=[],o=null,i=null,l=new Set,c=Object.keys(e).map(p=>kr(p)[0]),u=[];r!=null&&(u=r.map(p=>kr(p.name)[0]));let d=[...t];for(;d.length>0;){let p=d.pop();if((rS(p)||RH(p)||_H(p))&&o==null&&(o=p,i=o.children.map(h=>h.name).filter(h=>s.has(h))),s.add(p.name),n[p.name]==null&&c.indexOf(p.name)===-1&&u.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),d.push(h))})}}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}function CH(e,t,n){let{usedNodes:r,inputs:s}=n,a=[],o=Object.keys(s).map(u=>kr(u)[0]).map(u=>e.nodes[u]),i=e.initNodes;o.forEach(u=>{r.has(u.name)&&a.push(u)}),e.weights.forEach(u=>{r.has(u.name)&&a.push(u)}),i!=null&&i.forEach(u=>{r.has(u.name)&&a.push(u)});let l=new Set,c=[];for(;a.length>0;){let u=a.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(d=>{!l.has(d.name)&&r.has(d.name)&&d.inputs.every(p=>l.has(p.name))&&a.push(d)})}return c}var TH=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],NH=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],EH=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function rS(e){return TH.indexOf(e.op)>=0}function RH(e){return NH.indexOf(e.op)>=0}function _H(e){return EH.indexOf(e.op)>=0}var QA=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new QA(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),r=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=nS(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${r}]`)}return CH(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(u=>this.graph.nodes[kr(u)[0]]),s=t.map(u=>kr(u)[0]),a=s.map(u=>this.graph.nodes[u]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(r,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},c={};return X(()=>{let u=new tS(this.weightMap,l,c,this.functionExecutorMap),d={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=kr(f),y=[];y[g]=e[f],d[m]=y});let p=this.getFrozenTensorIds(d),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!d[m.name]){let g=eS(m,d,u,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);d[m.name]=g,this.checkTensorForDisposal(m.name,m,d,u,p,s,h)}}return this.parent==null&&u.dispose(p),t.map(f=>Hn(f,d,u))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=PG(i.name,n,r);l!=null&&l.forEach(c=>{if(c&&!c.kept&&!s.has(c.id)){let u=o[c.id];if(u===1){if(!this.keepTensorForDebug)c.dispose();else{let[d,p]=Vs(t.name,r);this.intermediateTensors[d]?this.intermediateTensors[d][p]=c:(this.intermediateTensors[d]=[],this.intermediateTensors[d][p]=c)}delete o[c.id]}else u!=null&&o[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){console.warn(c.message)}this.resetIntermediateTensors();let a=new tS(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(c=>Hn(c,this.tensorsMap,a)),i=o.map(c=>c.id),l=Object.keys(e).map(c=>e[c].id);return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let r=e.reduce((s,a,o)=>(s[this.inputs[o].name]=a,s),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let s=Object.keys(e),a=s.map(x=>this.graph.nodes[kr(x)[0]]),o=n.map(x=>kr(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:u,syncInputs:d}=nS(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(x=>{let[A,b]=kr(x),v=[];v[b]=e[x],h[A]=v});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let x=this.processStack(a,p,t,h,g,m,o,f,l);await Promise.all(x)}u==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=i.filter(x=>!rS(x)&&!Hn(x.name,h,t)).map(x=>x.name);if(y.length>0){let x="";throw u!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${x}`)}return h}processStack(e,t,n,r,s,a,o,i,l){let c=[];for(;t.length>0;){let u=t.pop();n.currentContext=u.contexts;let d="";if(u.node.op==="Enter"&&k("isConstant",u.node,r,n)&&([d]=Vs(u.node.name,n)),r[u.node.name]==null){let p=eS(u.node,r,n,this._resourceManager);d||([d]=Vs(u.node.name,n));let h=n.currentContext;w.isPromise(p)?c.push(p.then(f=>(r[d]=f,n.currentContext=h,this.checkTensorForDisposal(d,u.node,r,n,a,o,i),this.processChildNodes(u.node,t,n,r,s,l),f))):(r[d]=p,this.checkTensorForDisposal(d,u.node,r,n,a,o,i),this.processChildNodes(u.node,t,n,r,s,l))}else this.processChildNodes(u.node,t,n,r,s,l)}return c}processChildNodes(e,t,n,r,s,a){e.children.forEach(o=>{let[i]=Vs(o.name,n);s[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Hn(l,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!Hn(l,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=kr(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);w.assert(o,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&w.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let r=this._signature.inputs[n];t[r.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[r]=kr(n);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=kr(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},DH=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},PH="?tfjs-format=file",$H="model.json",sS=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new DH}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=or.browserHTTPRequest(e,this.loadOptions);else{let t=or.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(or.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=or.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new QA(XI.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=XI.Instance.transformGraph(e.modelInitializer);this.initializer=new QA(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=or.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof nt)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function ex(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${$H}${PH}`);let n=new sS(e,t);return await n.load(),n}var FH="0.0.0",aS={};Me(aS,{CSVDataset:()=>xS,Dataset:()=>lc,FileDataSource:()=>CS,TextLineDataset:()=>gS,URLDataSource:()=>TS,array:()=>sj,csv:()=>mj,func:()=>gj,generator:()=>yj,microphone:()=>xj,version_data:()=>bj,webcam:()=>Aj,zip:()=>aj});var OH=fi(Dh()),MH=fi(Dh());function zH(e,t){return Pm(e,t)}function Pm(e,t,n=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let s=t(e);if(s.recurse&&s.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse)if(ic(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let o in e){let i=e[o],l=Pm(i,t,n,r);a[o]=l}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,s.value),s.value}function LH(e,t=iS){return oS(e,t)}function oS(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let s=t(e);if(s.recurse&&s.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse)if(ic(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let o in r){let i=e.map(c=>c[o]),l=oS(i,t,n);a[o]=l}return n.delete(r),a}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return s.value}function iS(e){return e===null?null:ic(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function lS(e,t){let n=new Map;Pm(e,t,n);for(let s of Array.from(n.keys())){let a=n.get(s);if(w.isPromise(a)){let o=await a;n.set(s,o)}}return Pm(e,t,n)}function ic(e){let t=!1;if(Y().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=Y5();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof nt)&&!(e instanceof Promise)&&!t)}function BH(e){return e==null||WH(e)||Array.isArray(e)||typeof e=="object"&&e instanceof nt||w.isTypedArray(e)}function WH(e){return e===null||typeof e!="object"&&typeof e!="function"}function VH(e){return zH(e,UH)}function UH(e){return e instanceof nt?{value:e.clone(),recurse:!1}:ic(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var uS=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},cS=class extends uS{constructor(){super(cS.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},dS=cS;dS.INITIAL_CAPACITY=32;function pS(e){return new jH(e)}function tx(e){return new qH(e)}function GH(e,t){return new fS(e,t)}function HH(e,t=rx.FAIL){return new nj(e,t)}var wn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ej(this,e)}filter(e){return new JH(this,e)}map(e){return new QH(this,e)}mapAsync(e){return new hS(this,e)}serialMapAsync(e){return new hS(this,e).serial()}flatmap(e){return new tj(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new YH(this,e,t)}columnMajorBatch(e,t=!0,n=iS){return this.rowMajorBatch(e,t).map(s=>LH(s,n))}concatenate(e,t){return new fS(pS([this,e]),t)}take(e){return e<0||e==null?this:new ZH(this,e)}skip(e){return e<0||e==null?this:new KH(this,e)}prefetch(e){return new mS(this,e)}shuffle(e,t){return new rj(this,e,t)}serial(){return new XH(this)}},jH=class extends wn{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:VH(e),done:!1}}},qH=class extends wn{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},XH=class extends wn{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},KH=class extends wn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;te(e.value)}return this.upstream.next()}},ZH=class extends wn{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},YH=class extends wn{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},JH=class extends wn{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;te(e.value)}}},QH=class extends wn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=fs.getTensorsInContainer(e.value),n=this.transform(e.value),r=fs.getTensorsInContainer(n);for(let s of t)fs.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}},ej=class extends wn{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},hS=class extends wn{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=fs.getTensorsInContainer(e.value),n=await this.transform(e.value),r=fs.getTensorsInContainer(n);for(let s of t)fs.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}},nx=class extends wn{constructor(){super();this.outputQueue=new dS,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},tj=class extends nx{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=fs.getTensorsInContainer(e.value),n=this.transform(e.value),r=fs.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)fs.isTensorInList(s,r)||s.dispose();return!0}},fS=class extends wn{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},rx=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(rx||{}),nj=class extends wn{constructor(e,t=0){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(a){return a instanceof wn?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let s=await lS(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},mS=class extends wn{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new uS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},rj=class extends mS{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=MH.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},lc=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),Ir(async()=>(await n.iterator()).columnMajorBatch(e,t,oj),r)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Ir(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Ir(async()=>(await t.iterator()).filter(r=>X(()=>e(r))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Ir(async()=>(await t.iterator()).map(n=>X(()=>e(n))),this.size)}mapAsync(e){let t=this;return Ir(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Ir(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Ir(async()=>{let r=tx(async()=>({value:await t.iterator(),done:!1}));return GH(r.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Ir(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,s=OH.alea(t||w.now().toString());return Ir(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await r.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Ir(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};lc.MAX_BUFFER_SIZE=1e4;function Ir(e,t=null){return new class extends lc{constructor(){super(...arguments);this.size=t}async iterator(){return e()}}}function sj(e){return Ir(async()=>pS(e),e.length)}function aj(e){if(!ic(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Ir(async()=>{let n=await lS(e,r=>{if(r instanceof lc)return{value:r.iterator(),recurse:!1};if(ic(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return HH(n,rx.SHORTEST)},t)}function oj(e){if(e===null)return null;let t=e[0];return BH(t)?{value:ij(e),recurse:!1}:{value:null,recurse:!0}}function ij(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof nt?on(e):ht(e)}var gS=class extends lc{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(r=>(r.endsWith("\r")&&(r=r.slice(0,-1)),r))}},$m='"',vp=Symbol("out"),yS=Symbol("field"),Fm=Symbol("quote"),sx=Symbol("quoteafterquote"),AS=Symbol("quoteinquote"),xS=class extends lc{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new gS(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,s)=>(r[s]=r[s]+1||1,r),{}),n=Object.keys(t).filter(r=>t[r]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[s],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let c=Number(i);if(isNaN(c))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=c;else switch(o.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(i);break;default:l=c}}o&&o.isLabel?r[a]=l:n[a]=l}}return Object.keys(r).length===0?n:{xs:n,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],r=0,s=e.length,a=vp;for(let o=0;o<s;o++)switch(a){case vp:switch(e.charAt(o)){case $m:r=o+1,a=Fm;break;case this.delimiter:if(r=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=vp;break;default:a=yS,r=o;break}break;case yS:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o)),a=vp,r=o+1;break;default:}break;case Fm:switch(e.charAt(o)){case $m:a=sx;break;default:}break;case sx:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o-1)),a=vp,r=o+1;break;case $m:a=Fm;break;default:a=AS;break}break;case AS:switch(e.charAt(o)){case $m:a=Fm;break;default:}break;default:}if(a===sx?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},bS=class extends wn{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Y().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new bS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let r=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let r=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(r=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((r,s)=>n.set(r,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),ht(n,t)}},vS=class extends wn{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Tt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,r=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-r)/2,o=s+n,i=r+a;this.cropBox=As([a,s,i,o],[1,4])}else this.cropBox=As([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Y().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new vS(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Or.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return X(()=>{let t=Yt(ge(e,"float32"),0),n;n=Ie.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=n.shape;return H(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},wS=class{},kS=class extends wn{split(e){return new lj(this,e)}},lj=class extends kS{constructor(e,t){super();this.upstream=e,this.impl=new uj(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},uj=class extends nx{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},cj=class extends wn{decodeUTF8(){return new dj(this)}},dj=class extends kS{constructor(e){super();this.upstream=e,this.impl=new pj(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},pj=class extends nx{constructor(e){super();if(this.upstream=e,Y().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Y5();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Y().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},IS=class extends cj{constructor(e,t={}){super();this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(Y().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,r)));else{let s=new FileReader;s.onload=o=>{let i=s.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},s.onabort=o=>n(new Error("Aborted")),s.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,r);s.readAsArrayBuffer(a)}this.offset=r}),done:!1}}};async function hj(e,t={},n){let r,s;typeof e=="string"?r=e:(r=e.url,s=fj(e));let a=await(n||w.fetch)(r,s);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new IS(o,t)}else throw new Error(a.statusText)}var fj=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function SS(e){return typeof e=="string"&&e.substr(0,7)==="file://"}var CS=class extends wS{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(SS(this.input)&&Y().get("IS_NODE")){let e=Ph();this.input=e.readFileSync(this.input.substr(7))}return new IS(this.input,this.options)}},TS=class extends wS{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return SS(this.url)?new CS(this.url,this.fileOptions).iterator():hj(this.url,this.fileOptions)}};function mj(e,t={}){return new xS(new TS(e),t)}function gj(e){let t=tx(e);return Ir(async()=>t)}function yj(e){return Ir(async()=>{let t=await e();return tx(()=>t.next())})}async function Aj(e,t){return vS.create(e,t)}async function xj(e){return bS.create(e)}var bj="0.0.0";function Re(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var vj=ts.whereImpl,NS=class extends au{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new pd(this,Dn())}nextDataId(){return NS.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let s=n.map(a=>w.encodeString(a));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let r=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(r,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(r=>w.decodeString(r))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}makeOutput(e,t,n){let r=this.write(e,t,n);return Dn().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Re([e],"where");let t=this.readSync(e.dataId);return vj(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},ax=NS;ax.nextDataId=0;var Om={};Me(Om,{addImpl:()=>RS,bincountImpl:()=>ix,bincountReduceImpl:()=>_S,ceilImpl:()=>DS,concatImpl:()=>lx,equalImpl:()=>PS,expImpl:()=>FS,expm1Impl:()=>MS,floorImpl:()=>zS,gatherNdImpl:()=>LS,gatherV2Impl:()=>BS,greaterEqualImpl:()=>VS,greaterImpl:()=>WS,lessEqualImpl:()=>GS,lessImpl:()=>US,linSpaceImpl:()=>HS,logImpl:()=>jS,maxImpl:()=>qS,maximumImpl:()=>XS,minimumImpl:()=>KS,multiplyImpl:()=>ux,negImpl:()=>ZS,notEqualImpl:()=>YS,prodImpl:()=>JS,rangeImpl:()=>dx,rsqrtImpl:()=>QS,sigmoidImpl:()=>uq,simpleAbsImpl:()=>ES,sliceImpl:()=>Lm,sparseFillEmptyRowsImpl:()=>t7,sparseReshapeImpl:()=>n7,sparseSegmentReductionImpl:()=>px,sqrtImpl:()=>pq,squaredDifferenceImpl:()=>r7,stridedSliceImpl:()=>s7,stringNGramsImpl:()=>a7,stringSplitImpl:()=>o7,stringToHashBucketFastImpl:()=>i7,subImpl:()=>l7,tileImpl:()=>u7,topKImpl:()=>d7,transposeImpl:()=>cx,uniqueImpl:()=>p7});function ES(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var wj=e=>{let{x:t}=e.inputs,n=e.backend;Re(t,"abs");let r=new Float32Array(w.sizeFromShape(t.shape)),s=n.data.get(t.dataId).values;return r=ES(s),n.makeOutput(r,t.shape,t.dtype)},kj={kernelName:yi,backendName:"cpu",kernelFunc:wj};function en(e){return(t,n,r,s,a)=>{let o=N.assertAndGetBroadcastShape(t,n),i=o.length,l=w.computeStrides(o),c=w.sizeFromShape(o),u=w.getTypedArrayFromDType(a,c),d=t.length,p=n.length,h=w.computeStrides(t),f=w.computeStrides(n),m=N.getBroadcastDims(t,o),g=N.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(r[y%r.length],s[y%s.length]);else for(let y=0;y<u.length;++y){let x=w.indexToLoc(y,i,l),A=x.slice(-d);m.forEach(I=>A[I]=0);let b=w.locToIndex(A,d,h),v=x.slice(-p);g.forEach(I=>v[I]=0);let C=w.locToIndex(v,p,f);u[y]=e(r[b],s[C])}return[u,o]}}function Sr(e){let{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}var Ij={kernelName:gd,backendName:"cpu",kernelFunc:Sr};function Mm(e,t,n="float32"){if(n==="complex64"){let s=Mm(e,t,"float32"),a=Mm(e,t,"float32");return Sr({inputs:{real:s,imag:a},backend:e})}let r=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Us(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var Sj={kernelName:Qa,backendName:"cpu",kernelFunc:Us};function Tl(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}var Cj={kernelName:Sd,backendName:"cpu",kernelFunc:Tl};function Zo(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if(a==="complex64"){if(s.dtype==="complex64")return Us({inputs:{x:s},backend:n});let o=Mm(n,s.shape,s.dtype),i=Zo({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=Sr({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(s.dtype==="complex64"){let o=Tl({inputs:{input:s},backend:n}),i=Zo({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(s.dtype,a)){let o=Us({inputs:{x:s},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(s.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(s.shape,"int32",i)}if(a==="bool"){let o=n.data.get(s.dataId).values,i=w.toTypedArray([0],s.dtype),[l,c]=en((u,d)=>u!==d?1:0)(s.shape,[],o,i,"bool");return n.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}var Tj={kernelName:La,backendName:"cpu",kernelFunc:Zo};function kn(e,t,n,r){return n==null?({inputs:s,backend:a})=>{let{a:o,b:i}=s,l=a;Re([o,i],e);let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=o.dtype==="string"?N.fromUint8ToStringArray(c):c,p=o.dtype==="string"?N.fromUint8ToStringArray(u):u,h=r||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:s,backend:a})=>{let{a:o,b:i}=s,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let c=Zo({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,p=u.complexTensorInfos.imag,h=l.data.get(d.dataId).values,f=l.data.get(p.dataId).values,m=Zo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,A=l.data.get(y.dataId).values,b=l.data.get(x.dataId).values,[v,C,I]=n(o.shape,i.shape,h,f,A,b),E=l.makeTensorInfo(I,"float32",v),R=l.makeTensorInfo(I,"float32",C),F=Sr({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),F}else{let c=l.data.get(o.dataId).values,u=l.data.get(i.dataId).values,d=r||o.dtype,[p,h]=t(o.shape,i.shape,c,u,d);return l.makeTensorInfo(h,d,p)}}}function ox(e){return(t,n,r,s,a,o)=>{let i=N.assertAndGetBroadcastShape(t,n),l=w.sizeFromShape(i),c=i.length,u=w.computeStrides(i),d=w.getTypedArrayFromDType("float32",l),p=w.getTypedArrayFromDType("float32",l),h=N.getBroadcastDims(t,i),f=N.getBroadcastDims(n,i),m=N.mergeRealAndImagArrays(r,s),g=N.mergeRealAndImagArrays(a,o),y=t.length,x=w.computeStrides(t),A=n.length,b=w.computeStrides(n);if(h.length+f.length===0)for(let v=0;v<d.length;v++){let C=v%m.length,I=v%g.length,E=e(m[C*2],m[C*2+1],g[I*2],g[I*2+1]);d[v]=E.real,p[v]=E.imag}else for(let v=0;v<d.length;v++){let C=w.indexToLoc(v,c,u),I=C.slice(-y);h.forEach(P=>I[P]=0);let E=w.locToIndex(I,y,x),R=C.slice(-A);f.forEach(P=>R[P]=0);let F=w.locToIndex(R,A,b),_=e(m[E*2],m[E*2+1],g[F*2],g[F*2+1]);d[v]=_.real,p[v]=_.imag}return[d,p,i]}}var RS=en((e,t)=>e+t),Nj=ox((e,t,n,r)=>({real:e+n,imag:t+r})),wp=kn(Zs,RS,Nj),Ej={kernelName:Zs,backendName:"cpu",kernelFunc:wp};function ix(e,t,n,r,s){let a=w.sizeFromShape(r),o=w.makeZerosTypedArray(s,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=s||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function _S(e,t,n,r=!1){let s=e.shape[0],a=e.shape[1],o=Le([s,n],t.dtype);for(let i=0;i<s;i++)for(let l=0;l<a;l++){let c=e.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(r?o.set(1,i,c):t.size>0?o.set(o.get(i,c)+t.get(i,l),i,c):o.set(o.get(i,c)+1,i,c))}return o}function Yo(e){return(t,n,r)=>{let s=w.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}function gt(e,t,n){return({inputs:r,attrs:s,backend:a})=>{let{x:o}=r;if(Re(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=w.sizeFromShape(o.shape),u=n||o.dtype,d=w.getArrayFromDType(u,c);for(let p=0;p<c;++p)d[p]=t(l[p],s);return i.makeTensorInfo(o.shape,u,d)}}function uc(e,t,n){return({inputs:r,attrs:s,backend:a})=>{let{x:o}=r;if(Re(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,c=n||o.dtype,u=t(l,c,s);return i.makeTensorInfo(o.shape,c,u)}}var DS=Yo(e=>Math.ceil(e)),Rj=uc(Ba,DS),_j={kernelName:Ba,backendName:"cpu",kernelFunc:Rj};function lx(e,t,n,r){let s=w.getArrayFromDType(n,w.sizeFromShape(t));if(r&&n!=="string"){let a=0;e.forEach(o=>{let i=w.sizeFromShape(o.shape);s.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?N.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let c=0;c<o.shape[0];++c){let u=c*t[1]+a;for(let d=0;d<o.shape[1];++d)s[u+d]=i[l++]}a+=o.shape[1]})}return s}var PS=en((e,t)=>e===t?1:0),$S=kn(ki,PS,null,"bool"),Dj={kernelName:ki,backendName:"cpu",kernelFunc:$S},FS=Yo(e=>Math.exp(e)),OS=uc(Xa,FS,"float32"),Pj={kernelName:Xa,backendName:"cpu",kernelFunc:OS},MS=Yo(e=>Math.expm1(e)),$j=uc(Si,MS),Fj={kernelName:Si,backendName:"cpu",kernelFunc:$j},zS=Yo(e=>Math.floor(e)),Oj=uc(Ka,zS),Mj={kernelName:Ka,backendName:"cpu",kernelFunc:Oj};function LS(e,t,n,r,s,a,o,i,l){let c=Le([r,a],n);for(let u=0;u<r;u++){let d=[],p=0;for(let h=0;h<s;h++){let f=e[u*s+h];p+=f*o[h],d.push(f)}if(p<0||p>=l/a)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<a;h++)c.values[u*a+h]=t.get(...t.indexToLoc(p*a+h))}return c}function BS(e,t,n){let r=Le(n,e.dtype);for(let s=0;s<r.size;++s){let o=r.indexToLoc(s).slice(),i=o[0],l=o[2],c=t.locToIndex([i,l]);o[2]=t.values[c];let u=e.locToIndex(o);0<=u&&u<e.values.length&&(r.values[s]=e.values[u])}return r}var WS=en((e,t)=>e>t?1:0),zj=kn(Ei,WS,null,"bool"),Lj={kernelName:Ei,backendName:"cpu",kernelFunc:zj},VS=en((e,t)=>e>=t?1:0),Bj=kn(Ja,VS,null,"bool"),Wj={kernelName:Ja,backendName:"cpu",kernelFunc:Bj},US=en((e,t)=>e<t?1:0),Vj=kn(Ri,US,null,"bool"),Uj={kernelName:Ri,backendName:"cpu",kernelFunc:Vj},GS=en((e,t)=>e<=t?1:0),Gj=kn(_i,GS,null,"bool"),Hj={kernelName:_i,backendName:"cpu",kernelFunc:Gj};function HS(e,t,n){let r=(t-e)/(n-1),s=w.makeZerosTypedArray(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}var jS=Yo(e=>Math.log(e)),jj=uc(to,jS),qj={kernelName:to,backendName:"cpu",kernelFunc:jj};function qS(e,t,n,r){let s=w.getTypedArrayFromDType(r,w.sizeFromShape(n));for(let a=0;a<s.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let c=e[o+l];(Number.isNaN(c)||c>i)&&(i=c)}s[a]=i}return s}var XS=en((e,t)=>Math.max(e,t)),Xj=kn(ro,XS),Kj={kernelName:ro,backendName:"cpu",kernelFunc:Xj},KS=en((e,t)=>Math.min(e,t)),Zj=kn(io,KS),Yj={kernelName:io,backendName:"cpu",kernelFunc:Zj},ux=en((e,t)=>e*t),Jj=ox((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),zm=kn(uo,ux,Jj),Qj={kernelName:uo,backendName:"cpu",kernelFunc:zm};function ZS(e,t,n){let r=w.createScalarValue(-1,n);return ux([],t,r,e,n)}function eq(e){let{inputs:t,backend:n}=e,{x:r}=t;Re(r,"neg");let s=n.data.get(r.dataId).values,[a,o]=ZS(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,a)}var tq={kernelName:Pi,backendName:"cpu",kernelFunc:eq},YS=en((e,t)=>e!==t?1:0),nq=kn($i,YS,null,"bool"),rq={kernelName:$i,backendName:"cpu",kernelFunc:nq};function cx(e,t,n,r,s){let a=t.length,o=w.sizeFromShape(t),i=w.computeStrides(t),l=w.computeStrides(s),c=w.getTypedArrayFromDType(n,w.sizeFromShape(s));for(let u=0;u<o;++u){let d=w.indexToLoc(u,a,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[r[f]];let h=w.locToIndex(p,a,l);c[h]=e[u]}return c}function Gr(e){let{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;Re(s,"transpose");let o=s.shape.length,i=new Array(o);for(let d=0;d<i.length;d++)i[d]=s.shape[a[d]];let l=r.data.get(s.dataId).values,c=cx(l,s.shape,s.dtype,a,i);return{dataId:r.write(c,i,s.dtype),shape:i,dtype:s.dtype}}var sq={kernelName:Co,backendName:"cpu",kernelFunc:Gr};function JS(e,t,n,r){let[s,a]=N.computeOutAndReduceShapes(e,r),o=Wn(t,"int32"),i=w.makeZerosTypedArray(w.sizeFromShape(s),o),l=w.sizeFromShape(a);for(let c=0;c<i.length;++c){let u=c*l,d=1;for(let p=0;p<l;++p)d*=n[u+p];i[c]=d}return{outVals:i,outShape:s,outDtype:o}}function aq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;Re(s,"prod");let i=s.shape.length,l=w.parseAxisParam(a,s.shape),c=N.getAxesPermutation(l,i),u=l,d=s,p=[];c!=null&&(d=Gr({inputs:{x:s},backend:n,attrs:{perm:c}}),p.push(d),u=N.getInnerMostAxes(u.length,i));let h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=JS(d.shape,d.dtype,h,u),y=m;return o&&(y=N.expandShapeToKeepDim(m,l)),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(y,g,f)}var oq={kernelName:Bi,backendName:"cpu",kernelFunc:aq};function dx(e,t,n,r){let s=e===t,a=e<t&&n<0,o=t<e&&n>1;if(s||a||o)return w.makeZerosTypedArray(0,r);let i=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(i,r);t<e&&n===1&&(n=-1),l[0]=e;for(let c=1;c<l.length;c++)l[c]=l[c-1]+n;return l}var QS=Yo(e=>1/Math.sqrt(e)),iq=uc(yo,QS),lq={kernelName:yo,backendName:"cpu",kernelFunc:iq},uq=Yo(e=>1/(1+Math.exp(-e))),e7=gt(xo,e=>1/(1+Math.exp(-e))),cq={kernelName:xo,backendName:"cpu",kernelFunc:e7};function Lm(e,t,n,r,s){let a=zt.isSliceContinous(r,t,n),o=w.sizeFromShape(n),i=w.computeStrides(r);if(a){let d=zt.computeFlatOffset(t,i);return s==="string"?e.slice(d,d+o):e.subarray(d,d+o)}let l=s==="string"?N.fromUint8ToStringArray(e):e,c=Le(r,s,l),u=Le(n,s);for(let d=0;d<u.size;++d){let p=u.indexToLoc(d),h=p.map((f,m)=>f+t[m]);u.set(c.get(...h),...p)}return s==="string"?N.fromStringArrayToUint8(u.values):u.values}function Nl(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r;Re(s,"slice");let[i,l]=zt.parseSliceParams(s,a,o);zt.assertParamsValid(s,i,l);let c=n.data.get(s.dataId).values,u=Lm(c,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}var dq={kernelName:ji,backendName:"cpu",kernelFunc:Nl};function t7(e,t,n,r,s,a,o){let i=t[0],l=a[0],c=new Array(l),u=new Array(i),d=t[1];if(l===0){if(i!==0)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=w.getArrayFromDType(n,0),y=w.getArrayFromDType(s,0);return[g,[0,d],y,c,u]}let p=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let y=e[g*d];if(y<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],p=p&&y>=h,h=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,y=r;for(let x=0;x<i;++x)u[x]=x;return[g,[i,d],y,c,u]}else{let g=f[l-1],y=w.getArrayFromDType(n,g*d),x=w.getArrayFromDType(s,g),A=new Array(l).fill(0);for(let b=0;b<i;++b){let v=e[b*d],C=A[v],I=(v===0?0:f[v-1])+C;A[v]++;for(let E=0;E<d;++E)y[I*d+E]=e[b*d+E];x[I]=r[b],u[b]=I}for(let b=0;b<l;++b)if(A[b]===0){let C=b===0?0:f[b-1];y[C*d+0]=b;for(let I=1;I<d;++I)y[C*d+I]=0;x[C]=o}return[y,[g,d],x,c,u]}}function n7(e,t,n,r,s){let a=w.sizeFromShape(r),o=t[0],i=s.length,l=[],c=1,u=-1;for(let g=0;g<i;++g){let y=s[g];if(y===-1){if(u!==-1)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,g));u=g,l.push(1)}else{if(y<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(g,y));c*=y,l.push(y)}}if(u!==-1){if(c<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/c);if(c*g!==a)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[u]=g}if(w.sizeFromShape(l)!==a)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let p=r.length,h=[];if(p>0){h[p-1]=1;for(let g=p-2;g>=0;--g)h[g]=h[g+1]*r[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=w.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let y=0;for(let x=0;x<p;++x)y+=e[g*p+x]*h[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(y/f[x]),y%=f[x]}return[m,[o,i],l]}function px(e,t,n,r,s,a=!1,o=0){let i=r.length,l=[t[0],e.length/t[0]],c=l[1],d=i>0?s[i-1]+1:0;if(d<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=d;let h=p.reduce((A,b)=>A*b,1),f=w.getArrayFromDType(n,h);if(i===0)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=s[m];for(;;){let A=0;if(g<i){if(A=s[g],x===A){++g;continue}if(x>=A)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=d)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,d));x>y&&f.fill(o,y*c,x*c);for(let b=m;b<g;++b){let v=r[b];if(v<0||v>=l[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b,r[b],l[0]));for(let C=0;C<c;C++)f[x*c+C]+=e[v*c+C]}if(a)for(let b=0;b<c;b++)f[x*c+b]/=g-m;if(m=g,++g,y=x+1,x=A,g>i)break}return y<d&&f.fill(o,y*c,d*c),[f,p]}var pq=Yo(e=>Math.sqrt(e)),hq=gt(bo,e=>Math.sqrt(e)),fq={kernelName:bo,backendName:"cpu",kernelFunc:hq},r7=en((e,t)=>{let n=e-t;return n*n}),mq=kn(ko,r7),gq={kernelName:ko,backendName:"cpu",kernelFunc:mq};function s7(e,t,n,r){let s=Le(e,t.dtype);for(let a=0;a<s.size;a++){let o=s.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+r[l];s.set(t.get(...i),...o)}return s}var yq=class{constructor(e,t,n,r,s,a){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),c=Math.max(0,i-(s-(o+1))),u=a-(l+c),d=t+(l>0?0:o-i),p=0;p+=l*this.leftPad.length;for(let y=0;y<u;++y)p+=e[d+y].length;p+=c*this.rightPad.length,p+=(l+c+u-1)*this.separator.length,n[r+o]=new Uint8Array(p);let f=n[r+o],m=0,g=y=>y.forEach(x=>f[m++]=x);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<u-1;++y)g(e[d+y]),g(this.separator);if(u>0){g(e[d+u-1]);for(let y=0;y<c;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<c-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<r;++l){let c=t[l]>=i;if(c=c&&t[l]<=n,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let s=r-1,a=w.getArrayFromDType("int32",r);if(n===0||r===0){let i=new Array(n);for(let l=0;l<=s;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=s;++i){let l=t[i]-t[i-1],c=0;this.nGramWidths.forEach(u=>{c+=this.getNumNGrams(l,u)}),this.preserveShort&&l>0&&c===0&&(c=1),a[i]=a[i-1]+c}let o=new Array(a[s]);for(let i=0;i<s;++i){let l=t[i],c=a[i];if(this.nGramWidths.forEach(u=>{let d=t[i+1]-t[i],p=this.getNumNGrams(d,u);this.createNGrams(e,l,o,c,p,u),c+=p}),this.preserveShort&&c===a[i]){let u=t[i+1]-t[i];if(u===0)continue;let d=u+2*this.padWidth,p=1;this.createNGrams(e,l,o,c,p,d)}}return[o,a]}};function a7(e,t,n,r,s,a,o,i){return new yq(n,r,s,a,o,i).compute(e,t)}function Aq(e,t,n,r){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)r.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&r.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&r.push(e);return}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(s,a);(!n||o.length!==0)&&r.push(o),s=a+1}}function o7(e,t,n){let r=e.length,s=[],a=0,o=0,i=new Array(r);for(let p=0;p<r;++p){let h=s.length;Aq(e[p],t,n,s);let f=s.length-h;i[p]=f,a+=f,o=Math.max(o,f)}let l=w.getArrayFromDType("int32",a*2),c=new Array(a),u=[r,o],d=0;for(let p=0;p<r;++p)for(let h=0;h<i[p];++h)l[d*2]=p,l[d*2+1]=h,c[d]=s[d],++d;return[l,c,u]}function i7(e,t){let n=w.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=w.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var l7=en((e,t)=>e-t),xq=ox((e,t,n,r)=>({real:e-n,imag:t-r})),hx=kn(Io,l7,xq),bq={kernelName:Io,backendName:"cpu",kernelFunc:hx};function u7(e,t){let n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];let r=Le(n,e.dtype);for(let s=0;s<r.values.length;++s){let a=r.indexToLoc(s),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);r.values[s]=e.values[i]}return r}var kp=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function c7(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let i=r-n+1,l=t-n+1,c=Math.log(i),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(i-u)/i)*Math.sign(l-i/2),p=Math.max(n,Math.floor(t-l*u/i+d)),h=Math.min(r,Math.floor(t+(i-l)*u/i+d));c7(e,t,p,h)}let s=e[t],a=n,o=r;for(w.swap(e,n,t),kp(e[r],s)>0&&w.swap(e,n,r);a<o;){for(w.swap(e,a,o),a++,o--;kp(e[a],s)<0;)a=a+1;for(;kp(e[o],s)>0;)o=o-1}kp(e[n],s)===0?w.swap(e,n,o):(o=o+1,w.swap(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function d7(e,t,n,r,s){let a=t[t.length-1],[o,i]=[e.length/a,a],l=w.getTypedArrayFromDType(n,o*r),c=w.getTypedArrayFromDType("int32",o*r);for(let d=0;d<o;d++){let p=d*i,h=e.subarray(p,p+i),f=new Array(h.length);h.forEach((x,A)=>f[A]={value:x,index:A}),r<f.length&&(c7(f,r),f=f.slice(0,r)),s&&f.sort(kp);let m=d*r,g=l.subarray(m,m+r),y=c.subarray(m,m+r);for(let x=0;x<r;x++)g[x]=f[x].value,y[x]=f[x].index}let u=t.slice();return u[u.length-1]=r,[Le(u,n,l),Le(u,"int32",c)]}function p7(e,t,n,r){let s=w.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<s;f++)a[0]*=n[f];a[1]=n[s];for(let f=s+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[s]),l=new sn(a,r,e),c=[],u=a[0]===1&&a[2]===1;for(let f=0;f<n[s];f++){let m;if(u)m=e[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let x=0;x<a[2];x++)g.push(l.get(y,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,c.push(f)}}let d=a.slice();d[1]=Object.keys(o).length;let p=new sn(d,r);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)p.set(l.get(g,f,y),g,m,y)});let h=n.slice();return h[s]=d[1],{outputValues:p.values,outputShape:h,indices:i}}var vq="0.0.0";dl("cpu",()=>new ax,1);var h7=gt(qa,e=>e>=0?e:Math.exp(e)-1),wq={kernelName:qa,backendName:"cpu",kernelFunc:h7};function f7(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;Re([s],"leakyRelu");let o=w.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,l=w.getTypedArrayFromDType("float32",o);for(let c=0;c<i.length;c++)l[c]=i[c]<0?a*i[c]:i[c];return n.makeTensorInfo(s.shape,"float32",l)}var kq={kernelName:eo,backendName:"cpu",kernelFunc:f7},Iq=en((e,t)=>e<0?t*e:e);function m7(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Re([r,s],"prelu");let a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,l]=Iq(r.shape,s.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var Sq={kernelName:ho,backendName:"cpu",kernelFunc:m7},g7=gt(fo,e=>Math.max(0,e)),Cq={kernelName:fo,backendName:"cpu",kernelFunc:g7},y7=gt(go,e=>Math.min(Math.max(0,e),6)),Tq={kernelName:go,backendName:"cpu",kernelFunc:y7};function fx(e,t,n,r,s){if(n==="linear")return Us({inputs:{x:t},backend:e});if(n==="relu")return g7({inputs:{x:t},backend:e});if(n==="elu")return h7({inputs:{x:t},backend:e});if(n==="relu6")return y7({inputs:{x:t},backend:e});if(n==="prelu")return m7({inputs:{x:t,alpha:r},backend:e});if(n==="leakyrelu")return f7({inputs:{x:t},backend:e,attrs:{alpha:s}});if(n==="sigmoid")return e7({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Ot(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(a,o),l=w.sizeFromShape(i);w.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);let c=n.data.get(s.dataId);if(c.complexTensorInfos!=null){let u=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}var Nq={kernelName:Wi,backendName:"cpu",kernelFunc:Ot};function A7(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;Re([s,a],"matMul");let l=s.shape.length,c=a.shape.length,u=o?s.shape[l-2]:s.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=ll.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);w.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],v=i?[y,h,d]:[y,d,h],C=Ot({inputs:{x:s},backend:n,attrs:{shape:b}}),I=Ot({inputs:{x:a},backend:n,attrs:{shape:v}}),E=o?C.shape[1]:C.shape[2],R=o?C.shape[2]:C.shape[1],F=i?I.shape[1]:I.shape[2],_=Math.max(g,y),P=n.data.get(C.dataId).values,T=n.data.get(I.dataId).values,O=w.computeStrides(C.shape),G=w.computeStrides(I.shape),[K,z,j]=o?[O[0],1,O[1]]:[O[0],O[1],1],[W,Q,ne]=i?[1,G[1],G[0]]:[G[1],1,G[0]],oe=R*F,Z=Le([_,R,F],C.dtype),ae=Z.values,se=n.blockSize;for(let me=0;me<_;me++)for(let be=0;be<R;be+=se)for(let Ne=0;Ne<F;Ne+=se)for(let Se=0;Se<E;Se+=se){let Pe=Math.min(be+se,R),ze=Math.min(Ne+se,F),Qe=Math.min(Se+se,E);for(let Ze=be;Ze<Pe;Ze++)for(let et=Ne;et<ze;et++){let yt=0;for(let lt=Se;lt<Qe;lt++){let At=Math.min(me,g-1)*K,Dt=Math.min(me,y-1)*ne,tr=P[At+Ze*z+lt*j],ut=T[lt*W+et*Q+Dt];yt+=tr*ut}ae[me*oe+(Ze*F+et)]+=yt}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(A,Z.dtype,Z.values)}var Eq={kernelName:za,backendName:"cpu",kernelFunc:A7};function Rq(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=r,p,h,f,m=[];p=A7({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:c},backend:n}),o&&(h=wp({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),u&&(f=fx(n,p,u,i,d),m.push(p),p=f);for(let y of m)n.disposeIntermediateTensorInfo(y);return p}var _q={kernelName:No,backendName:"cpu",kernelFunc:Rq},Dq=gt(uu,e=>Math.acos(e)),Pq={kernelName:uu,backendName:"cpu",kernelFunc:Dq},$q=gt(cu,e=>Math.acosh(e)),Fq={kernelName:cu,backendName:"cpu",kernelFunc:$q};function Oq(e){let{inputs:t,backend:n}=e,r=t;Re(t,"addN");let s=r.map(i=>n.data.get(i.dataId).values),a=Le(r[0].shape,r[0].dtype),o=a.values;for(let i=0;i<r.length;i++){let l=s[i];for(let c=0;c<o.length;c++)o[c]+=l[c]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var Mq={kernelName:Fa,backendName:"cpu",kernelFunc:Oq};function zq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;Re(s,"all");let i=w.parseAxisParam(a,s.shape),l=i,c=N.getAxesPermutation(l,s.shape.length),u=s;c!=null&&(u=Gr({inputs:{x:s},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,s.shape.length)),N.assertAxesAreInnerMostDims("all",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let v=m[x+b];A=A&&v}f[y]=A}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),x=Ot({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var Lq={kernelName:du,backendName:"cpu",kernelFunc:zq};function Bq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;Re(s,"any");let i=w.parseAxisParam(a,s.shape),l=i,c=N.getAxesPermutation(l,s.shape.length),u=s;c!=null&&(u=Gr({inputs:{x:s},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,s.shape.length)),N.assertAxesAreInnerMostDims("any",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let v=m[x+b];A=A||v}f[y]=A}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),x=Ot({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var Wq={kernelName:pu,backendName:"cpu",kernelFunc:Bq};function Vq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Re(s,"argMax");let o=w.parseAxisParam(a,s.shape),i=N.getAxesPermutation(o,s.shape.length),l=s,c=[];i!=null&&(l=Gr({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=w.sizeFromShape(u),h=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let v=m[y+b];v>x&&(x=v,A=b)}h[g]=A}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var Uq={kernelName:Oa,backendName:"cpu",kernelFunc:Vq};function Gq(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;Re(s,"argMin");let o=w.parseAxisParam(a,s.shape),i=N.getAxesPermutation(o,s.shape.length),l=s,c=[];i!=null&&(l=Gr({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],N.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[u,d]=N.computeOutAndReduceShapes(l.shape,o),p=w.sizeFromShape(u),h=w.makeZerosTypedArray(p,"int32"),f=w.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let v=m[y+b];v<x&&(x=v,A=b)}h[g]=A}return c.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(u,"int32",h)}var Hq={kernelName:hu,backendName:"cpu",kernelFunc:Gq},jq=gt(fu,e=>Math.asin(e)),qq={kernelName:fu,backendName:"cpu",kernelFunc:jq},Xq=gt(mu,e=>Math.asinh(e)),Kq={kernelName:mu,backendName:"cpu",kernelFunc:Xq},Zq=gt(gu,e=>Math.atan(e)),Yq={kernelName:gu,backendName:"cpu",kernelFunc:Zq},Jq=en((e,t)=>Math.atan2(e,t)),Qq=kn(Au,Jq),eX={kernelName:Au,backendName:"cpu",kernelFunc:Qq},tX=gt(yu,e=>Math.atanh(e)),nX={kernelName:yu,backendName:"cpu",kernelFunc:tX};function mx(e,t,n,r,s,a){let o=s.strideHeight,i=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,u=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,h=s.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Le(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],A=s.outShape[3];for(let b=0;b<s.batchSize;++b){let v=b*y,C=b*r[0];for(let I=0;I<s.inChannels;++I)for(let E=0;E<s.outHeight;++E){let R=E*o-p,F=Math.max(0,R),_=Math.min(s.inHeight,u+R),P=v+E*x;for(let T=0;T<s.outWidth;++T){let O=T*i-h,G=Math.max(0,O),K=Math.min(s.inWidth,d+O),z=f,j=0,W=0;for(let ne=F;ne<_;ne+=l){let oe=C+ne*r[1];for(let Z=G;Z<K;Z+=c){let ae=oe+Z*r[2],se=e[ae+I];a==="max"&&se>z?z=se:a==="avg"&&(j+=se,W++)}if(isNaN(z))break}let Q=P+T*A+I;g[Q]=a==="avg"?j/W:z}}}return m}function x7(e,t,n,r,s=!1,a=!1){let o=Le(r.outShape,"int32"),i=r.strideHeight,l=r.strideWidth,c=r.dilationHeight,u=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,h=r.padInfo.top,f=r.padInfo.left,m=Le(t,n,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let x=0;x<r.outHeight;++x){let A=x*i-h,b=A;for(;b<0;)b+=c;let v=Math.min(r.inHeight,d+A);for(let C=0;C<r.outWidth;++C){let I=C*l-f,E=I;for(;E<0;)E+=u;let R=Math.min(r.inWidth,p+I),F=Number.NEGATIVE_INFINITY,_=-1;for(let P=b;P<v;P+=c){let T=P-A;for(let O=E;O<R;O+=u){let G=O-I,K=m.get(g,P,O,y);K>F&&(F=K,s?_=a?((g*r.inHeight+P)*r.inWidth+O)*r.inChannels+y:(P*r.inWidth+O)*r.inChannels+y:_=T*p+G)}}o.set(_,g,x,C,y)}}return o}function b7(e,t,n,r,s,a){let o=s.strideDepth,i=s.strideHeight,l=s.strideWidth,c=s.dilationDepth,u=s.dilationHeight,d=s.dilationWidth,p=s.effectiveFilterDepth,h=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=Le(s.outShape,n),b=A.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],C=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],E=s.outShape[4];for(let R=0;R<s.batchSize;++R){let F=R*v,_=R*r[0];for(let P=0;P<s.inChannels;++P)for(let T=0;T<s.outDepth;++T){let O=T*o-m,G=O;for(;G<0;)G+=c;let K=Math.min(s.inDepth,p+O),z=F+T*C;for(let j=0;j<s.outHeight;++j){let W=j*i-g,Q=W;for(;Q<0;)Q+=u;let ne=Math.min(s.inHeight,h+W),oe=z+j*I;for(let Z=0;Z<s.outWidth;++Z){let ae=Z*l-y,se=ae;for(;se<0;)se+=d;let me=Math.min(s.inWidth,f+ae),be=oe+Z*E,Ne=x,Se=0,Pe=0;for(let Qe=G;Qe<K;Qe+=c){let Ze=_+Qe*r[1];for(let et=Q;et<ne;et+=u){let yt=Ze+et*r[2];for(let lt=se;lt<me;lt+=d){let At=yt+lt*r[3],Dt=e[At+P];if(a==="max"&&Dt>Ne?Ne=Dt:a==="avg"&&(Se+=Dt,Pe++),isNaN(Ne))break}if(isNaN(Ne))break}if(isNaN(Ne))break}let ze=be+P;b[ze]=a==="avg"?Se/Pe:Ne}}}}return A}function rX(e,t){let n=Le(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let x=y*r-p,A=x;for(;A<0;)A+=o;let b=Math.min(t.inDepth,c+x);for(let v=0;v<t.outHeight;++v){let C=v*s-h,I=C;for(;I<0;)I+=i;let E=Math.min(t.inHeight,u+C);for(let R=0;R<t.outWidth;++R){let F=R*a-f,_=F;for(;_<0;)_+=l;let P=Math.min(t.inWidth,d+F),T=Number.NEGATIVE_INFINITY,O=-1;for(let G=A;G<b;G+=o){let K=G-x;for(let z=I;z<E;z+=i){let j=z-C;for(let W=_;W<P;W+=l){let Q=W-F,ne=e.get(m,G,z,W,g);ne>=T&&(T=ne,O=K*u*d+j*u+Q)}}}n.set(O,m,y,v,R,g)}}}return n}function sX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Re(s,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r,c=1;w.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(s.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))d=Us({inputs:{x:s},backend:n});else{let p=n.data.get(s.dataId).values,h=w.computeStrides(s.shape),f=mx(p,s.shape,s.dtype,h,u,"avg");d=n.makeTensorInfo(u.outShape,s.dtype,f.values)}return d}var aX={kernelName:Ma,backendName:"cpu",kernelFunc:sX};function oX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=r;Re(s,"avgPool3d");let u=N.computePool3DInfo(s.shape,a,o,1,i,l,c),d=n.data.get(s.dataId).values,p=b7(d,s.shape,s.dtype,w.computeStrides(s.shape),u,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}var iX={kernelName:md,backendName:"cpu",kernelFunc:oX};function lX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=r;Re([s,a],"avgPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=u.strideDepth,p=u.strideHeight,h=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,x=u.dilationHeight,A=u.dilationWidth,b=u.effectiveFilterDepth,v=u.effectiveFilterHeight,C=u.effectiveFilterWidth,I=b-1-u.padInfo.front,E=C-1-u.padInfo.left,R=v-1-u.padInfo.top,F=Le(a.shape,"float32"),_=1/(f*m*g),P=n.bufferSync(s);for(let T=0;T<u.batchSize;++T)for(let O=0;O<u.inChannels;++O)for(let G=0;G<u.inDepth;++G)for(let K=0;K<u.inHeight;++K)for(let z=0;z<u.inWidth;++z){let j=G-I,W=K-R,Q=z-E,ne=0;for(let oe=0;oe<b;oe+=y){let Z=(j+oe)/d;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let ae=0;ae<v;ae+=x){let se=(W+ae)/p;if(!(se<0||se>=u.outHeight||Math.floor(se)!==se))for(let me=0;me<C;me+=A){let be=(Q+me)/h;if(be<0||be>=u.outWidth||Math.floor(be)!==be)continue;ne+=P.get(T,Z,se,be,O)}}}F.set(ne*_,T,G,K,z,O)}return n.makeTensorInfo(F.shape,F.dtype,F.values)}var uX={kernelName:Lh,backendName:"cpu",kernelFunc:lX};function cX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;Re([s,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=r,u=N.computePool2DInfo(o.shape,i,l,1,c),d=u.strideHeight,p=u.strideWidth,h=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,x=u.effectiveFilterWidth,A=x-1-u.padInfo.left,b=y-1-u.padInfo.top,v=Le(o.shape,"float32"),C=1/(h*f),I=n.data.get(s.dataId).values,E=Le(s.shape,"float32",I);for(let R=0;R<u.batchSize;++R)for(let F=0;F<u.inChannels;++F)for(let _=0;_<u.inHeight;++_)for(let P=0;P<u.inWidth;++P){let T=_-b,O=P-A,G=0;for(let K=0;K<y;K+=m){let z=(T+K)/d;if(!(z<0||z>=u.outHeight||Math.floor(z)!==z))for(let j=0;j<x;j+=g){let W=(O+j)/p;if(W<0||W>=u.outWidth||Math.floor(W)!==W)continue;G+=E.get(R,z,W,F)}}v.set(G*C,R,_,P,F)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var dX={kernelName:zh,backendName:"cpu",kernelFunc:cX};function pX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:o,mean:i,variance:l}=t;w.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Re([s,i,l,a,o],"batchNorm");let{varianceEpsilon:c}=r;c==null&&(c=.001);let u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(l.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=h.length,x=p.length,A=d.length,b=0,v=0,C=0,I=0;for(let E=0;E<u.length;++E)m[E]=f[b++]+(u[E]-d[v++])*h[C++]/Math.sqrt(p[I++]+c),b>=g&&(b=0),v>=A&&(v=0),C>=y&&(C=0),I>=x&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}var hX={kernelName:Ya,backendName:"cpu",kernelFunc:pX};function fX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;Re([s],"batchToSpaceND");let i=a.reduce((y,x)=>y*x),l=N.getReshaped(s.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(s.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=Ot({inputs:{x:s},backend:n,attrs:{shape:l}}),f=Gr({inputs:{x:h},backend:n,attrs:{perm:c}}),m=Ot({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Nl({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var mX={kernelName:Ai,backendName:"cpu",kernelFunc:fX};function gX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=ix(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var yX={kernelName:Bh,backendName:"cpu",kernelFunc:gX};function AX(e){let{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var xX={kernelName:Wh,backendName:"cpu",kernelFunc:AX},bX=gt(Ys,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),vX={kernelName:Ys,backendName:"cpu",kernelFunc:bX},wX=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(w.sizeFromShape(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){let u=i[c],d=l[c];r[c]=Math.hypot(u,d)}return n.makeOutput(r,t.shape,"float32")},kX={kernelName:yd,backendName:"cpu",kernelFunc:wX};function cc(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}var IX={kernelName:vd,backendName:"cpu",kernelFunc:cc};function dc(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=w.parseAxisParam(s,t[0].shape)[0],o=N.computeOutShape(t.map(m=>m.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>w.sizeFromShape(m.shape)>0);if(i.length===1)return Us({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(N.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>Tl({inputs:{input:b},backend:n})),g=i.map(b=>cc({inputs:{input:b},backend:n})),y=dc({inputs:m,backend:n,attrs:{axis:a}}),x=dc({inputs:g,backend:n,attrs:{axis:a}}),A=Sr({inputs:{real:y,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),A}let c=i.map(m=>{let g=w.sizeFromShape(m.shape.slice(a));return Ot({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),u=c.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=N.computeOutShape(c.map(m=>m.shape),1);let d=c[0].shape[0]===1,p=lx(u,o,t[0].dtype,d),h=N.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,p);return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var SX={kernelName:xi,backendName:"cpu",kernelFunc:dc};function v7(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=r;Re([s,a],"conv2d");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(s.shape,a.shape,o,c,i,u,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,x=p.padInfo.top,A=p.dataFormat==="channelsLast",b=new sn(p.outShape,s.dtype),v=w.computeStrides(s.shape),C=w.computeStrides(a.shape),I=v[0],E=A?v[1]:v[2],R=A?v[2]:1,F=A?1:v[1],_=b.strides[0],P=A?b.strides[1]:b.strides[2],T=A?b.strides[2]:1,O=A?1:b.strides[1],G=n.data.get(s.dataId).values,K=n.data.get(a.dataId).values,z=b.values;for(let j=0;j<p.batchSize;++j){let W=j*I,Q=j*_;for(let ne=0;ne<p.outHeight;++ne){let oe=Q+ne*P,Z=ne*p.strideHeight-x;for(let ae=0;ae<h;++ae){let se=Z+ae*m;if(se<0||se>=p.inHeight)continue;let me=ae*C[0],be=W+se*E;for(let Ne=0;Ne<p.outWidth;++Ne){let Se=oe+Ne*T,Pe=Ne*p.strideWidth-y;for(let ze=0;ze<f;++ze){let Qe=Pe+ze*g;if(Qe<0||Qe>=p.inWidth)continue;let Ze=me+ze*C[1],et=be+Qe*R,yt=Ze;for(let lt=0;lt<p.inChannels;++lt){let At=G[et+lt*F];for(let Dt=0;Dt<p.outChannels;++Dt)z[Se+Dt*O]+=At*K[yt+Dt];yt+=p.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,z)}var CX={kernelName:Wa,backendName:"cpu",kernelFunc:v7};function TX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=r;Re([s,a],"conv2dBackpropFilter");let d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(s.shape,u,o,1,i,c,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=p.dataFormat==="channelsLast",x=new sn(p.filterShape,"float32"),A=p.padInfo.left,b=p.padInfo.top,v=n.data.get(s.dataId).values,C=n.data.get(a.dataId).values,I=new sn(s.shape,s.dtype,v),E=new sn(a.shape,a.dtype,C);for(let R=0;R<m;++R){let F=Math.max(0,Math.ceil((b-R)/h)),_=Math.min(p.outHeight,(p.inHeight+b-R)/h);for(let P=0;P<g;++P){let T=Math.max(0,Math.ceil((A-P)/f)),O=Math.min(p.outWidth,(p.inWidth+A-P)/f);for(let G=0;G<p.inChannels;++G)for(let K=0;K<p.outChannels;++K){let z=0;for(let j=0;j<p.batchSize;++j)for(let W=F;W<_;++W){let Q=R+W*h-b;for(let ne=T;ne<O;++ne){let oe=P+ne*f-A;y?z+=I.get(j,Q,oe,G)*E.get(j,W,ne,K):z+=I.get(j,G,Q,oe)*E.get(j,K,W,ne)}}x.set(z,R,P,G,K)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var NX={kernelName:Vh,backendName:"cpu",kernelFunc:TX};function EX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=r;Re([s,a],"conv2dBackpropInput");let d=w.computeStrides(a.shape),p=w.computeStrides(s.shape),h=N.convertConv2DDataFormat(c),f=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,h),m=new sn(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,x=n.data.get(a.dataId).values,[A,b,v]=d,{batchSize:C,filterHeight:I,filterWidth:E,inChannels:R,inHeight:F,inWidth:_,outChannels:P,outHeight:T,outWidth:O,strideHeight:G,strideWidth:K}=f;h=f.dataFormat;let z=I-1-f.padInfo.top,j=E-1-f.padInfo.left,W=h==="channelsLast",Q=m.strides[0],ne=W?m.strides[1]:m.strides[2],oe=W?m.strides[2]:1,Z=W?1:m.strides[1],ae=p[0],se=W?p[1]:p[2],me=W?p[2]:1,be=W?1:p[1];for(let Ne=0;Ne<C;++Ne)for(let Se=0;Se<R;++Se)for(let Pe=0;Pe<F;++Pe){let ze=Pe-z,Qe=Math.max(0,Math.ceil(ze/G)),Ze=Math.min(T,(I+ze)/G);for(let et=0;et<_;++et){let yt=et-j,lt=Math.max(0,Math.ceil(yt/K)),At=Math.min(O,(E+yt)/K),Dt=0;for(let ut=Qe;ut<Ze;++ut){let gr=ut*G-ze;for(let Sn=lt;Sn<At;++Sn){let Xr=Sn*K-yt,nr=ae*Ne+se*ut+me*Sn,yr=A*(I-1-gr)+b*(E-1-Xr)+v*Se;for(let _r=0;_r<P;++_r){let Kr=y[nr+be*_r],Dr=x[yr+_r];Dt+=Kr*Dr}}}let tr=Q*Ne+ne*Pe+oe*et+Z*Se;g[tr]=Dt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var RX={kernelName:Va,backendName:"cpu",kernelFunc:EX};function _X(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l}=r;Re([s,a],"conv3d");let c=N.computeConv3DInfo(s.shape,a.shape,o,l,i),{filterDepth:u,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,x=g.left,A=g.top,b=new sn(c.outShape,s.dtype),v=n.data.get(s.dataId).values,C=n.data.get(a.dataId).values,I=b.values,E=w.computeStrides(s.shape),R=w.computeStrides(a.shape);for(let F=0;F<c.batchSize;++F){let _=F*E[0],P=F*b.strides[0];for(let T=0;T<c.outDepth;++T){let O=P+T*b.strides[1],G=T*c.strideDepth-y;for(let K=0;K<u;++K){let z=G+K*h;if(z<0||z>=c.inDepth)continue;let j=K*R[0],W=_+z*E[1];for(let Q=0;Q<c.outHeight;++Q){let ne=O+Q*b.strides[2],oe=Q*c.strideHeight-A;for(let Z=0;Z<d;++Z){let ae=oe+Z*f;if(ae<0||ae>=c.inHeight)continue;let se=j+Z*R[1],me=W+ae*E[2];for(let be=0;be<c.outWidth;++be){let Ne=ne+be*c.outChannels,Se=be*c.strideWidth-x;for(let Pe=0;Pe<p;++Pe){let ze=Se+Pe*m;if(ze<0||ze>=c.inWidth)continue;let Qe=se+Pe*R[2],Ze=me+ze*c.inChannels,et=Qe;for(let yt=0;yt<c.inChannels;++yt){let lt=v[Ze+yt];for(let At=0;At<c.outChannels;++At)I[Ne+At]+=lt*C[et+At];et+=c.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var DX={kernelName:Ad,backendName:"cpu",kernelFunc:_X};function PX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:l}=r;Re([s,a],"conv3dBackpropFilterV2");let c=w.computeStrides(s.shape),u=w.computeStrides(a.shape),d=N.computeConv3DInfo(s.shape,l,o,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,x=new sn(d.filterShape,"float32"),A=x.values,[b,v,C,I]=x.strides,E=n.data.get(a.dataId).values,[R,F,_,P]=u,T=n.data.get(s.dataId).values,[O,G,K,z]=c,j=d.padInfo.front,W=d.padInfo.left,Q=d.padInfo.top;for(let ne=0;ne<m;++ne){let oe=Math.max(0,Math.ceil((j-ne)/p)),Z=Math.min(d.outDepth,(d.inDepth+j-ne)/p),ae=ne*b;for(let se=0;se<g;++se){let me=Math.max(0,Math.ceil((Q-se)/h)),be=Math.min(d.outHeight,(d.inHeight+Q-se)/h),Ne=se*v+ae;for(let Se=0;Se<y;++Se){let Pe=Math.max(0,Math.ceil((W-Se)/f)),ze=Math.min(d.outWidth,(d.inWidth+W-Se)/f),Qe=Se*C+Ne;for(let Ze=0;Ze<d.inChannels;++Ze){let et=Ze*I+Qe;for(let yt=0;yt<d.outChannels;++yt){let lt=0;for(let At=0;At<d.batchSize;++At){let Dt=At*O,tr=At*R;for(let ut=oe;ut<Z;++ut){let Sn=(ne+ut*p-j)*G+Dt,Xr=ut*F+tr;for(let nr=me;nr<be;++nr){let _r=(se+nr*h-Q)*K+Sn,Kr=nr*_+Xr;for(let Dr=Pe;Dr<ze;++Dr){let ka=(Se+Dr*f-W)*z+_r,Rn=Dr*P+Kr;lt+=T[ka+Ze]*E[Rn+yt]}}}}A[et+yt]=lt}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var $X={kernelName:Uh,backendName:"cpu",kernelFunc:PX};function FX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:l}=r;Re([s],"conv3dBackpropInputV2");let c=w.computeStrides(s.shape),u=w.computeStrides(a.shape),d=N.computeConv3DInfo(l,a.shape,i,1,o),p=new sn(d.inShape,"float32"),h=p.values,[f,m,g,y]=p.strides,x=n.data.get(s.dataId).values,[A,b,v,C]=c,I=n.data.get(a.dataId).values,[E,R,F,_]=u,{batchSize:P,filterDepth:T,filterHeight:O,filterWidth:G,inChannels:K,inDepth:z,inHeight:j,inWidth:W,outChannels:Q,outDepth:ne,outHeight:oe,outWidth:Z,strideDepth:ae,strideHeight:se,strideWidth:me}=d,be=T-1-d.padInfo.front,Ne=O-1-d.padInfo.top,Se=G-1-d.padInfo.left;for(let Pe=0;Pe<P;++Pe)for(let ze=0;ze<K;++ze)for(let Qe=0;Qe<z;++Qe){let Ze=Qe-be,et=Math.max(0,Math.ceil(Ze/ae)),yt=Math.min(ne,(T+Ze)/ae);for(let lt=0;lt<j;++lt){let At=lt-Ne,Dt=Math.max(0,Math.ceil(At/se)),tr=Math.min(oe,(O+At)/se);for(let ut=0;ut<W;++ut){let gr=ut-Se,Sn=Math.max(0,Math.ceil(gr/me)),Xr=Math.min(Z,(G+gr)/me),nr=0;for(let yr=et;yr<yt;++yr){let _r=yr*ae-Ze;for(let Kr=Dt;Kr<tr;++Kr){let Dr=Kr*se-At;for(let rr=Sn;rr<Xr;++rr){let ka=rr*me-gr,Rn=A*Pe+b*yr+v*Kr+C*rr,Ia=E*(T-1-_r)+R*(O-1-Dr)+F*(G-1-ka)+_*ze;for(let Pr=0;Pr<Q;++Pr){let Xc=x[Rn+Pr],Kc=I[Ia+Pr];nr+=Xc*Kc}}}}h[f*Pe+m*Qe+g*lt+y*ut+ze]=nr}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}var OX={kernelName:Gh,backendName:"cpu",kernelFunc:FX},MX=gt(Ua,e=>Math.cos(e)),zX={kernelName:Ua,backendName:"cpu",kernelFunc:MX},LX=gt(Ga,e=>Math.cosh(e)),BX={kernelName:Ga,backendName:"cpu",kernelFunc:LX};function WX(e){let{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=r,[u,d,p,h]=s.shape,f=a.shape[0],[m,g]=i,y=Le([f,m,g,h],"float32"),x=n.data.get(a.dataId).values,A=n.data.get(o.dataId).values,b=n.data.get(s.dataId).values,v=w.computeStrides(s.shape),C=w.computeStrides(y.shape);for(let I=0;I<f;I++){let E=I*4,R=x[E],F=x[E+1],_=x[E+2],P=x[E+3],T=A[I];if(T>=u)continue;let O=m>1?(_-R)*(d-1)/(m-1):0,G=g>1?(P-F)*(p-1)/(g-1):0;for(let K=0;K<m;K++){let z=m>1?R*(d-1)+K*O:.5*(R+_)*(d-1);if(z<0||z>d-1){for(let j=0;j<g;j++)for(let W=0;W<h;W++){let Q=W+j*C[2]+K*C[1]+I*C[0];y.values[Q]=c}continue}if(l==="bilinear"){let j=Math.floor(z),W=Math.ceil(z),Q=z-j;for(let ne=0;ne<g;ne++){let oe=g>1?F*(p-1)+ne*G:.5*(F+P)*(p-1);if(oe<0||oe>p-1){for(let me=0;me<h;me++){let be=me+ne*C[2]+K*C[1]+I*C[0];y.values[be]=c}continue}let Z=Math.floor(oe),ae=Math.ceil(oe),se=oe-Z;for(let me=0;me<h;me++){let be=me+Z*v[2]+j*v[1]+T*v[0],Ne=b[be];be=me+ae*v[2]+j*v[1]+T*v[0];let Se=b[be];be=me+Z*v[2]+W*v[1]+T*v[0];let Pe=b[be];be=me+ae*v[2]+W*v[1]+T*v[0];let ze=b[be],Qe=Ne+(Se-Ne)*se,Ze=Pe+(ze-Pe)*se;be=me+ne*C[2]+K*C[1]+I*C[0],y.values[be]=Qe+(Ze-Qe)*Q}}}else for(let j=0;j<g;++j){let W=g>1?F*(p-1)+j*G:.5*(F+P)*(p-1);if(W<0||W>p-1){for(let oe=0;oe<h;oe++){let Z=oe+j*C[2]+K*C[1]+I*C[0];y.values[Z]=c}continue}let Q=Math.round(W),ne=Math.round(z);for(let oe=0;oe<h;oe++){let Z=oe+Q*v[2]+ne*v[1]+T*v[0],ae=oe+j*C[2]+K*C[1]+I*C[0];y.values[ae]=b[Z]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var VX={kernelName:vi,backendName:"cpu",kernelFunc:WX};function UX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;Re(s,"cumsum");let l=N.getAxesPermutation([a],s.shape.length),c=s;l!=null&&(c=Gr({inputs:{x:s},backend:n,attrs:{perm:l}}));let u=N.getInnerMostAxes(1,s.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);let d=Wn(c.dtype,"int32"),p=w.makeZerosTypedArray(w.sizeFromShape(c.shape),d),h=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)p[A]=o?0:h[A];else{let b=m(y,x-1);p[A]=o?h[b]+p[b]:h[A]+p[b]}}let g=n.makeTensorInfo(c.shape,d,p);if(l!=null){let y=N.getUndoAxesPermutation(l),x=Gr({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),x}return g}var GX={kernelName:bi,backendName:"cpu",kernelFunc:UX};function HX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(s.shape.length===1){let l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,u=ix(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(s.shape.length===2){let l=n.bufferSync(s),c=n.bufferSync(a),u=_S(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}var jX={kernelName:Hh,backendName:"cpu",kernelFunc:HX};function qX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;w.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=s.shape[0],l=s.shape[1],c=s.shape[2],u=s.shape[3],d=l*a,p=c*a,h=u/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*d*p*h),g=0;for(let y=0;y<i;++y)for(let x=0;x<d;++x){let A=Math.floor(x/a),b=x%a;for(let v=0;v<p;++v){let C=Math.floor(v/a),I=v%a,E=(b*a+I)*h;for(let R=0;R<h;++R){let _=R+E+u*(C+c*(A+l*y));m[g++]=f[_]}}}return n.makeTensorInfo([i,d,p,h],s.dtype,m)}var XX={kernelName:wi,backendName:"cpu",kernelFunc:qX};function w7(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=r;Re([s,a],"depthwiseConv2DNative");let u=w.computeStrides(s.shape),d=w.computeStrides(a.shape),p=l;p==null&&(p=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let h=N.computeConv2DInfo(s.shape,a.shape,o,p,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=h,A=x.left,b=x.top,v=h.outChannels/h.inChannels,C=new sn(h.outShape,s.dtype),I=n.data.get(s.dataId).values,E=n.data.get(a.dataId).values,R=C.values;for(let F=0;F<h.batchSize;++F){let _=F*u[0],P=F*C.strides[0];for(let T=0;T<h.outHeight;++T){let O=P+T*C.strides[1],G=T*h.strideHeight-b;for(let K=0;K<f;++K){let z=G+K*g;if(z<0||z>=h.inHeight)continue;let j=K*d[0],W=_+z*u[1];for(let Q=0;Q<h.outWidth;++Q){let ne=O+Q*C.strides[2],oe=Q*h.strideWidth-A;for(let Z=0;Z<m;++Z){let ae=oe+Z*y;if(ae<0||ae>=h.inWidth)continue;let se=j+Z*d[1],me=W+ae*h.inChannels,be=ne,Ne=se;for(let Se=0;Se<h.inChannels;++Se){let Pe=I[me+Se];for(let ze=0;ze<v;++ze)R[be+ze]+=Pe*E[Ne+ze];be+=v,Ne+=v}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var KX={kernelName:Ha,backendName:"cpu",kernelFunc:w7};function ZX(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=r;Re([s,a],"depthwiseConv2dNativeBackpropFilter");let d=N.computeConv2DInfo(s.shape,u,o,i,l,c,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new sn(d.filterShape,"float32"),y=d.padInfo.left,x=d.padInfo.top,A=d.outChannels/d.inChannels,b=n.data.get(s.dataId).values,v=new sn(s.shape,s.dtype,b),C=n.data.get(a.dataId).values,I=new sn(a.shape,a.dtype,C);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((x-E)/p)),F=Math.min(d.outHeight,(d.inHeight+x-E)/p);for(let _=0;_<m;++_){let P=Math.max(0,Math.ceil((y-_)/h)),T=Math.min(d.outWidth,(d.inWidth+y-_)/h);for(let O=0;O<d.outChannels;++O){let G=Math.trunc(O/A),K=O%A,z=0;for(let j=0;j<d.batchSize;++j)for(let W=R;W<F;++W){let Q=E+W*p-x;for(let ne=P;ne<T;++ne){let oe=_+ne*h-y;z+=v.get(j,Q,oe,G)*I.get(j,W,ne,O)}}g.set(z,E,_,G,K)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var YX={kernelName:jh,backendName:"cpu",kernelFunc:ZX};function JX(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=r;Re([s,a],"depthwiseConv2DNativeBackpropInput");let d=w.computeStrides(s.shape),p=w.computeStrides(a.shape),h=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),f=new sn(h.inShape,"float32"),m=f.values,[g,y,x]=f.strides,A=n.data.get(s.dataId).values,[b,v,C]=d,I=n.data.get(a.dataId).values,[E,R,F]=p,{batchSize:_,filterHeight:P,filterWidth:T,inChannels:O,inHeight:G,inWidth:K,outChannels:z,outHeight:j,outWidth:W,strideHeight:Q,strideWidth:ne}=h,oe=P-1-h.padInfo.top,Z=T-1-h.padInfo.left,ae=z/O;for(let se=0;se<_;++se)for(let me=0;me<O;++me)for(let be=0;be<G;++be){let Ne=be-oe,Se=Math.max(0,Math.ceil(Ne/Q)),Pe=Math.min(j,(P+Ne)/Q);for(let ze=0;ze<K;++ze){let Qe=ze-Z,Ze=Math.max(0,Math.ceil(Qe/ne)),et=Math.min(W,(T+Qe)/ne),yt=0;for(let lt=Se;lt<Pe;++lt){let At=lt*Q-Ne;for(let Dt=Ze;Dt<et;++Dt){let tr=Dt*ne-Qe,ut=b*se+v*lt+C*Dt,gr=E*(P-1-At)+R*(T-1-tr)+F*me;for(let Sn=0;Sn<ae;++Sn){let Xr=me*ae+Sn,nr=A[ut+Xr],yr=I[gr+Sn];yt+=nr*yr}}}m[g*se+y*be+x*ze+me]=yt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var QX={kernelName:qh,backendName:"cpu",kernelFunc:JX};function eK(e){let{inputs:t,backend:n}=e,{x:r}=t,s=w.sizeFromShape(r.shape),a=n.data.get(r.dataId).values,o=Le([s,s],r.dtype),i=o.values;for(let c=0;c<a.length;c++)i[c*s+c]=a[c];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var tK={kernelName:Xh,backendName:"cpu",kernelFunc:eK},nK={kernelName:xd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:s}=e,{strides:a,pad:o,dilations:i}=n,l=t,c=l.data.get(r.dataId).values,u=r.shape.length,d=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:A,strideHeight:b,strideWidth:v,filterHeight:C,filterWidth:I,dilationHeight:E,dilationWidth:R,outShape:F}=N.computeDilation2DInfo(r.shape,s.shape,a,o,"NHWC",i),_=w.sizeFromShape(F),P=F.length,T=w.getArrayFromDType(r.dtype,_);for(let G=0;G<h;++G)for(let K=0;K<y;++K){let z=K*b-A.top;for(let j=0;j<x;++j){let W=j*v-A.left;for(let Q=0;Q<g;++Q){let ne=Number.MIN_SAFE_INTEGER;for(let Z=0;Z<C;++Z){let ae=z+Z*E;if(ae>=0&&ae<f)for(let se=0;se<I;++se){let me=W+se*R;if(me>=0&&me<m){let be=w.locToIndex([G,ae,me,Q],u,w.computeStrides(r.shape)),Ne=w.locToIndex([Z,se,Q],p,w.computeStrides(s.shape)),Se=c[be]+d[Ne];Se>ne&&(ne=Se)}}}let oe=w.locToIndex([G,K,j,Q],P,w.computeStrides(F));T[oe]=ne}}}return{dataId:l.write(w.toTypedArray(T,r.dtype),F,r.dtype),shape:F,dtype:r.dtype}}},rK={kernelName:Zh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=w.toNestedArray(r.shape,c.data.get(r.dataId).values),d=w.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:v,filterWidth:C,dilationHeight:I,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",l);w.assert(a.rank===R.length,()=>`Error in ${Zh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let F=w.toNestedArray(R,c.data.get(a.dataId).values),_=w.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<p;++T)for(let O=0;O<g;++O){let G=O*A-x.top;for(let K=0;K<y;++K){let z=K*b-x.left;for(let j=0;j<m;++j){let W=Number.MIN_SAFE_INTEGER,Q=0,ne=0;for(let oe=0;oe<v;++oe){let Z=G+oe*I;if(Z>=0&&Z<h)for(let ae=0;ae<C;++ae){let se=z+ae*E;if(se>=0&&se<f){let me=u[T][Z][se][j]+d[oe][ae][j];me>W&&(W=me,Q=oe,ne=ae)}}}_[Q][ne][j]+=F[T][O][K][j]}}}return{dataId:c.write(w.toTypedArray(_,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},sK={kernelName:Kh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:l}=n,c=t,u=w.toNestedArray(r.shape,c.data.get(r.dataId).values),d=w.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:v,filterWidth:C,dilationHeight:I,dilationWidth:E,outShape:R}=N.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",l);w.assert(a.rank===R.length,()=>`Error in ${Kh}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let F=w.toNestedArray(R,c.data.get(a.dataId).values),_=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<p;++T)for(let O=0;O<g;++O){let G=O*A-x.top;for(let K=0;K<y;++K){let z=K*b-x.left;for(let j=0;j<m;++j){let W=Number.MIN_SAFE_INTEGER,Q=G<0?0:G,ne=z<0?0:z;for(let oe=0;oe<v;++oe){let Z=G+oe*I;if(Z>=0&&Z<h)for(let ae=0;ae<C;++ae){let se=z+ae*E;if(se>=0&&se<f){let me=u[T][Z][se][j]+d[oe][ae][j];me>W&&(W=me,Q=Z,ne=se)}}}_[T][Q][ne][j]+=F[T][O][K][j]}}}return{dataId:c.write(w.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Ip(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;Re(s,"sum");let i;s.dtype==="bool"?i=Zo({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):i=Us({inputs:{x:s},backend:n});let l=i.shape.length,c=w.parseAxisParam(a,i.shape),u=N.getAxesPermutation(c,l),d=c,p=i;u!=null&&(p=Gr({inputs:{x:i},backend:n,attrs:{perm:u}}),d=N.getInnerMostAxes(d.length,l)),N.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=N.computeOutAndReduceShapes(p.shape,d),m=N.upcastType(p.dtype,"int32"),g=Mm(n,h,m),y=w.sizeFromShape(f),x=n.data.get(g.dataId).values,A=n.data.get(p.dataId).values;for(let b=0;b<x.length;++b){let v=b*y,C=0;for(let I=0;I<y;++I)C+=A[v+I];x[b]=C}if(o){let b=N.expandShapeToKeepDim(g.shape,c),v=g;g=Ot({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(i),u!=null&&n.disposeIntermediateTensorInfo(p),g}var aK={kernelName:vo,backendName:"cpu",kernelFunc:Ip};function oK(e){let{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(s,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:x}=N.getEinsumPermutation(h,l[g]),A;N.isIdentityPermutation(y)?A=a[g]:(A=Gr({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(A.shape,b)||(A=Ot({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),p===null?p=A:(p=zm({inputs:{a:A,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Ip({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var iK={kernelName:bd,backendName:"cpu",kernelFunc:oK};function lK(e){let{inputs:t,backend:n}=e,{dy:r,y:s}=t;Re([r,s],"eluGrad");let a=new Float32Array(w.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let l=0;l<o.length;++l){let c=o[l];c>=1?a[l]=i[l]:a[l]=i[l]*(c+1)}return n.makeTensorInfo(s.shape,"float32",a)}var uK={kernelName:Yh,backendName:"cpu",kernelFunc:lK},cK=N.ERF_P,dK=N.ERF_A1,pK=N.ERF_A2,hK=N.ERF_A3,fK=N.ERF_A4,mK=N.ERF_A5,gK=gt(xu,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+cK*n);return t*(1-((((mK*r+fK)*r+hK)*r+pK)*r+dK)*r*Math.exp(-n*n))}),yK={kernelName:xu,backendName:"cpu",kernelFunc:gK};function Bm(e){let{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,o=s.shape.length,i=s.shape.slice(),l=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),Ot({inputs:{x:s},backend:n,attrs:{shape:i}})}var AK={kernelName:Ii,backendName:"cpu",kernelFunc:Bm},xK=en((e,t)=>e/t),gx=kn(ja,xK),yx={kernelName:ja,backendName:"cpu",kernelFunc:gx};function k7(e,t,n){let r=e.shape,s=r[0],a=r[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[s,a],u=w.sizeFromShape(c),d=w.getTypedArrayFromDType("float32",u),p=w.getTypedArrayFromDType("float32",u);for(let g=0;g<s;g++){let y=Nl({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=Nl({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),A=Sr({inputs:{real:y,imag:x},backend:n}),{real:b,imag:v}=bK(A,t,n),C=N.mergeRealAndImagArrays(b,v);for(let I=0;I<a;I++){let E=N.getComplexWithIndex(C,I);d[g*a+I]=E.real,p[g*a+I]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(A)}let h=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",p),m=Sr({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function bK(e,t,n){let r=w.sizeFromShape(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(vK(r)){let i=Ax(a,o,r,t,n),l=[e.shape[0],e.shape[1]];if(t){let c=n.makeTensorInfo(l,"float32",i.real),u=n.makeTensorInfo(l,"float32",i.imag),d=n.makeTensorInfo([],"float32",w.createScalarValue(r,"float32")),p=Us({inputs:{x:d},backend:n}),h=yx.kernelFunc({inputs:{a:c,b:d},backend:n}),f=yx.kernelFunc({inputs:{a:u,b:p},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=N.mergeRealAndImagArrays(a,o),l=wK(i,r,t);return N.splitRealAndImagArrays(l)}}function vK(e){return(e&e-1)===0}function Ax(e,t,n,r,s){if(n===1)return{real:e,imag:t};let a=N.mergeRealAndImagArrays(e,t),o=n/2,i=N.complexWithEvenIndex(a),l=i.real,c=i.imag,u=[l.length],d=s.makeTensorInfo(u,"float32",l),p=s.makeTensorInfo(u,"float32",c),h=Sr({inputs:{real:d,imag:p},backend:s}),f=N.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],x=s.makeTensorInfo(y,"float32",m),A=s.makeTensorInfo(y,"float32",g),b=Sr({inputs:{real:x,imag:A},backend:s}),v=Ax(l,c,o,r,s),C=v.real,I=v.imag,E=[C.length],R=s.makeTensorInfo(E,"float32",C),F=s.makeTensorInfo(E,"float32",I),_=Sr({inputs:{real:R,imag:F},backend:s}),P=Ax(m,g,o,r,s),T=P.real,O=P.imag,G=[T.length],K=s.makeTensorInfo(G,"float32",T),z=s.makeTensorInfo(G,"float32",O),j=Sr({inputs:{real:K,imag:z},backend:s}),W=N.exponents(n,r),Q=[W.real.length],ne=s.makeTensorInfo(Q,"float32",W.real),oe=s.makeTensorInfo(Q,"float32",W.imag),Z=Sr({inputs:{real:ne,imag:oe},backend:s}),ae=zm({inputs:{a:Z,b:j},backend:s}),se=wp({inputs:{a:_,b:ae},backend:s}),me=hx({inputs:{a:_,b:ae},backend:s}),be=Tl({inputs:{input:se},backend:s}),Ne=Tl({inputs:{input:me},backend:s}),Se=cc({inputs:{input:se},backend:s}),Pe=cc({inputs:{input:me},backend:s}),ze=dc({inputs:[be,Ne],backend:s,attrs:{axis:0}}),Qe=dc({inputs:[Se,Pe],backend:s,attrs:{axis:0}}),Ze=s.data.get(ze.dataId).values,et=s.data.get(Qe.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(ne),s.disposeIntermediateTensorInfo(oe),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(ae),s.disposeIntermediateTensorInfo(se),s.disposeIntermediateTensorInfo(me),s.disposeIntermediateTensorInfo(be),s.disposeIntermediateTensorInfo(Se),s.disposeIntermediateTensorInfo(Ne),s.disposeIntermediateTensorInfo(Pe),s.disposeIntermediateTensorInfo(ze),s.disposeIntermediateTensorInfo(Qe),{real:Ze,imag:et}}function wK(e,t,n){let r=new Float32Array(t*2);for(let s=0;s<t;s++){let a=0,o=0;for(let i=0;i<t;i++){let l=N.exponent(s*i,t,n),c=N.getComplexWithIndex(e,i);a+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}n&&(a/=t,o/=t),N.assignToTypedArray(r,a,o,s)}return r}function kK(e){let{inputs:t,backend:n}=e,{input:r}=t,s=w.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=s/a,i=Ot({inputs:{x:r},backend:n,attrs:{shape:[o,a]}}),l=k7(i,!1,n),c=Ot({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var IK={kernelName:Jh,backendName:"cpu",kernelFunc:kK};function xx(e){let{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,o=a||w.inferDtype(s),i=w.getArrayFromDType(o,w.sizeFromShape(r));return CK(i,s,o),t.makeTensorInfo(r,o,i)}var SK={kernelName:bu,backendName:"cpu",kernelFunc:xx};function CK(e,t,n){e.fill(t)}var TK={kernelName:Ci,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,s=n,a=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[o,i,l,c]=r.shape,u=s.data.get(r.dataId).values;for(let p=0;p<o;p++){let h=p*l*i*c;for(let f=0;f<i;f++){let m=f*(l*c);for(let g=0;g<l;g++){let y=g*c;for(let x=0;x<c;x++){let A=Math.round(l-g-1),b=h+m+y+x,v=u[b];if(A>=0&&A<l){let C=A*c,I=h+m+C+x;v=u[I]}a[b]=v}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},NK=en((e,t)=>Math.floor(e/t)),EK=kn(Za,NK,null,"int32"),RK={kernelName:Za,backendName:"cpu",kernelFunc:EK};function _K(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=v7({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=wp({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=fx(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var DK={kernelName:Eo,backendName:"cpu",kernelFunc:_K};function PK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=w7({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){let g=m;m=wp({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=fx(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var $K={kernelName:Ro,backendName:"cpu",kernelFunc:PK};function FK(e){let{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=w.sizeFromShape(r.shape),o=s.shape,i=o[o.length-1],[l,c,u,d]=N.prepareAndValidate(r,s);if(c===0)return n.makeTensorInfo(l,r.dtype,[]);let p=n.data.get(s.dataId).values,h=n.bufferSync(r),f=LS(p,h,r.dtype,c,i,u,d,r.shape,a);return n.makeTensorInfo(l,r.dtype,f.values)}var OK={kernelName:Ni,backendName:"cpu",kernelFunc:FK};function MK(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r;Re([s,a],"gatherV2");let l=w.parseAxisParam(o,s.shape)[0],c=n.data.get(a.dataId).values,u=s.shape[l];for(let b=0;b<c.length;++b){let v=c[b];w.assert(v<=u-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);let p=w.sizeFromShape(a.shape),h=N.segment_util.collectGatherOpShapeInfo(s,a,l,d),f=Ot({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Ot({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],y=n.bufferSync(m),x=n.bufferSync(f),A=BS(x,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,A.dtype,A.values)}var zK={kernelName:Ti,backendName:"cpu",kernelFunc:MK};function LK(e){let{inputs:t,backend:n}=e,{input:r}=t,s=w.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=s/a,i=Ot({inputs:{x:r},backend:n,attrs:{shape:[o,a]}}),l=k7(i,!0,n),c=Ot({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}var BK={kernelName:Qh,backendName:"cpu",kernelFunc:LK},WK=gt(vu,e=>Number.isFinite(e)?1:0,"bool"),VK={kernelName:vu,backendName:"cpu",kernelFunc:WK},UK=gt(wu,e=>Math.abs(e)===1/0?1:0,"bool"),GK={kernelName:wu,backendName:"cpu",kernelFunc:UK},HK=gt(ku,e=>Number.isNaN(e)?1:0,"bool"),jK={kernelName:ku,backendName:"cpu",kernelFunc:HK};function qK(e){let{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=HS(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}var XK={kernelName:ef,backendName:"cpu",kernelFunc:qK},KK=gt(Iu,e=>Math.log1p(e)),ZK={kernelName:Iu,backendName:"cpu",kernelFunc:KK},YK=en((e,t)=>e&&t),JK=kn(Di,YK,null,"bool"),QK={kernelName:Di,backendName:"cpu",kernelFunc:JK},eZ=gt(Su,e=>e?0:1,"bool"),tZ={kernelName:Su,backendName:"cpu",kernelFunc:eZ},nZ=en((e,t)=>e||t),rZ=kn(wd,nZ,null,"bool"),sZ={kernelName:wd,backendName:"cpu",kernelFunc:rZ};function aZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=r;Re(s,"LRN");let c=s.shape[3],u=c-1,d=n.data.get(s.dataId).values,p=w.sizeFromShape(s.shape),h=new Float32Array(p);function f(m){let g=m%c,y=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,u),A=0;for(;y<=x;y++){let b=d[y];A+=b*b}return A}for(let m=0;m<p;m++){let g=f(m),y=d[m]*Math.pow(o+i*g,-l);h[m]=y}return n.makeTensorInfo(s.shape,s.dtype,h)}var oZ={kernelName:kd,backendName:"cpu",kernelFunc:aZ};function iZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=r;Re(o,"LRNGrad");let d=w.sizeFromShape(o.shape),p=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(d),y=d;for(let x=0;x<y;x++){let A=x%p,b=x-A+Math.max(0,A-i),v=x-A+Math.min(p,A+i+1),C=0;for(let I=b;I<v;I++)C+=Math.pow(f[I],2);C=c*C+l;for(let I=b;I<v;I++){let E=-2*c*u*f[I]*m[x]/C;x===I&&(E+=Math.pow(C,-u)),E*=h[x],g[I]+=E}}return n.makeTensorInfo(o.shape,s.dtype,g)}var lZ={kernelName:tf,backendName:"cpu",kernelFunc:iZ};function I7(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=n,l=s.shape,c=l.length,u=w.parseAxisParam(a,l),d=u,p=N.getAxesPermutation(d,c),h=i.data.get(s.dataId).values;if(p!=null){let b=new Array(c);for(let v=0;v<b.length;v++)b[v]=l[p[v]];h=cx(h,l,s.dtype,p,b),d=N.getInnerMostAxes(d.length,c),l=b}Re(s,"max"),N.assertAxesAreInnerMostDims("max",d,c);let[f,m]=N.computeOutAndReduceShapes(l,d),g=w.sizeFromShape(m),y=qS(h,g,f,s.dtype),x=i.write(y,f,s.dtype),A=f;return o&&(A=N.expandShapeToKeepDim(f,u)),{dataId:x,shape:A,dtype:s.dtype}}var uZ={kernelName:no,backendName:"cpu",kernelFunc:I7};function cZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Re(s,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r,c=1;w.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(s.shape,a,o,c,i,l),d;if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))d=Us({inputs:{x:s},backend:n});else{let p=n.data.get(s.dataId).values,h=w.computeStrides(s.shape),f=mx(p,s.shape,s.dtype,h,u,"max");d=n.makeTensorInfo(u.outShape,s.dtype,f.values)}return d}var dZ={kernelName:so,backendName:"cpu",kernelFunc:cZ};function pZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=r;Re(s,"maxPool3d");let u=N.computePool3DInfo(s.shape,a,o,1,i,l,c),d=n.data.get(s.dataId).values,p=b7(d,s.shape,s.dtype,w.computeStrides(s.shape),u,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}var hZ={kernelName:Id,backendName:"cpu",kernelFunc:pZ};function fZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=r;Re([s,a],"maxPool3DGrad");let u=N.computePool3DInfo(a.shape,o,i,1,l,c),d=n.bufferSync(a),p=rX(d,u),h=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,x=u.dilationWidth,A=u.effectiveFilterDepth,b=u.effectiveFilterHeight,v=u.effectiveFilterWidth,C=A-1-u.padInfo.front,I=v-1-u.padInfo.left,E=b-1-u.padInfo.top,R=Le(a.shape,"float32"),F=n.bufferSync(s);for(let _=0;_<u.batchSize;++_)for(let P=0;P<u.inChannels;++P)for(let T=0;T<u.inDepth;++T)for(let O=0;O<u.inHeight;++O)for(let G=0;G<u.inWidth;++G){let K=T-C,z=O-E,j=G-I,W=0;for(let Q=0;Q<A;Q+=g){let ne=(K+Q)/h;if(!(ne<0||ne>=u.outDepth||Math.floor(ne)!==ne))for(let oe=0;oe<b;oe+=y){let Z=(z+oe)/f;if(!(Z<0||Z>=u.outHeight||Math.floor(Z)!==Z))for(let ae=0;ae<v;ae+=x){let se=(j+ae)/m;if(se<0||se>=u.outWidth||Math.floor(se)!==se)continue;let me=A*b*v-1-p.get(_,ne,Z,se,P),be=Q*b*v+oe*v+ae,Ne=me===be?1:0;if(Ne===0)continue;W+=F.get(_,ne,Z,se,P)*Ne}}}R.set(W,_,T,O,G,P)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var mZ={kernelName:rf,backendName:"cpu",kernelFunc:fZ};function gZ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;Re([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=r,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=n.data.get(i.dataId).values,f=Le(p.outShape,i.dtype,x7(h,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,x=p.dilationWidth,A=p.effectiveFilterHeight,b=p.effectiveFilterWidth,v=b-1-p.padInfo.left,C=A-1-p.padInfo.top,I=Le(i.shape,"float32"),E=n.data.get(s.dataId).values,R=Le(s.shape,"float32",E);for(let F=0;F<p.batchSize;++F)for(let _=0;_<p.inChannels;++_)for(let P=0;P<p.inHeight;++P)for(let T=0;T<p.inWidth;++T){let O=P-C,G=T-v,K=0;for(let z=0;z<A;z+=y){let j=(O+z)/m;if(!(j<0||j>=p.outHeight||Math.floor(j)!==j))for(let W=0;W<b;W+=x){let Q=(G+W)/g;if(Q<0||Q>=p.outWidth||Math.floor(Q)!==Q)continue;let ne=A*b-1-f.get(F,j,Q,_),oe=z*b+W,Z=ne===oe?1:0;if(Z===0)continue;K+=R.get(F,j,Q,_)*Z}}I.set(K,F,P,T,_)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var yZ={kernelName:nf,backendName:"cpu",kernelFunc:gZ};function AZ(e,t,n,r,s){let a=w.computeStrides(t),o=mx(e,t,n,a,s,"max"),i=x7(e,t,n,s,!0,r);return[o.values,i.values]}var xZ={kernelName:sf,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Re(r,"MaxPoolWithArgmax");let c=l.data.get(r.dataId).values,u=N.computePool2DInfo(r.shape,s,a,[1,1],o),[d,p]=AZ(c,r.shape,r.dtype,i,u),h=l.write(d,u.outShape,r.dtype),f=l.write(p,u.outShape,r.dtype);return[{dataId:h,shape:u.outShape,dtype:r.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};function bZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=w.parseAxisParam(a,s.shape),c=N.computeOutAndReduceShapes(s.shape,i)[1],u=w.sizeFromShape(c),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=Zo({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);let f=gx({inputs:{a:h,b:p},backend:n});d.push(f);let m=Ip({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var vZ={kernelName:ao,backendName:"cpu",kernelFunc:bZ};function wZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;Re(s,"min");let i=w.parseAxisParam(a,s.shape),l=i,c=N.getAxesPermutation(l,s.shape.length),u=s;c!=null&&(u=Gr({inputs:{x:s},backend:n,attrs:{perm:c}}),l=N.getInnerMostAxes(l.length,s.shape.length)),N.assertAxesAreInnerMostDims("min",l,u.shape.length);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=w.sizeFromShape(p),f=w.makeZerosTypedArray(w.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let v=m[x+b];(Number.isNaN(v)||v<A)&&(A=v)}f[y]=A}c!=null&&n.disposeIntermediateTensorInfo(u);let g=n.makeTensorInfo(d,u.dtype,f);if(o){let y=N.expandShapeToKeepDim(d,i),x=Ot({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var kZ={kernelName:oo,backendName:"cpu",kernelFunc:wZ};function IZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:o}=r;Re(s,"mirrorPad");let i=a.map((A,b)=>A[0]+s.shape[b]+A[1]),l=a.map(A=>A[0]),c=a.map((A,b)=>A[0]+s.shape[b]),u=o==="reflect"?0:1,d=n.data.get(s.dataId).values,p=s.shape.length,h=w.computeStrides(s.shape),f=w.sizeFromShape(i),m=i.length,g=w.computeStrides(i),y=w.getTypedArrayFromDType(s.dtype,f);for(let A=0;A<f;A++){let b=w.indexToLoc(A,m,g);for(let C=0;C<m;C++)b[C]<l[C]?b[C]=l[C]*2-b[C]-u:b[C]>=c[C]&&(b[C]=(c[C]-1)*2-b[C]+u);b=b.map((C,I)=>C-l[I]);let v=w.locToIndex(b,p,h);y[A]=d[v]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}var SZ={kernelName:lo,backendName:"cpu",kernelFunc:IZ},CZ=en((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),TZ=kn(Cu,CZ),NZ={kernelName:Cu,backendName:"cpu",kernelFunc:TZ},EZ=fi(Dh());function S7(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=s.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=w.parseAxisParam([i],s.shape),c=I7({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),u=N.expandShapeToKeepDim(c.shape,l),d=Ot({inputs:{x:c},backend:n,attrs:{shape:u}}),p=hx({inputs:{a:s,b:d},backend:n}),h=OS({inputs:{x:p},backend:n}),f=Ip({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=Ot({inputs:{x:f},backend:n,attrs:{shape:u}}),g=gx({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var RZ={kernelName:wo,backendName:"cpu",kernelFunc:S7};function _Z(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r;Re(s,"multinomial");let l=i?s:S7({inputs:{logits:s},backend:n,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],d=n.data.get(l.dataId).values,p=[c,a],h=w.makeZerosTypedArray(w.sizeFromShape(p),"int32");for(let f=0;f<c;++f){let m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let A=1;A<g.length;++A)g[A]=g[A-1]+d[m+A];let y=EZ.alea(o.toString()),x=f*a;for(let A=0;A<a;++A){let b=y();h[x+A]=g.length;for(let v=0;v<g.length;v++)if(b<g[v]){h[x+A]=v;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",h)}var DZ={kernelName:af,backendName:"cpu",kernelFunc:_Z},PZ=ts.nonMaxSuppressionV3Impl;function $Z(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=r;Re(s,"NonMaxSuppression");let c=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,{selectedIndices:d}=PZ(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var FZ={kernelName:Fi,backendName:"cpu",kernelFunc:$Z},OZ=ts.nonMaxSuppressionV4Impl;function MZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=r;Re(s,"NonMaxSuppressionPadded");let u=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:h}=OZ(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var zZ={kernelName:Tu,backendName:"cpu",kernelFunc:MZ},LZ=ts.nonMaxSuppressionV5Impl;function BZ(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=r;Re(s,"NonMaxSuppressionWithScore");let u=n.data.get(s.dataId).values,d=n.data.get(a.dataId).values,p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=LZ(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var WZ={kernelName:Oi,backendName:"cpu",kernelFunc:BZ};function VZ(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r;Re(s,"oneHot");let l=w.sizeFromShape(s.shape),c=new Float32Array(l*a);c.fill(i);let u=n.data.get(s.dataId).values;for(let d=0;d<l;++d)u[d]>=0&&u[d]<a&&(c[d*a+u[d]]=o);return n.makeTensorInfo([...s.shape,a],"int32",c)}var UZ={kernelName:zi,backendName:"cpu",kernelFunc:VZ};function Wm(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let s=Tl({inputs:{input:r},backend:n}),a=Wm({inputs:{x:s},backend:n}),o=cc({inputs:{input:r},backend:n}),i=Wm({inputs:{x:o},backend:n}),l=Sr({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return xx({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var GZ={kernelName:tl,backendName:"cpu",kernelFunc:Wm};function C7(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let s=Tl({inputs:{input:r},backend:n}),a=C7({inputs:{x:s},backend:n}),o=cc({inputs:{input:r},backend:n}),i=Wm({inputs:{x:o},backend:n}),l=Sr({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return xx({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var HZ={kernelName:Mi,backendName:"cpu",kernelFunc:C7};function T7(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return Bm({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Bm({inputs:{input:u},backend:n,attrs:{dim:s}});return i.push(d),d}),c=dc({inputs:l,backend:n,attrs:{axis:s}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var jZ={kernelName:Li,backendName:"cpu",kernelFunc:T7};function qZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;Re(s,"pad");let i=a.map((x,A)=>x[0]+s.shape[A]+x[1]),l=a.map(x=>x[0]),c=n.data.get(s.dataId).values,u=w.sizeFromShape(s.shape),d=s.shape.length,p=w.computeStrides(s.shape),h=w.sizeFromShape(i),f=i.length,m=w.computeStrides(i),g=w.getTypedArrayFromDType(s.dtype,h);o!==0&&g.fill(o);for(let x=0;x<u;x++){let b=w.indexToLoc(x,d,p).map((C,I)=>C+l[I]),v=w.locToIndex(b,f,m);g[v]=c[x]}return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}var N7={kernelName:co,backendName:"cpu",kernelFunc:qZ},XZ=en((e,t)=>Math.pow(e,t)),KZ=kn(po,XZ),ZZ={kernelName:po,backendName:"cpu",kernelFunc:KZ};function YZ(e){let{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:o}=n,i=dx(r,s,o,a);return t.makeTensorInfo([i.length],a,i)}var JZ={kernelName:Nu,backendName:"cpu",kernelFunc:YZ},QZ=gt(Eu,e=>1/e),eY={kernelName:Eu,backendName:"cpu",kernelFunc:QZ};function tY(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;Re(s,"resizeBilinear");let l=w.computeStrides(s.shape),[c,u]=i,[d,p,h,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(w.sizeFromShape([d,c,u,f])),y=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],A=0,b=y[0]/x[0],v=y[1]/x[1];for(let C=0;C<d;C++)for(let I=0;I<c;I++){let E;o?E=b*(I+.5)-.5:E=b*I;let R=Math.max(0,Math.floor(E)),F=E-R,_=Math.min(p-1,Math.ceil(E)),P=C*l[0]+R*l[1],T=C*l[0]+_*l[1];for(let O=0;O<u;O++){let G;o?G=v*(O+.5)-.5:G=v*O;let K=Math.max(0,Math.floor(G)),z=G-K,j=Math.min(h-1,Math.ceil(G)),W=P+K*l[2],Q=T+K*l[2],ne=P+j*l[2],oe=T+j*l[2];for(let Z=0;Z<f;Z++){let ae=m[W+Z],se=m[Q+Z],me=m[ne+Z],be=m[oe+Z],Ne=ae+(me-ae)*z,Se=se+(be-se)*z,Pe=Ne+(Se-Ne)*F;g[A++]=Pe}}}return n.makeTensorInfo([d,c,u,f],"float32",g)}var nY={kernelName:mo,backendName:"cpu",kernelFunc:tY};function rY(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;Re([a,s],"resizeBilinearGrad");let i=w.computeStrides(s.shape),[l,c,u,d]=s.shape,[,p,h]=a.shape,f=new Float32Array(l*c*u*d),m=[o&&p>1?c-1:c,o&&h>1?u-1:u],g=[o&&p>1?p-1:p,o&&h>1?h-1:h],y=m[0]/g[0],x=m[1]/g[1],A=n.data.get(a.dataId).values,b=0;for(let v=0;v<l;v++){let C=v*i[0];for(let I=0;I<p;I++){let E=I*y,R=Math.floor(E),F=Math.min(Math.ceil(E),c-1),_=C+R*i[1],P=C+F*i[1],T=E-R,O=1-T;for(let G=0;G<h;G++){let K=G*x,z=Math.floor(K),j=Math.min(Math.ceil(K),u-1),W=K-z,Q=1-W,ne=_+z*i[2],oe=_+j*i[2],Z=P+z*i[2],ae=P+j*i[2],se=O*Q,me=O*W,be=T*Q,Ne=T*W;for(let Se=0;Se<d;Se++){let Pe=A[b++];f[ne+Se]+=Pe*se,f[oe+Se]+=Pe*me,f[Z+Se]+=Pe*be,f[ae+Se]+=Pe*Ne}}}}return n.makeTensorInfo([l,u,c,d],"float32",f)}var sY={kernelName:lf,backendName:"cpu",kernelFunc:rY};function aY(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;Re(s,"resizeNearestNeighbor");let l=w.computeStrides(s.shape),[c,u]=i,[d,p,h,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(d*c*u*f),y=[a&&c>1?p-1:p,a&&u>1?h-1:h],x=[a&&c>1?c-1:c,a&&u>1?u-1:u],A=y[0]/x[0],b=y[1]/x[1],v=0;for(let C=0;C<d;C++){let I=C*l[0];for(let E=0;E<c;E++){let R=o?A*(E+.5):A*E,F=Math.min(p-1,a?Math.round(R):Math.floor(R));o&&(F=Math.max(0,F));let _=I+F*l[1];for(let P=0;P<u;P++){let T=o?b*(P+.5):b*P,O=Math.min(h-1,a?Math.round(T):Math.floor(T));o&&(O=Math.max(0,O));let G=_+O*l[2];for(let K=0;K<f;K++){let z=m[G+K];g[v++]=z}}}}return n.makeTensorInfo([d,c,u,f],s.dtype,g)}var oY={kernelName:Ru,backendName:"cpu",kernelFunc:aY};function iY(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;Re([a,s],"resizeNearestNeighborGrad");let i=w.computeStrides(s.shape),l=w.computeStrides(a.shape),[c,u,d,p]=s.shape,[,h,f]=a.shape,m=new Float32Array(c*u*d*p),g=n.data.get(a.dataId).values,y=[o&&h>1?u-1:u,o&&f>1?d-1:d],x=[o&&h>1?h-1:h,o&&f>1?f-1:f],A=y[0]/x[0],b=y[1]/x[1],v=1/A,C=1/b,I=Math.ceil(v)*2+2,E=Math.ceil(C)*2+2;for(let R=0;R<c;R++){let F=R*i[0];for(let _=0;_<u;_++){let P=F+_*i[1],T=Math.floor(_*v),O=Math.floor(T-I/2);for(let G=0;G<d;G++){let K=P+G*i[2],z=Math.floor(G*C),j=Math.floor(z-E/2);for(let W=0;W<p;W++){let Q=0;for(let ne=0;ne<I;ne++){let oe=ne+O;if(oe<0||oe>=h)continue;let Z=F+oe*l[1],ae=oe*A,se=Math.min(u-1,o?Math.round(ae):Math.floor(ae));if(_===se)for(let me=0;me<E;me++){let be=me+j;if(be<0||be>=f)continue;let Ne=Z+be*l[2],Se=be*b,Pe=Math.min(d-1,o?Math.round(Se):Math.floor(Se));G===Pe&&(Q+=g[Ne+W])}}m[K+W]=Q}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}var lY={kernelName:of,backendName:"cpu",kernelFunc:iY};function uY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;Re(s,"reverse");let o=s.shape.length,i=w.parseAxisParam(a,s.shape);if(o===0)return Us({inputs:{x:s},backend:n});let l=new sn(s.shape,s.dtype),c=n.bufferSync(s);for(let u=0;u<l.size;u++){let d=l.indexToLoc(u),p=d.slice();i.forEach(h=>p[h]=s.shape[h]-1-p[h]),l.set(c.get(...p),...d)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var cY={kernelName:Vi,backendName:"cpu",kernelFunc:uY},dY={kernelName:nl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,l=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(r.shape)),[c,u,d,p]=r.shape,[h,f]=N.getImageCenter(o,u,d),m=255,g=Math.sin(s),y=Math.cos(s),x=i.data.get(r.dataId).values;for(let b=0;b<c;b++){let v=b*d*u*p;for(let C=0;C<u;C++){let I=C*(d*p);for(let E=0;E<d;E++){let R=E*p;for(let F=0;F<p;F++){let _=[c,C,E,F],P=_[2],T=_[1],O=(P-h)*y-(T-f)*g,G=(P-h)*g+(T-f)*y;O=Math.round(O+h),G=Math.round(G+f);let K=a;if(typeof a!="number"&&(F===3?K=m:K=a[F]),O>=0&&O<d&&G>=0&&G<u){let j=G*(d*p),W=O*p,Q=v+j+W+F;K=x[Q]}let z=v+I+R+F;l[z]=K}}}}return{dataId:i.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},pY=gt(Ui,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),hY={kernelName:Ui,backendName:"cpu",kernelFunc:pY};function E7(e,t,n,r,s,a,o,i,l,c){let u=[r/s,s],d=e.values,p=t.values;if(r===0)return Le(n,t.dtype);let h=Le(u,t.dtype);h.values.fill(l);for(let f=0;f<a;f++){let m=[],g=0;for(let y=0;y<o;y++){let x=d[f*o+y];m.push(x),g+=x*i[y]}if(g<0||g>=r/s)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<s;y++)c?h.values[g*s+y]+=p[f*s+y]:h.values[g*s+y]=t.rank===0?p[0]:p[f*s+y]}return h}function fY(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,s,o),p=!0,h=n.bufferSync(s),f=n.bufferSync(a),m=E7(h,f,o,d,c,l,i,u,0,p);return n.makeTensorInfo(o,m.dtype,m.values)}var mY={kernelName:Gi,backendName:"cpu",kernelFunc:fY};function gY(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;Re([r,s,a],"select");let o=r.shape.length,i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,u=Wn(s.dtype,a.dtype),d=w.makeZerosTypedArray(w.sizeFromShape(s.shape),u),p=0,h=o===0||o>1||s.shape.length===1?1:w.sizeFromShape(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?d[p++]=l[f]:d[p++]=c[f];return n.makeTensorInfo(s.shape,u,d)}var yY={kernelName:Hi,backendName:"cpu",kernelFunc:gY},AY=N.SELU_SCALEALPHA,xY=N.SELU_SCALE,bY=gt(_u,e=>e>=0?xY*e:AY*(Math.exp(e)-1)),vY={kernelName:_u,backendName:"cpu",kernelFunc:bY},wY=gt(Du,e=>e<0?-1:e>0?1:0),kY={kernelName:Du,backendName:"cpu",kernelFunc:wY},IY=gt(Ao,e=>Math.sin(e)),SY={kernelName:Ao,backendName:"cpu",kernelFunc:IY},CY=gt(qi,e=>Math.sinh(e)),TY={kernelName:qi,backendName:"cpu",kernelFunc:CY},NY=11920928955078125e-23,R7=Math.log(NY)+2,EY=gt(Pu,e=>{let t=e>-R7,n=e<R7,r=Math.exp(e),s;return n?s=r:t?s=e:s=Math.log(1+r),s}),RY={kernelName:Pu,backendName:"cpu",kernelFunc:EY};function _Y(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;Re([s],"spaceToBatchND");let i=w.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<s.shape.length;++C)l.push([0,0]);let c=N7.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=Ot({inputs:{x:c},backend:n,attrs:{shape:u}}),x=Gr({inputs:{x:m},backend:n,attrs:{perm:d}}),v=Ot({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),v}var DY={kernelName:Xi,backendName:"cpu",kernelFunc:_Y};function PY(e){let{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[d,p,h,f,m]=t7(i,r.shape,r.dtype,l,s.dtype,c,u);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var $Y={kernelName:Cd,backendName:"cpu",kernelFunc:PY};function FY(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[c,u,d]=n7(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(u,r.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var OY={kernelName:$u,backendName:"cpu",kernelFunc:FY};function MY(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[c,u]=px(o,r.shape,r.dtype,i,l,!0);return n.makeTensorInfo(u,r.dtype,c)}var zY={kernelName:Td,backendName:"cpu",kernelFunc:MY};function LY(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[c,u]=px(o,r.shape,r.dtype,i,l);return n.makeTensorInfo(u,r.dtype,c)}var BY={kernelName:Nd,backendName:"cpu",kernelFunc:LY};function WY(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=N.calculateShapes(a,s,i),h=!1,f=n.bufferSync(s),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],y=E7(f,m,i,p,u,c,l,d,g,h);return n.makeTensorInfo(i,y.dtype,y.values)}var VY={kernelName:Ed,backendName:"cpu",kernelFunc:WY};function UY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=w.parseAxisParam(o,s.shape)[0],l=N.prepareSplitSize(s,a,i),c=new Array(s.shape.length).fill(0),u=s.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=Nl({inputs:{x:s},backend:n,attrs:{begin:c,size:p}});return c[i]+=d,h})}var GY={kernelName:Ki,backendName:"cpu",kernelFunc:UY},HY={kernelName:Fu,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;Re(n,"square");let s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){let l=s[i];a[i]=l*l}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},jY=gt(To,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),qY={kernelName:To,backendName:"cpu",kernelFunc:jY};function XY(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=r;Re(s,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(s.shape,a,o,i,l,c,u,d,p),v;if(m)v=Ot({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){w.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let C=zt.computeOutShape(x,A,b),I=Nl({inputs:{x:s},backend:n,attrs:{begin:x,size:C}});v=Ot({inputs:{x:I},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(I)}else{let C=n.bufferSync(s),I=s7(h,C,b,x);v=n.makeTensorInfo(f,I.dtype,I.values)}return v}var KY={kernelName:Zi,backendName:"cpu",kernelFunc:XY};function ZY(e){let{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=r,{data:u,dataSplits:d}=t,p=n.data.get(u.dataId).values,h=n.data.get(d.dataId).values,[f,m]=a7(p,h,s,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var YY={kernelName:Rd,backendName:"cpu",kernelFunc:ZY};function JY(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[c,u,d]=o7(i,l,s),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var QY={kernelName:uf,backendName:"cpu",kernelFunc:JY};function eJ(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=i7(o,s);return n.makeTensorInfo(a.shape,"int32",i)}var tJ={kernelName:cf,backendName:"cpu",kernelFunc:eJ},nJ=gt(Yi,e=>Math.tan(e)),rJ={kernelName:Yi,backendName:"cpu",kernelFunc:nJ},sJ=gt(So,e=>Math.tanh(e)),aJ={kernelName:So,backendName:"cpu",kernelFunc:sJ};function oJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;Re(s,"tile");let o=u7(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var iJ={kernelName:Js,backendName:"cpu",kernelFunc:oJ};function lJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r;Re(s,"topk");let i=n.data.get(s.dataId).values,[l,c]=d7(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}var uJ={kernelName:Ji,backendName:"cpu",kernelFunc:lJ};function cJ(e){let{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=n,[u,d,p,h]=s.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=w.computeStrides(s.shape),x=y[0],A=y[1],b=y[2],v=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(g));v.fill(l);let C=r.data.get(s.dataId).values,I=r.data.get(a.dataId).values;for(let R=0;R<u;++R){let F=a.shape[0]===1?I:I.subarray(R*8,R*8+8);for(let _=0;_<f;++_)for(let P=0;P<m;++P)for(let T=0;T<h;++T){let O,G=F[6]*P+F[7]*_+1;if(G===0)continue;let K=(F[0]*P+F[1]*_+F[2])/G,z=(F[3]*P+F[4]*_+F[5])/G,j=_7(K,p,i),W=_7(z,d,i);switch(o){case"nearest":O=gJ(C,d,p,x,A,b,R,W,j,T,l);break;case"bilinear":O=yJ(C,d,p,x,A,b,R,W,j,T,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let Q=R*x+_*A+P*b+T;v[Q]=O}return r.makeTensorInfo(g,s.dtype,v)}return{dataId:r.write(v,g,s.dtype),shape:s.shape,dtype:s.dtype}}var dJ={kernelName:Qi,backendName:"cpu",kernelFunc:cJ};function _7(e,t,n){switch(n){case"reflect":return pJ(e,t);case"wrap":return hJ(e,t);case"nearest":return mJ(e,t);case"constant":default:return fJ(e,t)}}function pJ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return w.clamp(0,n,t-1)}function hJ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{let r=t-1;n-=t*Math.trunc(n/r)}return w.clamp(0,n,t-1)}function fJ(e,t){return e}function mJ(e,t){return w.clamp(0,e,t-1)}function Sp(e,t,n,r,s,a,o,i,l,c,u){let d=o*r+i*s+l*a+c;return 0<=i&&i<t&&0<=l&&l<n?e[d]:u}function gJ(e,t,n,r,s,a,o,i,l,c,u){let d=Math.round(i),p=Math.round(l);return Sp(e,t,n,r,s,a,o,d,p,c,u)}function yJ(e,t,n,r,s,a,o,i,l,c,u){let d=Math.floor(i),p=Math.floor(l),h=d+1,f=p+1,m=(f-l)*Sp(e,t,n,r,s,a,o,d,p,c,u)+(l-p)*Sp(e,t,n,r,s,a,o,d,f,c,u),g=(f-l)*Sp(e,t,n,r,s,a,o,h,p,c,u)+(l-p)*Sp(e,t,n,r,s,a,o,h,f,c,u);return(h-i)*m+(i-d)*g}function AJ(e){let{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Re(a,"unique");let o=r.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:c}=p7(o,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}var xJ={kernelName:df,backendName:"cpu",kernelFunc:AJ};function bJ(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s.shape.length,i=s.shape[a],l=new Array(o-1),c=0;for(let h=0;h<o;h++)h!==a&&(l[c++]=s.shape[h]);let u=new Array(o).fill(0),d=s.shape.slice();d[a]=1;let p=new Array(i);for(let h=0;h<p.length;h++){u[a]=h;let f=Nl({inputs:{x:s},backend:n,attrs:{begin:u,size:d}});p[h]=Ot({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return p}var vJ={kernelName:el,backendName:"cpu",kernelFunc:bJ};function wJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r;Re(s,"unsortedSegmentSum");let i=s.shape.length,l=a.shape.length,c=[],u=[],d=i-l,p=a;for(let f=0;f<d;++f){let m=Bm({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,u.push(m)}for(let f=0;f<o;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=$S({inputs:{a:g,b:p},backend:n}),x=Zo({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),A=zm({inputs:{a:x,b:s},backend:n}),b=Ip({inputs:{x:A},backend:n,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(g),u.push(y),u.push(x),u.push(A),u.push(b)}let h=T7({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var kJ={kernelName:_d,backendName:"cpu",kernelFunc:wJ},IJ=[_q,kj,Pq,Fq,Ej,Mq,Lq,Wq,Uq,Hq,qq,Kq,Yq,eX,nX,aX,iX,uX,dX,Eq,hX,mX,yX,xX,Tj,_j,vX,Ij,kX,SX,CX,NX,RX,DX,$X,OX,zX,BX,VX,GX,jX,XX,KX,YX,QX,tK,nK,rK,sK,iK,wq,uK,Dj,yK,Pj,AK,Fj,IK,SK,TK,Mj,RK,DK,$K,OK,zK,Lj,Wj,Sj,BK,IX,VK,GK,jK,kq,Uj,Hj,XK,qj,ZK,QK,tZ,sZ,oZ,lZ,uZ,Kj,dZ,hZ,mZ,yZ,xZ,vZ,kZ,Yj,SZ,NZ,DZ,Qj,tq,FZ,zZ,WZ,rq,UZ,HZ,jZ,N7,ZZ,Sq,oq,JZ,Cj,yx,eY,Cq,Tq,Nq,nY,sY,oY,lY,cY,dY,hY,lq,mY,yY,vY,cq,kY,SY,TY,dq,RZ,RY,DY,$Y,OY,zY,BY,VY,GY,fq,HY,gq,qY,KY,YY,QY,tJ,bq,aK,rJ,aJ,iJ,uJ,dJ,sq,xJ,vJ,kJ,GZ];for(let e of IJ)Jr(e);var D7={};Me(D7,{assertNotComplex:()=>hc,bindCanvasToFramebuffer:()=>OJ,bindColorTextureToFramebuffer:()=>jm,bindTextureToProgramUniformSampler:()=>q7,bindTextureUnit:()=>G7,bindVertexBufferToProgramAttribute:()=>wx,callAndCheck:()=>ke,canBeRepresented:()=>P7,createFragmentShader:()=>O7,createFramebuffer:()=>U7,createProgram:()=>M7,createStaticIndexBuffer:()=>B7,createStaticVertexBuffer:()=>L7,createTexture:()=>W7,createVertexShader:()=>F7,getBatchDim:()=>Rl,getExtensionOrThrow:()=>Tp,getFramebufferErrorMessage:()=>X7,getMaxTexturesInShader:()=>J7,getNumChannels:()=>$J,getProgramUniformLocation:()=>j7,getProgramUniformLocationOrThrow:()=>H7,getRowsCols:()=>_l,getShapeAs3D:()=>qm,getTextureShapeFromLogicalShape:()=>Z7,getWebGLDisjointQueryTimerVersion:()=>Q7,getWebGLErrorMessage:()=>$7,getWebGLMaxTextureSize:()=>Y7,hasExtension:()=>Hr,isCapableOfRenderingToFloatTexture:()=>eC,isDownloadFloatTextureEnabled:()=>tC,isReshapeFree:()=>Ep,isWebGLFenceEnabled:()=>nC,isWebGLVersionEnabled:()=>Ix,linkProgram:()=>z7,resetMaxTextureSize:()=>MJ,resetMaxTexturesInShader:()=>zJ,unbindColorTextureFromFramebuffer:()=>kx,unbindTextureUnit:()=>FJ,validateFramebuffer:()=>Np,validateProgram:()=>Hm,validateTextureSize:()=>V7});var El={},bx={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Vm(e,t){El[e]=t}function Ns(e,t){if(!(e in El)){let r=CJ(e,t);if(r!==null)El[e]=r;else return console.log("Could not get context for WebGL version",e),null}let n=El[e];return n==null||n.isContextLost()?(delete El[e],Ns(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),El[e])}function SJ(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function CJ(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?SJ(e):t;return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete El[e]},!1),e===1?n.getContext("webgl",bx)||n.getContext("experimental-webgl",bx):n.getContext("webgl2",bx)}var Um=(e=>(e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH",e))(Um||{}),as=(e=>(e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD",e))(as||{}),Fn=(e=>(e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",e))(Fn||{});function Cp(e,t){return[t,e]}function TJ(e,t){return e*t}function Gm(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function pc(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function NJ(e,t){let[n,r]=pc(e,t);return n*r*4}function vx(e,t){let n=e,r,s,a,o,i,l,c,u,d,p;return Y().getNumber("WEBGL_VERSION")===2?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,u=1,d=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function ke(e,t){let n=t();return Y().getBool("DEBUG")&&EJ(e),n}function EJ(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+$7(e,t))}var RJ=596e-10,_J=65504;function P7(e){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||RJ<Math.abs(e)&&Math.abs(e)<_J)}function $7(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Tp(e,t){return la(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function F7(e,t){let n=la(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ke(e,()=>e.shaderSource(n,t)),ke(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function O7(e,t){let n=la(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ke(e,()=>e.shaderSource(n,t)),ke(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw PJ(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var DJ=/ERROR: [0-9]+:([0-9]+):/g;function PJ(e,t){let n=DJ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],s=e.split(`
`),a=s.length.toString().length+2,o=s.map((d,p)=>w.rightPad((p+1).toString(),a)+d),i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);let l=o.slice(0,r-1),c=o.slice(r-1,r),u=o.slice(r);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function M7(e){return la(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function z7(e,t){if(ke(e,()=>e.linkProgram(t)),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Hm(e,t){if(ke(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function L7(e,t){let n=la(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),ke(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function B7(e,t){let n=la(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),ke(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function $J(){return Y().getNumber("WEBGL_VERSION")===2?1:4}function W7(e){return la(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function V7(e,t){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function U7(e){return la(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function wx(e,t,n,r,s,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),ke(e,()=>e.vertexAttribPointer(i,s,e.FLOAT,!1,a,o)),ke(e,()=>e.enableVertexAttribArray(i)),!0)}function G7(e,t,n){K7(e,n),ke(e,()=>e.activeTexture(e.TEXTURE0+n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function FJ(e,t){K7(e,t),ke(e,()=>e.activeTexture(e.TEXTURE0+t)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function H7(e,t,n){return la(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function j7(e,t,n){return e.getUniformLocation(t,n)}function q7(e,t,n,r){ke(e,()=>G7(e,t,r)),ke(e,()=>e.uniform1i(n,r))}function OJ(e){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ke(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function jm(e,t,n){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),ke(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function kx(e,t){ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ke(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Np(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+X7(e,t))}function X7(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function la(e,t,n){let r=ke(e,()=>t());if(r==null)throw new Error(n);return r}function K7(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let s=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${s}.`)}}function Rl(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function _l(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function qm(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Rl(e),..._l(e)]),t}function Z7(e,t=!1){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((s,a)=>a>=e.length-2?w.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let r=w.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let s=Rl(e),a=2,o=2;return e.length&&([a,o]=_l(e)),r=s*(a/2)*(o/2),w.sizeToSquarishShape(r).map(i=>i*2)}return w.sizeToSquarishShape(r)}function Xm(e){return e%2===0}function Ep(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||Xm(n)&&Xm(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Xm(e[0])&&Xm(t[0])}var Km,Zm;function Y7(e){if(Km==null){let t=Ns(e);Km=t.getParameter(t.MAX_TEXTURE_SIZE)}return Km}function MJ(){Km=null}function zJ(){Zm=null}function J7(e){if(Zm==null){let t=Ns(e);Zm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Zm)}function Q7(e){if(e===0)return 0;let t,n=Ns(e);return Hr(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Hr(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Hr(e,t){return e.getExtension(t)!=null}function Ix(e){try{if(Ns(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function eC(e){if(e===0)return!1;let t=Ns(e);if(e===1){if(!Hr(t,"OES_texture_float"))return!1}else if(!Hr(t,"EXT_color_buffer_float"))return!1;return Sx(t)}function tC(e){if(e===0)return!1;let t=Ns(e);if(e===1){if(!Hr(t,"OES_texture_float")||!Hr(t,"WEBGL_color_buffer_float"))return!1}else{if(Hr(t,"EXT_color_buffer_float"))return Sx(t);let r="EXT_color_buffer_half_float";if(Hr(t,r)){let s=t.getExtension(r);return LJ(t,s)}return!1}return Sx(t)}function Sx(e){let t=vx(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,s,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function LJ(e,t){let n=vx(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}function nC(e){return e!==2?!1:Ns(e).fenceSync!=null}function hc(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var $e=Y();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>Ix(2)?2:Ix(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Y7($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>J7($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=$e.getNumber("WEBGL_VERSION");return e===0?0:Q7(e)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!zu.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>eC($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>tC($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>nC($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>zu.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function jn(){let e,t,n,r,s,a,o,i,l,c;return Y().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}function Dl(e,t,n="index"){let r=w.computeStrides(t);return r.map((s,a)=>{let o=`int ${e[a]} = ${n} / ${s}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${s}`:`index -= ${e[a]} * ${s}`;return`${o}; ${i};`}).join("")}function Ym(e,t,n="index"){let r=w.computeStrides(t);return r.map((s,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function BJ(e,t){let n=e.length,r=e.map(a=>`${t}[${a}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}function WJ(e,t,n="index"){let r=e.map((a,o)=>o),s=BJ(r,t);return s.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${s[o]}`,l=o===s.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${s[o]}`:`index -= ${e[o]} * ${s[o]}`;return`${i}; ${l};`}).join("")}function Cx(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Tx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var rC=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:sC}=N;function VJ(e,t,n){let r=[];if(e.forEach(h=>{let f=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Nx(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${h.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{r.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let s=r.join(`
`),a=e.map(h=>UJ(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=jn(),l=jJ(i),c,u,d=KJ(i);return t.isPacked?(c=GJ(t.logicalShape,o,n.enableShapeUniforms),u=XJ(i)):(c=HJ(t.logicalShape,o,n.enableShapeUniforms),u=qJ(i)),n.packedInputs&&(d+=QJ),[d,l,u,s,c,a,n.userCode].join(`
`)}function fc(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return dQ(e,t);case 1:return hQ(e,t);case 2:return mQ(e,t);case 3:return yQ(e,t);case 4:return xQ(e,t);case 5:return bQ(e);case 6:return vQ(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function aC(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return cQ(e);case 1:return pQ(e,t);case 2:return fQ(e,t);case 3:return gQ(e,t);default:return AQ(e,t)}}function UJ(e,t,n=!1,r){let s="";n?s+=aC(e,r):s+=fc(e,r);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?s+=wQ(e,t):s+=kQ(e,t)),s}function GJ(e,t,n){switch(e.length){case 0:return oC();case 1:return eQ(e,t,n);case 2:return lQ(e,t,n);case 3:return nQ(e,t,n);default:return sQ(e,t,n)}}function HJ(e,t,n){switch(e.length){case 0:return oC();case 1:return tQ(e,t,n);case 2:return uQ(e,t,n);case 3:return rQ(e,t,n);case 4:return aQ(e,t,n);case 5:return oQ(e,t);case 6:return iQ(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function jJ(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function qJ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function XJ(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function KJ(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${ZJ}
    ${YJ}
    ${JJ}
  `}var ZJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,YJ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,JJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,QJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function oC(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function eQ(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function tQ(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function nQ(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function rQ(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ym(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=Dl(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function sQ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+i,l=`b${c}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${e.length}(${l});
    }
  `}function aQ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ym(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=Dl(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function oQ(e,t){let n=Dl(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function iQ(e,t){let n=Dl(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function lQ(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let s=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function uQ(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Pl(e){return`offset${e}`}function cQ(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=jn();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function dQ(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[s,a]=e.shapeInfo.texShape;if(s===1&&a===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Pl(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function pQ(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=jn();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function hQ(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${mc(e)}
      }
    `;let s=e.shapeInfo.texShape,a=s[0],o=s[1];if(o===1&&a===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Pl(n);return o===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function fQ(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=jn();if(a!=null&&w.arraysEqual(n,a))return t?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=Math.ceil(n[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function mQ(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(a!=null&&w.arraysEqual(n,a)){if(t)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let p=a[0],h=a[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:o,keptDims:i}=w.squeezeShape(n),l=o;if(l.length<n.length){let p=gc(e,l),h=["row","col"];return`
      ${fc(p,t)}
      float ${s}(int row, int col) {
        return ${s}(${yc(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${mc(e)}
      }
    `;let c=a[0],u=a[1],d=Pl(r);return u===1?t?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${r}, uv);
    }
  `:c===1?t?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${r}, uv);
  }
`}function gQ(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let p=n.slice(1),h=[1,2],f=gc(e,p),m=["b","row","col"];return`
        ${aC(f,t)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${yc(m,h)});
        }
      `}let i=jn();if(t)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;let l=o[0],c=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function yQ(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=w.squeezeShape(n),c=i;if(c.length<n.length){let m=gc(e,c),g=["row","col","depth"];return`
        ${fc(m,t)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${yc(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${mc(e)}
      }
    `;let u=e.shapeInfo.texShape,d=u[0],p=u[1],h=e.shapeInfo.flatOffset;if(p===a&&h==null)return t?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===o&&h==null)return t?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;let f=Pl(r);return t?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function AQ(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=jn();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=l[0],u=l[1],d=Math.ceil(a[o-1]/2),p=d*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${r}(${h}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${s.texture2D}(${n}, uv);
    }
  `}function xQ(e,t){let n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:c}=w.squeezeShape(n);if(l.length<n.length){let x=gc(e,l),A=["row","col","depth","depth2"];return`
      ${fc(x,t)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${yc(A,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${mc(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(h===i&&u==null)return t?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(h===a&&u==null)return t?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=Pl(r);return t?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function bQ(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:c}=w.squeezeShape(t);if(l.length<t.length){let m=gc(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${fc(m)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${yc(g,c)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${s})) +
          depth3;
        ${mc(e)}
      }
    `;let u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===s&&u==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Pl(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${s} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function vQ(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=w.squeezeShape(t);if(s.length<t.length){let g=gc(e,s),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${fc(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${yc(y,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,c=t[2]*l,u=t[1]*c;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${mc(e)}
      }
    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Pl(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function mc(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function wQ(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=sC(e.shapeInfo.logicalShape,t.logicalShape),l=wt(o),c=o-a,u,d=["x","y","z","w","u","v"];a===0?u="":o<2&&i.length>=1?u="coords = 0;":u=i.map(x=>`coords.${d[x+c]} = 0;`).join(`
`);let p="";o<2&&a>0?p="coords":p=e.shapeInfo.logicalShape.map((x,A)=>`coords.${d[A+c]}`).join(", ");let h="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,y=w.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!y)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,A=a-1;i.indexOf(x)>-1&&i.indexOf(A)>-1?h="return vec4(outputValue.x);":i.indexOf(x)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(A)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${r}(${p});
      ${h}
    }
  `}function kQ(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(o,a))return`
      float ${s}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=wt(l),u=sC(e.shapeInfo.logicalShape,t.logicalShape),d=l-i,p,h=["x","y","z","w","u","v"];i===0?p="":l<2&&u.length>=1?p="coords = 0;":p=u.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+d]}`).join(", "),`
    float ${s}() {
      ${c} coords = getOutputCoords();
      ${p}
      return get${r}(${f});
    }
  `}function wt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Nx(e,t,n){let{newShape:r,keptDims:s}=w.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):r,l=!e&&a>1&&!w.arraysEqual(t,n)&&r.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:s}}function gc(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function yc(e,t){return t.map(n=>e[n]).join(", ")}function IQ(e,t,n,r){let s=n.map((b,v)=>{let C={logicalShape:b.shape,texShape:b.isUniform?null:b.texData.texShape,isUniform:b.isUniform,isPacked:b.isUniform?!1:b.texData.isPacked,flatOffset:null};return b.texData!=null&&b.texData.slice!=null&&b.texData.slice.flatOffset>0&&(C.flatOffset=b.texData.slice.flatOffset),{name:t.variableNames[v],shapeInfo:C}}),a=s.map(b=>b.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=VJ(s,o,t),l=O7(e.gl,i),c=e.createProgram(l),u=null,d=e.getUniformLocation(c,"NAN",!1);Y().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(c,"INFINITY",!1));let p=!1,h={},f={},m={};for(let b=0;b<t.variableNames.length;b++){let v=t.variableNames[b];h[v]=e.getUniformLocation(c,v,p),h[`offset${v}`]=e.getUniformLocation(c,`offset${v}`,p),t.enableShapeUniforms&&(f[`${v}Shape`]=e.getUniformLocation(c,`${v}Shape`,p),m[`${v}TexShape`]=e.getUniformLocation(c,`${v}TexShape`,p))}let g,y,x;t.enableShapeUniforms&&(g=e.getUniformLocation(c,"outShape",p),x=e.getUniformLocation(c,"outShapeStrides",p),y=e.getUniformLocation(c,"outTexShape",p));let A=[];return t.customUniforms&&t.customUniforms.forEach((b,v)=>{A[v]=e.getUniformLocation(c,b.name,p)}),{program:t,fragmentShader:l,source:i,webGLProgram:c,uniformLocations:h,customUniformLocations:A,inShapeInfos:a,outShapeInfo:o,infLoc:u,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:y}}function iC(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let s=n.logicalShape,a=t[r],o=a.shape;if(!w.arraysEqual(s,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!w.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function SQ(e,t,n,r,s){t.program.enableShapeUniforms||(iC(t.inShapeInfos,n),iC([t.outShapeInfo],[r]));let a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),Y().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,c)=>{let u=t.program.variableNames[c],d=t.uniformLocations[u],p=t.uniformLocations[`offset${u}`],h=t.inShapesLocations[`${u}Shape`],f=t.inTexShapesLocations[`${u}TexShape`];if(h){let{uniformShape:m}=Nx(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),d!=null){if(l.isUniform){if(w.sizeFromShape(l.shape)<2)e.gl.uniform1f(d,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(d,m)}return}l.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,d,c)}});let i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){let l=w.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach((l,c)=>{let u=t.customUniformLocations[c],d=s[c];if(l.type==="float")e.gl.uniform1fv(u,d);else if(l.type==="vec2")e.gl.uniform2fv(u,d);else if(l.type==="vec3")e.gl.uniform3fv(u,d);else if(l.type==="vec4")e.gl.uniform4fv(u,d);else if(l.type==="int")e.gl.uniform1iv(u,d);else if(l.type==="ivec2")e.gl.uniform2iv(u,d);else if(l.type==="ivec3")e.gl.uniform3iv(u,d);else if(l.type==="ivec4")e.gl.uniform4iv(u,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function CQ(e,t,n){let r="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:d}=Nx(e.packedInputs,o.shape,l),p="",h="",f="";if(u.length===1&&e.packedInputs){let v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${v[0]>1}_${v[1]>1}`}else if(u.length===2&&!e.packedInputs)h=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!e.packedInputs){let v=w.computeStrides(u);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}let m=o.shape.length,g=u.length===2&&w.arraysEqual(o.shape,l),y=w.sizeFromShape(o.shape)===1,x=N.getBroadcastDims(o.shape,n.shape),A=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(l,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${m}_${A}_${c?d:""}_${u.length}_${y}_${x}_${g}_${p}_${h}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;r+=`${o.shape}_${l}_${i}`}});let s=e.userCode,a=e.constructor.name;return a+="_"+r+"_"+s+`${Y().getNumber("WEBGL_VERSION")}`,a}function pr(e){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var TQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Um.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=jn();this.outputShape=e,this.enableShapeUniforms=pr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ym(["r","c","d"],e):Dl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},NQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Um.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=jn();this.outputShape=e,this.enableShapeUniforms=pr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ym(["r","c","d"],e):Dl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},EQ=class{constructor(e){this.variableNames=["A"],this.outTexUsage=as.DOWNLOAD;let t=jn();this.outputShape=e,this.userCode=`
      ${rC}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},RQ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=as.DOWNLOAD;let t=jn();this.outputShape=e,this.userCode=`
      ${rC}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},_Q=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=jn();this.outputShape=e,this.enableShapeUniforms=pr(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Tx():Cx(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${r}, 0., 0., 0.);
      }
    `}},DQ=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=jn();this.outputShape=e,this.enableShapeUniforms=pr(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;r+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Tx():Cx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${s};
        }
    `}},lC={};Me(lC,{bindVertexProgramAttributeStreams:()=>yC,createBufferFromOutputTexture:()=>bC,createFloat16MatrixTexture:()=>hC,createFloat16PackedMatrixTexture:()=>gC,createFloat32MatrixTexture:()=>pC,createIndexBuffer:()=>dC,createPackedMatrixTexture:()=>mC,createUnsignedBytesMatrixTexture:()=>fC,createVertexBuffer:()=>cC,createVertexShader:()=>uC,downloadByteEncodedFloatMatrixFromOutputTexture:()=>wC,downloadFloat32MatrixFromBuffer:()=>vC,downloadMatrixFromPackedOutputTexture:()=>IC,downloadPackedMatrixFromBuffer:()=>kC,getInternalFormatForFloat16MatrixTexture:()=>Rx,getInternalFormatForFloat16PackedMatrixTexture:()=>Px,getInternalFormatForFloat32MatrixTexture:()=>Ex,getInternalFormatForPackedMatrixTexture:()=>Dx,getInternalFormatForUnsignedBytesMatrixTexture:()=>_x,uploadDenseMatrixToTexture:()=>AC,uploadPixelDataToTexture:()=>xC});function uC(e){let t=jn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return F7(e,n)}function cC(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return L7(e,t)}function dC(e){let t=new Uint16Array([0,1,2,2,1,3]);return B7(e,t)}function Rp(e,t,n,r,s,a){V7(t,n);let o=W7(e),i=e.TEXTURE_2D;return ke(e,()=>e.bindTexture(i,o)),ke(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ke(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ke(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),ke(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Y().getNumber("WEBGL_VERSION")===1?ke(e,()=>e.texImage2D(i,0,r,t,n,0,s,a,null)):ke(e,()=>e.texStorage2D(i,1,r,t,n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function Ex(e){return e.internalFormatFloat}function pC(e,t,n,r){let[s,a]=Cp(t,n);return Rp(e,s,a,Ex(r),r.textureFormatFloat,e.FLOAT)}function Rx(e){return e.internalFormatHalfFloat}function hC(e,t,n,r){let[s,a]=Cp(t,n);return Rp(e,s,a,Rx(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function _x(e){return e.downloadTextureFormat}function fC(e,t,n,r){let[s,a]=Cp(t,n);return Rp(e,s,a,_x(r),e.RGBA,e.UNSIGNED_BYTE)}function Dx(e){return e.internalFormatPackedFloat}function mC(e,t,n,r){let[s,a]=pc(t,n);return Rp(e,s,a,Dx(r),e.RGBA,e.FLOAT)}function Px(e){return e.internalFormatPackedHalfFloat}function gC(e,t,n,r){let[s,a]=pc(t,n);return Rp(e,s,a,Px(r),e.RGBA,r.textureTypeHalfFloat)}function yC(e,t,n){let r=0,s=3*4,a=3*4+2*4;return ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),wx(e,t,"clipSpacePos",n,3,a,r)&&wx(e,t,"uv",n,2,a,s)}function AC(e,t,n,r,s,a){ke(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(s),Y().getNumber("WEBGL_VERSION")===2?ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,i,o)):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,i,o)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function xC(e,t,n){ke(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Y().getNumber("WEBGL_VERSION")===2?ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Y().getNumber("WEBGL_VERSION")===2?ke(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):ke(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),ke(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function bC(e,t,n,r){let s=e.createBuffer();ke(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s));let i=4*4*t*n;return ke(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),ke(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),ke(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),s}function vC(e,t,n){let r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function wC(e,t,n,r){let[s,a]=Cp(t,n),o=4,i=new Uint8Array(TJ(t*n,o));return ke(e,()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function kC(e,t,n,r,s,a,o,i){let l=e,c=new Float32Array(NJ(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function IC(e,t,n){let r=new Float32Array(t*n*4);return ke(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}var Ac=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Y().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Vm(t,e)):this.gl=Ns(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(Y().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Tp(this.gl,s),Hr(this.gl,a))this.textureHalfFloatExtension=Tp(this.gl,a);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Hr(this.gl,r))this.colorBufferHalfFloatExtension=Tp(this.gl,r);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Hr(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Hr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=cC(this.gl),this.indexBuffer=dC(this.gl),this.framebuffer=U7(this.gl),this.textureConfig=vx(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ke(e,()=>e.finish()),ke(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ke(e,()=>e.deleteFramebuffer(this.framebuffer)),ke(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ke(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ke(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),pC(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),hC(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),fC(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),xC(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),AC(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),gC(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),mC(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(kx(this.gl,this.framebuffer),this.outputTexture=null),ke(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>wC(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return kC(this.gl,e,t,n,r,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return vC(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=bC(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=r.clientWaitSync(s,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},t=s}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>IC(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=uC(t));let n=M7(t);return ke(t,()=>t.attachShader(n,this.vertexShader)),ke(t,()=>t.attachShader(n,e)),z7(t,n),this.debug&&Hm(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=yC(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ke(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Hm(this.gl,this.program),ke(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?H7(this.gl,e,t):j7(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ke(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),q7(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,s]=pc(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Hm(this.gl,this.program),Np(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ke(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ke(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Tp(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=PQ(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),jm(this.gl,e,this.framebuffer),this.debug&&Np(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(jm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Np(this.gl)):kx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;jm(r,e,this.framebuffer),this.debug&&Np(r),this.outputTexture=e,ke(r,()=>r.viewport(0,0,t,n)),ke(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),ke(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function PQ(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:$Q,bincountImpl:SC,bincountReduceImpl:FQ,ceilImpl:OQ,concatImpl:MQ,equalImpl:zQ,expImpl:LQ,expm1Impl:BQ,floorImpl:WQ,gatherNdImpl:VQ,gatherV2Impl:UQ,greaterImpl:GQ,greaterEqualImpl:HQ,lessImpl:jQ,lessEqualImpl:qQ,linSpaceImpl:XQ,logImpl:KQ,maxImpl:ZQ,maximumImpl:YQ,minimumImpl:JQ,multiplyImpl:QQ,negImpl:eee,notEqualImpl:tee,prodImpl:nee,rangeImpl:ree,rsqrtImpl:see,sigmoidImpl:aee,simpleAbsImpl:CC,sliceImpl:oee,sparseFillEmptyRowsImpl:iee,sparseReshapeImpl:lee,sparseSegmentReductionImpl:TC,sqrtImpl:uee,stridedSliceImpl:cee,stringNGramsImpl:dee,stringSplitImpl:pee,stringToHashBucketFastImpl:hee,subImpl:fee,tileImpl:mee,topKImpl:gee,transposeImpl:$x,uniqueImpl:yee}=Om;function NC(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function qn(e,t){return t===1?[e]:NC(e,t)}function Aee(e,t){if(e===1)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var xee=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=pr(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=qn("rc",this.rank),n=wt(this.rank),r=this.getOutOfBoundsCondition(t),s=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${n===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},EC=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=pr(this.outputShape.length);let n="";for(let r=0;r<4;r++){let s="thisRC = rc;";r%2===1&&(s+="thisRC.z += 1;"),r>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${bee(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Tx():Cx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function bee(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?WJ(["r","c","d"],"inputShape"):Dl(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var vee=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=_C(t,n),s=DC(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=RC(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[s].shift();return this.usedTextures[s].push(i),i}let o;return r===Fn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Fn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Fn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Fn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Fn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,r){if(this.freeTextures==null)return;let s=_C(n,r),a=DC(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);let o=RC(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function wee(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function RC(e,t,n,r,s){let a=kee(t,r),o;if(s){let[l,c]=pc(e[0],e[1]);o=l*c}else{let[l,c]=Cp(e[0],e[1]);o=l*c}let i=wee(n,a);return o*i}function kee(e,t){switch(e){case Fn.PACKED_2X2_FLOAT32:return Dx(t);case Fn.PACKED_2X2_FLOAT16:return Px(t);case Fn.UNPACKED_FLOAT32:return Ex(t);case Fn.UNPACKED_FLOAT16:return Rx(t);case Fn.PACKED_4X1_UNSIGNED_BYTE:return _x(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function Iee(e){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Fn.PACKED_2X2_FLOAT32:Fn.UNPACKED_FLOAT32:e?Fn.PACKED_2X2_FLOAT16:Fn.UNPACKED_FLOAT16}function _C(e,t){if(e===as.UPLOAD)return Fn.PACKED_2X2_FLOAT32;if(e===as.RENDER||e==null)return Iee(t);if(e===as.DOWNLOAD||e===as.PIXELS)return Fn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function DC(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var ua=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=pr(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},os="if (isnan(x)) return x;",See="return x;",PC="return abs(x);",Cee="return (x >= 0.0) ? x : (exp(x) - 1.0);",Tee=os+`
  return (x < 0.0) ? 0.0 : x;
`,Nee=os+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,xc="return x;",Eee="return 1.0 / (1.0 + exp(-1.0 * x));",Ree="return x;",_ee=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Dee=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pee=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$ee="return 1.0 / (1.0 + exp(-1.0 * x));",$l=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=pr(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},Fee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=pr(this.outputShape.length);let t=e.length,n=qn("rc",t),r=wt(t),s=Aee(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},Oee=ts.whereImpl,Mee=1e-7,zee=1e-4,Jm={};function Lee(e){return e in Jm||(Jm[e]={}),Jm[e]}var Bee=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Wee=600;function Vee(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*Wee/1024/1024}var $C=class extends au{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Ac)t=e;else{let n=Ns(Y().getNumber("WEBGL_VERSION"),e);t=new Ac(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Ns(Y().getNumber("WEBGL_VERSION"));t=new Ac(n),this.binaryCache=Lee(Y().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new vee(this.gpgpu),this.numMBBeforeWarning=Vee(),this.texData=new pd(this,Dn())}nextDataId(){return $C.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:as.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,s){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:as.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=t;if(a!=null){let d;i?d=new $l(o,xc):d=new ua(o,xc);let p=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:r}],r),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return n;let l=this.activeTimers!=null,c;l&&(c=w.now());let u;if(r==="complex64"){let d=this.readSync(s.real.dataId),p=this.readSync(s.imag.dataId);u=N.mergeRealAndImagArrays(d,p)}else u=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=w.now()-c),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(s!=null){let h;i?h=new $l(r,xc):h=new ua(r,xc);let f=this.runWebGLProgram(h,[{dataId:e,shape:r,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(Y().getBool("DEBUG")&&!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(a!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let h=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(h.texture.texture,...Gm(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];u=N.mergeRealAndImagArrays(f,m)}else if(l==null)u=this.getValuesFromTexture(e);else{let h=w.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){let h=this.gpgpu.gl;ke(h,()=>h.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Dn().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:o,isPacked:i,texture:l}=n;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;i?p=new $l(s,xc):p=new ua(s,xc);let h=this.runWebGLProgram(p,[{dataId:e,shape:s,dtype:o}],o),f=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),f}if(l==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let c=this.decode(e,t.customTexShape),u=Dn().makeTensorFromDataId(c.dataId,c.shape,c.dtype),d=this.texData.get(c.dataId);return{tensorRef:u,...d.texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(r=>w.decodeString(r))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!P7(n))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=w.sizeFromShape(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),p=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Gm(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(d),h}let a=Y().getBool("WEBGL_PACK")&&r===!0,o=a?qm(t):t,i=a?new RQ(o):new EQ(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),u}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;this.programTimersStack==null?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=w.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=w.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(s);o.kernelMs=w.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Bee){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Oee(e.shape,t)}packedUnaryOp(e,t,n){let r=new $l(e.shape,t),s=this.compileAndRun(r,[e],n);return Dn().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let r=CC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,PC,e.dtype);let t=new ua(e.shape,PC),n=this.compileAndRun(t,[e]);return Dn().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let s=n.map(a=>w.encodeString(a));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:r}=this.makeTensorInfo(e,t,n);return Dn().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new Fee(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new xee(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Rl(e.shape),..._l(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Rl(t),..._l(t)],a=new EC(s,n),o=!0,i=[n],l=this.runWebGLProgram(a,[r],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;if(t!=null){let d=w.sizeFromShape(s),p=t[0]*t[1]*4;w.assert(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=qm(s),i;r?i=new NQ(o):i=new TQ(o);let l=!0,c=[t!=null?t:Gm(o)],u=this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,c,l,t);return{dtype:a,shape:s,dataId:u.dataId}}runWebGLProgram(e,t,n,r,s=!1,a){let o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Um.DENSE){let g=a!=null?a:Gm(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),w.sizeFromShape(o.shape)===0)return i.values=w.getTypedArrayFromDType(o.dtype,0),o;let l=[],c=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!Ep(y.shape,g.shape)){let x=g,A=g.shape;g.shape=y.shape,g=this.packedReshape(g,A),l.push(g),y=this.texData.get(g.dataId),x.shape=A}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(o.dataId);let u={shape:o.shape,texData:i,isUniform:!1},d=CQ(e,c,u),p=this.getAndSaveBinary(d,()=>IQ(this.gpgpu,e,c,u)),h=this.activeTimers!=null,f;h&&(f=this.startTimer()),SQ(this.gpgpu,p,c,u,r),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=Y().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&s===!1){let g=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),g}return o}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=X(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Y().getBool("DEBUG");Y().set("DEBUG",!1);let t=this.abs(Te(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Mee:zee}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,c;l&&(c=w.now());let u=t.texShape;if(u==null&&(u=Z7(n,i),t.texShape=u),s!=null){let d=qm(n),p,h=u[1],f=u[0],m=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(i||!m)&&([h,f]=pc(u[0],u[1])),i?p=new DQ(d,m):p=new _Q(d,m);let g=m?[f,h]:u,y=this.makeTensorInfo(g,r),x=this.texData.get(y.dataId);m?x.usage=as.PIXELS:x.usage=as.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),h,f,s);let A=[[f,h]],b=!0,v=this.runWebGLProgram(p,[y],r,A,b),C=this.texData.get(v.dataId);t.texture=C.texture,t.texShape=C.texShape,t.isPacked=C.isPacked,t.usage=C.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(v.dataId),t.values=null,l&&(this.uploadWaitMs+=w.now()-c)}else{let d=this.acquireTexture(u,o,r,i);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),t!=null&&(n.values=Uee(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}},_p=$C;_p.nextDataId=0;function Uee(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}else throw new Error(`Unknown dtype ${t}`)}var Gee="0.0.0";function FC(){Y().set("WEBGL_FORCE_F16_TEXTURES",!0)}zu.isBrowser()&&dl("webgl",()=>new _p,2);var Hee={forceHalfFloat:FC},OC=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,bc=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=pr(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Qm=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Dp=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length;this.enableShapeUniforms=pr(s);let a="";if(r)if(s===0||w.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${wt(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=qn("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${i[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${i[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Cr(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var jee={kernelName:Qa,backendName:"webgl",kernelFunc:Cr};function Jo(e){let{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=Cr({inputs:{x:r},backend:n}),l=Cr({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var qee={kernelName:gd,backendName:"webgl",kernelFunc:Jo},MC="return (a < 0.) ? b * a : a;",zC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Xee(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dp(zC,s.shape,o.shape):new bc(MC,s.shape,o.shape),l=n.runWebGLProgram(i,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var Kee={kernelName:eo,backendName:"webgl",kernelFunc:Xee},LC="return (a < 0.) ? b * a : a;",BC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Zee(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dp(BC,r.shape,s.shape):new bc(LC,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}var Yee={kernelName:ho,backendName:"webgl",kernelFunc:Zee},vc="if (isnan(x)) return x;",Jee=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Qee=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function it({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{let{x:o}=s,i=a,l=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let d=i.texData.get(o.dataId),p=n(d.values,l);return i.makeTensorInfo(o.shape,l,p)}let c=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,u;return c?u=new $l(o.shape,t):u=new ua(o.shape,e),i.runWebGLProgram(u,[o],l)}}function Tn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:c}=o,u=i;if(r&&l.dtype==="complex64"){let f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(A=>{let[b,v]=A,C={dataId:b.dataId,dtype:b.dtype,shape:l.shape},I={dataId:v.dataId,dtype:v.dtype,shape:c.shape},E=new bc(e,l.shape,c.shape);return u.runWebGLProgram(E,[C,I],Wn(b.dtype,v.dtype))}),x=Jo({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),x}let d=a||Wn(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&s!=null){let f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?N.fromUint8ToStringArray(f):f,y=l.dtype==="string"?N.fromUint8ToStringArray(m):m,[x,A]=s(l.shape,c.shape,g,y,d),b=u.makeTensorInfo(A,d),v=u.texData.get(b.dataId);return v.values=x,b}let p=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new Dp(t,l.shape,c.shape,n):h=new bc(e,l.shape,c.shape),u.runWebGLProgram(h,[l,c],d)}}function e0(e,t=!1){if(e==="linear")return t?Ree:See;if(e==="relu")return t?Dee:Tee;if(e==="elu")return t?_ee:Cee;if(e==="relu6")return t?Pee:Nee;if(e==="prelu")return t?BC:LC;if(e==="leakyrelu")return t?zC:MC;if(e==="sigmoid")return t?$ee:Eee;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var WC=class{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=pr(this.outputShape.length);let c=r?e[1]:e[2],u=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",A="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(A=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${u}; i++) {
          int batchA = ${x};
          int batchB = ${A};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},VC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},UC=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},GC="return a * b;";function Fx(e){let{inputs:t,backend:n}=e,{a:r,b:s}=t,a=N.upcastType(r.dtype,s.dtype);if(r.dtype==="complex64"){let i=n.texData.get(r.dataId),l=n.texData.get(s.dataId),c=new UC(VC.REAL,r.shape,s.shape),u=new UC(VC.IMAG,r.shape,s.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Jo({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([r,s])){let i=n.texData.get(r.dataId),l=n.texData.get(s.dataId),[c,u]=QQ(r.shape,s.shape,i.values,l.values,a),d=n.makeTensorInfo(u,a),p=n.texData.get(d.dataId);return p.values=c,d}let o;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Dp(GC,r.shape,s.shape):o=new bc(GC,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}var ete={kernelName:uo,backendName:"webgl",kernelFunc:Fx};function tte(e,t,n){let r=[Rl(e.shape),..._l(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[Rl(t),..._l(t)],o=new EC(a,r),i=!0,l=[r],c=n.runWebGLProgram(o,[s],e.dtype,l,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}function ve(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=w.sizeFromShape(s.shape),l=w.inferFromImplicitShape(a,i),c=w.sizeFromShape(l);w.assert(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=o.texData.get(s.dataId);return u.isPacked&&!Ep(s.shape,l)&&!(u.texture!==null&&Ep(u.shape,l))?tte(s,l,o):(o.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype})}var nte={kernelName:Wi,backendName:"webgl",kernelFunc:ve},HC=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let u=1/t;l=`sumValue += dot(values * ${w.isInt(u)?u.toPrecision(2):u}, ones);`}let c="";s%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},rte=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,u=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(o="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(o="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";s%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${u===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function ste(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],r=N.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function Fl(e,t,n,r){let s=ste(e.shape),a=e;for(let o=0;o<s.length;o++){let{inSize:i,windowSize:l,outSize:c}=s[o],u,d;n==="mean"?u=o===0?new HC({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},i):new HC({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c}):u=new rte({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:c},n),d=a,a=r.runWebGLProgram(u,[a],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return a}var ate=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let r=wt(this.rank),s=ote(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function ote(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}var ite=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=wt(this.rank),s=NC("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=s[c];let o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function t0(e,t,n){let r=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ite(e.shape,t):new ate(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function lte(e,t,n,r){let s=t,a=e.shape.length,o=w.parseAxisParam(s,e.shape),i=o,l=N.getAxesPermutation(i,a),c=l!=null,u=e;c&&(u=t0(e,l,r),i=N.getInnerMostAxes(i.length,a)),N.assertAxesAreInnerMostDims("sum",i,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,i),h=d;n&&(h=N.expandShapeToKeepDim(d,o));let f=w.sizeFromShape(p),g=w.sizeFromShape(e.shape)/f,y=ve({inputs:{x:u},attrs:{shape:[g,f]},backend:r}),x=Wd(e.dtype),A=Fl(y,x,"sum",r),b=ve({inputs:{x:A},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(A),c&&r.disposeIntermediateTensorInfo(u),b}function n0(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return lte(s,a,o,n)}var ute={kernelName:vo,backendName:"webgl",kernelFunc:n0};function Xn(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=s.shape[a[u]];let c;if(o.shouldExecuteOnCPU([s])){let d=o.texData.get(s.dataId).values,p=$x(d,s.shape,s.dtype,a,l);c=o.makeTensorInfo(l,s.dtype);let h=o.texData.get(c.dataId);h.values=p}else c=t0(s,a,o);return c}var cte={kernelName:Co,backendName:"webgl",kernelFunc:Xn},jC=1e3;function r0({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=r?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=r?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),x=w.sizeFromShape(g),b=ll.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let v=n?[y,d,h]:[y,h,d],C=r?[x,f,p]:[x,p,f],I=ve({inputs:{x:e},backend:s,attrs:{shape:v}}),E=ve({inputs:{x:t},backend:s,attrs:{shape:C}}),R=[I,E],F=Math.max(y,x),_=n?I.shape[1]:I.shape[2],P=a!=null,T=o!=null,O=l==="leakyrelu",G=l!=null?e0(l,!0):null,K=P||T||O||G!=null,z;if((h===1||f===1)&&_>jC&&K===!1){let W=I,Q=E;n&&(W=Xn({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),R.push(W)),r&&(Q=Xn({inputs:{x:E},backend:s,attrs:{perm:[0,2,1]}}),R.push(Q));let ne=f!==1,oe=f===1,Z=W;ne&&(Z=ve({inputs:{x:W},backend:s,attrs:{shape:[F,_,1]}}),R.push(Z));let ae=f===1?2:1,se=Q;oe&&(se=ve({inputs:{x:Q},backend:s,attrs:{shape:[F,1,_]}}),R.push(se));let me=Fx({inputs:{a:Z,b:se},backend:s});z=n0({inputs:{x:me},backend:s,attrs:{axis:ae,keepDims:!0}}),R.push(me)}else{let W=Wn(e.dtype,t.dtype),Q=new WC(v,C,[F,h,f],n,r,P,G,T,O),ne=[I,E];if(a!=null&&ne.push(a),T&&ne.push(o),O){let oe=s.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));ne.push(oe),R.push(oe)}z=s.runWebGLProgram(Q,ne,W)}let j=ve({inputs:{x:z},backend:s,attrs:{shape:b}});R.push(z);for(let W of R)s.disposeIntermediateTensorInfo(W);return j}function dte(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=r;return r0({a:s,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var pte={kernelName:No,backendName:"webgl",kernelFunc:dte},qC="return abs(x);";function hte(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let a=n.texData.get(r.dataId),o=CC(a.values);return n.makeTensorInfo(r.shape,r.dtype,o)}let s;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new $l(r.shape,qC):s=new ua(r.shape,qC),n.runWebGLProgram(s,[r],r.dtype)}var fte={kernelName:yi,backendName:"webgl",kernelFunc:hte},mte=os+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,gte=it({opSnippet:mte}),yte={kernelName:uu,backendName:"webgl",kernelFunc:gte},Ate=os+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,xte=it({opSnippet:Ate}),bte={kernelName:cu,backendName:"webgl",kernelFunc:xte},XC="return a + b;",vte=Tn({opSnippet:XC,packedOpSnippet:XC,supportsComplex:!0,cpuKernelImpl:$Q}),wte={kernelName:Zs,backendName:"webgl",kernelFunc:vte},kte=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let r=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},Ite=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let r=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function s0(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return Cr({inputs:{x:r[0]},backend:n});if(r.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(r.length/2),c=s0({inputs:r.slice(0,l),backend:n}),u=s0({inputs:r.slice(l),backend:n});return s0({inputs:[c,u],backend:n})}let s=r.map(l=>l.dtype).reduce((l,c)=>Wn(l,c)),a=r.map(l=>l.shape),i=Y().getBool("WEBGL_PACK")?new Ite(r[0].shape,a):new kte(r[0].shape,a);return n.runWebGLProgram(i,r,s)}var Ste={kernelName:Fa,backendName:"webgl",kernelFunc:s0};function Cte(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=w.parseAxisParam(a,s.shape),c=l,u=N.getAxesPermutation(c,i),d=s;u!=null&&(d=Xn({inputs:{x:s},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("all",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=Fl(m,m.dtype,"all",n),y;if(o){let x=N.expandShapeToKeepDim(p,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var Tte={kernelName:du,backendName:"webgl",kernelFunc:Cte};function Nte(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=w.parseAxisParam(a,s.shape),c=l,u=N.getAxesPermutation(c,i),d=s;u!=null&&(d=Xn({inputs:{x:s},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,i)),N.assertAxesAreInnerMostDims("any",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=Fl(m,m.dtype,"any",n),y;if(o){let x=N.expandShapeToKeepDim(p,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var Ete={kernelName:pu,backendName:"webgl",kernelFunc:Nte},Rte=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},_te=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=wt(i),c=qn("coords",i),u,d;if(a===1){d=i+1;let I=wt(d);u=`
        ${I} sourceLocR = ${I}(${c.join()}, 0);
        ++${c[i-1]};
        ${I} sourceLocG = ${I}(${c.join()}, 0);
        ++${c[i-2]};
        ${I} sourceLocA = ${I}(${c.join()}, 0);
        --${c[i-1]};
        ${I} sourceLocB = ${I}(${c.join()}, 0);
        --${c[i-2]};`}else d=i,u=`
        ${l} sourceLocR = coords;
        ++${c[i-1]};
        ${l} sourceLocG = coords;
        ++${c[i-2]};
        ${l} sourceLocA = coords;
        --${c[i-1]};
        ${l} sourceLocB = coords;
        --${c[i-2]};`;let p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map(I=>"int "+I),m=qn("sourceLocR",d-1).concat("inIdx.r"),g=qn("sourceLocG",d-1).concat("inIdx.g"),y=qn("sourceLocB",d-1).concat("inIdx.b"),x=qn("sourceLocA",d-1).concat("inIdx.a"),A=n==="max"?"greaterThan":"lessThan",b=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()})));`,v=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,C=r?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${c[i-2]} < ${o[i-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function KC(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];r!=null&&(s=r.shape[0],a=r.shape[1]);let o=N.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},l=new Rte(i,n,r==null),c=[t];r!=null&&c.push(r);let u=e.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;let d=KC(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function ZC(e,t,n,r=null){let s=r!=null?r.shape:t.shape,a=s[s.length-1],o=N.computeOptimalWindowSize(a),i=new _te(s,o,n,r==null),l=r==null?[t]:[t,r],c=e.runWebGLProgram(i,l,"int32");if(c.shape.length===t.shape.length){let u=ZC(e,t,n,c);return e.disposeIntermediateTensorInfo(c),u}return c}function YC(e,t,n,r){let s=[n];if(N.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[c,u]=N.computeOutAndReduceShapes(l.shape,s),d=w.sizeFromShape(u),p=ve({inputs:{x:l},backend:e,attrs:{shape:[-1,d]}});a.push(p);let h=KC(e,p,r);a.push(h);let f=ve({inputs:{x:h},backend:e,attrs:{shape:c}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return ZC(e,t,r)}function Dte(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r,o=w.parseAxisParam(a,s.shape),i=N.getAxesPermutation(o,s.shape.length),l=s,c=[];i!=null&&(l=Xn({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=YC(n,l,o[0],"max");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var Pte={kernelName:Oa,backendName:"webgl",kernelFunc:Dte};function $te(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r,o=w.parseAxisParam(a,s.shape),i=N.getAxesPermutation(o,s.shape.length),l=s,c=[];i!=null&&(l=Xn({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=YC(n,l,o[0],"min");return c.forEach(d=>n.disposeIntermediateTensorInfo(d)),u}var Fte={kernelName:hu,backendName:"webgl",kernelFunc:$te},Ote=os+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Mte=it({opSnippet:Ote}),zte={kernelName:fu,backendName:"webgl",kernelFunc:Mte},Lte=os+"return log(x + sqrt(x * x + 1.0));",Bte=it({opSnippet:Lte}),Wte={kernelName:mu,backendName:"webgl",kernelFunc:Bte},Vte=os+`
  return atan(x);
`,Ute=it({opSnippet:Vte}),Gte={kernelName:gu,backendName:"webgl",kernelFunc:Ute},Hte=Jee+`
  return atan(a, b);
`,jte=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Qee+`
  return result;
`,qte=Tn({opSnippet:Hte,packedOpSnippet:jte}),Xte={kernelName:Au,backendName:"webgl",kernelFunc:qte},Kte=os+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Zte=it({opSnippet:Kte}),Yte={kernelName:yu,backendName:"webgl",kernelFunc:Zte},Pp=class{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let I=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${I} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?s?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");let b=Math.floor(a/4)*4,v=a%4,C=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${b};
          if (${v===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${v===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${v===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${A});
      }
    `}},Ox=class{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",A="0.0";if(x||(A="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let C=Math.floor(a/4)*4,I=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${C};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${v});
        }
      }
    `}};function Jte(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;hc(s,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r,c=1;w.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(s.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Cr({inputs:{x:s},backend:n});let d=new Pp(u,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}var Qte={kernelName:Ma,backendName:"webgl",kernelFunc:Jte};function ene(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:c}=r,u=[1,1,1],d=N.computePool3DInfo(s.shape,a,o,u,i,l,c),p=new Ox(d,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}var tne={kernelName:md,backendName:"webgl",kernelFunc:ene},nne=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.top,u=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${u});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},rne=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function sne(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=r,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new rne(p);return n.runWebGLProgram(h,[s],o.dtype)}var ane={kernelName:Lh,backendName:"webgl",kernelFunc:sne};function one(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;hc([s,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:c}=r,u=N.computePool2DInfo(o.shape,i,l,1,c),d=new nne(u);return n.runWebGLProgram(d,[s],o.dtype)}var ine={kernelName:zh,backendName:"webgl",kernelFunc:one};function lne(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return r0({a:s,b:a,transposeA:o,transposeB:i,backend:n})}var une={kernelName:za,backendName:"webgl",kernelFunc:lne},cne=class{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="0.0";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},dne=class{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},pne=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:s,variance:a,offset:o,scale:i}=e;w.assert(s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=[r,s,a],u=null;o!=null&&(u=o.shape,c.push(o));let d=null;i!=null&&(d=i.shape,c.push(i));let p=Y().getBool("WEBGL_PACK_NORMALIZATION")?new dne(r.shape,s.shape,a.shape,u,d,l):new cne(r.shape,s.shape,a.shape,u,d,l);return t.runWebGLProgram(p,c,c[0].dtype)},hne={kernelName:Ya,backendName:"webgl",kernelFunc:pne},fne=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=wt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=mne(this.rank),r,s=e.map((a,o)=>`sourceLoc.${Mx[o]} = start[${o}] + coords.${Mx[o]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},Mx=["x","y","z","w","u","v"];function mne(e){if(e===1)return"sourceLoc";if(e<=6)return Mx.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var gne=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=wt(this.rank),n=qn("coords",this.rank),r=qn("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,u)=>`start[${u}]`).join()});`:e.map((c,u)=>`${r[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function yne(e,t,n,r){let s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=zt.computeFlatOffset(t,w.computeStrides(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};let l=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,l+1),a}function wc(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,l]=zt.parseSliceParams(s,a,o);if(zt.assertParamsValid(s,i,l),w.sizeFromShape(l)===0)return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||s.dtype==="string"){let d=n.texData.get(s.dataId),p=oee(d.values,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,p)}let{isPacked:c}=n.texData.get(s.dataId),u=zt.isSliceContinous(s.shape,i,l);if(c||!u){let d=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gne(l):new fne(l),p=[i];return n.runWebGLProgram(d,[s],s.dtype,p)}return n.uploadToGPU(s.dataId),yne(s,i,l,n)}var Ane={kernelName:ji,backendName:"webgl",kernelFunc:wc},xne=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;w.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=N.getReshaped(s.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(s.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=ve({inputs:{x:s},backend:n,attrs:{shape:l}}),m=Xn({inputs:{x:f},backend:n,attrs:{perm:c}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:u}}),y=wc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),y},bne={kernelName:Ai,backendName:"webgl",kernelFunc:xne};function vne(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),l=n.readSync(a.dataId),c=SC(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}var wne={kernelName:Bh,backendName:"webgl",kernelFunc:vne};function kne(e){let{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),i=N.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var Ine={kernelName:Wh,backendName:"webgl",kernelFunc:kne},Sne="return float(a != b);",JC=Tn({opSnippet:Sne,cpuKernelImpl:tee,dtype:"bool"}),Cne={kernelName:$i,backendName:"webgl",kernelFunc:JC};function $p(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return Cr({inputs:{x:s.complexTensorInfos.real},backend:n})}var Tne={kernelName:Sd,backendName:"webgl",kernelFunc:$p},Nne="return float(int(x));";function Ene(e,t){let n=new ua(e.shape,Nne),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function zx(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if(a==="complex64"){if(s.dtype==="complex64")return Cr({inputs:{x:s},backend:n});let o=Ht(s.shape),i=zx({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=Jo({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(s.dtype==="complex64"){let o=$p({inputs:{input:s},backend:n}),i=zx({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(s.dtype,a)){let o=Cr({inputs:{x:s},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Ene(s,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),l=JC({inputs:{a:s,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}var Rne={kernelName:La,backendName:"webgl",kernelFunc:zx},QC="return ceil(x);",_ne=it({opSnippet:QC,packedOpSnippet:QC,cpuKernelImpl:OQ}),Dne={kernelName:Ba,backendName:"webgl",kernelFunc:_ne},Pne=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},$ne=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Fne(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r,i;Y().getBool("WEBGL_PACK_CLIP")?i=new $ne(s.shape):i=new Pne(s.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[s],s.dtype,l)}var One={kernelName:Ys,backendName:"webgl",kernelFunc:Fne},Mne=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function e4(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function zne(e){let{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new Mne(r.shape),o=[e4(r,s.complexTensorInfos.real),e4(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var Lne={kernelName:yd,backendName:"webgl",kernelFunc:zne},Bne=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},Wne=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,r=n.length,s=wt(r),a=qn("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],c=o.slice(-2),u=o.join(),d=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${u}), vec2(${c.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];d+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${a0(o,l,m)}),
            vec2(${a0(c,l,m)}));
        }`}let p=i.length,h=i[i.length-1];d+=`
        return getChannel(
          getT${p}(${a0(o,l,h)}),
          vec2(${a0(c,l,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${d}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${n[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${n[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${n[r-2]} &&
            ${a[r-1]} < ${n[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function a0(e,t,n){let r=e.indexOf(t);return e.map((a,o)=>o===r?`${a} - ${n}`:a).join()}function o0(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return Cr({inputs:{x:s.complexTensorInfos.imag},backend:n})}var Vne={kernelName:vd,backendName:"webgl",kernelFunc:o0};function kc(e,t,n){let r=e[0].dtype;if(r==="complex64"){let u=e.map(m=>$p({inputs:{input:m},backend:n})),d=e.map(m=>o0({inputs:{input:m},backend:n})),p=kc(u,t,n),h=kc(d,t,n),f=Jo({inputs:{real:p,imag:h},backend:n});return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),d.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}let s=n.shouldExecuteOnCPU(e);if(r==="string"&&(s=!0),s){let u=e.map(y=>{let x=w.sizeFromShape(y.shape.slice(t));return ve({inputs:{x:y},backend:n,attrs:{shape:[-1,x]}})}),d=u.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),p=N.computeOutShape(u.map(y=>y.shape),1),h=u[0].shape[0]===1,f=MQ(d,p,r,h),m=N.computeOutShape(e.map(y=>y.shape),t),g=n.makeTensorInfo(m,r,f);return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g}if(e.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(e.length/2),d=kc(e.slice(0,u),t,n),p=kc(e.slice(u),t,n),h=kc([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),h}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let u=new Wne(e.map(d=>d.shape),t);return n.runWebGLProgram(u,e,r)}let{tensors2D:a,outShape:o}=Une(e,t,n),i=new Bne(a.map(u=>u.shape)),l=n.runWebGLProgram(i,a,r);a.forEach(u=>n.disposeIntermediateTensorInfo(u));let c=ve({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function Une(e,t,n){let r=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ve({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}function t4(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=w.parseAxisParam(s,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return Cr({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),kc(i,a,n)}var Gne={kernelName:xi,backendName:"webgl",kernelFunc:t4},n4=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,x=m?3:1,A="",b="";n&&(r?A=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?A=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:A=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${A}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${v}
        ${b}
        setOutput(result);
      }
    `}},Hne=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},jne=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=pr(this.outputShape.length);let{dataFormat:n}=t,r=jn(),s=n==="channelsLast",a=s?0:1,o=s?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let c=0;c<=1;c++)for(let u=0;u<=1;u++)l+=`
          blockIndex = rc.y + ${u};
          pos = rc.x + ${c};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+u}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+u}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}};function r4({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=r.texData.get(e.dataId),u=n.inChannels,d=l[0]*l[1]*l[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(!((d===1||p===1)&&u>jC)&&c.isPacked&&h&&c.texture!=null&&l[2]%2!==0&&w.arraysEqual(c.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),v={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,w.assert(Ep(c.shape,v.shape),()=>`packed reshape ${c.shape} to ${v.shape} isn't free`);let I=ve({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let E=r0({a:v,b:I,backend:r,transposeA:f,transposeB:m,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=r.texData.get(E.dataId);w.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,R.shape=n.outShape,g=Cr({inputs:{x:E},backend:r}),g.shape=n.outShape,y.push(E)}else{let b=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],v=ve({inputs:{x:e},backend:r,attrs:{shape:[1,b,n.inChannels]}}),C=ve({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=r0({a:v,b:C,transposeA:f,transposeB:m,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=ve({inputs:{x:I},backend:r,attrs:{shape:n.outShape}}),y.push(v),y.push(C),y.push(I)}for(let b of y)r.disposeIntermediateTensorInfo(b);return g}function s4({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=l*c*u,g=p*d,y=[m,g],x=!0,A=!1,b=[],v=ve({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),C=ve({inputs:{x:t},backend:r,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});b.push(v),b.push(C);let I=new jne(y,n),E=[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=r.runWebGLProgram(I,[v],"float32",E),F=ve({inputs:{x:R},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(R),b.push(F);let _=s!=null,P=a!=null,T=i==="leakyrelu",O=i?e0(i,!0):null,G=new WC(F.shape,C.shape,[1,g,n.outChannels],x,A,_,O,P,T),K=[F,C];if(s&&K.push(s),P&&K.push(a),T){let Q=r.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));K.push(Q),b.push(Q)}let z=r.runWebGLProgram(G,K,"float32"),j=f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],W=ve({inputs:{x:z},backend:r,attrs:{shape:j}});b.push(z);for(let Q of b)r.disposeIntermediateTensorInfo(Q);return W}function qne(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=r,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(s.shape,a.shape,o,c,i,u,!1,d),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=r4({x:s,filter:a,convInfo:p,backend:n});else if(Y().getBool("WEBGL_CONV_IM2COL")&&s.shape[0]===1)h=s4({x:s,filter:a,convInfo:p,backend:n});else{let m=new n4(p);h=n.runWebGLProgram(m,[s,a],"float32")}let f=ve({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}var Xne={kernelName:Wa,backendName:"webgl",kernelFunc:qne},Kne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Zne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,c=a?2:3,u=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Yne=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Jne=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Qne(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=r,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(s.shape,u,o,1,i,c,!1,d),h=new Kne(p);return n.runWebGLProgram(h,[s,a],"float32")}var ere={kernelName:Vh,backendName:"webgl",kernelFunc:Qne};function tre(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=r,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=new Zne(p);return n.runWebGLProgram(h,[s,a],"float32")}var nre={kernelName:Va,backendName:"webgl",kernelFunc:tre};function rre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l}=r,c=N.computeConv3DInfo(s.shape,a.shape,o,l,i),u=new Hne(c);return n.runWebGLProgram(u,[s,a],"float32")}var sre={kernelName:Ad,backendName:"webgl",kernelFunc:rre};function are(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:l}=r,c=N.computeConv3DInfo(s.shape,l,o,1,i),u=new Yne(c);return n.runWebGLProgram(u,[s,a],"float32")}var ore={kernelName:Uh,backendName:"webgl",kernelFunc:are};function ire(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:l}=r,c=N.computeConv3DInfo(l,a.shape,i,1,o),u=new Jne(c);return n.runWebGLProgram(u,[s,a],"float32")}var lre={kernelName:Gh,backendName:"webgl",kernelFunc:ire},ure=vc+`
  return cos(x);
`,cre=it({opSnippet:ure}),dre={kernelName:Ua,backendName:"webgl",kernelFunc:cre},pre=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,hre=it({opSnippet:pre}),fre={kernelName:Ga,backendName:"webgl",kernelFunc:hre},mre=class{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[c]=t,[u,d]=n;this.outputShape=[c,u,d,l];let p=r==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,y]=u>1?[`${(o-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,A,b]=d>1?[`${(i-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${A};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},gre=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=r,u=new mre(s.shape,a.shape,i,l,c);return n.runWebGLProgram(u,[s,a,o],"float32")},yre={kernelName:vi,backendName:"webgl",kernelFunc:gre},a4=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,s=t?"0.0":`getX(${o4(r,"coords")})`,a=e[e.length-1],o="",i="";t?(o=n?`end != ${a-1}`:"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${wt(r)} coords = getOutputCoords();
        int end = ${i4(r,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${o}) {
          int idx = ${i};
          ${i4(r,"coords")} = idx;
          val += getX(${o4(r,"coords")});
        }
        setOutput(val);
      }
    `}};function o4(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function i4(e,t){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Are(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r,l=s.shape.length,c=N.getAxesPermutation([a],l),u=s;c!=null&&(u=Xn({inputs:{x:s},backend:n,attrs:{perm:c}}));let d=N.getInnerMostAxes(1,l)[0];if(d!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);let p=u.shape[d],h=Cr({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){let m=new a4(u.shape,!1,i),g=[[f]],y=h;h=n.runWebGLProgram(m,[h],h.dtype,g),n.disposeIntermediateTensorInfo(y)}if(o){let f=new a4(u.shape,o,i),m=h;h=n.runWebGLProgram(f,[h],h.dtype),n.disposeIntermediateTensorInfo(m)}if(c!=null){let f=N.getUndoAxesPermutation(c),m=Xn({inputs:{x:h},backend:n,attrs:{perm:f}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),m}return h}var xre={kernelName:bi,backendName:"webgl",kernelFunc:Are};function bre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(s.shape.length===1){let l=n.readSync(s.dataId),c=n.readSync(a.dataId),u=SC(l,c,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}else if(s.shape.length===2){let l=n.bufferSync(s),c=n.bufferSync(a),u=FQ(l,c,o,i);return n.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}var vre={kernelName:Hh,backendName:"webgl",kernelFunc:bre},wre=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function kre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],l=o==="NHWC"?s.shape[1]:s.shape[2],c=o==="NHWC"?s.shape[2]:s.shape[3],u=o==="NHWC"?s.shape[3]:s.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=new wre(f,a,o);return n.runWebGLProgram(m,[s],s.dtype)}var Ire={kernelName:wi,backendName:"webgl",kernelFunc:kre},l4=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pr(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",c="";n&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${c}
        setOutput(result);
      }
    `}},u4=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=pr(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,d=u,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<u;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let y=g*2;if(p+=`
          xC = xCCorner + ${y*l};
          `,i===1){if(y<u&&(o%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<u)){let x=o%2===0?w.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):x===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<u&&(o%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<u&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<u&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<u&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<u&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let h="",f="";n&&(r?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function Sre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=r,u=l;u==null&&(u=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let d=N.computeConv2DInfo(s.shape,a.shape,o,u,i,c,!0),p;Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?p=new u4(d):p=new l4(d);let h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",h)}var Cre={kernelName:Ha,backendName:"webgl",kernelFunc:Sre},Tre=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Nre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Ere(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=r,d=N.computeConv2DInfo(s.shape,u,o,i,l,c,!0),p=new Tre(d);return n.runWebGLProgram(p,[s,a],"float32")}var Rre={kernelName:jh,backendName:"webgl",kernelFunc:Ere};function _re(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=r,d=N.computeConv2DInfo(u,a.shape,o,i,l,c,!0),p=new Nre(d);return n.runWebGLProgram(p,[s,a],"float32")}var Dre={kernelName:qh,backendName:"webgl",kernelFunc:_re},Pre=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function $re(e){let{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=w.sizeFromShape(r.shape),o=ve({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new Pre(a),l=n.runWebGLProgram(i,[o],o.dtype),c=ve({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}var Fre={kernelName:Xh,backendName:"webgl",kernelFunc:$re},Ore=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:c}=e,{top:u,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${u}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Mre(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l}=r,c=N.computeDilation2DInfo(s.shape,a.shape,o,i,"NHWC",l),u,d=new Ore(c);u=n.runWebGLProgram(d,[s,a],"float32");let p=ve({inputs:{x:u},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(u),p}var zre={kernelName:xd,backendName:"webgl",kernelFunc:Mre};function Lre(e){let{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(s,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:x}=N.getEinsumPermutation(h,l[g]),A;N.isIdentityPermutation(y)?A=a[g]:(A=Xn({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(A.shape,b)||(A=ve({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),p===null?p=A:(p=Fx({inputs:{a:A,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=n0({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}var Bre={kernelName:bd,backendName:"webgl",kernelFunc:Lre},Wre="return (x >= 0.0) ? x : (exp(x) - 1.0);",Vre=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Ure=it({opSnippet:Wre,packedOpSnippet:Vre}),Gre={kernelName:qa,backendName:"webgl",kernelFunc:Ure},Hre="return (b >= 1.0) ? a : a * (b + 1.0);",jre=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,qre=e=>{let{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Dp(jre,r.shape,s.shape):new bc(Hre,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)},Xre={kernelName:Yh,backendName:"webgl",kernelFunc:qre},Kre=`
  return vec4(equal(a, b));
`,Zre="return float(a == b);",Yre=Tn({opSnippet:Zre,packedOpSnippet:Kre,dtype:"bool",cpuKernelImpl:zQ}),Jre={kernelName:ki,backendName:"webgl",kernelFunc:Yre},Qre=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,ese=it({opSnippet:Qre}),tse={kernelName:xu,backendName:"webgl",kernelFunc:ese},nse=vc+`
  return exp(x);
`,rse=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,c4=it({opSnippet:nse,packedOpSnippet:rse,cpuKernelImpl:LQ,dtype:"float32"}),sse={kernelName:Xa,backendName:"webgl",kernelFunc:c4};function Lx(e){let{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=s;return s<0&&(w.assert(-(o+1)<=s,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+s+1),i.splice(l,0,1),ve({inputs:{x:a},backend:r,attrs:{shape:i}})}var ase={kernelName:Ii,backendName:"webgl",kernelFunc:Lx},d4="return exp(x) - 1.0;",ose=it({opSnippet:d4,packedOpSnippet:d4,cpuKernelImpl:BQ}),ise={kernelName:Si,backendName:"webgl",kernelFunc:ose},p4=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function h4(e,t,n){let r=n.texData.get(e.dataId),s=w.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=s/a,i=ve({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,c=new p4("real",l,t),u=new p4("imag",l,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(c,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),f=Jo({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let m=ve({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function lse(e){let{inputs:t,backend:n}=e,{input:r}=t;return h4(r,!1,n)}var use={kernelName:Jh,backendName:"webgl",kernelFunc:lse},cse=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Fp(e){let{backend:t,attrs:n}=e,{shape:r,value:s}=n,{dtype:a}=n;if(a=a||w.inferDtype(s),a==="string"){let o=w.getArrayFromDType(a,w.sizeFromShape(r));return o.fill(s),t.makeTensorInfo(r,a,o)}else{let o=new cse(r,s),i=[[s]];return t.runWebGLProgram(o,[],a,i)}}var dse={kernelName:bu,backendName:"webgl",kernelFunc:Fp},pse=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},hse={kernelName:Ci,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,s=new pse(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},f4="return floor(x);",fse=it({opSnippet:f4,packedOpSnippet:f4,cpuKernelImpl:WQ}),mse={kernelName:Ka,backendName:"webgl",kernelFunc:fse},gse=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,yse=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Ase=Tn({opSnippet:gse,packedOpSnippet:yse,dtype:"int32"}),xse={kernelName:Za,backendName:"webgl",kernelFunc:Ase},bse=class{constructor(e){this.variableNames=["A"];let t=jn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},vse=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=jn(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},wse={kernelName:Dd,backendName:"webgl",kernelFunc:kse},Ic;function kse(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:s}=t,{numChannels:a}=r,o=typeof HTMLVideoElement!="undefined"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement,[l,c]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],u=[c,l],d=[c,l,a];(i||o)&&(Ic==null&&(Ic=document.createElement("canvas").getContext("2d")),Ic.canvas.width=l,Ic.canvas.height=c,Ic.drawImage(s,0,0,l,c),s=Ic.canvas);let p=n.makeTensorInfo(u,"int32");n.texData.get(p.dataId).usage=as.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);let h=Y().getBool("WEBGL_PACK")?new vse(d):new bse(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}function Ise(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(s.shape,a.shape,l,d,c,p,!1,m),y,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=r4({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(Y().getBool("WEBGL_CONV_IM2COL")&&s.shape[0]===1)y=s4({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,v=i!=null,C=h==="leakyrelu",I=h?e0(h,!1):null,E=new n4(g,b,I,v,C),R=[s,a];if(o&&R.push(o),i&&R.push(i),C){let F=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));R.push(F),x.push(F)}y=n.runWebGLProgram(E,R,"float32")}let A=ve({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var Sse={kernelName:Eo,backendName:"webgl",kernelFunc:Ise};function Cse(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=r,f=[],m=u;m==null&&(m=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=N.computeConv2DInfo(s.shape,a.shape,l,m,c,d,!0),y=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=p?e0(p,y):null,A=[s,a],b=o!=null,v=i!=null,C=p==="leakyrelu";if(b&&A.push(o),v&&A.push(i),C){let F=n.makeTensorInfo([],"float32",w.createScalarValue(h,"float32"));A.push(F),f.push(F)}let I;y?I=new u4(g,b,x,v,C):I=new l4(g,b,x,v,C);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(I,A,"float32",E);return f.forEach(F=>n.disposeIntermediateTensorInfo(F)),R}var Tse={kernelName:Ro,backendName:"webgl",kernelFunc:Cse},Nse=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=wt(t.length),s=wt(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${r} strides = ${r}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function Ese(e){let{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=w.sizeFromShape(r.shape),[l,c,u,d]=N.prepareAndValidate(r,s),p=ve({inputs:{x:s},backend:n,attrs:{shape:[c,o]}}),h=ve({inputs:{x:r},backend:n,attrs:{shape:[w.sizeFromShape(r.shape)/u,u]}});if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let y=n.readSync(s.dataId),x=n.bufferSync(r),A=VQ(y,x,r.dtype,c,o,u,d,r.shape,i);return n.makeTensorInfo(l,r.dtype,A.values)}let f=new Nse(o,d,[c,u]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var Rse={kernelName:Ni,backendName:"webgl",kernelFunc:Ese},_se=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=wt(this.rank),r=Dse(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function Dse(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)s===2?r.push("index"):r.push(`${n[s]}`);return r.join()}function m4(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,l=w.parseAxisParam(o,s.shape)[0];if(Y().get("DEBUG")){let x=n.readSync(a.dataId),A=s.shape[l];for(let b=0;b<x.length;++b){let v=x[b];w.assert(v<=A-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${A-1}]`)}}let c=N.segment_util.collectGatherOpShapeInfo(s,a,l,i),u=w.sizeFromShape(a.shape),d=[],p=ve({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=ve({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(p),d.push(h);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,a])||s.dtype==="string"){let x=n.bufferSync(h),A=n.bufferSync(p),b=UQ(A,x,f);return d.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}let m=new _se(p.shape,f),g=n.runWebGLProgram(m,[p,h],p.dtype);d.push(g);let y=ve({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(x=>n.disposeIntermediateTensorInfo(x)),y}var Pse={kernelName:Ti,backendName:"webgl",kernelFunc:m4},$se="return float(a > b);",Fse=`
  return vec4(greaterThan(a, b));
`,Ose=Tn({opSnippet:$se,packedOpSnippet:Fse,cpuKernelImpl:GQ,dtype:"bool"}),Mse={kernelName:Ei,backendName:"webgl",kernelFunc:Ose},zse="return float(a >= b);",Lse=`
  return vec4(greaterThanEqual(a, b));
`,Bse=Tn({opSnippet:zse,packedOpSnippet:Lse,dtype:"bool",cpuKernelImpl:HQ}),Wse={kernelName:Ja,backendName:"webgl",kernelFunc:Bse};function Vse(e){let{inputs:t,backend:n}=e,{input:r}=t;return h4(r,!0,n)}var Use={kernelName:Qh,backendName:"webgl",kernelFunc:Vse},Gse="return float(!isnan(x) && !isinf(x));",Hse=it({opSnippet:Gse,dtype:"bool"}),jse={kernelName:vu,backendName:"webgl",kernelFunc:Hse},qse="return float(isinf(x));",Xse=it({opSnippet:qse,dtype:"bool"}),Kse={kernelName:wu,backendName:"webgl",kernelFunc:Xse},Zse="return float(isnan(x));",Yse=it({opSnippet:Zse,dtype:"bool"}),Jse={kernelName:ku,backendName:"webgl",kernelFunc:Yse},Qse="return float(a < b);",eae=`
  return vec4(lessThan(a, b));
`,tae=Tn({opSnippet:Qse,packedOpSnippet:eae,cpuKernelImpl:jQ,dtype:"bool"}),nae={kernelName:Ri,backendName:"webgl",kernelFunc:tae},rae="return float(a <= b);",sae=`
  return vec4(lessThanEqual(a, b));
`,aae=Tn({opSnippet:rae,packedOpSnippet:sae,cpuKernelImpl:qQ,dtype:"bool"}),oae={kernelName:_i,backendName:"webgl",kernelFunc:aae};function iae(e){let{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=XQ(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}var lae={kernelName:ef,backendName:"webgl",kernelFunc:iae},uae=vc+`
  return x < 0.0 ? 0./0. : log(x);
`,cae=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,dae=it({opSnippet:uae,packedOpSnippet:cae,cpuKernelImpl:KQ}),pae={kernelName:to,backendName:"webgl",kernelFunc:dae},hae=vc+`
  return log(1.0 + x);
`,fae=it({opSnippet:hae}),mae={kernelName:Iu,backendName:"webgl",kernelFunc:fae},gae="return float(a >= 1.0 && b >= 1.0);",yae=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Aae=Tn({opSnippet:gae,packedOpSnippet:yae,dtype:"bool"}),xae={kernelName:Di,backendName:"webgl",kernelFunc:Aae},bae="return float(!(x >= 1.0));",vae=it({opSnippet:bae}),wae={kernelName:Su,backendName:"webgl",kernelFunc:vae},kae="return float(a >= 1.0 || b >= 1.0);",Iae=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Sae=Tn({opSnippet:kae,packedOpSnippet:Iae,dtype:"bool"}),Cae={kernelName:wd,backendName:"webgl",kernelFunc:Sae},Tae=class{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${r}) * sum`;s===.5?i=`inversesqrt(${l})`:s===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Nae=class{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${r}) * sum`;s===.5?i=`inversesqrt(${l})`:s===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},Eae=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=r,c=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Nae(s.shape,a,o,i,l):new Tae(s.shape,a,o,i,l);return n.runWebGLProgram(c,[s],s.dtype)},Rae={kernelName:kd,backendName:"webgl",kernelFunc:Eae},_ae=class{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},Dae=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=r,d=new _ae(s.shape,i,l,c,u);return n.runWebGLProgram(d,[s,a,o],s.dtype)},Pae={kernelName:tf,backendName:"webgl",kernelFunc:Dae};function $ae(e,t,n,r){let s=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/s,i=ve({inputs:{x:e},attrs:{shape:[o,s]},backend:r}),l=Fl(i,e.dtype,"max",r),c=ve({inputs:{x:l},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(l),c}function g4(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,l=w.parseAxisParam(a,s.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=n.shouldExecuteOnCPU([s]),h=s;if(d){if(p){let A=n.texData.get(h.dataId).values,b=new Array(i);for(let I=0;I<b.length;I++)b[I]=s.shape[u[I]];let v=$x(A,s.shape,s.dtype,u,b);h=n.makeTensorInfo(b,s.dtype);let C=n.texData.get(h.dataId);C.values=v}else h=t0(s,u,n);c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("max",c,i);let[f,m]=N.computeOutAndReduceShapes(h.shape,c),g=f;o&&(g=N.expandShapeToKeepDim(f,l));let y;if(p){let A=n.texData.get(h.dataId).values,b=ZQ(A,w.sizeFromShape(m),g,s.dtype);y=n.makeTensorInfo(g,s.dtype);let v=n.texData.get(y.dataId);v.values=b}else y=$ae(h,m,g,n);return d&&n.disposeIntermediateTensorInfo(h),y}var Fae={kernelName:no,backendName:"webgl",kernelFunc:g4},Oae=OC+`
  return max(a, b);
`,Mae=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Qm+`
  return result;
`,zae=Tn({opSnippet:Oae,packedOpSnippet:Mae,cpuKernelImpl:YQ}),Lae={kernelName:ro,backendName:"webgl",kernelFunc:zae};function Bae(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t;hc(s,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r,c=1;w.assert(N.eitherStridesOrDilationsAreOne(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let u=N.computePool2DInfo(s.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return Cr({inputs:{x:s},backend:n});let d=new Pp(u,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}var Wae={kernelName:so,backendName:"webgl",kernelFunc:Bae};function Vae(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:c}=r,u=[1,1,1],d=N.computePool3DInfo(s.shape,a,o,u,i,c,l),p=new Ox(d,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}var Uae={kernelName:Id,backendName:"webgl",kernelFunc:Vae},Gae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,l=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Hae=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=l-1-e.padInfo.top,p=c-1-e.padInfo.left,h=i*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function jae(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=r,d=[1,1,1],p=N.computePool3DInfo(o.shape,i,l,d,c,u),h=new Ox(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new Hae(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var qae={kernelName:rf,backendName:"webgl",kernelFunc:jae};function Xae(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;hc([a,o],"maxPoolGrad");let{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=r,p=N.computePool2DInfo(i.shape,l,c,1,u,d),h=!0,f=new Pp(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new Gae(p),y=n.runWebGLProgram(g,[s,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}var Kae={kernelName:nf,backendName:"webgl",kernelFunc:Xae};function Zae(e,t,n,r){let s=new Pp(n,"max",!1),a=r.runWebGLProgram(s,[e],"float32");s=new Pp(n,"max",!0,!0,t);let o=r.runWebGLProgram(s,[e],"float32");return[a,o]}var Yae={kernelName:sf,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;w.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let c=[1,1];w.assert(N.eitherStridesOrDilationsAreOne(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let u=N.computePool2DInfo(r.shape,s,a,c,o),[d,p]=Zae(r,i,u,l);return[d,p]}};function Jae(e,t,n,r){let s=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/s,i=ve({inputs:{x:e},attrs:{shape:[o,s]},backend:r}),l=Fl(i,"float32","mean",r),c=ve({inputs:{x:l},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(l),c}var Qae={kernelName:ao,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,l=w.parseAxisParam(a,r.shape),c=l,u=N.getAxesPermutation(c,i),d=u!=null,p=o.shouldExecuteOnCPU([r]),h=[],f=r;if(d){if(p){let b=o.texData.get(f.dataId).values,v=new Array(i);for(let E=0;E<v.length;E++)v[E]=r.shape[u[E]];let C=$x(b,r.shape,r.dtype,u,v);f=o.makeTensorInfo(v,r.dtype);let I=o.texData.get(f.dataId);I.values=C}else f=t0(r,u,o);h.push(f),c=N.getInnerMostAxes(c.length,i)}N.assertAxesAreInnerMostDims("sum",c,i);let[m,g]=N.computeOutAndReduceShapes(f.shape,c),y=m;s&&(y=N.expandShapeToKeepDim(m,l));let x=Jae(f,g,y,o);for(let A of h)o.disposeIntermediateTensorInfo(A);return x}};function eoe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=w.parseAxisParam(a,s.shape),c=l,u=N.getAxesPermutation(c,i),d=s;u!=null&&(d=Xn({inputs:{x:s},backend:n,attrs:{perm:u}}),c=N.getInnerMostAxes(c.length,s.shape.length)),N.assertAxesAreInnerMostDims("min",c,i);let[p,h]=N.computeOutAndReduceShapes(d.shape,c),f=w.sizeFromShape(h),m=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),g=Fl(m,m.dtype,"min",n),y;if(o){let x=N.expandShapeToKeepDim(p,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),u!=null&&n.disposeIntermediateTensorInfo(d),y}var toe={kernelName:oo,backendName:"webgl",kernelFunc:eoe},noe=OC+`
  return min(a, b);
`,roe=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Qm+`
  return result;
`,soe=Tn({opSnippet:noe,packedOpSnippet:roe,cpuKernelImpl:JQ}),aoe={kernelName:io,backendName:"webgl",kernelFunc:soe},ooe=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);let r=e.length,s=wt(r),a=t.map(c=>c[0]).join(","),o=t.map((c,u)=>c[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=n==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${o});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},ioe=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let r=e.length,s=wt(r),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=qn("rc",r),l=qn("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${l.slice(-2).join()})`,d=n==="reflect"?0:1,p="";if(r===1){let h=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[r-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
      `}else{let h=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${u});
        ${i[r-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${u});
        }
        rc = outputLoc;
        ${i[r-2]} += 1;
        if(${i[r-2]} < ${this.outputShape[r-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${u});
          ${i[r-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${o});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},loe=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:s,mode:a}=n,o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ioe(r.shape,s,a):new ooe(r.shape,s,a);return t.runWebGLProgram(o,[r],r.dtype)},uoe={kernelName:lo,backendName:"webgl",kernelFunc:loe},coe=`if (b == 0.0) return NAN;
  return mod(a, b);`,doe=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Qm+`
  return result;
`,poe=Tn({opSnippet:coe,packedOpSnippet:doe}),hoe={kernelName:Cu,backendName:"webgl",kernelFunc:poe},foe=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},moe=`
if (a == b) {
  return 1.0;
};
return a / b;`,goe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,y4=Tn({opSnippet:moe,packedOpSnippet:goe,checkOutOfBounds:!0}),yoe={kernelName:ja,backendName:"webgl",kernelFunc:y4},A4="return a - b;",x4=Tn({opSnippet:A4,packedOpSnippet:A4,supportsComplex:!0,cpuKernelImpl:fee}),Aoe={kernelName:Io,backendName:"webgl",kernelFunc:x4};function b4(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=w.parseAxisParam([a],s.shape),i=g4({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=ve({inputs:{x:i},backend:n,attrs:{shape:l}}),u=x4({inputs:{a:s,b:c},backend:n}),d=c4({inputs:{x:u},backend:n}),p=n0({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=ve({inputs:{x:p},backend:n,attrs:{shape:l}}),f=y4({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var xoe={kernelName:wo,backendName:"webgl",kernelFunc:b4};function boe(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,l=i?s:b4({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),c=l.shape[0],u=l.shape[1],d=new foe(c,u,a),p=[[o]],h=n.runWebGLProgram(d,[l],"int32",p);return i||n.disposeIntermediateTensorInfo(l),h}var voe={kernelName:af,backendName:"webgl",kernelFunc:boe},woe=os+`
  return -x;
`,koe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Ioe(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let a=n.texData.get(r.dataId),[o,i]=eee(a.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,o)}let s;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new $l(r.shape,koe):s=new ua(r.shape,woe),n.runWebGLProgram(s,[r],r.dtype)}var Soe={kernelName:Pi,backendName:"webgl",kernelFunc:Ioe},Coe=ts.nonMaxSuppressionV3Impl;function Toe(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=r,c=n.readSync(s.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=Coe(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Noe={kernelName:Fi,backendName:"webgl",kernelFunc:Toe},Eoe=ts.nonMaxSuppressionV4Impl;function Roe(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=r,u=n.readSync(s.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:h}=Eoe(u,d,o,i,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var _oe={kernelName:Tu,backendName:"webgl",kernelFunc:Roe},Doe=ts.nonMaxSuppressionV5Impl;function Poe(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=r,u=n.readSync(s.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=Doe(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var $oe={kernelName:Oi,backendName:"webgl",kernelFunc:Poe},Foe=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Ooe=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r,l=w.sizeFromShape(s.shape),c=new Foe(l,a,o,i),u=ve({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[u],s.dtype);n.disposeIntermediateTensorInfo(u);let p=[...s.shape,a],h=ve({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),h},Moe={kernelName:zi,backendName:"webgl",kernelFunc:Ooe};function i0(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let s=$p({inputs:{input:r},backend:n}),a=i0({inputs:{x:s},backend:n}),o=o0({inputs:{input:r},backend:n}),i=i0({inputs:{x:o},backend:n}),l=Jo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Fp({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var zoe={kernelName:tl,backendName:"webgl",kernelFunc:i0};function v4(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let s=$p({inputs:{input:r},backend:n}),a=v4({inputs:{x:s},backend:n}),o=o0({inputs:{input:r},backend:n}),i=i0({inputs:{x:o},backend:n}),l=Jo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Fp({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var Loe={kernelName:Mi,backendName:"webgl",kernelFunc:v4};function Boe(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return Lx({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Lx({inputs:{input:u},backend:n,attrs:{dim:s}});return i.push(d),d}),c=t4({inputs:l,backend:n,attrs:{axis:s}});return i.forEach(u=>n.disposeIntermediateTensorInfo(u)),c}var Woe={kernelName:Li,backendName:"webgl",kernelFunc:Boe},Voe=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let r=e.length,s=wt(r),a=t.map(l=>l[0]).join(","),o=t.map((l,c)=>l[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${o});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Uoe=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let r=e.length,s=wt(r),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=qn("rc",r),l=qn("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,u=r===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${i[r-2]} += 1;
       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${i[r-1]} += 1;
         if(${c}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=r===1?2:4;f<m;f++)h+=`
        ${d[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${u});
        }
      `;h+=r===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${o});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},w4=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(w.sizeFromShape(s.shape)===0){let c=a.map((u,d)=>u[0]+s.shape[d]+u[1]);return Fp({backend:n,attrs:{shape:c,value:o,dtype:s.dtype}})}let i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Uoe(s.shape,a,o):new Voe(s.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[s],s.dtype,l)},Goe={kernelName:co,backendName:"webgl",kernelFunc:w4},Hoe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,joe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Qm+`
  return result;
`,qoe=Tn({opSnippet:Hoe,packedOpSnippet:joe}),Xoe={kernelName:po,backendName:"webgl",kernelFunc:qoe};function Koe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,l=[],c=w.parseAxisParam(a,s.shape),u=c,d=N.getAxesPermutation(u,i),p=s;d!=null&&(p=Xn({inputs:{x:s},backend:n,attrs:{perm:d}}),u=N.getInnerMostAxes(u.length,i),l.push(p)),N.assertAxesAreInnerMostDims("prod",u,i);let h;if(n.shouldExecuteOnCPU([p])){let f=n.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:y}=nee(p.shape,p.dtype,f,u);h=n.makeTensorInfo(g,y,m)}else{let[f,m]=N.computeOutAndReduceShapes(p.shape,u),g=w.sizeFromShape(m),y=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,g]}}),x=Wd(s.dtype),A=Fl(y,x,"prod",n);h=ve({inputs:{x:A},backend:n,attrs:{shape:f}}),l.push(y),l.push(A)}if(o){l.push(h);let f=N.expandShapeToKeepDim(h.shape,c);h=ve({inputs:{x:h},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var Zoe={kernelName:Bi,backendName:"webgl",kernelFunc:Koe},k4=e=>{let{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=ree(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},Yoe={kernelName:Nu,backendName:"webgl",kernelFunc:k4},Joe="return 1.0 / x;",Qoe=it({opSnippet:Joe}),eie={kernelName:Eu,backendName:"webgl",kernelFunc:Qoe},tie=os+`
  return (x < 0.0) ? 0.0 : x;
`,nie=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rie=it({opSnippet:tie,packedOpSnippet:nie}),sie={kernelName:fo,backendName:"webgl",kernelFunc:rie},aie=os+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,oie=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,iie=it({opSnippet:aie,packedOpSnippet:oie}),lie={kernelName:go,backendName:"webgl",kernelFunc:iie},uie=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[r&&t>1?o-1:o,r&&n>1?i-1:i],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;s?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},cie=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[r&&t>1?o-1:o,r&&n>1?i-1:i],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;s?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function die(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cie(s.shape,l,c,a,o):new uie(s.shape,l,c,a,o);return n.runWebGLProgram(u,[s],"float32")}var pie={kernelName:mo,backendName:"webgl",kernelFunc:die},hie=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function fie(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new hie(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var mie={kernelName:lf,backendName:"webgl",kernelFunc:fie},gie=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[r&&t>1?o-1:o,r&&n>1?i-1:i],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",p;s?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/u[0]},
          ${c[1]/u[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},yie=class{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let c=[r&&t>1?o-1:o,r&&n>1?i-1:i],u=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",p;s?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/u[0]},
          ${c[1]/u[1]},
          ${c[1]/u[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Aie(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,c]=i,u=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yie(s.shape,l,c,a,o):new gie(s.shape,l,c,a,o);return n.runWebGLProgram(u,[s],s.dtype)}var xie={kernelName:Ru,backendName:"webgl",kernelFunc:Aie},bie=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],c=i[0]/l[0],u=i[1]/l[1],d=1/c,p=1/u,h=Math.ceil(d)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${u});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function vie(e){let{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new bie(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var wie={kernelName:of,backendName:"webgl",kernelFunc:vie},kie=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,s=e.map((o,i)=>r(i)).join(","),a=wt(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}},Iie=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=qn("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=wt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(r.slice())};
          if(${s}){
            result.g = ${l(r.slice())};
          }
          if(${a}) {
            result.b = ${c(r.slice())};
            if(${s}) {
              result.a = ${u(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return d(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",d(h)}function c(h){return h[n-2]="("+h[n-2]+" + 1)",d(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",d(h)}function d(h){let f=e.map((y,x)=>p(x,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function Sie(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=w.parseAxisParam(a,s.shape);if(o===0)return Cr({inputs:{x:s},backend:n});let l=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iie(s.shape,i):new kie(s.shape,i);return n.runWebGLProgram(l,[s],s.dtype)}var Cie={kernelName:Vi,backendName:"webgl",kernelFunc:Sie},Tie=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let s="";typeof t=="number"?s=`float outputValue = ${t.toFixed(2)};`:s=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Nie={kernelName:nl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,l=new Tie(r.shape,a),[c,u]=N.getImageCenter(o,r.shape[1],r.shape[2]),d=[[c,u,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(l,[r],r.dtype,d)}},Eie=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Rie=it({opSnippet:Eie}),_ie={kernelName:Ui,backendName:"webgl",kernelFunc:Rie},Die="return inversesqrt(x);",Pie=it({opSnippet:Die,cpuKernelImpl:see}),$ie={kernelName:yo,backendName:"webgl",kernelFunc:Pie},I4=class{constructor(e,t,n,r,s,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=wt(s.length),l=wt(a.length),c="";n===1?c="i":n===2&&(c="i, j");let u=`getIndices(${c})`,d="";r===1?d="i":r===2&&(d="i, coords[1]");let p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${u});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Fie(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,s,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,s.dtype);let h=ve({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),f=ve({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new I4(l,i,h.shape.length,f.shape.length,u,p),y=n.runWebGLProgram(g,[f,h,m],f.dtype),x=ve({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}var Oie={kernelName:Gi,backendName:"webgl",kernelFunc:Fie},Mie=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let r,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",r="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let c=0;c<t.length;c++)l.push(`${o[c]}`),c<e&&i.push(`${o[c]}`);r=i.join(),s=l.join()}let a=wt(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function zie(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new Mie(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],Wn(s.dtype,a.dtype))}var Lie={kernelName:Hi,backendName:"webgl",kernelFunc:zie},Bie=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Wie=it({opSnippet:Bie}),Vie={kernelName:_u,backendName:"webgl",kernelFunc:Wie},Uie=vc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Gie=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Hie=it({opSnippet:Uie,packedOpSnippet:Gie,cpuKernelImpl:aee}),jie={kernelName:xo,backendName:"webgl",kernelFunc:Hie},qie=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Xie=it({opSnippet:qie}),Kie={kernelName:Du,backendName:"webgl",kernelFunc:Xie},Zie=vc+`
  return sin(x);
`,Yie=it({opSnippet:Zie}),Jie={kernelName:Ao,backendName:"webgl",kernelFunc:Yie},Qie=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,ele=it({opSnippet:Qie}),tle={kernelName:qi,backendName:"webgl",kernelFunc:ele},nle=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,rle=it({opSnippet:nle}),sle={kernelName:Pu,backendName:"webgl",kernelFunc:rle},ale=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;w.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<s.shape.length;++y)l.push([0,0]);let c=[],u=w4({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=ve({inputs:{x:u},backend:n,attrs:{shape:d}}),m=Xn({inputs:{x:f},backend:n,attrs:{perm:p}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},ole={kernelName:Xi,backendName:"webgl",kernelFunc:ale};function ile(e){let{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(r.dataId),l=n.readSync(s.dataId),c=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[d,p,h,f,m]=iee(i,r.shape,r.dtype,l,s.dtype,c,u);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}var lle={kernelName:Cd,backendName:"webgl",kernelFunc:ile};function ule(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[c,u,d]=lee(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(u,r.dtype,c),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}var cle={kernelName:$u,backendName:"webgl",kernelFunc:ule};function dle(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(r.dataId),i=n.readSync(s.dataId),l=n.readSync(a.dataId),[c,u]=TC(o,r.shape,r.dtype,i,l,!0);return n.makeTensorInfo(u,r.dtype,c)}var ple={kernelName:Td,backendName:"webgl",kernelFunc:dle};function hle(e){let{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(r.dataId),i=n.readSync(s.dataId),l=n.readSync(a.dataId),[c,u]=TC(o,r.shape,r.dtype,i,l);return n.makeTensorInfo(u,r.dtype,c)}var fle={kernelName:Nd,backendName:"webgl",kernelFunc:hle};function mle(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,s,i),p=!1,h=new I4(c,l,s.shape.length,a.shape.length,u,[d,1],p),f=n.runWebGLProgram(h,[a,s,o],a.dtype),m=ve({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var gle={kernelName:Ed,backendName:"webgl",kernelFunc:mle};function yle(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=w.parseAxisParam(o,s.shape)[0],l=N.prepareSplitSize(s,a,i),c=s.shape.length,u=new Array(c).fill(0),d=s.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=wc({inputs:{x:s},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var Ale={kernelName:Ki,backendName:"webgl",kernelFunc:yle},S4="return sqrt(x);",xle=it({opSnippet:S4,packedOpSnippet:S4,cpuKernelImpl:uee}),ble={kernelName:bo,backendName:"webgl",kernelFunc:xle},vle="return x * x;",wle=it({opSnippet:vle}),kle={kernelName:Fu,backendName:"webgl",kernelFunc:wle},C4="return (a - b) * (a - b);",Ile=Tn({opSnippet:C4,packedOpSnippet:C4}),Sle={kernelName:ko,backendName:"webgl",kernelFunc:Ile};function Cle({inputs:e,attrs:t,backend:n}){let{x:r}=e,s=os+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new ua(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}var Tle={kernelName:To,backendName:"webgl",kernelFunc:Cle},Nle=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,s=wt(n.length),a=wt(n.length),o="";if(r===1)o="coords * strides + begin";else{let i=0;o=n.map((l,c)=>(i++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${i-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function Ele(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(s.shape,a,o,i,l,c,u,d,p),v;if(m)v=ve({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){w.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let I=zt.computeOutShape(x,A,b),E=wc({inputs:{x:s},backend:n,attrs:{begin:x,size:I}});v=ve({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([s])){let E=n.readSync(s.dataId),R=Le(s.shape,s.dtype,E),F=cee(h,R,b,x);v=n.makeTensorInfo(f,s.dtype,F.values)}else{let E=new Nle(x,b,h);v=n.runWebGLProgram(E,[s],s.dtype)}let C=ve({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),C}var Rle={kernelName:Zi,backendName:"webgl",kernelFunc:Ele};function _le(e){let{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=r,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=dee(p,h,s,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var Dle={kernelName:Rd,backendName:"webgl",kernelFunc:_le};function Ple(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[c,u,d]=pee(i,l,s),p=u.length;return[n.makeTensorInfo([p,2],"int32",c),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var $le={kernelName:uf,backendName:"webgl",kernelFunc:Ple};function Fle(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=hee(o,s);return n.makeTensorInfo(a.shape,"int32",i)}var Ole={kernelName:cf,backendName:"webgl",kernelFunc:Fle},Mle="return tan(x);",zle=it({opSnippet:Mle}),Lle={kernelName:Yi,backendName:"webgl",kernelFunc:zle},Ble=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Wle=it({opSnippet:Ble}),Vle={kernelName:So,backendName:"webgl",kernelFunc:Wle},Ule=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let r=wt(this.rank),s=Gle(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Gle(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}function T4(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if(s.dtype==="string"||s.shape.length>5){let l=n.readSync(s.dataId),c=s.dtype==="string"?l.map(p=>w.decodeString(p)):l,u=Le(s.shape,s.dtype,c),d=mee(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Ule(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}var Hle={kernelName:Js,backendName:"webgl",kernelFunc:T4},jle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},qle=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Ol(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function N4(e){let t=1;for(;t<e;)t*=2;return t}function Xle(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,u=c[c.length-1];if(n.shouldExecuteOnCPU([s])||u<i||a>l){let F=n.readSync(s.dataId),[_,P]=gee(F,c,s.dtype,a,o);return[n.makeTensorInfo(_.shape,_.dtype,_.values),n.makeTensorInfo(P.shape,P.dtype,P.values)]}if(a===0)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(u===1)return[s,Fp({attrs:{shape:c,dtype:"int32",value:0},backend:n})];let d=n.texData.get(s.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(s):s,m=w.sizeFromShape(c)/u,g=ve({inputs:{x:h},attrs:{shape:[m,u]},backend:n});p&&Ol(n,h);let y=N4(a),x=N4(u),A=null,b=()=>A===null?[g,g]:[g,A],v=(F,_,P)=>{let T=b(),O=new jle(P),K=[[u],[A===null?1:0],[Number.NEGATIVE_INFINITY],[F],[_]],z=A;A=n.runWebGLProgram(O,T,"int32",K),Ol(n,z)};for(let F=1;F<y;F*=2){let _=F*2;for(let P=F;P>=1;P/=2)v(_,P,[m,x])}for(let F=x;F>y;F/=2){let _=b(),P=new qle([m,F/2]),O=[[u],[A===null?1:0],[y]],G=A;A=n.runWebGLProgram(P,_,"int32",O),Ol(n,G);let K=y/2,z=K*2;for(let j=K;j>=1;j/=2)v(z,j,A.shape)}let C=A;A=wc({inputs:{x:A},backend:n,attrs:{begin:0,size:[m,a]}}),Ol(n,C);let I=m4({inputs:{x:g,indices:A},backend:n,attrs:{axis:1,batchDims:1}});Ol(n,g);let E=c.slice(0,-1);E.push(a),C=A,A=ve({inputs:{x:A},attrs:{shape:E},backend:n}),Ol(n,C);let R=I;return I=ve({inputs:{x:I},attrs:{shape:E},backend:n}),Ol(n,R),[I,A]}var Kle={kernelName:Ji,backendName:"webgl",kernelFunc:Xle},Zle=class{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Yle(e){let{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=r,[u,d,p,h]=s.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new Zle(d,p,o,i,l,g);return n.runWebGLProgram(y,[s,a],"float32")}var Jle={kernelName:Qi,backendName:"webgl",kernelFunc:Yle};function Qle(e){let{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;hc(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=r.readSync(a.dataId),{outputValues:i,outputShape:l,indices:c}=yee(o,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}var eue={kernelName:df,backendName:"webgl",kernelFunc:Qle};function tue(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s,i=o.shape.length,l=s.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=wc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),y=ve({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var nue={kernelName:el,backendName:"webgl",kernelFunc:tue},rue=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];let i="0.0",l="sumValue",c=Math.floor(n/4)*4,u=n%4,d=`
        sumValue += dot(values, segFilter);
    `,p="";s%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let h="";s%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}};function sue(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,l=[],c=0,u=N.getAxesPermutation([c],i),d=s;u!=null&&(d=Xn({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(d),c=N.getInnerMostAxes(1,i)[0]);let p=N.segment_util.computeOutShape(d.shape,c,o),h=w.sizeFromShape([d.shape[c]]),f=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=Wd(s.dtype),g=(b,v,C,I,E)=>{let R=b.shape[0],F=b.shape[1],_=N.segment_util.segOpComputeOptimalWindowSize(F,E),P={windowSize:_,inSize:F,batchSize:R,numSegments:E},T=new rue(P,v),O=n.compileAndRun(T,[b,C],I);if(l.push(O),O.shape[1]===E)return O;let G=k4({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),K=T4({inputs:{x:G},backend:n,attrs:{reps:[F/_]}});return l.push(G),l.push(K),g(O,v,K,I,E)},y=g(f,"unsortedSegmentSum",a,m,o),x=ve({inputs:{x:y},backend:n,attrs:{shape:p}}),A=x;if(u!=null){l.push(x);let b=N.getUndoAxesPermutation(u);A=Xn({inputs:{x:A},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var aue={kernelName:_d,backendName:"webgl",kernelFunc:sue},oue=[pte,fte,yte,bte,wte,Ste,Tte,Ete,Pte,Fte,zte,Wte,Gte,Xte,Yte,Qte,tne,ane,ine,une,hne,bne,wne,Ine,Rne,Dne,One,qee,Lne,Gne,Xne,ere,nre,sre,ore,lre,dre,fre,yre,xre,vre,Ire,Cre,Rre,Dre,Fre,zre,Bre,Gre,Xre,Jre,tse,sse,ase,ise,use,dse,hse,mse,xse,wse,Sse,Tse,Rse,Pse,Mse,Wse,jee,Use,Vne,jse,Kse,Jse,Kee,nae,oae,lae,pae,mae,xae,wae,Cae,Rae,Pae,Fae,Lae,Wae,Uae,qae,Kae,Yae,Qae,toe,aoe,uoe,hoe,voe,ete,Soe,Noe,_oe,$oe,Cne,Moe,Loe,Woe,Goe,Xoe,Yee,Zoe,Yoe,Tne,yoe,eie,sie,lie,nte,pie,mie,xie,wie,Cie,Nie,_ie,$ie,Oie,Lie,Vie,jie,Kie,Jie,tle,Ane,xoe,sle,ole,lle,cle,ple,fle,gle,Ale,ble,kle,Sle,Tle,Rle,Dle,$le,Ole,Aoe,ute,Lle,Vle,Hle,Kle,Jle,cte,eue,nue,aue,zoe];for(let e of oue)Jr(e);var Gs=Y();Gs.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Gs.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Gs.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);Gs.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);Gs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);Gs.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Gs.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Gs.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Gs.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Gs.registerFlag("WEBGPU_USE_IMPORT",()=>!1);function iue(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,r=e.map(a=>`${t}[${a}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}function In(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function l0(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function Bx(){return`
  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]
`}function ca(){return`
  ${Bx()}
  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,
          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,
          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Je(){return`
    ${ca()}
      let index = getGlobalIndex();
`}function lue(e,t,n,r=!1){let s=[];if(s.push(`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),r===!0)return s.push(`
      struct Matrix0 {
        numbers: array<${l0(t.dtype,n.isVec4)}>;
      };
      struct Uniform {
        size            : i32;
        numChannels     : i32;
        outShapeStrides : vec2<i32>;
        dispatchSize    : vec3<u32>;
      };

      [[group(0), binding(0)]] var<storage, write> result : Matrix0;
      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;
    `),[E4,s.join(`
`),R4(t.shape),n.getUserCode()].join(`
`);let a="struct Uniforms { NAN : f32; ";n.variableNames.forEach((d,p)=>{a+=`${d.charAt(0).toLowerCase()+d.slice(1)}Shape : ${In(e[p].shape.length)}; `}),a+=`outShape : ${In(t.shape.length)} ; `;let o=t.shape.length-1;a+=`
       outShapeStrides: ${In(o)}; `,n.size&&(a+="size : i32; "),n.uniforms&&(a+=n.uniforms),a+="};",s.push(a),n.atomic?s.push(`
    struct Matrix0 {
        numbers: array<atomic<i32>>;
    };

    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;
  `):s.push(`
    struct Matrix0 {
        numbers: array<${l0(t.dtype,n.isVec4)}>;
    };

    [[group(0), binding(0)]] var<storage, write> result : Matrix0;
  `),n.variableNames.forEach((d,p)=>{s.push(`
    struct Matrix${1+p} {
      numbers: array<${l0(e[p].dtype,n.isVec4)}>;
    };
    [[group(0), binding(${1+p})]] var<storage, read> ${d} : Matrix${1+p};
    `)}),a!==""&&s.push(`
    [[group(0), binding(${1+n.variableNames.length})]] var<uniform> uniforms : Uniforms;
    `);let[i,l]=fue(t.shape,n.dispatchLayout),c=[E4,s.join(`
`),R4(t.shape),i,uue(t.shape.length)];if(n.atomic||c.push(cue(t.shape,t.dtype,n.isVec4)),l===t.shape.length){let d=e.map(p=>due(p,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);c.push(d)}return c.push(n.getUserCode()),c.join(`
`)}var E4=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  fn isNanCustom(val : f32) -> bool {
    if (val > 0.0) {
      return false;
    }
    if (val < 0.0) {
      return false;
    }
    if (val == 0.0) {
      return false;
    }
    return true;
  }
  fn isNanCustomVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isNanCustom(val[0]), isNanCustom(val[1]), isNanCustom(val[2]), isNanCustom(val[3]));
  }
`;function uue(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function cue(e,t,n){let r=e.length,s=l0(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result.numbers[flatIndex] = ${s}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result.numbers[flatIndex] = ${s}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result.numbers[flatIndex] = ${s}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result.numbers[flatIndex] = ${s}(value);
    }`,r>=2){let o=["d0","d1","d2","d3"].slice(0,r),i=In(r);n?a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}function due(e,t,n,r){let s=pue(e,n);return e.shape.length<=t.length&&(s+=hue(e,t,n,r)),s}function pue(e,t){let n=e.name,r=e.shape.length,s=In(r),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3"].slice(0,r),i=o.map(u=>`${u} : i32`).join(", ");if(r<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}.numbers[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}.numbers[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,c=`${r}D`;return r===0&&(c="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}.numbers[getIndexFromCoords${c}(${s}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}.numbers[getIndexFromCoords${c}(${s}(${o.join(",")}),
        ${l})]);
    }
   `}function hue(e,t,n,r){let s=e.name,a=s.charAt(0).toUpperCase()+s.slice(1),o="get"+a+"ByOutput",i=e.shape.length,l=t.length,c=In(l);if(w.arraysEqual(e.shape,t)&&r)return n?`
        fn ${o}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${s}.numbers[globalIndex]);
        }

        fn ${o}Coords(coords : ${c}) -> vec4<f32> {
          return vec4<f32>(${s}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}Index(globalIndex : i32) -> f32 {
        return f32(${s}.numbers[globalIndex]);
      }

      fn ${o}Coords(coords : ${c}) -> f32 {
        return f32(${s}.numbers[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let u=N.getBroadcastDims(e.shape,t),d=l-i,p="";if(i===0)return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}Coords(coords : ${c}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}Index(globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}Coords(coords : ${c}) -> f32{
        return get${a}();
      }
    `;l<2&&u.length>=1?p="coords = 0;":p=u.map(g=>`coords[${g+d}] = 0;`).join(`
`);let h="";if(l<2&&i>0)h="coords";else if(l>1){let g=In(i),y=e.shape.map((x,A)=>`coords[${A+d}]`).join(", ");h=`${g}(${y})`}else h="coords";let f=`uniforms.${s.charAt(0).toLowerCase()+s.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${p}
        return ${s}.numbers[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }

      fn ${o}Coords(coordsIn : ${c}) -> vec4<f32> {
        var coords = coordsIn;
        ${p}
        return ${s}.numbers[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${o}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${p}
      return f32(${s}.numbers[getIndexFromCoords${m}(${h}, ${f})]);
    }

    fn ${o}Coords(coordsIn : ${c}) -> f32 {
      var coords = coordsIn;
      ${p}
      return f32(${s}.numbers[getIndexFromCoords${m}(${h}, ${f})]);
    }
  `}function fue(e,t){let{x:n,y:r=[],z:s=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords() -> ${In(a)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,a];let o="",i=[n,r,s],l=0;for(let p=0;p<i.length;p++){let h=i[p];if(h.length!==0)if(l+=h.length,h.length===1)o+=`let d${h[0]} = i32(globalId[${p}]);`;else{let f=iue(h,"uniforms.outShape");o+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${p} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${p} - d${h[m]} * ${f[m]};`:o+=`index${p} = index${p} - d${h[m]} * ${f[m]};`}}let c=[];for(let p=0;p<l;p++)c.push(`d${p}`);let u=In(l),d=`fn getOutputCoords() -> ${u} {
    ${o}
  `;return c.length===0?d+=`return ${u}(0); }`:d+=`return ${u}(${c.join(",")}); }`,[d,l]}function R4(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=w.computeStrides(e),r=In(t),s=[];for(let o=0;o<t;o++)s.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((o,i)=>{let l=`let ${s[i]} = index2 / uniforms.outShapeStrides[${i}]`,c=i===n.length-1?`let ${s[i+1]} = index2 - ${s[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${s[i]} * uniforms.outShapeStrides[${i}]`;return`${l}; ${c};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${r} {
      ${a}
      return ${r}(${s.join(",")});
    }
  `}var _4={};Me(_4,{ArrayBufferToTypedArray:()=>D4,GPUBytesPerElement:()=>Gx,computeDispatch:()=>Oe,computeWorkGroupSizeForConv2d:()=>Wx,computeWorkGroupSizeForMatMul:()=>Vx,computeWorkPerThreadForConv2d:()=>Ux,flatDispatchLayout:()=>He,isWebGPUSupported:()=>Hx,tilesFitEvenlyIntoShape:()=>da});var Sc=65535,Ml=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function da(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,r)=>n%e[r]===0)}function Oe(e,t,n=[1,1,1],r=[1,1,1]){let[s,a,o]=[Math.ceil(Ml(e.x.map(l=>t[l]))/(n[0]*r[0])),e.y?Math.ceil(Ml(e.y.map(l=>t[l]))/(n[1]*r[1])):1,e.z?Math.ceil(Ml(e.z.map(l=>t[l]))/(n[2]*r[2])):1];if(s<=Sc&&a<=Sc&&o<=Sc)return[s,a,o];w.assert(s>Sc&&e.y===void 0&&e.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(s));return i>Sc?(i=Math.ceil(Math.cbrt(s)),w.assert(i<=Sc,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]}function Wx(e,t){let n=Ml(e.x.map(s=>t[s])),r=Ml(e.y.map(s=>t[s]));return n<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function Vx(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function Ux(e,t){let n=Ml(e.x.map(s=>t[s])),r=Ml(e.y.map(s=>t[s]));return n<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function He(e){return{x:e.map((t,n)=>n)}}function Gx(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function D4(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Hx(){return!!navigator.gpu}var qt=(e=>(e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.SUB=2]="SUB",e[e.DIV=3]="DIV",e[e.EQUAL=4]="EQUAL",e[e.GREATER=5]="GREATER",e[e.GREATER_EQUAL=6]="GREATER_EQUAL",e[e.LESS=7]="LESS",e[e.LESS_EQUAL=8]="LESS_EQUAL",e[e.LOGICAL_AND=9]="LOGICAL_AND",e[e.NOT_EQUAL=10]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",e[e.INT_DIV=12]="INT_DIV",e[e.POW=13]="POW",e[e.PRELU=14]="PRELU",e[e.MAX=15]="MAX",e[e.MIN=16]="MIN",e[e.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG",e))(qt||{}),mue="return a + b;",gue="return areal * breal - aimag * bimag;",yue="return areal * bimag + aimag * breal;",Aue="return a / b;",xue="return a * b;",bue="return (a - b) * (a - b);",vue="return a - b;",wue="return f32(a == b);",kue="return vec4<f32>(a == b);",Iue="return f32(a > b);",Sue="return vec4<f32>(a > b);",Cue="return f32(a >= b);",Tue="return vec4<f32>(a >= b);",Nue="return f32(a < b);",Eue="return vec4<f32>(a < b);",Rue="return f32(a <= b);",_ue="return vec4<f32>(a <= b);",Due="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Pue=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,$ue=`
  if (isNanCustom(a)) { return a; }
  if (isNanCustom(b)) { return b; }
  `,P4=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Fue=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Oue=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Mue="return f32(a != b);",zue="return vec4<f32>(a != b);",Lue=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Bue=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${P4}
  return resultTemp;
  `,Wue="if (a < 0.0) { return b * a; }  return a;",Vue=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function $4(e,t){let n=t?P4:$ue;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isNanCustomVec4(a) | isNanCustomVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function Op(e,t){switch(e){case 0:return xue;case 1:return mue;case 2:return vue;case 3:return Aue;case 4:return t?kue:wue;case 5:return t?Sue:Iue;case 6:return t?Tue:Cue;case 7:return t?Eue:Nue;case 8:return t?_ue:Rue;case 9:return t?Pue:Due;case 10:return t?zue:Mue;case 11:return bue;case 12:return t?Oue:Fue;case 14:return t?Vue:Wue;case 15:return $4("max",t);case 16:return $4("min",t);case 13:return t?Bue:Lue;case 17:return gue;case 18:return yue;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var kt=(e=>(e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.LINEAR=8]="LINEAR",e[e.LOG=9]="LOG",e[e.LOGICAL_NOT=10]="LOGICAL_NOT",e[e.NEG=11]="NEG",e[e.PRELU=12]="PRELU",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.LEAKYRELU=15]="LEAKYRELU",e[e.RSQRT=16]="RSQRT",e[e.SIN=17]="SIN",e[e.SINH=18]="SINH",e[e.SIGMOID=19]="SIGMOID",e[e.SQRT=20]="SQRT",e[e.SQUARE=21]="SQUARE",e[e.TANH=22]="TANH",e[e.TO_INT=23]="TO_INT",e))(kt||{}),Uue="return abs(a);",Gue="return ceil(a);",Hue="return cos(a);",jue=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,que="return exp(a) - 1.0;",Xue="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Kue=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Zue="return exp(a);",Yue="return floor(a);",Jue="return a;",Que=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,ece="return f32(!(a >= 1.0));",tce="return -a;",nce="return (a < 0.0) ? b * a : a;",rce="if (a < 0.0) { return uniforms.alpha * a; } return a;",sce="if(a < 0.0) { return 0.0; } return a;",ace="return clamp(a, 0.0, 6.0);",oce="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",ice=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isNanCustomVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,lce="return 1.0/sqrt(a);",uce="return 1.0 / (1.0 + exp(-1.0 * a));",cce="return sin(a);",dce=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,pce="return sqrt(a);",hce="return a * a;",fce=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,mce="return f32(i32((a)));";function Cc(e,t){switch(e){case 0:return Uue;case 2:return Hue;case 3:return jue;case 1:return Gue;case 4:return t?Kue:Xue;case 5:return Zue;case 6:return que;case 7:return Yue;case 8:return Jue;case 9:return Que;case 10:return ece;case 11:return tce;case 12:return nce;case 15:return rce;case 13:return t?ice:sce;case 14:return t?oce:ace;case 16:return lce;case 19:return uce;case 17:return cce;case 18:return dce;case 20:return pce;case 21:return hce;case 22:return fce;case 23:return mce;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function pa(e,t=!1){if(e===null)return null;if(e==="linear")return Cc(kt.LINEAR);if(e==="relu")return Cc(kt.RELU,t);if(e==="elu")return Cc(kt.ELU,t);if(e==="relu6")return Cc(kt.RELU6,t);if(e==="prelu")return Op(qt.PRELU,t);if(e==="sigmoid")return Cc(kt.SIGMOID);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function F4(e,t){let n={RowPerThread:e[1],ColPerThread:e[0],TileAOuter:t[1]*e[1],TileBOuter:t[0]*e[0],TileInner:t[0]*e[0]};return`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${n.TileInner/n.ColPerThread}>, ${n.TileAOuter}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n.TileBOuter/n.ColPerThread}>, ${n.TileInner}>;

  let RowPerThread = ${n.RowPerThread};
  let ColPerThread = ${n.ColPerThread}; // only support ColPerThread = 4
  let TileAOuter = ${n.TileAOuter};
  let TileBOuter = ${n.TileBOuter};
  let TileInner = ${n.TileInner};

  ${ca()}

    let tileRow = i32(localId.y) * RowPerThread;
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * RowPerThread;
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, ${n.RowPerThread}>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / ${t[1]};
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}function gce(e){return`
  var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;
  let tileSize = ${e[0]*4};
  ${ca()}
    let tileCol = i32(localId.x);
    let globalCol = i32(globalId.x);
    let globalRow = i32(globalId.y);

    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;

    // Without this initialization strange values show up in acc.
    var acc = vec4<f32>(0.0);

    // Loop over shared dimension.
    for (var t = 0; t < numTiles; t = t + 1) {
      // Load one tile of A into local memory.
      let colA = t * tileSize / 4 + tileCol;
      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);

      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileSize / 4; k = k + 1) {
        let rowB = t * tileSize + k * 4;
        let BCached0 = mm_readB(rowB, globalCol, globalId);
        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);
        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);
        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);

        let ACached = mm_Asub[k];
        acc = acc + BCached0 * ACached.x;
        acc = acc + BCached1 * ACached.y;
        acc = acc + BCached2 * ACached.z;
        acc = acc + BCached3 * ACached.w;
      }

      workgroupBarrier();
    }

    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
      mm_write(globalRow, globalCol, acc, globalId);
    }
  }
`}var yce=class{constructor(e,t,n,r=null,s=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.isVec4=!0,this.vecSize=4,this.outputShape=t,this.workGroupSize=Vx(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);let o=r!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=o,this.activation=s,this.hasPreluActivationWeights=i,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],r=this.workGroupSize[1]*this.workPerThread,s=this.workGroupSize[0]*this.vecSize,a=s,o=[r,a],i=[a,s];return[da(o,this.aShape.slice(1)),da(i,n.slice(1))]}getUserCode(){let e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",r="";if(this.activation){let o=pa(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,r="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};
        let batch = i32(globalId.z);
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${s}
          ${r}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${this.outputShape[1]>1?F4([this.vecSize,this.workPerThread,1],this.workGroupSize):gce(this.workGroupSize)}

    `}};function jx(e,t){let n=t[1]*e[1],r=t[0]*e[0],s=n>r?n:r;return`
    var<workgroup> mm_Asub : array<array<f32, ${s}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${s}>;
    ${ca()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${s} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${s} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${s} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${s} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${s} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${s}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function Ace(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${ca()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var O4=class{constructor(e,t,n,r=!1,s=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=r?e[1]:e[2];this.workGroupSize=Vx(t[1],l,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let c=a!=null,u=i!=null;c&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=r,this.transposeB=s,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=u;let d=this.outputShape[2],p=this.transposeB?[this.outputShape[0],d,l]:[this.outputShape[0],l,d];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${r}_${s}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,r=t>n?t:n;this.outputShape[1]===1&&(r*=4),w.assert(r%this.workGroupSize[0]===0&&r%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[t,r],a=[r,n];return[da(s,this.aShape.slice(1)),da(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",r="";if(this.activation){let o=pa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,r="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${r}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?jx([this.workPerThread,this.workPerThread,1],this.workGroupSize):Ace(this.workGroupSize)}
    `}};function xce(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${ca()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var bce=class{constructor(e,t=!1,n=!1,r=null,s=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize);let o=r!=null,i=a!=null;o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=o,this.activation=s,this.hasPreluActivationWeights=i,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e;this.transposeA===!1?e="return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":e="return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",r="";if(this.activation){let o=pa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,r="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        ${e}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${s}
        ${r}
        setOutputAtCoords(batch, row, col, value);
      }
      ${xce()}
    `}};function vce(e){let t=e[1]/2,n=e[0],r=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${r}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${r}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${r}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${r}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${ca()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${r};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${r};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${r};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${r};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${r}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${r};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${r};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${r}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var wce=class{constructor(e,t,n,r=null,s=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],w.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=r!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=s,this.hasPreluActivationWeights=i,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",r="";if(this.activation){let o=pa(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,r="value = activation(value, outCoord);"}let s=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        let batch = i32(globalId.z);
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${s}
          ${r}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${vce(this.workGroupSize)}
    `}};function Xe(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,a=w.sizeFromShape(r.shape),o=w.inferFromImplicitShape(s,a),i=w.sizeFromShape(o);return w.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}var kce={kernelName:Wi,backendName:"webgpu",kernelFunc:Xe};function qx({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let c=e.shape.length,u=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=r?t.shape[u-1]:t.shape[u-2],h=n?e.shape[c-1]:e.shape[c-2],f=r?t.shape[u-2]:t.shape[u-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),x=w.sizeFromShape(g),b=ll.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let v=n?[y,d,h]:[y,h,d],C=r?[x,f,p]:[x,p,f],I=Xe({inputs:{x:e},backend:s,attrs:{shape:v}}),E=Xe({inputs:{x:t},backend:s,attrs:{shape:C}}),R=[I,E],F=Math.max(y,x),_=d%4===0&&f%4===0&&!n&&!r&&f>=32,P;h*f<=32?P=new bce([F,h,f],n,r,a,l,o):!n&&!r&&(h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||d>=2*h))?P=new wce(v,C,[F,h,f],a,l,o):_?P=new yce(v,[F,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),a,l,o):P=new O4(v,[F,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,r,a,l,o);let T=[I,E];a&&T.push(a),o&&T.push(o);let O=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[d]}],G=s.runWebGPUProgram(P,T,e.dtype,O),K=Xe({inputs:{x:G},backend:s,attrs:{shape:b}});R.push(G);for(let z of R)s.disposeData(z.dataId);return K}function Ice(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=r;return qx({a:s,b:a,transposeA:l,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}var Sce={kernelName:No,backendName:"webgpu",kernelFunc:Ice},M4=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Op(this.op,!1)}
      }

      ${Je()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Cce=class{constructor(e,t,n,r){this.variableNames=["A","B"],this.size=!0;let s=256;this.workGroupSize=[s,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=He(this.outputShape),this.lastDimensionSize=r?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=r,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Op(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Je()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},Tce=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Op(this.op,this.isVec4)}
      }
      ${Je()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},z4=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Op(this.op,!1)}
      }
      ${Je()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function L4(e,t,n){if(w.arraysEqual(t,n)&&w.sizeFromShape(t)%4===0)return new Tce(e,t,n);let s=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return s||a?new Cce(e,t,n,a):new z4(e,t,n)}function is(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Nce={kernelName:Qa,backendName:"webgpu",kernelFunc:is};function Tc(e){let{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=is({inputs:{x:r},backend:n}),l=is({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var Ece={kernelName:gd,backendName:"webgpu",kernelFunc:Tc},Mp=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Cc(this.op,!1)}
      }
      ${Je()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function Nn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:r,backend:s})=>{let{x:a}=r,o=s,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let c=o.tensorMap.get(a.dataId),u=t(c.values,i);return o.makeTensorInfo(a.shape,i,u)}let l=new Mp(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function Kn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:r}){return({inputs:s,backend:a})=>{let{a:o,b:i}=s,l=a;if(n&&o.dtype==="complex64"){let d=l.tensorMap.get(o.dataId),p=l.tensorMap.get(i.dataId),h,f;if(e!==qt.MUL)[h,f]=[[d.complexTensorInfos.real,p.complexTensorInfos.real],[d.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(g=>{let[y,x]=g,A={dataId:y.dataId,dtype:y.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},v=L4(e,o.shape,i.shape);return l.runWebGPUProgram(v,[A,b],Wn(y.dtype,x.dtype))});else{let g=new M4(qt.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),y=new M4(qt.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),x=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape}];h=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(y,x,"float32")}let m=Tc({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let c=r||Wn(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let d=l.tensorMap.get(o.dataId).values,p=l.tensorMap.get(i.dataId).values,h=o.dtype==="string"?N.fromUint8ToStringArray(d):d,f=o.dtype==="string"?N.fromUint8ToStringArray(p):p,[m,g]=t(o.shape,i.shape,h,f,c);return l.makeTensorInfo(g,c,m)}let u=L4(e,o.shape,i.shape);return l.runWebGPUProgram(u,[o,i],c)}}var{addImpl:Rce,ceilImpl:_ce,concatImpl:Dce,equalImpl:Pce,expImpl:$ce,expm1Impl:Fce,floorImpl:Oce,gatherNdImpl:Mce,gatherV2Impl:zce,greaterEqualImpl:Lce,greaterImpl:Bce,lessEqualImpl:Wce,lessImpl:Vce,logImpl:Uce,maxImpl:Gce,maximumImpl:Hce,minimumImpl:jce,multiplyImpl:qce,negImpl:Xce,notEqualImpl:Kce,prodImpl:Zce,rangeImpl:Yce,rsqrtImpl:Jce,simpleAbsImpl:Qce,sliceImpl:ede,stridedSliceImpl:tde,stringNGramsImpl:nde,subImpl:rde,tileImpl:sde,topKImpl:ade,transposeImpl:ode,uniqueImpl:aAe}=Om,ide=Nn({opType:kt.ABS,cpuKernelImpl:Qce}),lde={kernelName:yi,backendName:"webgpu",kernelFunc:ide},ude=Kn({opSnippet:qt.ADD,cpuKernelImpl:Rce,supportsComplex:!0}),cde={kernelName:Zs,backendName:"webgpu",kernelFunc:ude},dde=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});let t=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${Je()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function pde(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return is({inputs:{x:r[0]},backend:n});let s=r.map(i=>i.dtype).reduce((i,l)=>Wn(i,l)),a=r.map(i=>i.shape),o=new dde(a);return n.runWebGPUProgram(o,r,s)}var hde={kernelName:Fa,backendName:"webgpu",kernelFunc:pde},B4=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32; infinityValue : f32;",this.size=!0;let r=[t];N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.length),this.op=n==="min"?"<":">";let[s]=N.computeOutAndReduceShapes(e,r);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(s,a)=>this.outputShape.length===1?s:`${s}[${a}]`,n=s=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${s}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Je()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);
          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},fde=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Bx()}
      fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,
              [[builtin(workgroup_id)]] workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] =
              A.numbers[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},mde=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=In(this.outputShape.length),t=gde(this.newDim);return`
      ${Je()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A.numbers[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function gde(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let r=0;r<e.length;r++)n[e[r]]=`resRC[${r}]`;return n.join()}function zl(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=s.shape[a[u]];if(n.shouldExecuteOnCPU([s])){let d=o.tensorMap.get(s.dataId).values,p=ode(d,s.shape,s.dtype,a,l);return n.makeTensorInfo(l,s.dtype,p)}if(s.shape.length===2&&w.arraysEqual(a,[1,0])){let u=new fde(s.shape,a);return o.runWebGPUProgram(u,[s],s.dtype)}let c=new mde(s.shape,a);return o.runWebGPUProgram(c,[s],s.dtype)}var yde={kernelName:Co,backendName:"webgpu",kernelFunc:zl};function Ade(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r,o=w.parseAxisParam(a,s.shape),i=N.getAxesPermutation(o,s.shape.length),l=s,c=[];i!=null&&(l=zl({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let u=new B4(l.shape,o[0],"max"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var xde={kernelName:Oa,backendName:"webgpu",kernelFunc:Ade};function bde(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r,o=w.parseAxisParam(a,s.shape),i=N.getAxesPermutation(o,s.shape.length),l=s,c=[];i!=null&&(l=zl({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(l),o=N.getInnerMostAxes(o.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let u=new B4(l.shape,o[0],"min"),d=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(u,[l],"int32",d);return c.forEach(h=>n.disposeData(h.dataId)),p}var vde={kernelName:hu,backendName:"webgpu",kernelFunc:bde},W4=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Je()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},V4=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function wde(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r,c=1,u=N.computePool2DInfo(s.shape,a,o,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&w.arraysEqual(u.inShape,u.outShape))return is({inputs:{x:s},backend:n});let d,p=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return u.filterHeight===1&&u.filterWidth===1?d=new V4(u):(d=new W4(u,"avg"),p.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[s],s.dtype,p)}var kde={kernelName:Ma,backendName:"webgpu",kernelFunc:wde};function Ide(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return qx({a:s,b:a,transposeA:o,transposeB:i,backend:n})}var Sde={kernelName:za,backendName:"webgpu",kernelFunc:Ide},Cde=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${In(e.length)}; `,this.shaderKey="slice"}getUserCode(){let e=In(this.rank),t=Tde(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${Xx[a]} = uniforms.start[${a}] + coords.${Xx[a]};`),`
      ${Je()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},Xx=["x","y","z","w","u","v"];function Tde(e){if(e===1)return"sourceLoc";if(e<=6)return Xx.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function Nc(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,l]=zt.parseSliceParams(s,a,o);if(zt.assertParamsValid(s,i,l),n.shouldExecuteOnCPU([s])||s.dtype==="string"){let d=n.tensorMap.get(s.dataId),p=ede(d.values,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,p)}if(w.sizeFromShape(l)===0)return n.makeTensorInfo(l,s.dtype,[]);let c=new Cde(i,l),u=[{type:"int32",data:i}];return n.runWebGPUProgram(c,[s],s.dtype,u)}var Nde={kernelName:ji,backendName:"webgpu",kernelFunc:Nc},Ede=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;w.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=N.getReshaped(s.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(s.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=[],f=Xe({inputs:{x:s},backend:n,attrs:{shape:l}}),m=zl({inputs:{x:f},backend:n,attrs:{perm:c}}),g=Xe({inputs:{x:m},backend:n,attrs:{shape:u}}),y=Nc({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeData(x.dataId)),y},Rde={kernelName:Ai,backendName:"webgpu",kernelFunc:Ede},U4=Kn({opSnippet:qt.NOT_EQUAL,dtype:"bool",cpuKernelImpl:Kce}),_de={kernelName:$i,backendName:"webgpu",kernelFunc:U4};function zp(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.tensorMap.get(r.dataId);return is({inputs:{x:s.complexTensorInfos.real},backend:n})}var Dde={kernelName:Sd,backendName:"webgpu",kernelFunc:zp};function Pde(e,t){let n=new Mp(e.shape,kt.TO_INT),r=t.runWebGPUProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Kx(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if(a==="complex64"){if(s.dtype==="complex64")return is({inputs:{x:s},backend:n});let o=Ht(s.shape),i=Kx({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=Tc({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(s.dtype==="complex64"){let o=zp({inputs:{input:s},backend:n}),i=Kx({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!w.hasEncodingLoss(s.dtype,a)){let o=is({inputs:{x:s},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return Pde(s,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),l=U4({inputs:{a:s,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}var $de={kernelName:La,backendName:"webgpu",kernelFunc:Kx},Fde=Nn({opType:kt.CEIL,cpuKernelImpl:_ce}),Ode={kernelName:Ba,backendName:"webgpu",kernelFunc:Fde},Mde=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Je()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isNanCustom(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},zde=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Je()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isNanCustom(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Lde(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return w.sizeFromShape(s.shape)%4===0?i=new Mde(s.shape):i=new zde(s.shape),n.runWebGPUProgram(i,[s],s.dtype,l)}var Bde={kernelName:Ys,backendName:"webgpu",kernelFunc:Lde},Wde=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)e.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Je()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function u0(e){let{inputs:t,backend:n}=e,{input:r}=t,s=n.tensorMap.get(r.dataId);return is({inputs:{x:s.complexTensorInfos.imag},backend:n})}var Vde={kernelName:vd,backendName:"webgpu",kernelFunc:u0};function Zx(e,t,n){let r=e[0].dtype;if(r==="complex64"){let h=e.map(x=>zp({inputs:{input:x},backend:n})),f=e.map(x=>u0({inputs:{input:x},backend:n})),m=Zx(h,t,n),g=Zx(f,t,n),y=Tc({inputs:{real:m,imag:g},backend:n});return h.forEach(x=>n.disposeData(x.dataId)),f.forEach(x=>n.disposeData(x.dataId)),n.disposeData(m.dataId),n.disposeData(g.dataId),y}let s=n.shouldExecuteOnCPU(e);if(r==="string"&&(s=!0),s){let h=e.map(b=>{let v=w.sizeFromShape(b.shape.slice(t));return Xe({inputs:{x:b},backend:n,attrs:{shape:[-1,v]}})}),f=h.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),m=N.computeOutShape(h.map(b=>b.shape),1),g=h[0].shape[0]===1,y=Dce(f,m,r,g),x=N.computeOutShape(e.map(b=>b.shape),t),A=n.makeTensorInfo(x,r,y);return h.forEach(b=>n.disposeData(b.dataId)),A}let{tensors2D:a,outShape:o}=Ude(e,t,n),i=a.map(h=>h.shape),l=new Wde(i),c=[],u=new Array(i.length-1);if(u.length>0){u[0]=i[0][1],c.push({type:"int32",data:[u[0]]});for(let h=1;h<u.length;h++)u[h]=u[h-1]+i[h][1],c.push({type:"int32",data:[u[h]]})}let d=n.runWebGPUProgram(l,a,a[0].dtype,c);a.forEach(h=>n.disposeData(h.dataId));let p=Xe({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeData(d.dataId),p}function Ude(e,t,n){let r=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>Xe({inputs:{x:a},backend:n,attrs:{shape:[w.sizeFromShape(a.shape.slice(0,t)),w.sizeFromShape(a.shape.slice(t))]}})),outShape:r}}function G4(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=w.parseAxisParam(s,t[0].shape)[0],o=N.computeOutShape(t.map(c=>c.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(c=>w.sizeFromShape(c.shape)>0);if(i.length===1)return is({inputs:{x:i[0]},backend:n});let l=i.map(c=>c.shape);return N.assertParamsConsistent(l,a),Zx(i,a,n)}var Gde={kernelName:xi,backendName:"webgpu",kernelFunc:G4},Hde=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;
      inChannels : i32;`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Je()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}};function H4({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,c=n.dataFormat==="channelsLast",u=!1,d=!1,p=c?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],h=Xe({inputs:{x:e},backend:r,attrs:{shape:[1,p,n.inChannels]}}),f=Xe({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),m=qx({a:h,b:f,transposeA:u,transposeB:d,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=Xe({inputs:{x:m},backend:r,attrs:{shape:n.outShape}});return r.disposeData(h.dataId),r.disposeData(f.dataId),r.disposeData(m.dataId),g}function jde({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:c,inChannels:u,strideWidth:d,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=n,A=x==="channelsLast",b=l*c*u,v=m*f,C=[v,b],I=!1,E=!1,R=[],F=Xe({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),_=Xe({inputs:{x:t},backend:r,attrs:{shape:[1,b,-1]}});R.push(F),R.push(_);let P=new Hde(C,A),T=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[d,p]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[u*l]},{type:"int32",data:[u]}],O=r.runWebGPUProgram(P,[F],F.dtype,T),G=Xe({inputs:{x:O},backend:r,attrs:{shape:[1,C[0],C[1]]}});R.push(O),R.push(G);let K=[1,C[0],C[1]],z=new O4(K,[1,v,n.outChannels],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),I,E),j=K[1],W=K[2],Q=n.outChannels,ne=[{type:"int32",data:[j]},{type:"int32",data:[Q]},{type:"int32",data:[W]}],oe=r.runWebGPUProgram(z,[G,_],G.dtype,ne),Z=A?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],ae=Xe({inputs:{x:oe},backend:r,attrs:{shape:Z}});R.push(oe);for(let se of R)r.disposeData(se.dataId);return ae}var j4=class{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      dimAOuter : i32; dimBOuter : i32; dimInner : i32;`,this.isVec4=!0,this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];let a=[4,4,1];this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,a),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,this.hasLeakyreluAlpha=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(a),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){let t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],r=n,s=[t,r],a=[r,n],o=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],l=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[da(s,[o,l]),da(a,[l,i])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x.numbers[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x.numbers[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let t=F4([4,4,1],this.workGroupSize),s=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x.numbers[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,a=this.fitA?`${s}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${s}
         }
         return vec4<f32>(0.0);
        `,o=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,i="",l="";if(this.activation){let d=pa(this.activation,this.isVec4);if(this.hasPreluActivationWeights)i=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${d}
        }`;else{if(this.hasLeakyreluAlpha)throw i=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${d}
        }`,new Error("Leakyrelu is not supported.");i=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${d}
        }`}l="value = activation(value, outCoord);"}let c=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${i}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${a}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${o}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${c}
            ${l}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${t}
      `}},q4=class{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Wx(this.dispatchLayout,this.outputShape),this.elementsPerThread=Ux(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;w.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[e,n],s=[n,t],a=this.outputShape[1]*this.outputShape[2],o=this.outputShape[3],i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[da(r,[a,i]),da(s,[i,o])]}getUserCode(){let e=jx(this.elementsPerThread,this.workGroupSize),t=`
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);
    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];
    let coord = vec4<i32>(
        batch,
        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
        col % uniforms.xShape[3]);
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${t}
    }
    return 0.0;
    `,r=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W.numbers[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,s="",a="";if(this.activation){let l=pa(this.activation,!1);this.hasPreluActivationWeights?s=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${l}
                }`:s=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${l}
                  }
                `,a="value = activation(value, outCoord);"}let o=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${s}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${n}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${r}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      ${o}
      ${a}
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${e}
  `}},X4=class{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=pa(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${s}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${s}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${ca()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}};function qde(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=n,d=N.convertConv2DDataFormat(l),p=N.computeConv2DInfo(s.shape,a.shape,o,c,i,u,!1,d);if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))return H4({x:s,filter:a,convInfo:p,backend:r});if(Y().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&s.shape[0]===1)return jde({x:s,filter:a,convInfo:p,backend:r});let h,f=[p.padInfo.top,p.padInfo.left],m=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]}],g=Y().getBool("WEBGPU_USE_NAIVE_CONV2D");if(g?h=new X4(p):(p.inChannels%4===0||p.inChannels===3&&p.padInfo.type==="VALID")&&p.outChannels%4===0&&p.outChannels>=64?h=new j4(p):h=new q4(p),!g){let y=p.outShape[1]*p.outShape[2],x=p.outShape[3],A=p.filterHeight*p.filterWidth*p.inShape[3];m.push({type:"int32",data:[y]},{type:"int32",data:[x]},{type:"int32",data:[A]})}return r.runWebGPUProgram(h,[s,a],s.dtype,m)}var Xde={kernelName:Wa,backendName:"webgpu",kernelFunc:qde},Kde=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=Wx(this.dispatchLayout,this.outputShape),this.elementsPerThread=Ux(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x.numbers[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W.numbers[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result.numbers[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${jx(this.elementsPerThread,this.workGroupSize)}
  `}},Zde=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Je()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Yde(e){let{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=r,d=N.convertConv2DDataFormat(c),p=N.computeConv2DInfo(o,a.shape,i,1,l,u,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}],f;if(Y().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new Zde(p);else{f=new Kde(p);let m=p.inShape[1]*p.inShape[2],g=p.inShape[3],y=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return n.runWebGPUProgram(f,[s,a],"float32",h)}var Jde={kernelName:Va,backendName:"webgpu",kernelFunc:Yde},Qde=Nn({opType:kt.COS}),epe={kernelName:Ua,backendName:"webgpu",kernelFunc:Qde},tpe=Nn({opType:kt.COSH}),npe={kernelName:Ga,backendName:"webgpu",kernelFunc:tpe},rpe=class{constructor(e,t,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1],this.size=!0;let[s]=t;this.outputShape=[s,n[0],n[1],e],this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,r,s]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Je()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${o};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},spe=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:c}=r,u=new rpe(s.shape[3],a.shape,i,l),d=[{type:"float32",data:[c]}];return n.runWebGPUProgram(u,[s,a,o],"float32",d)},ape={kernelName:vi,backendName:"webgpu",kernelFunc:spe},ope=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function ipe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],l=o==="NHWC"?s.shape[1]:s.shape[2],c=o==="NHWC"?s.shape[2]:s.shape[3],u=o==="NHWC"?s.shape[3]:s.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=[{type:"int32",data:[a]}],g=new ope(f,o);return n.runWebGPUProgram(g,[s],s.dtype,m)}var lpe={kernelName:wi,backendName:"webgpu",kernelFunc:ipe},K4=class{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let s=pa(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${s}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${Bx()}
      fn main([[builtin(global_invocation_id)]] globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},Z4=class{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;
      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;
      channelMul : i32;`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let s=pa(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${s}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${s}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${ca()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function upe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:c}=r,u=l;u==null&&(u=[1,1]);let d=N.computeConv2DInfo(s.shape,a.shape,o,u,i,c,!0),p=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}],h;return d.batchSize===1&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&d.strideHeight===1&&d.strideWidth===1&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&d.filterHeight===3&&d.inChannels%4===0?h=new K4(d):(h=new Z4(d),p.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.outChannels/d.inChannels]})),n.runWebGPUProgram(h,[s,a],s.dtype,p)}var cpe={kernelName:Ha,backendName:"webgpu",kernelFunc:upe},Y4=Kn({opSnippet:qt.MUL,cpuKernelImpl:qce,supportsComplex:!0}),dpe={kernelName:uo,backendName:"webgpu",kernelFunc:Y4},ppe=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=N.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isNanCustom(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isNanCustom(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Je()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x.numbers[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function Lp(e,t,n,r,s){let a=e.shape.length,o=[],i=w.parseAxisParam(t,e.shape),l=i,c=N.getAxesPermutation(l,a),u=e;c!=null&&(u=zl({inputs:{x:e},attrs:{perm:c},backend:s}),l=N.getInnerMostAxes(l.length,a),o.push(u)),N.assertAxesAreInnerMostDims(r,l,a);let[d,p]=N.computeOutAndReduceShapes(u.shape,l),h=d;n&&(h=N.expandShapeToKeepDim(d,i));let f;if((r==="max"||r==="prod")&&s.shouldExecuteOnCPU([u])){let m=s.tensorMap.get(u.dataId).values;switch(r){case"max":let g=Gce(m,w.sizeFromShape(p),h,e.dtype);f=s.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:A}=Zce(u.shape,u.dtype,m,l);f=s.makeTensorInfo(x,A,y);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(p),y=w.sizeFromShape(u.shape)/m,x={windowSize:m,inSize:m,batchSize:y,outSize:1},A=r==="mean"?"float32":Wd(e.dtype),b=[{type:"int32",data:[m]}],v=new ppe(x,r),C=s.runWebGPUProgram(v,[u],A,b);o.push(C),f=Xe({inputs:{x:C},attrs:{shape:h},backend:s})}return o.forEach(m=>s.disposeData(m.dataId)),f}function Yx(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return Lp(s,a,o,"sum",n)}var hpe={kernelName:vo,backendName:"webgpu",kernelFunc:Yx};function fpe(e){let{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:l}=N.decodeEinsumEquation(s,a.length);N.checkEinsumDimSizes(o.length,l,a);let{path:c,steps:u}=N.getEinsumComputePath(i,l),d=u.length,p=null,h=o.length,f=[];for(let m=0;m<d;++m){for(let g of u[m]){let{permutationIndices:y,expandDims:x}=N.getEinsumPermutation(h,l[g]),A;N.isIdentityPermutation(y)?A=a[g]:(A=zl({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(A.shape,b)||(A=Xe({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),p===null?p=A:(p=Y4({inputs:{a:A,b:p},backend:n}),f.push(p))}m<d-1&&(c[m]>=0&&(p=Yx({inputs:{x:p},backend:n,attrs:{axis:c[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&n.disposeData(m.dataId);return p}var mpe={kernelName:bd,backendName:"webgpu",kernelFunc:fpe},gpe=Nn({opType:kt.ELU}),ype={kernelName:qa,backendName:"webgpu",kernelFunc:gpe},Ape=Kn({opSnippet:qt.EQUAL,dtype:"bool",cpuKernelImpl:Pce}),xpe={kernelName:ki,backendName:"webgpu",kernelFunc:Ape},J4=Nn({opType:kt.EXP,cpuKernelImpl:$ce,dtype:"float32"}),bpe={kernelName:Xa,backendName:"webgpu",kernelFunc:J4};function Jx(e){let{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=s;return s<0&&(w.assert(-(o+1)<=s,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+s+1),i.splice(l,0,1),Xe({inputs:{x:a},backend:r,attrs:{shape:i}})}var vpe={kernelName:Ii,backendName:"webgpu",kernelFunc:Jx},wpe=Nn({opType:kt.EXPM1,cpuKernelImpl:Fce}),kpe={kernelName:Si,backendName:"webgpu",kernelFunc:wpe},Ipe=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Je()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Ec(e){let{backend:t,attrs:n}=e,{shape:r,value:s}=n,{dtype:a}=n;if(a=a||w.inferDtype(s),a==="string"){let o=w.getArrayFromDType(a,w.sizeFromShape(r));return o.fill(s),t.makeTensorInfo(r,a,o)}else{let o=new Ipe(r),i=[{type:"float32",data:[s]}];return t.runWebGPUProgram(o,[],a,i)}}var Spe={kernelName:bu,backendName:"webgpu",kernelFunc:Ec},Cpe=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},Tpe={kernelName:Ci,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,s=new Cpe(n.shape);return r.runWebGPUProgram(s,[n],n.dtype)}},Npe=Nn({opType:kt.FLOOR,cpuKernelImpl:Oce}),Epe={kernelName:Ka,backendName:"webgpu",kernelFunc:Npe},Rpe=Kn({opSnippet:qt.INT_DIV,dtype:"int32"}),_pe={kernelName:Za,backendName:"webgpu",kernelFunc:Rpe},Dpe=(e,t,n,r,s)=>{let a=[r,...n];return s&&a.push(s),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},Q4=(e,t,n,r,s,a=!1)=>{let o={dtype:s.dtype,shape:s.shape},i=lue(r,o,t,a),l=e.createShaderModule({code:i,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function e6(e,t,n,r="",s=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+r+s}function t6(e){let{externalImage:t,backend:n,attrs:r,outShape:s,useImport:a}=e,{numChannels:o}=r,i=w.sizeFromShape(s),l=w.computeStrides(s),c=n.makeTensorInfo(s,"int32"),u=n.getFromPixelsProgram(a?"import":"copyExternal");u.updateOutputShape(s);let d=[c.shape],p=[c.dtype,a?"import":"copyExternal"],h=e6(u,d,p),f=u.getLayout(n.device),m=n.getAndSavePipeline(h,()=>Q4(n.device,u,f.pipelineLayout,[],c,!0));u.setPipeline(m),a||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:u.makeInputTexture(n.device,s[1],s[0])},[s[1],s[0]]);let g=n.tensorMap.get(c.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let y=[i,o,...l,...u.dispatch];u.setUniform(n.device,y);let x;if(a){let A={source:t};x=n.device.importExternalTexture(A)}else x=u.inputTexture.createView();return n.runFromPixelsProgram(u,g.bufferInfo.buffer,f,x,c.dataId),c}var Ppe={kernelName:Dd,backendName:"webgpu",kernelFunc:$pe},Rc;function $pe(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:s}=t,{numChannels:a}=r;if(s==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&s instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&s instanceof OffscreenCanvas,c=typeof ImageBitmap!="undefined"&&s instanceof ImageBitmap,[u,d]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],p=[d,u,a];if(Y().getBool("WEBGPU_USE_IMPORT")&&o)return t6({externalImage:s,backend:n,attrs:r,outShape:p,useImport:!0});if((o||i)&&(Rc==null&&(Rc=document.createElement("canvas").getContext("2d")),Rc.canvas.width=u,Rc.canvas.height=d,Rc.drawImage(s,0,0,u,d),s=Rc.canvas),c||l||o||i)return t6({externalImage:s,backend:n,attrs:r,outShape:p,useImport:!1});let h=s.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(s.width*s.height*a);let y=h.length,x=0;for(let A=0;A<y;A++)A%4<a&&(f[x++]=h[A])}let m=n.makeTensorInfo(p,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}var Fpe=class{constructor(e,t,n,r,s){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset")),s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Je()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},Ope={kernelName:Ya,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r,scale:s,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,c=n,u=[r,o,i],d=null;a!=null&&(d=a.shape,u.push(a));let p=null;s!=null&&(p=s.shape,u.push(s));let h=new Fpe(r.shape,o.shape,i.shape,d,p),f=[{type:"float32",data:[l]}];return c.runWebGPUProgram(h,u,r.dtype,f)}};function Mpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=N.convertConv2DDataFormat(u),g=N.computeConv2DInfo(s.shape,a.shape,l,d,c,p,!1,m),y=o!=null,x=i!=null,A;if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))return H4({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});let b=Y().getBool("WEBGPU_USE_NAIVE_CONV2D"),v=g.inChannels%4===0&&g.outChannels%4===0,C=[g.padInfo.top,g.padInfo.left],I=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...C]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(b)A=new X4(g,y,h,x);else{v?A=new j4(g,y,h,x):A=new q4(g,y,h,x);let R=g.outShape[1]*g.outShape[2],F=g.outShape[3],_=g.filterHeight*g.filterWidth*g.inShape[3];I.push({type:"int32",data:[R]},{type:"int32",data:[F]},{type:"int32",data:[_]})}let E=[s,a];return y&&E.push(o),x&&E.push(i),n.runWebGPUProgram(A,E,s.dtype,I)}var zpe={kernelName:Eo,backendName:"webgpu",kernelFunc:Mpe};function Lpe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:p}=r,h=u;h==null&&(h=[1,1]),w.assert(N.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let f=N.computeConv2DInfo(s.shape,a.shape,l,h,c,d,!0),m=[s,a],g=o!=null,y=i!=null;g&&m.push(o),y&&m.push(i);let x=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}],A;return f.batchSize===1&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&f.strideHeight===1&&f.strideWidth===1&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&f.filterHeight===3&&f.inChannels%4===0?A=new K4(f,g,p,y):(A=new Z4(f,g,p,y),x.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.outChannels/f.inChannels]})),n.runWebGPUProgram(A,m,"float32",x)}var Bpe={kernelName:Ro,backendName:"webgpu",kernelFunc:Lpe},Wpe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${In(e)};`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Vpe(e){let{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=w.sizeFromShape(r.shape),[l,c,u,d]=N.prepareAndValidate(r,s),p=Xe({inputs:{x:s},backend:n,attrs:{shape:[c,o]}}),h=Xe({inputs:{x:r},backend:n,attrs:{shape:[w.sizeFromShape(r.shape)/u,u]}});if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let x=n.readSync(s.dataId),A=n.bufferSync(r),b=Mce(x,A,r.dtype,c,o,u,d,r.shape,i);return n.makeTensorInfo(l,r.dtype,b.values)}let f=new Wpe(o,[c,u]),m=[{type:"int32",data:[o]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),y=Xe({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}var Upe={kernelName:Ni,backendName:"webgpu",kernelFunc:Vpe},Gpe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Hpe(this.aShape,"i32");return`
      ${Je()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Hpe(e,t="int"){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)s===2?r.push(`${t}(getIndices(resRC.x, resRC.z))`):r.push(`${n[s]}`);return r.join()}function n6(e){let{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,l=w.parseAxisParam(o,s.shape)[0],c=N.segment_util.collectGatherOpShapeInfo(s,a,l,i),u=w.sizeFromShape(a.shape),d=[],p=Xe({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),h=Xe({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(p),d.push(h);let f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,a])){let A=n.tensorMap.get(h.dataId).values,b=Le(h.shape,h.dtype,A),C=n.tensorMap.get(p.dataId).values,I=Le(p.shape,p.dtype,C),E=zce(I,b,f);return d.forEach(R=>n.disposeData(R.dataId)),n.makeTensorInfo(c.outputShape,E.dtype,E.values)}let m=new Gpe(p.shape,f),g=n.runWebGPUProgram(m,[p,h],p.dtype);d.push(g);let y=Xe({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach(x=>n.disposeData(x.dataId)),y}var jpe={kernelName:Ti,backendName:"webgpu",kernelFunc:n6},qpe=Kn({opSnippet:qt.GREATER,cpuKernelImpl:Bce,dtype:"bool"}),Xpe={kernelName:Ei,backendName:"webgpu",kernelFunc:qpe},Kpe=Kn({opSnippet:qt.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:Lce}),Zpe={kernelName:Ja,backendName:"webgpu",kernelFunc:Kpe};function Ype(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=[{type:"float32",data:[a]}],i=new Mp(s.shape,kt.LEAKYRELU);return i.uniforms="alpha : f32;",n.runWebGPUProgram(i,[s],"float32",o)}var Jpe={kernelName:eo,backendName:"webgpu",kernelFunc:Ype},Qpe=Kn({opSnippet:qt.LESS,dtype:"bool",cpuKernelImpl:Vce}),ehe={kernelName:Ri,backendName:"webgpu",kernelFunc:Qpe},the=Kn({opSnippet:qt.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Wce}),nhe={kernelName:_i,backendName:"webgpu",kernelFunc:the},rhe=Nn({opType:kt.LOG,cpuKernelImpl:Uce}),she={kernelName:to,backendName:"webgpu",kernelFunc:rhe},ahe=Kn({opSnippet:qt.LOGICAL_AND,dtype:"bool"}),ohe={kernelName:Di,backendName:"webgpu",kernelFunc:ahe},ihe=Nn({opType:kt.LOGICAL_NOT}),lhe={kernelName:Su,backendName:"webgpu",kernelFunc:ihe};function r6(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r;return Lp(s,a,o,"max",n)}var uhe={kernelName:no,backendName:"webgpu",kernelFunc:r6},che=Kn({opSnippet:qt.MAX,cpuKernelImpl:Hce}),dhe={kernelName:ro,backendName:"webgpu",kernelFunc:che};function phe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r,c=1,u=N.computePool2DInfo(s.shape,a,o,c,i,l),d,p=[];if(u.filterHeight===1&&u.filterWidth===1){if(w.arraysEqual(u.inShape,u.outShape))return is({inputs:{x:s},backend:n});d=new V4(u),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else d=new W4(u,"max"),p.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return n.runWebGPUProgram(d,[s],s.dtype,p)}var hhe={kernelName:so,backendName:"webgpu",kernelFunc:phe};function fhe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{keepDims:a,axis:o}=r;return Lp(s,o,a,"mean",n)}var mhe={kernelName:ao,backendName:"webgpu",kernelFunc:fhe};function ghe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return Lp(s,a,o,"min",n)}var yhe={kernelName:oo,backendName:"webgpu",kernelFunc:ghe},Ahe=Kn({opSnippet:qt.MIN,cpuKernelImpl:jce}),xhe={kernelName:io,backendName:"webgpu",kernelFunc:Ahe},bhe=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,s)=>r[0]+e[s]+r[1]),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((r,s)=>{this.uniforms+=` pad${s} : vec2<i32>;`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((l,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),r=e===1?"start":"start[i]",s=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=In(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Je()}
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${r}) {
              ${a} = ${r} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${i}));
        }
      }
    `}},vhe={kernelName:lo,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{paddings:s,mode:a}=t,o=n,i=s.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new bhe(r.shape,s,a);return o.runWebGPUProgram(l,[r],r.dtype,i)}};function whe(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let a=n.tensorMap.get(r.dataId),[o,i]=Xce(a.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,o)}let s=new Mp(r.shape,kt.NEG);return n.runWebGPUProgram(s,[r],r.dtype)}var khe={kernelName:Pi,backendName:"webgpu",kernelFunc:whe};function Ihe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=r,c=n.readSync(s.dataId),u=n.readSync(a.dataId),{selectedIndices:d}=ts.nonMaxSuppressionV3Impl(c,u,o,i,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var She={kernelName:Fi,backendName:"webgpu",kernelFunc:Ihe};function Che(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=r,u=n.readSync(s.dataId),d=n.readSync(a.dataId),p=o,h=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=ts.nonMaxSuppressionV5Impl(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var The={kernelName:Oi,backendName:"webgpu",kernelFunc:Che};function c0(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let s=zp({inputs:{input:r},backend:n}),a=c0({inputs:{x:s},backend:n}),o=u0({inputs:{input:r},backend:n}),i=c0({inputs:{x:o},backend:n}),l=Tc({inputs:{real:a,imag:i},backend:n});return n.disposeData(s.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return Ec({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var Nhe={kernelName:tl,backendName:"webgpu",kernelFunc:c0};function s6(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let s=zp({inputs:{input:r},backend:n}),a=s6({inputs:{x:s},backend:n}),o=u0({inputs:{input:r},backend:n}),i=c0({inputs:{x:o},backend:n}),l=Tc({inputs:{real:a,imag:i},backend:n});return n.disposeData(s.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return Ec({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var Ehe={kernelName:Mi,backendName:"webgpu",kernelFunc:s6};function Rhe(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return Jx({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=Jx({inputs:{input:u},backend:n,attrs:{dim:s}});return i.push(d),d}),c=G4({inputs:l,backend:n,attrs:{axis:s}});return i.forEach(u=>n.disposeData(u.dataId)),c}var _he={kernelName:Li,backendName:"webgpu",kernelFunc:Rhe},Dhe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,r)=>n[0]+e[r]+n[1]),this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,r)=>{this.uniforms+=` pad${r} : vec2<i32>;`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=In(e),n=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),r=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),s=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${r})`:`${r}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Je()}
        if (index < uniforms.size) {
          let start = ${s};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${o} || ${i}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},a6=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(a.every(c=>w.arraysEqual(c,[0,0])))return is({inputs:{x:s},backend:n});if(w.sizeFromShape(s.shape)===0){let c=a.map((u,d)=>u[0]+s.shape[d]+u[1]);return Ec({backend:n,attrs:{shape:c,value:o,dtype:s.dtype}})}let i=[{type:"float32",data:[o]}];a.map(c=>i.push({type:"int32",data:[c[0],c[1]]}));let l=new Dhe(s.shape,a);return n.runWebGPUProgram(l,[s],s.dtype,i)},Phe={kernelName:co,backendName:"webgpu",kernelFunc:a6},$he=Kn({opSnippet:qt.POW}),Fhe={kernelName:po,backendName:"webgpu",kernelFunc:$he};function Ohe(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=new z4(qt.PRELU,r.shape,s.shape);return n.runWebGPUProgram(a,[r,s],"float32")}var Mhe={kernelName:ho,backendName:"webgpu",kernelFunc:Ohe};function zhe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return Lp(s,a,o,"prod",n)}var Lhe={kernelName:Bi,backendName:"webgpu",kernelFunc:zhe},Bhe=e=>{let{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=Yce(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},Whe={kernelName:Nu,backendName:"webgpu",kernelFunc:Bhe},o6=Kn({opSnippet:qt.DIV}),Vhe={kernelName:ja,backendName:"webgpu",kernelFunc:o6},Uhe=Nn({opType:kt.RELU}),Ghe={kernelName:fo,backendName:"webgpu",kernelFunc:Uhe},Hhe=Nn({opType:kt.RELU6}),jhe={kernelName:go,backendName:"webgpu",kernelFunc:Hhe},qhe=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Je()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Xhe(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,size:o,halfPixelCenters:i}=r,[l,c]=o,u=a&&l>1?1:0,d=a&&c>1?1:0,h=[{type:"float32",data:[u,d]},{type:"float32",data:[i?.5:0]}],f=new qhe(s.shape,l,c);return n.runWebGPUProgram(f,[s],"float32",h)}var Khe={kernelName:mo,backendName:"webgpu",kernelFunc:Xhe},Zhe=class{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Je()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Yhe(e){let{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,c]=i,u=a&&l>1?1:0,d=a&&c>1?1:0,h=[{type:"float32",data:[u,d]},{type:"float32",data:[a?.5:0]}],f=new Zhe(s.shape,l,c,o);return n.runWebGPUProgram(f,[s],s.dtype,h)}var Jhe={kernelName:Ru,backendName:"webgpu",kernelFunc:Yhe},Qhe=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32; centerY : f32; sinRadians : f32;
          cosRadians : f32;`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Je()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},efe={kernelName:nl,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,l=new Qhe(r.shape,a),[c,u]=N.getImageCenter(o,r.shape[1],r.shape[2]),d=[{type:"float32",data:[c]},{type:"float32",data:[u]},{type:"float32",data:[Math.sin(s)]},{type:"float32",data:[Math.cos(s)]}];return typeof a=="number"?d.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):d.push({type:"float32",data:a}),i.runWebGPUProgram(l,[r],r.dtype,d)}},tfe=Nn({opType:kt.RSQRT,cpuKernelImpl:Jce}),nfe={kernelName:yo,backendName:"webgpu",kernelFunc:tfe},rfe=class{constructor(e,t,n,r,s,a,o){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.dispatchLayout=He(e),this.dispatch=Oe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${r}_${this.sliceDimGreaterThanOne}_${o}`;let i=In(s.length);this.uniforms=`sliceDim : i32; strides: ${i}; size: i32;`,this.updatesRank=r,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",r="",s="",a="";this.updatesRank===1?(r="coords[0]",s="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(r="coords[0], coords[1]",s="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${r})`,i=this.type==="int32"?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result.numbers[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${Je()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${o};
          let flatIndex = getOutputIndexFromCoords(${s});

         ${i}
        }
      }`}};function sfe(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=N.calculateShapes(a,s,o),p=[d/c,c];if(d===0)return n.makeTensorInfo(o,s.dtype);let h=Xe({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),f=Xe({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=f.dtype,g=Ec({backend:n,attrs:{shape:p,value:0,dtype:m}}),y=w.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:u},{type:"int32",data:[y]}],A=new rfe(f.shape,i,h.shape.length,f.shape.length,u,p,m),b=n.runWebGPUProgram(A,[f,h],m,x,g),v=Xe({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),v}var afe={kernelName:Gi,backendName:"webgpu",kernelFunc:sfe},ofe=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${r[o]}`),o<this.cRank&&s.push(`${r[o]}`);e=s.join(),t=a.join()}return`
      ${Je()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function ife(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new ofe(r.shape.length,s.shape,s.shape.length);return n.runWebGPUProgram(o,[r,s,a],Wn(s.dtype,a.dtype))}var lfe={kernelName:Hi,backendName:"webgpu",kernelFunc:ife},ufe=Nn({opType:kt.SIGMOID}),cfe={kernelName:xo,backendName:"webgpu",kernelFunc:ufe},dfe=Nn({opType:kt.SIN}),pfe={kernelName:Ao,backendName:"webgpu",kernelFunc:dfe},hfe=Nn({opType:kt.SINH}),ffe={kernelName:qi,backendName:"webgpu",kernelFunc:hfe},i6=Kn({opSnippet:qt.SUB,cpuKernelImpl:rde,supportsComplex:!0}),mfe={kernelName:Io,backendName:"webgpu",kernelFunc:i6};function gfe(e){let{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=w.parseAxisParam([a],s.shape),i=r6({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,o),c=Xe({inputs:{x:i},backend:n,attrs:{shape:l}}),u=i6({inputs:{a:s,b:c},backend:n}),d=J4({inputs:{x:u},backend:n}),p=Yx({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=Xe({inputs:{x:p},backend:n,attrs:{shape:l}}),f=o6({inputs:{a:d,b:h},backend:n});return n.disposeData(i.dataId),n.disposeData(c.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),f}var yfe={kernelName:wo,backendName:"webgpu",kernelFunc:gfe},Afe=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;w.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<s.shape.length;++y)l.push([0,0]);let c=[],u=a6({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),d=N.getReshaped(u.shape,a,i,!1),p=N.getPermuted(d.length,a.length,!1),h=N.getReshapedPermuted(u.shape,a,i,!1),f=Xe({inputs:{x:u},backend:n,attrs:{shape:d}}),m=zl({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Xe({inputs:{x:m},backend:n,attrs:{shape:h}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>n.disposeData(y.dataId)),g},xfe={kernelName:Xi,backendName:"webgpu",kernelFunc:Afe},bfe=class{constructor(e,t,n,r,s,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=a,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${r}_${i}`;let l=In(s.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let c="";n===1?c="i":n===2&&(c="i, j"),this.indicesSnippet=`getIndices(${c})`;let u="";r===1?u="i":r===2&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Je()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function vfe(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:l,numUpdates:c,strides:u,outputSize:d}=N.calculateShapes(a,s,i),p=!1,h=[{type:"int32",data:[c]},{type:"int32",data:[l]},{type:"int32",data:u}],f=new bfe(c,l,s.shape.length,a.shape.length,u,[d,1],p),m=n.runWebGPUProgram(f,[a,s,o],a.dtype,h),g=Xe({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),g}var wfe={kernelName:Ed,backendName:"webgpu",kernelFunc:vfe};function kfe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=w.parseAxisParam(o,s.shape)[0],l=N.prepareSplitSize(s,a,i),c=s.shape.length,u=new Array(c).fill(0),d=s.shape.slice();return l.map(p=>{let h=[...d];h[i]=p;let f=Nc({inputs:{x:s},backend:n,attrs:{begin:u,size:h}});return u[i]+=p,f})}var Ife={kernelName:Ki,backendName:"webgpu",kernelFunc:kfe},Sfe=Nn({opType:kt.SQRT}),Cfe={kernelName:bo,backendName:"webgpu",kernelFunc:Sfe},Tfe={kernelName:Fu,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t,s=new Mp(n.shape,kt.SQUARE);return r.runWebGPUProgram(s,[n],n.dtype)}},Nfe=Kn({opSnippet:qt.SQUARED_DIFFERENCE}),Efe={kernelName:ko,backendName:"webgpu",kernelFunc:Nfe},Rfe=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=In(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let r=0;t=this.outputShape.map((s,a)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${r-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Je()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function _fe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(s.shape,a,o,i,l,c,u,d,p),v;if(m)v=Xe({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){w.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let C=zt.computeOutShape(x,A,b),I=Nc({inputs:{x:s},backend:n,attrs:{begin:x,size:C}});v=Xe({inputs:{x:I},backend:n,attrs:{shape:f}}),n.disposeData(I.dataId)}else if(n.shouldExecuteOnCPU([s])){let I=n.readSync(s.dataId),E=Le(s.shape,s.dtype,I),R=tde(h,E,b,x);v=n.makeTensorInfo(f,s.dtype,R.values)}else{let I=new Rfe(h),E=[{type:"int32",data:x},{type:"int32",data:b}],R=n.runWebGPUProgram(I,[s],s.dtype,E);v=Xe({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}return v}var Dfe={kernelName:Zi,backendName:"webgpu",kernelFunc:_fe};function Pfe(e){let{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:c}=r,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=nde(p,h,s,a,o,i,l,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}var $fe={kernelName:Rd,backendName:"webgpu",kernelFunc:Pfe},Ffe=Nn({opType:kt.TANH}),Ofe={kernelName:So,backendName:"webgpu",kernelFunc:Ffe},Mfe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=zfe(this.rank,"uniforms.");return`
      ${Je()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function zfe(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e;s++)r.push(`(${n[s]} % ${t}aShape[${s}])`);return r.join()}function Lfe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if(n.shouldExecuteOnCPU([s])||s.dtype==="string"||s.shape.length>=5){let l=n.readSync(s.dataId),c=s.dtype==="string"?l.map(p=>w.decodeString(p)):l,u=Le(s.shape,s.dtype,c),d=sde(u,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}let o=new Mfe(s.shape,a);return n.runWebGPUProgram(o,[s],s.dtype)}var Bfe={kernelName:Js,backendName:"webgpu",kernelFunc:Lfe},Wfe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32; firstPass : i32; negativeInf : f32;
        dir : i32; inc : i32;`,this.shaderKey="swap"}getUserCode(){return`
        ${Je()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Vfe=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return`
        ${Je()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function _c(e,t){t!==null&&e.disposeData(t.dataId)}function l6(e){let t=1;for(;t<e;)t*=2;return t}function Ufe(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=s.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([s])){let v=n.readSync(s.dataId),[C,I]=ade(v,i,s.dtype,a,o);return[n.makeTensorInfo(C.shape,C.dtype,C.values),n.makeTensorInfo(I.shape,I.dtype,I.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,s.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[s,Ec({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let u=w.sizeFromShape(i)/l,d=Xe({inputs:{x:s},attrs:{shape:[u,l]},backend:n}),p=l6(a),h=l6(l),f=null,m=()=>f===null?[d,d]:[d,f],g=(v,C,I)=>{let E=m(),R=new Wfe(I),_=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[v]},{type:"int32",data:[C]}],P=f;f=n.runWebGPUProgram(R,E,"int32",_),_c(n,P)};for(let v=1;v<p;v*=2){let C=v*2;for(let I=v;I>=1;I/=2)g(C,I,[u,h])}for(let v=h;v>p;v/=2){let C=m(),I=new Vfe([u,v/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[p]}],F=f;f=n.runWebGPUProgram(I,C,"int32",R),_c(n,F);let _=p/2,P=_*2;for(let T=_;T>=1;T/=2)g(P,T,f.shape)}let y=f;f=Nc({inputs:{x:f},backend:n,attrs:{begin:0,size:[u,a]}}),_c(n,y);let x=n6({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});_c(n,d);let A=i.slice(0,-1);A.push(a),y=f,f=Xe({inputs:{x:f},attrs:{shape:A},backend:n}),_c(n,y);let b=x;return x=Xe({inputs:{x},attrs:{shape:A},backend:n}),_c(n,b),[x,f]}var Gfe={kernelName:Ji,backendName:"webgpu",kernelFunc:Ufe},Hfe=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Je()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function jfe(e){let{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=r,[u,d,p,h]=s.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new Hfe(g),x=o==="nearest"?1:2,A;switch(i){case"constant":A=1;break;case"reflect":A=2;break;case"wrap":A=3;break;case"nearest":A=4;break;default:A=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[A]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[s,a],"float32",b)}var qfe={kernelName:Qi,backendName:"webgpu",kernelFunc:jfe};function Xfe(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s,i=o.shape.length,l=s.shape[a],c=new Array(i-1),u=0;for(let m=0;m<i;m++)m!==a&&(c[u++]=o.shape[m]);let d=[],p=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[a]=m;let g=Nc({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),y=Xe({inputs:{x:g},backend:n,attrs:{shape:c}});f[m]=y,d.push(g)}return d.forEach(m=>n.disposeData(m.dataId)),f}var Kfe={kernelName:el,backendName:"webgpu",kernelFunc:Xfe},Zfe=[Sce,lde,cde,hde,xde,vde,kde,Sde,Rde,$de,Ode,Bde,Ece,Gde,Xde,Jde,epe,npe,ape,lpe,cpe,mpe,ype,xpe,bpe,vpe,kpe,Spe,Tpe,Ppe,Epe,_pe,Ope,zpe,Bpe,Upe,jpe,Xpe,Zpe,Nce,Vde,Jpe,ehe,nhe,she,ohe,lhe,uhe,dhe,hhe,mhe,yhe,xhe,vhe,dpe,khe,She,The,_de,Ehe,_he,Phe,Fhe,Mhe,Lhe,Whe,Dde,Vhe,Ghe,jhe,kce,Khe,Jhe,efe,nfe,afe,lfe,cfe,pfe,ffe,Nde,Dfe,$fe,yfe,xfe,wfe,Ife,Cfe,Tfe,Efe,mfe,hpe,Ofe,Bfe,Gfe,qfe,yde,Kfe,Nhe];for(let e of Zfe)Jr(e);var Yfe=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let r=u6(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(a),a}this.numBytesAllocated+=e;let s=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(r).push(s),s}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let r=u6(t,n);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let s=this.usedBuffers.get(r),a=s.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");s.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},r=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function u6(e,t){return`${e}_${t}`}var c6=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){w.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=He(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Je()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:t.length*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every((n,r)=>n===this.lastUniformData[r])||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return this.layout===null&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),r=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:r}}},Jfe=class extends c6{constructor(){super(...arguments);this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return this.layout===null&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t}),r=e.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:r}}},Qfe=Y().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),d6=class extends au{constructor(e,t=!1){super();if(this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!Hx())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new Yfe(this.device),this.tensorMap=new pd(this,Dn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return d6.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:r}=this.tensorMap.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()},s=w.sizeFromShape(t)*Gx(n);return this.tensorMap.set(r,{dtype:n,values:e,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:1}),r}move(e,t,n,r,s){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=w.sizeFromShape(n)*Gx(r);this.tensorMap.set(e,{dtype:r,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:s})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new c6),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new Jfe),this.fromPixelImportProgram;default:w.assert(!1,()=>"Unsupported fromPixels shape");return}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let r;if(t.dtype==="complex64"){let s=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=s[0],o=s[1];r=N.mergeRealAndImagArrays(a,o)}else{let s=await this.getBufferData(t);r=D4(s,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(r=>w.decodeString(r))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],r=!1;this.programTimersStack==null?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=w.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=w.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(s);return o.kernelMs=w.sum(i),o.getExtraProfileInfo=()=>i.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let s=n.map(a=>w.encodeString(a));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),r=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let s={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(s)}}makeUniforms(e){let t=0,n=[];e.forEach(a=>{a.data.length===0&&(a.data=[1]);let o;switch(a.data.length){case 1:o=4;break;case 2:o=8;break;case 3:o=16;break;case 4:o=16;break;default:w.assert(!1,()=>`Unsupported ${a.data.length}D shape`)}t=Math.ceil(t/o)*o,n.push(t),t+=a.data.length*4});let r=new ArrayBuffer(t);e.forEach((a,o)=>{let i=n[o];a.type==="int32"?new Int32Array(r,i,a.data.length).set(a.data):a.type==="uint32"?new Uint32Array(r,i,a.data.length).set(a.data):new Float32Array(r,i,a.data.length).set(a.data)});let s=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(s,0,r,0,t),{offset:0,size:t,buffer:s}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let s=0;s<e;s++)t.push({binding:s+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),r=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:r}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,r,s){if(!s){if(s=this.makeTensorInfo(e.outputShape,n),w.sizeFromShape(s.shape)===0){let I=this.tensorMap.get(s.dataId);return I.values=w.getTypedArrayFromDType(s.dtype,0),s}this.uploadToGPU(s.dataId)}let a=[{type:"float32",data:[NaN]}],o=t.concat(s).map(I=>I.shape),i="int32";o.map(I=>{a.push({type:i,data:I})});let l=w.computeStrides(s.shape);if(a.push({type:i,data:l}),e.size){let I=w.sizeFromShape(e.outputShape);a.push({type:i,data:[e.isVec4?I/4:I]})}r&&(a=[...a,...r]);let c=this.makeUniforms(a),u=t.map((I,E)=>{if(I.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(I.dataId),{dtype:this.tensorMap.get(I.dataId).dtype,shape:I.shape,name:e.variableNames[E]}}),d=u.map(I=>I.dtype).concat(s.dtype),p=u.map(I=>N.getBroadcastDims(I.shape,s.shape)),h=u.map(I=>w.arraysEqual(I.shape,s.shape)).join("_"),f=p.map(I=>I.join("_")).join(";"),m=e6(e,o,d,f,h),{bindGroupLayout:g,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),x=this.getAndSavePipeline(m,()=>Q4(this.device,e,y,u,s)),A=this.activeTimers!=null,b=Dpe(this.device,g,t.map(I=>this.tensorToBinding(I)),this.tensorToBinding(s),c);this.ensureCommandEncoderReady();let v=this.getComputePass();A&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,0),v.setPipeline(x),v.setBindGroup(0,b),v.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),A&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(I=>{this.commandQueueOwnedIds.add(I.dataId)}),this.commandQueueOwnedIds.add(s.dataId);let C={byteSize:c.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:c.buffer};return this.uniformDisposalQueue.push(C),Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),A&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),s}runFromPixelsProgram(e,t,n,r,s){let a=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:r},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let o=this.getComputePass(),i=this.activeTimers!=null;i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,0),o.setPipeline(e.pipeline),o.setBindGroup(0,a),o.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),i&&this.supportTimeQuery&&o.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(s),this.submitQueue(),i&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let r=new BigUint64Array(n.getMappedRange()),s=Number(r[1]-r[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),s/1e6}shouldExecuteOnCPU(e,t=Qfe){return Y().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&w.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Qx=d6;Qx.nextDataId=0;var p6={};Me(p6,{WebGPUBackend:()=>Qx,webgpu_util:()=>_4});zu.isBrowser()&&Hx()&&dl("webgpu",async()=>{Y().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Y().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},r=t.features.has("timestamp-query");r?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let s=await t.requestDevice(n);return new Qx(s,r)},3);var Xt=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(Xt||{}),d0=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(d0||{}),h6;function eme(e){h6=e.wasm.cwrap(No,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function tme(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t;if(s.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=r,p=n.dataIdMap.get(s.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let E=n.dataIdMap.get(o.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=d0[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?s.shape[2]:s.shape[1],x=c?a.shape[1]:a.shape[2],A=ll.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...A,y,x],s.dtype),v=n.dataIdMap.get(b.dataId).id,C=new Uint8Array(new Int32Array(s.shape).buffer),I=new Uint8Array(new Int32Array(a.shape).buffer);return h6(p,C,s.shape.length,h,I,a.shape.length,l,c,g,f,m,d||0,v),b}var nme={kernelName:No,backendName:"wasm",setupFunc:eme,kernelFunc:tme};function En(e,t){let n;function r(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function s(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,c=o.makeOutput(i.shape,t||i.dtype),u=o.dataIdMap.get(c.dataId).id;return w.sizeFromShape(c.shape)===0||n(l,Xt[i.dtype],u),c}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:s}}var rme=En(yi);function Zn(e,t,n){let r;function s(o){r=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:c,b:u}=l,d=i.dataIdMap.get(c.dataId).id,p=i.dataIdMap.get(u.dataId).id,h=n!=null?n:c.dtype,f=N.assertAndGetBroadcastShape(c.shape,u.shape),m=i.makeOutput(f,h);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(c.shape).buffer),y=new Uint8Array(new Int32Array(u.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>r(d,g,c.shape.length,p,y,u.shape.length,Xt[c.dtype],x))(),m}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:a}}var sme=!0,ame=Zn(Zs,sme),f6;function ome(e){f6=e.wasm.cwrap(Fa,null,["array","number","number","number"])}function ime(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(r.shape)===0)return r;let s=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(s).buffer),o=n.dataIdMap.get(r.dataId).id;return f6(a,s.length,Xt[r.dtype],o),r}var lme={kernelName:Fa,backendName:"wasm",setupFunc:ome,kernelFunc:ime};function p0(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(s),r}var ume={kernelName:Qa,backendName:"wasm",kernelFunc:p0},m6;function cme(e){m6=e.wasm.cwrap(Co,null,["number","array","number","number","number","array","number"])}function Dc(e){let{inputs:t,backend:n,attrs:r}=e,[s,a]=pme(t.x.shape,r.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=dme(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:s,dtype:t.x.dtype};if(o){let f=p0({inputs:t,backend:n});return f.shape=i,f}let c=n.makeOutput(i,l.dtype),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(c.dataId).id,p=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return m6(u,h,l.shape.length,Xt[l.dtype],d,p,a.length),c}function dme(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function pme(e,t){let n=[],r=[];for(let s=0;s<e.length;++s)e[s]!==1&&n.push(e[s]),e[t[s]]!==1&&r.push(t[s]);for(let s=0;s<r.length;++s){let a=-1;for(let o=0;o<r.length;++o)r[o]>=s&&(a===-1||r[a]>r[o])&&(a=o);r[a]=s}return[n,r]}var hme={kernelName:Co,backendName:"wasm",kernelFunc:Dc,setupFunc:cme};function Qo(e,t,n){let r=e.shape,s=e.shape.length,a=w.parseAxisParam(t,r),o=a,i=N.getAxesPermutation(o,s),l=null,c=!1;if(i!=null){let u=new Array(s);for(let h=0;h<u.length;h++)u[h]=r[i[h]];o=N.getInnerMostAxes(o.length,s),l=Dc({inputs:{x:e},attrs:{perm:i},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==d&&(c=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:c}}var g6;function fme(e){g6=e.wasm.cwrap(du,null,["number, number, number"])}function mme(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Qo(o,s,t);if(h){let A=t.dataIdMap.get(u.dataId).id;c=u,l=A}let f=c.shape.length;N.assertAxesAreInnerMostDims("all",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;g6(l,y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var gme={kernelName:du,backendName:"wasm",setupFunc:fme,kernelFunc:mme},y6;function yme(e){y6=e.wasm.cwrap(pu,null,["number, number, number"])}function Ame(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Qo(o,s,t);if(h){let A=t.dataIdMap.get(u.dataId).id;c=u,l=A}let f=c.shape.length;N.assertAxesAreInnerMostDims("any",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;y6(l,y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var xme={kernelName:pu,backendName:"wasm",setupFunc:yme,kernelFunc:Ame},A6;function bme(e){A6=e.wasm.cwrap(Oa,null,["number","number","number","number","number"])}function vme(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s}=r,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:c,axes:u,inputWasTransposed:d}=Qo(a,s,t);if(d){let y=t.dataIdMap.get(c.dataId).id;y!==o&&(l=c,i=y)}let p=l.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=w.sizeFromShape(h.shape),g=l.shape[u[0]];return A6(i,Xt[l.dtype],m,g,f),d&&t.disposeData(c.dataId),h}var wme={kernelName:Oa,backendName:"wasm",kernelFunc:vme,setupFunc:bme},x6;function kme(e){x6=e.wasm.cwrap(Ma,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ime(e){let{inputs:t,attrs:n,backend:r}=e,s=t.x,a=r.dataIdMap.get(s.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(s.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.strideHeight,x=u.strideWidth,A=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);let b=r.makeOutput(u.outShape,"float32"),v=r.dataIdMap.get(b.dataId).id;return x6(a,s.shape[0],s.shape[1],s.shape[2],d,p,h,f,m,g,y,x,A,v),b}var Sme={kernelName:Ma,backendName:"wasm",setupFunc:kme,kernelFunc:Ime};function hr(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,a=w.sizeFromShape(r.shape),o=w.inferFromImplicitShape(s,a);return w.assert(a===w.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}var Cme={kernelName:Wi,backendName:"wasm",kernelFunc:hr},b6;function Tme(e){b6=e.wasm.cwrap(za,null,["number","array","number","number","array","number","number","number","number"])}function Nme(e){let{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;if(s.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=s.shape.length,c=a.shape.length,u=o?s.shape[l-2]:s.shape[l-1],d=i?a.shape[c-1]:a.shape[c-2],p=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[c-2]:a.shape[c-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=ll.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,h]);w.assert(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,u,p]:[g,p,u],v=i?[y,h,d]:[y,d,h],C=hr({inputs:{x:s},backend:n,attrs:{shape:b}}),I=hr({inputs:{x:a},backend:n,attrs:{shape:v}}),E=n.dataIdMap.get(C.dataId).id,R=n.dataIdMap.get(I.dataId).id,F=o?C.shape[2]:C.shape[1],_=i?I.shape[1]:I.shape[2],P=Math.max(g,y),T=n.makeOutput([P,F,_],C.dtype),O=n.dataIdMap.get(T.dataId).id,G=new Uint8Array(new Int32Array(C.shape).buffer),K=new Uint8Array(new Int32Array(I.shape).buffer);return b6(E,G,C.shape.length,R,K,I.shape.length,o,i,O),n.disposeData(C.dataId),n.disposeData(I.dataId),T.shape=A,T}var Eme={kernelName:za,backendName:"wasm",setupFunc:Tme,kernelFunc:Nme};function Ll(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:s}=e,[a,o]=zt.parseSliceParams(t,n,r),i=zt.isSliceContinous(t.shape,a,o),l=s.readSync(t.dataId),c=s.makeOutput(o,t.dtype),u=w.computeStrides(t.shape),d=s.dataIdMap.get(c.dataId);if(i){let f=zt.computeFlatOffset(a,u);return t.dtype==="string"?d.stringBytes=l.slice(f,f+w.sizeFromShape(o)):s.typedArrayFromHeap(c).set(l.subarray(f,f+w.sizeFromShape(o))),c}if(t.dtype==="string"){let f=Lm(l,a,o,t.shape,t.dtype);return d.stringBytes=f,c}let p=s.typedArrayFromHeap(c),h=t.shape.length;if(h===2)Rme(l,u[0],p,a,o);else if(h===3)_me(l,u[0],u[1],p,a,o);else if(h===4)Dme(l,u[0],u[1],u[2],p,a,o);else{let f=Lm(l,a,o,t.shape,t.dtype);p.set(f)}return c}function Rme(e,t,n,r,s){let a=0,o=r[0],i=r[1],l=o+s[0];for(let c=o;c<l;c++){let u=c*t+i;n.set(e.subarray(u,u+s[1]),a),a+=s[1]}}function _me(e,t,n,r,s,a){let o=0,i=s[0],l=s[1],c=s[2],u=i+a[0],d=l+a[1];for(let p=i;p<u;p++)for(let h=l;h<d;h++){let f=p*t+h*n+c;r.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function Dme(e,t,n,r,s,a,o){let i=0,l=a[0],c=a[1],u=a[2],d=l+o[0],p=c+o[1],h=u+o[2],f=a[3];for(let m=l;m<d;m++)for(let g=c;g<p;g++)for(let y=u;y<h;y++){let x=m*t+g*n+y*r+f;s.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var Pme={kernelName:ji,backendName:"wasm",kernelFunc:Ll};function $me(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r,i=a.reduce((y,x)=>y*x),l=N.getReshaped(s.shape,a,i),c=N.getPermuted(l.length,a.length),u=N.getReshapedPermuted(s.shape,a,i),d=N.getSliceBeginCoords(o,a.length),p=N.getSliceSize(u,o,a.length),h=hr({inputs:{x:s},backend:n,attrs:{shape:l}}),f=Dc({inputs:{x:h},backend:n,attrs:{perm:c}}),m=hr({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Ll({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var Fme={kernelName:Ai,backendName:"wasm",kernelFunc:$me};function Bp(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,s=r.makeOutput(t.shape,n),a=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(s).set(a),s}var Ome={kernelName:La,backendName:"wasm",kernelFunc:Bp},Mme=En(Ba),v6;function zme(e){v6=e.wasm.cwrap(Ys,null,["number","number","number","number"])}function Lme(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r,i=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(s.shape,s.dtype),c=n.dataIdMap.get(l.dataId).id;return v6(i,a,o,c),l}var Bme={kernelName:Ys,backendName:"wasm",setupFunc:zme,kernelFunc:Lme};function w6(e){let{inputs:t,backend:n}=e,r=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],s=N.computeOutShape(t.map(h=>h.shape),r),a=t.filter(h=>w.sizeFromShape(h.shape)>0);if(a.length===1)return p0({inputs:{x:a[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(w.sizeFromShape(s)===0)return o;let i=a.map(h=>h.shape);if(N.assertParamsConsistent(i,r),a[0].dtype==="string"){let h=a.map(A=>{let b=w.sizeFromShape(A.shape.slice(r));return hr({inputs:{x:A},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(A=>({vals:n.readSync(A.dataId),shape:A.shape}));s=N.computeOutShape(h.map(A=>A.shape),1);let m=h[0].shape[0]===1,g=lx(f,s,t[0].dtype,m),y=N.computeOutShape(a.map(A=>A.shape),r);o.shape=y;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=N.fromStringArrayToUint8(g),h.forEach(A=>n.disposeData(A.dataId)),o}let l=w.sizeFromShape(a[0].shape.slice(0,r)),c=0,u=a.map(h=>{let f=w.sizeFromShape(h.shape.slice(r));return c+=f,f}),d=a.map(h=>n.typedArrayFromHeap(h)),p=n.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*c;for(let m=0;m<d.length;m++){let g=u[m],y=h*g,x=d[m].subarray(y,y+g);p.set(x,f),f+=g}}return o}var Wme={kernelName:xi,backendName:"wasm",kernelFunc:w6},k6;function Vme(e){k6=e.wasm.cwrap(Wa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ume(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,o=r.dataIdMap.get(s.dataId).id,i=r.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d,dataFormat:p}=n,h=N.convertConv2DDataFormat(p),f=N.computeConv2DInfo(s.shape,a.shape,l,c,u,d,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,A=f.padInfo.bottom,b=f.padInfo.left,v=f.dilationHeight,C=f.dilationWidth,I=f.strideHeight,E=f.strideWidth,R=f.inChannels,F=f.outChannels,_=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let P=r.makeOutput(f.outShape,"float32"),T=r.dataIdMap.get(P.dataId).id;return k6(o,s.shape[0],s.shape[1],s.shape[2],i,m,g,y,x,A,b,_,v,C,I,E,R,F,T),P}var Gme={kernelName:Wa,backendName:"wasm",setupFunc:Vme,kernelFunc:Ume},I6;function Hme(e){I6=e.wasm.cwrap(Va,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function jme(e){let{backend:t,inputs:n,attrs:r}=e,{dy:s,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:c,inputShape:u}=r,d=1,p=N.convertConv2DDataFormat(l),h=N.computeConv2DInfo(u,a.shape,o,d,i,c,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:x,inWidth:A,outChannels:b,outHeight:v,outWidth:C,strideHeight:I,strideWidth:E}=h,R=m-1-h.padInfo.top,F=g-1-h.padInfo.left,_=h.dataFormat==="channelsLast",P=w.computeStrides(h.inShape),T=w.computeStrides(s.shape),[O,G,K]=w.computeStrides(a.shape),z=P[0],j=_?P[1]:P[2],W=_?P[2]:1,Q=_?1:P[1],ne=T[0],oe=_?T[1]:T[2],Z=_?T[2]:1,ae=_?1:T[1],se=t.makeOutput(h.inShape,"float32"),me=t.dataIdMap.get(se.dataId).id,be=t.dataIdMap.get(s.dataId).id,Ne=t.dataIdMap.get(a.dataId).id;return I6(be,Ne,f,m,g,x,A,y,v,C,b,I,E,R,F,O,G,K,z,j,W,Q,ne,oe,Z,ae,me),se}var qme={kernelName:Va,backendName:"wasm",setupFunc:Hme,kernelFunc:jme},Xme=En(Ua),Kme=En(Ga),S6=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(S6||{}),C6;function Zme(e){C6=e.wasm.cwrap(vi,null,["number","number","number","number","array","number","number","number","number","number"])}function Yme(e){let{backend:t,inputs:n,attrs:r}=e,{method:s,extrapolationValue:a,cropSize:o}=r,{image:i,boxes:l,boxInd:c}=n,u=l.shape[0],[d,p]=o,h=[u,d,p,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Bp({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(c.dataId).id,A=t.makeOutput(h,"float32"),b=t.dataIdMap.get(A.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return C6(g,y,x,u,v,d,p,S6[s],a,b),m!=null&&t.disposeData(m.dataId),A}var Jme={kernelName:vi,backendName:"wasm",setupFunc:Zme,kernelFunc:Yme},T6;function Qme(e){T6=e.wasm.cwrap(bi,null,["number","number","number","number","number","number"])}function e0e(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r,l=s.shape.length;w.assert(s.dtype==="float32"||s.dtype==="int32",()=>`cumsum does not support ${s.dtype} tensors in the WASM backend`);let c=N.getAxesPermutation([a],l),u=s;c!==null&&(u=Dc({inputs:{x:s},attrs:{perm:c},backend:n}));let d=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[d],l);let p=n.makeOutput(u.shape,u.dtype),h=u.shape[d],f=n.dataIdMap.get(u.dataId).id,m=n.dataIdMap.get(p.dataId).id;T6(f,o?1:0,i?1:0,h,m,Xt[s.dtype]);let g=p;if(c!==null){let y=N.getUndoAxesPermutation(c);g=Dc({inputs:{x:p},attrs:{perm:y},backend:n}),n.disposeData(u.dataId),n.disposeData(p.dataId)}return g}var t0e={kernelName:bi,backendName:"wasm",setupFunc:Qme,kernelFunc:e0e},N6;function n0e(e){N6=e.wasm.cwrap(wi,null,["number","number","number","array","number","array","array","number","number"])}function r0e(e){let{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{blockSize:a,dataFormat:o}=r,i=s.shape[0],l=o==="NHWC"?s.shape[1]:s.shape[2],c=o==="NHWC"?s.shape[2]:s.shape[3],u=o==="NHWC"?s.shape[3]:s.shape[1],d=l*a,p=c*a,h=u/(a*a),f=o==="NHWC"?[i,d,p,h]:[i,h,d,p],m=t.makeOutput(f,"float32"),y=t.dataIdMap.get(s.dataId).id,x=new Uint8Array(new Int32Array(w.computeStrides(s.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return N6(y,a,o==="NHWC"?1:0,x,s.shape.length-1,A,b,f.length,v),m}var s0e={kernelName:wi,backendName:"wasm",setupFunc:n0e,kernelFunc:r0e},E6;function a0e(e){E6=e.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function o0e(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a}=t,o=r.dataIdMap.get(s.dataId).id,i=r.dataIdMap.get(a.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d}=n,p=c==null?[1,1]:c,h=N.computeConv2DInfo(s.shape,a.shape,l,p,u,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,x=h.padInfo.bottom,A=h.padInfo.left,b=h.dilationHeight,v=h.dilationWidth,C=h.strideHeight,I=h.strideWidth,E=h.inChannels,R=h.outChannels,F=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let _=r.makeOutput(h.outShape,"float32"),P=r.dataIdMap.get(_.dataId).id;return E6(o,s.shape[0],s.shape[1],s.shape[2],i,f,m,g,y,x,A,F,b,v,C,I,E,R,P),_}var i0e={kernelName:Ha,backendName:"wasm",setupFunc:a0e,kernelFunc:o0e},l0e=En(qa),u0e=!1,c0e=Zn(ki,u0e,"bool"),d0e=En(Xa,"float32");function eb(e){let{inputs:t,attrs:n,backend:r}=e,{input:s}=t,{dim:a}=n,o=s.shape.length,i=s.shape.slice(),l=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),hr({inputs:{x:s},backend:r,attrs:{shape:i}})}var p0e={kernelName:Ii,backendName:"wasm",kernelFunc:eb};function R6(e){let{attrs:{shape:t,value:n,dtype:r},backend:s}=e,a=s.makeOutput(t,r);return s.typedArrayFromHeap(a).fill(n),a}var h0e={kernelName:bu,backendName:"wasm",kernelFunc:R6},_6;function f0e(e){_6=e.wasm.cwrap(Ci,null,["number","number","number","number","number","number"])}function m0e(e){let{inputs:t,backend:n}=e,{image:r}=t,s=n.makeOutput(r.shape,r.dtype),a=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,[i,l,c,u]=r.shape;return _6(a,i,l,c,u,o),s}var g0e={kernelName:Ci,backendName:"wasm",kernelFunc:m0e,setupFunc:f0e},y0e=En(Ka),A0e=!1,x0e=Zn(Za,A0e),D6;function b0e(e){D6=e.wasm.cwrap(Ya,null,["number","number","number","number","number","number","number"])}function v0e(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:s}=r,{x:a,mean:o,variance:i,offset:l,scale:c}=n,u=t.dataIdMap.get(a.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return D6(u,d,p,h,f,s,g),m}var w0e={kernelName:Ya,backendName:"wasm",setupFunc:b0e,kernelFunc:v0e},P6;function k0e(e){P6=e.wasm.cwrap(Eo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function I0e(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(s.shape,a.shape,l,u,c,p),g=d0[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(s.dataId).id,x=r.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let Z=r.dataIdMap.get(o.dataId);if(Z.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${Z.shape.length}.`);if(Z.shape[0]!==A)throw new Error(`FusedConv2D bias shape (${Z.shape}) does not match the number of output channels (${A})`);b=Z.id}let v=m.filterHeight,C=m.filterWidth,I=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,_=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,O=m.strideWidth,G=m.inChannels,K=m.padInfo.type==="SAME"?1:0,z=m.batchSize,j=m.inHeight,W=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Q=r.makeOutput(m.outShape,"float32"),ne=r.dataIdMap.get(Q.dataId).id,oe=i==null?0:r.dataIdMap.get(i.dataId).id;return P6(y,z,j,W,x,v,C,b,I,E,R,F,K,_,P,T,O,G,A,g,oe,f||0,ne),Q}var S0e={kernelName:Eo,backendName:"wasm",setupFunc:k0e,kernelFunc:I0e},$6;function C0e(e){$6=e.wasm.cwrap(Ro,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function T0e(e){let{inputs:t,attrs:n,backend:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=N.computeConv2DInfo(s.shape,a.shape,l,u,c,p,!0),g=d0[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(s.dataId).id,x=r.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let Z=r.dataIdMap.get(o.dataId);if(Z.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${Z.shape.length}.`);if(Z.shape[0]!==A)throw new Error(`FusedDepthwiseConv2D bias shape (${Z.shape}) does not match the number of output channels (${A})`);b=Z.id}let v=m.filterHeight,C=m.filterWidth,I=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,F=m.padInfo.left,_=m.dilationHeight,P=m.dilationWidth,T=m.strideHeight,O=m.strideWidth,G=m.inChannels,K=m.padInfo.type==="SAME"?1:0,z=m.batchSize,j=m.inHeight,W=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let Q=r.makeOutput(m.outShape,"float32"),ne=r.dataIdMap.get(Q.dataId).id,oe=i==null?0:r.dataIdMap.get(i.dataId).id;return $6(y,z,j,W,x,v,C,b,I,E,R,F,K,_,P,T,O,G,A,g,oe,f||0,ne),Q}var N0e={kernelName:Ro,backendName:"wasm",setupFunc:C0e,kernelFunc:T0e},F6;function E0e(e){F6=e.wasm.cwrap(Ni,null,["number","number","number","number","number","number","array","number"])}function R0e(e){let{backend:t,inputs:n}=e,{params:r,indices:s}=n,[a,o,i,l]=J2.prepareAndValidate(r,s),c=t.makeOutput(a,r.dtype);if(o===0)return c;let u=s.shape,d=u[u.length-1],h=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=t.dataIdMap.get(c.dataId).id;return F6(h,Xt[r.dtype],m,o,d,i,g,y),c}var _0e={kernelName:Ni,backendName:"wasm",setupFunc:E0e,kernelFunc:R0e},O6;function D0e(e){O6=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function P0e(e){let{backend:t,inputs:n,attrs:r}=e,{x:s,indices:a}=n,{axis:o,batchDims:i}=r,l=w.parseAxisParam(o,s.shape)[0],c=t.readSync(a.dataId),u=s.shape[l];for(let R=0;R<c.length;++R){let F=c[R];w.assert(F<=u-1&&F>=0,()=>`GatherV2: the index value ${F} is not in [0, ${u-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(s,a,l,i),p=hr({inputs:{x:s},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=w.sizeFromShape(a.shape),f=hr({inputs:{x:a},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,s.dtype);if(w.sizeFromShape(s.shape)===0)return g;let y=p.shape.length-1,A=t.dataIdMap.get(p.dataId).id,v=t.dataIdMap.get(f.dataId).id,C=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(w.computeStrides(p.shape)).buffer),E=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return O6(A,Xt[s.dtype],I,y,v,d.batchSize,E,C),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}var $0e={kernelName:Ti,backendName:"wasm",setupFunc:D0e,kernelFunc:P0e},F0e=!1,O0e=Zn(Ei,F0e,"bool"),M0e=!1,z0e=Zn(Ja,M0e,"bool"),M6;function L0e(e){M6=e.wasm.cwrap(eo,null,["number","number","number","number"])}function B0e(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,s=r.dataIdMap.get(t.dataId).id,a=r.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let o=r.dataIdMap.get(a.dataId).id;M6(s,Xt[t.dtype],n,o)}return a}var W0e={kernelName:eo,backendName:"wasm",setupFunc:L0e,kernelFunc:B0e},V0e=!1,U0e=Zn(Ri,V0e,"bool"),G0e=!1,H0e=Zn(_i,G0e,"bool"),j0e=En(to),q0e=!1,X0e=Zn(Di,q0e,"bool"),z6;function K0e(e){z6=e.wasm.cwrap(no,null,["number","number","number","number"])}function Z0e(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:s,keepDims:a}=r,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Qo(o,s,t);if(h){let A=t.dataIdMap.get(u.dataId).id;c=u,l=A}let f=c.shape.length;N.assertAxesAreInnerMostDims("max",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;z6(l,Xt[o.dtype],y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var Y0e={kernelName:no,backendName:"wasm",setupFunc:K0e,kernelFunc:Z0e},J0e=!1,Q0e=Zn(ro,J0e),L6;function ege(e){L6=e.wasm.cwrap(so,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function tge(e){let{inputs:t,attrs:n,backend:r}=e,s=t.x,a=r.dataIdMap.get(s.dataId).id;w.assert(s.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${s.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:c}=n,u=N.computePool2DInfo(s.shape,o,i,1,l,c),d=u.filterHeight,p=u.filterWidth,h=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,y=u.dilationHeight,x=u.dilationWidth,A=u.strideHeight,b=u.strideWidth,v=u.inChannels,C=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);let I=r.makeOutput(u.outShape,"float32"),E=r.dataIdMap.get(I.dataId).id;return L6(a,s.shape[0],s.shape[1],s.shape[2],d,p,h,f,m,g,y,x,A,b,v,C,E),I}var nge={kernelName:so,backendName:"wasm",setupFunc:ege,kernelFunc:tge},B6;function rge(e){B6=e.wasm.cwrap(ao,null,["number, number, number"])}function sge(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Qo(o,s,t),f=d;if(h){let b=t.dataIdMap.get(u.dataId).id;b!==i&&(c=u,l=b,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("mean",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=w.sizeFromShape(g),x=c;c.dtype!=="float32"&&(x=Bp({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let A=t.makeOutput(m,"float32");if(w.sizeFromShape(c.shape)!==0){let b=t.dataIdMap.get(A.dataId).id;B6(l,y,b)}if(h&&t.disposeData(u.dataId),a){let b=N.expandShapeToKeepDim(A.shape,p);A.shape=b}return c.dtype!=="float32"&&t.disposeData(x.dataId),A}var age={kernelName:ao,backendName:"wasm",setupFunc:rge,kernelFunc:sge},W6;function oge(e){W6=e.wasm.cwrap(oo,null,["number","number","number","number"])}function ige(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Qo(o,s,t);if(h){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(c=u,l=A)}let f=c.shape.length;N.assertAxesAreInnerMostDims("min",d,f);let[m,g]=N.computeOutAndReduceShapes(c.shape,d),y=w.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;W6(l,Xt[o.dtype],y,A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var lge={kernelName:oo,backendName:"wasm",setupFunc:oge,kernelFunc:ige},uge=!1,cge=Zn(io,uge),V6=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(V6||{}),U6;function dge(e){U6=e.wasm.cwrap(lo,null,["number","array","number","number","array","array","number","number"])}function pge(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:s}}=e,a=r.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=r.map(f=>f[0]),d=r.map(f=>f[1]),p=new Uint8Array(new Int32Array(u).buffer),h=new Uint8Array(new Int32Array(d).buffer);return U6(o,c,t.shape.length,Xt[t.dtype],p,h,V6[s],l),i}var hge={kernelName:lo,backendName:"wasm",kernelFunc:pge,setupFunc:dge},fge=!0,mge=Zn(uo,fge),gge=En(Pi);function tb(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],s=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:s,pSelectedScores:a,pValidOutputs:o}}var G6;function yge(e){G6=e.wasm.cwrap(Fi,"number",["number","number","number","number","number"])}function Age(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:o}=r,{boxes:i,scores:l}=n,c=t.dataIdMap.get(i.dataId).id,u=t.dataIdMap.get(l.dataId).id,d=G6(c,u,a,s,o),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=tb(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var xge={kernelName:Fi,backendName:"wasm",setupFunc:yge,kernelFunc:Age},H6;function bge(e){H6=e.wasm.cwrap(Tu,"number",["number","number","number","number","number","bool"])}function vge(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=r,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=H6(u,d,a,s,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=tb(t,p);t.wasm._free(m);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([],"int32",g);return[y,x]}var wge={kernelName:Tu,backendName:"wasm",setupFunc:bge,kernelFunc:vge},j6;function kge(e){j6=e.wasm.cwrap(Oi,"number",["number","number","number","number","number","number"])}function Ige(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:s,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=r,{boxes:l,scores:c}=n,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,p=j6(u,d,a,s,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=tb(t,p);t.wasm._free(g);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([f],"float32",m);return[y,x]}var Sge={kernelName:Oi,backendName:"wasm",setupFunc:kge,kernelFunc:Ige},Cge=!1,Tge=Zn($i,Cge,"bool"),q6;function Nge(e){q6=e.wasm.cwrap(zi,null,["number","number","number","number","number"])}function Ege(e){let{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r,l=n.makeOutput([...s.shape,a],"int32"),c=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(s.dataId).id;return q6(d,a,o,i,c),l}var Rge={kernelName:zi,backendName:"wasm",setupFunc:Nge,kernelFunc:Ege};function _ge(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var Dge={kernelName:Mi,backendName:"wasm",kernelFunc:_ge};function Pge(e){let{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(t.length===1)return eb({inputs:{input:t[0]},backend:n,attrs:{dim:s}});let a=t[0].shape,o=t[0].dtype;t.forEach(u=>{w.assertShapesMatch(a,u.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(u=>{let d=eb({inputs:{input:u},backend:n,attrs:{dim:s}});return i.push(d),d}),c=w6({inputs:l,backend:n,attrs:{axis:s}});return i.forEach(u=>n.disposeData(u.dataId)),c}var $ge={kernelName:Li,backendName:"wasm",kernelFunc:Pge},X6;function Fge(e){X6=e.wasm.cwrap(co,null,["number","array","number","number","array","array","number","number"])}function Oge(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:s}}=e,a=r.map((m,g)=>m[0]+t.shape[g]+m[1]);if(w.sizeFromShape(t.shape)===0)return R6({backend:n,attrs:{shape:a,value:s,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map(m=>m[0]),p=r.map(m=>m[1]),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return X6(o,u,t.shape.length,Xt[t.dtype],h,f,s,c),i}var K6={kernelName:co,backendName:"wasm",kernelFunc:Oge,setupFunc:Fge},Mge=!1,zge=Zn(po,Mge),Z6;function Lge(e){Z6=e.wasm.cwrap(ho,null,["number","number","number"])}function Bge(e){let{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,i=a,l=r,c=l;l.dtype!=="float32"&&(c=Bp({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(c.dataId).id);let u=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(u.dataId).id;return Z6(i,o,d),l.dtype!=="float32"&&n.disposeData(c.dataId),u}var Wge={kernelName:ho,backendName:"wasm",setupFunc:Lge,kernelFunc:Bge},Y6;function Vge(e){Y6=e.wasm.cwrap(Bi,null,["number","number","number","number"])}function Uge(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Qo(o,s,t),f=d;if(h){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(c=u,l=A,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("prod",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=w.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;Y6(l,y,Xt[x.dtype],A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var Gge={kernelName:Bi,backendName:"wasm",setupFunc:Vge,kernelFunc:Uge},Hge=e=>{let{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=dx(r,s,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},jge={kernelName:Nu,backendName:"wasm",kernelFunc:Hge},qge=!0,Xge=Zn(ja,qge),Kge=En(fo),Zge=En(go),J6;function Yge(e){J6=e.wasm.cwrap(mo,null,["number","number","number","number","number","number","number","number","number","number"])}function Jge(e){let{backend:t,inputs:n,attrs:r}=e,{images:s}=n,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,c]=i,[u,d,p,h]=s.shape,f=[u,l,c,h],m=t.dataIdMap.get(s.dataId),g;m.dtype!=="float32"&&(g=Bp({backend:t,inputs:{x:s},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,x=t.makeOutput(f,"float32");if(w.sizeFromShape(s.shape)===0)return x;let A=t.dataIdMap.get(x.dataId).id;return J6(y,u,d,p,h,l,c,a?1:0,o?1:0,A),g!=null&&t.disposeData(g.dataId),x}var Qge={kernelName:mo,backendName:"wasm",setupFunc:Yge,kernelFunc:Jge},Q6;function e2e(e){Q6=e.wasm.cwrap(Vi,null,["number","array","number","array","number","number"])}function t2e(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=w.parseAxisParam(a,s.shape);if(s.shape.length===0)return p0({inputs:{x:s},backend:n});let i=n.makeOutput(s.shape,s.dtype),l=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(o).buffer),d=new Uint8Array(new Int32Array(s.shape).buffer);Q6(l,u,o.length,d,s.shape.length,c);let p=hr({inputs:{x:i},attrs:{shape:s.shape},backend:n});return n.disposeData(i.dataId),p}var n2e={kernelName:Vi,backendName:"wasm",kernelFunc:t2e,setupFunc:e2e},eT;function r2e(e){eT=e.wasm.cwrap(nl,null,["number","number","number","number","number","number","number","number","array","number","number"])}function s2e(e){let{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{radians:a,fillValue:o,center:i}=r,l=n.makeOutput(s.shape,s.dtype),c=n.dataIdMap.get(s.dataId).id,u=n.dataIdMap.get(l.dataId).id,[d,p,h,f]=s.shape,[m,g]=N.getImageCenter(i,p,h),y=o===0,x=255,A=typeof o=="number"?[o,o,o,y?0:x]:[...o,x],b=new Uint8Array(new Int32Array(A).buffer);return eT(c,d,p,h,f,a,m,g,b,A.length,u),l}var a2e={kernelName:nl,backendName:"wasm",kernelFunc:s2e,setupFunc:r2e},o2e=En(Ui),i2e=En(yo),tT;function l2e(e){tT=e.wasm.cwrap(Gi,null,["number","number","number","number","number","number","array","number","number"])}function u2e(e){let{backend:t,inputs:n,attrs:r}=e,{indices:s,updates:a}=n,{shape:o}=r,i=t.makeOutput(o,a.dtype);if(w.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:p}=Q2.calculateShapes(a,s,o),f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),x=t.dataIdMap.get(i.dataId).id;return tT(f,g,Xt[a.dtype],l,c,u,y,p,x),i}var c2e={kernelName:Gi,backendName:"wasm",setupFunc:l2e,kernelFunc:u2e},nT;function d2e(e){nT=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function p2e(e){let{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(s.dataId).id,l=n.dataIdMap.get(a.dataId).id,c=n.makeOutput(s.shape,s.dtype),u=n.dataIdMap.get(c.dataId).id,d=r.shape.length,p=s.shape.length,h=d===0||d>1||p===1?1:w.sizeFromShape(s.shape.slice(1));return nT(o,i,l,h,u),c}var h2e={kernelName:Hi,backendName:"wasm",kernelFunc:p2e,setupFunc:d2e},rT;function f2e(e){rT=e.wasm.cwrap(xo,null,["number","number"])}function m2e(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(s.dataId).id;return w.sizeFromShape(s.shape)===0||rT(r,a),s}var g2e={kernelName:"Sigmoid",backendName:"wasm",setupFunc:f2e,kernelFunc:m2e},y2e=En(Ao),sT;function A2e(e){sT=e.wasm.cwrap(wo,null,["number","number","number","number"])}function x2e(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,s=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[r],l=w.sizeFromShape(n.shape)/i;return w.sizeFromShape(a.shape)===0||sT(s,o,i,l),a}var b2e={kernelName:wo,backendName:"wasm",setupFunc:A2e,kernelFunc:x2e};function v2e(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r,i=w.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let C=1+a.length;C<s.shape.length;++C)l.push([0,0]);let c=K6.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),u=N.getReshaped(c.shape,a,i,!1),d=N.getPermuted(u.length,a.length,!1),p=N.getReshapedPermuted(c.shape,a,i,!1),m=hr({inputs:{x:c},backend:n,attrs:{shape:u}}),x=Dc({inputs:{x:m},backend:n,attrs:{perm:d}}),v=hr({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),v}var w2e={kernelName:Xi,backendName:"wasm",kernelFunc:v2e},aT;function k2e(e){aT=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function I2e(e){let{backend:t,inputs:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=n,i=r.shape[0],l=r.shape[1],c=t.readSync(a.dataId)[0],u=[i+c,l],d=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(o.dataId).id,f=t.makeOutput(u,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(u.slice(0,1),s.dtype),y=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([c],"bool"),A=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([i],r.dtype),v=t.dataIdMap.get(b.dataId).id,C=t.makeOutput([4],"int32"),I=t.dataIdMap.get(C.dataId).id,E=aT(d,p,Xt[s.dtype],i,c,l,h,m,y,A,v,I),R=t.readSync(C.dataId),F;switch(R[0]){case 1:{F=N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{F=N.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:F=N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:F=""}if(t.disposeData(C.dataId),F)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error(F);let _=f,P=g;return E!==u[0]&&(_=Ll({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),P=Ll({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[_,P,x,b]}var S2e={kernelName:Cd,backendName:"wasm",setupFunc:k2e,kernelFunc:I2e},oT;function C2e(e){oT=e.wasm.cwrap($u,null,["number","number","number","number","number","number","number"])}function T2e(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:s,newShape:a}=n;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=t.dataIdMap.get(r.dataId).id,i=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(a.dataId).id,c=r.shape[0],u=w.sizeFromShape(a.shape),d=t.makeOutput([c,u],r.dtype),p=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([u],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;oT(o,i,l,c,p,f,g);let y=t.readSync(m.dataId),x;switch(y[0]){case 0:{x=N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{x=N.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:x=N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let A=Array.from(t.readSync(s.dataId)),b=Array.from(t.readSync(h.dataId));x=N.getSparseReshapeInputOutputMultipleErrorMessage(A,b);break}case 4:{let A=Array.from(t.readSync(s.dataId)),b=Array.from(t.readSync(h.dataId));x=N.getSparseReshapeInputOutputMismatchErrorMessage(A,b);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(d.dataId),t.disposeData(h.dataId),new Error(x);return[d,h]}var N2e={kernelName:$u,backendName:"wasm",setupFunc:C2e,kernelFunc:T2e},iT;function lT(e){iT=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function uT(e,t){let{backend:n,inputs:r}=e,{data:s,indices:a,segmentIds:o}=r,i=a.shape[0],l=n.readSync(o.dataId,i-1,i)[0],u=i>0?l+1:0;if(u<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=s.shape.slice();d[0]=u;let p=n.dataIdMap.get(s.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(d,s.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput([4],"int32"),x=n.dataIdMap.get(y.dataId).id;iT(p,Xt[s.dtype],s.shape[0],h,f,g,x,t,0);let A=n.readSync(y.dataId),b;switch(A[0]){case 0:{b=N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{b=N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:b=N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:b=N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(y.dataId),b)throw n.disposeData(m.dataId),new Error(b);return m}function E2e(e){return uT(e,!0)}var R2e={kernelName:Td,backendName:"wasm",setupFunc:lT,kernelFunc:E2e};function _2e(e){return uT(e,!1)}var D2e={kernelName:Nd,backendName:"wasm",setupFunc:lT,kernelFunc:_2e};function P2e(e){let{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=n,i=w.parseAxisParam(o,s.shape)[0],l=N.prepareSplitSize(s,a,i),c=new Array(s.shape.length).fill(0),u=s.shape.slice();return l.map(d=>{let p=[...u];p[i]=d;let h=Ll({inputs:{x:s},attrs:{begin:c,size:p},backend:r});return c[i]+=d,h})}var $2e={kernelName:Ki,backendName:"wasm",kernelFunc:P2e},F2e=En(bo),O2e=En(Fu),M2e=!0,z2e=Zn(ko,M2e),cT;function L2e(e){cT=e.wasm.cwrap(To,null,["number","number","number","number"])}function B2e(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:s}=r,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return cT(o,s,Xt[a.dtype],l),i}var W2e={kernelName:To,backendName:"wasm",setupFunc:L2e,kernelFunc:B2e},dT;function V2e(e){dT=e.wasm.cwrap(Zi,null,["number","array","number","array","array","array","array","array","number","number"])}function U2e(e){let{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(s.shape,a,o,i,l,c,u,d,p),v;if(m)v=hr({inputs:{x:s},backend:t,attrs:{shape:f}});else if(g||y){w.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let C=zt.computeOutShape(x,A,b),I=Ll({inputs:{x:s},backend:t,attrs:{begin:x,size:C}});v=hr({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeData(I.dataId)}else{let C=t.makeOutput(h,"float32"),I=t.dataIdMap.get(s.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(s.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(A).buffer),_=new Uint8Array(new Int32Array(b).buffer),P=new Uint8Array(new Int32Array(h).buffer),T=new Uint8Array(new Int32Array(w.computeStrides(h)).buffer),O=t.dataIdMap.get(C.dataId).id;dT(I,E,s.shape.length,R,F,_,P,T,h.length,O),v=hr({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}return v}var G2e={kernelName:Zi,backendName:"wasm",setupFunc:V2e,kernelFunc:U2e},H2e=!0,j2e=Zn(Io,H2e),pT;function q2e(e){pT=e.wasm.cwrap(vo,null,["number","number","number","number"])}function X2e(e){let{backend:t,inputs:n,attrs:r}=e,{axis:s,keepDims:a}=r,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,c=o,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=Qo(o,s,t),f=d;if(h){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(c=u,l=A,f=N.getInnerMostAxes(f.length,c.shape.length))}N.assertAxesAreInnerMostDims("sum",f,c.shape.length);let[m,g]=N.computeOutAndReduceShapes(c.shape,f),y=w.sizeFromShape(g),x=t.makeOutput(m,c.dtype);if(w.sizeFromShape(c.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;pT(l,y,Xt[x.dtype],A)}if(h&&t.disposeData(u.dataId),a){let A=N.expandShapeToKeepDim(x.shape,p);x.shape=A}return x}var K2e={kernelName:vo,backendName:"wasm",setupFunc:q2e,kernelFunc:X2e},Z2e=En(Yi),Y2e=En(So),hT;function J2e(e){hT=e.wasm.cwrap(Js,null,["number","array","number","array","number","number"])}function Q2e(e){let{inputs:t,backend:n,attrs:r}=e,{x:s}=t,a=n.dataIdMap.get(s.dataId).id,{reps:o}=r,i=new Array(s.shape.length);for(let p=0;p<i.length;p++)i[p]=s.shape[p]*o[p];let l=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),u=n.makeOutput(i,s.dtype),d=n.dataIdMap.get(u.dataId).id;return hT(a,l,s.shape.length,c,i.length,Xt[u.dtype],d),u}var eye={kernelName:Js,backendName:"wasm",setupFunc:J2e,kernelFunc:Q2e},fT;function tye(e){fT=e.wasm.cwrap(Ji,null,["number","array","number","number","number","bool","number","number"])}var nye=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:s,sorted:a}=n,o=t.dataIdMap.get(r.dataId).id,i=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=s;let c=t.makeOutput(l,r.dtype),u=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(l,"int32"),p=t.dataIdMap.get(d.dataId).id;return fT(o,i,r.shape.length,Xt[r.dtype],s,a,u,p),[c,d]},rye={kernelName:Ji,backendName:"wasm",setupFunc:tye,kernelFunc:nye},mT;function sye(e){mT=e.wasm.cwrap(Qi,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function aye(e){let{backend:t,inputs:n,attrs:r}=e,{image:s,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:c}=r,[u,d,p,h]=s.shape,[f,m]=c!=null?c:[d,p],g=[u,f,m,h],y=new Uint8Array(new Int32Array(w.computeStrides(s.shape)).buffer),x=t.makeOutput(g,s.dtype),A=t.dataIdMap.get(x.dataId).id,v=t.dataIdMap.get(s.dataId).id,I=t.dataIdMap.get(a.dataId).id,E=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return mT(v,I,a.shape[0]>1,u,f,m,h,p,d,y,s.shape.length-1,E,R,l,A),x}var oye={kernelName:Qi,backendName:"wasm",setupFunc:sye,kernelFunc:aye};function iye(e){let{inputs:t,backend:n,attrs:r}=e,{value:s}=t,{axis:a}=r;a<0&&(a+=s.shape.length);let o=s.shape[a],i=s.shape.length,l=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==a&&(l[c++]=s.shape[h]);let u=new Array(o),d=new Array(i).fill(0),p=s.shape.slice();p[a]=1;for(let h=0;h<u.length;h++)d[a]=h,u[h]=Ll({inputs:{x:s},attrs:{begin:d,size:p},backend:n});return u.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var lye={kernelName:el,backendName:"wasm",kernelFunc:iye};function uye(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var cye={kernelName:tl,backendName:"wasm",kernelFunc:uye},dye=[nme,rme,ame,lme,gme,xme,wme,Sme,Eme,Fme,Ome,Mme,Bme,Wme,Gme,qme,Xme,Kme,Jme,t0e,s0e,i0e,l0e,c0e,d0e,p0e,h0e,g0e,y0e,x0e,w0e,S0e,N0e,_0e,$0e,O0e,z0e,ume,W0e,U0e,H0e,j0e,X0e,Y0e,Q0e,nge,age,lge,cge,hge,mge,gge,xge,wge,Sge,Tge,Rge,Dge,$ge,K6,zge,Wge,Gge,jge,Xge,Kge,Zge,Cme,Qge,n2e,a2e,o2e,i2e,c2e,h2e,g2e,y2e,Pme,b2e,w2e,S2e,N2e,R2e,D2e,$2e,F2e,O2e,z2e,W2e,G2e,j2e,K2e,Z2e,Y2e,eye,rye,oye,hme,lye,cye];for(let e of dye)Jr(e);var nb=Y();nb.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));nb.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(nb.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var gT=fi(PR()),pye='var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}',hye=fi($R()),yT=class extends au{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(xT),ab=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new pd(this,Dn())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,r,s){let a=this.dataIdNextNumber++;if(r==="string"){let c=t;this.dataIdMap.set(e,{id:a,stringBytes:c,shape:n,dtype:r,memoryOffset:null,refCount:s});return}let o=w.sizeFromShape(n),i=o*w.bytesPerElement(r),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:r,refCount:s}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:s,shape:a,stringBytes:o}=this.dataIdMap.get(e);if(s==="string")return(t==null||t===0)&&(n==null||n>=o.length)?o:o.slice(t,n);t=t||0,n=n||w.sizeFromShape(a);let i=w.bytesPerElement(s),l=this.wasm.HEAPU8.slice(r+t*i,r+n*i);return gye(l.buffer,s)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(n==null)r=this.write(null,e,t);else{let s=this.dataIdNextNumber++;r={id:s},this.dataIdMap.set(r,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,s,a);case"int32":return new Int32Array(r,s,a);case"bool":return new Uint8Array(r,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function fye(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(s=>{WebAssembly.instantiate(s,t).then(a=>{n(a.instance,a.module)})})}),{})}function AT(e,t,n){if(h0!=null)return h0;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),Vp!=null&&Vp[r]!=null?Vp[r]:n+r}async function mye(){let[e,t]=await Promise.all([Y().getAsync("WASM_HAS_SIMD_SUPPORT"),Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let s={};s.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let c=pye,u=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(u)}return i.endsWith(".wasm")?AT(e,t,Wp!=null?Wp:l):l+i},rb&&(s.instantiateWasm=fye(AT(e,t,Wp!=null?Wp:"")));let a=!1;s.onAbort=()=>{if(a||Up)return;Up=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&h0==null?(s.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+gT.default.toString()],{type:"text/javascript"}),o=(0,gT.default)(s)):o=(0,hye.default)(s),o.then(i=>{a=!0,Up=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})})})}function gye(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var yye=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],h0=null,Wp=null,Vp={},Up=!1,rb=!1;function Aye(e,t=!1){if(ly("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Up)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");h0=e,rb=t}function sb(e,t=!1){if(Up)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Wp=e;else{Vp=e;let n=yye.filter(r=>Vp[r]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}rb=t}var xT=-1,ab=-1;function xye(e){xT=e}function bye(){if(ab===-1)throw new Error("WASM backend not initialized.");return ab}var vye="0.0.0",wye=2;dl("wasm",async()=>{let{wasm:e}=await mye();return new yT(e)},wye);var ei="3.13.0-20220114",Gp={tfjs:ei,"tfjs-core":ei,"tfjs-data":ei,"tfjs-layers":ei,"tfjs-converter":ei,"tfjs-backend-cpu":ei,"tfjs-backend-webgl":ei,"tfjs-backend-wasm":ei};var bT=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var vT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,wT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,kT=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,IT=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,ST=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var ob=(e,t,n)=>{let r=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(r,(s,a)=>(n[a]=0,s))},CT=class{constructor(t,n,r){fe(this,"uniform",{});fe(this,"attribute",{});fe(this,"gl");fe(this,"id");fe(this,"compile",(t,n)=>{let r=this.gl.createShader(n);return r?(this.gl.shaderSource(r,t),this.gl.compileShader(r),this.gl.getShaderParameter(r,this.gl.COMPILE_STATUS)?r:(J(`filter: gl compile failed: ${this.gl.getShaderInfoLog(r)}`),null)):(J("filter: could not create shader"),null)});this.gl=t;let s=this.compile(n,this.gl.VERTEX_SHADER),a=this.compile(r,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!s||!a)){if(!this.id){J("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,s),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){J(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),ob(n,"attribute",this.attribute);for(let o in this.attribute)this.attribute[o]=this.gl.getAttribLocation(this.id,o);ob(n,"uniform",this.uniform),ob(r,"uniform",this.uniform);for(let o in this.uniform)this.uniform[o]=this.gl.getUniformLocation(this.id,o)}}};function TT(){let e=0,t=null,n=!1,r=-1,s=[null,null],a=[],o=null,i=null,l=Yn(100,100),c={},u={INTERMEDIATE:1},d=l.getContext("webgl");if(this.gl=d,!d){J("filter: cannot get webgl context");return}function p(x,A){if(!(x===l.width&&A===l.height)){if(l.width=x,l.height=A,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,o),d.bufferData(d.ARRAY_BUFFER,b,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),s=[null,null]}}function h(x,A){let b=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,b);let v=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,v);let C=d.createTexture();return d.bindTexture(d.TEXTURE_2D,C),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,x,A,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,C,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:b,texture:C}}function f(x){return s[x]=s[x]||h(l.width,l.height),s[x]}function m(x=0){if(!i)return;let A=null,b=null,v=!1;e===0?A=t:A=f(r).texture||null,e++,n&&!(x&u.INTERMEDIATE)?(b=null,v=e%2===0):(r=(r+1)%2,b=f(r).fbo||null),d.bindTexture(d.TEXTURE_2D,A),d.bindFramebuffer(d.FRAMEBUFFER,b),d.uniform1f(i.uniform.flipY,v?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function g(x){if(c[x])return i=c[x],d.useProgram((i?i.id:null)||null),i;if(i=new CT(d,bT,x),!i)return J("filter: could not get webgl program"),null;let A=Float32Array.BYTES_PER_ELEMENT,b=4*A;return d.enableVertexAttribArray(i.attribute.pos),d.vertexAttribPointer(i.attribute.pos,2,d.FLOAT,!1,b,0*A),d.enableVertexAttribArray(i.attribute.uv),d.vertexAttribPointer(i.attribute.uv,2,d.FLOAT,!1,b,2*A),c[x]=i,i}let y={colorMatrix:x=>{let A=new Float32Array(x);A[4]/=255,A[9]/=255,A[14]/=255,A[19]/=255;let b=A[18]===1&&A[3]===0&&A[8]===0&&A[13]===0&&A[15]===0&&A[16]===0&&A[17]===0&&A[19]===0?wT:vT,v=g(b);!v||(d.uniform1fv(v.uniform.m,A),m())},brightness:x=>{let A=(x||0)+1;y.colorMatrix([A,0,0,0,0,0,A,0,0,0,0,0,A,0,0,0,0,0,1,0])},saturation:x=>{let A=(x||0)*2/3+1,b=(A-1)*-.5;y.colorMatrix([A,b,b,0,0,b,A,b,0,0,b,b,A,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:x=>{let A=(x||0)+1,b=-128*(A-1);y.colorMatrix([A,0,0,0,b,0,A,0,0,b,0,0,A,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let A=Math.cos(x),b=Math.sin(x),v=.213,C=.715,I=.072;y.colorMatrix([v+A*(1-v)+b*-v,C+A*-C+b*-C,I+A*-I+b*(1-I),0,0,v+A*-v+b*.143,C+A*(1-C)+b*.14,I+A*-I+b*-.283,0,0,v+A*-v+b*-(1-v),C+A*-C+b*C,I+A*(1-I)+b*I,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let A=new Float32Array(x),b=1/l.width,v=1/l.height,C=g(ST);!C||(d.uniform1fv(C.uniform.m,A),d.uniform2f(C.uniform.px,b,v),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let A=x||1;y.convolution.call(this,[0,-1*A,0,-1*A,1+4*A,-1*A,0,-1*A,0])},emboss:x=>{let A=x||1;y.convolution.call(this,[-2*A,-1*A,0,-1*A,1,1*A,0,1*A,2*A])},blur:x=>{let A=x/7/l.width,b=x/7/l.height,v=g(IT);!v||(d.uniform2f(v.uniform.px,0,b),m(u.INTERMEDIATE),d.uniform2f(v.uniform.px,A,0),m())},pixelate:x=>{let A=x/l.width,b=x/l.height,v=g(kT);!v||(d.uniform2f(v.uniform.size,A,b),m())}};this.add=function(x){let A=Array.prototype.slice.call(arguments,1),b=y[x];a.push({func:b,args:A})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){p(x.width,x.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,x);for(let A=0;A<a.length;A++){n=A===a.length-1;let b=a[A];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function f0(e){let t=e.shape.length===4?Ye(e):e,n=Jt(t,3,2),r=[Lo(n[0]),Lo(n[1]),Lo(n[2])],s=[bn(n[0]),bn(n[1]),bn(n[2])],a=await Promise.all(s.map(h=>h.data())),o=.99*Math.max(a[0][0],a[1][0],a[2][0]),i=[pe(n[0],r[0]),pe(n[1],r[1]),pe(n[2],r[2])],l=[pe(s[0],r[0]),pe(s[1],r[1]),pe(s[2],r[2])],c=[de(o,l[0]),de(o,l[1]),de(o,l[2])],u=[L(i[0],c[0]),L(i[1],c[1]),L(i[2],c[2])],d=on([u[0],u[1],u[2]],2),p=H(d,[1,t.shape[0],t.shape[1],3]);return te([...n,...r,...s,...i,...l,...c,...u,d,t]),p}var m0=2048,dt=null,dn=null,Pc=null,Et,ha={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function Yn(e,t){let n;if(he.browser)if(he.worker){if(typeof OffscreenCanvas=="undefined")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if(typeof document=="undefined")throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof he.Canvas!="undefined"?n=new he.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(n=new globalThis.Canvas(e,t));return n}function ib(e,t){let n=t||Yn(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function $c(e,t,n=!0){if(!e)return t.debug&&J("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof nt)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof he.Canvas!="undefined"&&e instanceof he.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof nt){let r=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)r=Yt(e,0);else if(e.shape[2]===4){let s=gl(e,[0,0,0],[-1,-1,3]);r=Yt(s,0),te(s)}}else e.shape.length===4&&(e.shape[3]===3?r=Vn(e):e.shape[3]===4&&(r=yl(e,[0,0,0,0],[-1,-1,-1,3])));if(r==null||r.shape.length!==4||r.shape[0]!==1||r.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(r.dtype==="int32"){let s=ge(r,"float32");te(r),r=s}return{tensor:r,canvas:t.filter.return?dn:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&J("input stream is not ready"),{tensor:null,canvas:dt};let r=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,s=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!r||!s)return t.debug&&J("cannot determine input dimensions"),{tensor:null,canvas:dt};let a=r,o=s;if(a>m0&&(a=m0,o=Math.trunc(a*s/r)),o>m0&&(o=m0,a=Math.trunc(o*r/s)),(t.filter.width||0)>0?a=t.filter.width:(t.filter.height||0)>0&&(a=r*((t.filter.height||0)/s)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=s*((t.filter.width||0)/r)),!a||!o)throw new Error("input error: cannot determine dimension");(!dt||(dt==null?void 0:dt.width)!==a||(dt==null?void 0:dt.height)!==o)&&(dt=Yn(a,o));let i=dt.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate!="undefined"?(i.translate(r,0),i.scale(-1,1),i.drawImage(e,0,0,r,s,0,0,dt==null?void 0:dt.width,dt==null?void 0:dt.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,r,s,0,0,dt==null?void 0:dt.width,dt==null?void 0:dt.height),(!dn||dt.width!==dn.width||(dt==null?void 0:dt.height)!==(dn==null?void 0:dn.height))&&(dn=Yn(dt.width,dt.height)),t.filter.enabled&&he.webgl.supported){if(Et||(Et=he.browser?new TT:null),he.filter=!!Et,!Et||!Et.add)return t.debug&&J("input process error: cannot initialize filters"),{tensor:null,canvas:dt};Et.reset(),t.filter.brightness!==0&&Et.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Et.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Et.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Et.add("blur",t.filter.blur),t.filter.saturation!==0&&Et.add("saturation",t.filter.saturation),t.filter.hue!==0&&Et.add("hue",t.filter.hue),t.filter.negative&&Et.add("negative"),t.filter.sepia&&Et.add("sepia"),t.filter.vintage&&Et.add("brownie"),t.filter.sepia&&Et.add("sepia"),t.filter.kodachrome&&Et.add("kodachrome"),t.filter.technicolor&&Et.add("technicolor"),t.filter.polaroid&&Et.add("polaroid"),t.filter.pixelate!==0&&Et.add("pixelate",t.filter.pixelate),Et.get()>0?dn=Et.apply(dt):dn=Et.draw(dt)}else ib(dt,dn),Et&&(Et=null),he.filter=!!Et;if(!n)return{tensor:null,canvas:dn};if(!dn)throw new Error("canvas error: cannot create output");let l,c=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(he.browser&&Or)l=Or?Or.fromPixels(e):null;else{c=e.data.length/e.height/e.width;let p=new Uint8Array(e.data.buffer);l=ht(p,[e.height,e.width,c],"int32")}else if((!Pc||dn.width!==Pc.width||dn.height!==Pc.height)&&(Pc=Yn(dn.width,dn.height)),Or&&he.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=Or.fromPixels(dn):(Pc=ib(dn),l=Or.fromPixels(Pc));else{let f=ib(dn).getContext("2d").getImageData(0,0,a,o);c=f.data.length/a/o;let m=new Uint8Array(f.data.buffer);l=ht(m,[a,o,c])}if(c===4){let p=gl(l,[0,0,0],[-1,-1,3]);te(l),l=p}if(!l)throw new Error("input error: cannot create tensor");let u=ge(l,"float32"),d=t.filter.equalization?await f0(u):Yt(u,0);return te([l,u]),{tensor:d,canvas:t.filter.return?dn:null}}}async function NT(e,t){let n=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return n;if(!ha.inputTensor)ha.inputTensor=Vn(t);else if(ha.inputTensor.shape[1]!==t.shape[1]||ha.inputTensor.shape[2]!==t.shape[2])te(ha.inputTensor),ha.inputTensor=Vn(t);else{let r={};r.diff=pe(t,ha.inputTensor),r.squared=L(r.diff,r.diff),r.sum=we(r.squared);let a=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;te([ha.inputTensor,r.diff,r.squared,r.sum]),ha.inputTensor=Vn(t),n=a<=(e.cacheSensitivity||0)}return n}async function ET(e,t,n){let r={};if(!t||!n||t.shape.length!==4||t.shape.length!==n.shape.length)return e.debug||J("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(t.shape[0]!==1||n.shape[0]!==1||t.shape[3]!==3||n.shape[3]!==3)return e.debug||J("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;r.input1=Vn(t),r.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Ie.resizeBilinear(n,[t.shape[1],t.shape[2]]):Vn(n),r.diff=pe(r.input1,r.input2),r.squared=L(r.diff,r.diff),r.sum=we(r.squared);let a=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return te([r.input1,r.input2,r.diff,r.squared,r.sum]),a}var RT=class{constructor(){fe(this,"browser");fe(this,"node");fe(this,"worker");fe(this,"platform","");fe(this,"agent","");fe(this,"backends",[]);fe(this,"initial");fe(this,"filter");fe(this,"tfjs");fe(this,"offscreen");fe(this,"perfadd",!1);fe(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});fe(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});fe(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});fe(this,"cpu",{model:void 0,flags:[]});fe(this,"kernels",[]);fe(this,"Canvas");fe(this,"Image");fe(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined",this.tfjs={version:Gp["tfjs-core"]},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t&&t[0]){let n=t[0].match(/\(([^()]+)\)/g);this.platform=n&&n[0]?n[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(Dn().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&xr()==="wasm"&&(this.wasm.simd=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let t=Yn(100,100),n=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof n!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(xr()==="webgl"||xr()==="humangl")){let r=gs().gpgpu!=="undefined"?await gs().getGPGPUContext().gl:null;r&&(this.webgl.version=r.getParameter(r.VERSION),this.webgl.renderer=r.getParameter(r.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(r){this.webgpu.supported=!1}try{this.kernels=Ds(xr()).map(r=>r.kernelName.toLowerCase())}catch(r){}}async updateCPU(){let t={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},he=new RT;var lb="2.5.8";var fa={appName:"human",autoSave:!0,verbose:!0};async function Nye(e,t){return fa.fetchFunc?fa.fetchFunc(e,t):(J("error: fetch function is not defined"),null)}var Eye={onProgress:(...e)=>{fa.onProgress?fa.onProgress(...e):fa.verbose&&J("load model progress:",...e)},fetchFunc:(e,t)=>(fa.verbose&&J("load model fetch:",e,t),e.toString().toLowerCase().startsWith("http")?Nye(e,t):null)};async function je(e,t){return t&&(fa=yn(t)),!fa.fetchFunc&&typeof globalThis.fetch!="undefined"&&(fa.fetchFunc=globalThis.fetch),await ex(e,Eye)}var fr,ub=[],Rye=["white","black","asian","indian","other"],_ye=[15,23,28,35.5,45.5,55.5,65],_T=0,DT=0,cb=Number.MAX_SAFE_INTEGER;async function PT(e){return he.initial&&(fr=null),fr?e.debug&&J("cached model:",fr.modelUrl):(fr=await je(Ve(e.modelBasePath,e.face.gear.modelPath)),!fr||!fr.modelUrl?J("load model failed:",e.face.gear.modelPath):e.debug&&J("load model:",fr.modelUrl)),fr}async function db(e,t,n,r){var o,i;if(!fr)return{age:0,gender:"unknown",genderScore:0,race:[]};let s=cb<(((o=t.face.gear)==null?void 0:o.skipFrames)||0),a=(((i=t.face.gear)==null?void 0:i.skipTime)||0)>ie()-DT;return t.skipAllowed&&a&&s&&_T===r&&ub[n]?(cb++,ub[n]):(cb=0,new Promise(async l=>{var y,x;if(!(fr==null?void 0:fr.inputs[0].shape))return;let c={},u=[[0,.1,.9,.9]];c.resize=Ie.cropAndResize(e,u,[0],[fr.inputs[0].shape[2],fr.inputs[0].shape[1]]);let d={age:0,gender:"unknown",genderScore:0,race:[]};((y=t.face.gear)==null?void 0:y.enabled)&&([c.age,c.gender,c.race]=fr.execute(c.resize,["age_output","gender_output","race_output"]));let p=await c.gender.data();d.gender=p[0]>p[1]?"male":"female",d.genderScore=Math.round(100*(p[0]>p[1]?p[0]:p[1]))/100;let h=await c.race.data();for(let A=0;A<h.length;A++)h[A]>(((x=t.face.gear)==null?void 0:x.minConfidence)||.2)&&d.race.push({score:Math.round(100*h[A])/100,race:Rye[A]});d.race.sort((A,b)=>b.score-A.score);let m=Array.from(await c.age.data()).map((A,b)=>[_ye[b],A]).sort((A,b)=>b[1]-A[1]),g=m[0][0];for(let A=1;A<m.length;A++)g+=m[A][1]*(m[A][0]-g);d.age=Math.round(10*g)/10,Object.keys(c).forEach(A=>te(c[A])),ub[n]=d,_T=r,DT=ie(),l(d)}))}var Ke={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function FT(){Ke.tf255=Te(255,"float32"),Ke.tf1=Te(1,"float32"),Ke.tf2=Te(2,"float32"),Ke.tf05=Te(.5,"float32"),Ke.tf127=Te(127.5,"float32"),Ke.rgb=Tt([.2989,.587,.114],"float32")}var On,g0=[],OT=0,MT=0,pb=Number.MAX_SAFE_INTEGER;async function zT(e){return he.initial&&(On=null),On?e.debug&&J("cached model:",On.modelUrl):(On=await je(Ve(e.modelBasePath,e.face.ssrnet.modelPathAge)),!On||!On.modelUrl?J("load model failed:",e.face.ssrnet.modelPathAge):e.debug&&J("load model:",On.modelUrl)),On}async function hb(e,t,n,r){var o,i,l,c;if(!On)return{age:0};let s=pb<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-MT;return t.skipAllowed&&s&&a&&OT===r&&((l=g0[n])==null?void 0:l.age)&&((c=g0[n])==null?void 0:c.age)>0?(pb++,g0[n]):(pb=0,new Promise(async u=>{if(!(On==null?void 0:On.inputs)||!On.inputs[0]||!On.inputs[0].shape)return;let d={};d.resize=Ie.resizeBilinear(e,[On.inputs[0].shape[2],On.inputs[0].shape[1]],!1),d.enhance=L(d.resize,Ke.tf255);let p={age:0};if(t.face.ssrnet.enabled&&(d.age=On.execute(d.enhance)),d.age){let h=await d.age.data();p.age=Math.trunc(10*h[0])/10}Object.keys(d).forEach(h=>te(d[h])),g0[n]=p,OT=r,MT=ie(),u(p)}))}var mr,y0=[],BT=0,WT=0,fb=Number.MAX_SAFE_INTEGER,mb=[.2989,.587,.114];async function VT(e){return he.initial&&(mr=null),mr?e.debug&&J("cached model:",mr.modelUrl):(mr=await je(Ve(e.modelBasePath,e.face.ssrnet.modelPathGender)),!mr||!mr.modelUrl?J("load model failed:",e.face.ssrnet.modelPathGender):e.debug&&J("load model:",mr.modelUrl)),mr}async function gb(e,t,n,r){var o,i,l,c;if(!mr)return{gender:"unknown",genderScore:0};let s=fb<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>ie()-WT;return t.skipAllowed&&s&&a&&BT===r&&((l=y0[n])==null?void 0:l.gender)&&((c=y0[n])==null?void 0:c.genderScore)>0?(fb++,y0[n]):(fb=0,new Promise(async u=>{if(!(mr==null?void 0:mr.inputs[0].shape))return;let d={};d.resize=Ie.resizeBilinear(e,[mr.inputs[0].shape[2],mr.inputs[0].shape[1]],!1),d.enhance=X(()=>{let[f,m,g]=Jt(d.resize,3,3),y=L(f,mb[0]),x=L(m,mb[1]),A=L(g,mb[2]),b=vf([y,x,A]);return L(pe(b,Ke.tf05),2)});let p={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(d.gender=mr.execute(d.enhance));let h=await d.gender.data();p.gender=h[0]>h[1]?"female":"male",p.genderScore=h[0]>h[1]?Math.trunc(100*h[0])/100:Math.trunc(100*h[1])/100,Object.keys(d).forEach(f=>te(d[f])),y0[n]=p,BT=r,WT=ie(),u(p)}))}var pn,A0=[],yb=Number.MAX_SAFE_INTEGER,GT=0,HT=0;async function jT(e){var t,n;return he.initial&&(pn=null),pn?e.debug&&J("cached model:",pn.modelUrl):(pn=await je(Ve(e.modelBasePath,((t=e.face.antispoof)==null?void 0:t.modelPath)||"")),!pn||!pn.modelUrl?J("load model failed:",(n=e.face.antispoof)==null?void 0:n.modelPath):e.debug&&J("load model:",pn.modelUrl)),pn}async function Ab(e,t,n,r){var o,i;if(!pn)return 0;let s=(((o=t.face.antispoof)==null?void 0:o.skipTime)||0)>ie()-HT,a=yb<(((i=t.face.antispoof)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&s&&a&&GT===r&&A0[n]?(yb++,A0[n]):(yb=0,new Promise(async l=>{let c=Ie.resizeBilinear(e,[(pn==null?void 0:pn.inputs[0].shape)?pn.inputs[0].shape[2]:0,(pn==null?void 0:pn.inputs[0].shape)?pn.inputs[0].shape[1]:0],!1),u=pn==null?void 0:pn.execute(c),d=(await u.data())[0];A0[n]=Math.round(100*d)/100,GT=r,HT=ie(),te([c,u]),l(A0[n])}))}var ls={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},xb={count:468,mouth:13,symmetryLine:[13,ls.midwayBetweenEyes[0]]},jp={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},bb=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],qp=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],Bl=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var Pye=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],$ye=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],Fye=[33,133,362,263,1,78,308],TAe=Pye.map(e=>qp[e]),NAe=$ye.map(e=>qp[e]),EAe=Fye.map(e=>qp[e]);var Fc=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],x0=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],wb=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],kb=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],XT=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],r=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:r,landmarks:e.landmarks,confidence:e.confidence}},Ib=(e,t,n)=>{let r=t.shape[1],s=t.shape[2],a=[e.startPoint[1]/r,e.startPoint[0]/s,e.endPoint[1]/r,e.endPoint[0]/s],o=Ie.cropAndResize(t,[a],[0],n),i=de(o,Ke.tf255);return te(o),i},b0=(e,t)=>{let n=x0(e),r=Fc(e),s=[t*r[0]/2,t*r[1]/2];return{startPoint:[n[0]-s[0],n[1]-s[1]],endPoint:[n[0]+s[0],n[1]+s[1]],landmarks:e.landmarks,confidence:e.confidence}},v0=e=>{let t=x0(e),n=Fc(e),r=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-r),Math.round(t[1]-r)],endPoint:[Math.round(t[0]+r),Math.round(t[1]+r)],landmarks:e.landmarks,confidence:e.confidence}},KT=e=>{let t=e.map(r=>r[0]),n=e.map(r=>r[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},Sb=[[1,0,0],[0,1,0],[0,0,1]],Oye=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),Mye=(e,t)=>Oye(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var ZT=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Wl=(e,t)=>{let n=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r];return n},zye=(e,t)=>{let n=[];for(let r=0;r<e.length;r++)n.push(e[r][t]);return n},YT=(e,t)=>{let n=[],r=e.length;for(let s=0;s<r;s++){n.push([]);for(let a=0;a<r;a++)n[s].push(Wl(e[s],zye(t,a)))}return n},JT=(e,t)=>{let n=Math.cos(e),r=Math.sin(e),s=[[n,-r,0],[r,n,0],[0,0,1]],a=ZT(t[0],t[1]),o=YT(a,s),i=ZT(-t[0],-t[1]);return YT(o,i)},Lye=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],r=[-Wl(t[0],n),-Wl(t[1],n)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]},Bye=(e,t)=>[Wl(e,t[0]),Wl(e,t[1])];function QT(e){let t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let r=0;r<t.strides.length;r++){let s=t.strides[r],a=Math.floor((e+s-1)/s),o=Math.floor((e+s-1)/s),i=t.anchors[r];for(let l=0;l<a;l++){let c=s*(l+.5);for(let u=0;u<o;u++){let d=s*(u+.5);for(let p=0;p<i;p++)n.push([d,c])}}}return n}function e8(e,t,n,r,s){let a=Fc(t),o=e.map(h=>[a[0]/s*(h[0]-s/2),a[1]/s*(h[1]-s/2),h[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?JT(n,[0,0]):Sb,c=i?o.map(h=>[...Bye(h,l),h[2]]):o,u=i?Lye(r):Sb,d=x0(t),p=[Wl(d,u[0]),Wl(d,u[1])];return c.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2]||0)])}function t8(e,t,n,r){let s=t.landmarks.length>=xb.count?xb.symmetryLine:jp.symmetryLine,a=0,o=Sb,i;if(e&&he.kernels.includes("rotatewithoffset"))if(a=Mye(t.landmarks[s[0]],t.landmarks[s[1]]),a&&a!==0&&Math.abs(a)>.2){let c=x0(t),u=[c[0]/n.shape[2],c[1]/n.shape[1]],d=Ie.rotateWithOffset(n,a,0,u);o=JT(-a,c),i=Ib(t,d,[r,r]),te(d)}else i=Ib(t,n,[r,r]);else i=Ib(t,n,[r,r]);return[a,o,i]}var Wye=e=>{let t=e.map(r=>r[0]),n=e.map(r=>r[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]},n8=(e,t)=>{let n=Wye(e),r=Fc(t);return{startPoint:[n[0]-r[0]/2,n[1]-r[1]/2],endPoint:[n[0]+r[0]/2,n[1]+r[1]/2]}};var r8=6,Vye=1.2,jr,s8=null,ti=0,Xp=null,w0=()=>ti;async function a8(e){var t,n;return he.initial&&(jr=null),jr?e.debug&&J("cached model:",jr.modelUrl):(jr=await je(Ve(e.modelBasePath,((t=e.face.detector)==null?void 0:t.modelPath)||"")),!jr||!jr.modelUrl?J("load model failed:",(n=e.face.detector)==null?void 0:n.modelPath):e.debug&&J("load model:",jr.modelUrl)),ti=jr.inputs[0].shape?jr.inputs[0].shape[2]:0,Xp=Te(ti,"int32"),s8=As(QT(ti)),jr}function Uye(e){let t={};t.boxStarts=Fe(e,[0,1],[-1,2]),t.centers=ue(t.boxStarts,s8),t.boxSizes=Fe(e,[0,3],[-1,2]),t.boxSizesNormalized=de(t.boxSizes,Xp),t.centersNormalized=de(t.centers,Xp),t.halfBoxSize=de(t.boxSizesNormalized,Ke.tf2),t.starts=pe(t.centersNormalized,t.halfBoxSize),t.ends=ue(t.centersNormalized,t.halfBoxSize),t.startNormalized=L(t.starts,Xp),t.endNormalized=L(t.ends,Xp);let n=Hu([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(r=>te(t[r])),n}async function o8(e,t){var i,l,c,u;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let n={};n.resized=Ie.resizeBilinear(e,[ti,ti]),n.div=de(n.resized,Ke.tf127),n.normalized=pe(n.div,Ke.tf05);let r=jr==null?void 0:jr.execute(n.normalized);if(Array.isArray(r)){let d=r.sort((p,h)=>p.size-h.size);n.concat384=St([d[0],d[2]],2),n.concat512=St([d[1],d[3]],2),n.concat=St([n.concat512,n.concat384],1),n.batch=Ye(n.concat,0)}else n.batch=Ye(r);te(r),n.boxes=Uye(n.batch),n.logits=Fe(n.batch,[0,0],[-1,1]),n.sigmoid=Pn(n.logits),n.scores=Ye(n.sigmoid),n.nms=await Ie.nonMaxSuppressionAsync(n.boxes,n.scores,((i=t.face.detector)==null?void 0:i.maxDetected)||0,((l=t.face.detector)==null?void 0:l.iouThreshold)||0,((c=t.face.detector)==null?void 0:c.minConfidence)||0);let s=await n.nms.array(),a=[],o=await n.scores.data();for(let d=0;d<s.length;d++){let p=o[s[d]];if(p>(((u=t.face.detector)==null?void 0:u.minConfidence)||0)){let h={};h.bbox=Fe(n.boxes,[s[d],0],[1,-1]),h.slice=Fe(n.batch,[s[d],r8-1],[1,-1]),h.squeeze=Ye(h.slice),h.landmarks=H(h.squeeze,[r8,-1]);let f=await h.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await h.landmarks.array(),confidence:p},g=XT(m,[(e.shape[2]||0)/ti,(e.shape[1]||0)/ti]),y=b0(g,t.face.scale||Vye),x=v0(y);a.push(x),Object.keys(h).forEach(A=>te(h[A]))}}return Object.keys(n).forEach(d=>te(n[d])),a}var k0={};id(k0,{connected:()=>Nb,kpt:()=>Tb});var Tb=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],Nb={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]};var l8=224,Gye,Hye=5,I0=[8,16,32,32,32];async function u8(){let e=[],t=0;for(;t<Hye;){let n=0,r=t;for(;r<I0.length&&I0[r]===I0[t];)n+=2,r++;let s=I0[t],a=Math.ceil(l8/s),o=Math.ceil(l8/s);for(let i=0;i<a;++i)for(let l=0;l<o;++l)for(let c=0;c<n;++c)e.push({x:(l+.5)/o,y:(i+.5)/a});t=r}Gye={x:Tt(e.map(n=>n.x)),y:Tt(e.map(n=>n.y))}}function ma(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],r=[Math.min(...n[0]),Math.min(...n[1])],s=[Math.max(...n[0]),Math.max(...n[1])],a=[r[0],r[1],s[0]-r[0],s[1]-r[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function c8(e,t=[1,1]){let n=[e.map(c=>c[0]),e.map(c=>c[1])],r=[Math.min(...n[0]),Math.min(...n[1])],s=[Math.max(...n[0]),Math.max(...n[1])],a=[(r[0]+s[0])/2,(r[1]+s[1])/2],o=Math.max(a[0]-r[0],a[1]-r[1],-a[0]+s[0],-a[1]+s[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function S0(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var d8={initial:!0},hn={detector:null,landmarks:null},Oc={detector:[224,224],landmarks:[256,256]},Eb=Number.MAX_SAFE_INTEGER,qye={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},T0=null,Kp,ni=[[0,0],[0,0],[0,0],[0,0]],p8=0,h8=e=>1-1/(1+Math.exp(e));async function f8(e){if(d8.initial&&(hn.detector=null),!hn.detector&&e.body.detector&&e.body.detector.modelPath){hn.detector=await je(Ve(e.modelBasePath,e.body.detector.modelPath||""));let t=Object.values(hn.detector.modelSignature.inputs);Oc.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Oc.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!hn.detector||!hn.detector.modelUrl?J("load model failed:",e.body.detector.modelPath):e.debug&&J("load model:",hn.detector.modelUrl)}else e.debug&&hn.detector&&J("cached model:",hn.detector.modelUrl);return await u8(),hn.detector}async function m8(e){if(d8.initial&&(hn.landmarks=null),hn.landmarks)e.debug&&J("cached model:",hn.landmarks.modelUrl);else{hn.landmarks=await je(Ve(e.modelBasePath,e.body.modelPath||""));let t=Object.values(hn.landmarks.modelSignature.inputs);Oc.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Oc.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!hn.landmarks||!hn.landmarks.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",hn.landmarks.modelUrl)}return hn.landmarks}async function Xye(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let r;if(Kp&&(n.cropped=Ie.cropAndResize(e,[Kp],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let s=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];ni=[[0,0],s,a,[0,0]],n.pad=es(n.cropped||e,ni),n.resize=Ie.resizeBilinear(n.pad,[t,t]),r=de(n.resize,Ke.tf255)}else e.shape[1]!==t?(n.resize=Ie.resizeBilinear(n.cropped||e,[t,t]),r=de(n.resize,Ke.tf255)):r=de(n.cropped||e,Ke.tf255);return Object.keys(n).forEach(s=>te(n[s])),r}function Kye(e,t){for(let n of e)n.position=[Math.trunc(n.position[0]*(t[0]+ni[2][0]+ni[2][1])/t[0]-ni[2][0]),Math.trunc(n.position[1]*(t[1]+ni[1][0]+ni[1][1])/t[1]-ni[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];if(Kp)for(let n of e)n.positionRaw=[n.positionRaw[0]+Kp[1],n.positionRaw[1]+Kp[0],n.positionRaw[2]],n.position=[Math.trunc(n.positionRaw[0]*t[0]),Math.trunc(n.positionRaw[1]*t[1]),n.positionRaw[2]];return e}async function Zye(e){let t=e.find(i=>i.part==="leftPalm"),n=e.find(i=>i.part==="leftWrist"),r=e.find(i=>i.part==="leftIndex");t.position[2]=((n.position[2]||0)+(r.position[2]||0))/2;let s=e.find(i=>i.part==="rightPalm"),a=e.find(i=>i.part==="rightWrist"),o=e.find(i=>i.part==="rightIndex");s.position[2]=((a.position[2]||0)+(o.position[2]||0))/2}async function Yye(e,t,n){var f;let r={};[r.ld,r.segmentation,r.heatmap,r.world,r.poseflag]=(f=hn.landmarks)==null?void 0:f.execute(e,qye.landmarks);let s=(await r.poseflag.data())[0],a=await r.ld.data(),o=await r.world.data();Object.keys(r).forEach(m=>te(r[m]));let i=[],l=5;for(let m=0;m<a.length/l;m++){let g=h8(a[l*m+3]),y=h8(a[l*m+4]),x=Math.trunc(100*g*y*s)/100,A=[a[l*m+0]/Oc.landmarks[0],a[l*m+1]/Oc.landmarks[1],a[l*m+2]+0],b=[Math.trunc(n[0]*A[0]),Math.trunc(n[1]*A[1]),A[2]],v=[o[l*m+0],o[l*m+1],o[l*m+2]+0];i.push({part:Tb[m],positionRaw:A,position:b,distance:v,score:x})}if(s<(t.body.minConfidence||0))return null;Zye(i);let c=Kye(i,n),u=c.map(m=>m.position),d=ma(u,[n[0],n[1]]),p={};for(let[m,g]of Object.entries(Nb)){let y=[];for(let x=0;x<g.length-1;x++){let A=c.find(v=>v.part===g[x]),b=c.find(v=>v.part===g[x+1]);A&&b&&y.push([A.position,b.position])}p[m]=y}return{id:0,score:Math.trunc(100*s)/100,box:d.box,boxRaw:d.boxRaw,keypoints:c,annotations:p}}async function Rb(e,t){let n=[e.shape[2]||0,e.shape[1]||0],r=(t.body.skipTime||0)>ie()-p8,s=Eb<(t.body.skipFrames||0);if(t.skipAllowed&&r&&s&&T0!==null)Eb++;else{let a={};a.landmarks=await Xye(e,256),T0=await Yye(a.landmarks,t,n),Object.keys(a).forEach(o=>te(a[o])),p8=ie(),Eb=0}return T0?[T0]:[]}var Mc=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var us,Vl=0,_b=[],y8=0,Db=Number.MAX_SAFE_INTEGER;async function A8(e){if(he.initial&&(us=null),us)e.debug&&J("cached model:",us.modelUrl);else{us=await je(Ve(e.modelBasePath,e.object.modelPath||""));let t=Object.values(us.modelSignature.inputs);Vl=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!us||!us.modelUrl?J("load model failed:",e.object.modelPath):e.debug&&J("load model:",us.modelUrl)}return us}async function Jye(e,t,n){if(!e)return[];let r={},s=[],a=await e.array();r.squeeze=Ye(e);let o=Jt(r.squeeze,6,1);r.stack=on([o[1],o[0],o[3],o[2]],1),r.boxes=Ye(r.stack),r.scores=Ye(o[4]),r.classes=Ye(o[5]),te([e,...o]),r.nms=await Ie.nonMaxSuppressionAsync(r.boxes,r.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);let i=await r.nms.data(),l=0;for(let c of Array.from(i)){let u=Math.trunc(100*a[0][c][4])/100,d=a[0][c][5],p=Mc[d].label,[h,f]=[a[0][c][0]/Vl,a[0][c][1]/Vl],m=[h,f,a[0][c][2]/Vl-h,a[0][c][3]/Vl-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];s.push({id:l++,score:u,class:d,label:p,box:g,boxRaw:m})}return Object.keys(r).forEach(c=>te(r[c])),s}async function Pb(e,t){let n=(t.object.skipTime||0)>ie()-y8,r=Db<(t.object.skipFrames||0);return t.skipAllowed&&n&&r&&_b.length>0?(Db++,_b):(Db=0,new Promise(async s=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Ie.resizeBilinear(e,[Vl,Vl]),i=t.object.enabled?us==null?void 0:us.execute(o,["tower_0/detections"]):null;y8=ie(),te(o);let l=await Jye(i,a,t);_b=l,s(l)}))}var N0={};id(N0,{connected:()=>Fb,kpt:()=>$b});var $b=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],Fb={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var fn,b8=0,Jn={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},Ob=Number.MAX_SAFE_INTEGER;async function v8(e){return he.initial&&(fn=null),fn?e.debug&&J("cached model:",fn.modelUrl):(fn=await je(Ve(e.modelBasePath,e.body.modelPath||"")),!fn||!fn.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",fn.modelUrl)),fn}async function Qye(e,t){let[n,r]=e.shape,s=H(e,[r*n]),a=bn(s,0),o=(await a.data())[0];if(te([s,a]),o>t){let i=Mr(s,0),l=Ku(i,n),c=(await l.data())[0],u=de(i,Te(n,"int32")),d=(await u.data())[0];return te([l,u]),[c,d,o]}return[0,0,o]}async function Mb(e,t){let n=(t.body.skipTime||0)>ie()-b8,r=Ob<(t.body.skipFrames||0);return t.skipAllowed&&n&&r&&Object.keys(Jn.keypoints).length>0?(Ob++,[Jn]):(Ob=0,new Promise(async s=>{var d;let a=X(()=>{if(!(fn==null?void 0:fn.inputs[0].shape))return null;let p=Ie.resizeBilinear(e,[fn.inputs[0].shape[2],fn.inputs[0].shape[1]],!1),h=L(p,Ke.tf2);return pe(h,Ke.tf1)}),o;if(t.body.enabled&&(o=fn==null?void 0:fn.execute(a)),b8=ie(),te(a),o){Jn.keypoints.length=0;let p=o.squeeze();te(o);let h=p.unstack(2);te(p);for(let f=0;f<h.length;f++){let[m,g,y]=await Qye(h[f],t.body.minConfidence);y>(((d=t.body)==null?void 0:d.minConfidence)||0)&&Jn.keypoints.push({score:Math.round(100*y)/100,part:$b[f],positionRaw:[m/fn.inputs[0].shape[2],g/fn.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/fn.inputs[0].shape[2]),Math.round(e.shape[1]*g/fn.inputs[0].shape[1])]})}h.forEach(f=>te(f))}Jn.score=Jn.keypoints.reduce((p,h)=>h.score>p?h.score:p,0);let i=Jn.keypoints.map(p=>p.position[0]),l=Jn.keypoints.map(p=>p.position[1]);Jn.box=[Math.min(...i),Math.min(...l),Math.max(...i)-Math.min(...i),Math.max(...l)-Math.min(...l)];let c=Jn.keypoints.map(p=>p.positionRaw[0]),u=Jn.keypoints.map(p=>p.positionRaw[1]);Jn.boxRaw=[Math.min(...c),Math.min(...u),Math.max(...c)-Math.min(...c),Math.max(...u)-Math.min(...u)];for(let[p,h]of Object.entries(Fb)){let f=[];for(let m=0;m<h.length-1;m++){let g=Jn.keypoints.find(x=>x.part===h[m]),y=Jn.keypoints.find(x=>x.part===h[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}Jn.annotations[p]=f}s([Jn])}))}var e1e=["angry","disgust","fear","happy","sad","surprise","neutral"],Qn,E0=[],k8=0,I8=0,zb=Number.MAX_SAFE_INTEGER;async function S8(e){var t,n;return he.initial&&(Qn=null),Qn?e.debug&&J("cached model:",Qn.modelUrl):(Qn=await je(Ve(e.modelBasePath,((t=e.face.emotion)==null?void 0:t.modelPath)||"")),!Qn||!Qn.modelUrl?J("load model failed:",(n=e.face.emotion)==null?void 0:n.modelPath):e.debug&&J("load model:",Qn.modelUrl)),Qn}async function Lb(e,t,n,r){var o,i;if(!Qn)return[];let s=zb<(((o=t.face.emotion)==null?void 0:o.skipFrames)||0),a=(((i=t.face.emotion)==null?void 0:i.skipTime)||0)>ie()-I8;return t.skipAllowed&&a&&s&&k8===r&&E0[n]&&E0[n].length>0?(zb++,E0[n]):(zb=0,new Promise(async l=>{var u,d;let c=[];if((u=t.face.emotion)==null?void 0:u.enabled){let p={},h=(Qn==null?void 0:Qn.inputs[0].shape)?Qn.inputs[0].shape[2]:0;p.resize=Ie.resizeBilinear(e,[h,h],!1),p.channels=L(p.resize,Ke.rgb),p.grayscale=we(p.channels,3,!0),p.grayscaleSub=pe(p.grayscale,Ke.tf05),p.grayscaleMul=L(p.grayscaleSub,Ke.tf2),p.emotion=Qn==null?void 0:Qn.execute(p.grayscaleMul),I8=ie();let f=await p.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((d=t.face.emotion)==null?void 0:d.minConfidence)||0)&&c.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:e1e[m]});c.sort((m,g)=>g.score-m.score),Object.keys(p).forEach(m=>te(p[m]))}E0[n]=c,k8=r,l(c)}))}var Tr,Bb=[],T8=0,N8=0,E8=Number.MAX_SAFE_INTEGER;async function R8(e){let t=Ve(e.modelBasePath,e.face.mobilefacenet.modelPath);return he.initial&&(Tr=null),Tr?e.debug&&J("cached model:",t):(Tr=await je(t),Tr?e.debug&&J("load model:",t):J("load model failed:",e.face.mobilefacenet.modelPath)),Tr}async function Wb(e,t,n,r){var o,i;if(!Tr)return[];let s=E8<(((o=t.face.embedding)==null?void 0:o.skipFrames)||0),a=(((i=t.face.embedding)==null?void 0:i.skipTime)||0)>ie()-N8;return t.skipAllowed&&a&&s&&T8===r&&Bb[n]?(E8++,Bb[n]):new Promise(async l=>{var u;let c=[];if(((u=t.face.embedding)==null?void 0:u.enabled)&&(Tr==null?void 0:Tr.inputs[0].shape)){let d={};d.crop=Ie.resizeBilinear(e,[Tr.inputs[0].shape[2],Tr.inputs[0].shape[1]],!1),d.data=Tr==null?void 0:Tr.execute(d.crop);let p=await d.data.data();c=Array.from(p)}Bb[n]=c,T8=r,N8=ie(),l(c)})}var cs,ri=0,t1e=2.3,Vb=ls.leftEyeLower0,Ub=ls.rightEyeLower0,zc={leftBounds:[Vb[0],Vb[Vb.length-1]],rightBounds:[Ub[0],Ub[Ub.length-1]]},Lc={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function D8(e){var t,n;return he.initial&&(cs=null),cs?e.debug&&J("cached model:",cs.modelUrl):(cs=await je(Ve(e.modelBasePath,((t=e.face.iris)==null?void 0:t.modelPath)||"")),!cs||!cs.modelUrl?J("load model failed:",(n=e.face.iris)==null?void 0:n.modelPath):e.debug&&J("load model:",cs.modelUrl)),ri=cs.inputs[0].shape?cs.inputs[0].shape[2]:0,ri===-1&&(ri=64),cs}function R0(e,t,n,r){for(let s=0;s<bb.length;s++){let{key:a,indices:o}=bb[s],i=ls[`${n}${a}`];if(!r||r.includes(a))for(let l=0;l<o.length;l++){let c=o[l];e[i[l]]=[t[c][0],t[c][1],(t[c][2]+e[i[l]][2])/2]}}}var n1e=e=>{let t=e[zc.leftBounds[0]][2],n=e[zc.rightBounds[0]][2];return t-n},P8=(e,t,n,r,s,a=!1)=>{let o=v0(b0(KT([e[n],e[r]]),t1e)),i=Fc(o),l=Ie.cropAndResize(t,[[o.startPoint[1]/s,o.startPoint[0]/s,o.endPoint[1]/s,o.endPoint[0]/s]],[0],[ri,ri]);if(a&&he.kernels.includes("flipleftright")){let c=Ie.flipLeftRight(l);te(l),l=c}return{box:o,boxSize:i,crop:l}},$8=(e,t,n,r=!1)=>{let s=[];for(let a=0;a<Lc.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];s.push([(r?1-o/ri:o/ri)*n[0]+t.startPoint[0],i/ri*n[1]+t.startPoint[1],l])}return{rawCoords:s,iris:s.slice(Lc.index)}},F8=(e,t,n)=>{let r=e[ls[`${n}EyeUpper0`][Lc.upperCenter]][2],s=e[ls[`${n}EyeLower0`][Lc.lowerCenter]][2],a=(r+s)/2;return t.map((o,i)=>{let l=a;return i===2?l=r:i===4&&(l=s),[o[0],o[1],l]})};async function O8(e,t,n,r){if(!cs)return n.debug&&J("face mesh iris detection requested, but model is not loaded"),e;let{box:s,boxSize:a,crop:o}=P8(e,t,zc.leftBounds[0],zc.leftBounds[1],r,!0),{box:i,boxSize:l,crop:c}=P8(e,t,zc.rightBounds[0],zc.rightBounds[1],r,!0),u=St([o,c]);te(o),te(c);let d=cs.execute(u);te(u);let p=await d.data();te(d);let h=p.slice(0,Lc.numCoordinates*3),{rawCoords:f,iris:m}=$8(h,s,a,!0),g=p.slice(Lc.numCoordinates*3),{rawCoords:y,iris:x}=$8(g,i,l),A=n1e(e);Math.abs(A)<30?(R0(e,f,"left",null),R0(e,y,"right",null)):A<1?R0(e,f,"left",["EyeUpper0","EyeLower0"]):R0(e,y,"right",["EyeUpper0","EyeLower0"]);let b=F8(e,m,"left"),v=F8(e,x,"right");return e.concat(b).concat(v)}var Hs={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},ds=null,Bc=0;async function z8(e,t){var i,l,c,u,d,p,h,f,m;let n=(((i=t.face.detector)==null?void 0:i.skipTime)||0)>ie()-Hs.timestamp,r=Hs.skipped<(((l=t.face.detector)==null?void 0:l.skipFrames)||0);!t.skipAllowed||!n||!r||Hs.boxes.length===0?(Hs.boxes=await o8(e,t),Hs.timestamp=ie(),Hs.skipped=0):Hs.skipped++;let s=[],a=[],o=0;for(let g=0;g<Hs.boxes.length;g++){let y=Hs.boxes[g],x=0,A,b={id:o++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([x,A,b.tensor]=t8((c=t.face.detector)==null?void 0:c.rotation,y,e,((u=t.face.mesh)==null?void 0:u.enabled)?Bc:w0()),(d=t==null?void 0:t.filter)==null?void 0:d.equalization){let v=await f0(b.tensor);te(b.tensor),b.tensor=v}if(b.boxScore=Math.round(100*y.confidence)/100,(p=t.face.mesh)==null?void 0:p.enabled)if(!ds)t.debug&&J("face mesh detection requested, but model is not loaded");else{let[v,C,I]=ds.execute(b.tensor),E=await C.data();b.faceScore=Math.round(100*E[0])/100;let R=H(I,[-1,3]),F=await R.array();if(te([I,R,C,v]),b.faceScore<(((h=t.face.detector)==null?void 0:h.minConfidence)||1))y.confidence=b.faceScore;else{((f=t.face.iris)==null?void 0:f.enabled)&&(F=await O8(F,b.tensor,t,Bc)),b.mesh=e8(F,y,x,A,Bc),b.meshRaw=b.mesh.map(P=>[P[0]/(e.shape[2]||0),P[1]/(e.shape[1]||0),(P[2]||0)/Bc]);for(let P of Object.keys(ls))b.annotations[P]=ls[P].map(T=>b.mesh[T]);b.score=b.faceScore;let _={...n8(b.mesh,y),confidence:y.confidence,landmarks:y.landmarks};b.box=wb(_,e),b.boxRaw=kb(_,e),a.push(_)}}else{b.box=wb(y,e),b.boxRaw=kb(y,e),b.score=b.boxScore,b.mesh=y.landmarks.map(v=>[(y.startPoint[0]+y.endPoint[0])/2+(y.endPoint[0]+y.startPoint[0])*v[0]/w0(),(y.startPoint[1]+y.endPoint[1])/2+(y.endPoint[1]+y.startPoint[1])*v[1]/w0()]),b.meshRaw=b.mesh.map(v=>[v[0]/(e.shape[2]||0),v[1]/(e.shape[1]||0),(v[2]||0)/Bc]);for(let v of Object.keys(jp))b.annotations[v]=[b.mesh[jp[v]]]}b.score>(((m=t.face.detector)==null?void 0:m.minConfidence)||1)?s.push(b):te(b.tensor)}return Hs.boxes=a,s}async function L8(e){var t,n;return he.initial&&(ds=null),ds?e.debug&&J("cached model:",ds.modelUrl):(ds=await je(Ve(e.modelBasePath,((t=e.face.mesh)==null?void 0:t.modelPath)||"")),!ds||!ds.modelUrl?J("load model failed:",(n=e.face.mesh)==null?void 0:n.modelPath):e.debug&&J("load model:",ds.modelUrl)),Bc=ds.inputs[0].shape?ds.inputs[0].shape[2]:0,ds}var B8=Bl,W8=qp;var Nr,_0=[],V8=0,U8=0,Hb=Number.MAX_SAFE_INTEGER;async function G8(e){var n,r;let t=Ve(e.modelBasePath,((n=e.face.description)==null?void 0:n.modelPath)||"");return he.initial&&(Nr=null),Nr?e.debug&&J("cached model:",t):(Nr=await je(t),Nr?e.debug&&J("load model:",t):J("load model failed:",((r=e.face.description)==null?void 0:r.modelPath)||"")),Nr}function jb(e){let t=e.image||e.tensor||e;if(!(Nr==null?void 0:Nr.inputs[0].shape))return t;let n=Ie.resizeBilinear(t,[Nr.inputs[0].shape[2],Nr.inputs[0].shape[1]],!1),r=L(n,Ke.tf255);return te(n),r}async function qb(e,t,n,r){var o,i,l,c;if(!Nr)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let s=Hb<(((o=t.face.description)==null?void 0:o.skipFrames)||0),a=(((i=t.face.description)==null?void 0:i.skipTime)||0)>ie()-V8;return t.skipAllowed&&s&&a&&U8===r&&((l=_0[n])==null?void 0:l.age)&&((c=_0[n])==null?void 0:c.age)>0?(Hb++,_0[n]):(Hb=0,new Promise(async u=>{var p,h;let d={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((p=t.face.description)==null?void 0:p.enabled){let f=jb(e),m=Nr==null?void 0:Nr.execute(f);V8=ie(),te(f);let y=await(await m.find(R=>R.shape[1]===1)).data(),x=Math.trunc(200*Math.abs(y[0]-.5))/100;x>(((h=t.face.description)==null?void 0:h.minConfidence)||0)&&(d.gender=y[0]<=.5?"female":"male",d.genderScore=Math.min(.99,x));let A=Mr(m.find(R=>R.shape[1]===100),1),b=(await A.data())[0];te(A);let C=await m.find(R=>R.shape[1]===100).data();d.age=Math.round(C[b-1]>C[b+1]?10*b-100*C[b-1]:10*b+100*C[b+1])/10;let I=m.find(R=>R.shape[1]===1024),E=I?await I.data():[];d.descriptor=Array.from(E),m.forEach(R=>te(R))}_0[n]=d,U8=r,u(d)}))}function D0(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Zp(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function H8(e,t,n){let r=t.shape[1],s=t.shape[2],a=[[e.startPoint[1]/r,e.startPoint[0]/s,e.endPoint[1]/r,e.endPoint[0]/s]];return Ie.cropAndResize(t,a,[0],n)}function j8(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],r=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],s=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:r,palmLandmarks:s,confidence:e.confidence}}function P0(e,t=1.5){let n=Zp(e),r=D0(e),s=[t*r[0]/2,t*r[1]/2],a=[n[0]-s[0],n[1]-s[1]],o=[n[0]+s[0],n[1]+s[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function $0(e){let t=Zp(e),n=D0(e),s=Math.max(...n)/2,a=[t[0]-s,t[1]-s],o=[t[0]+s,t[1]+s];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function r1e(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function q8(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return r1e(n)}var X8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function si(e,t){let n=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r];return n}function s1e(e,t){let n=[];for(let r=0;r<e.length;r++)n.push(e[r][t]);return n}function K8(e,t){let n=[],r=e.length;for(let s=0;s<r;s++){n.push([]);for(let a=0;a<r;a++)n[s].push(si(e[s],s1e(t,a)))}return n}function Kb(e,t){let n=Math.cos(e),r=Math.sin(e),s=[[n,-r,0],[r,n,0],[0,0,1]],a=X8(t[0],t[1]),o=K8(a,s),i=X8(-t[0],-t[1]);return K8(o,i)}function Z8(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],r=[-si(t[0],n),-si(t[1],n)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]}function Zb(e,t){return[si(e,t[0]),si(e,t[1])]}var J8=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var Yb=class{constructor(t){fe(this,"model");fe(this,"anchors");fe(this,"anchorsTensor");fe(this,"inputSize");fe(this,"inputSizeTensor");fe(this,"doubleInputSizeTensor");this.model=t,this.anchors=J8.map(n=>[n.x,n.y]),this.anchorsTensor=As(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Tt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Tt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){let n={};n.boxOffsets=Fe(t,[0,0],[-1,2]),n.boxSizes=Fe(t,[0,2],[-1,2]),n.div=de(n.boxOffsets,this.inputSizeTensor),n.boxCenterPoints=ue(n.div,this.anchorsTensor),n.halfBoxSizes=de(n.boxSizes,this.doubleInputSizeTensor),n.sub=pe(n.boxCenterPoints,n.halfBoxSizes),n.startPoints=L(n.sub,this.inputSizeTensor),n.add=ue(n.boxCenterPoints,n.halfBoxSizes),n.endPoints=L(n.add,this.inputSizeTensor);let r=Hu([n.startPoints,n.endPoints],1);return Object.keys(n).forEach(s=>te(n[s])),r}normalizeLandmarks(t,n){let r={};r.reshape=H(t,[-1,7,2]),r.div=de(r.reshape,this.inputSizeTensor),r.landmarks=ue(r.div,this.anchors[n]);let s=L(r.landmarks,this.inputSizeTensor);return Object.keys(r).forEach(a=>te(r[a])),s}async predict(t,n){let r={};r.resize=Ie.resizeBilinear(t,[this.inputSize,this.inputSize]),r.div=de(r.resize,Ke.tf127),r.image=pe(r.div,Ke.tf1),r.batched=this.model.execute(r.image),r.predictions=Ye(r.batched),r.slice=Fe(r.predictions,[0,0],[-1,1]),r.sigmoid=Pn(r.slice),r.scores=Ye(r.sigmoid);let s=await r.scores.data();r.boxes=Fe(r.predictions,[0,1],[-1,4]),r.norm=this.normalizeBoxes(r.boxes),r.nms=await Ie.nonMaxSuppressionAsync(r.norm,r.scores,3*n.hand.maxDetected,n.hand.iouThreshold,n.hand.minConfidence);let a=await r.nms.array(),o=[];for(let i of a){let l={};l.box=Fe(r.norm,[i,0],[1,-1]),l.slice=Fe(r.predictions,[i,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,i),l.palmLandmarks=H(l.norm,[-1,2]);let c=await l.box.data(),u=c.slice(0,2),d=c.slice(2,4),p=await l.palmLandmarks.array(),h={startPoint:u,endPoint:d,palmLandmarks:p,confidence:s[i]},f=j8(h,[t.shape[2]/this.inputSize,t.shape[1]/this.inputSize]);o.push(f),Object.keys(l).forEach(m=>te(l[m]))}return Object.keys(r).forEach(i=>te(r[i])),o}};var i1e=5,Q8=1.65,eN=[0,5,9,13,17,1,2],l1e=0,u1e=2,tN=0,Jb=class{constructor(t,n){fe(this,"handDetector");fe(this,"handPoseModel");fe(this,"inputSize");fe(this,"storedBoxes");fe(this,"skipped");fe(this,"detectedHands");this.handDetector=t,this.handPoseModel=n,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(t){let n=t.map(o=>o[0]),r=t.map(o=>o[1]),s=[Math.min(...n),Math.min(...r)],a=[Math.max(...n),Math.max(...r)];return{startPoint:s,endPoint:a}}getBoxForPalmLandmarks(t,n){let r=t.map(a=>Zb([...a,1],n)),s=this.calculateLandmarksBoundingBox(r);return P0($0(s),i1e)}getBoxForHandLandmarks(t){let n=this.calculateLandmarksBoundingBox(t),r=P0($0(n),Q8);r.palmLandmarks=[];for(let s=0;s<eN.length;s++)r.palmLandmarks.push(t[eN[s]].slice(0,2));return r}transformRawCoords(t,n,r,s){let a=D0(n),o=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=t.map(h=>[o[0]*(h[0]-this.inputSize/2),o[1]*(h[1]-this.inputSize/2),o[2]*h[2]]),l=Kb(r,[0,0]),c=i.map(h=>[...Zb(h,l),h[2]]),u=Z8(s),d=[...Zp(n),1],p=[si(d,u[0]),si(d,u[1])];return c.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2])])}async estimateHands(t,n){let r=!1,s,a=(n.hand.skipTime||0)>ie()-tN,o=this.skipped<(n.hand.skipFrames||0);n.skipAllowed&&a&&o&&(s=await this.handDetector.predict(t,n),this.skipped=0),n.skipAllowed&&this.skipped++,s&&s.length>0&&(s.length!==this.detectedHands&&this.detectedHands!==n.hand.maxDetected||!n.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...s],this.storedBoxes.length>0&&(r=!0));let i=[];for(let l=0;l<this.storedBoxes.length;l++){let c=this.storedBoxes[l];if(!!c)if(n.hand.landmarks){let u=n.hand.rotation?q8(c.palmLandmarks[l1e],c.palmLandmarks[u1e]):0,d=Zp(c),p=[d[0]/t.shape[2],d[1]/t.shape[1]],h=n.hand.rotation&&he.kernels.includes("rotatewithoffset")?Ie.rotateWithOffset(t,u,0,p):t.clone(),f=Kb(-u,d),m=r?this.getBoxForPalmLandmarks(c.palmLandmarks,f):c,g=H8(m,h,[this.inputSize,this.inputSize]),y=de(g,Ke.tf255);te(g),te(h);let[x,A]=this.handPoseModel.execute(y);tN=ie(),te(y);let b=(await x.data())[0];if(te(x),b>=n.hand.minConfidence/4){let v=H(A,[-1,3]),C=await v.array();te(A),te(v);let I=this.transformRawCoords(C,m,u,f),E=this.getBoxForHandLandmarks(I);this.storedBoxes[l]={...E,confidence:b};let R={landmarks:I,confidence:b,boxConfidence:c.confidence,fingerConfidence:b,box:{topLeft:E.startPoint,bottomRight:E.endPoint}};i.push(R)}else this.storedBoxes[l]=null;te(A)}else{let u=P0($0(c),Q8),d={confidence:c.confidence,boxConfidence:c.confidence,fingerConfidence:0,box:{topLeft:u.startPoint,bottomRight:u.endPoint},landmarks:[]};i.push(d)}}return this.storedBoxes=this.storedBoxes.filter(l=>l!==null),this.detectedHands=i.length,i.length>n.hand.maxDetected&&(i.length=n.hand.maxDetected),i}};var er={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>er.nameMapping[e],getPoints:e=>er.pointsMapping[e]},ai={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>ai.nameMapping[e]},Wt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Wt.nameMapping[e]},Ul=class{constructor(t){fe(this,"name");fe(this,"curls");fe(this,"directions");fe(this,"weights");fe(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(t,n,r){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([n,r])}direction(t,n,r){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([n,r])}weight(t,n){this.weights[t]=n;let r=this.weights.reduce((s,a)=>s+a,0);this.weightsRelative=this.weights.map(s=>s*5/r)}matchAgainst(t,n){let r=0;for(let s in t){let a=t[s],o=this.curls[s];if(typeof o=="undefined"){r+=this.weightsRelative[s];continue}for(let[i,l]of o)if(a===i){r+=l*this.weightsRelative[s];break}}for(let s in n){let a=n[s],o=this.directions[s];if(typeof o=="undefined"){r+=this.weightsRelative[s];continue}for(let[i,l]of o)if(a===i){r+=l*this.weightsRelative[s];break}}return r/10}};var{thumb:Es,index:ga,middle:ya,ring:Gl,pinky:Hl}=er,{none:Rs,half:d1e,full:_s}=ai,{verticalUp:Wc,verticalDown:Axe,horizontalLeft:Qb,horizontalRight:p1e,diagonalUpRight:h1e,diagonalUpLeft:Vc,diagonalDownRight:xxe,diagonalDownLeft:bxe}=Wt,oi=new Ul("thumbs up");oi.curl(Es,Rs,1);oi.direction(Es,Wc,1);oi.direction(Es,Vc,.25);oi.direction(Es,h1e,.25);for(let e of[er.index,er.middle,er.ring,er.pinky])oi.curl(e,_s,1),oi.direction(e,Qb,1),oi.direction(e,p1e,1);var tn=new Ul("victory");tn.curl(Es,d1e,.5);tn.curl(Es,Rs,.5);tn.direction(Es,Wc,1);tn.direction(Es,Vc,1);tn.curl(ga,Rs,1);tn.direction(ga,Wc,.75);tn.direction(ga,Vc,1);tn.curl(ya,Rs,1);tn.direction(ya,Wc,1);tn.direction(ya,Vc,.75);tn.curl(Gl,_s,1);tn.direction(Gl,Wc,.2);tn.direction(Gl,Vc,1);tn.direction(Gl,Qb,.2);tn.curl(Hl,_s,1);tn.direction(Hl,Wc,.2);tn.direction(Hl,Vc,1);tn.direction(Hl,Qb,.2);tn.weight(ga,2);tn.weight(ya,2);var ii=new Ul("point");ii.curl(Es,_s,1);ii.curl(ga,Rs,.5);ii.curl(ya,_s,.5);ii.curl(Gl,_s,.5);ii.curl(Hl,_s,.5);ii.weight(ga,2);ii.weight(ya,2);var li=new Ul("middle finger");li.curl(Es,Rs,1);li.curl(ga,_s,.5);li.curl(ya,_s,.5);li.curl(Gl,_s,.5);li.curl(Hl,_s,.5);li.weight(ga,2);li.weight(ya,2);var Uc=new Ul("open palm");Uc.curl(Es,Rs,.75);Uc.curl(ga,Rs,.75);Uc.curl(ya,Rs,.75);Uc.curl(Gl,Rs,.75);Uc.curl(Hl,Rs,.75);var nN=[oi,tn,ii,li,Uc];var f1e=.7,jl={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function rN(e,t,n,r){let s=(t-r)/(e-n),a=Math.atan(s)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function sN(e,t){if(!e||!t)return[0,0];let n=rN(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let r=rN(e[1],e[2],t[1],t[2]);return[n,r]}function aN(e,t=1){let n=0,r=0,s=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?r=1*t:s=1*t,[n,r,s]}function m1e(e,t,n){let r=e[0]-t[0],s=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],c=e[2]-t[2],u=e[2]-n[2],d=t[2]-n[2],p=Math.sqrt(r*r+o*o+c*c),h=Math.sqrt(s*s+i*i+u*u),f=Math.sqrt(a*a+l*l+d*d),m=(f*f+p*p-h*h)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>jl.NO_CURL_START_LIMIT?y=ai.none:g>jl.HALF_CURL_START_LIMIT?y=ai.half:y=ai.full,y}function oN(e,t,n,r){let s;return r===Math.abs(e)?e>0?s=Wt.horizontalLeft:s=Wt.horizontalRight:r===Math.abs(t)?t>0?s=Wt.horizontalLeft:s=Wt.horizontalRight:n>0?s=Wt.horizontalLeft:s=Wt.horizontalRight,s}function iN(e,t,n,r){let s;return r===Math.abs(e)?e<0?s=Wt.verticalDown:s=Wt.verticalUp:r===Math.abs(t)?t<0?s=Wt.verticalDown:s=Wt.verticalUp:n<0?s=Wt.verticalDown:s=Wt.verticalUp,s}function g1e(e,t,n,r,s,a,o,i){let l,c=iN(e,t,n,r),u=oN(s,a,o,i);return c===Wt.verticalUp?u===Wt.horizontalLeft?l=Wt.diagonalUpLeft:l=Wt.diagonalUpRight:u===Wt.horizontalLeft?l=Wt.diagonalDownLeft:l=Wt.diagonalDownRight,l}function y1e(e,t,n,r){let s=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],c=t[1]-n[1],u=Math.max(Math.abs(s),Math.abs(a),Math.abs(o)),d=Math.max(Math.abs(i),Math.abs(l),Math.abs(c)),p=0,h=0,f=0,m=d/(u+1e-5);m>1.5?p+=jl.DISTANCE_VOTE_POWER:m>.66?h+=jl.DISTANCE_VOTE_POWER:f+=jl.DISTANCE_VOTE_POWER;let g=Math.sqrt(s*s+i*i),y=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+c*c),A=Math.max(g,y,x),b=e[0],v=e[1],C=n[0],I=n[1];A===g?(C=n[0],I=n[1]):A===x&&(b=t[0],v=t[1]);let F=sN([b,v],[C,I]),_=aN(F,jl.TOTAL_ANGLE_VOTE_POWER);p+=_[0],h+=_[1],f+=_[2];for(let T of r){let O=aN(T,jl.SINGLE_ANGLE_VOTE_POWER);p+=O[0],h+=O[1],f+=O[2]}let P;return p===Math.max(p,h,f)?P=iN(l,i,c,d):f===Math.max(h,f)?P=oN(a,s,o,u):P=g1e(l,i,c,d,a,s,o,u),P}function lN(e){let t=[],n=[],r=[],s=[];if(!e)return{curls:r,directions:s};for(let a of er.all){let o=er.getPoints(a),i=[],l=[];for(let c of o){let u=e[c[0]],d=e[c[1]],p=sN(u,d),h=p[0],f=p[1];i.push(h),l.push(f)}t.push(i),n.push(l)}for(let a of er.all){let o=a===er.thumb?1:0,i=er.getPoints(a),l=e[i[o][0]],c=e[i[o+1][1]],u=e[i[3][1]],d=m1e(l,c,u),p=y1e(l,c,u,t[a].slice(o));r[a]=d,s[a]=p}return{curls:r,directions:s}}function F0(e){if(!e||e.length===0)return null;let t=lN(e),n={};for(let r of er.all)n[er.getName(r)]={curl:ai.getName(t.curls[r]),direction:Wt.getName(t.directions[r])};return n}function uN(e){let t=[];if(!e||e.length===0)return t;let n=lN(e);for(let r of nN){let s=r.matchAgainst(n.curls,n.directions);s>=f1e&&t.push({name:r.name,confidence:s})}return t}var cN={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},Aa,xa,dN;async function t5(e,t){let n=await dN.estimateHands(e,t);if(!n)return[];let r=[];for(let s=0;s<n.length;s++){let a={};if(n[s].landmarks)for(let u of Object.keys(cN))a[u]=cN[u].map(d=>n[s].landmarks[d]);let o=n[s].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let u of o)u[0]<i[0]&&(i[0]=u[0]),u[1]<i[1]&&(i[1]=u[1]),u[0]>i[2]&&(i[2]=u[0]),u[1]>i[3]&&(i[3]=u[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[s].box?[Math.trunc(Math.max(0,n[s].box.topLeft[0])),Math.trunc(Math.max(0,n[s].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[s].box.bottomRight[0])-Math.max(0,n[s].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[s].box.bottomRight[1])-Math.max(0,n[s].box.topLeft[1]))]:[0,0,0,0],l=[n[s].box.topLeft[0]/(e.shape[2]||0),n[s].box.topLeft[1]/(e.shape[1]||0),(n[s].box.bottomRight[0]-n[s].box.topLeft[0])/(e.shape[2]||0),(n[s].box.bottomRight[1]-n[s].box.topLeft[1])/(e.shape[1]||0)];let c=F0(o);r.push({id:s,score:Math.round(100*n[s].confidence)/100,boxScore:Math.round(100*n[s].boxConfidence)/100,fingerScore:Math.round(100*n[s].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:c})}return r}async function n5(e){var n,r,s,a;he.initial&&(Aa=null,xa=null),!Aa||!xa?([Aa,xa]=await Promise.all([e.hand.enabled?je(Ve(e.modelBasePath,((n=e.hand.detector)==null?void 0:n.modelPath)||"")):null,e.hand.landmarks?je(Ve(e.modelBasePath,((r=e.hand.skeleton)==null?void 0:r.modelPath)||"")):null]),e.hand.enabled&&(!Aa||!Aa.modelUrl?J("load model failed:",((s=e.hand.detector)==null?void 0:s.modelPath)||""):e.debug&&J("load model:",Aa.modelUrl),!xa||!xa.modelUrl?J("load model failed:",((a=e.hand.skeleton)==null?void 0:a.modelPath)||""):e.debug&&J("load model:",xa.modelUrl))):(e.debug&&J("cached model:",Aa.modelUrl),e.debug&&J("cached model:",xa.modelUrl));let t=new Yb(Aa);return dN=new Jb(t,xa),[Aa,xa]}var Rt=[null,null],A1e=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ui=[[0,0],[0,0]],x1e=["hand","fist","pinch","point","face","tip","pinchtip"],hN=4,fN=1.6,b1e=512,v1e=1.4,O0=Number.MAX_SAFE_INTEGER,r5=0,ba=[0,0],Kt={boxes:[],hands:[]},mN={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function gN(e){var t,n;if(he.initial&&(Rt[0]=null),Rt[0])e.debug&&J("cached model:",Rt[0].modelUrl);else{M0(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Rt[0]=await je(Ve(e.modelBasePath,((t=e.hand.detector)==null?void 0:t.modelPath)||""));let r=Object.values(Rt[0].modelSignature.inputs);ui[0][0]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[1].size):0,ui[0][1]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[2].size):0,!Rt[0]||!Rt[0].modelUrl?J("load model failed:",(n=e.hand.detector)==null?void 0:n.modelPath):e.debug&&J("load model:",Rt[0].modelUrl)}return Rt[0]}async function yN(e){var t,n;if(he.initial&&(Rt[1]=null),Rt[1])e.debug&&J("cached model:",Rt[1].modelUrl);else{Rt[1]=await je(Ve(e.modelBasePath,((t=e.hand.skeleton)==null?void 0:t.modelPath)||""));let r=Object.values(Rt[1].modelSignature.inputs);ui[1][0]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[1].size):0,ui[1][1]=Array.isArray(r)?parseInt(r[0].tensorShape.dim[2].size):0,!Rt[1]||!Rt[1].modelUrl?J("load model failed:",(n=e.hand.skeleton)==null?void 0:n.modelPath):e.debug&&J("load model:",Rt[1].modelUrl)}return Rt[1]}async function w1e(e,t){let n=[];if(!e||!Rt[0])return n;let r={},s=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,b1e),o=Math.round(a*s/8)*8;r.resize=Ie.resizeBilinear(e,[a,o]),r.cast=ge(r.resize,"int32"),[r.rawScores,r.rawBoxes]=await Rt[0].executeAsync(r.cast,A1e),r.boxes=Ye(r.rawBoxes,[0,2]),r.scores=Ye(r.rawScores,[0]);let i=ir(r.scores,1);te(i[hN]),i.splice(hN,1),r.filtered=on(i,1),te(i),r.max=bn(r.filtered,1),r.argmax=Mr(r.filtered,1);let l=0;r.nms=await Ie.nonMaxSuppressionAsync(r.boxes,r.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let c=await r.nms.data(),u=await r.max.data(),d=await r.argmax.data();for(let p of Array.from(c)){let h=Fe(r.boxes,p,1),f=await h.data();te(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=S0(m,v1e),y=[Math.trunc(m[0]*ba[0]),Math.trunc(m[1]*ba[1]),Math.trunc(m[2]*ba[0]),Math.trunc(m[3]*ba[1])],x=u[p],A=x1e[d[p]],b={id:l++,score:x,box:y,boxRaw:g,label:A};n.push(b)}return Object.keys(r).forEach(p=>te(r[p])),n.sort((p,h)=>h.score-p.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function s5(e,t,n){let r={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Rt[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let s={},a=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];s.crop=Ie.cropAndResize(e,[a],[0],[ui[1][0],ui[1][1]],"bilinear"),s.div=de(s.crop,Ke.tf255),[s.score,s.keypoints]=Rt[1].execute(s.div,["Identity_1","Identity"]);let o=(await s.score.data())[0],i=(100-Math.trunc(100/(1+Math.exp(o))))/100;if(i>=(n.hand.minConfidence||0)){r.fingerScore=i,s.reshaped=H(s.keypoints,[-1,3]);let u=(await s.reshaped.array()).map(d=>[d[0]/ui[1][1],d[1]/ui[1][0],d[2]||0]).map(d=>[d[0]*t.boxRaw[2],d[1]*t.boxRaw[3],d[2]||0]);r.keypoints=u.map(d=>[ba[0]*(d[0]+t.boxRaw[0]),ba[1]*(d[1]+t.boxRaw[1]),d[2]||0]),r.landmarks=F0(r.keypoints);for(let d of Object.keys(mN))r.annotations[d]=mN[d].map(p=>r.landmarks&&r.keypoints[p]?r.keypoints[p]:null)}Object.keys(s).forEach(l=>te(s[l]))}return r}async function a5(e,t){var s,a;if(!Rt[0]||!Rt[1]||!((s=Rt[0])==null?void 0:s.inputs[0].shape)||!((a=Rt[1])==null?void 0:a.inputs[0].shape))return[];ba=[e.shape[2]||0,e.shape[1]||0],O0++;let n=(t.hand.skipTime||0)>ie()-r5,r=O0<(t.hand.skipFrames||0);return t.skipAllowed&&n&&r?Kt.hands:new Promise(async o=>{let i=3*(t.hand.skipTime||0)>ie()-r5,l=O0<3*(t.hand.skipFrames||0);t.skipAllowed&&Kt.hands.length===t.hand.maxDetected?Kt.hands=await Promise.all(Kt.boxes.map(u=>s5(e,u,t))):t.skipAllowed&&i&&l&&Kt.hands.length>0?Kt.hands=await Promise.all(Kt.boxes.map(u=>s5(e,u,t))):(Kt.boxes=await w1e(e,t),r5=ie(),Kt.hands=await Promise.all(Kt.boxes.map(u=>s5(e,u,t))),O0=0);let c=[...Kt.boxes];if(Kt.boxes.length=0,t.cacheSensitivity>0)for(let u=0;u<Kt.hands.length;u++){let d=c8(Kt.hands[u].keypoints,ba);if(d.box[2]/(e.shape[2]||1)>.05&&d.box[3]/(e.shape[1]||1)>.05&&Kt.hands[u].fingerScore&&Kt.hands[u].fingerScore>(t.hand.minConfidence||0)){let p=S0(d.box,fN),h=S0(d.boxRaw,fN);Kt.boxes.push({...c[u],box:p,boxRaw:h})}}for(let u=0;u<Kt.hands.length;u++){let d=ma(Kt.hands[u].keypoints,ba);Kt.hands[u].box=d.box,Kt.hands[u].boxRaw=d.boxRaw}o(Kt.hands)})}var mn,z0=[],o5=Number.MAX_SAFE_INTEGER,xN=0,bN=0;async function vN(e){var t,n;return he.initial&&(mn=null),mn?e.debug&&J("cached model:",mn.modelUrl):(mn=await loadModel(Ve(e.modelBasePath,((t=e.face.liveness)==null?void 0:t.modelPath)||"")),!mn||!mn.modelUrl?J("load model failed:",(n=e.face.liveness)==null?void 0:n.modelPath):e.debug&&J("load model:",mn.modelUrl)),mn}async function i5(e,t,n,r){var o,i;if(!mn)return 0;let s=(((o=t.face.liveness)==null?void 0:o.skipTime)||0)>ie()-bN,a=o5<(((i=t.face.liveness)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&s&&a&&xN===r&&z0[n]?(o5++,z0[n]):(o5=0,new Promise(async l=>{let c=Ie.resizeBilinear(e,[(mn==null?void 0:mn.inputs[0].shape)?mn.inputs[0].shape[2]:0,(mn==null?void 0:mn.inputs[0].shape)?mn.inputs[0].shape[1]:0],!1),u=mn==null?void 0:mn.execute(c),d=(await u.data())[0];z0[n]=Math.round(100*d)/100,xN=r,bN=ie(),te([c,u]),l(z0[n])}))}var Yp={};id(Yp,{connected:()=>B0,horizontal:()=>l5,kpt:()=>L0,relative:()=>c5,vertical:()=>u5});var L0=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],l5=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],u5=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],c5=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],B0={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var kN=.005,Er={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function d5(e){for(let t of l5){let n=e.keypoints.findIndex(s=>s.part===t[0]),r=e.keypoints.findIndex(s=>s.part===t[1]);if(e.keypoints[n]&&e.keypoints[r]&&e.keypoints[n].position[0]<e.keypoints[r].position[0]){let s=e.keypoints[n];e.keypoints[n]=e.keypoints[r],e.keypoints[r]=s}}for(let t of u5){let n=e.keypoints.findIndex(s=>s&&s.part===t[0]),r=e.keypoints.findIndex(s=>s&&s.part===t[1]);e.keypoints[n]&&e.keypoints[r]&&e.keypoints[n].position[1]<e.keypoints[r].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of c5){let r=e.keypoints.findIndex(c=>c&&c.part===t[0]),s=e.keypoints.findIndex(c=>c&&c.part===t[1]),a=e.keypoints.findIndex(c=>c&&c.part===n[0]),o=e.keypoints.findIndex(c=>c&&c.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[r]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0])]:[0,0],l=e.keypoints[s]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let c=e.keypoints[r];e.keypoints[r]=e.keypoints[s],e.keypoints[s]=c}}}function IN(e){for(let t=0;t<e.length;t++)if(e[t]&&Er.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-Er.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Er.keypoints[t].positionRaw[1])];n[0]<kN&&n[1]<kN?e[t]=Er.keypoints[t]:Er.keypoints[t]=e[t]}else Er.keypoints[t]=e[t];return e}function SN(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Er.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=es(e,Er.padding),n.resize=Ie.resizeBilinear(n.pad,[t,t]);let r=ge(n.resize,"int32");return Object.keys(n).forEach(s=>te(n[s])),r}function CN(e,t){e.keypoints=e.keypoints.filter(r=>r&&r.position);for(let r of e.keypoints)r.position=[r.position[0]*(t[0]+Er.padding[2][0]+Er.padding[2][1])/t[0]-Er.padding[2][0],r.position[1]*(t[1]+Er.padding[1][0]+Er.padding[1][1])/t[1]-Er.padding[1][0]],r.positionRaw=[r.position[0]/t[0],r.position[1]/t[1]];let n=ma(e.keypoints.map(r=>r.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Mn,W0=0,p5=Number.MAX_SAFE_INTEGER,ql={boxes:[],bodies:[],last:0};async function TN(e){return he.initial&&(Mn=null),Mn?e.debug&&J("cached model:",Mn.modelUrl):(M0(["size"],e),Mn=await je(Ve(e.modelBasePath,e.body.modelPath||"")),!Mn||!Mn.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",Mn.modelUrl)),W0=Mn.inputs[0].shape?Mn.inputs[0].shape[2]:0,W0<64&&(W0=256),Mn}async function I1e(e,t,n){let r=e[0][0],s=[],a=0;for(let u=0;u<r.length;u++)if(a=r[u][2],a>t.body.minConfidence){let d=[r[u][1],r[u][0]];s.push({score:Math.round(100*a)/100,part:L0[u],positionRaw:d,position:[Math.round((n.shape[2]||0)*d[0]),Math.round((n.shape[1]||0)*d[1])]})}a=s.reduce((u,d)=>d.score>u?d.score:u,0);let o=[],i=ma(s.map(u=>u.position),[n.shape[2],n.shape[1]]),l={};for(let[u,d]of Object.entries(B0)){let p=[];for(let h=0;h<d.length-1;h++){let f=s.find(g=>g.part===d[h]),m=s.find(g=>g.part===d[h+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&p.push([f.position,m.position])}l[u]=p}let c={id:0,score:a,box:i.box,boxRaw:i.boxRaw,keypoints:s,annotations:l};return d5(c),o.push(c),o}async function S1e(e,t,n){let r=[];for(let s=0;s<e[0].length;s++){let a=e[0][s],o=Math.round(100*a[51+4])/100;if(o>t.body.minConfidence){let i=[];for(let d=0;d<17;d++){let p=a[3*d+2];if(p>t.body.minConfidence){let h=[a[3*d+1],a[3*d+0]];i.push({part:L0[d],score:Math.round(100*p)/100,positionRaw:h,position:[Math.round((n.shape[2]||0)*h[0]),Math.round((n.shape[1]||0)*h[1])]})}}let l=ma(i.map(d=>d.position),[n.shape[2],n.shape[1]]),c={};for(let[d,p]of Object.entries(B0)){let h=[];for(let f=0;f<p.length-1;f++){let m=i.find(y=>y.part===p[f]),g=i.find(y=>y.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}c[d]=h}let u={id:s,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:[...i],annotations:c};d5(u),r.push(u)}}return r.sort((s,a)=>a.score-s.score),r.length>t.body.maxDetected&&(r.length=t.body.maxDetected),r}async function h5(e,t){if(!Mn||!(Mn==null?void 0:Mn.inputs[0].shape))return[];t.skipAllowed||(ql.boxes.length=0),p5++;let n=(t.body.skipTime||0)>ie()-ql.last,r=p5<(t.body.skipFrames||0);return t.skipAllowed&&n&&r?ql.bodies:new Promise(async s=>{let a={};p5=0,a.input=SN(e,W0),a.res=Mn==null?void 0:Mn.execute(a.input),ql.last=ie();let o=await a.res.array();ql.bodies=a.res.shape[2]===17?await I1e(o,t,e):await S1e(o,t,e);for(let i of ql.bodies)CN(i,[e.shape[2]||1,e.shape[1]||1]),IN(i.keypoints);Object.keys(a).forEach(i=>te(a[i])),s(ql.bodies)})}var va,V0=[],EN=0,f5=Number.MAX_SAFE_INTEGER,U0=0,G0=2.5;async function RN(e){if(!va||he.initial){va=await je(Ve(e.modelBasePath,e.object.modelPath||""));let t=Object.values(va.modelSignature.inputs);U0=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,!va||!va.modelUrl?J("load model failed:",e.object.modelPath):e.debug&&J("load model:",va.modelUrl)}else e.debug&&J("cached model:",va.modelUrl);return va}async function C1e(e,t,n){let r=0,s=[];for(let l of[1,2,4])X(async()=>{let c=l*13,u=Ye(e.find(m=>m.shape[1]===c**2&&(m.shape[2]||0)===Mc.length)),d=Ye(e.find(m=>m.shape[1]===c**2&&(m.shape[2]||0)<Mc.length)),h=await d.reshape([-1,4,d.shape[1]/4]).argMax(2).array(),f=await u.array();for(let m=0;m<u.shape[0];m++)for(let g=0;g<u.shape[1];g++){let y=f[m][g];if(y>(n.object.minConfidence||0)&&g!==61){let x=(.5+Math.trunc(m%c))/c,A=(.5+Math.trunc(m/c))/c,b=h[m].map(P=>P*(c/l/U0)),[v,C]=[x-G0/l*b[0],A-G0/l*b[1]],[I,E]=[x+G0/l*b[2]-v,A+G0/l*b[3]-C],R=[v,C,I,E];R=R.map(P=>Math.max(0,Math.min(P,1)));let F=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],_={id:r++,score:Math.round(100*y)/100,class:g+1,label:Mc[g].label,box:F.map(P=>Math.trunc(P)),boxRaw:R};s.push(_)}}});e.forEach(l=>te(l));let a=s.map(l=>[l.boxRaw[1],l.boxRaw[0],l.boxRaw[3],l.boxRaw[2]]),o=s.map(l=>l.score),i=[];if(a&&a.length>0){let l=await Ie.nonMaxSuppressionAsync(a,o,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);i=await l.data(),te(l)}return s=s.filter((l,c)=>i.includes(c)).sort((l,c)=>c.score-l.score),s}async function m5(e,t){let n=(t.object.skipTime||0)>ie()-EN,r=f5<(t.object.skipFrames||0);return t.skipAllowed&&n&&r&&V0.length>0?(f5++,V0):(f5=0,!he.kernels.includes("mod")||!he.kernels.includes("sparsetodense")?V0:new Promise(async s=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Ie.resizeBilinear(e,[U0,U0],!1),i=de(o,Ke.tf255),l=i.transpose([0,3,1,2]);te(i),te(o);let c;t.object.enabled&&(c=va.execute(l)),EN=ie(),te(l);let u=await C1e(c,a,t);V0=u,s(u)}))}var Jp=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],T1e=Jp.length,Qp=Jp.reduce((e,t,n)=>(e[t]=n,e),{}),N1e=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],Uxe=N1e.map(([e,t])=>[Qp[e],Qp[t]]),DN=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function PN(e){let t=e.reduce(({maxX:n,maxY:r,minX:s,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(r,i),minX:Math.min(s,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function $N(e,[t,n],[r,s]){let a=t/r,o=n/s,i=(c,u)=>({id:u,score:c.score,boxRaw:[c.box[0]/s,c.box[1]/r,c.box[2]/s,c.box[3]/r],box:[Math.trunc(c.box[0]*o),Math.trunc(c.box[1]*a),Math.trunc(c.box[2]*o),Math.trunc(c.box[3]*a)],keypoints:c.keypoints.map(({score:d,part:p,position:h})=>({score:d,part:p,position:[Math.trunc(h.x*o),Math.trunc(h.y*a)],positionRaw:[h.x/r,h.y/r]})),annotations:{}});return e.map((c,u)=>i(c,u))}var g5=class{constructor(t,n){fe(this,"priorityQueue");fe(this,"numberOfElements");fe(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=n}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let n=2*t;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(t,n))break;this.exchange(t,n),t=n}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,n){return this.getValueAt(t)<this.getValueAt(n)}exchange(t,n){let r=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[n],this.priorityQueue[n]=r}};function y5(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+T1e)}}function A5(e,t,n){let{heatmapY:r,heatmapX:s,id:a}=e,{y:o,x:i}=y5(r,s,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function x5(e,t,n){return e<t?t:e>n?n:e}function FN(e,t,n,r){let s=n-e,a=r-t;return s*s+a*a}function b5(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Rr,R1e=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],H0=1,Gc=16,_1e=50**2;function ON(e,t,n,r,s,a,o=2){let i=y=>({y:a.get(y.y,y.x,e),x:a.get(y.y,y.x,a.shape[2]/2+e)}),l=(y,x,A)=>({y:x5(Math.round(y.y/Gc),0,x-1),x:x5(Math.round(y.x/Gc),0,A-1)}),[c,u]=r.shape,d=l(t.position,c,u),p=i(d),f=b5(t.position,p);for(let y=0;y<o;y++){let x=l(f,c,u),A=y5(x.y,x.x,n,s);f=b5({x:x.x*Gc,y:x.y*Gc},{x:A.x,y:A.y})}let m=l(f,c,u),g=r.get(m.y,m.x,n);return{position:f,part:Jp[n],score:g}}function D1e(e,t,n,r,s){let a=DN.map(([p,h])=>[Qp[p],Qp[h]]),o=a.map(([,p])=>p),i=a.map(([p])=>p),l=t.shape[2],c=o.length,u=new Array(l),d=A5(e.part,Gc,n);u[e.part.id]={score:e.score,part:Jp[e.part.id],position:d};for(let p=c-1;p>=0;--p){let h=o[p],f=i[p];u[h]&&!u[f]&&(u[f]=ON(p,u[h],f,t,n,s))}for(let p=0;p<c;++p){let h=i[p],f=o[p];u[h]&&!u[f]&&(u[f]=ON(p,u[h],f,t,n,r))}return u}function P1e(e,t,n,r,s){let[a,o]=s.shape,i=!0,l=Math.max(n-H0,0),c=Math.min(n+H0+1,a);for(let u=l;u<c;++u){let d=Math.max(r-H0,0),p=Math.min(r+H0+1,o);for(let h=d;h<p;++h)if(s.get(u,h,e)>t){i=!1;break}if(!i)break}return i}function $1e(e,t){let[n,r,s]=t.shape,a=new g5(n*r*s,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<r;++i)for(let l=0;l<s;++l){let c=t.get(o,i,l);c<e||P1e(l,c,o,i,t)&&a.enqueue({score:c,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function MN(e,{x:t,y:n},r){return e.some(({keypoints:s})=>{var o;let a=(o=s[r])==null?void 0:o.position;return a?FN(n,t,a.y,a.x)<=_1e:!1})}function F1e(e,t){return t.reduce((r,{position:s,score:a},o)=>(MN(e,s,o)||(r+=a),r),0)/t.length}function O1e(e,t,n,r,s,a){let o=[],i=$1e(a,t);for(;o.length<s&&!i.empty();){let l=i.dequeue(),c=A5(l.part,Gc,e);if(MN(o,c,l.part.id))continue;let u=D1e(l,t,e,n,r);u=u.filter(h=>h.score>a);let d=F1e(o,u),p=PN(u);d>a&&o.push({keypoints:u,box:p,score:Math.round(100*d)/100})}return o}async function v5(e,t){let n=X(()=>{if(!Rr.inputs[0].shape)return[];let o=Ie.resizeBilinear(e,[Rr.inputs[0].shape[2],Rr.inputs[0].shape[1]]),i=pe(de(ge(o,"float32"),127.5),1),c=Rr.execute(i,R1e).map(u=>Ye(u,[0]));return c[1]=Pn(c[1]),c}),r=await Promise.all(n.map(o=>o.buffer()));for(let o of n)te(o);let s=await O1e(r[0],r[1],r[2],r[3],t.body.maxDetected,t.body.minConfidence);return Rr.inputs[0].shape?$N(s,[e.shape[1],e.shape[2]],[Rr.inputs[0].shape[2],Rr.inputs[0].shape[1]]):[]}async function zN(e){return!Rr||he.initial?(Rr=await je(Ve(e.modelBasePath,e.body.modelPath||"")),!Rr||!Rr.modelUrl?J("load model failed:",e.body.modelPath):e.debug&&J("load model:",Rr.modelUrl)):e.debug&&J("cached model:",Rr.modelUrl),Rr}var qr,w5=!1;async function k5(e){return!qr||he.initial?(qr=await je(Ve(e.modelBasePath,e.segmentation.modelPath||"")),!qr||!qr.modelUrl?J("load model failed:",e.segmentation.modelPath):e.debug&&J("load model:",qr.modelUrl)):e.debug&&J("cached model:",qr.modelUrl),qr}async function BN(e,t,n){var m,g;if(w5)return{data:[],canvas:null,alpha:null};w5=!0,qr||await k5(n);let r=await $c(e,n),s=((m=r.tensor)==null?void 0:m.shape[2])||0,a=((g=r.tensor)==null?void 0:g.shape[1])||0;if(!r.tensor)return{data:[],canvas:null,alpha:null};let o={};o.resize=Ie.resizeBilinear(r.tensor,[qr.inputs[0].shape?qr.inputs[0].shape[1]:0,qr.inputs[0].shape?qr.inputs[0].shape[2]:0],!1),te(r.tensor),o.norm=de(o.resize,Ke.tf255),o.res=qr.execute(o.norm),o.squeeze=Ye(o.res,0),o.squeeze.shape[2]===2?(o.softmax=Qu(o.squeeze),[o.bg,o.fg]=ir(o.softmax,2),o.expand=Yt(o.fg,2),o.pad=Yt(o.expand,0),o.crop=Ie.cropAndResize(o.pad,[[0,0,.5,.5]],[0],[s,a]),o.data=Ye(o.crop,0)):o.data=Ie.resizeBilinear(o.squeeze,[a,s]);let i=Array.from(await o.data.data());if(he.node&&!he.Canvas&&typeof ImageData=="undefined")return n.debug&&J("canvas support missing"),Object.keys(o).forEach(y=>te(o[y])),{data:i,canvas:null,alpha:null};let l=Yn(s,a);Or&&await Or.toPixels(o.data,l);let c=l.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(c.filter=`blur(${n.segmentation.blur}px)`);let u=c.getImageData(0,0,s,a),d=Yn(s,a),p=d.getContext("2d");r.canvas&&p.drawImage(r.canvas,0,0),p.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(p.filter=`blur(${n.segmentation.blur}px)`),p.drawImage(l,0,0),p.globalCompositeOperation="source-over",p.filter="none";let h=p.getImageData(0,0,s,a);for(let y=0;y<s*a;y++)h.data[4*y+3]=u.data[4*y+0];p.putImageData(h,0,0);let f=null;if(t&&d){f=Yn(s,a);let y=await $c(t,n);te(y.tensor);let x=f.getContext("2d");x.drawImage(y.canvas,0,0,f.width,f.height),x.drawImage(d,0,0)}return Object.keys(o).forEach(y=>te(o[y])),w5=!1,{data:i,canvas:d,alpha:l}}var I5=class{constructor(){fe(this,"ssrnetage",null);fe(this,"gear",null);fe(this,"blazeposedetect",null);fe(this,"blazepose",null);fe(this,"centernet",null);fe(this,"efficientpose",null);fe(this,"mobilefacenet",null);fe(this,"emotion",null);fe(this,"facedetect",null);fe(this,"faceiris",null);fe(this,"facemesh",null);fe(this,"faceres",null);fe(this,"ssrnetgender",null);fe(this,"handpose",null);fe(this,"handskeleton",null);fe(this,"handtrack",null);fe(this,"liveness",null);fe(this,"movenet",null);fe(this,"nanodet",null);fe(this,"posenet",null);fe(this,"segmentation",null);fe(this,"antispoof",null)}};function S5(e){for(let t of Object.keys(e.models))e.models[t]=null}async function VN(e){var t,n,r,s,a,o,i,l,c,u,d,p,h,f,m,g,y,x,A,b,v,C,I,E,R,F,_,P,T,O;he.initial&&S5(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await n5(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((s=(r=e.config.hand.detector)==null?void 0:r.modelPath)==null?void 0:s.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await n5(e.config))),e.config.body.enabled&&!e.models.blazepose&&((o=(a=e.config.body)==null?void 0:a.modelPath)==null?void 0:o.includes("blazepose"))&&(e.models.blazepose=m8(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=f8(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(i=e.config.body)==null?void 0:i.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=v8(e.config)),e.config.body.enabled&&!e.models.movenet&&((u=(c=e.config.body)==null?void 0:c.modelPath)==null?void 0:u.includes("movenet"))&&(e.models.movenet=TN(e.config)),e.config.body.enabled&&!e.models.posenet&&((p=(d=e.config.body)==null?void 0:d.modelPath)==null?void 0:p.includes("posenet"))&&(e.models.posenet=zN(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=a8(e.config)),e.config.face.enabled&&((h=e.config.face.antispoof)==null?void 0:h.enabled)&&!e.models.antispoof&&(e.models.antispoof=jT(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=vN(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=G8(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=S8(e.config)),e.config.face.enabled&&((y=e.config.face.iris)==null?void 0:y.enabled)&&!e.models.faceiris&&(e.models.faceiris=D8(e.config)),e.config.face.enabled&&((x=e.config.face.mesh)==null?void 0:x.enabled)&&!e.models.facemesh&&(e.models.facemesh=L8(e.config)),e.config.face.enabled&&((A=e.config.face.gear)==null?void 0:A.enabled)&&!e.models.gear&&(e.models.gear=PT(e.config)),e.config.face.enabled&&((b=e.config.face.ssrnet)==null?void 0:b.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=zT(e.config)),e.config.face.enabled&&((v=e.config.face.ssrnet)==null?void 0:v.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=VT(e.config)),e.config.face.enabled&&((C=e.config.face.mobilefacenet)==null?void 0:C.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=R8(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((E=(I=e.config.hand.detector)==null?void 0:I.modelPath)==null?void 0:E.includes("handtrack"))&&(e.models.handtrack=gN(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((F=(R=e.config.hand.detector)==null?void 0:R.modelPath)==null?void 0:F.includes("handtrack"))&&(e.models.handskeleton=yN(e.config)),e.config.object.enabled&&!e.models.centernet&&((P=(_=e.config.object)==null?void 0:_.modelPath)==null?void 0:P.includes("centernet"))&&(e.models.centernet=A8(e.config)),e.config.object.enabled&&!e.models.nanodet&&((O=(T=e.config.object)==null?void 0:T.modelPath)==null?void 0:O.includes("nanodet"))&&(e.models.nanodet=RN(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=k5(e.config));for await(let G of Object.keys(e.models))e.models[G]&&typeof e.models[G]!="undefined"&&(e.models[G]=await e.models[G])}async function UN(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let n of Object.keys(e.models)){let r=e.models[n];if(!r)continue;let s=[],a=r==null?void 0:r.executor;if(a&&a.graph.nodes)for(let i of Object.values(a.graph.nodes)){let l=i.op.toLowerCase();s.includes(l)||s.push(l)}else!a&&e.config.debug&&J("model signature not determined:",n);let o=[];for(let i of s)!t.includes(i)&&!e.env.kernels.includes(i)&&!e.env.kernels.includes(i.replace("_",""))&&!e.env.kernels.includes(i.replace("native",""))&&!e.env.kernels.includes(i.replace("v2",""))&&o.push(i);e.config.debug&&o.length>0&&J("model validation failed:",n,o)}}var _t={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function M1e(){let e=_t.gl;!e||(_t.extensions=e.getSupportedExtensions())}async function HN(e){var t;if(e.config.backend==="humangl"&&(_t.name in Dn().registry&&(!_t.gl||!_t.gl.getParameter(_t.gl.VERSION))&&(J("error: humangl backend invalid context"),S5(e)),!cy(_t.name))){try{_t.canvas=await Yn(100,100)}catch(r){J("error: cannot create canvas:",r);return}try{if(_t.gl=(t=_t.canvas)==null?void 0:t.getContext("webgl2",_t.webGLattr),!_t.gl.getParameter(_t.gl.VERSION).includes("2.0")){J("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}_t.canvas&&(_t.canvas.addEventListener("webglcontextlost",async s=>{throw J("error: humangl:",s.type),J("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),_t.canvas.addEventListener("webglcontextrestored",s=>{J("error: humangl context restored:",s)}),_t.canvas.addEventListener("webglcontextcreationerror",s=>{J("error: humangl context create:",s)}))}catch(r){J("error: cannot get WebGL context:",r);return}try{Vm(2,_t.gl)}catch(r){J("error: cannot set WebGL context:",r);return}try{let r=new Ac(_t.gl);dl(_t.name,()=>new _p(r),_t.priority)}catch(r){J("error: cannot register WebGL backend:",r);return}try{Ds("webgl").forEach(s=>{let a={...s,backendName:_t.name};Jr(a)})}catch(r){J("error: cannot update WebGL backend registration:",r);return}let n=gs().getGPGPUContext?gs().getGPGPUContext().gl:null;if(n)J(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);else{J("error: no current gl context:",n,_t.gl);return}try{ps.set("WEBGL_VERSION",2)}catch(r){J("error: cannot set WebGL backend flags:",r);return}M1e(),J("backend registered:",_t.name)}}function z1e(){if(!he.kernels.includes("mod")){let e={kernelName:"Mod",backendName:xr(),kernelFunc:t=>X(()=>pe(t.inputs.a,L(de(t.inputs.a,t.inputs.b),t.inputs.b)))};Jr(e),he.kernels.push("mod")}if(!he.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:xr(),kernelFunc:t=>X(()=>Hd(t.inputs.a/t.inputs.b)*t.inputs.b+Ku(t.inputs.a,t.inputs.b))};Jr(e),he.kernels.push("floormod")}}async function j0(e,t=!1){if(e.state="backend",t||he.initial||e.config.backend&&e.config.backend.length>0&&xr()!==e.config.backend){let n=ie();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&J("running inside web worker"),he.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&J("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),he.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&J(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),he.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")J("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let s=await navigator.gpu.requestAdapter();e.config.debug&&J("enumerated webgpu adapter:",s)}e.config.backend==="humangl"&&await HN(e);let r=Object.keys(Dn().registryFactory);if(e.config.debug&&J("available backends:",r),r.includes(e.config.backend)||(J(`error: backend ${e.config.backend} not found in registry`),e.config.backend=he.node?"tensorflow":"webgl",e.config.debug&&J(`override: setting backend ${e.config.backend}`)),e.config.debug&&J("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&J("wasm path:",e.config.wasmPath),typeof(We==null?void 0:We.setWasmPaths)!="undefined")await sb(e.config.wasmPath);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let s=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),a=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&J(`wasm execution: ${s?"SIMD":"no SIMD"} ${a?"multithreaded":"singlethreaded"}`),e.config.debug&&!s&&J("warning: wasm simd support is not enabled")}try{await uy(e.config.backend),await Wu(),FT()}catch(s){return J("error: cannot set backend:",e.config.backend,s),!1}}if(xr()==="humangl"&&(ps.set("CHECK_COMPUTATION_FOR_ERRORS",!1),ps.set("WEBGL_CPU_FORWARD",!0),ps.set("WEBGL_USE_SHAPES_UNIFORMS",!0),ps.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(J("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),ps.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),gs().getGPGPUContext)){let r=await gs().getGPGPUContext().gl;e.config.debug&&J(`gl version:${r.getParameter(r.VERSION)} renderer:${r.getParameter(r.RENDERER)}`)}xr()==="webgpu",iy(),await Wu(),e.performance.initBackend=Math.trunc(ie()-n),e.config.backend=xr(),await he.updateBackend(),z1e()}return!0}function M0(e,t){for(let n of e){let r={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&J("kernelFunc",n,t.backend)}};Jr(r)}he.kernels=Ds(xr()).map(n=>n.kernelName.toLowerCase())}var wa={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},C5=0,Xl=e=>{if(!e)J("draw error: invalid canvas");else if(!e.getContext)J("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)J("draw error: cannot get canvas context");else return t}return null},Hc=e=>Math.round(e*180/Math.PI);function T5(e,t,n,r,s){r=r||0,e.fillStyle=s.useDepth&&r?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:s.color,e.beginPath(),e.arc(t,n,s.pointSize,0,2*Math.PI),e.fill()}function eh(e,t,n,r,s,a){if(e.beginPath(),e.lineWidth=a.lineWidth,a.useCurves){let o=(t+t+r)/2,i=(n+n+s)/2;e.ellipse(o,i,r/2,s/2,0,0,2*Math.PI)}else e.moveTo(t+a.roundRect,n),e.lineTo(t+r-a.roundRect,n),e.quadraticCurveTo(t+r,n,t+r,n+a.roundRect),e.lineTo(t+r,n+s-a.roundRect),e.quadraticCurveTo(t+r,n+s,t+r-a.roundRect,n+s),e.lineTo(t+a.roundRect,n+s),e.quadraticCurveTo(t,n+s,t,n+s-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function qN(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let r of t){let s=r[2]||0;e.strokeStyle=n.useDepth&&s!==0?`rgba(${127.5+2*s}, ${127.5-2*s}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&s!==0?`rgba(${127.5+2*s}, ${127.5-2*s}, 255, 0.3)`:n.color,e.lineTo(r[0],Math.round(r[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function B1e(e,t,n){if(!(t.length<2)){if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2){qN(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let r=0;r<t.length-2;r++){let s=(t[r][0]+t[r+1][0])/2,a=(t[r][1]+t[r+1][1])/2;e.quadraticCurveTo(t[r][0],t[r][1],s,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function XN(e,t,n,r=5){let s,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),s=Math.atan2(n[1]-t[1],n[0]-t[0]),a=r*Math.cos(s)+n[0],o=r*Math.sin(s)+n[1],e.moveTo(a,o),s+=1/3*(2*Math.PI),a=r*Math.cos(s)+n[0],o=r*Math.sin(s)+n[1],e.lineTo(a,o),s+=1/3*(2*Math.PI),a=r*Math.cos(s)+n[0],o=r*Math.sin(s)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}async function N5(e,t,n){let r=yn(wa,n);if(!(!t||!e)&&r.drawGestures){let s=Xl(e);if(!s)return;s.font=r.font,s.fillStyle=r.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let c=i[1]>0?`#${i[1]}`:"",u=`${i[0]} ${c}: ${l[1]}`;r.shadowColor&&r.shadowColor!==""&&(s.fillStyle=r.shadowColor,s.fillText(u,8,2+a*r.lineHeight)),s.fillStyle=r.labelColor,s.fillText(u,6,0+a*r.lineHeight),a+=1}}}}async function E5(e,t,n){var a,o,i,l,c;let r=yn(wa,n);if(!t||!e)return;let s=Xl(e);if(!!s)for(let u of t){if(s.font=r.font,s.strokeStyle=r.color,s.fillStyle=r.color,r.drawBoxes&&eh(s,u.box[0],u.box[1],u.box[2],u.box[3],r),r.drawLabels){let d=[];if(d.push(`face: ${Math.trunc(100*u.score)}%`),u.genderScore&&d.push(`${u.gender||""} ${Math.trunc(100*u.genderScore)}%`),u.age&&d.push(`age: ${u.age||""}`),u.iris&&d.push(`distance: ${u.iris}`),u.real&&d.push(`real: ${Math.trunc(100*u.real)}%`),u.live&&d.push(`live: ${Math.trunc(100*u.live)}%`),u.emotion&&u.emotion.length>0){let p=u.emotion.map(h=>`${Math.trunc(100*h.score)}% ${h.emotion}`);p.length>3&&(p.length=3),d.push(p.join(" "))}u.rotation&&u.rotation.angle&&u.rotation.gaze&&(u.rotation.angle.roll&&d.push(`roll: ${Hc(u.rotation.angle.roll)}\xB0 yaw:${Hc(u.rotation.angle.yaw)}\xB0 pitch:${Hc(u.rotation.angle.pitch)}\xB0`),u.rotation.gaze.bearing&&d.push(`gaze: ${Hc(u.rotation.gaze.bearing)}\xB0`)),d.length===0&&d.push("face"),s.fillStyle=r.color;for(let p=d.length-1;p>=0;p--){let h=Math.max(u.box[0],0),f=p*r.lineHeight+u.box[1];r.shadowColor&&r.shadowColor!==""&&(s.fillStyle=r.shadowColor,s.fillText(d[p],h+5,f+16)),s.fillStyle=r.labelColor,s.fillText(d[p],h+4,f+15)}}if(s.lineWidth=2,u.mesh&&u.mesh.length>0){if(r.drawPoints)for(let d of u.mesh)T5(s,d[0],d[1],d[2],r);if(r.drawPolygons){if(u.mesh.length>450)for(let d=0;d<Bl.length/3;d++){let p=[Bl[d*3+0],Bl[d*3+1],Bl[d*3+2]].map(h=>u.mesh[h]);qN(s,p,r)}if(u.annotations&&u.annotations.leftEyeIris&&u.annotations.leftEyeIris[0]){s.strokeStyle=r.useDepth?"rgba(255, 200, 255, 0.3)":r.color,s.beginPath();let d=Math.abs(u.annotations.leftEyeIris[3][0]-u.annotations.leftEyeIris[1][0])/2,p=Math.abs(u.annotations.leftEyeIris[4][1]-u.annotations.leftEyeIris[2][1])/2;s.ellipse(u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1],d,p,0,0,2*Math.PI),s.stroke(),r.fillPolygons&&(s.fillStyle=r.useDepth?"rgba(255, 255, 200, 0.3)":r.color,s.fill())}if(u.annotations&&u.annotations.rightEyeIris&&u.annotations.rightEyeIris[0]){s.strokeStyle=r.useDepth?"rgba(255, 200, 255, 0.3)":r.color,s.beginPath();let d=Math.abs(u.annotations.rightEyeIris[3][0]-u.annotations.rightEyeIris[1][0])/2,p=Math.abs(u.annotations.rightEyeIris[4][1]-u.annotations.rightEyeIris[2][1])/2;s.ellipse(u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1],d,p,0,0,2*Math.PI),s.stroke(),r.fillPolygons&&(s.fillStyle=r.useDepth?"rgba(255, 255, 200, 0.3)":r.color,s.fill())}if(r.drawGaze&&((a=u.rotation)==null?void 0:a.angle)&&typeof Path2D!="undefined"){s.strokeStyle="pink";let d=u.box[0]+u.box[2]/2-u.box[3]*Hc(u.rotation.angle.yaw)/90,p=u.box[1]+u.box[3]/2+u.box[2]*Hc(u.rotation.angle.pitch)/90,h=new Path2D(`
            M ${u.box[0]+u.box[2]/2} ${u.box[1]}
            C
              ${d} ${u.box[1]},
              ${d} ${u.box[1]+u.box[3]},
              ${u.box[0]+u.box[2]/2} ${u.box[1]+u.box[3]}
          `),f=new Path2D(`
            M ${u.box[0]} ${u.box[1]+u.box[3]/2}
            C 
              ${u.box[0]} ${p},
              ${u.box[0]+u.box[2]} ${p},
              ${u.box[0]+u.box[2]} ${u.box[1]+u.box[3]/2}
          `);s.stroke(f),s.stroke(h)}if(r.drawGaze&&((i=(o=u.rotation)==null?void 0:o.gaze)==null?void 0:i.strength)&&((c=(l=u.rotation)==null?void 0:l.gaze)==null?void 0:c.bearing)&&u.annotations.leftEyeIris&&u.annotations.rightEyeIris&&u.annotations.leftEyeIris[0]&&u.annotations.rightEyeIris[0]){s.strokeStyle="pink",s.fillStyle="pink";let d=[u.annotations.leftEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.leftEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];XN(s,[u.annotations.leftEyeIris[0][0],u.annotations.leftEyeIris[0][1]],[d[0],d[1]],4);let p=[u.annotations.rightEyeIris[0][0]+Math.sin(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[3],u.annotations.rightEyeIris[0][1]+Math.cos(u.rotation.gaze.bearing)*u.rotation.gaze.strength*u.box[2]];XN(s,[u.annotations.rightEyeIris[0][0],u.annotations.rightEyeIris[0][1]],[p[0],p[1]],4)}}}}}async function R5(e,t,n){var a;let r=yn(wa,n);if(!t||!e)return;let s=Xl(e);if(!!s){s.lineJoin="round";for(let o=0;o<t.length;o++){if(s.strokeStyle=r.color,s.fillStyle=r.color,s.lineWidth=r.lineWidth,s.font=r.font,r.drawBoxes&&t[o].box&&((a=t[o].box)==null?void 0:a.length)===4&&(eh(s,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],r),r.drawLabels&&(r.shadowColor&&r.shadowColor!==""&&(s.fillStyle=r.shadowColor,s.fillText(`body ${100*t[o].score}%`,t[o].box[0]+3,1+t[o].box[1]+r.lineHeight,t[o].box[2])),s.fillStyle=r.labelColor,s.fillText(`body ${100*t[o].score}%`,t[o].box[0]+2,0+t[o].box[1]+r.lineHeight,t[o].box[2]))),r.drawPoints&&t[o].keypoints)for(let i=0;i<t[o].keypoints.length;i++)!t[o].keypoints[i].score||t[o].keypoints[i].score===0||(s.fillStyle=r.useDepth&&t[o].keypoints[i].position[2]?`rgba(${127.5+2*(t[o].keypoints[i].position[2]||0)}, ${127.5-2*(t[o].keypoints[i].position[2]||0)}, 255, 0.5)`:r.color,T5(s,t[o].keypoints[i].position[0],t[o].keypoints[i].position[1],0,r));if(r.drawLabels&&t[o].keypoints){s.font=r.font;for(let i of t[o].keypoints)!i.score||i.score===0||(s.fillStyle=r.useDepth&&i.position[2]?`rgba(${127.5+2*i.position[2]}, ${127.5-2*i.position[2]}, 255, 0.5)`:r.color,s.fillText(`${i.part} ${Math.trunc(100*i.score)}%`,i.position[0]+4,i.position[1]+4))}if(r.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let i of Object.values(t[o].annotations))for(let l of i)B1e(s,l,r)}}}async function _5(e,t,n){let r=yn(wa,n);if(!t||!e)return;let s=Xl(e);if(!!s){s.lineJoin="round",s.font=r.font;for(let a of t){if(r.drawBoxes&&(s.strokeStyle=r.color,s.fillStyle=r.color,eh(s,a.box[0],a.box[1],a.box[2],a.box[3],r),r.drawLabels&&(r.shadowColor&&r.shadowColor!==""&&(s.fillStyle=r.shadowColor,s.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+r.lineHeight,a.box[2])),s.fillStyle=r.labelColor,s.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+r.lineHeight,a.box[2])),s.stroke()),r.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)s.fillStyle=r.useDepth?`rgba(${127.5+2*(o[2]||0)}, ${127.5-2*(o[2]||0)}, 255, 0.5)`:r.color,T5(s,o[0],o[1],0,r);if(r.drawLabels&&a.annotations){let o=(i,l)=>{if(!i||i.length===0||!i[0])return;let c=i[i.length-1][2]||0;s.fillStyle=r.useDepth?`rgba(${127.5+2*c}, ${127.5-2*c}, 255, 0.5)`:r.color,s.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4)};s.font=r.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(r.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++){s.beginPath();let c=i[l][2]||0;s.strokeStyle=r.useDepth?`rgba(${127.5+l*c}, ${127.5-l*c}, 255, 0.5)`:r.color,s.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),s.lineTo(i[l][0],i[l][1]),s.stroke()}};s.lineWidth=r.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}}async function D5(e,t,n){let r=yn(wa,n);if(!t||!e)return;let s=Xl(e);if(!!s){s.lineJoin="round",s.font=r.font;for(let a of t)if(r.drawBoxes){if(s.strokeStyle=r.color,s.fillStyle=r.color,eh(s,a.box[0],a.box[1],a.box[2],a.box[3],r),r.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;r.shadowColor&&r.shadowColor!==""&&(s.fillStyle=r.shadowColor,s.fillText(o,a.box[0]+3,1+a.box[1]+r.lineHeight,a.box[2])),s.fillStyle=r.labelColor,s.fillText(o,a.box[0]+2,0+a.box[1]+r.lineHeight,a.box[2])}s.stroke()}}}async function KN(e,t,n){let r=yn(wa,n);if(!t||!e)return;let s=Xl(e);if(!!s){s.lineJoin="round",s.font=r.font;for(let a=0;a<t.length;a++)if(r.drawBoxes){if(s.strokeStyle=r.color,s.fillStyle=r.color,eh(s,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],r),r.drawLabels){let o=`person #${a}`;r.shadowColor&&r.shadowColor!==""&&(s.fillStyle=r.shadowColor,s.fillText(o,t[a].box[0]+3,1+t[a].box[1]+r.lineHeight,t[a].box[2])),s.fillStyle=r.labelColor,s.fillText(o,t[a].box[0]+2,0+t[a].box[1]+r.lineHeight,t[a].box[2])}s.stroke()}}}async function ZN(e,t){if(!e||!t)return;let n=Xl(t);!n||n.drawImage(e,0,0)}async function YN(e,t,n){if(!t||!t.performance||!t||!e)return null;let r=ie(),s=yn(wa,n),a=Promise.all([E5(e,t.face,s),R5(e,t.body,s),_5(e,t.hand,s),D5(e,t.object,s),N5(e,t.gesture,s)]);return C5=he.perfadd?C5+Math.round(ie()-r):Math.round(ie()-r),t.performance.draw=C5,a}var jc=.1,P5=.5;function V1e(e,t,n){let r=!1,s=n.length-1;for(let a=0;a<n.length;s=a++)n[a].y>t!=n[s].y>t&&e<(n[s].x-n[a].x)*(t-n[a].y)/(n[s].y-n[a].y)+n[a].x&&(r=!r);return r}async function JN(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,r=await e.tensor.buffer(),s=[];for(let o of ls.silhouette)s.push({x:(e.mesh[o][0]-e.box[0])/e.box[2],y:(e.mesh[o][1]-e.box[1])/e.box[3]});jc&&jc>0&&(s=s.map(o=>({x:o.x>.5?o.x+jc:o.x-jc,y:o.y>.5?o.y+jc:o.y-jc})));for(let o=0;o<t;o++)for(let i=0;i<n;i++)V1e(o/t,i/t,s)||(r.set(P5*r.get(0,i,o,0),0,i,o,0),r.set(P5*r.get(0,i,o,1),0,i,o,1),r.set(P5*r.get(0,i,o,2),0,i,o,2));let a=r.toTensor();return te(r),a}var G1e=e=>{let t=(d,p)=>Math.atan2(d[1]-p[1],d[0]-p[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],r=1,s=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=s?e.mesh[473]:e.mesh[468],o=s?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=s?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],r*(a[1]-o[1])/i[1]-n[1]],c=Math.sqrt(l[0]**2+l[1]**2);return c=Math.min(c,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:c}},QN=(e,t)=>{let n=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},r=(m,g)=>{let y=m[0]-g[0],x=m[1]-g[1],A=m[2]-g[2];return[y,x,A]},s=(m,g)=>{let y=m[1]*g[2]-m[2]*g[1],x=m[2]*g[0]-m[0]*g[2],A=m[0]*g[1]-m[1]*g[0];return[y,x,A]},a=m=>{let[g,y,x,A,b,v,C,I,E]=m,R,F,_;return A<1?A>-1?(_=Math.asin(A),F=Math.atan2(-C,g),R=Math.atan2(-v,b)):(_=-Math.PI/2,F=-Math.atan2(I,E),R=0):(_=Math.PI/2,F=Math.atan2(I,E),R=0),isNaN(R)&&(R=0),isNaN(F)&&(F=0),isNaN(_)&&(_=0),{pitch:2*-R,yaw:2*-F,roll:2*-_}},o=e.meshRaw;if(!o||o.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[o[10],o[152],o[234],o[454]].map(m=>[m[0]*t[0]/i,m[1]*t[1]/i,m[2]]),c=n(r(l[1],l[0])),u=n(r(l[3],l[2])),d=n(s(u,c));u=s(c,d);let p=[u[0],u[1],u[2],c[0],c[1],c[2],d[0],d[1],d[2]],h=a(p),f=o.length===478?G1e(e):{bearing:0,strength:0};return{angle:h,matrix:p,gaze:f}};var $5=async(e,t)=>{var h,f,m,g,y,x,A,b,v,C,I,E,R,F,_,P,T,O,G,K,z,j;let n=ie(),r,s,a,o,i,l,c,u,d=[];e.state="run:face";let p=await z8(t,e.config);if(e.performance.face=he.perfadd?(e.performance.face||0)+Math.trunc(ie()-n):Math.trunc(ie()-n),!t.shape||t.shape.length!==4)return[];if(!p)return[];for(let W=0;W<p.length;W++){if(e.analyze("Get Face"),!p[W].tensor||p[W].tensor.isDisposedInternal){J("Face object is disposed:",p[W].tensor);continue}if((h=e.config.face.detector)==null?void 0:h.mask){let ae=await JN(p[W]);te(p[W].tensor),p[W].tensor=ae}let Q=p[W].mesh&&p[W].mesh.length>200?QN(p[W],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?o=((f=e.config.face.emotion)==null?void 0:f.enabled)?Lb(p[W].tensor||ht([]),e.config,W,p.length):[]:(e.state="run:emotion",n=ie(),o=((m=e.config.face.emotion)==null?void 0:m.enabled)?await Lb(p[W].tensor||ht([]),e.config,W,p.length):[],e.performance.emotion=he.perfadd?(e.performance.emotion||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?l=((g=e.config.face.antispoof)==null?void 0:g.enabled)?Ab(p[W].tensor||ht([]),e.config,W,p.length):0:(e.state="run:antispoof",n=ie(),l=((y=e.config.face.antispoof)==null?void 0:y.enabled)?await Ab(p[W].tensor||ht([]),e.config,W,p.length):0,e.performance.antispoof=he.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?c=((x=e.config.face.liveness)==null?void 0:x.enabled)?i5(p[W].tensor||ht([]),e.config,W,p.length):0:(e.state="run:liveness",n=ie(),c=((A=e.config.face.liveness)==null?void 0:A.enabled)?await i5(p[W].tensor||ht([]),e.config,W,p.length):0,e.performance.liveness=he.perfadd?(e.performance.antispoof||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?s=((b=e.config.face.gear)==null?void 0:b.enabled)?db(p[W].tensor||ht([]),e.config,W,p.length):null:(e.state="run:gear",n=ie(),s=((v=e.config.face.gear)==null?void 0:v.enabled)?await db(p[W].tensor||ht([]),e.config,W,p.length):null,e.performance.gear=Math.trunc(ie()-n)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(r=((C=e.config.face.ssrnet)==null?void 0:C.enabled)?hb(p[W].tensor||ht([]),e.config,W,p.length):null,a=((I=e.config.face.ssrnet)==null?void 0:I.enabled)?gb(p[W].tensor||ht([]),e.config,W,p.length):null):(e.state="run:ssrnet",n=ie(),r=((E=e.config.face.ssrnet)==null?void 0:E.enabled)?await hb(p[W].tensor||ht([]),e.config,W,p.length):null,a=((R=e.config.face.ssrnet)==null?void 0:R.enabled)?await gb(p[W].tensor||ht([]),e.config,W,p.length):null,e.performance.ssrnet=Math.trunc(ie()-n)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?i=((F=e.config.face.mobilefacenet)==null?void 0:F.enabled)?Wb(p[W].tensor||ht([]),e.config,W,p.length):null:(e.state="run:mobilefacenet",n=ie(),i=((_=e.config.face.mobilefacenet)==null?void 0:_.enabled)?await Wb(p[W].tensor||ht([]),e.config,W,p.length):null,e.performance.mobilefacenet=Math.trunc(ie()-n)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?u=((P=e.config.face.description)==null?void 0:P.enabled)?qb(p[W].tensor||ht([]),e.config,W,p.length):null:(e.state="run:description",n=ie(),u=((T=e.config.face.description)==null?void 0:T.enabled)?await qb(p[W].tensor||ht([]),e.config,W,p.length):null,e.performance.description=he.perfadd?(e.performance.description||0)+Math.trunc(ie()-n):Math.trunc(ie()-n)),e.analyze("End Description:"),e.config.async&&([r,a,o,i,u,s,l,c]=await Promise.all([r,a,o,i,u,s,l,c])),e.analyze("Finish Face:"),((O=e.config.face.ssrnet)==null?void 0:O.enabled)&&r&&a&&(u={...u,age:r.age,gender:a.gender,genderScore:a.genderScore}),((G=e.config.face.gear)==null?void 0:G.enabled)&&s&&(u={...u,age:s.age,gender:s.gender,genderScore:s.genderScore,race:s.race}),((K=e.config.face.mobilefacenet)==null?void 0:K.enabled)&&i&&(u.descriptor=i),!((z=e.config.face.iris)==null?void 0:z.enabled);let ne=p[W].annotations&&p[W].annotations.leftEyeIris&&p[W].annotations.leftEyeIris[0]&&p[W].annotations.rightEyeIris&&p[W].annotations.rightEyeIris[0]&&p[W].annotations.leftEyeIris.length>0&&p[W].annotations.rightEyeIris.length>0&&p[W].annotations.leftEyeIris[0]!==null&&p[W].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(p[W].annotations.leftEyeIris[3][0]-p[W].annotations.leftEyeIris[1][0]),Math.abs(p[W].annotations.rightEyeIris[4][1]-p[W].annotations.rightEyeIris[2][1]))/t.shape[2]:0,oe=((j=e.config.face.detector)==null?void 0:j.return)?Ye(p[W].tensor):null;te(p[W].tensor),p[W].tensor&&delete p[W].tensor;let Z={...p[W],id:W};(u==null?void 0:u.age)&&(Z.age=u.age),(u==null?void 0:u.gender)&&(Z.gender=u.gender),(u==null?void 0:u.genderScore)&&(Z.genderScore=u==null?void 0:u.genderScore),(u==null?void 0:u.descriptor)&&(Z.embedding=u==null?void 0:u.descriptor),(u==null?void 0:u.race)&&(Z.race=u==null?void 0:u.race),o&&(Z.emotion=o),l&&(Z.real=l),c&&(Z.live=c),ne&&ne!==0&&(Z.iris=Math.trunc(500/ne/11.7)/100),Q&&(Z.rotation=Q),oe&&(Z.tensor=oe),d.push(Z),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),d};var eE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let r=e[n].keypoints.find(l=>l.part==="leftWrist"),s=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&r&&s&&r.position[1]<a.position[1]&&s.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&r&&r.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&s&&s.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&Math.abs(o.positionRaw[1]-i.positionRaw[1])>.1&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},tE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let r=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),s=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(r/s)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${r<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});let l=e[n].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:n,gesture:`head ${l<0?"up":"down"}`})}return t},nE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let r=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],s=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(r*s),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),c=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(c=!0,t.push({iris:n,gesture:"facing center"}));let d=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],p=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(d>.06||p>.06)&&(c=!1),d>p?d>.05&&t.push({iris:n,gesture:"looking right"}):p>.05&&t.push({iris:n,gesture:"looking left"});let h=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||h<.01||f>.022||h>.022)&&(c=!1),(f<.01||h<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||h>.022)&&t.push({iris:n,gesture:"looking up"}),c&&t.push({iris:n,gesture:"looking center"})}return t},rE=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let r=[];if(e[n].annotations)for(let[s,a]of Object.entries(e[n].annotations))s!=="palmBase"&&Array.isArray(a)&&a[0]&&r.push({name:s.toLowerCase(),position:a[0]});if(r&&r.length>0){let s=r.reduce((o,i)=>(o.position[2]||0)<(i.position[2]||0)?o:i);t.push({hand:n,gesture:`${s.name} forward`});let a=r.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let s=uN(e[n].keypoints);for(let a of s)t.push({hand:n,gesture:a.name})}}return t};var _e={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},F5=0;function sE(e,t){var o,i,l,c,u,d,p,h,f,m,g,y,x,A,b,v,C,I,E,R,F,_,P,T,O,G,K;let n=ie();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let r=Date.now()-e.timestamp,s=r<1e3?8-Math.log(r+1):1;if(e.canvas&&(_e.canvas=e.canvas),e.error&&(_e.error=e.error),!_e.body||e.body.length!==_e.body.length)_e.body=JSON.parse(JSON.stringify(e.body));else for(let z=0;z<e.body.length;z++){let j=e.body[z].box.map((Z,ae)=>((s-1)*_e.body[z].box[ae]+Z)/s),W=e.body[z].boxRaw.map((Z,ae)=>((s-1)*_e.body[z].boxRaw[ae]+Z)/s),Q=e.body[z].keypoints.map((Z,ae)=>{var se,me,be,Ne,Se,Pe,ze,Qe,Ze;return{score:Z.score,part:Z.part,position:[_e.body[z].keypoints[ae]?((s-1)*(_e.body[z].keypoints[ae].position[0]||0)+(Z.position[0]||0))/s:Z.position[0],_e.body[z].keypoints[ae]?((s-1)*(_e.body[z].keypoints[ae].position[1]||0)+(Z.position[1]||0))/s:Z.position[1],_e.body[z].keypoints[ae]?((s-1)*(_e.body[z].keypoints[ae].position[2]||0)+(Z.position[2]||0))/s:Z.position[2]],positionRaw:[_e.body[z].keypoints[ae]?((s-1)*(_e.body[z].keypoints[ae].positionRaw[0]||0)+(Z.positionRaw[0]||0))/s:Z.positionRaw[0],_e.body[z].keypoints[ae]?((s-1)*(_e.body[z].keypoints[ae].positionRaw[1]||0)+(Z.positionRaw[1]||0))/s:Z.positionRaw[1],_e.body[z].keypoints[ae]?((s-1)*(_e.body[z].keypoints[ae].positionRaw[2]||0)+(Z.positionRaw[2]||0))/s:Z.positionRaw[2]],distance:[_e.body[z].keypoints[ae]?((s-1)*(((se=_e.body[z].keypoints[ae].distance)==null?void 0:se[0])||0)+(((me=Z.distance)==null?void 0:me[0])||0))/s:(be=Z.distance)==null?void 0:be[0],_e.body[z].keypoints[ae]?((s-1)*(((Ne=_e.body[z].keypoints[ae].distance)==null?void 0:Ne[1])||0)+(((Se=Z.distance)==null?void 0:Se[1])||0))/s:(Pe=Z.distance)==null?void 0:Pe[1],_e.body[z].keypoints[ae]?((s-1)*(((ze=_e.body[z].keypoints[ae].distance)==null?void 0:ze[2])||0)+(((Qe=Z.distance)==null?void 0:Qe[2])||0))/s:(Ze=Z.distance)==null?void 0:Ze[2]]}}),ne={},oe={connected:{}};((i=(o=t.body)==null?void 0:o.modelPath)==null?void 0:i.includes("efficientpose"))?oe=N0:((c=(l=t.body)==null?void 0:l.modelPath)==null?void 0:c.includes("blazepose"))?oe=k0:((d=(u=t.body)==null?void 0:u.modelPath)==null?void 0:d.includes("movenet"))&&(oe=Yp);for(let[Z,ae]of Object.entries(oe.connected)){let se=[];for(let me=0;me<ae.length-1;me++){let be=Q.find(Se=>Se.part===ae[me]),Ne=Q.find(Se=>Se.part===ae[me+1]);be&&Ne&&se.push([be.position,Ne.position])}ne[Z]=se}_e.body[z]={...e.body[z],box:j,boxRaw:W,keypoints:Q,annotations:ne}}if(!_e.hand||e.hand.length!==_e.hand.length)_e.hand=JSON.parse(JSON.stringify(e.hand));else for(let z=0;z<e.hand.length;z++){let j=e.hand[z].box.map((oe,Z)=>((s-1)*_e.hand[z].box[Z]+oe)/s),W=e.hand[z].boxRaw.map((oe,Z)=>((s-1)*_e.hand[z].boxRaw[Z]+oe)/s);_e.hand[z].keypoints.length!==e.hand[z].keypoints.length&&(_e.hand[z].keypoints=e.hand[z].keypoints);let Q=e.hand[z].keypoints&&e.hand[z].keypoints.length>0?e.hand[z].keypoints.map((oe,Z)=>oe.map((ae,se)=>((s-1)*(_e.hand[z].keypoints[Z][se]||1)+(ae||0))/s)):[],ne={};if(Object.keys(_e.hand[z].annotations).length!==Object.keys(e.hand[z].annotations).length)_e.hand[z].annotations=e.hand[z].annotations,ne=_e.hand[z].annotations;else if(e.hand[z].annotations)for(let oe of Object.keys(e.hand[z].annotations))ne[oe]=e.hand[z].annotations[oe]&&e.hand[z].annotations[oe][0]?e.hand[z].annotations[oe].map((Z,ae)=>Z.map((se,me)=>((s-1)*_e.hand[z].annotations[oe][ae][me]+se)/s)):null;_e.hand[z]={...e.hand[z],box:j,boxRaw:W,keypoints:Q,annotations:ne}}if(!_e.face||e.face.length!==_e.face.length)_e.face=JSON.parse(JSON.stringify(e.face));else for(let z=0;z<e.face.length;z++){let j=e.face[z].box.map((Q,ne)=>((s-1)*_e.face[z].box[ne]+Q)/s),W=e.face[z].boxRaw.map((Q,ne)=>((s-1)*_e.face[z].boxRaw[ne]+Q)/s);if(e.face[z].rotation){let Q={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};Q.matrix=(p=e.face[z].rotation)==null?void 0:p.matrix,Q.angle={roll:((s-1)*(((f=(h=_e.face[z].rotation)==null?void 0:h.angle)==null?void 0:f.roll)||0)+(((g=(m=e.face[z].rotation)==null?void 0:m.angle)==null?void 0:g.roll)||0))/s,yaw:((s-1)*(((x=(y=_e.face[z].rotation)==null?void 0:y.angle)==null?void 0:x.yaw)||0)+(((b=(A=e.face[z].rotation)==null?void 0:A.angle)==null?void 0:b.yaw)||0))/s,pitch:((s-1)*(((C=(v=_e.face[z].rotation)==null?void 0:v.angle)==null?void 0:C.pitch)||0)+(((E=(I=e.face[z].rotation)==null?void 0:I.angle)==null?void 0:E.pitch)||0))/s},Q.gaze={bearing:((s-1)*(((F=(R=_e.face[z].rotation)==null?void 0:R.gaze)==null?void 0:F.bearing)||0)+(((P=(_=e.face[z].rotation)==null?void 0:_.gaze)==null?void 0:P.bearing)||0))/s,strength:((s-1)*(((O=(T=_e.face[z].rotation)==null?void 0:T.gaze)==null?void 0:O.strength)||0)+(((K=(G=e.face[z].rotation)==null?void 0:G.gaze)==null?void 0:K.strength)||0))/s},_e.face[z]={...e.face[z],rotation:Q,box:j,boxRaw:W}}_e.face[z]={...e.face[z],box:j,boxRaw:W}}if(!_e.object||e.object.length!==_e.object.length)_e.object=JSON.parse(JSON.stringify(e.object));else for(let z=0;z<e.object.length;z++){let j=e.object[z].box.map((Q,ne)=>((s-1)*_e.object[z].box[ne]+Q)/s),W=e.object[z].boxRaw.map((Q,ne)=>((s-1)*_e.object[z].boxRaw[ne]+Q)/s);_e.object[z]={...e.object[z],box:j,boxRaw:W}}if(e.persons){let z=e.persons;if(!_e.persons||z.length!==_e.persons.length)_e.persons=JSON.parse(JSON.stringify(z));else for(let j=0;j<z.length;j++)_e.persons[j].box=z[j].box.map((W,Q)=>((s-1)*_e.persons[j].box[Q]+W)/s)}e.gesture&&(_e.gesture=e.gesture);let a=ie();return F5=he.perfadd?F5+Math.round(a-n):Math.round(a-n),e.performance&&(_e.performance={...e.performance,interpolate:F5}),_e}function q0(e,t,n={order:2,multiplier:25}){let r=0;for(let s=0;s<e.length;s++){let a=!n.order||n.order===2?e[s]-t[s]:Math.abs(e[s]-t[s]);r+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*r}var aE=(e,t,n,r)=>{if(e===0)return 1;let s=t===2?Math.sqrt(e):e**(1/t),a=(1-s/100-n)/(r-n);return Math.max(Math.min(a,1),0)};function oE(e,t,n={order:2,multiplier:25,min:.2,max:.8}){let r=q0(e,t,n);return aE(r,n.order||2,n.min||0,n.max||1)}function iE(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let r=Number.MAX_SAFE_INTEGER,s=-1;for(let o=0;o<t.length;o++){let i=q0(e,t[o],n);if(i<r&&(r=i,s=o),r<(n.threshold||0))break}let a=aE(r,n.order||2,n.min||0,n.max||1);return{index:s,distance:r,similarity:a}}function lE(e,t,n,r,s){var i,l,c,u,d,p,h,f,m,g,y,x,A,b,v,C;let a=0,o=[];for(let I of e){let E={id:a++,face:I,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let O of t)I.box[0]>O.box[0]&&I.box[0]<O.box[0]+O.box[2]&&I.box[1]+I.box[3]>O.box[1]&&I.box[1]+I.box[3]<O.box[1]+O.box[3]&&(E.body=O);if(E.body)for(let O of n)O.box[0]+O.box[2]>E.body.box[0]&&O.box[0]+O.box[2]<E.body.box[0]+E.body.box[2]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=O),O.box[0]<E.body.box[0]+E.body.box[2]&&O.box[0]>E.body.box[0]&&O.box[1]+O.box[3]>E.body.box[1]&&O.box[1]+O.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=O);for(let O of r)O.face!==void 0&&O.face===I.id?(i=E.gestures)==null||i.push(O):O.iris!==void 0&&O.iris===I.id?(l=E.gestures)==null||l.push(O):O.body!==void 0&&O.body===((c=E.body)==null?void 0:c.id)?(u=E.gestures)==null||u.push(O):O.hand!==void 0&&O.hand===((p=(d=E.hands)==null?void 0:d.left)==null?void 0:p.id)?(h=E.gestures)==null||h.push(O):O.hand!==void 0&&O.hand===((m=(f=E.hands)==null?void 0:f.right)==null?void 0:m.id)&&((g=E.gestures)==null||g.push(O));let R=[],F=[],_=O=>{O&&O.length===4&&(R.push(O[0],O[0]+O[2]),F.push(O[1],O[1]+O[3]))};_((y=E.face)==null?void 0:y.box),_((x=E.body)==null?void 0:x.box),_((b=(A=E.hands)==null?void 0:A.left)==null?void 0:b.box),_((C=(v=E.hands)==null?void 0:v.right)==null?void 0:C.box);let P=Math.min(...R),T=Math.min(...F);E.box=[P,T,Math.max(...R)-P,Math.max(...F)-T],s&&s[1]&&s[2]&&(E.boxRaw=[E.box[0]/s[2],E.box[1]/s[1],E.box[2]/s[2],E.box[3]/s[1]]),o.push(E)}return o}var X0=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,K0=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function Y1e(e){let t=(s,a="application/octet-stream")=>fetch(`data:${a};base64,${s}`).then(o=>o.blob()),n,r;switch(e.config.warmup){case"face":n=await t(X0);break;case"body":case"full":n=await t(K0);break;default:n=null}if(n){let s=await createImageBitmap(n);r=await e.detect(s,e.config),s.close()}return r}async function J1e(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+X0;break;case"full":case"body":n="data:image/jpeg;base64,"+K0;break;default:n=null}let r;if(typeof Image!="undefined")r=new Image;else if(he.Image)r=new he.Image;else return;r.onload=async()=>{let s=Yn(r.naturalWidth,r.naturalHeight);if(!s)J("Warmup: Canvas not found"),t(void 0);else{let a=s.getContext("2d");a&&a.drawImage(r,0,0);let o=await e.image(s),i=await e.detect(o.tensor,e.config);t(i)}},n?r.src=n:t(void 0)})}async function Q1e(e){let t=s=>Buffer.from(s,"base64"),n;e.config.warmup==="face"?n=t(X0):n=t(K0);let r;if("node"in We){let s=(void 0).decodeJpeg(n),a=s.expandDims(0);e.tf.dispose(s),r=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&J("Warmup tfjs-node not loaded");return r}async function uE(e,t){let n=ie();if(e.state="warmup",t&&(e.config=yn(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none")return{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:ie(),persons:[],error:null};let r;return new Promise(async s=>{typeof createImageBitmap=="function"?r=await Y1e(e):typeof Image!="undefined"||he.Canvas!==void 0?r=await J1e(e):r=await Q1e(e);let a=ie();e.config.debug&&J("Warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),s(r)})}var qc,th,nh,Z0,cE=class{constructor(t){fe(this,"version");fe(this,"config");fe(this,"result");fe(this,"state");fe(this,"process");fe(this,"tf");fe(this,"env");fe(this,"draw");fe(this,"models");fe(this,"events");fe(this,"faceTriangulation");fe(this,"faceUVMap");fe(this,"performance");ud(this,qc,void 0);ud(this,th,void 0);ud(this,nh,void 0);fe(this,"gl");fe(this,"analyze",(...t)=>{if(!ld(this,th))return;let n=this.tf.engine().state.numTensors,r=ld(this,qc);cd(this,qc,n);let s=n-r;s!==0&&J(...t,s)});ud(this,Z0,t=>{if(!ld(this,nh))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof nt))return"input must be a tensor";try{this.tf.getBackend()}catch(n){return"backend not loaded"}return null});fe(this,"similarity",oE);fe(this,"distance",q0);fe(this,"match",iE);fe(this,"emit",t=>{var n;this.events&&this.events.dispatchEvent&&((n=this.events)==null||n.dispatchEvent(new Event(t)))});this.env=he,_a.wasmPath=Gp["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${oy}/dist/`,_a.modelBasePath=he.browser?"../models/":"file://models/",_a.backend=he.browser?"humangl":"tensorflow",this.version=lb,Object.defineProperty(this,"version",{value:lb}),this.config=JSON.parse(JSON.stringify(_a)),Object.seal(this.config),t&&(this.config=yn(this.config,t)),this.tf=We,this.state="idle",cd(this,qc,0),cd(this,th,!1),cd(this,nh,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new I5,this.draw={options:wa,canvas:(n,r)=>ZN(n,r),face:(n,r,s)=>E5(n,r,s),body:(n,r,s)=>R5(n,r,s),hand:(n,r,s)=>_5(n,r,s),gesture:(n,r,s)=>N5(n,r,s),object:(n,r,s)=>D5(n,r,s),person:(n,r,s)=>KN(n,r,s),all:(n,r,s)=>YN(n,r,s)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=B8,this.faceUVMap=W8,this.gl=_t,this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(_a)),this.config.backend=t}validate(t){return k2(_a,t||this.config)}now(){return ie()}image(t,n=!0){return $c(t,this.config,n)}async segmentation(t,n){return BN(t,n,this.config)}enhance(t){return jb(t)}compare(t,n){return ET(this.config,t,n)}async init(){await j0(this,!0),await this.tf.ready()}async load(t){this.state="load";let n=ie(),r=Object.values(this.models).filter(o=>o).length;t&&(this.config=yn(this.config,t)),this.env.initial&&(this.config.debug&&J(`version: ${this.version}`),this.config.debug&&J(`tfjs version: ${this.tf.version["tfjs-core"]}`),await j0(this)||J("error: backend check failed"),await Wu(),this.env.browser&&(this.config.debug&&J("configuration:",this.config),this.config.debug&&J("environment:",this.env),this.config.debug&&J("tf flags:",this.tf.ENV.flags))),await VN(this),this.env.initial&&this.config.debug&&J("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(o=>o).length!==r&&(await UN(this),this.emit("load"));let a=Math.trunc(ie()-n);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(t=this.result){return sE(t,this.config)}async warmup(t){let n=ie(),r=await uE(this,t),s=ie();return this.performance.warmup=Math.trunc(s-n),r}async profile(t,n){let r=await this.tf.profile(()=>this.detect(t,n)),s={};for(let i of r.kernels)s[i.name]?s[i.name]+=i.kernelTimeMs:s[i.name]=i.kernelTimeMs;let a=[];Object.entries(s).forEach(i=>a.push({name:i[0],ms:i[1]})),a.sort((i,l)=>l.ms-i.ms),a.length=20;let o={};for(let i of a)o[i.name]=i.ms;return o}async detect(t,n){return this.state="detect",new Promise(async r=>{var g,y,x,A,b,v,C,I,E,R,F,_,P,T,O,G,K,z,j,W,Q,ne;this.state="config";let s;this.config=yn(this.config,n),this.state="check";let a=ld(this,Z0).call(this,t);a&&(J(a,t),this.emit("error"),r({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:a}));let o=ie();await j0(this),await this.load(),s=ie(),this.state="image";let i=await $c(t,this.config);if(this.process=i,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ie()-s):Math.trunc(ie()-s),this.analyze("Get Image:"),!i.tensor){this.config.debug&&J("could not convert input to tensor"),this.emit("error"),r({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ie(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),s=ie(),this.config.skipAllowed=await NT(this.config,i.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ie()-s):Math.trunc(ie()-s),this.analyze("Check Changed:");let l=[],c=[],u=[],d=[];this.state="detect:face",this.config.async?(l=this.config.face.enabled?$5(this,i.tensor):[],this.performance.face&&delete this.performance.face):(s=ie(),l=this.config.face.enabled?await $5(this,i.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ie()-s):Math.trunc(ie()-s)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(l=await l),this.analyze("Start Body:"),this.state="detect:body";let p=this.config.body.maxDetected===-1?yn(this.config,{body:{maxDetected:this.config.face.enabled?1*l.length:1}}):this.config;this.config.async?(((g=this.config.body.modelPath)==null?void 0:g.includes("posenet"))?c=this.config.body.enabled?v5(i.tensor,p):[]:((y=this.config.body.modelPath)==null?void 0:y.includes("blazepose"))?c=this.config.body.enabled?Rb(i.tensor,p):[]:((x=this.config.body.modelPath)==null?void 0:x.includes("efficientpose"))?c=this.config.body.enabled?Mb(i.tensor,p):[]:((A=this.config.body.modelPath)==null?void 0:A.includes("movenet"))&&(c=this.config.body.enabled?h5(i.tensor,p):[]),this.performance.body&&delete this.performance.body):(s=ie(),((b=this.config.body.modelPath)==null?void 0:b.includes("posenet"))?c=this.config.body.enabled?await v5(i.tensor,p):[]:((v=this.config.body.modelPath)==null?void 0:v.includes("blazepose"))?c=this.config.body.enabled?await Rb(i.tensor,p):[]:((C=this.config.body.modelPath)==null?void 0:C.includes("efficientpose"))?c=this.config.body.enabled?await Mb(i.tensor,p):[]:((I=this.config.body.modelPath)==null?void 0:I.includes("movenet"))&&(c=this.config.body.enabled?await h5(i.tensor,p):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ie()-s):Math.trunc(ie()-s)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let h=this.config.hand.maxDetected===-1?yn(this.config,{hand:{maxDetected:this.config.face.enabled?2*l.length:1}}):this.config;this.config.async?(((R=(E=this.config.hand.detector)==null?void 0:E.modelPath)==null?void 0:R.includes("handdetect"))?u=this.config.hand.enabled?t5(i.tensor,h):[]:((_=(F=this.config.hand.detector)==null?void 0:F.modelPath)==null?void 0:_.includes("handtrack"))&&(u=this.config.hand.enabled?a5(i.tensor,h):[]),this.performance.hand&&delete this.performance.hand):(s=ie(),((T=(P=this.config.hand.detector)==null?void 0:P.modelPath)==null?void 0:T.includes("handdetect"))?u=this.config.hand.enabled?await t5(i.tensor,h):[]:((G=(O=this.config.hand.detector)==null?void 0:O.modelPath)==null?void 0:G.includes("handtrack"))&&(u=this.config.hand.enabled?await a5(i.tensor,h):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ie()-s):Math.trunc(ie()-s)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?(((K=this.config.object.modelPath)==null?void 0:K.includes("nanodet"))?d=this.config.object.enabled?m5(i.tensor,this.config):[]:((z=this.config.object.modelPath)==null?void 0:z.includes("centernet"))&&(d=this.config.object.enabled?Pb(i.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(s=ie(),((j=this.config.object.modelPath)==null?void 0:j.includes("nanodet"))?d=this.config.object.enabled?await m5(i.tensor,this.config):[]:((W=this.config.object.modelPath)==null?void 0:W.includes("centernet"))&&(d=this.config.object.enabled?await Pb(i.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ie()-s):Math.trunc(ie()-s)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([l,c,u,d]=await Promise.all([l,c,u,d])),this.state="detect:gesture";let f=[];this.config.gesture.enabled&&(s=ie(),f=[...tE(l),...eE(c),...rE(u),...nE(l)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ie()-s):Math.trunc(ie()-s)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ie()-o):Math.trunc(ie()-o);let m=((ne=(Q=this.process)==null?void 0:Q.tensor)==null?void 0:ne.shape)||[];this.result={face:l,body:c,hand:u,gesture:f,object:d,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return lE(l,c,u,f,m)}},te(i.tensor),this.emit("detect"),this.state="idle",r(this.result)})}};qc=new WeakMap,th=new WeakMap,nh=new WeakMap,Z0=new WeakMap;return pR(tAe);})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
