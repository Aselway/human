/*
  Human
  homepage: <https://github.com/vladmandic/human>
  author: <https://github.com/vladmandic>'
*/

var Human=(()=>{var Gh=Object.defineProperty;var LE=Object.getOwnPropertyDescriptor;var BE=Object.getOwnPropertyNames;var WE=Object.prototype.hasOwnProperty;var VE=(e,t,n)=>t in e?Gh(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var Sa=(e,t)=>{for(var n in t)Gh(e,n,{get:t[n],enumerable:!0})},UE=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of BE(t))!WE.call(e,r)&&r!==n&&Gh(e,r,{get:()=>t[r],enumerable:!(s=LE(t,r))||s.enumerable});return e};var GE=e=>UE(Gh({},"__esModule",{value:!0}),e);var fe=(e,t,n)=>(VE(e,typeof t!="symbol"?t+"":t,n),n),_b=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var fd=(e,t,n)=>(_b(e,t,"read from private field"),n?n.call(e):t.get(e)),md=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},gd=(e,t,n,s)=>(_b(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);var fxe={};Sa(fxe,{Human:()=>ub,default:()=>ub,defaults:()=>Ia,draw:()=>nb,env:()=>pe,match:()=>lb,models:()=>f2});function oe(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function $b(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var le=()=>typeof performance!="undefined"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function Z1(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")Z1(e[r],t[r],r,s);else{let a=e&&typeof e[r]!="undefined";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&oe("invalid configuration",s),s}function Gt(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=Gt(a,o):n[r]=o}),n),{})}var Ia={backend:"",modelBasePath:"",cacheModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}};var Ue={};Sa(Ue,{Abs:()=>Hi,Acos:()=>zu,Acosh:()=>Lu,AdadeltaOptimizer:()=>Gm,AdagradOptimizer:()=>Hm,AdamOptimizer:()=>jm,AdamaxOptimizer:()=>qm,Add:()=>ta,AddN:()=>Ja,All:()=>Bu,Any:()=>Wu,ArgMax:()=>Qa,ArgMin:()=>Vu,Asin:()=>Uu,Asinh:()=>Gu,Atan:()=>Hu,Atan2:()=>qu,Atanh:()=>ju,AvgPool:()=>eo,AvgPool3D:()=>Yd,AvgPool3DGrad:()=>Jf,AvgPoolGrad:()=>Yf,BackendWasm:()=>u9,BatchMatMul:()=>to,BatchToSpaceND:()=>ji,Bincount:()=>Qf,BroadcastArgs:()=>em,BroadcastTo:()=>P4,Callback:()=>lk,CallbackList:()=>l6,Cast:()=>no,Ceil:()=>so,ClipByValue:()=>na,Complex:()=>Jd,ComplexAbs:()=>Qd,Concat:()=>qi,Conv2D:()=>ro,Conv2DBackpropFilter:()=>tm,Conv2DBackpropInput:()=>ao,Conv3D:()=>ep,Conv3DBackpropFilterV2:()=>nm,Conv3DBackpropInputV2:()=>sm,Cos:()=>oo,Cosh:()=>io,CropAndResize:()=>Ki,Cumprod:()=>Xi,Cumsum:()=>lo,CustomCallback:()=>c6,DataStorage:()=>Zd,DenseBincount:()=>rm,DepthToSpace:()=>Zi,DepthwiseConv2dNative:()=>uo,DepthwiseConv2dNativeBackpropFilter:()=>am,DepthwiseConv2dNativeBackpropInput:()=>om,Diag:()=>im,Dilation2D:()=>tp,Dilation2DBackpropFilter:()=>xf,Dilation2DBackpropInput:()=>Af,ENV:()=>br,EarlyStopping:()=>uk,Einsum:()=>np,Elu:()=>po,EluGrad:()=>lm,Environment:()=>$4,Equal:()=>Yi,Erf:()=>Xu,Exp:()=>ho,ExpandDims:()=>Ji,Expm1:()=>Qi,FFT:()=>um,Fill:()=>Ku,FlipLeftRight:()=>el,Floor:()=>fo,FloorDiv:()=>mo,FromPixels:()=>Md,FusedBatchNorm:()=>go,FusedConv2D:()=>Ma,FusedDepthwiseConv2D:()=>za,GPGPUContext:()=>vu,GatherNd:()=>nl,GatherV2:()=>tl,GraphModel:()=>A0,Greater:()=>sl,GreaterEqual:()=>yo,History:()=>u6,IFFT:()=>cm,Identity:()=>Ao,Imag:()=>sp,InputSpec:()=>Zt,IsFinite:()=>Zu,IsInf:()=>Yu,IsNan:()=>Ju,KernelBackend:()=>Ou,LRN:()=>ap,LRNGrad:()=>pm,LayerVariable:()=>Q7,LayersModel:()=>Jr,LeakyRelu:()=>xo,Less:()=>rl,LessEqual:()=>al,LinSpace:()=>dm,Log:()=>bo,Log1p:()=>Qu,LogSoftmax:()=>F4,LogicalAnd:()=>ol,LogicalNot:()=>ec,LogicalOr:()=>rp,MathBackendCPU:()=>Kx,MathBackendWebGL:()=>Bp,Max:()=>vo,MaxPool:()=>ko,MaxPool3D:()=>op,MaxPool3DGrad:()=>fm,MaxPoolGrad:()=>hm,MaxPoolWithArgmax:()=>mm,Maximum:()=>wo,Mean:()=>So,Min:()=>Io,Minimum:()=>Co,MirrorPad:()=>To,Mod:()=>tc,MomentumOptimizer:()=>Xm,Multinomial:()=>gm,Multiply:()=>No,Neg:()=>il,NonMaxSuppressionV3:()=>ul,NonMaxSuppressionV4:()=>nc,NonMaxSuppressionV5:()=>cl,NotEqual:()=>ll,OP_SCOPE_SUFFIX:()=>Z4,OneHot:()=>pl,OnesLike:()=>dl,Optimizer:()=>oa,OptimizerConstructors:()=>Ta,Pack:()=>hl,PadV2:()=>Eo,Pool:()=>FR,Pow:()=>Ro,Prelu:()=>_o,Prod:()=>$o,RMSPropOptimizer:()=>Km,RNN:()=>ia,Range:()=>sc,Rank:()=>B4,Real:()=>ip,RealDiv:()=>co,Reciprocal:()=>rc,Reduction:()=>M7,Relu:()=>Do,Relu6:()=>Fo,Reshape:()=>fl,ResizeBilinear:()=>Po,ResizeBilinearGrad:()=>Am,ResizeNearestNeighbor:()=>ac,ResizeNearestNeighborGrad:()=>ym,Reverse:()=>ml,RotateWithOffset:()=>El,Round:()=>gl,Rsqrt:()=>Oo,SGDOptimizer:()=>Cp,ScatterNd:()=>yl,Select:()=>Al,Selu:()=>oc,Sequential:()=>u0,Sigmoid:()=>zo,Sign:()=>ic,Sin:()=>Mo,Sinh:()=>bl,Slice:()=>xl,Softmax:()=>Wo,Softplus:()=>lc,SpaceToBatchND:()=>vl,SparseFillEmptyRows:()=>lp,SparseReshape:()=>uc,SparseSegmentMean:()=>up,SparseSegmentSum:()=>cp,SparseToDense:()=>dp,SplitV:()=>wl,Sqrt:()=>Lo,Square:()=>cc,SquaredDifference:()=>Vo,Step:()=>jo,StridedSlice:()=>kl,StringNGrams:()=>pp,StringSplit:()=>xm,StringToHashBucketFast:()=>bm,Sub:()=>Uo,Sum:()=>Bo,SymbolicTensor:()=>dr,Tan:()=>Sl,Tanh:()=>Go,Tensor:()=>st,TensorBuffer:()=>on,Tile:()=>sa,TopK:()=>Il,Transform:()=>Cl,Transpose:()=>Ho,Unique:()=>vm,Unpack:()=>Tl,UnsortedSegmentSum:()=>hp,Variable:()=>Bd,ZerosLike:()=>Nl,_FusedMatMul:()=>Oa,abs:()=>sn,acos:()=>Ew,acosh:()=>Rw,add:()=>ue,addN:()=>km,all:()=>Fy,any:()=>If,argMax:()=>_s,argMin:()=>_w,asin:()=>$w,asinh:()=>Dw,atan:()=>Pw,atan2:()=>Fw,atanh:()=>Ow,avgPool:()=>Sm,avgPool3d:()=>My,backend:()=>Ls,backend_util:()=>T,basicLSTMCell:()=>wD,batchNorm:()=>Iu,batchNorm2d:()=>Bw,batchNorm3d:()=>Ww,batchNorm4d:()=>Vw,batchToSpaceND:()=>Im,bincount:()=>zy,booleanMaskAsync:()=>FO,broadcastArgs:()=>Uw,broadcastTo:()=>$d,broadcast_util:()=>Rl,browser:()=>zs,buffer:()=>We,callbacks:()=>hH,cast:()=>ge,ceil:()=>Gw,clipByValue:()=>gs,clone:()=>Un,complex:()=>La,concat:()=>St,concat1d:()=>Hw,concat2d:()=>pc,concat3d:()=>jw,concat4d:()=>qw,constraints:()=>r6,conv1d:()=>Ly,conv2d:()=>Wa,conv2dTranspose:()=>Wy,conv3d:()=>Vy,conv3dTranspose:()=>Kw,copyRegisteredKernels:()=>LR,cos:()=>Cm,cosh:()=>Uy,cosineWindow:()=>hA,cumprod:()=>Tf,cumsum:()=>Gy,customGrad:()=>Pr,data:()=>Pk,denseBincount:()=>Zw,deprecationWarn:()=>$y,depthToSpace:()=>Yw,depthwiseConv2d:()=>vp,deregisterOp:()=>gH,device_util:()=>yp,diag:()=>QD,dilation2d:()=>Jw,disableDeprecationWarnings:()=>z$,dispose:()=>ne,disposeVariables:()=>L$,div:()=>de,divNoNan:()=>Qw,dot:()=>oP,dropout:()=>N7,einsum:()=>e7,elu:()=>wp,enableDebugMode:()=>M$,enableProdMode:()=>_y,enclosingPowerOfTwo:()=>E7,engine:()=>rn,env:()=>Y,equal:()=>$s,erf:()=>t7,exp:()=>Ds,expandDims:()=>Kt,expm1:()=>n7,eye:()=>Hy,fft:()=>Mm,fill:()=>hc,findBackend:()=>Py,findBackendFactory:()=>U$,floor:()=>kp,floorDiv:()=>xp,forceHalfFloat:()=>n8,fused:()=>Ga,gather:()=>Cu,gatherND:()=>T7,gather_util:()=>Sy,getBackend:()=>qn,getGradient:()=>dg,getKernel:()=>bf,getKernelsForBackend:()=>$r,getThreadsCount:()=>xye,gpgpu_util:()=>DI,grad:()=>_P,grads:()=>$P,greater:()=>As,greaterEqual:()=>$l,ifft:()=>Gd,imag:()=>Tm,image:()=>Se,inTopKAsync:()=>jO,initializers:()=>a6,input:()=>S6,io:()=>In,irfft:()=>lA,isFinite:()=>vP,isInf:()=>kP,isNaN:()=>s7,keep:()=>fn,kernel_impls:()=>Zs,layers:()=>o6,leakyRelu:()=>Nm,less:()=>jy,lessEqual:()=>Dl,linalg:()=>z7,linspace:()=>r7,loadGraphModel:()=>xj,loadLayersModel:()=>SU,localResponseNormalization:()=>a7,log:()=>Ps,log1p:()=>Em,logSigmoid:()=>zP,logSoftmax:()=>qy,logSumExp:()=>c7,logicalAnd:()=>gr,logicalNot:()=>_m,logicalOr:()=>Zy,logicalXor:()=>ZP,losses:()=>Rz,matMul:()=>Ye,math:()=>cw,max:()=>gn,maxPool:()=>$m,maxPool3d:()=>Yy,maxPoolWithArgmax:()=>d7,maximum:()=>ra,mean:()=>Vt,memory:()=>Sf,meshgrid:()=>nF,metrics:()=>ak,min:()=>Va,minimum:()=>Sp,mirrorPad:()=>p7,mod:()=>mc,model:()=>wU,models:()=>ok,moments:()=>Dm,movingAverage:()=>zO,mul:()=>L,multiRNNCell:()=>cF,multinomial:()=>h7,neg:()=>zt,nextFrame:()=>gA,norm:()=>dA,notEqual:()=>Tu,oneHot:()=>Vd,ones:()=>ms,onesLike:()=>Fs,op:()=>V,outerProduct:()=>mF,pad:()=>Ks,pad1d:()=>AF,pad2d:()=>bF,pad3d:()=>wF,pad4d:()=>SF,pool:()=>EF,pow:()=>Ua,prelu:()=>Fm,print:()=>ow,prod:()=>Jy,profile:()=>B$,rand:()=>PF,randomGamma:()=>zF,randomNormal:()=>f7,randomUniform:()=>gc,range:()=>Nu,ready:()=>dc,real:()=>Ud,reciprocal:()=>m7,registerBackend:()=>_l,registerCallbackConstructor:()=>IU,registerGradient:()=>O4,registerKernel:()=>Xs,registerOp:()=>mH,regularizers:()=>ik,relu:()=>Mr,relu6:()=>tA,removeBackend:()=>V$,reshape:()=>H,reverse:()=>Os,reverse1d:()=>qF,reverse2d:()=>KF,reverse3d:()=>YF,reverse4d:()=>QF,rfft:()=>zm,round:()=>nA,rsqrt:()=>sA,scalar:()=>Ie,scatterND:()=>C7,scatter_util:()=>Iy,selu:()=>rA,separableConv2d:()=>g7,sequential:()=>kU,serialization:()=>ce,setBackend:()=>Dy,setPlatform:()=>G$,setThreadsCount:()=>Aye,setWasmPath:()=>yye,setWasmPaths:()=>_3,setWebGLContext:()=>v0,setdiff1dAsync:()=>y7,shared:()=>x0,sigmoid:()=>Cn,sign:()=>A7,signal:()=>Ez,sin:()=>aA,sinh:()=>oA,slice:()=>Pe,slice1d:()=>Om,slice2d:()=>iA,slice3d:()=>Pl,slice4d:()=>Oi,slice_util:()=>Mt,softmax:()=>yc,softplus:()=>fc,spaceToBatchND:()=>Pm,sparse:()=>kd,sparseToDense:()=>pA,spectral:()=>Nz,split:()=>Yt,sqrt:()=>Nn,square:()=>At,squaredDifference:()=>uA,squeeze:()=>tt,stack:()=>cn,step:()=>Ip,stridedSlice:()=>x7,string:()=>af,sub:()=>he,sum:()=>ke,sumOutType:()=>gp,tan:()=>b7,tanh:()=>Su,tensor:()=>ht,tensor1d:()=>Ct,tensor2d:()=>hr,tensor3d:()=>pw,tensor4d:()=>IO,tensor5d:()=>CO,tensor6d:()=>TO,tensor_util:()=>pr,test_util:()=>Cw,tidy:()=>K,tile:()=>Hs,time:()=>W$,topk:()=>v7,train:()=>xi,transpose:()=>et,truncatedNormal:()=>Lm,unique:()=>Sg,unregisterGradient:()=>zR,unregisterKernel:()=>MR,unsortedSegmentSum:()=>w7,unstack:()=>ss,upcastType:()=>Tn,util:()=>w,valueAndGrad:()=>DP,valueAndGrads:()=>PP,variable:()=>k7,variableGrads:()=>o7,version:()=>Kp,version_converter:()=>bj,version_core:()=>Ry,version_cpu:()=>oX,version_layers:()=>LA,version_wasm:()=>bye,version_webgl:()=>Rte,webgl:()=>_te,webgl_util:()=>sI,webgpu:()=>rC,where:()=>Gn,whereAsync:()=>cA,zeros:()=>Ft,zerosLike:()=>rt});var HE=Object.create,qf=Object.defineProperty,jE=Object.getOwnPropertyDescriptor,b4=Object.getOwnPropertyNames,qE=Object.getPrototypeOf,XE=Object.prototype.hasOwnProperty,KE=e=>qf(e,"__esModule",{value:!0}),dn=(e,t)=>function(){return t||(0,e[b4(e)[0]])((t={exports:{}}).exports,t),t.exports},Le=(e,t)=>{for(var n in t)qf(e,n,{get:t[n],enumerable:!0})},ZE=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of b4(t))!XE.call(e,r)&&(n||r!=="default")&&qf(e,r,{get:()=>t[r],enumerable:!(s=jE(t,r))||s.enumerable});return e},Ui=(e,t)=>ZE(KE(qf(e!=null?HE(qE(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),YE=dn({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(D){}function s(D,C,F){this.low=D|0,this.high=C|0,this.unsigned=!!F}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(D){return(D&&D.__isLong__)===!0}s.isLong=r;var a={},o={};function i(D,C){var F,U,X;return C?(D>>>=0,(X=0<=D&&D<256)&&(U=o[D],U)?U:(F=u(D,(D|0)<0?-1:0,!0),X&&(o[D]=F),F)):(D|=0,(X=-128<=D&&D<128)&&(U=a[D],U)?U:(F=u(D,D<0?-1:0,!1),X&&(a[D]=F),F))}s.fromInt=i;function l(D,C){if(isNaN(D))return C?b:A;if(C){if(D<0)return b;if(D>=g)return R}else{if(D<=-y)return P;if(D+1>=y)return E}return D<0?l(-D,C).neg():u(D%m|0,D/m|0,C)}s.fromNumber=l;function u(D,C,F){return new s(D,C,F)}s.fromBits=u;var c=Math.pow;function p(D,C,F){if(D.length===0)throw Error("empty string");if(D==="NaN"||D==="Infinity"||D==="+Infinity"||D==="-Infinity")return A;if(typeof C=="number"?(F=C,C=!1):C=!!C,F=F||10,F<2||36<F)throw RangeError("radix");var U;if((U=D.indexOf("-"))>0)throw Error("interior hyphen");if(U===0)return p(D.substring(1),C,F).neg();for(var X=l(c(F,8)),z=A,Z=0;Z<D.length;Z+=8){var B=Math.min(8,D.length-Z),ee=parseInt(D.substring(Z,Z+B),F);if(B<8){var Q=l(c(F,B));z=z.mul(Q).add(l(ee))}else z=z.mul(X),z=z.add(l(ee))}return z.unsigned=C,z}s.fromString=p;function d(D,C){return typeof D=="number"?l(D,C):typeof D=="string"?p(D,C):u(D.low,D.high,typeof C=="boolean"?C:D.unsigned)}s.fromValue=d;var h=1<<16,f=1<<24,m=h*h,g=m*m,y=g/2,x=i(f),A=i(0);s.ZERO=A;var b=i(0,!0);s.UZERO=b;var v=i(1);s.ONE=v;var k=i(1,!0);s.UONE=k;var I=i(-1);s.NEG_ONE=I;var E=u(-1,2147483647,!1);s.MAX_VALUE=E;var R=u(-1,-1,!0);s.MAX_UNSIGNED_VALUE=R;var P=u(0,-2147483648,!1);s.MIN_VALUE=P;var _=s.prototype;_.toInt=function(){return this.unsigned?this.low>>>0:this.low},_.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},_.toString=function(C){if(C=C||10,C<2||36<C)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(P)){var F=l(C),U=this.div(F),X=U.mul(F).sub(this);return U.toString(C)+X.toInt().toString(C)}else return"-"+this.neg().toString(C);for(var z=l(c(C,6),this.unsigned),Z=this,B="";;){var ee=Z.div(z),Q=Z.sub(ee.mul(z)).toInt()>>>0,ae=Q.toString(C);if(Z=ee,Z.isZero())return ae+B;for(;ae.length<6;)ae="0"+ae;B=""+ae+B}},_.getHighBits=function(){return this.high},_.getHighBitsUnsigned=function(){return this.high>>>0},_.getLowBits=function(){return this.low},_.getLowBitsUnsigned=function(){return this.low>>>0},_.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var C=this.high!=0?this.high:this.low,F=31;F>0&&(C&1<<F)==0;F--);return this.high!=0?F+33:F+1},_.isZero=function(){return this.high===0&&this.low===0},_.eqz=_.isZero,_.isNegative=function(){return!this.unsigned&&this.high<0},_.isPositive=function(){return this.unsigned||this.high>=0},_.isOdd=function(){return(this.low&1)===1},_.isEven=function(){return(this.low&1)===0},_.equals=function(C){return r(C)||(C=d(C)),this.unsigned!==C.unsigned&&this.high>>>31===1&&C.high>>>31===1?!1:this.high===C.high&&this.low===C.low},_.eq=_.equals,_.notEquals=function(C){return!this.eq(C)},_.neq=_.notEquals,_.ne=_.notEquals,_.lessThan=function(C){return this.comp(C)<0},_.lt=_.lessThan,_.lessThanOrEqual=function(C){return this.comp(C)<=0},_.lte=_.lessThanOrEqual,_.le=_.lessThanOrEqual,_.greaterThan=function(C){return this.comp(C)>0},_.gt=_.greaterThan,_.greaterThanOrEqual=function(C){return this.comp(C)>=0},_.gte=_.greaterThanOrEqual,_.ge=_.greaterThanOrEqual,_.compare=function(C){if(r(C)||(C=d(C)),this.eq(C))return 0;var F=this.isNegative(),U=C.isNegative();return F&&!U?-1:!F&&U?1:this.unsigned?C.high>>>0>this.high>>>0||C.high===this.high&&C.low>>>0>this.low>>>0?-1:1:this.sub(C).isNegative()?-1:1},_.comp=_.compare,_.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add(v)},_.neg=_.negate,_.add=function(C){r(C)||(C=d(C));var F=this.high>>>16,U=this.high&65535,X=this.low>>>16,z=this.low&65535,Z=C.high>>>16,B=C.high&65535,ee=C.low>>>16,Q=C.low&65535,ae=0,J=0,re=0,ie=0;return ie+=z+Q,re+=ie>>>16,ie&=65535,re+=X+ee,J+=re>>>16,re&=65535,J+=U+B,ae+=J>>>16,J&=65535,ae+=F+Z,ae&=65535,u(re<<16|ie,ae<<16|J,this.unsigned)},_.subtract=function(C){return r(C)||(C=d(C)),this.add(C.neg())},_.sub=_.subtract,_.multiply=function(C){if(this.isZero())return A;if(r(C)||(C=d(C)),n){var F=n.mul(this.low,this.high,C.low,C.high);return u(F,n.get_high(),this.unsigned)}if(C.isZero())return A;if(this.eq(P))return C.isOdd()?P:A;if(C.eq(P))return this.isOdd()?P:A;if(this.isNegative())return C.isNegative()?this.neg().mul(C.neg()):this.neg().mul(C).neg();if(C.isNegative())return this.mul(C.neg()).neg();if(this.lt(x)&&C.lt(x))return l(this.toNumber()*C.toNumber(),this.unsigned);var U=this.high>>>16,X=this.high&65535,z=this.low>>>16,Z=this.low&65535,B=C.high>>>16,ee=C.high&65535,Q=C.low>>>16,ae=C.low&65535,J=0,re=0,ie=0,me=0;return me+=Z*ae,ie+=me>>>16,me&=65535,ie+=z*ae,re+=ie>>>16,ie&=65535,ie+=Z*Q,re+=ie>>>16,ie&=65535,re+=X*ae,J+=re>>>16,re&=65535,re+=z*Q,J+=re>>>16,re&=65535,re+=Z*ee,J+=re>>>16,re&=65535,J+=U*ae+X*Q+z*ee+Z*B,J&=65535,u(ie<<16|me,J<<16|re,this.unsigned)},_.mul=_.multiply,_.divide=function(C){if(r(C)||(C=d(C)),C.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&C.low===-1&&C.high===-1)return this;var F=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,C.low,C.high);return u(F,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:A;var U,X,z;if(this.unsigned){if(C.unsigned||(C=C.toUnsigned()),C.gt(this))return b;if(C.gt(this.shru(1)))return k;z=b}else{if(this.eq(P)){if(C.eq(v)||C.eq(I))return P;if(C.eq(P))return v;var Z=this.shr(1);return U=Z.div(C).shl(1),U.eq(A)?C.isNegative()?v:I:(X=this.sub(C.mul(U)),z=U.add(X.div(C)),z)}else if(C.eq(P))return this.unsigned?b:A;if(this.isNegative())return C.isNegative()?this.neg().div(C.neg()):this.neg().div(C).neg();if(C.isNegative())return this.div(C.neg()).neg();z=A}for(X=this;X.gte(C);){U=Math.max(1,Math.floor(X.toNumber()/C.toNumber()));for(var B=Math.ceil(Math.log(U)/Math.LN2),ee=B<=48?1:c(2,B-48),Q=l(U),ae=Q.mul(C);ae.isNegative()||ae.gt(X);)U-=ee,Q=l(U,this.unsigned),ae=Q.mul(C);Q.isZero()&&(Q=v),z=z.add(Q),X=X.sub(ae)}return z},_.div=_.divide,_.modulo=function(C){if(r(C)||(C=d(C)),n){var F=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,C.low,C.high);return u(F,n.get_high(),this.unsigned)}return this.sub(this.div(C).mul(C))},_.mod=_.modulo,_.rem=_.modulo,_.not=function(){return u(~this.low,~this.high,this.unsigned)},_.and=function(C){return r(C)||(C=d(C)),u(this.low&C.low,this.high&C.high,this.unsigned)},_.or=function(C){return r(C)||(C=d(C)),u(this.low|C.low,this.high|C.high,this.unsigned)},_.xor=function(C){return r(C)||(C=d(C)),u(this.low^C.low,this.high^C.high,this.unsigned)},_.shiftLeft=function(C){return r(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?u(this.low<<C,this.high<<C|this.low>>>32-C,this.unsigned):u(0,this.low<<C-32,this.unsigned)},_.shl=_.shiftLeft,_.shiftRight=function(C){return r(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?u(this.low>>>C|this.high<<32-C,this.high>>C,this.unsigned):u(this.high>>C-32,this.high>=0?0:-1,this.unsigned)},_.shr=_.shiftRight,_.shiftRightUnsigned=function(C){if(r(C)&&(C=C.toInt()),C&=63,C===0)return this;var F=this.high;if(C<32){var U=this.low;return u(U>>>C|F<<32-C,F>>>C,this.unsigned)}else return C===32?u(F,0,this.unsigned):u(F>>>C-32,0,this.unsigned)},_.shru=_.shiftRightUnsigned,_.shr_u=_.shiftRightUnsigned,_.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},_.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},_.toBytes=function(C){return C?this.toBytesLE():this.toBytesBE()},_.toBytesLE=function(){var C=this.high,F=this.low;return[F&255,F>>>8&255,F>>>16&255,F>>>24,C&255,C>>>8&255,C>>>16&255,C>>>24]},_.toBytesBE=function(){var C=this.high,F=this.low;return[C>>>24,C>>>16&255,C>>>8&255,C&255,F>>>24,F>>>16&255,F>>>8&255,F&255]},s.fromBytes=function(C,F,U){return U?s.fromBytesLE(C,F):s.fromBytesBE(C,F)},s.fromBytesLE=function(C,F){return new s(C[0]|C[1]<<8|C[2]<<16|C[3]<<24,C[4]|C[5]<<8|C[6]<<16|C[7]<<24,F)},s.fromBytesBE=function(C,F){return new s(C[4]<<24|C[5]<<16|C[6]<<8|C[7],C[0]<<24|C[1]<<16|C[2]<<8|C[3],F)}}}),JE=dn({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),QE=dn({"(disabled):util"(){}}),eR=dn({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(u){var c=this,p=l();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(u),c.s0<0&&(c.s0+=1),c.s1-=p(u),c.s1<0&&(c.s1+=1),c.s2-=p(u),c.s2<0&&(c.s2+=1),p=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function i(u,c){var p=new a(u),d=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,p),h.state=function(){return o(p,{})}),h}function l(){var u=4022871197,c=function(p){p=String(p);for(var d=0;d<p.length;d++){u+=p.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return c}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),tR=dn({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),nR=dn({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:c+=l;for(var p=0;p<c.length+64;p++)u.x^=c.charCodeAt(p)|0,p==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),sR=dn({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var p=u.x,d=u.i,h,f,m;return h=p[d],h^=h>>>7,f=h^h<<24,h=p[d+1&7],f^=h^h>>>10,h=p[d+3&7],f^=h^h>>>3,h=p[d+4&7],f^=h^h<<7,h=p[d+7&7],h=h^h<<13,f^=h^h<<9,p[d]=f,u.i=d+1&7,f};function c(p,d){var h,f,m=[];if(d===(d|0))f=m[0]=d;else for(d=""+d,h=0;h<d.length;++h)m[h&7]=m[h&7]<<15^d.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],p.x=m,p.i=0,h=256;h>0;--h)p.next()}c(u,l)}function o(l,u){return u.x=l.x.slice(),u.i=l.i,u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.x&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),rR=dn({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var p=u.w,d=u.X,h=u.i,f,m;return u.w=p=p+1640531527|0,m=d[h+34&127],f=d[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[h]=m^f,u.i=h,m+(p^p>>>16)|0};function c(p,d){var h,f,m,g,y,x=[],A=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,A=Math.max(A,d.length)),m=0,g=-32;g<A;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=x[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(x[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;p.w=y,p.X=x,p.i=m}c(u,l)}function o(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.X&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),aR=dn({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.b,h=u.c,f=u.d,m=u.a;return d=d<<25^d>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-f|0,u.d=f<<16^h>>>16^m,u.a=m-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):c+=l;for(var p=0;p<c.length+20;p++)u.b^=c.charCodeAt(p)|0,u.next()}function o(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function i(l,u){var c=new a(l),p=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&o(p,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),oR=dn({"(disabled):crypto"(){}}),iR=dn({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",u=r.pow(a,o),c=r.pow(2,i),p=c*2,d=a-1,h;function f(v,k,I){var E=[];k=k==!0?{entropy:!0}:k||{};var R=x(y(k.entropy?[v,b(s)]:v==null?A():v,3),E),P=new m(E),_=function(){for(var D=P.g(o),C=u,F=0;D<c;)D=(D+F)*a,C*=a,F=P.g(1);for(;D>=p;)D/=2,C/=2,F>>>=1;return(D+F)/C};return _.int32=function(){return P.g(4)|0},_.quick=function(){return P.g(4)/4294967296},_.double=_,x(b(P.S),s),(k.pass||I||function(D,C,F,U){return U&&(U.S&&g(U,P),D.state=function(){return g(P,{})}),F?(r[l]=D,C):D})(_,R,"global"in k?k.global:this==r,k.state)}function m(v){var k,I=v.length,E=this,R=0,P=E.i=E.j=0,_=E.S=[];for(I||(v=[I++]);R<a;)_[R]=R++;for(R=0;R<a;R++)_[R]=_[P=d&P+v[R%I]+(k=_[R])],_[P]=k;(E.g=function(D){for(var C,F=0,U=E.i,X=E.j,z=E.S;D--;)C=z[U=d&U+1],F=F*a+z[d&(z[U]=z[X=d&X+C])+(z[X]=C)];return E.i=U,E.j=X,F})(a)}function g(v,k){return k.i=v.i,k.j=v.j,k.S=v.S.slice(),k}function y(v,k){var I=[],E=typeof v,R;if(k&&E=="object")for(R in v)try{I.push(y(v[R],k-1))}catch(P){}return I.length?I:E=="string"?v:v+"\0"}function x(v,k){for(var I=v+"",E,R=0;R<I.length;)k[d&R]=d&(E^=k[d&R]*19)+I.charCodeAt(R++);return b(k)}function A(){try{var v;return h&&(v=h.randomBytes)?v=v(a):(v=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(v)),b(v)}catch(E){var k=n.navigator,I=k&&k.plugins;return[+new Date,n,I,n.screen,b(s)]}}function b(v){return String.fromCharCode.apply(0,v)}if(x(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=oR()}catch(v){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self!="undefined"?self:e,[],Math)}}),Xf=dn({"src/node_modules/seedrandom/index.js"(e,t){var n=eR(),s=tR(),r=nR(),a=sR(),o=rR(),i=aR(),l=iR();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),v4=dn({"(disabled):src/node_modules/string_decoder/index.js"(){}}),dy=dn({"(disabled):fs"(){}}),mf=dn({"(disabled):path"(){}}),lR=dn({"(disabled):worker_threads"(){}}),uR=dn({"(disabled):perf_hooks"(){}}),cR=dn({"(disabled):os"(){}}),dR=dn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return $e.buffer!=On&&nr($e.buffer),uh}function o(){return $e.buffer!=On&&nr($e.buffer),ch}function i(){return $e.buffer!=On&&nr($e.buffer),sd}function l(){return $e.buffer!=On&&nr($e.buffer),dh}function u(){return $e.buffer!=On&&nr($e.buffer),ph}function c(){return $e.buffer!=On&&nr($e.buffer),hh}function p(){return $e.buffer!=On&&nr($e.buffer),fh}var d=typeof r!="undefined"?r:{},h,f;d.ready=new Promise(function(N,O){h=N,f=O});var m;typeof process!="undefined"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},d),y=[],x="./this.program",A=(N,O)=>{throw O},b=typeof window=="object",v=typeof importScripts=="function",k=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",I=d.ENVIRONMENT_IS_PTHREAD||!1,E="";function R(N){return d.locateFile?d.locateFile(N,E):E+N}var P,_,D,C;function F(N){if(N instanceof pd)return;Q("exiting due to exception: "+N)}var U,X,z;if(k){v?E=mf().dirname(E)+"/":E=__dirname+"/",z=()=>{X||(U=dy(),X=mf())},P=function(G,te){return z(),G=X.normalize(G),U.readFileSync(G,te?void 0:"utf8")},D=O=>{var G=P(O,!0);return G.buffer||(G=new Uint8Array(G)),G},_=(O,G,te)=>{z(),O=X.normalize(O),U.readFile(O,function(ye,xe){ye?te(ye):G(xe.buffer)})},process.argv.length>1&&(x=process.argv[1].replace(/\\/g,"/")),y=process.argv.slice(2),process.on("uncaughtException",function(O){if(!(O instanceof pd))throw O}),process.on("unhandledRejection",function(O){throw O}),A=(O,G)=>{if(di())throw process.exitCode=O,G;F(G),process.exit(O)},d.inspect=function(){return"[Emscripten Module object]"};let N;try{N=lR()}catch(O){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),O}global.Worker=N.Worker}else(b||v)&&(v?E=self.location.href:typeof document!="undefined"&&document.currentScript&&(E=document.currentScript.src),typeof s!="undefined"&&s&&(E=s),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",k||(P=N=>{var O=new XMLHttpRequest;return O.open("GET",N,!1),O.send(null),O.responseText},v&&(D=N=>{var O=new XMLHttpRequest;return O.open("GET",N,!1),O.responseType="arraybuffer",O.send(null),new Uint8Array(O.response)}),_=(N,O,G)=>{var te=new XMLHttpRequest;te.open("GET",N,!0),te.responseType="arraybuffer",te.onload=()=>{if(te.status==200||te.status==0&&te.response){O(te.response);return}G()},te.onerror=G,te.send(null)}),C=N=>document.title=N);k&&typeof performance=="undefined"&&(global.performance=uR().performance);var Z=console.log.bind(console),B=console.warn.bind(console);k&&(z(),Z=N=>U.writeSync(1,N+`
`),B=N=>U.writeSync(2,N+`
`));var ee=d.print||Z,Q=d.printErr||B;Object.assign(d,g),g=null,d.arguments&&(y=d.arguments),d.thisProgram&&(x=d.thisProgram),d.quit&&(A=d.quit);var ae=4;function J(N){J.shown||(J.shown={}),J.shown[N]||(J.shown[N]=1,Q(N))}function re(N,O){if(typeof WebAssembly.Function=="function"){for(var G={i:"i32",j:"i64",f:"f32",d:"f64"},te={parameters:[],results:O[0]=="v"?[]:[G[O[0]]]},ye=1;ye<O.length;++ye)te.parameters.push(G[O[ye]]);return new WebAssembly.Function(te,N)}var xe=[1,0,1,96],Te=O.slice(0,1),Fe=O.slice(1),Pt={i:127,j:126,f:125,d:124};xe.push(Fe.length);for(var ye=0;ye<Fe.length;++ye)xe.push(Pt[Fe[ye]]);Te=="v"?xe.push(0):xe=xe.concat([1,Pt[Te]]),xe[1]=xe.length-2;var or=new Uint8Array([0,97,115,109,1,0,0,0].concat(xe,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),ir=new WebAssembly.Module(or),Uh=new WebAssembly.Instance(ir,{e:{f:N}}),hd=Uh.exports.f;return hd}var ie=[],me;function be(){if(ie.length)return ie.pop();try{Ts.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return Ts.length-1}function Ee(N,O){for(var G=N;G<N+O;G++){var te=tu(G);te&&me.set(te,G)}}var Re=0,ze=N=>{Re=N},Be=Atomics.load,nt=Atomics.store,it=Atomics.compareExchange,lt;d.wasmBinary&&(lt=d.wasmBinary);var ft=d.noExitRuntime||!0;typeof WebAssembly!="object"&&Jl("no native wasm support detected");var $e,wt,yt=!1,Dn;function qt(N,O){N||Jl(O)}function ls(N){var O=d["_"+N];return O}function nn(N,O,G,te,ye){var xe={string:function(ds){var lu=0;if(ds!=null&&ds!==0){var Rb=(ds.length<<2)+1;lu=iu(Rb),Hr(ds,lu,Rb)}return lu},array:function(ds){var lu=iu(ds.length);return jr(ds,lu),lu}};function Te(ds){return O==="string"?Fn(ds):O==="boolean"?Boolean(ds):ds}var Fe=ls(N),Pt=[],or=0;if(te)for(var ir=0;ir<te.length;ir++){var Uh=xe[G[ir]];Uh?(or===0&&(or=X1()),Pt[ir]=Uh(te[ir])):Pt[ir]=te[ir]}var hd=Fe.apply(null,Pt);function zE(ds){return or!==0&&Lh(or),Te(ds)}return hd=zE(hd),hd}function Pn(N,O,G,te){G=G||[];var ye=G.every(function(Te){return Te==="number"}),xe=O!=="string";return xe&&ye&&!te?ls(N):function(){return nn(N,O,G,arguments,te)}}var us=1;function cs(N){var O=new TextDecoder(N);this.decode=G=>(G.buffer instanceof SharedArrayBuffer&&(G=new Uint8Array(G)),O.decode.call(O,G))}var kn=typeof TextDecoder!="undefined"?new cs("utf8"):void 0;function Cs(N,O,G){for(var te=O+G,ye=O;N[ye]&&!(ye>=te);)++ye;if(ye-O>16&&N.subarray&&kn)return kn.decode(N.subarray(O,ye));for(var xe="";O<ye;){var Te=N[O++];if(!(Te&128)){xe+=String.fromCharCode(Te);continue}var Fe=N[O++]&63;if((Te&224)==192){xe+=String.fromCharCode((Te&31)<<6|Fe);continue}var Pt=N[O++]&63;if((Te&240)==224?Te=(Te&15)<<12|Fe<<6|Pt:Te=(Te&7)<<18|Fe<<12|Pt<<6|N[O++]&63,Te<65536)xe+=String.fromCharCode(Te);else{var or=Te-65536;xe+=String.fromCharCode(55296|or>>10,56320|or&1023)}}return xe}function Fn(N,O){return N?Cs(o(),N,O):""}function Gr(N,O,G,te){if(!(te>0))return 0;for(var ye=G,xe=G+te-1,Te=0;Te<N.length;++Te){var Fe=N.charCodeAt(Te);if(Fe>=55296&&Fe<=57343){var Pt=N.charCodeAt(++Te);Fe=65536+((Fe&1023)<<10)|Pt&1023}if(Fe<=127){if(G>=xe)break;O[G++]=Fe}else if(Fe<=2047){if(G+1>=xe)break;O[G++]=192|Fe>>6,O[G++]=128|Fe&63}else if(Fe<=65535){if(G+2>=xe)break;O[G++]=224|Fe>>12,O[G++]=128|Fe>>6&63,O[G++]=128|Fe&63}else{if(G+3>=xe)break;O[G++]=240|Fe>>18,O[G++]=128|Fe>>12&63,O[G++]=128|Fe>>6&63,O[G++]=128|Fe&63}}return O[G]=0,G-ye}function Hr(N,O,G){return Gr(N,o(),O,G)}function Kl(N){for(var O=0,G=0;G<N.length;++G){var te=N.charCodeAt(G);te>=55296&&te<=57343&&(te=65536+((te&1023)<<10)|N.charCodeAt(++G)&1023),te<=127?++O:te<=2047?O+=2:te<=65535?O+=3:O+=4}return O}var ba=typeof TextDecoder!="undefined"?new cs("utf-16le"):void 0;function jr(N,O){a().set(N,O)}function nd(N,O,G){for(var te=0;te<N.length;++te)a()[O++>>0]=N.charCodeAt(te);G||(a()[O>>0]=0)}function Zl(N,O){return N%O>0&&(N+=O-N%O),N}var On,uh,ch,sd,dh,ph,cb,hh,fh;I&&(On=d.buffer);function nr(N){On=N,d.HEAP8=uh=new Int8Array(N),d.HEAP16=sd=new Int16Array(N),d.HEAP32=ph=new Int32Array(N),d.HEAPU8=ch=new Uint8Array(N),d.HEAPU16=dh=new Uint16Array(N),d.HEAPU32=cb=new Uint32Array(N),d.HEAPF32=hh=new Float32Array(N),d.HEAPF64=fh=new Float64Array(N)}var mh=d.INITIAL_MEMORY||16777216;if(I)$e=d.wasmMemory,On=d.buffer;else if(d.wasmMemory)$e=d.wasmMemory;else if($e=new WebAssembly.Memory({initial:mh/65536,maximum:32768,shared:!0}),!($e.buffer instanceof SharedArrayBuffer))throw Q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),k&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");$e&&(On=$e.buffer),mh=On.byteLength,nr(On);var Ts,Yl=[],va=[],x2=[],gh=[],ci=!1,b2=!1,yh=0;function di(){return ft||yh>0}function Mn(){if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)db(d.preRun.shift());wh(Yl)}function rd(){ci=!0,!I&&wh(va)}function v2(){I||(Me.terminateAllThreads(),b2=!0)}function w2(){if(!I){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;)ad(d.postRun.shift());wh(gh)}}function db(N){Yl.unshift(N)}function pb(N){va.unshift(N)}function ad(N){gh.unshift(N)}var wa=0,Ah=null,sr=null;function od(N){wa++,d.monitorRunDependencies&&d.monitorRunDependencies(wa)}function hb(N){if(wa--,d.monitorRunDependencies&&d.monitorRunDependencies(wa),wa==0&&(Ah!==null&&(clearInterval(Ah),Ah=null),sr)){var O=sr;sr=null,O()}}d.preloadedImages={},d.preloadedAudios={};function Jl(N){I?postMessage({cmd:"onAbort",arg:N}):d.onAbort&&d.onAbort(N),N="Aborted("+N+")",Q(N),yt=!0,Dn=1,N+=". Build with -s ASSERTIONS=1 for more info.";var O=new WebAssembly.RuntimeError(N);throw f(O),O}var k2="data:application/octet-stream;base64,";function xh(N){return N.startsWith(k2)}function bh(N){return N.startsWith("file://")}var zn;zn="tfjs-backend-wasm-threaded-simd.wasm",xh(zn)||(zn=R(zn));function vh(N){try{if(N==zn&&lt)return new Uint8Array(lt);if(D)return D(N);throw"both async and sync fetching of the wasm failed"}catch(O){Jl(O)}}function Ql(){if(!lt&&(b||v)){if(typeof fetch=="function"&&!bh(zn))return fetch(zn,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+zn+"'";return N.arrayBuffer()}).catch(function(){return vh(zn)});if(_)return new Promise(function(N,O){_(zn,function(G){N(new Uint8Array(G))},O)})}return Promise.resolve().then(function(){return vh(zn)})}function S2(){var N={env:Ph,wasi_snapshot_preview1:Ph};function O(Te,Fe){var Pt=Te.exports;if(d.asm=Pt,_2(d.asm.emscripten_tls_init),Ts=d.asm.__indirect_function_table,pb(d.asm.__wasm_call_ctors),wt=Fe,!I){var or=Me.unusedWorkers.length;Me.unusedWorkers.forEach(function(ir){Me.loadWasmModuleToWorker(ir,function(){--or||hb("wasm-instantiate")})})}}I||od("wasm-instantiate");function G(Te){O(Te.instance,Te.module)}function te(Te){return Ql().then(function(Fe){return WebAssembly.instantiate(Fe,N)}).then(function(Fe){return Fe}).then(Te,function(Fe){Q("failed to asynchronously prepare wasm: "+Fe),Jl(Fe)})}function ye(){return!lt&&typeof WebAssembly.instantiateStreaming=="function"&&!xh(zn)&&!bh(zn)&&typeof fetch=="function"?fetch(zn,{credentials:"same-origin"}).then(function(Te){var Fe=WebAssembly.instantiateStreaming(Te,N);return Fe.then(G,function(Pt){return Q("wasm streaming compile failed: "+Pt),Q("falling back to ArrayBuffer instantiation"),te(G)})}):te(G)}if(d.instantiateWasm)try{var xe=d.instantiateWasm(N,O);return xe}catch(Te){return Q("Module.instantiateWasm callback failed with error: "+Te),!1}return ye().catch(f),{}}var fb,mb,I2={};function wh(N){for(;N.length>0;){var O=N.shift();if(typeof O=="function"){O(d);continue}var G=O.func;typeof G=="number"?O.arg===void 0?tu(G)():tu(G)(O.arg):G(O.arg===void 0?null:O.arg)}}function eu(N){var O=X1(),G=N();return Lh(O),G}function jN(N){return N}function gb(N){var O=/\b_Z[\w\d_]+/g;return N.replace(O,function(G){var te=G;return G===te?G:te+" ["+G+"]"})}function C2(N){u()[N>>2]=0;var O=Me.pthreads[N];delete Me.pthreads[N],O.worker.terminate(),q1(N),Me.runningWorkers.splice(Me.runningWorkers.indexOf(O.worker),1),O.worker.pthread=void 0}function T2(N){var O=Me.pthreads[N];O.worker.postMessage({cmd:"cancel"})}function kh(N){var O=Me.pthreads[N];if(O){u()[N>>2]=0;var G=O.worker;Me.returnWorkerToPool(G)}}function Sh(N){FE(N)}function N2(N){if(N instanceof pd||N=="unwind")return Dn;A(1,N)}var Me={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){I?Me.initWorker():Me.initMainThread()},initMainThread:function(){for(var N=8,O=0;O<N;++O)Me.allocateUnusedWorker()},initWorker:function(){ft=!1},pthreads:{},setExitStatus:function(N){Dn=N},terminateAllThreads:function(){for(var N in Me.pthreads){var O=Me.pthreads[N];O&&O.worker&&Me.returnWorkerToPool(O.worker)}for(var G=0;G<Me.unusedWorkers.length;++G){var te=Me.unusedWorkers[G];te.terminate()}Me.unusedWorkers=[]},returnWorkerToPool:function(N){Me.runWithoutMainThreadQueuedCalls(function(){delete Me.pthreads[N.pthread.threadInfoStruct],Me.unusedWorkers.push(N),Me.runningWorkers.splice(Me.runningWorkers.indexOf(N),1),q1(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){u()[Eb>>2]=0;try{N()}finally{u()[Eb>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in Me.tlsInitFunctions)Me.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,O){N.onmessage=G=>{var te=G.data,ye=te.cmd;if(N.pthread&&(Me.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),te.targetThread&&te.targetThread!=zh()){var xe=Me.pthreads[te.targetThread];xe?xe.worker.postMessage(te,te.transferList):Q('Internal error! Worker sent a message "'+ye+'" to target pthread '+te.targetThread+", but that thread no longer exists!"),Me.currentProxiedOperationCallerThread=void 0;return}ye==="processQueuedMainThreadWork"?Sb():ye==="spawnThread"?Ch(te):ye==="cleanupThread"?kh(te.thread):ye==="killThread"?C2(te.thread):ye==="cancelThread"?T2(te.thread):ye==="loaded"?(N.loaded=!0,O&&O(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):ye==="print"?ee("Thread "+te.threadId+": "+te.text):ye==="printErr"?Q("Thread "+te.threadId+": "+te.text):ye==="alert"?alert("Thread "+te.threadId+": "+te.text):te.target==="setimmediate"?N.postMessage(te):ye==="onAbort"?d.onAbort&&d.onAbort(te.arg):Q("worker sent an unknown command "+ye),Me.currentProxiedOperationCallerThread=void 0},N.onerror=G=>{var te="worker sent an error!";throw Q(te+" "+G.filename+":"+G.lineno+": "+G.message),G},k&&(N.on("message",function(G){N.onmessage({data:G})}),N.on("error",function(G){N.onerror(G)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||s,wasmMemory:$e,wasmModule:wt})},allocateUnusedWorker:function(){var N=R("tfjs-backend-wasm-threaded-simd.worker.js");Me.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return Me.unusedWorkers.length==0&&(Me.allocateUnusedWorker(),Me.loadWasmModuleToWorker(Me.unusedWorkers[0])),Me.unusedWorkers.pop()}};function E2(){var N=zh(),O=u()[N+44>>2],G=u()[N+48>>2],te=O-G;Nb(O,te),Lh(O)}d.establishStackSpace=E2;function Ih(N){if(I)return fi(1,0,N);try{Sh(N)}catch(O){N2(O)}}var pi=[];function tu(N){var O=pi[N];return O||(N>=pi.length&&(pi.length=N+1),pi[N]=O=Ts.get(N)),O}function R2(N,O){return tu(N)(O)}d.invokeEntryPoint=R2;function yb(){var N=new Error;if(!N.stack){try{throw new Error}catch(O){N=O}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function _2(N,O,G){Me.tlsInitFunctions.push(N)}function Ab(N,O){Ts.set(N,O),pi[N]=O}var hi;k?hi=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:I?hi=()=>performance.now()-d.__performance_now_clock_drift:hi=()=>performance.now();var $2=!0;function D2(N){return u()[kb()>>2]=N,N}function P2(N,O){var G;if(N===0)G=Date.now();else if((N===1||N===4)&&$2)G=hi();else return D2(28),-1;return u()[O>>2]=G/1e3|0,u()[O+4>>2]=G%1e3*1e3*1e3|0,0}function F2(N,O){return P2(N,O)}function O2(N){Ib(N,!v,1,!b),Me.threadInit()}function M2(N){I?postMessage({cmd:"cleanupThread",thread:N}):kh(N)}function Ch(N){var O=Me.getNewWorker();if(!O)return 6;Me.runningWorkers.push(O);var G=Me.pthreads[N.pthread_ptr]={worker:O,threadInfoStruct:N.pthread_ptr};O.pthread=G;var te={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return O.runPthread=()=>{te.time=performance.now(),O.postMessage(te,N.transferList)},O.loaded&&(O.runPthread(),delete O.runPthread),0}function z2(N,O,G,te){if(typeof SharedArrayBuffer=="undefined")return Q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ye=[],xe=0;if(I&&(ye.length===0||xe))return Cb(687865856,N,O,G,te);if(xe)return xe;var Te={startRoutine:G,pthread_ptr:N,arg:te,transferList:ye};return I?(Te.cmd="spawnThread",postMessage(Te,ye),0):Ch(Te)}function L2(){return 2097152}function B2(N,O){if(N==O)postMessage({cmd:"processQueuedMainThreadWork"});else if(I)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var G=Me.pthreads[N],te=G&&G.worker;if(!te)return;te.postMessage({cmd:"processThreadQueue"})}return 1}function W2(){Jl("")}function V2(){k||v||J("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Th(){return 2147483648}function U2(N,O,G){o().copyWithin(N,O,O+G)}function G2(){return k?cR().cpus().length:navigator.hardwareConcurrency}function fi(N,O){var G=arguments.length-2,te=arguments;return eu(function(){for(var ye=G,xe=iu(ye*8),Te=xe>>3,Fe=0;Fe<G;Fe++){var Pt=te[2+Fe];p()[Te+Fe]=Pt}return Tb(N,ye,xe,O)})}var id=[];function H2(N,O,G){id.length=O;for(var te=G>>3,ye=0;ye<O;ye++)id[ye]=p()[te+ye];var xe=N<0,Te=xe?I2[-N-1]:c1[N];return Te.apply(null,id)}function j2(N){try{return $e.grow(N-On.byteLength+65535>>>16),nr($e.buffer),1}catch(O){}}function q2(N){var O=o().length;if(N=N>>>0,N<=O)return!1;var G=Th();if(N>G)return!1;for(var te=1;te<=4;te*=2){var ye=O*(1+.2/te);ye=Math.min(ye,N+100663296);var xe=Math.min(G,Zl(Math.max(N,ye),65536)),Te=j2(xe);if(Te)return!0}return!1}var Ke={inEventHandler:0,removeAllEventListeners:function(){for(var N=Ke.eventHandlers.length-1;N>=0;--N)Ke._removeHandler(N);Ke.eventHandlers=[],Ke.deferredCalls=[]},registerRemoveEventListeners:function(){Ke.removeEventListenersRegistered||(x2.push(Ke.removeAllEventListeners),Ke.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,O,G){function te(Te,Fe){if(Te.length!=Fe.length)return!1;for(var Pt in Te)if(Te[Pt]!=Fe[Pt])return!1;return!0}for(var ye in Ke.deferredCalls){var xe=Ke.deferredCalls[ye];if(xe.targetFunction==N&&te(xe.argsList,G))return}Ke.deferredCalls.push({targetFunction:N,precedence:O,argsList:G}),Ke.deferredCalls.sort(function(Te,Fe){return Te.precedence<Fe.precedence})},removeDeferredCalls:function(N){for(var O=0;O<Ke.deferredCalls.length;++O)Ke.deferredCalls[O].targetFunction==N&&(Ke.deferredCalls.splice(O,1),--O)},canPerformEventHandlerRequests:function(){return Ke.inEventHandler&&Ke.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Ke.canPerformEventHandlerRequests())for(var N=0;N<Ke.deferredCalls.length;++N){var O=Ke.deferredCalls[N];Ke.deferredCalls.splice(N,1),--N,O.targetFunction.apply(null,O.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,O){for(var G=0;G<Ke.eventHandlers.length;++G)Ke.eventHandlers[G].target==N&&(!O||O==Ke.eventHandlers[G].eventTypeString)&&Ke._removeHandler(G--)},_removeHandler:function(N){var O=Ke.eventHandlers[N];O.target.removeEventListener(O.eventTypeString,O.eventListenerFunc,O.useCapture),Ke.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var O=function(ye){++Ke.inEventHandler,Ke.currentEventHandler=N,Ke.runDeferredCalls(),N.handlerFunc(ye),Ke.runDeferredCalls(),--Ke.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=O,N.target.addEventListener(N.eventTypeString,O,N.useCapture),Ke.eventHandlers.push(N),Ke.registerRemoveEventListeners();else for(var G=0;G<Ke.eventHandlers.length;++G)Ke.eventHandlers[G].target==N.target&&Ke.eventHandlers[G].eventTypeString==N.eventTypeString&&Ke._removeHandler(G--)},queueEventHandlerOnThread_iiii:function(N,O,G,te,ye){eu(function(){var xe=iu(12);u()[xe>>2]=G,u()[xe+4>>2]=te,u()[xe+8>>2]=ye,j1(N,637534208,O,te,xe)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return Me.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function X2(N){var O=Kl(N)+1,G=H1(O);return Hr(N,G,O),G}function K2(N,O,G,te){eu(function(){var ye=iu(12),xe=0;O&&(xe=X2(O)),u()[ye>>2]=xe,u()[ye+4>>2]=G,u()[ye+8>>2]=te,j1(N,657457152,0,xe,ye)})}function Z2(N,O,G,te){O=O?Fn(O):"",K2(N,O,G,te)}function Y2(N){return N>2?Fn(N):N}var J2=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function Q2(N){N=Y2(N);var O=J2[N]||(typeof document!="undefined"?document.querySelector(N):void 0);return O}function ld(N){return Q2(N)}function Nh(N,O,G){var te=ld(N);if(!te)return-4;if(te.canvasSharedPtr&&(u()[te.canvasSharedPtr>>2]=O,u()[te.canvasSharedPtr+4>>2]=G),te.offscreenCanvas||!te.controlTransferredOffscreen){te.offscreenCanvas&&(te=te.offscreenCanvas);var ye=!1;if(te.GLctxObject&&te.GLctxObject.GLctx){var xe=te.GLctxObject.GLctx.getParameter(2978);ye=xe[0]===0&&xe[1]===0&&xe[2]===te.width&&xe[3]===te.height}te.width=O,te.height=G,ye&&te.GLctxObject.GLctx.viewport(0,0,O,G)}else if(te.canvasSharedPtr){var Te=u()[te.canvasSharedPtr+8>>2];return Z2(Te,N,O,G),1}else return-4;return 0}function Eh(N,O,G){return I?fi(2,1,N,O,G):Nh(N,O,G)}function e1(N,O,G){var te=ld(N);return te?Nh(N,O,G):Eh(N,O,G)}function t1(){throw"unwind"}function n1(N){var O=N.getExtension("ANGLE_instanced_arrays");if(O)return N.vertexAttribDivisor=function(G,te){O.vertexAttribDivisorANGLE(G,te)},N.drawArraysInstanced=function(G,te,ye,xe){O.drawArraysInstancedANGLE(G,te,ye,xe)},N.drawElementsInstanced=function(G,te,ye,xe,Te){O.drawElementsInstancedANGLE(G,te,ye,xe,Te)},1}function s1(N){var O=N.getExtension("OES_vertex_array_object");if(O)return N.createVertexArray=function(){return O.createVertexArrayOES()},N.deleteVertexArray=function(G){O.deleteVertexArrayOES(G)},N.bindVertexArray=function(G){O.bindVertexArrayOES(G)},N.isVertexArray=function(G){return O.isVertexArrayOES(G)},1}function r1(N){var O=N.getExtension("WEBGL_draw_buffers");if(O)return N.drawBuffers=function(G,te){O.drawBuffersWEBGL(G,te)},1}function a1(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var Dt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(O){Dt.lastError||(Dt.lastError=O)},getNewId:function(N){for(var O=Dt.counter++,G=N.length;G<O;G++)N[G]=null;return O},getSource:function(N,O,G,te){for(var ye="",xe=0;xe<O;++xe){var Te=te?u()[te+xe*4>>2]:-1;ye+=Fn(u()[G+xe*4>>2],Te<0?void 0:Te)}return ye},createContext:function(N,O){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(ye,xe){var Te=N.getContextSafariWebGL2Fixed(ye,xe);return ye=="webgl"==Te instanceof WebGLRenderingContext?Te:null});var G=N.getContext("webgl",O);if(!G)return 0;var te=Dt.registerContext(G,O);return te},registerContext:function(N,O){var G=H1(8);u()[G+4>>2]=zh();var te={handle:G,attributes:O,version:O.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=te),Dt.contexts[G]=te,(typeof O.enableExtensionsByDefault=="undefined"||O.enableExtensionsByDefault)&&Dt.initExtensions(te),G},makeContextCurrent:function(N){return Dt.currentContext=Dt.contexts[N],d.ctx=Dh=Dt.currentContext&&Dt.currentContext.GLctx,!(N&&!Dh)},getContext:function(N){return Dt.contexts[N]},deleteContext:function(N){Dt.currentContext===Dt.contexts[N]&&(Dt.currentContext=null),typeof Ke=="object"&&Ke.removeAllHandlersOnTarget(Dt.contexts[N].GLctx.canvas),Dt.contexts[N]&&Dt.contexts[N].GLctx.canvas&&(Dt.contexts[N].GLctx.canvas.GLctxObject=void 0),wb(Dt.contexts[N].handle),Dt.contexts[N]=null},initExtensions:function(N){if(N||(N=Dt.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var O=N.GLctx;n1(O),s1(O),r1(O),O.disjointTimerQueryExt=O.getExtension("EXT_disjoint_timer_query"),a1(O);var G=O.getSupportedExtensions()||[];G.forEach(function(te){!te.includes("lose_context")&&!te.includes("debug")&&O.getExtension(te)})}}},o1=["default","low-power","high-performance"];function i1(N,O){var G=O>>2,te=u()[G+6],ye={alpha:!!u()[G+0],depth:!!u()[G+1],stencil:!!u()[G+2],antialias:!!u()[G+3],premultipliedAlpha:!!u()[G+4],preserveDrawingBuffer:!!u()[G+5],powerPreference:o1[te],failIfMajorPerformanceCaveat:!!u()[G+7],majorVersion:u()[G+8],minorVersion:u()[G+9],enableExtensionsByDefault:u()[G+10],explicitSwapControl:u()[G+11],proxyContextToMainThread:u()[G+12],renderViaOffscreenBackBuffer:u()[G+13]},xe=ld(N);if(!xe||ye.explicitSwapControl)return 0;var Te=Dt.createContext(xe,ye);return Te}function l1(N,O){return i1(N,O)}var nu={mappings:{},buffers:[null,[],[]],printChar:function(N,O){var G=nu.buffers[N];O===0||O===10?((N===1?ee:Q)(Cs(G,0)),G.length=0):G.push(O)},varargs:void 0,get:function(){nu.varargs+=4;var N=u()[nu.varargs-4>>2];return N},getStr:function(N){var O=Fn(N);return O},get64:function(N,O){return N}};function Rh(N){return I?fi(3,1,N):0}function _h(N,O,G,te,ye){if(I)return fi(4,1,N,O,G,te,ye)}function $h(N,O,G,te){if(I)return fi(5,1,N,O,G,te);for(var ye=0,xe=0;xe<G;xe++){var Te=u()[O>>2],Fe=u()[O+4>>2];O+=8;for(var Pt=0;Pt<Fe;Pt++)nu.printChar(N,o()[Te+Pt]);ye+=Fe}return u()[te>>2]=ye,0}function u1(N){ze(N)}Me.init();var Dh,c1=[null,Ih,Eh,Rh,_h,$h],xb=!1,Ph={__clock_gettime:F2,__emscripten_init_main_thread_js:O2,__emscripten_thread_cleanup:M2,__pthread_create_js:z2,_emscripten_default_pthread_stack_size:L2,_emscripten_notify_thread_queue:B2,abort:W2,emscripten_check_blocking_allowed:V2,emscripten_get_heap_max:Th,emscripten_get_now:hi,emscripten_memcpy_big:U2,emscripten_num_logical_cores:G2,emscripten_receive_on_main_thread_js:H2,emscripten_resize_heap:q2,emscripten_set_canvas_element_size:e1,emscripten_unwind_to_js_event_loop:t1,emscripten_webgl_create_context:l1,exit:Sh,fd_close:Rh,fd_seek:_h,fd_write:$h,memory:$e||d.wasmMemory,setTempRet0:u1},bb=S2(),d1=d.___wasm_call_ctors=function(){return(d1=d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},p1=d._init=function(){return(p1=d._init=d.asm.init).apply(null,arguments)},h1=d._init_with_threads_count=function(){return(h1=d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},f1=d._get_threads_count=function(){return(f1=d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},m1=d._register_tensor=function(){return(m1=d._register_tensor=d.asm.register_tensor).apply(null,arguments)},g1=d._dispose_data=function(){return(g1=d._dispose_data=d.asm.dispose_data).apply(null,arguments)},y1=d._dispose=function(){return(y1=d._dispose=d.asm.dispose).apply(null,arguments)},A1=d._Abs=function(){return(A1=d._Abs=d.asm.Abs).apply(null,arguments)},x1=d._Add=function(){return(x1=d._Add=d.asm.Add).apply(null,arguments)},b1=d._AddN=function(){return(b1=d._AddN=d.asm.AddN).apply(null,arguments)},v1=d._All=function(){return(v1=d._All=d.asm.All).apply(null,arguments)},w1=d._Any=function(){return(w1=d._Any=d.asm.Any).apply(null,arguments)},k1=d._ArgMax=function(){return(k1=d._ArgMax=d.asm.ArgMax).apply(null,arguments)},S1=d._AvgPool=function(){return(S1=d._AvgPool=d.asm.AvgPool).apply(null,arguments)},I1=d._BatchMatMul=function(){return(I1=d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},C1=d._Ceil=function(){return(C1=d._Ceil=d.asm.Ceil).apply(null,arguments)},T1=d._ClipByValue=function(){return(T1=d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},N1=d._Conv2D=function(){return(N1=d._Conv2D=d.asm.Conv2D).apply(null,arguments)},E1=d._Conv2DBackpropInput=function(){return(E1=d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},R1=d._Cos=function(){return(R1=d._Cos=d.asm.Cos).apply(null,arguments)},_1=d._Cosh=function(){return(_1=d._Cosh=d.asm.Cosh).apply(null,arguments)},$1=d._CropAndResize=function(){return($1=d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},D1=d._Cumprod=function(){return(D1=d._Cumprod=d.asm.Cumprod).apply(null,arguments)},P1=d._Cumsum=function(){return(P1=d._Cumsum=d.asm.Cumsum).apply(null,arguments)},F1=d._DepthToSpace=function(){return(F1=d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},O1=d._DepthwiseConv2dNative=function(){return(O1=d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},M1=d._Elu=function(){return(M1=d._Elu=d.asm.Elu).apply(null,arguments)},z1=d._Equal=function(){return(z1=d._Equal=d.asm.Equal).apply(null,arguments)},L1=d._Exp=function(){return(L1=d._Exp=d.asm.Exp).apply(null,arguments)},B1=d._FlipLeftRight=function(){return(B1=d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},Fh=d._Floor=function(){return(Fh=d._Floor=d.asm.Floor).apply(null,arguments)},Oh=d._FloorDiv=function(){return(Oh=d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},ud=d._FusedBatchNorm=function(){return(ud=d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},W1=d._FusedConv2D=function(){return(W1=d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},V1=d._FusedDepthwiseConv2D=function(){return(V1=d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},su=d._Gather=function(){return(su=d._Gather=d.asm.Gather).apply(null,arguments)},cd=d._GatherNd=function(){return(cd=d._GatherNd=d.asm.GatherNd).apply(null,arguments)},dd=d._Greater=function(){return(dd=d._Greater=d.asm.Greater).apply(null,arguments)},vb=d._GreaterEqual=function(){return(vb=d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},ru=d._LeakyRelu=function(){return(ru=d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},au=d._Less=function(){return(au=d._Less=d.asm.Less).apply(null,arguments)},U1=d._LessEqual=function(){return(U1=d._LessEqual=d.asm.LessEqual).apply(null,arguments)},q=d._Log=function(){return(q=d._Log=d.asm.Log).apply(null,arguments)},se=d._LogicalAnd=function(){return(se=d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},Ae=d._Max=function(){return(Ae=d._Max=d.asm.Max).apply(null,arguments)},_e=d._MaxPool=function(){return(_e=d._MaxPool=d.asm.MaxPool).apply(null,arguments)},ut=d._Maximum=function(){return(ut=d._Maximum=d.asm.Maximum).apply(null,arguments)},pt=d._Mean=function(){return(pt=d._Mean=d.asm.Mean).apply(null,arguments)},Ze=d._Min=function(){return(Ze=d._Min=d.asm.Min).apply(null,arguments)},je=d._Minimum=function(){return(je=d._Minimum=d.asm.Minimum).apply(null,arguments)},Xt=d._MirrorPad=function(){return(Xt=d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},rr=d._Multiply=function(){return(rr=d._Multiply=d.asm.Multiply).apply(null,arguments)},ar=d._Neg=function(){return(ar=d._Neg=d.asm.Neg).apply(null,arguments)},ou=d._NonMaxSuppressionV3=function(){return(ou=d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},mi=d._NonMaxSuppressionV4=function(){return(mi=d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},G1=d._NonMaxSuppressionV5=function(){return(G1=d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},Ln=d._NotEqual=function(){return(Ln=d._NotEqual=d.asm.NotEqual).apply(null,arguments)},ka=d._OneHot=function(){return(ka=d._OneHot=d.asm.OneHot).apply(null,arguments)},Mh=d._PadV2=function(){return(Mh=d._PadV2=d.asm.PadV2).apply(null,arguments)},qN=d._Pow=function(){return(qN=d._Pow=d.asm.Pow).apply(null,arguments)},XN=d._Prelu=function(){return(XN=d._Prelu=d.asm.Prelu).apply(null,arguments)},KN=d._Prod=function(){return(KN=d._Prod=d.asm.Prod).apply(null,arguments)},ZN=d._RealDiv=function(){return(ZN=d._RealDiv=d.asm.RealDiv).apply(null,arguments)},YN=d._Relu=function(){return(YN=d._Relu=d.asm.Relu).apply(null,arguments)},JN=d._Relu6=function(){return(JN=d._Relu6=d.asm.Relu6).apply(null,arguments)},QN=d._ResizeBilinear=function(){return(QN=d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},eE=d._Reverse=function(){return(eE=d._Reverse=d.asm.Reverse).apply(null,arguments)},tE=d._RotateWithOffset=function(){return(tE=d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},nE=d._Round=function(){return(nE=d._Round=d.asm.Round).apply(null,arguments)},sE=d._Rsqrt=function(){return(sE=d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},rE=d._ScatterNd=function(){return(rE=d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},aE=d._SelectV2=function(){return(aE=d._SelectV2=d.asm.SelectV2).apply(null,arguments)},oE=d._Sigmoid=function(){return(oE=d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},iE=d._Sin=function(){return(iE=d._Sin=d.asm.Sin).apply(null,arguments)},lE=d._Softmax=function(){return(lE=d._Softmax=d.asm.Softmax).apply(null,arguments)},uE=d._SparseFillEmptyRows=function(){return(uE=d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},cE=d._SparseReshape=function(){return(cE=d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},dE=d._SparseSegmentReduction=function(){return(dE=d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},pE=d._Sqrt=function(){return(pE=d._Sqrt=d.asm.Sqrt).apply(null,arguments)},hE=d._Square=function(){return(hE=d._Square=d.asm.Square).apply(null,arguments)},fE=d._SquaredDifference=function(){return(fE=d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},mE=d._Step=function(){return(mE=d._Step=d.asm.Step).apply(null,arguments)},gE=d._StridedSlice=function(){return(gE=d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},yE=d._Sub=function(){return(yE=d._Sub=d.asm.Sub).apply(null,arguments)},AE=d._Sum=function(){return(AE=d._Sum=d.asm.Sum).apply(null,arguments)},xE=d._Tan=function(){return(xE=d._Tan=d.asm.Tan).apply(null,arguments)},bE=d._Tanh=function(){return(bE=d._Tanh=d.asm.Tanh).apply(null,arguments)},vE=d._Tile=function(){return(vE=d._Tile=d.asm.Tile).apply(null,arguments)},wE=d._TopK=function(){return(wE=d._TopK=d.asm.TopK).apply(null,arguments)},kE=d._Transform=function(){return(kE=d._Transform=d.asm.Transform).apply(null,arguments)},SE=d._Transpose=function(){return(SE=d._Transpose=d.asm.Transpose).apply(null,arguments)},IE=d.__FusedMatMul=function(){return(IE=d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},H1=d._malloc=function(){return(H1=d._malloc=d.asm.malloc).apply(null,arguments)},wb=d._free=function(){return(wb=d._free=d.asm.free).apply(null,arguments)},CE=d._emscripten_tls_init=function(){return(CE=d._emscripten_tls_init=d.asm.emscripten_tls_init).apply(null,arguments)},kb=d.___errno_location=function(){return(kb=d.___errno_location=d.asm.__errno_location).apply(null,arguments)},zh=d._pthread_self=function(){return(zh=d._pthread_self=d.asm.pthread_self).apply(null,arguments)},Sb=d._emscripten_main_thread_process_queued_calls=function(){return(Sb=d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},TE=d.__emscripten_thread_crashed=function(){return(TE=d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},Ib=d.__emscripten_thread_init=function(){return(Ib=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)},NE=d._emscripten_current_thread_process_queued_calls=function(){return(NE=d._emscripten_current_thread_process_queued_calls=d.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},EE=d._emscripten_main_browser_thread_id=function(){return(EE=d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},RE=d._emscripten_sync_run_in_main_thread_2=function(){return(RE=d._emscripten_sync_run_in_main_thread_2=d.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},Cb=d._emscripten_sync_run_in_main_thread_4=function(){return(Cb=d._emscripten_sync_run_in_main_thread_4=d.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},Tb=d._emscripten_run_in_main_runtime_thread_js=function(){return(Tb=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},j1=d._emscripten_dispatch_to_thread_=function(){return(j1=d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},q1=d.__emscripten_thread_free_data=function(){return(q1=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},_E=d.__emscripten_thread_exit=function(){return(_E=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},$E=d._memalign=function(){return($E=d._memalign=d.asm.memalign).apply(null,arguments)},Nb=d._emscripten_stack_set_limits=function(){return(Nb=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},X1=d.stackSave=function(){return(X1=d.stackSave=d.asm.stackSave).apply(null,arguments)},Lh=d.stackRestore=function(){return(Lh=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},iu=d.stackAlloc=function(){return(iu=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)},DE=d.dynCall_iijjiiii=function(){return(DE=d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},PE=d.dynCall_jiji=function(){return(PE=d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},Eb=d.__emscripten_allow_main_runtime_queued_calls=21456;d.cwrap=Pn,d.keepRuntimeAlive=di,d.PThread=Me,d.PThread=Me,d.wasmMemory=$e,d.ExitStatus=pd;var Bh;function pd(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}sr=function N(){Bh||K1(),Bh||(sr=N)};function K1(N){if(N=N||y,wa>0)return;if(I){h(d),rd(),postMessage({cmd:"loaded"});return}if(Mn(),wa>0)return;function O(){Bh||(Bh=!0,d.calledRun=!0,!yt&&(rd(),h(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),w2()))}d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),O()},1)):O()}d.run=K1;function FE(N,O){if(Dn=N,!O&&I)throw Ih(N),"unwind";di()||v2(),OE(N)}function OE(N){Dn=N,di()||(Me.terminateAllThreads(),d.onExit&&d.onExit(N),yt=!0),A(N,new pd(N))}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();K1();var Wh;m&&(Wh={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!m.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!m.unhandledRejection.indexOf(N)>-1})});var Vh;if(typeof WasmBackendModule!="undefined")Vh=WasmBackendModule;else if(typeof r!="undefined")Vh=r;else throw new Error("Could not find wasm module in post.js");if(Wh){var ME=Vh._dispose;Vh._dispose=function(){ME(),Wh.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),Wh.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),pR=dn({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},o,i;a.ready=new Promise(function(q,se){o=q,i=se});var l;typeof process!="undefined"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},a),c=[],p="./this.program",d=(q,se)=>{throw se},h=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function y(q){return a.locateFile?a.locateFile(q,g):g+q}var x,A,b,v;function k(q){if(q instanceof cd)return;_("exiting due to exception: "+q)}var I,E,R;m?(f?g=mf().dirname(g)+"/":g=__dirname+"/",R=()=>{E||(I=dy(),E=mf())},x=function(se,Ae){return R(),se=E.normalize(se),I.readFileSync(se,Ae?void 0:"utf8")},b=q=>{var se=x(q,!0);return se.buffer||(se=new Uint8Array(se)),se},A=(q,se,Ae)=>{R(),q=E.normalize(q),I.readFile(q,function(_e,ut){_e?Ae(_e):se(ut.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(q){if(!(q instanceof cd))throw q}),process.on("unhandledRejection",function(q){throw q}),d=(q,se)=>{if(sd())throw process.exitCode=q,se;k(se),process.exit(q)},a.inspect=function(){return"[Emscripten Module object]"}):(h||f)&&(f?g=self.location.href:typeof document!="undefined"&&document.currentScript&&(g=document.currentScript.src),s&&(g=s),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",x=q=>{var se=new XMLHttpRequest;return se.open("GET",q,!1),se.send(null),se.responseText},f&&(b=q=>{var se=new XMLHttpRequest;return se.open("GET",q,!1),se.responseType="arraybuffer",se.send(null),new Uint8Array(se.response)}),A=(q,se,Ae)=>{var _e=new XMLHttpRequest;_e.open("GET",q,!0),_e.responseType="arraybuffer",_e.onload=()=>{if(_e.status==200||_e.status==0&&_e.response){se(_e.response);return}Ae()},_e.onerror=Ae,_e.send(null)},v=q=>document.title=q);var P=a.print||console.log.bind(console),_=a.printErr||console.warn.bind(console);Object.assign(a,u),u=null,a.arguments&&(c=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(d=a.quit);var D=4;function C(q){C.shown||(C.shown={}),C.shown[q]||(C.shown[q]=1,_(q))}function F(q,se){if(typeof WebAssembly.Function=="function"){for(var Ae={i:"i32",j:"i64",f:"f32",d:"f64"},_e={parameters:[],results:se[0]=="v"?[]:[Ae[se[0]]]},ut=1;ut<se.length;++ut)_e.parameters.push(Ae[se[ut]]);return new WebAssembly.Function(_e,q)}var pt=[1,0,1,96],Ze=se.slice(0,1),je=se.slice(1),Xt={i:127,j:126,f:125,d:124};pt.push(je.length);for(var ut=0;ut<je.length;++ut)pt.push(Xt[je[ut]]);Ze=="v"?pt.push(0):pt=pt.concat([1,Xt[Ze]]),pt[1]=pt.length-2;var rr=new Uint8Array([0,97,115,109,1,0,0,0].concat(pt,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),ar=new WebAssembly.Module(rr),ou=new WebAssembly.Instance(ar,{e:{f:q}}),mi=ou.exports.f;return mi}var U=[],X;function z(){if(U.length)return U.pop();try{ba.grow(1)}catch(q){throw q instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":q}return ba.length-1}function Z(q,se){for(var Ae=q;Ae<q+se;Ae++){var _e=od(Ae);_e&&X.set(_e,Ae)}}var B=0,ee=q=>{B=q},Q;a.wasmBinary&&(Q=a.wasmBinary);var ae=a.noExitRuntime||!0;typeof WebAssembly!="object"&&ci("no native wasm support detected");var J,re=!1,ie;function me(q,se){q||ci(se)}function be(q){var se=a["_"+q];return se}function Ee(q,se,Ae,_e,ut){var pt={string:function(Ln){var ka=0;if(Ln!=null&&Ln!==0){var Mh=(Ln.length<<2)+1;ka=ud(Mh),ft(Ln,ka,Mh)}return ka},array:function(Ln){var ka=ud(Ln.length);return yt(Ln,ka),ka}};function Ze(Ln){return se==="string"?it(Ln):se==="boolean"?Boolean(Ln):Ln}var je=be(q),Xt=[],rr=0;if(_e)for(var ar=0;ar<_e.length;ar++){var ou=pt[Ae[ar]];ou?(rr===0&&(rr=Fh()),Xt[ar]=ou(_e[ar])):Xt[ar]=_e[ar]}var mi=je.apply(null,Xt);function G1(Ln){return rr!==0&&Oh(rr),Ze(Ln)}return mi=G1(mi),mi}function Re(q,se,Ae,_e){Ae=Ae||[];var ut=Ae.every(function(Ze){return Ze==="number"}),pt=se!=="string";return pt&&ut&&!_e?be(q):function(){return Ee(q,se,Ae,arguments,_e)}}var ze=1,Be=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function nt(q,se,Ae){for(var _e=se+Ae,ut=se;q[ut]&&!(ut>=_e);)++ut;if(ut-se>16&&q.subarray&&Be)return Be.decode(q.subarray(se,ut));for(var pt="";se<ut;){var Ze=q[se++];if(!(Ze&128)){pt+=String.fromCharCode(Ze);continue}var je=q[se++]&63;if((Ze&224)==192){pt+=String.fromCharCode((Ze&31)<<6|je);continue}var Xt=q[se++]&63;if((Ze&240)==224?Ze=(Ze&15)<<12|je<<6|Xt:Ze=(Ze&7)<<18|je<<12|Xt<<6|q[se++]&63,Ze<65536)pt+=String.fromCharCode(Ze);else{var rr=Ze-65536;pt+=String.fromCharCode(55296|rr>>10,56320|rr&1023)}}return pt}function it(q,se){return q?nt(Pn,q,se):""}function lt(q,se,Ae,_e){if(!(_e>0))return 0;for(var ut=Ae,pt=Ae+_e-1,Ze=0;Ze<q.length;++Ze){var je=q.charCodeAt(Ze);if(je>=55296&&je<=57343){var Xt=q.charCodeAt(++Ze);je=65536+((je&1023)<<10)|Xt&1023}if(je<=127){if(Ae>=pt)break;se[Ae++]=je}else if(je<=2047){if(Ae+1>=pt)break;se[Ae++]=192|je>>6,se[Ae++]=128|je&63}else if(je<=65535){if(Ae+2>=pt)break;se[Ae++]=224|je>>12,se[Ae++]=128|je>>6&63,se[Ae++]=128|je&63}else{if(Ae+3>=pt)break;se[Ae++]=240|je>>18,se[Ae++]=128|je>>12&63,se[Ae++]=128|je>>6&63,se[Ae++]=128|je&63}}return se[Ae]=0,Ae-ut}function ft(q,se,Ae){return lt(q,Pn,se,Ae)}function $e(q){for(var se=0,Ae=0;Ae<q.length;++Ae){var _e=q.charCodeAt(Ae);_e>=55296&&_e<=57343&&(_e=65536+((_e&1023)<<10)|q.charCodeAt(++Ae)&1023),_e<=127?++se:_e<=2047?se+=2:_e<=65535?se+=3:se+=4}return se}var wt=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):void 0;function yt(q,se){nn.set(q,se)}function Dn(q,se,Ae){for(var _e=0;_e<q.length;++_e)nn[se++>>0]=q.charCodeAt(_e);Ae||(nn[se>>0]=0)}function qt(q,se){return q%se>0&&(q+=se-q%se),q}var ls,nn,Pn,us,cs,kn,Cs,Fn,Gr;function Hr(q){ls=q,a.HEAP8=nn=new Int8Array(q),a.HEAP16=us=new Int16Array(q),a.HEAP32=kn=new Int32Array(q),a.HEAPU8=Pn=new Uint8Array(q),a.HEAPU16=cs=new Uint16Array(q),a.HEAPU32=Cs=new Uint32Array(q),a.HEAPF32=Fn=new Float32Array(q),a.HEAPF64=Gr=new Float64Array(q)}var Kl=a.INITIAL_MEMORY||16777216,ba,jr=[],nd=[],Zl=[],On=!1,uh=!1,ch=0;function sd(){return ae||ch>0}function dh(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)fh(a.preRun.shift());ad(jr)}function ph(){On=!0,ad(nd)}function cb(){uh=!0}function hh(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)mh(a.postRun.shift());ad(Zl)}function fh(q){jr.unshift(q)}function nr(q){nd.unshift(q)}function mh(q){Zl.unshift(q)}var Ts=0,Yl=null,va=null;function x2(q){Ts++,a.monitorRunDependencies&&a.monitorRunDependencies(Ts)}function gh(q){if(Ts--,a.monitorRunDependencies&&a.monitorRunDependencies(Ts),Ts==0&&(Yl!==null&&(clearInterval(Yl),Yl=null),va)){var se=va;va=null,se()}}a.preloadedImages={},a.preloadedAudios={};function ci(q){a.onAbort&&a.onAbort(q),q="Aborted("+q+")",_(q),re=!0,ie=1,q+=". Build with -s ASSERTIONS=1 for more info.";var se=new WebAssembly.RuntimeError(q);throw i(se),se}var b2="data:application/octet-stream;base64,";function yh(q){return q.startsWith(b2)}function di(q){return q.startsWith("file://")}var Mn;Mn="tfjs-backend-wasm.wasm",yh(Mn)||(Mn=y(Mn));function rd(q){try{if(q==Mn&&Q)return new Uint8Array(Q);if(b)return b(q);throw"both async and sync fetching of the wasm failed"}catch(se){ci(se)}}function v2(){if(!Q&&(h||f)){if(typeof fetch=="function"&&!di(Mn))return fetch(Mn,{credentials:"same-origin"}).then(function(q){if(!q.ok)throw"failed to load wasm binary file at '"+Mn+"'";return q.arrayBuffer()}).catch(function(){return rd(Mn)});if(A)return new Promise(function(q,se){A(Mn,function(Ae){q(new Uint8Array(Ae))},se)})}return Promise.resolve().then(function(){return rd(Mn)})}function w2(){var q={env:eu,wasi_snapshot_preview1:eu};function se(Ze,je){var Xt=Ze.exports;a.asm=Xt,J=a.asm.memory,Hr(J.buffer),ba=a.asm.__indirect_function_table,nr(a.asm.__wasm_call_ctors),gh("wasm-instantiate")}x2("wasm-instantiate");function Ae(Ze){se(Ze.instance)}function _e(Ze){return v2().then(function(je){return WebAssembly.instantiate(je,q)}).then(function(je){return je}).then(Ze,function(je){_("failed to asynchronously prepare wasm: "+je),ci(je)})}function ut(){return!Q&&typeof WebAssembly.instantiateStreaming=="function"&&!yh(Mn)&&!di(Mn)&&typeof fetch=="function"?fetch(Mn,{credentials:"same-origin"}).then(function(Ze){var je=WebAssembly.instantiateStreaming(Ze,q);return je.then(Ae,function(Xt){return _("wasm streaming compile failed: "+Xt),_("falling back to ArrayBuffer instantiation"),_e(Ae)})}):_e(Ae)}if(a.instantiateWasm)try{var pt=a.instantiateWasm(q,se);return pt}catch(Ze){return _("Module.instantiateWasm callback failed with error: "+Ze),!1}return ut().catch(i),{}}var db,pb;function ad(q){for(;q.length>0;){var se=q.shift();if(typeof se=="function"){se(a);continue}var Ae=se.func;typeof Ae=="number"?se.arg===void 0?od(Ae)():od(Ae)(se.arg):Ae(se.arg===void 0?null:se.arg)}}function wa(q){return q}function Ah(q){var se=/\b_Z[\w\d_]+/g;return q.replace(se,function(Ae){var _e=Ae;return Ae===_e?Ae:_e+" ["+Ae+"]"})}var sr=[];function od(q){var se=sr[q];return se||(q>=sr.length&&(sr.length=q+1),sr[q]=se=ba.get(q)),se}function hb(){var q=new Error;if(!q.stack){try{throw new Error}catch(se){q=se}if(!q.stack)return"(no stack trace available)"}return q.stack.toString()}function Jl(q,se){ba.set(q,se),sr[q]=se}function k2(){ci("")}function xh(q,se,Ae){Pn.copyWithin(q,se,se+Ae)}function bh(){return 2147483648}function zn(q){try{return J.grow(q-ls.byteLength+65535>>>16),Hr(J.buffer),1}catch(se){}}function vh(q){var se=Pn.length;q=q>>>0;var Ae=bh();if(q>Ae)return!1;for(var _e=1;_e<=4;_e*=2){var ut=se*(1+.2/_e);ut=Math.min(ut,q+100663296);var pt=Math.min(Ae,qt(Math.max(q,ut),65536)),Ze=zn(pt);if(Ze)return!0}return!1}var Ql={mappings:{},buffers:[null,[],[]],printChar:function(q,se){var Ae=Ql.buffers[q];se===0||se===10?((q===1?P:_)(nt(Ae,0)),Ae.length=0):Ae.push(se)},varargs:void 0,get:function(){Ql.varargs+=4;var q=kn[Ql.varargs-4>>2];return q},getStr:function(q){var se=it(q);return se},get64:function(q,se){return q}};function S2(q){return 0}function fb(q,se,Ae,_e,ut){}function mb(q,se,Ae,_e){for(var ut=0,pt=0;pt<Ae;pt++){var Ze=kn[se>>2],je=kn[se+4>>2];se+=8;for(var Xt=0;Xt<je;Xt++)Ql.printChar(q,Pn[Ze+Xt]);ut+=je}return kn[_e>>2]=ut,0}function I2(q){ee(q)}var wh=!1,eu={abort:k2,emscripten_memcpy_big:xh,emscripten_resize_heap:vh,fd_close:S2,fd_seek:fb,fd_write:mb,setTempRet0:I2},jN=w2(),gb=a.___wasm_call_ctors=function(){return(gb=a.___wasm_call_ctors=a.asm.__wasm_call_ctors).apply(null,arguments)},C2=a._init=function(){return(C2=a._init=a.asm.init).apply(null,arguments)},T2=a._init_with_threads_count=function(){return(T2=a._init_with_threads_count=a.asm.init_with_threads_count).apply(null,arguments)},kh=a._get_threads_count=function(){return(kh=a._get_threads_count=a.asm.get_threads_count).apply(null,arguments)},Sh=a._register_tensor=function(){return(Sh=a._register_tensor=a.asm.register_tensor).apply(null,arguments)},N2=a._dispose_data=function(){return(N2=a._dispose_data=a.asm.dispose_data).apply(null,arguments)},Me=a._dispose=function(){return(Me=a._dispose=a.asm.dispose).apply(null,arguments)},E2=a._Abs=function(){return(E2=a._Abs=a.asm.Abs).apply(null,arguments)},Ih=a._Add=function(){return(Ih=a._Add=a.asm.Add).apply(null,arguments)},pi=a._AddN=function(){return(pi=a._AddN=a.asm.AddN).apply(null,arguments)},tu=a._All=function(){return(tu=a._All=a.asm.All).apply(null,arguments)},R2=a._Any=function(){return(R2=a._Any=a.asm.Any).apply(null,arguments)},yb=a._ArgMax=function(){return(yb=a._ArgMax=a.asm.ArgMax).apply(null,arguments)},_2=a._AvgPool=function(){return(_2=a._AvgPool=a.asm.AvgPool).apply(null,arguments)},Ab=a._BatchMatMul=function(){return(Ab=a._BatchMatMul=a.asm.BatchMatMul).apply(null,arguments)},hi=a._Ceil=function(){return(hi=a._Ceil=a.asm.Ceil).apply(null,arguments)},$2=a._ClipByValue=function(){return($2=a._ClipByValue=a.asm.ClipByValue).apply(null,arguments)},D2=a._Conv2D=function(){return(D2=a._Conv2D=a.asm.Conv2D).apply(null,arguments)},P2=a._Conv2DBackpropInput=function(){return(P2=a._Conv2DBackpropInput=a.asm.Conv2DBackpropInput).apply(null,arguments)},F2=a._Cos=function(){return(F2=a._Cos=a.asm.Cos).apply(null,arguments)},O2=a._Cosh=function(){return(O2=a._Cosh=a.asm.Cosh).apply(null,arguments)},M2=a._CropAndResize=function(){return(M2=a._CropAndResize=a.asm.CropAndResize).apply(null,arguments)},Ch=a._Cumprod=function(){return(Ch=a._Cumprod=a.asm.Cumprod).apply(null,arguments)},z2=a._Cumsum=function(){return(z2=a._Cumsum=a.asm.Cumsum).apply(null,arguments)},L2=a._DepthToSpace=function(){return(L2=a._DepthToSpace=a.asm.DepthToSpace).apply(null,arguments)},B2=a._DepthwiseConv2dNative=function(){return(B2=a._DepthwiseConv2dNative=a.asm.DepthwiseConv2dNative).apply(null,arguments)},W2=a._Elu=function(){return(W2=a._Elu=a.asm.Elu).apply(null,arguments)},V2=a._Equal=function(){return(V2=a._Equal=a.asm.Equal).apply(null,arguments)},Th=a._Exp=function(){return(Th=a._Exp=a.asm.Exp).apply(null,arguments)},U2=a._FlipLeftRight=function(){return(U2=a._FlipLeftRight=a.asm.FlipLeftRight).apply(null,arguments)},G2=a._Floor=function(){return(G2=a._Floor=a.asm.Floor).apply(null,arguments)},fi=a._FloorDiv=function(){return(fi=a._FloorDiv=a.asm.FloorDiv).apply(null,arguments)},id=a._FusedBatchNorm=function(){return(id=a._FusedBatchNorm=a.asm.FusedBatchNorm).apply(null,arguments)},H2=a._FusedConv2D=function(){return(H2=a._FusedConv2D=a.asm.FusedConv2D).apply(null,arguments)},j2=a._FusedDepthwiseConv2D=function(){return(j2=a._FusedDepthwiseConv2D=a.asm.FusedDepthwiseConv2D).apply(null,arguments)},q2=a._Gather=function(){return(q2=a._Gather=a.asm.Gather).apply(null,arguments)},Ke=a._GatherNd=function(){return(Ke=a._GatherNd=a.asm.GatherNd).apply(null,arguments)},X2=a._Greater=function(){return(X2=a._Greater=a.asm.Greater).apply(null,arguments)},K2=a._GreaterEqual=function(){return(K2=a._GreaterEqual=a.asm.GreaterEqual).apply(null,arguments)},Z2=a._LeakyRelu=function(){return(Z2=a._LeakyRelu=a.asm.LeakyRelu).apply(null,arguments)},Y2=a._Less=function(){return(Y2=a._Less=a.asm.Less).apply(null,arguments)},J2=a._LessEqual=function(){return(J2=a._LessEqual=a.asm.LessEqual).apply(null,arguments)},Q2=a._Log=function(){return(Q2=a._Log=a.asm.Log).apply(null,arguments)},ld=a._LogicalAnd=function(){return(ld=a._LogicalAnd=a.asm.LogicalAnd).apply(null,arguments)},Nh=a._Max=function(){return(Nh=a._Max=a.asm.Max).apply(null,arguments)},Eh=a._MaxPool=function(){return(Eh=a._MaxPool=a.asm.MaxPool).apply(null,arguments)},e1=a._Maximum=function(){return(e1=a._Maximum=a.asm.Maximum).apply(null,arguments)},t1=a._Mean=function(){return(t1=a._Mean=a.asm.Mean).apply(null,arguments)},n1=a._Min=function(){return(n1=a._Min=a.asm.Min).apply(null,arguments)},s1=a._Minimum=function(){return(s1=a._Minimum=a.asm.Minimum).apply(null,arguments)},r1=a._MirrorPad=function(){return(r1=a._MirrorPad=a.asm.MirrorPad).apply(null,arguments)},a1=a._Multiply=function(){return(a1=a._Multiply=a.asm.Multiply).apply(null,arguments)},Dt=a._Neg=function(){return(Dt=a._Neg=a.asm.Neg).apply(null,arguments)},o1=a._NonMaxSuppressionV3=function(){return(o1=a._NonMaxSuppressionV3=a.asm.NonMaxSuppressionV3).apply(null,arguments)},i1=a._NonMaxSuppressionV4=function(){return(i1=a._NonMaxSuppressionV4=a.asm.NonMaxSuppressionV4).apply(null,arguments)},l1=a._NonMaxSuppressionV5=function(){return(l1=a._NonMaxSuppressionV5=a.asm.NonMaxSuppressionV5).apply(null,arguments)},nu=a._NotEqual=function(){return(nu=a._NotEqual=a.asm.NotEqual).apply(null,arguments)},Rh=a._OneHot=function(){return(Rh=a._OneHot=a.asm.OneHot).apply(null,arguments)},_h=a._PadV2=function(){return(_h=a._PadV2=a.asm.PadV2).apply(null,arguments)},$h=a._Pow=function(){return($h=a._Pow=a.asm.Pow).apply(null,arguments)},u1=a._Prelu=function(){return(u1=a._Prelu=a.asm.Prelu).apply(null,arguments)},Dh=a._Prod=function(){return(Dh=a._Prod=a.asm.Prod).apply(null,arguments)},c1=a._RealDiv=function(){return(c1=a._RealDiv=a.asm.RealDiv).apply(null,arguments)},xb=a._Relu=function(){return(xb=a._Relu=a.asm.Relu).apply(null,arguments)},Ph=a._Relu6=function(){return(Ph=a._Relu6=a.asm.Relu6).apply(null,arguments)},bb=a._ResizeBilinear=function(){return(bb=a._ResizeBilinear=a.asm.ResizeBilinear).apply(null,arguments)},d1=a._Reverse=function(){return(d1=a._Reverse=a.asm.Reverse).apply(null,arguments)},p1=a._RotateWithOffset=function(){return(p1=a._RotateWithOffset=a.asm.RotateWithOffset).apply(null,arguments)},h1=a._Round=function(){return(h1=a._Round=a.asm.Round).apply(null,arguments)},f1=a._Rsqrt=function(){return(f1=a._Rsqrt=a.asm.Rsqrt).apply(null,arguments)},m1=a._ScatterNd=function(){return(m1=a._ScatterNd=a.asm.ScatterNd).apply(null,arguments)},g1=a._SelectV2=function(){return(g1=a._SelectV2=a.asm.SelectV2).apply(null,arguments)},y1=a._Sigmoid=function(){return(y1=a._Sigmoid=a.asm.Sigmoid).apply(null,arguments)},A1=a._Sin=function(){return(A1=a._Sin=a.asm.Sin).apply(null,arguments)},x1=a._Softmax=function(){return(x1=a._Softmax=a.asm.Softmax).apply(null,arguments)},b1=a._SparseFillEmptyRows=function(){return(b1=a._SparseFillEmptyRows=a.asm.SparseFillEmptyRows).apply(null,arguments)},v1=a._SparseReshape=function(){return(v1=a._SparseReshape=a.asm.SparseReshape).apply(null,arguments)},w1=a._SparseSegmentReduction=function(){return(w1=a._SparseSegmentReduction=a.asm.SparseSegmentReduction).apply(null,arguments)},k1=a._Sqrt=function(){return(k1=a._Sqrt=a.asm.Sqrt).apply(null,arguments)},S1=a._Square=function(){return(S1=a._Square=a.asm.Square).apply(null,arguments)},I1=a._SquaredDifference=function(){return(I1=a._SquaredDifference=a.asm.SquaredDifference).apply(null,arguments)},C1=a._Step=function(){return(C1=a._Step=a.asm.Step).apply(null,arguments)},T1=a._StridedSlice=function(){return(T1=a._StridedSlice=a.asm.StridedSlice).apply(null,arguments)},N1=a._Sub=function(){return(N1=a._Sub=a.asm.Sub).apply(null,arguments)},E1=a._Sum=function(){return(E1=a._Sum=a.asm.Sum).apply(null,arguments)},R1=a._Tan=function(){return(R1=a._Tan=a.asm.Tan).apply(null,arguments)},_1=a._Tanh=function(){return(_1=a._Tanh=a.asm.Tanh).apply(null,arguments)},$1=a._Tile=function(){return($1=a._Tile=a.asm.Tile).apply(null,arguments)},D1=a._TopK=function(){return(D1=a._TopK=a.asm.TopK).apply(null,arguments)},P1=a._Transform=function(){return(P1=a._Transform=a.asm.Transform).apply(null,arguments)},F1=a._Transpose=function(){return(F1=a._Transpose=a.asm.Transpose).apply(null,arguments)},O1=a.__FusedMatMul=function(){return(O1=a.__FusedMatMul=a.asm._FusedMatMul).apply(null,arguments)},M1=a._malloc=function(){return(M1=a._malloc=a.asm.malloc).apply(null,arguments)},z1=a._free=function(){return(z1=a._free=a.asm.free).apply(null,arguments)},L1=a.___errno_location=function(){return(L1=a.___errno_location=a.asm.__errno_location).apply(null,arguments)},B1=a._emscripten_main_thread_process_queued_calls=function(){return(B1=a._emscripten_main_thread_process_queued_calls=a.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Fh=a.stackSave=function(){return(Fh=a.stackSave=a.asm.stackSave).apply(null,arguments)},Oh=a.stackRestore=function(){return(Oh=a.stackRestore=a.asm.stackRestore).apply(null,arguments)},ud=a.stackAlloc=function(){return(ud=a.stackAlloc=a.asm.stackAlloc).apply(null,arguments)},W1=a.dynCall_iijjiiii=function(){return(W1=a.dynCall_iijjiiii=a.asm.dynCall_iijjiiii).apply(null,arguments)},V1=a.dynCall_jiji=function(){return(V1=a.dynCall_jiji=a.asm.dynCall_jiji).apply(null,arguments)};a.cwrap=Re;var su;function cd(q){this.name="ExitStatus",this.message="Program terminated with exit("+q+")",this.status=q}va=function q(){su||dd(),su||(va=q)};function dd(q){if(q=q||c,Ts>0||(dh(),Ts>0))return;function se(){su||(su=!0,a.calledRun=!0,!re&&(ph(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),hh()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),se()},1)):se()}a.run=dd;function vb(q){ie=q,sd()||(a.onExit&&a.onExit(q),re=!0),d(q,new cd(q))}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();dd();var ru;l&&(ru={uncaughtException:process.listeners("uncaughtException").filter(function(q){return!l.uncaughtException.indexOf(q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(q){return!l.unhandledRejection.indexOf(q)>-1})});var au;if(typeof r!="undefined")au=r;else if(typeof WasmBackendModuleThreadedSimd!="undefined")au=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(ru){var U1=au._dispose;au._dispose=function(){U1(),ru.uncaughtException.forEach(function(q){process.removeListener("uncaughtException",q)}),ru.unhandledRejection.forEach(function(q){process.removeListener("unhandledRejection",q)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),hR=1e-7,fR=1e-4,Zd=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Ou=class{refCount(e){return Ns("refCount")}incRef(e){return Ns("incRef")}timerAvailable(){return!0}time(e){return Ns("time")}read(e){return Ns("read")}readSync(e){return Ns("readSync")}readToGPU(e,t){return Ns("readToGPU")}numDataIds(){return Ns("numDataIds")}disposeData(e,t){return Ns("disposeData")}write(e,t,n){return Ns("write")}move(e,t,n,s,r){return Ns("move")}memory(){return Ns("memory")}floatPrecision(){return Ns("floatPrecision")}epsilon(){return this.floatPrecision()===32?hR:fR}dispose(){return Ns("dispose")}};function Ns(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function w4(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,gf(e,t,n)}function mR(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,gf(e,n,s),gf(t,n,s)}function Od(e,t,n){return Math.max(e,Math.min(t,n))}function gR(e){return e%2===0?e:e+1}function gf(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function yR(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function AR(e,t){let n=Math.random();return t*n+(1-n)*e}function xR(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function M(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function jn(e,t,n=""){M(Ya(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Gi(e){M(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function $i(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||Sn(e)&&!n)for(let s=0;s<e.length;++s)$i(e[s],t,n);else t.push(e);return t}function Tt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function bR(e){return e.length===0}function Ya(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function wu(e){return e%1===0}function vR(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function wR(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function kR(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return w4(t),t}function _d(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function SR(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function IR(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function qs(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),M(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),M(e.every(s=>wu(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function k4(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:qs(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function S4(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function I4(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function C4(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function T4(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function CR(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function Sn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function cg(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function N4(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Ra(e){return typeof e=="string"||e instanceof String}function E4(e){return typeof e=="boolean"}function R4(e){return typeof e=="number"}function Kf(e){return Array.isArray(e)?Kf(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":R4(e)?"float32":Ra(e)?"string":E4(e)?"bool":"float32"}function Fa(e){return!!(e&&e.constructor&&e.call&&e.apply)}function yf(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Mu(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function _4(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<a;l++)r[l]=_4(e+l*i,o,n,s)}return r}function yu(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return _4(0,e,t,n)}function py(e,t){let n=Zf(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Zf(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function TR(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return yu(e,new Float32Array(n));if(t==="int32")return yu(e,new Int32Array(n));if(t==="bool")return yu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function hy(e){e.forEach(t=>{M(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function NR(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function ER(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function fy(e){return e&&e.then&&typeof e.then=="function"}var Db="tfjsflags",$4=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=RR,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(fy(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);Db in e&&e[Db].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=$R(s,r)})}};function RR(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(_R(t,s[0],s[1]),s.join("="))),t}function _R(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function $R(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Y(){return br}var br=null;function DR(e){br=e}var Y1;function D4(){if(Y1==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");Y1=e}return Y1}function PR(){let e=D4();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function my(e,t){let n=PR();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var Hi="Abs",zu="Acos",Lu="Acosh",ta="Add",Ja="AddN",Bu="All",Wu="Any",Qa="ArgMax",Vu="ArgMin",Uu="Asin",Gu="Asinh",Hu="Atan",ju="Atanh",qu="Atan2",eo="AvgPool",Yf="AvgPoolGrad",Yd="AvgPool3D",Jf="AvgPool3DGrad",to="BatchMatMul",ji="BatchToSpaceND",Qf="Bincount",P4="BroadcastTo",em="BroadcastArgs",no="Cast",so="Ceil",na="ClipByValue",Jd="Complex",Qd="ComplexAbs",qi="Concat",ro="Conv2D",tm="Conv2DBackpropFilter",ao="Conv2DBackpropInput",ep="Conv3D",nm="Conv3DBackpropFilterV2",sm="Conv3DBackpropInputV2",oo="Cos",io="Cosh",Xi="Cumprod",lo="Cumsum",Ki="CropAndResize",rm="DenseBincount",Zi="DepthToSpace",uo="DepthwiseConv2dNative",am="DepthwiseConv2dNativeBackpropFilter",om="DepthwiseConv2dNativeBackpropInput",im="Diag",tp="Dilation2D",Af="Dilation2DBackpropInput",xf="Dilation2DBackpropFilter",co="RealDiv",np="Einsum",po="Elu",lm="EluGrad",Xu="Erf",Yi="Equal",ho="Exp",Ji="ExpandDims",Qi="Expm1",um="FFT",Ku="Fill",el="FlipLeftRight",fo="Floor",mo="FloorDiv",go="FusedBatchNorm",tl="GatherV2",nl="GatherNd",sl="Greater",yo="GreaterEqual",Ao="Identity",cm="IFFT",sp="Imag",Zu="IsFinite",Yu="IsInf",Ju="IsNan",xo="LeakyRelu",rl="Less",al="LessEqual",dm="LinSpace",bo="Log",Qu="Log1p",ol="LogicalAnd",ec="LogicalNot",rp="LogicalOr",F4="LogSoftmax",ap="LRN",pm="LRNGrad",vo="Max",wo="Maximum",ko="MaxPool",hm="MaxPoolGrad",op="MaxPool3D",fm="MaxPool3DGrad",mm="MaxPoolWithArgmax",So="Mean",Io="Min",Co="Minimum",To="MirrorPad",tc="Mod",gm="Multinomial",No="Multiply",il="Neg",ll="NotEqual",ul="NonMaxSuppressionV3",nc="NonMaxSuppressionV4",cl="NonMaxSuppressionV5",dl="OnesLike",pl="OneHot",hl="Pack",Eo="PadV2",FR="Pool",Ro="Pow",_o="Prelu",$o="Prod",sc="Range",ip="Real",rc="Reciprocal",Do="Relu",fl="Reshape",ac="ResizeNearestNeighbor",ym="ResizeNearestNeighborGrad",Po="ResizeBilinear",Am="ResizeBilinearGrad",Fo="Relu6",ml="Reverse",gl="Round",Oo="Rsqrt",yl="ScatterNd",Al="Select",oc="Selu",xl="Slice",Mo="Sin",bl="Sinh",ic="Sign",zo="Sigmoid",lc="Softplus",Lo="Sqrt",Bo="Sum",vl="SpaceToBatchND",wl="SplitV",Wo="Softmax",lp="SparseFillEmptyRows",uc="SparseReshape",up="SparseSegmentMean",cp="SparseSegmentSum",dp="SparseToDense",Vo="SquaredDifference",cc="Square",kl="StridedSlice",pp="StringNGrams",xm="StringSplit",bm="StringToHashBucketFast",Uo="Sub",Sl="Tan",Go="Tanh",sa="Tile",Il="TopK",Cl="Transform",Ho="Transpose",vm="Unique",Tl="Unpack",hp="UnsortedSegmentSum",Nl="ZerosLike",jo="Step",Md="FromPixels",El="RotateWithOffset",Oa="_FusedMatMul",Ma="FusedConv2D",za="FusedDepthwiseConv2D";function Ea(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...e)}function OR(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...e)}var ku=my("kernelRegistry",()=>new Map),zd=my("gradRegistry",()=>new Map);function bf(e,t){let n=gy(e,t);return ku.get(n)}function dg(e){return zd.get(e)}function $r(e){let t=ku.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function Xs(e){let{kernelName:t,backendName:n}=e,s=gy(t,n);ku.has(s)&&Ea(`The kernel '${t}' for backend '${n}' is already registered`),ku.set(s,e)}function O4(e){let{kernelName:t}=e;zd.has(t)&&Y().getBool("DEBUG")&&Ea(`Overriding the gradient for '${t}'`),zd.set(t,e)}function MR(e,t){let n=gy(e,t);if(!ku.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ku.delete(n)}function zR(e){if(!zd.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);zd.delete(e)}function LR(e,t){$r(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});Xs(r)})}function gy(e,t){return`${t}_${e}`}var w={};Le(w,{arraysEqual:()=>Ya,assert:()=>M,assertNonNegativeIntegerDimensions:()=>hy,assertNonNull:()=>Gi,assertShapesMatch:()=>jn,bytesFromStringArray:()=>N4,bytesPerElement:()=>cg,checkConversionForErrors:()=>C4,clamp:()=>Od,computeStrides:()=>Mu,createScalarValue:()=>HR,createShuffledIndices:()=>kR,decodeString:()=>vf,distSquared:()=>xR,encodeString:()=>mp,fetch:()=>qR,fingerPrint64:()=>GR,flatten:()=>$i,getArrayFromDType:()=>I4,getTypedArrayFromDType:()=>S4,hasEncodingLoss:()=>CR,hexToLong:()=>fp,indexToLoc:()=>ER,inferDtype:()=>Kf,inferFromImplicitShape:()=>IR,isBoolean:()=>E4,isFunction:()=>Fa,isInt:()=>wu,isNumber:()=>R4,isPromise:()=>fy,isScalarShape:()=>bR,isString:()=>Ra,isTypedArray:()=>Sn,isValidDtype:()=>T4,locToIndex:()=>NR,makeOnesTypedArray:()=>py,makeZerosNestedTypedArray:()=>TR,makeZerosTypedArray:()=>Zf,nearestDivisor:()=>yf,nearestLargerEven:()=>gR,now:()=>Ld,parseAxisParam:()=>qs,randUniform:()=>AR,repeatedTry:()=>SR,rightPad:()=>_d,shuffle:()=>w4,shuffleCombo:()=>mR,sizeFromShape:()=>Tt,sizeToSquarishShape:()=>wR,squeezeShape:()=>k4,sum:()=>yR,swap:()=>gf,tanh:()=>vR,toNestedArray:()=>yu,toTypedArray:()=>wm});var Pb=Ui(YE()),vi=Pb.default||Pb;function fp(e){return vi.fromString(e,!0,16)}var M4=fp("c3a5c85c97cb3127"),Ai=fp("b492b66fbe98f273"),Bn=fp("9ae16a3b2f90404f");function pg(e){return e.xor(e.shru(47))}function z4(e,t,n){let s=e.slice(t,t+n);return vi.fromBytes(Array.from(s),!0,!0)}function kt(e,t){return z4(e,t,8)}function Fb(e,t){return z4(e,t,4)}function hn(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function $a(e,t,n=fp("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function BR(e,t,n,s,r,a){r=r.add(e),a=hn(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(hn(r,44)),[r.add(s),a.add(o)]}function Hh(e,t,n,s){return BR(kt(e,t),kt(e,t+8),kt(e,t+16),kt(e,t+24),n,s)}function WR(e,t=e.length){if(t>=8){let n=Bn.add(t*2),s=kt(e,0).add(Bn),r=kt(e,t-8),a=hn(r,37).mul(n).add(s),o=hn(s,25).add(r).mul(n);return $a(a,o,n)}if(t>=4){let n=Bn.add(t*2),s=Fb(e,0);return $a(s.shl(3).add(t),Fb(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return pg(Bn.mul(a).xor(M4.mul(o))).mul(Bn)}return Bn}function VR(e,t=e.length){let n=Bn.add(t*2),s=kt(e,0).mul(Ai),r=kt(e,8),a=kt(e,t-8).mul(n),o=kt(e,t-16).mul(Bn);return $a(hn(s.add(r),43).add(hn(a,30)).add(o),s.add(hn(r.add(Bn),18)).add(a),n)}function UR(e,t=e.length){let n=Bn.add(t*2),s=kt(e,0).mul(Bn),r=kt(e,8),a=kt(e,t-8).mul(n),o=kt(e,t-16).mul(Bn),i=hn(s.add(r),43).add(hn(a,30)).add(o),l=$a(i,s.add(hn(r.add(Bn),18)).add(a),n),u=kt(e,16).mul(n),c=kt(e,24),p=i.add(kt(e,t-32)).mul(n),d=l.add(kt(e,t-24)).mul(n);return $a(hn(u.add(c),43).add(hn(p,30)).add(d),u.add(hn(c.add(s),18)).add(p),n)}function GR(e,t=e.length){let n=vi.fromNumber(81,!0);if(t<=32)return t<=16?WR(e,t):VR(e,t);if(t<=64)return UR(e,t);let s=n,r=n.mul(Ai).add(113),a=pg(r.mul(Bn).add(113)).mul(Bn),o=[vi.UZERO,vi.UZERO],i=[vi.UZERO,vi.UZERO];s=s.mul(Bn).add(kt(e,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do s=hn(s.add(r).add(o[0]).add(kt(e,l+8)),37).mul(Ai),r=hn(r.add(o[1]).add(kt(e,l+48)),42).mul(Ai),s=s.xor(i[1]),r=r.add(o[0]).add(kt(e,l+40)),a=hn(a.add(i[0]),33).mul(Ai),o=Hh(e,l,o[1].mul(Ai),s.add(i[0])),i=Hh(e,l+32,a.add(i[1]),r.add(kt(e,l+16))),[a,s]=[s,a],l+=64;while(l!==u);let p=Ai.add(a.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=hn(s.add(r).add(o[0]).add(kt(e,l+8)),37).mul(p),r=hn(r.add(o[1]).add(kt(e,l+48)),42).mul(p),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(kt(e,l+40))),a=hn(a.add(i[0]),33).mul(p),o=Hh(e,l,o[1].mul(p),s.add(i[0])),i=Hh(e,l+32,a.add(i[1]),r.add(kt(e,l+16))),[a,s]=[s,a],$a($a(o[0],i[0],p).add(pg(r).mul(M4)).add(a),$a(o[1],i[1],p).add(s),p)}function HR(e,t){return t==="string"?mp(e):wm([e],t)}function jR(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function wm(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=$i(e)),Y().getBool("DEBUG")&&C4(e,t),jR(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Ld(){return Y().platform.now()}function qR(e,t){return Y().platform.fetch(e,t)}function mp(e,t="utf-8"){return t=t||"utf-8",Y().platform.encode(e,t)}function vf(e,t="utf-8"){return t=t||"utf-8",Y().platform.decode(e,t)}var XR=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new ZR)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=Ld();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:Ld()-o})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let u=s[l];u.data().then(c=>{KR(c,u.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function KR(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var ZR=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?_d(`${s}ms`,9):s.error,i=_d(e,25),l=t.rank,u=t.size,c=_d(t.shape.toString(),14),p="";for(let d in r){let h=r[d];if(h!=null){let f=h.shape||t.shape,m=f.length;p+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${c}	%c${u}	%c${p}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function YR(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],c=u.inputs;for(let p in c){let d=c[p],h=!1;for(let f=0;f<t.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),h=!0,r[u.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let u=e[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(a[u.outputs[p].id]){for(let d in c)a[c[d].id]=!0,o[u.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let u=e[l];if(r[u.id]&&o[u.id]){let c={};for(let d in u.inputs){let h=u.inputs[d];s[h.id]&&(c[d]=h)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,i.push(p)}}return i}function JR(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let u=e[l.id];u!=null?o.push(u):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let u=n(()=>i[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=a.inputs[l];if(!Ya(u.shape,c.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=u;else{let p=e[c.id];e[c.id]=s(p,u),p.dispose()}}}}var Ob=20,yd=3,J1=7;function QR(e,t,n,s){let r=Mu(t),a=e_(e,t,n,r),o=t.length,i=sf(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join(`
`)),l.join(`
`)}function e_(e,t,n,s){let r=Tt(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?wd(e):e;if(i>1)for(let u=0;u<r/a;u++){let c=u*a;for(let p=0;p<a;p++)o[p]=Math.max(o[p],vd(l[c+p],0,n).length)}return o}function vd(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(J1))} + ${parseFloat(e[1].toFixed(J1))}j`:Ra(e)?s=`'${e}'`:n==="bool"?s=L4(e):s=parseFloat(e.toFixed(J1)).toString(),_d(s,t)}function L4(e){return e===0?"false":"true"}function sf(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=wd(e);return[vd(m[0],0,n)]}return n==="bool"?[L4(e[0])]:[e[0].toString()]}if(l===1){if(i>Ob){let g=yd*o,y=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-yd)*o,i*o));return n==="complex64"&&(y=wd(y),x=wd(x)),["["+y.map((A,b)=>vd(A,r[b],n)).join(", ")+", ..., "+x.map((A,b)=>vd(A,r[i-yd+b],n)).join(", ")+"]"]}let m=n==="complex64"?wd(e):Array.from(e);return["["+m.map((g,y)=>vd(g,r[y],n)).join(", ")+"]"]}let u=t.slice(1),c=s.slice(1),p=s[0]*o,d=[];if(i>Ob){for(let m=0;m<yd;m++){let g=m*p,y=g+p;d.push(...sf(e.slice(g,y),u,n,c,r,!1))}d.push("...");for(let m=i-yd;m<i;m++){let g=m*p,y=g+p;d.push(...sf(e.slice(g,y),u,n,c,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*p,y=g+p;d.push(...sf(e.slice(g,y),u,n,c,r,m===i-1))}let h=l===2?",":"";d[0]="["+d[0]+h;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function wd(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var on=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Tt(e),n!=null){let s=n.length;M(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||I4(t,this.size),this.strides=Mu(e)}set(e,...t){t.length===0&&(t=[0]),M(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return lr().makeTensor(this.values,this.shape,this.dtype)}},lr=null,fu=null,t_=null;function n_(e){lr=e}function s_(e){fu=e}function r_(e){t_=e}var st=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Tt(e),this.strides=Mu(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return fu.buffer(this.shape,this.dtype,e)}bufferSync(){return fu.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return yu(this.shape,e,this.dtype==="complex64")}arraySync(){return yu(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=lr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>vf(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),lr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=lr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>vf(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await lr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(lr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return fu.print(this,e)}clone(){return this.throwIfDisposed(),fu.clone(this)}toString(e=!1){let t=this.dataSync();return QR(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),fu.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),lr().makeVariable(this,e,t,n)}};Object.defineProperty(st,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function a_(){return my("Tensor",()=>st)}a_();var Bd=class extends st{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ya(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);lr().disposeTensor(this),this.dataId=e.dataId,lr().incRef(this,null)}dispose(){lr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Bd,Symbol.hasInstance,{value:e=>e instanceof st&&e.assign!=null&&e.assign instanceof Function});var pr={};Le(pr,{assertTypesMatch:()=>H4,getTensorsInContainer:()=>yy,isTensorInList:()=>i_,makeTypesMatch:()=>Lt});var B4=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(B4||{}),W4=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(W4||{}),V4=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(V4||{}),U4=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(U4||{}),G4=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(G4||{}),o_={float32:U4,int32:W4,bool:V4,complex64:G4};function Tn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return o_[e][t]}function gp(e){return Tn(e,"int32")}function Lt(e,t){if(e.dtype===t.dtype)return[e,t];let n=Tn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function H4(e,t){M(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function i_(e,t){return t.some(n=>n.id===e.id)}function yy(e){let t=[];return j4(e,t,new Set),t}function j4(e,t,n){if(e==null)return;if(e instanceof st){t.push(e);return}if(!l_(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),j4(a,t,n))}}function l_(e){return Array.isArray(e)||typeof e=="object"}function Q1(e){return e.kernelName!=null}var Mb=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},hg=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Mb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ea(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new XR(this.backendInstance),!0}setupRegisteredKernels(){$r(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){$r(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof Ou)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Ea(`Initialization of backend ${e} failed`),Ea(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Ea(`Initialization of backend ${e} failed`),Ea(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return hg.nextTensorId++}nextVariableId(){return hg.nextVariableId++}clone(e){let t=W.runKernel(Ao,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return W.runKernel(no,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(bf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=Q1(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Q1(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=bf(h,this.backendName);M(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),o=()=>{let y=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,y,x);let A=x.map(b=>{if(b.rank!=null)return b;let{dataId:v,shape:k,dtype:I}=b;return this.makeTensorFromDataId(v,k,I)});if(s){let b=this.getTensorsForGradient(h,f,A);n=this.saveTensorsForBackwardMode(b)}return A}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>h(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:u,attrs:c}=e,p=Q1(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(d=this.profiler.profileKernel(l,u,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),s&&this.addTapeNode(l,u,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(h=>u[h]!=null?u[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=dg(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(M(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,u)=>a[u]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&Ra(e[0])&&(r=e.map(i=>mp(i)));let a=s.write(r,t,n),o=new st(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=N4(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r=new st(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new Bd(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*cg(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Bd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*cg(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=dg(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((u,c)=>{if(u==null){let p=n[c],d=Zf(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return u}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=yy(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(M(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));M(r instanceof st,()=>"The result y returned by f() must be a tensor.");let a=YR(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n==null?u_(r.shape):n,JR(o,a,l=>this.tidy(l),c_);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let u of l.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return M(Fa(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{M(t.every(o=>o instanceof st),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),M(n.value instanceof st,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M(Fa(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),u=Array.isArray(l)?l:[l];M(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(u.every(p=>p instanceof st),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return u.forEach((p,d)=>{c[d]=()=>p}),c};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Ld(),n=await this.backend.time(e);return n.wallMs=Ld()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Mb;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Ay=hg;Ay.nextTensorId=0;Ay.nextVariableId=0;function u_(e){let t=py(Tt(e),"float32");return W.makeTensor(t,e,"float32")}function q4(){let e=D4();if(e._tfengine==null){let t=new $4(e);e._tfengine=new Ay(t)}return DR(e._tfengine.ENV),n_(()=>e._tfengine),e._tfengine}var W=q4();function c_(e,t){let n={a:e,b:t};return W.runKernel(ta,n)}var yp={};Le(yp,{isBrowser:()=>X4,isMobile:()=>h_,mockIsMobile:()=>p_});function d_(){return typeof navigator!="undefined"&&navigator!=null}var fg;function p_(e){fg=e}function h_(e){if(fg!==void 0)return fg;if(e||d_()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function X4(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var js=Y();js.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});js.registerFlag("IS_BROWSER",()=>X4());js.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");js.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));js.registerFlag("PROD",()=>!1);js.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>js.getBool("DEBUG"));js.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);js.registerFlag("IS_TEST",()=>!1);js.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);js.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);js.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Dr(e,t){let n=e;if(Sn(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||Sn(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&K4(e,s,[]),s}function K4(e,t,n){if(n=n||[],!Array.isArray(e)&&!Sn(e)){M(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}M(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),M(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)K4(e[r],s,n.concat(r))}function zb(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function $(e,t,n,s="numeric"){if(e instanceof st)return zb(s,e.dtype,t,n),e;let r=Kf(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),zb(s,r,t,n),e==null||!Sn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=Dr(e,r);!Sn(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?wm(e,r):$i(e,[],!0);return W.makeTensor(i,a,r)}function Wd(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>$(a,`${t}[${o}]`,n,s))}var Z4="__op";function V(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+Z4;let r=(...a)=>{W.startScope(n);try{let o=s(...a);return fy(o)&&console.error("Cannot return a Promise inside of tidy."),W.endScope(o),o}catch(o){throw W.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function f_(e,t){let n=$(e,"real","complex"),s=$(t,"imag","complex");jn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return W.runKernel(Jd,r)}var La=V({complex_:f_});function qo(e,t,n,s){if(s==null&&(s=Kf(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Sn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){hy(t);let r=Tt(t),a=Tt(n);M(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==Tt(t.slice(o)):!0;M(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Sn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?wm(e,s):$i(e,[],!0),W.makeTensor(e,t,s)}function ht(e,t,n){let s=Dr(e,n);return qo(e,t,s,n)}var mg={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},wf=4;async function m_(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let u={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async p=>{let d=await l.bytes(),h=d.reduce((g,y)=>g+y.length,0)+wf*d.length,f=new Uint8Array(h),m=0;for(let g=0;g<d.length;g++){let y=d[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,m),m+=wf,f.set(y,m),m+=y.length}p(f)});s.push(c)}else s.push(l.data());t!=null&&(u.group=t),n.push(u)}let a=await Promise.all(s);return{data:g_(a),specs:n}}function Y4(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,u=Tt(l),c;if("quantization"in a){let p=a.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${a.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=mg[p.dtype],h=e.slice(r,r+u*d),f=p.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(i==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=g*p.scale+p.min}}else if(p.dtype==="float16")s===void 0&&(s=w_()),c=s(f);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(i==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=u*d}else if(i==="string"){let p=Tt(a.shape);c=[];for(let d=0;d<p;d++){let h=new Uint32Array(e.slice(r,r+wf))[0];r+=wf;let f=new Uint8Array(e.slice(r,r+h));c.push(f),r+=h}}else{let p=mg[i],d=e.slice(r,r+u*p);if(i==="float32")c=new Float32Array(d);else if(i==="int32")c=new Int32Array(d);else if(i==="bool")c=new Uint8Array(d);else if(i==="complex64"){c=new Float32Array(d);let h=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let y=0;y<h.length;y++)h[y]=c[y*2],f[y]=c[y*2+1];let m=ht(h,l,"float32"),g=ht(f,l,"float32");n[o]=La(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=u*p}i!=="complex64"&&(n[o]=ht(c,l,i))}return n}function g_(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var xy=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function Lb(e){return xy?Buffer.byteLength(e):new Blob([e]).size}function y_(e){if(xy)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function A_(e){if(xy){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function by(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function Bb(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function J4(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function vy(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Ap(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:Lb(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:Lb(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function x_(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function b_(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function v_(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function w_(){let e=x_(),t=b_(),n=v_();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var Wt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Wt.instance==null&&(Wt.instance=new Wt),Wt.instance}static registerSaveRouter(e){Wt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Wt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Wt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Wt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?Wt.getInstance().loadRouters:Wt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},k_=e=>Wt.registerSaveRouter(e),S_=e=>Wt.registerLoadRouter(e),I_=e=>Wt.getSaveHandlers(e),C_=(e,t)=>Wt.getLoadHandlers(e,t),gg="tensorflowjs",yg=1,Ii="models_store",_a="model_info_store";function Q4(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ag(e){let t=e.result;t.createObjectStore(Ii,{keyPath:"modelPath"}),t.createObjectStore(_a,{keyPath:"modelPath"})}var Di=class{constructor(e){if(this.indexedDB=Q4(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(gg,yg);r.onupgradeneeded=()=>Ag(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(Ii,"readonly"),l=o.objectStore(Ii).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=u=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=Ap(t),i=a.transaction(_a,"readwrite"),l=i.objectStore(_a),u=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),c;u.onsuccess=()=>{c=a.transaction(Ii,"readwrite");let d=c.objectStore(Ii).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});d.onsuccess=()=>n({modelArtifactsInfo:o}),d.onerror=h=>{l=i.objectStore(_a);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(d.error)),f.onerror=m=>(a.close(),s(d.error))}},u.onerror=p=>(a.close(),s(u.error)),i.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};Di.URL_SCHEME="indexeddb://";var ew=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Di.URL_SCHEME)?T_(e.slice(Di.URL_SCHEME.length)):null;Wt.registerSaveRouter(ew);Wt.registerLoadRouter(ew);function T_(e){return new Di(e)}function N_(e){return e.startsWith(Di.URL_SCHEME)?e.slice(Di.URL_SCHEME.length):e}var E_=class{constructor(){this.indexedDB=Q4()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(gg,yg);n.onupgradeneeded=()=>Ag(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(_a,"readonly"),o=r.objectStore(_a).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=N_(e),new Promise((t,n)=>{let s=this.indexedDB.open(gg,yg);s.onupgradeneeded=()=>Ag(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(_a,"readwrite"),o=a.objectStore(_a),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=o.delete(e),c=()=>{l=r.transaction(Ii,"readwrite");let d=l.objectStore(Ii).delete(e);d.onsuccess=()=>t(i.result.modelArtifactsInfo),d.onerror=h=>n(i.error)};u.onsuccess=c,u.onerror=p=>(c(),r.close(),n(i.error))}},i.onerror=u=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Zr="/",mu="tensorflowjs_models",tw="info",R_="model_topology",__="weight_specs",$_="weight_data",D_="model_metadata";function nw(e){return{info:[mu,e,tw].join(Zr),topology:[mu,e,R_].join(Zr),weightSpecs:[mu,e,__].join(Zr),weightData:[mu,e,$_].join(Zr),modelMetadata:[mu,e,D_].join(Zr)}}function sw(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function P_(e){let t=e.split(Zr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Zr)}function F_(e){return e.startsWith(Pi.URL_SCHEME)?e.slice(Pi.URL_SCHEME.length):e}var Pi=class{constructor(e){if(!Y().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=nw(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Ap(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,y_(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw sw(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=A_(a),t}};Pi.URL_SCHEME="localstorage://";var rw=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Pi.URL_SCHEME)?O_(e.slice(Pi.URL_SCHEME.length)):null;Wt.registerSaveRouter(rw);Wt.registerLoadRouter(rw);function O_(e){return new Pi(e)}var M_=class{constructor(){M(Y().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=mu+Zr,n=Zr+tw;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=P_(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=F_(e);let t=nw(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return sw(t),n}},Au="://",Es=class{constructor(){this.managers={}}static getInstance(){return Es.instance==null&&(Es.instance=new Es),Es.instance}static registerManager(e,t){M(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Au)&&(e=e.slice(0,e.indexOf(Au))),M(e.length>0,()=>"scheme must not be an empty string.");let n=Es.getInstance();M(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function rf(e){if(e.indexOf(Au)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Es.getSchemes().join(",")}`);return{scheme:e.split(Au)[0],path:e.split(Au)[1]}}async function aw(e,t,n=!1){M(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=Wt.getLoadHandlers(e);M(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),M(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=Wt.getSaveHandlers(t);M(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),M(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=rf(e).scheme,l=rf(e).path,u=i===rf(e).scheme,c=await r.load();n&&u&&await Es.getManager(i).removeModel(l);let p=await o.save(c);return n&&!u&&await Es.getManager(i).removeModel(l),p.modelArtifactsInfo}async function z_(){let e=Es.getSchemes(),t={};for(let n of e){let s=await Es.getManager(n).listModels();for(let r in s){let a=n+Au+r;t[a]=s[r]}}return t}async function L_(e){let t=rf(e);return Es.getManager(t.scheme).removeModel(t.path)}async function B_(e,t){return aw(e,t,!1)}async function W_(e,t){return aw(e,t,!0)}var V_=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new V_);try{Es.registerManager(Pi.URL_SCHEME,new M_)}catch(e){}try{Es.registerManager(Di.URL_SCHEME,new E_)}catch(e){}}var U_={importFetch:()=>JE()},eg,G_=class{constructor(){this.util=QE(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Y().global.fetch!=null?Y().global.fetch(e,t):(eg==null&&(eg=U_.importFetch()),eg(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};Y().get("IS_NODE")&&!Y().get("IS_BROWSER")&&Y().setPlatform("node",new G_);function We(e,t="float32",n){return t=t||"float32",hy(e),new on(e,t,n)}function H_(e,t){let n=$(e,"x","cast");if(!T4(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return W.runKernel(no,s,r)}var ge=V({cast_:H_});function j_(e){let n={x:$(e,"x","clone","string_or_numeric")};return W.runKernel(Ao,n)}var Un=V({clone_:j_});function ow(e,t=!1){console.log(e.toString(t))}q4();var q_={buffer:We,cast:ge,clone:Un,print:ow};s_(q_);var In={};Le(In,{browserFiles:()=>e$,browserHTTPRequest:()=>a$,concatenateArrayBuffers:()=>by,copyModel:()=>B_,decodeWeights:()=>Y4,encodeWeights:()=>m_,fromMemory:()=>i$,getLoadHandlers:()=>C_,getModelArtifactsForJSON:()=>vy,getModelArtifactsInfoForJSON:()=>Ap,getSaveHandlers:()=>I_,http:()=>ky,isHTTPScheme:()=>bg,listModels:()=>z_,loadWeights:()=>t$,moveModel:()=>W_,registerLoadRouter:()=>S_,registerSaveRouter:()=>k_,removeModel:()=>L_,weightsLoaderFactory:()=>lw,withSaveHandler:()=>l$});var X_="model",K_=".json",Z_=".weights.bin";function Wb(e){return new Promise(t=>setTimeout(t)).then(e)}var xg=class{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(xg.URL_SCHEME)&&(e=e.slice(xg.URL_SCHEME.length)),(e==null||e.length===0)&&(e=X_),this.modelJsonFileName=e+K_,this.weightDataFileName=e+Z_}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=J4(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Wb(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await Wb(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ap(e)}}}},kf=xg;kf.URL_SCHEME="downloads://";var Y_=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=vy(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,by(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>Bb(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=Bb(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},J_=e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(kf.URL_SCHEME)?Q_(e.slice(kf.URL_SCHEME.length)):null;Wt.registerSaveRouter(J_);function Q_(e="model"){return new kf(e)}function e$(e){return new Y_(e)}function Vb(e,t,n,s){o(e),n=n==null?0:n,s=s==null?1:s,i(n,s);let r=0,a=l=>(l.then(u=>{let c=n+ ++r/e.length*(s-n);return t(c),u}),l);function o(l){M(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,u){M(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),M(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),M(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(a))}async function iw(e,t){t==null&&(t={});let n=t.fetchFunc==null?Y().platform.fetch:t.fetchFunc,s=e.map(p=>n(p,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await Vb(s,t.onProgress,r,a)).map(p=>p.arrayBuffer()),l=.5,u=1;return t.onProgress==null?await Promise.all(i):await Vb(i,t.onProgress,l,u)}async function t$(e,t="",n,s){return lw(o=>iw(o,{requestInit:s}))(e,t,n)}function lw(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=mg[y]*Tt(g.shape),A=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,v)=>{b===g.name&&(A(),o[v]=!0)}):A(),i.push(g.name),m+=x})}),!o.every(h=>h)){let h=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),u=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;u.push(m)})});let c=await e(u),p={},d=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let b=0;b<f;b++)m+=c[d+b].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let v=new Uint8Array(c[d+b]);y.set(v,x),x+=v.byteLength}a[h].forEach(b=>{let v=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),k=Y4(v,[b.manifestEntry]);for(let I in k)p[I]=k[I]}),d+=f}),p}}var n$="application/octet-stream",s$="application/json",wy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(M(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,M(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&M(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=J4(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:s$}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:n$}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ap(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return vy(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=r$(t),r=this.weightPathPrefix||n,a=[];for(let u of e)a.push(...u.weights);let o=[],i=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(c)):o.push(r+c+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await iw(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,by(l)]}};wy.URL_SCHEME_REGEX=/^https?:\/\//;function r$(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function bg(e){return e.match(wy.URL_SCHEME_REGEX)!=null}var uw=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>bg(s)):n=bg(e),n)return ky(e,t)}return null};Wt.registerSaveRouter(uw);Wt.registerLoadRouter(uw);function ky(e,t){return new wy(e,t)}function a$(e,t){return ky(e,t)}var tg=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},o$=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function i$(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new tg(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new tg({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new tg({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function l$(e){return new o$(e)}var cw={};Le(cw,{confusionMatrix:()=>h$});function u$(e,t,n=!1,s=!1){let r=$(e,"a","matMul"),a=$(t,"b","matMul");[r,a]=Lt(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return W.runKernel(to,o,i)}var Ye=V({matMul_:u$});function c$(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:$(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:s};return W.runKernel(pl,a,o)}var Vd=V({oneHot_:c$});function d$(e,t){let n=$(e,"x","transpose");if(t==null&&(t=n.shape.map((a,o)=>o).reverse()),M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{M(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let s={x:n},r={perm:t};return W.runKernel(Ho,s,r)}var et=V({transpose_:d$});function p$(e,t,n){let s=$(e,"labels","confusionMatrix"),r=$(t,"predictions","confusionMatrix");M(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),M(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),M(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),M(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),M(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=Vd(ge(s,"int32"),n),o=Vd(ge(r,"int32"),n),i=et(a),l=Ye(i,o);return ge(l,"int32")}var h$=V({confusionMatrix_:p$}),Rl={};Le(Rl,{assertAndGetBroadcastShape:()=>bt,getBroadcastDims:()=>dw,getReductionAxes:()=>Jt});function dw(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function Jt(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function bt(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var zs={};Le(zs,{fromPixels:()=>b$,fromPixelsAsync:()=>A$,toPixels:()=>x$});function pw(e,t,n){if(Gi(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Dr(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return qo(e,t,s,n)}var gi;function hw(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r&&r&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(bf(Md,W.backendName)!=null){let f={pixels:e},m={numChannels:t};return W.runKernel(Md,f,m)}let[u,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],p;if(o)p=e.getContext("2d").getImageData(0,0,u,c).data;else if(s||n)p=e.data;else if(a||r||i){if(gi==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")gi=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else gi=document.createElement("canvas").getContext("2d");gi.canvas.width=u,gi.canvas.height=c,gi.drawImage(e,0,0,u,c),p=gi.getImageData(0,0,u,c).data}let d;if(t===4)d=new Int32Array(p);else{let f=u*c;d=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)d[m*t+g]=p[m*4+g]}return pw(d,[c,u,t],"int32")}function f$(e){return e!=null&&e.data instanceof Uint8Array}function m$(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function g$(e){return e!=null&&e.width!==0&&e.height!==0}function y$(e){return m$()&&!(e instanceof ImageBitmap)&&g$(e)&&!f$(e)}async function A$(e,t=3){let n=null;if(Y().getBool("WRAP_TO_IMAGEBITMAP")&&y$(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return hw(n,t)}async function x$(e,t){let n=$(e,"img","toPixels");if(!(e instanceof st)){let u=n;n=ge(u,"int32"),u.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){let c=[0,0,0,255];for(let d=0;d<a;d++){let h=o[u*a+d];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(c[0]=h*i,c[1]=h*i,c[2]=h*i):c[d]=h*i}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(t!=null){t.width=r,t.height=s;let u=t.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return n!==e&&n.dispose(),l}var b$=V({fromPixels_:hw}),Sy={};Le(Sy,{prepareAndValidate:()=>fw});function fw(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(Tt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let p=0;p<r.length-1;++p)o*=r[p];let i=e.shape,l=r.slice();l.pop();let u=1;for(let p=a;p<n;++p)u*=i[p],l.push(i[p]);let c=[...Mu(e.shape).map(p=>p/u),1].slice(0,a);return[l,o,u,c]}var Iy={};Le(Iy,{calculateShapes:()=>mw,validateInput:()=>Ty,validateUpdateShape:()=>Cy});function Cy(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function Ty(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Cy(n,t,e)}function mw(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let p=r;p<a;++p)o*=n[p];let i=r<1?1:r,l=Tt(t.shape)/i,u=[...Mu(n.slice(0,r)),1],c=Tt(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:u,outputSize:c}}var Mt={};Le(Mt,{assertParamsValid:()=>w$,computeFlatOffset:()=>T$,computeOutShape:()=>S$,getNormalizedAxes:()=>I$,isSliceContinous:()=>C$,maskToAxes:()=>k$,parseSliceParams:()=>Sw,sliceInfo:()=>N$,startForAxis:()=>ww,startIndicesWithElidedDims:()=>xw,stopForAxis:()=>kw,stopIndicesWithElidedDims:()=>bw,stridesForAxis:()=>vw,stridesWithElidedDims:()=>gw});var vg=-2,v$=-1;function w$(e,t,n){let s=e.shape.length;M(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),M(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)M(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function k$(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function S$(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function gw(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function yw(e,t,n){return n<=e?n:n-(t-1)}function Aw(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function I$(e,t,n,s,r,a,o,i,l){let u=e.length,c=new Array(u),p=new Array(u),d=new Array(u);if(t.length&&n>0){let h=t[0],f=n+1;c=xw(o,h,f,s,e),p=bw(i,h,f,r,e),d=gw(a,h,f,e)}else for(let h=0;h<u;h++)c[h]=ww(o,s,a,e,h,l),p[h]=kw(i,r,a,e,h,l),d[h]=vw(a,h,l);return{begin:c,end:p,strides:d}}function xw(e,t,n,s,r){let a=[...r],o=Aw(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=yw(t,n,i),u=s[l];e&1<<l&&(u=0),a[i]=u}return a}function bw(e,t,n,s,r){let a=[...r],o=Aw(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=yw(t,n,i),u=s[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),a[i]=u}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=Od(0,a[i],r[i])}return a}function vw(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function ww(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=Od(0,o,l-1),o}function kw(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=Od(0,o,l):o=Od(-1,o,l-1),o}function C$(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function T$(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Sw(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{M(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(M(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function N$(e,t,n,s,r,a,o,i,l){let u;if(s==null?(u=new Array(t.length),u.fill(1)):u=s,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let A=0;A<p.dims;A++)c&&(1<<A&i)!==0&&p.numAddAxisAfterEllipsis++,1<<A&o&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};E$(p,d);let h=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(d.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let b=!!(d.shrinkAxisMask&1<<A),v=e[A];if(v===-1){g.push(b?1:-1);continue}let k=[d.beginMask&1<<A,d.endMask&1<<A],I=[d.strides[A]>0?0:-1,d.strides[A]>0?v:v-1];if(b&&d.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[A]===1;let E=!!(d.beginMask&1<<A&&d.endMask&1<<A);if(d.beginValid&&d.endValid){if(b){let D=d.begin[A]<0?v+d.begin[A]:d.begin[A];if(d.begin[A]=D,d.end[A]=d.begin[A]+1,D<0||D>=v)throw Error(`slice index ${d.begin[A]} of dimension ${A} out of bounds.`)}else d.begin[A]=Ub(d.begin[A],0,d.strides[A],v,k,I),d.end[A]=Ub(d.end[A],1,d.strides[A],v,k,I);let _=d.strides[A]===1&&d.begin[A]===0&&d.end[A]===v;h=h&&_,f=f&&(A===0&&d.strides[A]===1||_)}else h=h&&d.strides[A]===1&&E,f=f&&(A===0&&d.strides[A]===1||E);let R,P=!1;if(d.beginValid&&d.endValid?(R=d.end[A]-d.begin[A],P=!0):b?(R=1,P=!0):E&&v>=0&&(d.strides[A]<0?R=-v:R=v,P=!0),P){let _;R===0||R<0!=d.strides[A]<0?_=0:_=Math.trunc(R/d.strides[A])+(R%d.strides[A]!==0?1:0),g.push(_)}else g.push(-1)}for(let A=0;A<d.finalShapeGatherIndices.length;++A){let b=d.finalShapeGatherIndices[A];b>=0?y.push(g[b]):b===vg&&y.push(1)}return{finalShapeSparse:y.filter((A,b)=>d.finalShapeGatherIndices[b]!==vg),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function E$(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(vg),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(v$),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function Ub(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var ce={};Le(ce,{Serializable:()=>Iw,SerializationMap:()=>wi,registerClass:()=>Xo});var Iw=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},wi=class{constructor(){this.classNameMap={}}static getMap(){return wi.instance==null&&(wi.instance=new wi),wi.instance}static register(e){wi.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Xo(e){M(e.className!=null,()=>"Class being registered does not have the static className property defined."),M(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),M(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),wi.register(e)}var Cw={};Le(Cw,{TEST_EPSILON_FLOAT16:()=>Tw,encodeStrings:()=>Nw,expectArrayBuffersEqual:()=>O$,expectArraysClose:()=>_$,expectArraysEqual:()=>D$,expectNumbersClose:()=>P$,expectPromiseToFail:()=>$$,expectValuesInRange:()=>F$,testEpsilon:()=>Ny});var R$=.001,Tw=.1;function _$(e,t,n){return n==null&&(n=Ny()),wg(e,t,(s,r)=>Ey(s,r,n))}function Ny(){return W.backend.floatPrecision()===32?R$:Tw}function wg(e,t,n){let s=!0;if((Sn(e)||Sn(t))&&(s=!1),Sn(e)&&Sn(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Dr(e),i=Dr(t);if(!Ya(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=Sn(e)?e:$i(e),a=Sn(t)?t:$i(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}}function $$(e,t){e().then(()=>t.fail(),()=>t())}function D$(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ra(e)||Ra(e[0])||Ra(t)||Ra(t[0])?wg(e,n,(s,r)=>s==r):wg(e,t,(s,r)=>Ey(s,r,0))}function P$(e,t,n){if(n==null&&(n=Ny()),!Ey(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Ey(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function F$(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function O$(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function Nw(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Nw(n):e[t]=mp(n)}return e}var Ry="0.0.0";function _y(){Y().set("PROD",!0)}function M$(){Y().set("DEBUG",!0)}function z$(){Y().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function $y(e){Y().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}r_($y);function L$(){W.disposeVariables()}function rn(){return W}function Sf(){return W.memory()}function B$(e){return W.profile(e)}function K(e,t){return W.tidy(e,t)}function ne(e){yy(e).forEach(n=>n.dispose())}function fn(e){return W.keep(e)}function W$(e){return W.time(e)}function Dy(e){return W.setBackend(e)}function dc(){return W.ready()}function qn(){return W.backendName}function V$(e){W.removeBackend(e)}function Py(e){return W.findBackend(e)}function U$(e){return W.findBackendFactory(e)}function _l(e,t,n=1){return W.registerBackend(e,t,n)}function Ls(){return W.backend}function G$(e,t){Y().setPlatform(e,t)}function H$(e,t){let n=$(e,"a","add"),s=$(t,"b","add");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(ta,r)}var ue=V({add_:H$});function j$(e,t){let n=$(e,"a","floorDiv"),s=$(t,"b","floorDiv");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(mo,r)}var xp=V({floorDiv_:j$});function q$(e,t){let n=$(e,"a","div"),s=$(t,"b","div");if([n,s]=Lt(n,s),n.dtype==="int32"&&s.dtype==="int32")return xp(n,s);let r={a:n,b:s},a={};return W.runKernel(co,r,a)}var de=V({div_:q$});function X$(e,t){let n=$(e,"a","mul"),s=$(t,"b","mul");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(No,r)}var L=V({mul_:X$});function K$(e){let t=$(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return W.runKernel(Qd,n)}else{let n={x:t};return W.runKernel(Hi,n)}}var sn=V({abs_:K$});function Z$(e){let n={x:$(e,"x","acos")};return W.runKernel(zu,n)}var Ew=V({acos_:Z$});function Y$(e){let n={x:$(e,"x","acosh")};return W.runKernel(Lu,n)}var Rw=V({acosh_:Y$});function J$(e){M(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),M(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>$(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Ya(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return W.runKernel(Ja,s)}var km=V({addN_:J$});function Q$(e,t=null,n=!1){let r={x:$(e,"x","all","bool")},a={axis:t,keepDims:n};return W.runKernel(Bu,r,a)}var Fy=V({all_:Q$});function eD(e,t=null,n=!1){let r={x:$(e,"x","any","bool")},a={axis:t,keepDims:n};return W.runKernel(Wu,r,a)}var If=V({any_:eD});function tD(e,t=0){let s={x:$(e,"x","argMax")},r={axis:t};return W.runKernel(Qa,s,r)}var _s=V({argMax_:tD});function nD(e,t=0){let s={x:$(e,"x","argMin")},r={axis:t};return W.runKernel(Vu,s,r)}var _w=V({argMin_:nD});function sD(e){let n={x:$(e,"x","asin")};return W.runKernel(Uu,n)}var $w=V({asin_:sD});function rD(e){let n={x:$(e,"x","asinh")};return W.runKernel(Gu,n)}var Dw=V({asinh_:rD});function aD(e){let n={x:$(e,"x","atan")};return W.runKernel(Hu,n)}var Pw=V({atan_:aD});function oD(e,t){let n=$(e,"a","atan2"),s=$(t,"b","atan2");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(qu,r)}var Fw=V({atan2_:oD});function iD(e){let n={x:$(e,"x","atanh")};return W.runKernel(ju,n)}var Ow=V({atanh_:iD});function lD(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=Lw(r);return bp(e,i,n,a,s,null,null,l)}function Mw(e,t,n,s,r,a,o="channelsLast"){let[i,l]=Cf(t),u;if(o==="channelsLast")u=[i,l,e[3],e[3]];else if(o==="channelsFirst")u=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return bp(e,u,n,s,r,a,!1,o)}function uD(e,t,n,s,r,a,o="NDHWC"){let[i,l,u]=kg(t),c,p;if(o==="NDHWC")p="channelsLast",c=[i,l,u,e[4],e[4]];else if(o==="NCDHW")p="channelsFirst",c=[i,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return zw(e,c,n,s,r,!1,p,a)}function bp(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p]=e;else if(i==="channelsFirst")[l,p,u,c]=e;else throw new Error(`Unknown dataFormat ${i}`);let[d,h,,f]=t,[m,g]=Cf(n),[y,x]=Cf(s),A=xu(d,y),b=xu(h,x),{padInfo:v,outHeight:k,outWidth:I}=pD(r,u,c,m,g,A,b,a,i),E=o?f*p:f,R;return i==="channelsFirst"?R=[l,E,k,I]:i==="channelsLast"&&(R=[l,k,I,E]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:p,outHeight:k,outWidth:I,outChannels:E,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:A,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:e,outShape:R,filterShape:t}}function zw(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,u,c,p,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,p,d]=e;else if(o==="channelsFirst")[l,d,u,c,p]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,f,m,,g]=t,[y,x,A]=kg(n),[b,v,k]=kg(s),I=xu(h,b),E=xu(f,v),R=xu(m,k),{padInfo:P,outDepth:_,outHeight:D,outWidth:C}=hD(r,u,c,p,y,x,A,I,E,R,i),F=a?g*d:g,U;return o==="channelsFirst"?U=[l,F,_,D,C]:o==="channelsLast"&&(U=[l,_,D,C,F]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:p,inChannels:d,outDepth:_,outHeight:D,outWidth:C,outChannels:F,padInfo:P,strideDepth:y,strideHeight:x,strideWidth:A,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:v,dilationWidth:k,inShape:e,outShape:U,filterShape:t}}function cD(e,t,n,s,r){s==null&&(s=Oy(e,t,n));let a=e[0],o=e[1],i=Ni((a-t+2*s)/n+1,r),l=Ni((o-t+2*s)/n+1,r);return[i,l]}function dD(e,t,n,s,r,a){r==null&&(r=Oy(e,t,s));let o=e[0],i=e[1],l=e[2],u=Ni((o-t+2*r)/s+1,a),c=Ni((i-t+2*r)/s+1,a),p=Ni((l-t+2*r)/s+1,a);return[u,c,p,n]}function Oy(e,t,n,s=1){let r=xu(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Cf(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function kg(e){return typeof e=="number"?[e,e,e]:e}function xu(e,t){return t<=1?e:e+(e-1)*(t-1)}function pD(e,t,n,s,r,a,o,i,l){let u,c,p;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=cD([t,n],a,s,e,i);c=h[0],p=h[1]}else if(e==="same"){c=Math.ceil(t/s),p=Math.ceil(n/r);let d=Math.max(0,(c-1)*s+a-t),h=Math.max(0,(p-1)*r+o-n),f=Math.floor(d/2),m=d-f,g=Math.floor(h/2),y=h-g;u={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),p=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];u={top:d,bottom:h,left:f,right:m,type:d===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=Ni((t-a+d+h)/s+1,i),p=Ni((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:c,outWidth:p}}function hD(e,t,n,s,r,a,o,i,l,u,c){let p,d,h,f;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=dD([t,n,s,1],i,1,r,e,c);d=g[0],h=g[1],f=g[2]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/o);let m=(d-1)*r+i-t,g=(h-1)*a+l-n,y=(f-1)*o+u-s,x=Math.floor(m/2),A=m-x,b=Math.floor(g/2),v=g-b,k=Math.floor(y/2),I=y-k;p={top:b,bottom:v,left:k,right:I,front:x,back:A,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/r),h=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}function Ni(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ba(e){let[t,n,s]=Cf(e);return t===1&&n===1&&s===1}function Or(e,t){return Ba(e)||Ba(t)}function Lw(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Xn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")M(wu(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{M(wu(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function fD(e,t){let s={x:$(e,"x","reshape","string_or_numeric")},r={shape:t};return W.runKernel(fl,s,r)}var H=V({reshape_:fD});function mD(e,t,n,s,r){let a=$(e,"x","avgPool","float32"),o=1;M(Or(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Xn("avgPool",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=W.runKernel(eo,u,c);return p=ge(p,a.dtype),l?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Sm=V({avgPool_:mD});function gD(e,t,n,s,r,a="NDHWC"){let o=$(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Xn("avgPool3d",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=W.runKernel(Yd,u,c);return p=ge(p,i.dtype),l?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var My=V({avgPool3d_:gD});function yD(e,t=0){M(e.length>=1,()=>"Pass at least one tensor to concat");let n=Wd(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Un(n[0]);let s=n,r={axis:t};return W.runKernel(qi,s,r)}var St=V({concat_:yD});function AD(e){let n={x:$(e,"x","sigmoid","float32")};return W.runKernel(zo,n)}var Cn=V({sigmoid_:AD});function xD(e,t,n){let s=$(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return W.runKernel(xl,r,a)}var Pe=V({slice_:xD});function bD(e){let n={x:$(e,"x","tanh","float32")};return W.runKernel(Go,n)}var Su=V({tanh_:bD});function vD(e,t,n,s,r,a){let o=$(e,"forgetBias","basicLSTMCell"),i=$(t,"lstmKernel","basicLSTMCell"),l=$(n,"lstmBias","basicLSTMCell"),u=$(s,"data","basicLSTMCell"),c=$(r,"c","basicLSTMCell"),p=$(a,"h","basicLSTMCell"),d=St([u,p],1),h=Ye(d,i),f=ue(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=Pe(f,[0,0],y),A=Pe(f,[0,g],y),b=Pe(f,[0,g*2],y),v=Pe(f,[0,g*3],y),k=ue(L(Cn(x),Su(A)),L(c,Cn(ue(o,b)))),I=L(Su(k),Cn(v));return[k,I]}var wD=V({basicLSTMCell_:vD});function kD(e,t,n){let s=$(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);M(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),M(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),M(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return W.runKernel(ji,a,o)}var Im=V({batchToSpaceND_:kD});function SD(e){let t;return e.rank===0||e.rank===1?t=H(e,[1,1,1,e.size]):e.rank===2?t=H(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function ID(e,t,n,s,r,a){a==null&&(a=.001);let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;s!=null&&(c=$(s,"offset","batchNorm")),M(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:SD(o),scale:u,offset:c,mean:i,variance:l},h={varianceEpsilon:a},f=W.runKernel(go,d,h);return H(f,o.shape)}var Iu=V({batchNorm_:ID});function CD(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;return s!=null&&(c=$(s,"offset","batchNorm")),M(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),M(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),M(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&M(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&M(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Iu(o,i,l,c,u,a)}var Bw=V({batchNorm2d_:CD});function TD(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;return s!=null&&(c=$(s,"offset","batchNorm")),M(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),M(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),M(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&M(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&M(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Iu(o,i,l,c,u,a)}var Ww=V({batchNorm3d_:TD});function ND(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;return s!=null&&(c=$(s,"offset","batchNorm")),M(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),M(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),M(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&M(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&M(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Iu(o,i,l,c,u,a)}var Vw=V({batchNorm4d_:ND});function ED(e,t,n){let s=$(e,"x","bincount"),r=$(t,"weights","bincount");M(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return W.runKernel(Qf,a,o)}var zy=V({bincount_:ED});function RD(e,t){let n=$(e,"s0","broadcastArgs","int32"),s=$(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return W.runKernel(em,r)}var Uw=V({broadcastArgs_:RD});function _D(e,t){let n=$(e,"broadcastTo","x"),s=n.shape;if(t.some(u=>!(u>0)||u%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let u=n.shape.slice();for(;u.length<t.length;)u.unshift(1);n=H(n,u)}let r=n.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])a[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Un(n);let i={x:n},l={reps:a};return W.runKernel(sa,i,l)}var $d=V({broadcastTo_:_D});function $D(e){let n={x:$(e,"x","ceil","float32")};return W.runKernel(so,n)}var Gw=V({ceil_:$D});function DD(e,t,n){let s=$(e,"x","clipByValue");M(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return W.runKernel(na,r,a)}var gs=V({clipByValue_:DD});function PD(e){return St(e,0)}var Hw=V({concat1d_:PD});function FD(e,t){return St(e,t)}var pc=V({concat2d_:FD});function OD(e,t){return St(e,t)}var jw=V({concat3d_:OD});function MD(e,t){return St(e,t)}var qw=V({concat4d_:MD});function zD(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","conv2d","float32"),l=$(t,"filter","conv2d","float32"),u=i,c=!1;i.rank===3&&(c=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Xn("conv2d",s,o);let p=r==="NHWC"?u.shape[3]:u.shape[1];M(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),M(Or(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let d={x:u,filter:l},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=W.runKernel(ro,d,h);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Wa=V({conv2d_:zD});function LD(e,t,n,s,r="NWC",a=1,o){let i=$(e,"x","conv1d"),l=$(t,"filter","conv1d"),u=i,c=!1;i.rank===2&&(c=!0,u=H(i,[1,i.shape[0],i.shape[1]])),M(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),M(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Xn("conv1d",s,o),M(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),M(Or(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),M(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=H(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=H(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Wa(d,p,[1,n],s,"NHWC",[1,a],o);return c?H(g,[g.shape[2],g.shape[3]]):H(g,[g.shape[0],g.shape[2],g.shape[3]])}var Ly=V({conv1d_:LD});function BD(e,t,n,s,r,a="NHWC",o){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,u=!1;t.rank===3&&(u=!0,l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),M(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),M(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),M(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let c=a==="NHWC"?i[3]:i[1],p=a==="NHWC"?l.shape[3]:l.shape[1];M(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),M(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),Xn("conv2dDerInput",r,o);let d={dy:l,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=W.runKernel(ao,d,h);return u?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var By=V({conv2DBackpropInput_:BD});function WD(e,t,n,s,r,a){let o=$(e,"x","conv2dTranspose"),i=$(t,"filter","conv2dTranspose");return By(n,o,i,s,r,"NHWC",a)}var Wy=V({conv2dTranspose_:WD});function VD(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=$(e,"x","conv3d"),i=$(t,"filter","conv3d"),l=o,u=!1;o.rank===4&&(u=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),M(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),M(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),M(Or(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let c={x:l,filter:i},p={strides:n,pad:s,dataFormat:r,dilations:a},d=W.runKernel(ep,c,p);return u?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Vy=V({conv3d_:VD});function UD(e,t,n,s,r){M(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],u=o.shape[4];M(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),M(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),M(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),M(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),M(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let c={dy:o,filter:n},p={pad:r,strides:s,inputShape:a},d=W.runKernel(sm,c,p);return i?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Xw=V({conv3DBackpropInput_:UD});function GD(e,t,n,s,r){let a=$(e,"x","conv3dTranspose"),o=$(t,"filter","conv3dTranspose");return Xw(n,a,o,s,r)}var Kw=V({conv3dTranspose_:GD});function HD(e){let n={x:$(e,"x","cos","float32")};return W.runKernel(oo,n)}var Cm=V({cos_:HD});function jD(e){let n={x:$(e,"x","cosh","float32")};return W.runKernel(io,n)}var Uy=V({cosh_:jD});function qD(e,t=0,n=!1,s=!1){let a={x:$(e,"x","cumprod")},o={axis:t,exclusive:n,reverse:s};return W.runKernel(Xi,a,o)}var Tf=V({cumprod_:qD});function XD(e,t=0,n=!1,s=!1){let a={x:$(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return W.runKernel(lo,a,o)}var Gy=V({cumsum_:XD});function KD(e,t,n,s=!1){let r=$(e,"x","denseBincount"),a=$(t,"weights","denseBincount");M(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),M(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),M(n>=0,()=>`size must be non-negative, but got ${n}.`),M(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return W.runKernel(rm,o,i)}var Zw=V({denseBincount_:KD});function ZD(e,t,n="NHWC"){let s=$(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];M(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),M(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),M(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),M(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return W.runKernel(Zi,i,l)}var Yw=V({depthToSpace_:ZD});function YD(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","depthwiseConv2d","float32"),l=$(t,"filter","depthwiseConv2d","float32"),u=i,c=!1;i.rank===3&&(c=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),M(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),M(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),Xn("depthwiseConv2d",s,o);let p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},h=W.runKernel(uo,p,d);return c?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var vp=V({depthwiseConv2d_:YD});function JD(e){let n={x:$(e,"x","diag")};return W.runKernel(im,n)}var QD=V({diag_:JD});function eP(e,t,n,s,r=[1,1],a="NHWC"){let o=$(e,"x","dilation2d"),i=$(t,"filter","dilation2d");M(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),M(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),M(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,u=!1;o.rank===3&&(l=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0);let c={x:l,filter:i},p={strides:n,pad:s,dilations:r},d=W.runKernel(tp,c,p);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Jw=V({dilation2d_:eP});function tP(e,t){let n=$(e,"a","equal","string_or_numeric"),s=$(t,"b","equal","string_or_numeric");[n,s]=Lt(n,s),bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(Yi,r)}var $s=V({equal_:tP});function nP(e,t,n){let s=$(t,"a","where"),r=$(n,"b","where"),a=$(e,"condition","where","bool"),o=bt(bt(a.shape,s.shape),r.shape),i=$d(a,o),l=$d(s,o),u=$d(r,o),c={condition:i,t:l,e:u};return W.runKernel(Al,c)}var Gn=V({where_:nP});function sP(e){let n={x:$(e,"x","zerosLike")};return W.runKernel(Nl,n)}var rt=V({zerosLike_:sP});function rP(e,t){let n=$(e,"a","div"),s=$(t,"b","div");[n,s]=Lt(n,s);let r=de(n,s),a=rt(r),o=$s(s,a);return Gn(o,a,r)}var Qw=V({divNoNan_:rP});function aP(e,t){let n=$(e,"t1","dot"),s=$(t,"t2","dot");M((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(M(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=H(n,[1,-1]),i=H(s,[-1,1]),l=Ye(o,i);return H(l,[])}else if(n.rank===1&&s.rank===2){let o=H(n,[1,-1]),i=H(s,[s.shape[0],s.shape[1]]),l=Ye(o,i);return H(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=H(s,[-1,1]),i=Ye(n,o);return H(i,[i.size])}else{let o=H(s,[s.shape[0],s.shape[1]]);return Ye(n,o)}}var oP=V({dot_:aP});function iP(e,...t){let n=t.map((r,a)=>$(r,`tensors${a}`,"einsum")),s={equation:e};return W.runKernel(np,n,s)}var e7=V({einsum_:iP});function lP(e){let n={x:$(e,"x","elu","float32")};return W.runKernel(po,n)}var wp=V({elu_:lP});function uP(e){let t=$(e,"x","erf");M(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ge(t,"float32"));let n={x:t};return W.runKernel(Xu,n)}var t7=V({erf_:uP});function cP(e){let n={x:$(e,"x","exp")};return W.runKernel(ho,n)}var Ds=V({exp_:cP});function dP(e,t=0){let n=$(e,"x","expandDims","string_or_numeric");M(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return W.runKernel(Ji,s,r)}var Kt=V({expandDims_:dP});function pP(e){let n={x:$(e,"x","expm1")};return W.runKernel(Qi,n)}var n7=V({expm1_:pP});function hP(e,t){let n=$(e,"x","tile","string_or_numeric");M(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return W.runKernel(sa,s,r)}var Hs=V({tile_:hP});function fP(e,t,n,s="float32"){t==null&&(t=e);let r=We([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=H(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return Hs(Kt(o,0),[n[0],1,1]);if(n.length===2)return Hs(Kt(Kt(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return Hs(Kt(Kt(Kt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Hy=V({eye_:fP});function hc(e,t,n){let s={shape:e,value:t,dtype:n};return W.runKernel(Ku,{},s)}function mP(e){let n={x:$(e,"x","floor","float32")};return W.runKernel(fo,n)}var kp=V({floor_:mP});function gP(e,t,n=0,s=0){let r=$(e,"x","gather"),a=$(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return W.runKernel(tl,o,i)}var Cu=V({gather_:gP});function yP(e,t){let n=$(e,"a","greater","string_or_numeric"),s=$(t,"b","greater","string_or_numeric");[n,s]=Lt(n,s),bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(sl,r)}var As=V({greater_:yP});function AP(e,t){let n=$(e,"a","greaterEqual","string_or_numeric"),s=$(t,"b","greaterEqual","string_or_numeric");[n,s]=Lt(n,s),bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(yo,r)}var $l=V({greaterEqual_:AP});function xP(e){let n={input:$(e,"input","imag")};return W.runKernel(sp,n)}var Tm=V({imag_:xP});function bP(e){let n={x:$(e,"x","isFinite")};return W.runKernel(Zu,n)}var vP=V({isFinite_:bP});function wP(e){let n={x:$(e,"x","isInf")};return W.runKernel(Yu,n)}var kP=V({isInf_:wP});function SP(e){let n={x:$(e,"x","isNaN")};return W.runKernel(Ju,n)}var s7=V({isNaN_:SP});function IP(e,t=.2){let s={x:$(e,"x","leakyRelu")},r={alpha:t};return W.runKernel(xo,s,r)}var Nm=V({leakyRelu_:IP});function CP(e,t){let n=$(e,"a","less","string_or_numeric"),s=$(t,"b","less","string_or_numeric");[n,s]=Lt(n,s),bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(rl,r)}var jy=V({less_:CP});function TP(e,t){let n=$(e,"a","lessEqual","string_or_numeric"),s=$(t,"b","lessEqual","string_or_numeric");[n,s]=Lt(n,s),bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(al,r)}var Dl=V({lessEqual_:TP});function r7(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return W.runKernel(dm,{},s)}function NP(e,t=5,n=1,s=1,r=.5){let a=$(e,"x","localResponseNormalization");M(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),M(wu(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=H(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},u={depthRadius:t,bias:n,alpha:s,beta:r},c=W.runKernel(ap,l,u);return i?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var a7=V({localResponseNormalization_:NP});function EP(e){let n={x:$(e,"x","log","float32")};return W.runKernel(bo,n)}var Ps=V({log_:EP});function RP(e){let n={x:$(e,"x","log1p")};return W.runKernel(Qu,n)}var Em=V({log1p_:RP});function _P(e){return M(Fa(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=$(t,"x","tf.grad","string_or_numeric"),r=n!=null?$(n,"dy","tf.grad"):null;return W.tidy(()=>{let{value:a,grads:o}=W.gradients(()=>e(s),[s],r);return r!=null&&jn(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Rm(o),o[0]})}}function $P(e){return M(Fa(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{M(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=Wd(t,"args","tf.grads","string_or_numeric"),r=n!=null?$(n,"dy","tf.grads"):null;return W.tidy(()=>{let{value:a,grads:o}=W.gradients(()=>e(...s),s,r);return r!=null&&jn(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Rm(o),o})}}function DP(e){return M(Fa(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{M(t instanceof st,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),M(n==null||n instanceof st,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=W.gradients(()=>e(t),[t],n);return Rm(s),{grad:s[0],value:r}}}function PP(e){return M(Fa(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{M(Array.isArray(t)&&t.every(r=>r instanceof st),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),M(n==null||n instanceof st,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=W.gradients(()=>e(...t),t,n);return n!=null&&jn(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Rm(s.grads),s}}function o7(e,t){M(Fa(e),()=>"The f passed in variableGrads(f) must be a function"),M(t==null||Array.isArray(t)&&t.every(u=>u instanceof Bd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let u in W.registeredVariables)t.push(W.registeredVariables[u])}let s=n?t.filter(u=>!u.trainable):null,r=t.length;t=t.filter(u=>u.trainable),M(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=W.gradients(e,t,null,a);M(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((u,c)=>{i[c]!=null&&(l[u.name]=i[c])}),s!=null&&s.forEach(u=>l[u.name]=null),{value:o,grads:l}}function Pr(e){return W.customGrad(e)}function Rm(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function FP(e){let n={x:$(e,"x","neg")};return W.runKernel(il,n)}var zt=V({neg_:FP});function OP(e){let n={x:$(e,"x","softplus")};return W.runKernel(lc,n)}var fc=V({softplus_:OP});function MP(e){let t=$(e,"x","logSigmoid");return Pr(s=>({value:zt(fc(zt(s))),gradFunc:o=>L(o,Cn(zt(s)))}))(t)}var zP=V({logSigmoid_:MP});function LP(e,t=null,n=!1){let r={x:$(e,"x","max")},a={reductionIndices:t,keepDims:n};return W.runKernel(vo,r,a)}var gn=V({max_:LP});function BP(e,t){let n=$(e,"a","sub"),s=$(t,"b","sub");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(Uo,r)}var he=V({sub_:BP});function WP(e,t=null,n=!1){let s=$(e,"x","sum");s.dtype==="bool"&&(s=ge(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return W.runKernel(Bo,r,a)}var ke=V({sum_:WP});function VP(e,t=-1){let n=$(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Pr((r,a)=>{let i=gn(r,t,!0),l=he(r,i),u=he(ge(l,"float32"),Ps(ke(Ds(l),t,!0)));return a([u]),{value:u,gradFunc:(p,d)=>{let[h]=d,f=!0,m=Ds(h);return he(p,L(ke(p,t,f),m))}}})(n)}var qy=V({logSoftmax_:VP});function Xy(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function i7(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function l7(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function Fi(e,t){let n=t.map(s=>1);return i7(e,n,t)}function UP(e,t,n){M(Xy(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function u7(e,t){if(Xy(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function Ky(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function GP(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function HP(e,t=null,n=!1){let s=$(e,"x","logSumExp"),r=qs(t,s.shape),a=gn(s,r,!0),o=he(s,a),i=Ds(o),l=ke(i,r),u=Ps(l),c=ue(H(a,u.shape),u);if(n){let p=Fi(c.shape,r);return H(c,p)}return c}var c7=V({logSumExp_:HP});function jP(e,t){let n=$(e,"a","logicalAnd","bool"),s=$(t,"b","logicalAnd","bool");bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(ol,r)}var gr=V({logicalAnd_:jP});function qP(e){let n={x:$(e,"x","logicalNot","bool")};return W.runKernel(ec,n)}var _m=V({logicalNot_:qP});function XP(e,t){let n=$(e,"a","logicalOr","bool"),s=$(t,"b","logicalOr","bool");bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(rp,r)}var Zy=V({logicalOr_:XP});function KP(e,t){let n=$(e,"a","logicalXor","bool"),s=$(t,"b","logicalXor","bool");return bt(n.shape,s.shape),gr(Zy(e,t),_m(gr(e,t)))}var ZP=V({logicalXor_:KP});function YP(e,t,n,s,r){let a=$(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),M(Or(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),Xn("maxPool",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=W.runKernel(ko,u,c);return l?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var $m=V({maxPool_:YP});function JP(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=$(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),M(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Xn("maxPool3d",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=W.runKernel(op,u,c);return l?H(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Yy=V({maxPool3d_:JP});function QP(e,t,n,s,r=!1){let o={x:$(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=W.runKernel(mm,o,i);return{result:l[0],indexes:l[1]}}var d7=V({maxPoolWithArgmax_:QP});function eF(e,t){let n=$(e,"a","maximum"),s=$(t,"b","maximum");[n,s]=Lt(n,s),n.dtype==="bool"&&(n=ge(n,"int32"),s=ge(s,"int32")),bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(wo,r)}var ra=V({maximum_:eF});function tF(e,t=null,n=!1){let r={x:$(e,"x","mean")},a={axis:t,keepDims:n};return W.runKernel(So,r,a)}var Vt=V({mean_:tF});function Ft(e,t="float32"){if(t==="complex64"){let s=Ft(e,"float32"),r=Ft(e,"float32");return La(s,r)}let n=Zf(Tt(e),t);return W.makeTensor(n,e,t)}function ms(e,t="float32"){if(t==="complex64"){let s=ms(e,"float32"),r=Ft(e,"float32");return La(s,r)}let n=py(Tt(e),t);return W.makeTensor(n,e,t)}function nF(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=$(e,"x","meshgrid",e instanceof st?e.dtype:"float32");if(t===void 0)return[s];let r=$(t,"y","meshgrid",t instanceof st?t.dtype:"float32"),a=Tt(s.shape),o=Tt(r.shape);return n==="xy"?(s=H(s,[1,-1]),r=H(r,[-1,1]),[Ye(ms([o,1],s.dtype),s),Ye(r,ms([1,a],r.dtype))]):(s=H(s,[-1,1]),r=H(r,[1,-1]),[Ye(s,ms([1,o],s.dtype)),Ye(ms([a,1],r.dtype),r)])}function sF(e,t=null,n=!1){let r={x:$(e,"x","min")},a={axis:t,keepDims:n};return W.runKernel(Io,r,a)}var Va=V({min_:sF});function rF(e,t){let n=$(e,"a","minimum"),s=$(t,"b","minimum");[n,s]=Lt(n,s),n.dtype==="bool"&&(n=ge(n,"int32"),s=ge(s,"int32")),bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(Co,r)}var Sp=V({minimum_:rF});function aF(e,t,n){M(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=$(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)M(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),M(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return W.runKernel(To,o,a)}var p7=V({mirrorPad_:aF});function oF(e,t){let n=$(e,"a","mod"),s=$(t,"b","mod");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(tc,r)}var mc=V({mod_:oF});function iF(e){let t=$(e,"x","square"),n={};return W.runKernel("Square",{x:t},n)}var At=V({square_:iF});function lF(e,t=null,n=!1){e=$(e,"x","moments");let s=qs(t,e.shape),r=Vt(e,s,n),a=r.shape;n||(a=Fi(r.shape,s));let o=At(he(ge(e,"float32"),H(r,a))),i=Vt(o,s,n);return{mean:r,variance:i}}var Dm=V({moments_:lF});function uF(e,t,n,s){let r=$(t,"data","multiRNNCell"),a=Wd(n,"c","multiRNNCell"),o=Wd(s,"h","multiRNNCell"),i=r,l=[];for(let p=0;p<e.length;p++){let d=e[p](i,a[p],o[p]);l.push(d[0]),l.push(d[1]),i=d[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var cF=V({multiRNNCell_:uF});function dF(e,t,n,s=!1){let r=$(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?H(r,[1,-1]):r},u={numSamples:t,seed:n,normalized:s},c=W.runKernel(gm,l,u);return o===1?H(c,[c.size]):c}var h7=V({multinomial_:dF});function pF(e,t){let n=$(e,"a","notEqual","string_or_numeric"),s=$(t,"b","notEqual","string_or_numeric");[n,s]=Lt(n,s),bt(n.shape,s.shape);let r={a:n,b:s};return W.runKernel(ll,r)}var Tu=V({notEqual_:pF});function hF(e){let n={x:$(e,"x","onesLike")};return W.runKernel(dl,n)}var Fs=V({onesLike_:hF});function fF(e,t){let n=$(e,"v1","outerProduct"),s=$(t,"v2","outerProduct");M(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=H(n,[-1,1]),a=H(s,[1,-1]);return Ye(r,a)}var mF=V({outerProduct_:fF});function gF(e,t,n=0){let s=$(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return W.runKernel(Eo,a,r)}var Ks=V({pad_:gF});function yF(e,t,n=0){return M(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ks(e,[t],n)}var AF=V({pad1d_:yF});function xF(e,t,n=0){return M(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ks(e,t,n)}var bF=V({pad2d_:xF});function vF(e,t,n=0){return M(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ks(e,t,n)}var wF=V({pad3d_:vF});function kF(e,t,n=0){return M(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ks(e,t,n)}var SF=V({pad4d_:kF});function IF(e,t,n){let s=$(e,"x","spaceToBatchND");M(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),M(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),M(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return W.runKernel(vl,r,a)}var Pm=V({spaceToBatchND_:IF});function CF(e,t,n,s,r,a,o){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let i=$(e,"x","maxPool"),l=i,u=!1;i.rank===3&&(u=!0,l=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(Or(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=Mw(l.shape,t,a,r,s),p=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=NF([c.filterHeight,c.filterWidth],p):d=[[0,0],[0,0]];let h=p[0]===1&&p[1]===1,[f,m]=TF([c.inHeight,c.inWidth],p,d),g=h?s:"valid",y=h?l:Pm(l,p,f),A=(n==="avg"?()=>Sm(y,t,a,g,o):()=>$m(y,t,a,g,o))(),b=h?A:Im(A,p,m);return u?H(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function TF(e,t,n){let s=n.map(c=>c[0]),r=n.map(c=>c[1]),a=e.concat(s,r),o=t.map((c,p)=>(c-a[p]%c)%c),i=r.map((c,p)=>c+o[p]),l=t.map((c,p)=>[s[p],i[p]]),u=t.map((c,p)=>[0,o[p]]);return[l,u]}function NF(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var EF=V({pool_:CF});function RF(e,t){let n=$(e,"base","pow"),s=$(t,"exp","pow");[n,s]=Lt(n,s);let r={a:n,b:s};return W.runKernel(Ro,r)}var Ua=V({pow_:RF});function _F(e,t){let n=$(e,"x","prelu"),s=$(t,"alpha","prelu"),r={x:n,alpha:s};return W.runKernel(_o,r)}var Fm=V({prelu_:_F});function $F(e,t=null,n=!1){let s=$(e,"x","prod");s.dtype==="bool"&&(s=ge(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return W.runKernel($o,r,a)}var Jy=V({prod_:$F});function DF(e,t,n){let s=Tt(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return W.makeTensor(r,e,n)}var PF=V({rand_:DF}),Qy=Ui(Xf()),eA=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=Qy.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},FF=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=Qy.alea(r.toString()),this.randn=new eA(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},OF=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Qy.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function MF(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new FF(t,n,s,r),o=We(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var zF=V({randomGamma_:MF});function LF(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new eA(t,n,s,!1,r),o=We(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var f7=V({randomNormal_:LF});function BF(e,t=0,n=1,s="float32",r){let a=We(e,s),o=new OF(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var gc=V({randomUniform_:BF});function Nu(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return W.runKernel(sc,{},r)}function WF(e){let n={input:$(e,"input","real")};return W.runKernel(ip,n)}var Ud=V({real_:WF});function VF(e){let n={x:$(e,"x","reciprocal")};return W.runKernel(rc,n)}var m7=V({reciprocal_:VF});function UF(e){let n={x:$(e,"x","relu")};return W.runKernel(Do,n)}var Mr=V({relu_:UF});function GF(e){let n={x:$(e,"x","relu6")};return W.runKernel(Fo,n)}var tA=V({relu6_:GF});function HF(e,t){let s={x:$(e,"x","reverse")},r={dims:t};return W.runKernel(ml,s,r)}var Os=V({reverse_:HF});function jF(e){let t=$(e,"x","reverse");return M(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Os(t,0)}var qF=V({reverse1d_:jF});function XF(e,t){let n=$(e,"x","reverse");return M(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Os(n,t)}var KF=V({reverse2d_:XF});function ZF(e,t){let n=$(e,"x","reverse");return M(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Os(n,t)}var YF=V({reverse3d_:ZF});function JF(e,t){let n=$(e,"x","reverse");return M(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Os(n,t)}var QF=V({reverse4d_:JF});function eO(e){let n={x:$(e,"x","round")};return W.runKernel(gl,n)}var nA=V({round_:eO});function tO(e){let n={x:$(e,"x","rsqrt","float32")};return W.runKernel(Oo,n)}var sA=V({rsqrt_:tO});function Ie(e,t){if((Sn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Sn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return qo(e,[],[],t)}function nO(e){let n={x:$(e,"x","selu")};return W.runKernel(oc,n)}var rA=V({selu_:nO});function sO(e,t,n,s,r,a=[1,1],o="NHWC"){let i=$(e,"x","separableConv2d"),l=$(t,"depthwiseFilter","separableConv2d"),u=$(n,"pointwiseFilter","separableConv2d"),c=i,p=!1;if(i.rank===3&&(p=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),M(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),M(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),M(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),M(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],h=l.shape[3];M(u.shape[2]===d*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${u.shape[2]}.`);let f=vp(c,l,s,r,o,a),g=Wa(f,u,1,"valid",o);return p?H(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var g7=V({separableConv2d_:sO});async function rO(e,t){let n=$(e,"x","setdiff1d"),s=$(t,"y","setdiff1d");M(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),M(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),M(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let c=0;c<r.length;c++)o.has(r[c])||i++;let l=new on([i],n.dtype),u=new on([i],"int32");for(let c=0,p=0;c<r.length;c++)o.has(r[c])||(l.values[p]=r[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]}var y7=rO;function aO(e){let n={x:$(e,"x","sign")};return W.runKernel(ic,n)}var A7=V({sign_:aO});function oO(e){let n={x:$(e,"x","sin","float32")};return W.runKernel(Mo,n)}var aA=V({sin_:oO});function iO(e){let n={x:$(e,"x","sinh")};return W.runKernel(bl,n)}var oA=V({sinh_:iO});function lO(e,t,n){let s=$(e,"x","slice1d");return M(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Pe(s,[t],[n])}var Om=V({slice1d_:lO});function uO(e,t,n){let s=$(e,"x","slice2d");return M(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Pe(s,t,n)}var iA=V({slice2d_:uO});function cO(e,t,n){let s=$(e,"x","slice3d");return M(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Pe(s,t,n)}var Pl=V({slice3d_:cO});function dO(e,t,n){let s=$(e,"x","slice4d");return M(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Pe(s,t,n)}var Oi=V({slice4d_:dO});function pO(e,t=-1){let n=$(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return W.runKernel(Wo,s,r)}var yc=V({softmax_:pO});function hO(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return W.runKernel(um,t)}var Mm=V({fft_:hO});function fO(e){M(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return W.runKernel(cm,t)}var Gd=V({ifft_:fO});function mO(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=H(e,[n,t]);s=Gd(r)}else{let r=[n,2*(t-1)],a=H(Ud(e),[n,t]),o=H(Tm(e),[n,t]),i=Os(Pe(a,[0,1],[n,t-2]),1),l=L(Os(Pe(o,[0,1],[n,t-2]),1),Ie(-1)),u=St([a,i],1),c=St([o,l],1),p=H(La(u,c),[r[0],r[1]]);s=Gd(p)}if(s=Ud(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=H(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var lA=V({irfft_:mO});function gO(e,t,n=0){let r={x:$(e,"x","split")},a={numOrSizeSplits:t,axis:n};return W.runKernel(wl,r,a)}var Yt=V({split_:gO});function yO(e,t){M(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=Pe(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=St([e,Ft(f)],e.shape.length-1),n=t}else r=e;let a=rt(r),o=H(La(r,a),[s,n]),i=Mm(o),l=Math.floor(n/2)+1,u=Ud(i),c=Tm(i),p=Yt(u,[l,n-l],u.shape.length-1),d=Yt(c,[l,n-l],c.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,H(La(p[0],d[0]),h)}var zm=V({rfft_:yO});function AO(e){let n={x:$(e,"x","sqrt","float32")};return W.runKernel(Lo,n)}var Nn=V({sqrt_:AO});function xO(e,t){let n=$(e,"a","squaredDifference"),s=$(t,"b","squaredDifference");[n,s]=Lt(n,s),bt(n.shape,s.shape);let r={a:n,b:s},a={};return W.runKernel(Vo,r,a)}var uA=V({squaredDifference_:xO});function bO(e,t){let n=$(e,"x","squeeze");return H(n,k4(n.shape,t).newShape)}var tt=V({squeeze_:bO});function vO(e,t=0){let n=Wd(e,"tensors","stack","string_or_numeric");M(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&M(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return W.runKernel(hl,s,r)}var cn=V({stack_:vO});function wO(e,t=0){let s={x:$(e,"x","step")},r={alpha:t};return W.runKernel(jo,s,r)}var Ip=V({step_:wO});function kO(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let c={x:$(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return W.runKernel(kl,c,p)}var x7=V({stridedSlice_:kO});function SO(e){let n={x:$(e,"x","tan","float32")};return W.runKernel(Sl,n)}var b7=V({tan_:SO});function Ct(e,t){Gi(e);let n=Dr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return qo(e,null,n,t)}function hr(e,t,n){if(Gi(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Dr(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return qo(e,t,s,n)}function IO(e,t,n){if(Gi(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Dr(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return qo(e,t,s,n)}function CO(e,t,n){if(Gi(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Dr(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return qo(e,t,s,n)}function TO(e,t,n){if(Gi(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Dr(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,qo(e,t,s,n)}function NO(e,t=1,n=!0){let s=$(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=W.runKernel(Il,a,o);return{values:i,indices:l}}var v7=V({topk_:NO});function EO(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new eA(t,n,s,!0,r),o=We(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var Lm=V({truncatedNormal_:EO});function RO(e,t=0){let n=$(e,"x","unique","string_or_numeric");M(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=W.runKernel(vm,s,r);return{values:a,indices:o}}var Sg=V({unique_:RO});function _O(e,t,n){let s=$(e,"x","unsortedSegmentSum"),r=$(t,"segmentIds","unsortedSegmentSum","int32");M(wu(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return W.runKernel(hp,a,o)}var w7=V({unsortedSegmentSum_:_O});function $O(e,t=0){let n=$(e,"x","unstack","string_or_numeric");M(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return W.runKernel(Tl,s,r)}var ss=V({unstack_:$O});function k7(e,t=!0,n,s){return W.makeVariable(e,t,n,s)}function S7(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=We(e,"int32"),r=We([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function DO(e){let t=$(e,"condition","whereAsync","bool"),n=await t.data(),s=S7(t.shape,n);return e!==t&&t.dispose(),s}var cA=DO;async function PO(e,t,n){let s=$(e,"tensor","boolMask"),r=$(t,"mask","boolMask","bool"),a=n==null?0:n,o=r.rank,i=s.shape;M(o>0,()=>"mask cannot be scalar"),jn(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let u=i.slice(0,a).concat([l],i.slice(a+o)),c=H(s,u),p=H(r,[-1]),d=await cA(p),h=tt(d,[1]),f=Cu(c,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),c.dispose(),p.dispose(),d.dispose(),f}var FO=PO;function OO(e,t="euclidean",n=null,s=!1){e=$(e,"x","norm");let r=I7(e,t,n),a=r.shape;if(s){let o=qs(n,e.shape);a=Fi(r.shape,o)}return H(r,a)}function I7(e,t,n=null){if(e.rank===0)return sn(e);if(e.rank!==1&&n===null)return I7(H(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ke(sn(e),n);if(t===1/0)return gn(sn(e),n);if(t===-1/0)return Va(sn(e),n);if(t==="euclidean"||t===2)return Nn(ke(Ua(sn(e),Ie(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return gn(ke(sn(e),n[0]),n[1]-1);if(t===1/0)return gn(ke(sn(e),n[1]),n[0]);if(t===-1/0)return Va(ke(sn(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Nn(ke(At(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var dA=V({norm_:OO});function MO(e,t,n,s,r=!0){let a=$(e,"v","movingAverage"),o=$(t,"x","movingAverage"),i=$(n,"decay","movingAverage");H4(a,o),M(Ya(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Ie(1),u=he(l,i),c=L(he(o,a),u);if(r){M(s!=null,()=>"When using zeroDebias: true, step is required.");let p=$(s,"step","movingAverage");c=de(c,he(l,Ua(i,p)))}return ue(a,c)}var zO=V({movingAverage_:MO});function LO(e,t,n){let s=$(e,"indices","scatterND","int32"),r=$(t,"updates","scatterND");Ty(r,s,n);let a={indices:s,updates:r},o={shape:n};return W.runKernel(yl,a,o)}var C7=V({scatterND_:LO});function BO(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function WO(e,t,n,s=0){let r=$(e,"sparseIndices","sparseToDense","int32"),a=$(t,"sparseValues","sparseToDense"),o=$(s,"defaultValue","sparseToDense",a.dtype);BO(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return W.runKernel(dp,i,l)}var pA=V({sparseToDense_:WO});function VO(e,t){let n=$(t,"indices","gatherND","int32"),r={params:$(e,"x","gatherND","string_or_numeric"),indices:n};return W.runKernel(nl,r)}var T7=V({gatherND_:VO});function UO(e,t){if(t==null)return e.shape.slice();if(Ya(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function GO(e,t,n,s){let r=$(e,"x","dropout");if(M(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),M(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof st?r.clone():r;let a=UO(r,n),o=1-t,i=de(kp(ue(gc(a,0,1,"float32",s),o)),o);return L(r,i)}var N7=V({dropout_:GO});function E7(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function hA(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return Ct(r,"float32")}async function HO(e,t,n=1){let s=$(e,"predictions","inTopK"),r=$(t,"targets","inTopK");M(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),M(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),jn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];M(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,u]=[o.length/a,a],c=S4("bool",l);for(let p=0;p<l;p++){let d=p*u,h=o.subarray(d,d+u),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),c[p]=0;for(let m=0;m<n;m++)if(f[m].index===i[p]){c[p]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),ht(c,r.shape,"bool")}var jO=HO,Ga={};Le(Ga,{conv2d:()=>KO,depthwiseConv2d:()=>QO,matMul:()=>tM});function qO(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]])),M(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),M(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),M(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u=a==="NHWC"?i.shape[3]:i.shape[1],c=a==="NHWC"?l.shape[3]:l.shape[1];M(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),M(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),Xn("conv2dDerFilter",r,o);let p={x:i,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return W.runKernel(tm,p,d)}var fA=V({conv2DBackpropFilter_:qO});function Bm(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return L(e,Ip(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Wm(e,t){let n=t,s=Jt(e.shape,t.shape);return s.length>0&&(n=ke(n,s)),H(n,e.shape)}function Vm(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Mr(e);if(t==="elu")return wp(e);if(t==="relu6")return tA(e);if(t==="prelu")return Fm(e,n);if(t==="leakyrelu")return Nm(e,s);if(t==="sigmoid")return Cn(e);throw new Error(`Unknown fused activation ${t}.`)}var Um=(e,t)=>!(e>0)||t==="linear";function XO({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Um(W.state.gradientDepth,l)===!1){let v=Wa(e,t,n,s,r,a,o);return i!=null&&(v=ue(v,i)),Vm(v,l,u,c)}let p=$(e,"x","conv2d","float32"),d=$(t,"filter","conv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=H(p,[1,p.shape[0],p.shape[1],p.shape[2]])),M(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),M(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Xn("fused conv2d",s,o),M(h.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${d.shape[2]}.`),M(Or(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),M(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);let m=bp(h.shape,d.shape,n,a,s,o),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Lt(g,p),bt(m.outShape,g.shape));let y;u!=null&&(y=$(u,"prelu weights","fused conv2d"));let x=(v,k)=>{let[I,E,R,P]=k,_=Bm(v,R,l);M(Ba(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let D=By(E.shape,_,I,n,s),C=fA(E,_,I.shape,n,s),F=[D,C];if(P!=null){let U=Wm(P,_);F.push(U)}return F},A={x:h,filter:d,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return i==null?Pr((k,I,E)=>{let R=W.runKernel(Ma,A,b);return E([I,k,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,d):Pr((k,I,E,R)=>{let P=W.runKernel(Ma,A,b);return R([I,k,P,E]),f&&(P=H(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:x}})(h,d,g)}var KO=V({fusedConv2d_:XO});function ZO(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:i,dy:l},c={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return W.runKernel(am,u,c)}var R7=V({depthwiseConv2dNativeBackpropFilter_:ZO});function YO(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:i,filter:n},c={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},p=W.runKernel(om,u,c);return l?H(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var _7=V({depthwiseConv2dNativeBackpropInput_:YO});function JO({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Um(W.state.gradientDepth,l)===!1){let v=vp(e,t,n,s,r,a,o);return i!=null&&(v=ue(v,i)),Vm(v,l,u,c)}let p=$(e,"x","depthwiseConv2d","float32"),d=$(t,"filter","depthwiseConv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=H(p,[1,p.shape[0],p.shape[1],p.shape[2]])),M(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),M(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),M(h.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),a==null&&(a=[1,1]),M(Or(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),Xn("fused depthwiseConv2d",s,o);let m=bp(h.shape,d.shape,n,a,s,o,!0),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Lt(g,p),bt(m.outShape,g.shape));let y;u!=null&&(y=$(u,"prelu weights","fused depthwiseConv2d"));let x=(v,k)=>{M(Ba(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[I,E,R,P]=k,_=Bm(v,R,l),D=_7(E.shape,_,I,n,s,a,o),C=R7(E,_,I.shape,n,s,a,o);if(P!=null){let F=Wm(g,_);return[D,C,F]}return[D,C]},A={x:h,filter:d,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return i==null?Pr((k,I,E)=>{let R=W.runKernel(za,A,b);return E([I,k,R]),f&&(R=H(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,d):Pr((k,I,E,R)=>{let P=W.runKernel(za,A,b);return R([I,k,P,E]),f&&(P=H(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:x}})(h,d,g)}var QO=V({fusedDepthwiseConv2d_:JO});function eM({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(Um(W.state.gradientDepth,a)===!1){let _=Ye(e,t,n,s);return r!=null&&(_=ue(_,r)),Vm(_,a,o,i)}let l=$(e,"a","fused matMul"),u=$(t,"b","fused matMul");[l,u]=Lt(l,u);let c=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Tt(f),y=Tt(m);M(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`);let A=bt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,h]),b=n?H(l,[g,c,d]):H(l,[g,d,c]),v=s?H(u,[y,h,p]):H(u,[y,p,h]),k;r!=null&&(k=$(r,"bias","fused matMul"),[k]=Lt(k,l),bt(A,k.shape));let I;o!=null&&(I=$(o,"prelu weights","fused matMul"));let E=(_,D)=>{let[C,F,U,X]=D,z=Bm(H(_,U.shape),U,a),Z,B;if(!n&&!s?(Z=Ye(z,F,!1,!0),B=Ye(C,z,!0,!1)):!n&&s?(Z=Ye(z,F,!1,!1),B=Ye(z,C,!0,!1)):n&&!s?(Z=Ye(F,z,!1,!0),B=Ye(C,z,!1,!1)):(Z=Ye(F,z,!0,!0),B=Ye(z,C,!0,!0)),r!=null){let ee=Wm(X,z);return[Z,B,ee]}else return[Z,B]},R={a:b,b:v,bias:k,preluActivationWeights:I},P={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?Pr((D,C,F)=>{let U=W.runKernel(Oa,R,P);return F([D,C,U]),{value:H(U,A),gradFunc:E}})(b,v):Pr((D,C,F,U)=>{let X=W.runKernel(Oa,R,P);return U([D,C,X,F]),{value:H(X,A),gradFunc:E}})(b,v,k)}var tM=V({fusedMatMul_:eM});function nM(e){return hA(e,.54,.46)}var sM=V({hammingWindow_:nM});function rM(e){return hA(e,.5,.5)}var $7=V({hannWindow_:rM});function aM(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(Pe(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=St([Pe(e,a,t-i),hc([i],r)]);o.push(l),a+=n}return o.length===0?hr([],[0,t]):H(St(o),[o.length,t])}var D7=V({frame_:aM});function oM(e,t,n,s,r=$7){s==null&&(s=E7(t));let a=D7(e,t,n),o=L(a,r(t));return zm(o,s)}var iM=V({stft_:oM});function lM(e,t,n,s,r="bilinear",a=0){let o=$(e,"image","cropAndResize"),i=$(t,"boxes","cropAndResize","float32"),l=$(n,"boxInd","cropAndResize","int32"),u=i.shape[0];M(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),M(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),M(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),M(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),M(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let c={image:o,boxes:i,boxInd:l},p={method:r,extrapolationValue:a,cropSize:s};return W.runKernel(Ki,c,p)}var uM=V({cropAndResize_:lM});function cM(e){let t=$(e,"image","flipLeftRight","float32");M(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return W.runKernel(el,n,{})}var dM=V({flipLeftRight_:cM});function pM(e){let t=$(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];M(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),M(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Hs(t,r)}var hM=V({grayscaleToRGB_:pM});function fM(e,t,n=0,s=.5){let r=$(e,"image","rotateWithOffset","float32");M(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return W.runKernel(El,a,o)}var mM=V({rotateWithOffset_:fM});function Ac(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),M(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),M(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),M(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),M(t.rank===1,()=>"scores must be a 1D tensor"),M(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),M(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function gM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppression","float32"),o=$(t,"scores","nonMaxSuppression","float32"),i=Ac(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return W.runKernel(ul,{boxes:a,scores:o},l)}var yM=V({nonMaxSuppression_:gM});function AM(e,t,n){let s=xM(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function xM(e,t,n){return vM(e,t,n||bM)}function bM(e,t){return e>t?1:e<t?-1:0}function vM(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function P7(e,t,n,s,r){return mA(e,t,n,s,r,0)}function F7(e,t,n,s,r,a){return mA(e,t,n,s,r,0,!1,a,!0)}function O7(e,t,n,s,r,a){return mA(e,t,n,s,r,a,!0)}function mA(e,t,n,s,r,a,o=!1,i=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Gb);let c=a>0?-.5/a:0,p=[],d=[];for(;p.length<n&&u.length>0;){let g=u.pop(),{score:y,boxIndex:x,suppressBeginIndex:A}=g;if(y<r)break;let b=!1;for(let v=p.length-1;v>=A;--v){let k=wM(e,x,p[v]);if(k>=s){b=!0;break}if(g.score=g.score*kM(s,c,k),g.score<=r)break}g.suppressBeginIndex=p.length,b||(g.score===y?(p.push(x),d.push(g.score)):g.score>r&&AM(u,g,Gb))}let h=p.length,f=n-h;i&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return o&&(m.selectedScores=d),l&&(m.validOutputs=h),m}function wM(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(i-a)*(l-o),f=(p-u)*(d-c);if(h<=0||f<=0)return 0;let m=Math.max(a,u),g=Math.max(o,c),y=Math.min(i,p),x=Math.min(l,d),A=Math.max(y-m,0)*Math.max(x-g,0);return A/(h+f-A)}function kM(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function Gb(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function SM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppressionAsync"),o=$(t,"scores","nonMaxSuppressionAsync"),i=Ac(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:p}=P7(u,c,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),Ct(p,"int32")}var IM=SM;function CM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Ac(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let u={boxes:o,scores:i},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},p=W.runKernel(cl,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var TM=V({nonMaxSuppressionWithScore_:CM});async function NM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Ac(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let u=await Promise.all([o.data(),i.data()]),c=u[0],p=u[1],{selectedIndices:d,selectedScores:h}=O7(c,p,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ct(d,"int32"),selectedScores:Ct(h)}}var EM=NM;function RM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Ac(o,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,d={boxes:o,scores:i},h={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:a},f=W.runKernel(nc,d,h);return{selectedIndices:f[0],validOutputs:f[1]}}var _M=V({nonMaxSuppressionPadded_:RM});async function $M(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Ac(o,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[d,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=F7(d,h,u,c,p,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ct(f,"int32"),validOutputs:Ie(m,"int32")}}var DM=$M;function PM(e,t,n=!1,s=!1){let r=$(e,"images","resizeBilinear");M(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),M(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=W.runKernel(Po,i,l);return o?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var FM=V({resizeBilinear_:PM});function OM(e,t,n=!1,s=!1){let r=$(e,"images","resizeNearestNeighbor");M(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),M(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),M(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),M(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=H(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=W.runKernel(ac,i,l);return o?H(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var MM=V({resizeNearestNeighbor_:OM});function zM(e,t="binary",n=!1,s=.5){let r=$(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],u=L(Ct([s]),255),c,p,d,h;if(M(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),M(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),M(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),M(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,p,d]=Yt(r,[1,1,1],-1);let g=L(c,a),y=L(p,o),x=L(d,i);h=ue(ue(g,y),x)}else h=e;if(t==="otsu"){let g=zy(ge(nA(h),"int32"),ht([]),256);u=LM(g,l)}let f=n?Dl(h,u):As(h,u);return ge(L(f,255),"int32")}function LM(e,t){let n=Ct([-1]),s=Ct([0]),r=Ct([0]),a,o,i,l,u,c;for(let p=0;p<e.size-1;p++){a=Pe(e,0,p+1),o=Pe(e,p+1),u=de(ke(a),t),c=de(ke(o),t);let d=ke(L(a,Nu(0,a.size)));i=de(d,ke(a));let h=hc(o.shape,a.size),f=ue(Nu(0,o.size),h),m=L(o,f);l=de(ke(m),ke(o));let g=he(i,l),y=he(i,l),x=L(u,c);r=L(L(x,g),y);let A=As(r,s);s=Gn(A,r,s),n=Gn(A,Ct([p]),n)}return n}var BM=V({threshold_:zM});function WM(e,t,n="nearest",s="constant",r=0,a){let o=$(e,"image","transform","float32"),i=$(t,"transforms","transform","float32");M(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),M(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),M(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return W.runKernel(Cl,l,u)}var VM=V({transform_:WM});function UM(e,t,n){M(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),M(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=$(e,"a","bandPart");M(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=H(Nu(0,a,1,"int32"),[-1,1]),l=Nu(0,o,1,"int32"),u=he(i,l),c=gr(Dl(u,Ie(+t,"int32")),$l(u,Ie(-n,"int32"))),p=Ft([a,o],s.dtype);return H(cn(ss(H(s,[-1,a,o])).map(d=>Gn(c,d,p))),r)}var GM=V({bandPart_:UM});function HM(e){let t;if(Array.isArray(e)){t=!1,M(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)M(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=Yt(e,e.shape[0],0).map(r=>tt(r,[0]));M(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(W.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=L(ke(L(n[o],a)),n[o]);a=he(a,i)}return de(a,dA(a,"euclidean"))}));return t?cn(n,0):n}var jM=V({gramSchmidt_:HM});function qM(e,t=!1){if(M(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Hb(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),s=ss(H(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[u,c]=Hb(l,t);r.push(u),a.push(c)});let o=H(cn(r,0),e.shape),i=H(cn(a,0),e.shape);return[o,i]}}function Hb(e,t=!1){return W.tidy(()=>{M(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=Hy(n),a=Un(e),o=hr([[1]],[1,1]),i=Un(o),l=n>=s?s:n;for(let u=0;u<l;++u){let c=a,p=i,d=r;[i,a,r]=W.tidy(()=>{let h=Pe(a,[u,u],[n-u,1]),f=dA(h),m=Pe(a,[u,u],[1,1]),g=Gn(As(m,0),hr([[-1]]),hr([[1]])),y=he(m,L(g,f)),x=de(h,y);x.shape[0]===1?i=Un(o):i=St([o,Pe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let A=zt(de(Ye(g,y),f)),b=Pe(a,[u,0],[n-u,s]),v=L(A,i),k=et(i);if(u===0)a=he(b,Ye(v,Ye(k,b)));else{let R=he(b,Ye(v,Ye(k,b)));a=St([Pe(a,[0,0],[u,s]),R],0)}let I=et(v),E=Pe(r,[0,u],[n,r.shape[1]-u]);if(u===0)r=he(E,Ye(Ye(E,i),I));else{let R=he(E,Ye(Ye(E,i),I));r=St([Pe(r,[0,0],[n,u]),R],1)}return[i,a,r]}),ne([c,p,d])}return!t&&n>s&&(r=Pe(r,[0,0],[n,s]),a=Pe(a,[0,0],[s,s])),[r,a]})}var XM=V({qr_:qM}),M7=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(M7||{});function KM(e,t,n=3){let s=$(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=$(t,"weights","computeWeightedLoss"));let a=r==null?s:L(s,r);if(n===0)return a;if(n===2)return ke(a);if(n===1){if(r==null)return Vt(a);{let o=s.size/r.size,i=de(ke(a),ke(r));return o>1?de(i,Ie(o)):i}}if(n===3){if(r==null)return de(ke(a),Ie(s.size));{let o=L(r,ms(s.shape)),i=ge(ke(Tu(o,Ie(0))),"float32");return de(ke(a),i)}}throw Error(`Unknown reduction: ${n}`)}var aa=V({computeWeightedLoss_:KM});function ZM(e,t,n,s=3){let r=$(e,"labels","absoluteDifference"),a=$(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=$(n,"weights","absoluteDifference")),jn(r.shape,a.shape,"Error in absoluteDifference: ");let i=sn(he(r,a));return aa(i,o,s)}var YM=V({absoluteDifference_:ZM});function JM(e,t,n,s,r=3){let a=$(e,"labels","cosineDistance"),o=$(t,"predictions","cosineDistance"),i=null;s!=null&&(i=$(s,"weights","cosineDistance")),jn(a.shape,o.shape,"Error in cosineDistance: ");let l=Ie(1),u=he(l,ke(L(a,o),n,!0));return aa(u,i,r)}var QM=V({cosineDistance_:JM});function ez(e,t,n,s=3){let r=$(e,"labels","hingeLoss"),a=$(t,"predictions","hingeLoss"),o=null;n!=null&&(o=$(n,"weights","hingeLoss")),jn(r.shape,a.shape,"Error in hingeLoss: ");let i=Ie(1);r=he(L(Ie(2),r),i);let l=Mr(he(i,L(r,a)));return aa(l,o,s)}var tz=V({hingeLoss_:ez});function nz(e,t,n,s=1,r=3){let a=$(e,"labels","huberLoss"),o=$(t,"predictions","huberLoss"),i=null;n!=null&&(i=$(n,"weights","huberLoss")),jn(a.shape,o.shape,"Error in huberLoss: ");let l=Ie(s),u=sn(he(o,a)),c=Sp(u,l),p=he(u,c),d=ue(L(Ie(.5),At(c)),L(l,p));return aa(d,i,r)}var sz=V({huberLoss_:nz});function rz(e,t,n,s=1e-7,r=3){let a=$(e,"labels","logLoss"),o=$(t,"predictions","logLoss"),i=null;n!=null&&(i=$(n,"weights","logLoss")),jn(a.shape,o.shape,"Error in logLoss: ");let l=Ie(1),u=Ie(s),c=zt(L(a,Ps(ue(o,u)))),p=L(he(l,a),Ps(ue(he(l,o),u))),d=he(c,p);return aa(d,i,r)}var az=V({logLoss_:rz});function oz(e,t,n,s=3){let r=$(e,"labels","meanSquaredError"),a=$(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=$(n,"weights","meanSquaredError")),jn(r.shape,a.shape,"Error in meanSquaredError: ");let i=uA(r,a);return aa(i,o,s)}var iz=V({meanSquaredError_:oz});function lz(e,t){let n=$(e,"labels","sigmoidCrossEntropyWithLogits"),s=$(t,"logits","sigmoidCrossEntropyWithLogits");jn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Mr(s),a=L(s,n),o=Em(Ds(zt(sn(s))));return ue(he(r,a),o)}function uz(e,t,n,s=0,r=3){let a=$(e,"multiClassLabels","sigmoidCrossEntropy"),o=$(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","sigmoidCrossEntropy")),jn(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let u=Ie(s),c=Ie(1),p=Ie(.5);a=ue(L(a,he(c,u)),L(p,u))}let l=lz(a,o);return aa(l,i,r)}var cz=V({sigmoidCrossEntropy_:uz});function dz(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Pr((r,a,o)=>{let l=c7(a,[n],!0),u=he(ge(a,"float32"),l);o([r,u]);let c=zt(L(u,r));return{value:ke(c,[n]),gradFunc:(h,f)=>{let[m,g]=f,y=Fi(h.shape,[n]);return[L(H(h,y),he(ge(m,"float32"),Ds(g))),L(H(h,y),he(Ds(g),ge(m,"float32")))]}}})(e,t)}function pz(e,t,n,s=0,r=3){let a=$(e,"onehotLabels","softmaxCrossEntropy"),o=$(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","softmaxCrossEntropy")),jn(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let u=Ie(s),c=Ie(1),p=Ie(a.shape[1]);a=ue(L(a,he(c,u)),de(u,p))}let l=dz(a,o);return aa(l,i,r)}var hz=V({softmaxCrossEntropy_:pz});function fz(e,t,n,s){let r=$(e,"indices","sparseFillEmptyRows","int32"),a=$(t,"values","sparseFillEmptyRows"),o=$(n,"denseShape","sparseFillEmptyRows","int32"),i=$(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},u=W.runKernel(lp,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var mz=V({sparseFillEmptyRows_:fz});function gz(e,t,n){let s=$(e,"inputIndices","sparseReshape","int32"),r=$(t,"inputShape","sparseReshape","int32"),a=$(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=W.runKernel(uc,o);return{outputIndices:i[0],outputShape:i[1]}}var yz=V({sparseReshape_:gz});function Az(e,t,n){let s=$(e,"data","sparseSegmentMean"),r=$(t,"indices","sparseSegmentMean","int32"),a=$(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return W.runKernel(up,o)}var xz=V({sparseSegmentMean_:Az});function bz(e,t,n){let s=$(e,"data","sparseSegmentSum"),r=$(t,"indices","sparseSegmentSum","int32"),a=$(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return W.runKernel(cp,o)}var vz=V({sparseSegmentSum_:bz});function wz(e,t,n,s,r,a,o,i){let l=$(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=$(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},p={data:l,dataSplits:u},d=W.runKernel(pp,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}var kz=V({stringNGrams_:wz});function Sz(e,t,n=!0){let s=$(e,"input","stringSplit","string"),r=$(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=W.runKernel(xm,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var Iz=V({stringSplit_:Sz});function Cz(e,t){let n=$(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return W.runKernel(bm,r,s)}var Tz=V({stringToHashBucketFast_:Cz}),Nz={fft:Mm,ifft:Gd,rfft:zm,irfft:lA},Ez={hammingWindow:sM,hannWindow:$7,frame:D7,stft:iM},Se={flipLeftRight:dM,grayscaleToRGB:hM,resizeNearestNeighbor:MM,resizeBilinear:FM,rotateWithOffset:mM,cropAndResize:uM,nonMaxSuppression:yM,nonMaxSuppressionAsync:IM,nonMaxSuppressionWithScore:TM,nonMaxSuppressionWithScoreAsync:EM,nonMaxSuppressionPadded:_M,nonMaxSuppressionPaddedAsync:DM,threshold:BM,transform:VM},z7={bandPart:GM,gramSchmidt:jM,qr:XM},Rz={absoluteDifference:YM,computeWeightedLoss:aa,cosineDistance:QM,hingeLoss:tz,huberLoss:sz,logLoss:az,meanSquaredError:iz,sigmoidCrossEntropy:cz,softmaxCrossEntropy:hz},kd={sparseFillEmptyRows:mz,sparseReshape:yz,sparseSegmentMean:xz,sparseSegmentSum:vz},af={stringNGrams:kz,stringSplit:Iz,stringToHashBucketFast:Tz},oa=class extends Iw{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return ne(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return o7(e,t)}dispose(){this.iterations_!=null&&ne(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ie(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(oa,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Gm=class extends oa{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=W.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:K(()=>rt(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:K(()=>rt(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;K(()=>{let u=ue(L(i,this.rho),L(At(o),1-this.rho)),c=L(de(Nn(ue(l,this.epsilon)),Nn(ue(i,this.epsilon))),o),p=ue(L(l,this.rho),L(At(c),1-this.rho));i.assign(u),l.assign(p);let d=ue(L(c,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ne(this.accumulatedGrads.map(e=>e.variable)),ne(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Gm.className="Adadelta";Xo(Gm);var Hm=class extends oa{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=W.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:K(()=>hc(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;K(()=>{let i=ue(o,At(a));o.assign(i);let l=ue(L(de(a,Nn(ue(i,W.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ne(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Hm.className="Adagrad";Xo(Hm);var jm=class extends oa{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],K(()=>{this.accBeta1=Ie(t).variable(),this.accBeta2=Ie(n).variable()}),s==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);K(()=>{let n=he(1,this.accBeta1),s=he(1,this.accBeta2);t.forEach((r,a)=>{let o=W.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:K(()=>rt(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:K(()=>rt(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,p=ue(L(u,this.beta1),L(l,1-this.beta1)),d=ue(L(c,this.beta2),L(At(l),1-this.beta2)),h=de(p,n),f=de(d,s);u.assign(p),c.assign(d);let m=ue(L(de(h,ue(Nn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ne(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),K(()=>{this.accBeta1.assign(Ua(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ua(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};jm.className="Adam";Xo(jm);var qm=class extends oa{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],K(()=>{this.iteration=Ie(0).variable(),this.accBeta1=Ie(t).variable()}),s==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);K(()=>{let n=he(1,this.accBeta1),s=de(-this.learningRate,ue(L(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=W.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:rt(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:rt(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,p=ue(L(u,this.beta1),L(l,1-this.beta1)),d=L(c,this.beta2),h=sn(l),f=ra(d,h);u.assign(p),c.assign(f);let m=ue(L(de(s,n),de(p,ue(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(ue(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ne(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ne(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};qm.className="Adamax";Xo(qm);var Cp=class extends oa{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=W.registeredVariables[n];K(()=>{let o=ue(L(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=fn(Ie(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Cp.className="SGD";Xo(Cp);var Xm=class extends Cp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ie(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=W.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:K(()=>rt(r).variable(!1))});let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&K(()=>{let i,l=ue(L(this.m,a),o);this.useNesterov?i=ue(L(this.c,ue(o,L(l,this.m))),r):i=ue(L(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ne(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Xm.className="Momentum";Xo(Xm);var Km=class extends oa{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=W.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=W.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:K(()=>rt(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:K(()=>rt(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:K(()=>rt(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;K(()=>{let u=ue(L(i,this.decay),L(At(o),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,p=ue(L(c,this.decay),L(o,1-this.decay)),d=de(L(o,this.learningRate),Nn(he(u,ue(At(p),this.epsilon)))),h=ue(L(l,this.momentum),d);i.assign(u),c.assign(p),l.assign(h);let f=he(r,h);r.assign(f)}else{let c=ue(L(i,this.decay),L(At(o),1-this.decay)),p=ue(L(l,this.momentum),de(L(o,this.learningRate),Nn(ue(c,this.epsilon))));i.assign(c),l.assign(p);let d=he(r,p);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ne(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ne(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ne(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Km.className="RMSProp";Xo(Km);var Ta=class{static sgd(e){return new Cp(e)}static momentum(e,t,n=!1){return new Xm(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Km(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new jm(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Gm(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new qm(e,t,n,s,r)}static adagrad(e,t=.1){return new Hm(e,t)}},xi={sgd:Ta.sgd,momentum:Ta.momentum,adadelta:Ta.adadelta,adagrad:Ta.adagrad,rmsprop:Ta.rmsprop,adamax:Ta.adamax,adam:Ta.adam},_z=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function gA(){return new Promise(e=>_z(()=>e()))}var T={};Le(T,{ERF_A1:()=>Vz,ERF_A2:()=>Uz,ERF_A3:()=>Gz,ERF_A4:()=>Hz,ERF_A5:()=>jz,ERF_P:()=>Wz,PARALLELIZE_THRESHOLD:()=>yA,SELU_SCALE:()=>B7,SELU_SCALEALPHA:()=>L7,applyActivation:()=>Vm,assertAndGetBroadcastShape:()=>bt,assertAxesAreInnerMostDims:()=>UP,assertParamsConsistent:()=>$z,assignToTypedArray:()=>Jz,axesAreInnerMostDims:()=>Xy,calculateShapes:()=>mw,checkEinsumDimSizes:()=>rL,checkPadOnDimRoundingMode:()=>Xn,combineLocations:()=>i7,complexWithEvenIndex:()=>Kz,complexWithOddIndex:()=>Zz,computeConv2DInfo:()=>bp,computeConv3DInfo:()=>zw,computeDefaultPad:()=>Oy,computeDilation2DInfo:()=>lD,computeOptimalWindowSize:()=>Pz,computeOutAndReduceShapes:()=>l7,computeOutShape:()=>Dz,computePool2DInfo:()=>Mw,computePool3DInfo:()=>uD,convertConv2DDataFormat:()=>Lw,decodeEinsumEquation:()=>nL,eitherStridesOrDilationsAreOne:()=>Or,expandShapeToKeepDim:()=>Fi,exponent:()=>eL,exponents:()=>Qz,fromStringArrayToUint8:()=>IL,fromUint8ToStringArray:()=>SL,getAxesPermutation:()=>u7,getBroadcastDims:()=>dw,getComplexWithIndex:()=>Yz,getEinsumComputePath:()=>aL,getEinsumPermutation:()=>sL,getFusedBiasGradient:()=>Wm,getFusedDyActivation:()=>Bm,getImageCenter:()=>Fz,getInnerMostAxes:()=>GP,getPermuted:()=>Mz,getReductionAxes:()=>Jt,getReshaped:()=>Oz,getReshapedPermuted:()=>zz,getSliceBeginCoords:()=>Lz,getSliceSize:()=>Bz,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>uL,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>cL,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>dL,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>fL,getSparseReshapeInputOutputMismatchErrorMessage:()=>gL,getSparseReshapeInputOutputMultipleErrorMessage:()=>mL,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>pL,getSparseReshapeNegativeOutputDimErrorMessage:()=>hL,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>bL,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>yL,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>AL,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>xL,getUndoAxesPermutation:()=>Ky,isIdentityPermutation:()=>oL,log:()=>OR,mergeRealAndImagArrays:()=>qz,prepareAndValidate:()=>fw,prepareSplitSize:()=>lL,segment_util:()=>W7,shouldFuse:()=>Um,slice_util:()=>Mt,splitRealAndImagArrays:()=>Xz,tupleValuesAreOne:()=>Ba,upcastType:()=>Tn,validateInput:()=>Ty,validateUpdateShape:()=>Cy,warn:()=>Ea});function $z(e,t){let n=e[0].length;e.forEach((r,a)=>{M(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),M(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)M(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function Dz(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var yA=30;function Pz(e){return e<=yA?e:yf(e,Math.floor(Math.sqrt(e)))}function Fz(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function Oz(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function Mz(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2===1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function zz(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function Lz(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Bz(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var L7=1.7580993408473768,B7=1.0507009873554805,Wz=.3275911,Vz=.254829592,Uz=-.284496736,Gz=1.421413741,Hz=-1.453152027,jz=1.061405429;function qz(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Xz(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Kz(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Zz(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Yz(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function Jz(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function Qz(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function eL(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var ng="->",tL=/->/g,jb=",",qb="...";function nL(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(tL,"").length)/ng.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${ng}").`);let[s,r]=e.split(ng);M(s.indexOf(qb)===-1,()=>`The ellipsis notation ("${qb}") is not supported yet.`);let a=s.split(jb),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let d=0;d<r.length;++d){let h=r[d];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let d=0;d<s.length;++d){let h=s[d];i.indexOf(h)===-1&&h!==jb&&i.push(h)}let l=new Array(a.length);for(let d=0;d<o;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let h=0;h<a[d].length;++h)l[d].push(i.indexOf(a[d][h]))}let u=i.length,c=r.length,p=[];for(let d=c;d<u;++d)p.push(d);return{allDims:i,summedDims:p,idDims:l}}function sL(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function rL(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:M(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function aL(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=iL(t,i);for(let u of l)a.indexOf(u)===-1&&(s[o].push(u),a.push(u))}return{path:n,steps:s}}function oL(e){return e.every((t,n)=>t===n)}function iL(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function lL(e,t,n=0){let s=[];if(typeof t=="number")M(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);M(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}M(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function uL(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function cL(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function dL(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function pL(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function hL(e,t){return`size ${e} must be non-negative, not ${t}`}function fL(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function mL(e,t){let n=Tt(e),s=Tt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function gL(e,t){let n=Tt(e),s=Tt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function yL(){return"segment ids must be >= 0"}function AL(){return"segment ids are not increasing"}function xL(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function bL(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var W7={};Le(W7,{collectGatherOpShapeInfo:()=>kL,computeOutShape:()=>wL,segOpComputeOptimalWindowSize:()=>vL});function vL(e,t){let n=!1,s;for(e<=yA?(s=e,n=!0):s=yf(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=yf(e,s+1);return s}function wL(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function kL(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let p=0;p<s;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let o=e.shape[n],i=[],l=1,u=1,c=1;for(let p=0;p<s;++p)i.push(e.shape[p]),l*=e.shape[p];for(let p=s;p<n;p++)i.push(e.shape[p]),u*=e.shape[p];for(let p=s;p<r;p++)i.push(t.shape[p]);for(let p=n+1;p<a;p++)i.push(e.shape[p]),c*=e.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function SL(e){try{return e.map(t=>vf(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function IL(e){return e.map(t=>mp(t))}var Zs={};Le(Zs,{nonMaxSuppressionV3Impl:()=>P7,nonMaxSuppressionV4Impl:()=>F7,nonMaxSuppressionV5Impl:()=>O7,whereImpl:()=>S7});var qr=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qr.prototype)}},cr=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cr.prototype)}},j=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,j.prototype)}},Ve=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ve.prototype)}},V7=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,V7.prototype)}},U7=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Mi(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Nr(e,t){if(!e)throw new V7(t)}function Xb(e,t){let n=0;for(let s of e)s===t&&n++;return n}function ts(e){return e.length===1?e[0]:e}function It(e){return Array.isArray(e)?e:[e]}function Xr(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function ki(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Us={};function AA(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Ig(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>Ig(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:Ig(s))}}}function Tp(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in Us)o=Us[a];else if(o=t[a],o==null)throw new j(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new j(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in Us?[i,l]=Us.className:o in t&&([i,l]=t[o]),i==null)throw new j(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let h of Object.keys(Us))u[h]=Us[h];for(let h of Object.keys(n))u[h]=n[h];let c=a.config;c.customObjects=u;let p={...Us};for(let h of Object.keys(n))Us[h]=n[h];Ig(a.config);let d=l(i,a.config,n,r);return Us={...p},d}else{let u={...Us};for(let p of Object.keys(n))Us[p]=n[p];let c=new i(a.config);return Us={...u},c}}}function CL(e,t){return e<t?-1:e>t?1:0}function jh(e,t){return-1*CL(e,t)}function Da(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function TL(e){if(e==null)throw new j(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Fl(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new j(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function xA(e,t,n=0,s=1/0){return Nr(n>=0),Nr(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function mn(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>mn(n,`element ${s+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${G7(e)}.`)}function G7(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>G7(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function NL(e,t,n){let s=n!=null?n():w.now(),r;return(...o)=>{let i=n!=null?n():w.now();return i-s<t||(s=i,r=e(...o)),r}}function H7(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var EL=0;function j7(){return EL++}var qh={};function Zm(e=""){return e in qh||(qh[e]=0),qh[e]+=1,e+qh[e].toString()}var RL=["channelsFirst","channelsLast"],_L=["nearest","bilinear"],$L=["valid","same","causal"],DL=["max","avg"],PL=["sum","mul","concat","ave"],uu=new Map;function Ht(e){Fl(RL,"DataFormat",e)}function FL(e){Fl(_L,"InterpolationFormat",e)}function Bs(e){Fl($L,"PaddingMode",e)}function q7(e){Fl(DL,"PoolMode",e)}var Dd=[],Kb="/";function Ei(e,t){Dd.push(e);try{let n=t();return Dd.pop(),n}catch(n){throw Dd.pop(),n}}function OL(){return Dd.length===0?"":Dd.join(Kb)+Kb}function X7(e){if(!Z7(e))throw new Error("Not a valid tensor name: '"+e+"'");return OL()+e}function K7(e){if(!Z7(e))throw new Error("Not a valid tensor name: '"+e+"'");uu.has(e)||uu.set(e,0);let t=uu.get(e);if(uu.set(e,uu.get(e)+1),t>0){let n=`${e}_${t}`;return uu.set(n,1),n}else return e}var ML=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Z7(e){return!!e.match(ML)}function zL(e){return e===parseInt(e.toString(),10)}function Pa(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Eu(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function Ha(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function yr(e,t){if(t<e)throw new j(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}var sg;function an(){return sg==null&&(sg=Ls().epsilon()),sg}function Ar(){return"channelsLast"}function Ym(e,t){return ge(e,t)}function Np(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),H(e,n)}function LL(e,t){return K(()=>{if(e.shape.length!==2)throw new j(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=Np(e,1);return Cg(n,[1,t,1])})}function BL(e){let t=[Pa(e.shape)];return H(e,t)}function WL(e){if(e.rank<=1)throw new j(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Pa(e.shape,1)];return H(e,t)}function Ri(e,t,n){return K(()=>{switch(e.rank){case 1:return Om(e,t,n);case 2:return iA(e,[t,0],[n,e.shape[1]]);case 3:return Pl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Oi(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Pe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Pe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new j(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function rg(e,t,n){return K(()=>{switch(e.rank){case 1:return Om(e,t,n);case 2:return iA(e,[0,t],[e.shape[0],n]);case 3:return Pl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Oi(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new j(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Xh(e,t,n,s){return K(()=>{switch(e.rank){case 1:return Om(e,t,n);case 2:switch(s){case 1:return Ri(e,t,n);case 2:return rg(e,t,n);default:throw new j(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Ri(e,t,n);case 2:return Pl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return rg(e,t,n);default:throw new j(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Ri(e,t,n);case 2:return Oi(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Oi(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return rg(e,t,n);default:throw new j(`The axis is not within the rank of the tensor ${s}`)}default:throw new j(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function bA(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),St(e,t)}function Zb(e,t){switch(e.rank){case 1:return Hw([e,t]);case 2:return pc([e,t],0);case 3:return jw([e,t],0);case 4:return qw([e,t],0);default:throw new j(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Cg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new j(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Hs(e,t)}function Jm(e,t=0,n=1,s,r){return f7(e,t,n,s,r)}function _r(e,t,n,s){if(e.rank<2||t.rank<2)throw new Ve(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Ve(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Ga.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?Tg(e.rank,s,Ar()):null,activation:n});{let r=e.shape.slice(),a=r.pop();e=H(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),u=[...o,i],c=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=H(et(t,c),[l,-1]);let p=[...r,...u],d=!1,h=!1;return H(Ga.matMul({a:e,b:t,transposeA:d,transposeB:h,bias:s?Tg(e.rank,s,Ar()):null,activation:n}),p)}}function Y7(e,t,n){return K(()=>(Array.isArray(t)?t=Ct(t,"int32"):t=ge(t,"int32"),Cu(e,t,n)))}function Ep(e){return L(e,e)}function Tg(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new j(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1,1]):H(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1,1]):H(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,1,s[0]]):H(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?H(t,[1,s[0],1]):H(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?H(t,[1,1,s[0]]):H(t,[1].concat(s))}else if(e<3)return t;throw new j(`Unsupported input rank by biasAdd: ${t.rank}`)}function vr(e,t,n){return K(()=>(n==null&&(n=Ar()),Ht(n),ue(e,Tg(e.rank,t,n))))}function VL(e,t=1){if(t!==1)throw new Ve(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return wp(e)}function UL(e){return K(()=>de(e,ue(sn(e),1)))}function J7(e,t,n,s){return K(()=>N7(e,t,n,s))}function GL(e){return K(()=>{let t=ue(.5,L(.2,e));return gs(t,0,1)})}function Rp(e,t,n=!1){return n?e():t()}var HL=["fanIn","fanOut","fanAvg"],jL=["normal","uniform","truncatedNormal"];function qL(e){Fl(HL,"FanMode",e)}function XL(e){Fl(jL,"Distribution",e)}var Ys=class extends ce.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},vA=class extends Ys{apply(e,t){return Ft(e,t)}};vA.className="Zeros";ce.registerClass(vA);var Qm=class extends Ys{apply(e,t){return ms(e,t)}};Qm.className="Ones";ce.registerClass(Qm);var wA=class extends Ys{constructor(e){if(super(),typeof e!="object")throw new j(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new j(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return K(()=>L(Ie(this.value),ms(e,t)))}getConfig(){return{value:this.value}}};wA.className="Constant";ce.registerClass(wA);var kA=class extends Ys{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return gc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};kA.className="RandomUniform";ce.registerClass(kA);var SA=class extends Ys{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ve(`randomNormal does not support dType ${t}.`);return Jm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};SA.className="RandomNormal";ce.registerClass(SA);var IA=class extends Ys{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ve(`truncatedNormal does not support dType ${t}.`);return Lm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};IA.className="TruncatedNormal";ce.registerClass(IA);var CA=class extends Ys{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return K(()=>{if(e.length!==2||e[0]!==e[1])throw new j("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,Hy(e[0]))})}getConfig(){return{gain:this.gain}}};CA.className="Identity";ce.registerClass(CA);function KL(e,t="channelsLast"){let n,s;if(Ht(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=Pa(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=Pa(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=Pa(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var rs=class extends Ys{constructor(e){if(super(),e.scale<0)throw new j(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,qL(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,XL(this.distribution),this.seed=e.seed}apply(e,t){let n=KL(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Ve(`${this.getClassName()} does not support dType ${t}.`);return Lm(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return gc(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};rs.className="VarianceScaling";ce.registerClass(rs);var e0=class extends rs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rs.className}};e0.className="GlorotUniform";ce.registerClass(e0);var t0=class extends rs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rs.className}};t0.className="GlorotNormal";ce.registerClass(t0);var n0=class extends rs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rs.className}};n0.className="HeNormal";ce.registerClass(n0);var s0=class extends rs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rs.className}};s0.className="HeUniform";ce.registerClass(s0);var r0=class extends rs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return rs.className}};r0.className="LeCunNormal";ce.registerClass(r0);var a0=class extends rs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return rs.className}};a0.className="LeCunNormal";ce.registerClass(a0);var TA=class extends Ys{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Ve("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return K(()=>{if(e.length<2)throw new Ve("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=Jm(n,0,1,"float32"),r=z7.gramSchmidt(s);return e[0]>e[1]&&(r=et(r)),L(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};TA.className="Orthogonal";ce.registerClass(TA);var Yb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Jb(e,t={}){return Tp(e,ce.SerializationMap.getMap().classNameMap,t,"initializer")}function Ot(e){return AA(e)}function Rt(e){if(typeof e=="string"){let t=e in Yb?Yb[e]:e;if(t==="GlorotNormal")return new t0;if(t==="GlorotUniform")return new e0;if(t==="HeNormal")return new n0;if(t==="HeUniform")return new s0;if(t==="LeCunNormal")return new r0;if(t==="LeCunUniform")return new a0;{let n={};return n.className=t,n.config={},Jb(n)}}else return e instanceof Ys?e:Jb(e)}function Ng(e){return Array.isArray(e)&&Array.isArray(e[0])}function Nf(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function He(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new j(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function mt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new j(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Ef(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var Qb="Variable",Q7=class{constructor(e,t="float32",n=Qb,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=j7(),n=n==null?Qb:n,this.originalName=X7(n),this.name=K7(this.originalName),this.trainable_=s,this.constraint=r,this.val=k7(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),ZL(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function ZL(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Eg(e){return e.map(t=>t.read())}function NA(e){e.forEach(t=>{t[0].write(t[1])})}var Zt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},dr=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=j7(),a!=null&&(this.originalName=X7(a),this.name=K7(this.originalName)),this.rank=t.length}},YL=0,o0=class{constructor(e,t){this.callArgs=t,this.id=YL++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},JL=0,at=class extends ce.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=JL++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Xr(n)+"_"+Zm(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new cr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new j(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ts(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ts(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new qr(`Layer ${this.name} is not connected, no input to return.`);return ts(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new qr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new qr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ts(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=It(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=It(this.inputSpec);if(e.length!==t.length)throw new j(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new j(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),u=r.axes[i],c=l>=0?o[l]:o[o.length+l];if(u!=null&&[u,null].indexOf(c)===-1)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${u} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new j(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=It(e),s=!0;for(let a of n)if(!(a instanceof dr)){s=!1;break}let r=!0;for(let a of n)if(a instanceof dr){r=!1;break}if(s===r)throw new j("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ei(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of It(e))a.push(o.shape);this.build(ts(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=It(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=ts(i),this.activityRegularizer!=null)throw new Ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=QL(e),o=this.computeOutputShape(a),i,l=eB(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((u,c)=>new dr(l,u,this,It(e),t,this.name,c)):i=new dr(l,o,this,It(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new qr(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new qr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ef(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Eg(e?this.trainableWeights:this.weights)}setWeights(e){K(()=>{let t=this.weights;if(t.length!==e.length)throw new j(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=Eg(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!w.arraysEqual(a.shape,i.shape))throw new j(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}NA(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new j(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():Rt("zeros"));let l=s.apply(t,n),u=new Q7(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=It(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=It(e);t=It(t),n=It(n),s=It(s),r=Nf(r),a=Nf(a);let l=[],u=[],c=[];for(let p of i)l.push(p.sourceLayer),u.push(p.nodeIndex),c.push(p.tensorIndex);new o0({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function QL(e){e=It(e);let t=[];for(let n of e)t.push(n.shape);return ts(t)}function eB(e){return"float32"}function e6(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],u=e6(o,i,l);for(let c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}var xc=class extends at{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Zm("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new j("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new j("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new j("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new dr(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new o0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new j(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};xc.className="InputLayer";ce.registerClass(xc);function t6(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new j("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new xc({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function tB(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return ge(t,e.dtype)}catch(n){throw new j(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var Ci=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ci)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=tB(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new j(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof dr){if(this.id2Value[e.id]==null)throw new j(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new j(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof dr){if(this.id2Value[e.id]==null)throw new j(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new j(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&ne(this.id2Mask)}},Rf=new U7,_f=new U7;function nB(e){Rf!=null&&Rf.setMaxEntries(e),_f!=null&&_f.setMaxEntries(e)}function Sd(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],u=t.names();for(let f of i)u.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let c=i.join(",")+"|"+t.names().join(","),p=Rf.get(c),d;if(p==null){let f=sB(o,t);p=f.sorted,d=f.recipientCounts,Rf.put(c,p),_f.put(c,d)}d={},r||Object.assign(d,_f.get(c));let h=new Ci(t);for(let f=0;f<p.length;++f){if(s!=null){let R=Sf().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}let m=p[f],g=m.sourceLayer;if(g instanceof xc)continue;let y=[],x=[],A=[],b=!1;for(let R of m.inputs){let P=h.getValue(R),_=h.getMask(R);y.push(P),x.push(_),_!=null&&(b=!0),r||(d[R.name]--,d[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!P.isDisposed&&R.sourceLayer.stateful!==!0&&A.push(P))}b&&(n=n||{},n.mask=x[0]);let v=It(g.apply(y,n)),k=null;g.supportsMasking&&(k=g.computeMask(y,x));let I=aB(m),E=Array.isArray(I)?I:[I];for(let R=0;R<E.length;++R){h.hasKey(E[R])||h.add(E[R],v[R],Array.isArray(k)?k[0]:k);let P=i.indexOf(E[R].name);P!==-1&&(l[P]=v[R])}r||ne(A)}return h.disposeMasks(),a?l:l[0]}function sB(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=ev(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=ev(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(u=>s[l].add(u))}}return{sorted:n,recipientCounts:rB(s)}}function rB(e){let t={};for(let n in e)t[n]=e[n].size;return t}function ev(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let u of i.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(i.name),!n.has(u.name)&&a.push(u)}}return{sorted:s,recipientMap:r}}function aB(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var oB=Y();oB.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,nB);var n6={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Ip(ge(n,"float32"),-1))}}},iB={kernelName:zu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=At(ge(n,"float32")),r=Nn(he(Ie(1),s));return zt(de(e,r))}}}},lB={kernelName:Lu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Nn(he(At(ge(n,"float32")),1));return de(e,s)}}}},uB={kernelName:ta,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=bt(n.shape,s.shape);return{a:()=>{let i=e,l=Jt(n.shape,r);return l.length>0&&(i=ke(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Jt(s.shape,r);return l.length>0&&(i=ke(i,l)),H(i,s.shape)}}}},cB={kernelName:Ja,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},dB={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rt(n)}}},pB={kernelName:Vu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>rt(n)}}},hB={kernelName:Uu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,Nn(he(Ie(1),At(ge(n,"float32")))))}}},fB={kernelName:Gu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Nn(ue(Ie(1),At(ge(n,"float32"))));return de(e,s)}}}},mB={kernelName:qu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=bt(n.shape,s.shape);return{a:()=>{let i=ue(At(n),At(s)),l=L(e,de(s,i)),u=Jt(n.shape,r);return u.length>0&&(l=ke(l,u)),H(l,n.shape)},b:()=>{let i=ue(At(n),At(s)),l=zt(L(e,de(n,i))),u=Jt(s.shape,r);return u.length>0&&(l=ke(l,u)),H(l,s.shape)}}}},gB={kernelName:Hu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ue(At(ge(n,"float32")),1))}}},yB={kernelName:ju,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,he(Ie(1),At(ge(n,"float32"))))}}};function AB(e,t,n,s,r,a){let o=$(e,"dy","avgPool3dGrad"),i=$(t,"input","avgPool3dGrad"),l=o,u=i,c=!1;i.rank===4&&(c=!0,l=H(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),M(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Xn("avgPool3dGrad",r,a);let p={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=W.runKernel(Jf,p,d);return c?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var xB=V({avgPool3dGrad_:AB}),bB={kernelName:Yd,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>xB(e,s,r,a,o,i)}}};function vB(e,t,n,s,r){let a=$(e,"dy","avgPoolGrad"),o=$(t,"input","avgPoolGrad");M(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,u=!1;o.rank===3&&(u=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),M(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let c={dy:l,input:i},p={filterSize:n,strides:s,pad:r},d=W.runKernel(Yf,c,p);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var wB=V({avgPoolGrad_:vB}),kB={kernelName:eo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>wB(e,s,r,a,o)}}},SB={kernelName:to,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>Ye(e,r,!1,!0),b:()=>Ye(s,e,!0,!1)}:!a&&o?{a:()=>Ye(e,r,!1,!1),b:()=>Ye(e,s,!0,!1)}:a&&!o?{a:()=>Ye(r,e,!1,!0),b:()=>Ye(s,e,!1,!1)}:{a:()=>Ye(r,e,!0,!0),b:()=>Ye(e,s,!0,!0)}}},IB={kernelName:ji,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>Pm(e,s,r)}}},CB={kernelName:P4,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>ke(e,i,!0)}}},TB={kernelName:no,gradFunc:e=>({x:()=>e.clone()})},NB={kernelName:so,gradFunc:e=>({x:()=>rt(e)})},EB={kernelName:na,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Gn(gr($l(s,r),Dl(s,a)),e,rt(e))}}},RB={kernelName:Qd,inputsToSave:["x"],gradFunc:n6.gradFunc},_B={kernelName:qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=qs(r,t[0].shape)[0],o=s.map(l=>l[a]);return Yt(e,o,a).map(l=>()=>l)}},$B={kernelName:ro,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return M(Ba(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>By(s.shape,e,r,o,i,l),filter:()=>fA(s,e,r.shape,o,i,l)}}},DB={kernelName:ao,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>Wa(e,r,a,o,i,1,l),filter:()=>fA(e,s,r.shape,a,o,i,l)}}};function PB(e,t,n,s,r){let a=e;e.rank===4&&(a=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=H(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),M(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),M(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),M(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),M(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return W.runKernel(nm,i,l)}var FB=V({conv3DBackpropFilter_:PB}),OB={kernelName:ep,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;M(Ba(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>Xw(o.shape,e,i,r,a),filter:()=>FB(o,e,i.shape,r,a)}}},MB={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(zt(aA(ge(n,"float32"))),e)}}},zB={kernelName:io,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(oA(ge(n,"float32")),e)}}},LB={kernelName:lo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=u7([r],s.rank),l=Gy(e,r,a,!o);return i!=null&&(l=et(l,i)),l}}}},BB={kernelName:uo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s==null?[1,1]:s;M(Ba(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,u]=t;return M(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),M(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),M(Or(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),Xn("depthwiseConv2d",a,o),{x:()=>_7(l.shape,e,u,r,a,i,o),filter:()=>R7(l,e,u.shape,r,a,i,o)}}},WB={kernelName:tp,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>W.runKernel(Af,a,n),filter:()=>W.runKernel(xf,o,n)}}},VB={kernelName:po,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>W.runKernel(lm,s)}}},UB={kernelName:Xu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(Ds(zt(At(n))),2/Math.sqrt(Math.PI));return{x:()=>L(e,s)}}},GB={kernelName:ho,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,n)}}},HB={kernelName:Ji,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>H(e,n.shape)}}},jB={kernelName:Qi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Ds(n))}}},qB={kernelName:fo,gradFunc:e=>({x:()=>rt(e)})},XB={kernelName:mo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=bt(n.shape,s.shape);return{a:()=>{let i=de(e,ge(s,"float32")),l=Jt(n.shape,r);return l.length>0?H(ke(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Jt(s.shape,r);l.length>0&&(i=H(ke(i,l),s.shape));let u=At(s);return zt(de(i,ge(u,"float32")))}}}},KB={kernelName:go,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i==null?Ie(1):i,u=Jt(a.shape,r.shape),c=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)c.push(r.shape[b]);c.push(1)}let p=he(r,a),d=L(e,l),h=sA(ue(o,Ie(s))),f=L(L(L(h,h),h),Ie(-.5));return{x:()=>a.rank===1?H(L(L(e,Hs(H(h,[1,1,1,a.shape[0]]),c)),l),r.shape):H(L(L(e,h),l),r.shape),mean:()=>{let b=L(L(h,Ie(-1)),d);return a.rank===1&&(b=ke(b,u)),H(b,a.shape)},variance:()=>{let b=L(L(f,p),d);return a.rank===1&&(b=ke(b,u)),H(b,a.shape)},scale:()=>{let b=L(p,h),v=L(e,b);return a.rank===1&&(v=ke(v,u)),H(v,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=ke(b,u)),H(b,a.shape)}}}},ZB={kernelName:tl,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=qs(a,s.shape)[0];return{x:()=>{let l=s.shape,u=r.size,c=l.slice(0,o),p=c.length,d=l.slice(a,l.length).slice(1),h=d.length,f=tv(0,p),m=tv(p+1,p+1+h),g=nv([c,[u],d]),y=H(e,g),x=H(r,[u]),A=nv([[p],f,m]),b=et(y,A),v=w7(b,x,s.shape[o]),k=Ky(A);return v=et(v,k),v},indices:()=>r}}};function tv(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function nv(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var YB={kernelName:yo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>rt(n),b:()=>rt(s)}}},JB={kernelName:Ao,gradFunc:e=>({x:()=>ge(e,"float32")})},QB={kernelName:Zu,gradFunc:e=>({x:()=>rt(e)})},eW={kernelName:Yu,gradFunc:e=>({x:()=>rt(e)})},tW={kernelName:Ju,gradFunc:e=>({x:()=>rt(e)})},nW={kernelName:xo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=As(s,0);return{x:()=>Gn(a,e,L(e,r))}}},sW={kernelName:Qu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ue(n,1))}}},rW={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,ge(n,"float32"))}}},aW={kernelName:F4,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let o=Ds(s);return he(e,L(ke(e,r,!0),o))}}}};function oW(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return W.runKernel(pm,i,l)}var iW=V({localResponseNormalizationBackprop_:oW}),lW={kernelName:ap,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>iW(s,r,e,a,o,i,l)}}};function s6(e,t,n,s){return t.rank<n.rank&&(t=H(t,Fi(t.shape,s))),e.rank<n.rank&&(e=H(e,Fi(e.shape,s))),{x:()=>L(e,ge($s(n,t),e.dtype))}}var sv={kernelName:vo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=qs(r,a.shape),l=s6(e,o,a,i);return{x:()=>l.x()}}},uW={kernelName:wo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,ge($l(n,s),"float32")),b:()=>L(e,ge(jy(n,s),"float32"))}}};function cW(e,t,n,s,r,a,o){let i=$(e,"dy","maxPool3dGrad"),l=$(t,"input","maxPool3dGrad"),u=$(n,"output","maxPool3dGrad"),c=i,p=l,d=u,h=!1;l.rank===4&&(h=!0,c=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=H(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=H(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),M(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),M(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),M(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Xn("maxPool3dGrad",a,o);let f={dy:c,input:p,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=W.runKernel(fm,f,m);return h?H(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var dW=V({maxPool3dGrad_:cW}),pW={kernelName:op,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>dW(e,s,r,a,o,i,l)}}};function hW(e,t,n,s,r,a,o){let i=$(e,"dy","maxPoolGrad"),l=$(t,"input","maxPoolGrad"),u=$(n,"output","maxPoolGrad");M(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),M(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),M(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Xn("maxPoolGrad",a,o);let c={dy:i,input:l,output:u},p={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return W.runKernel(hm,c,p)}var fW=V({maxPoolGrad_:hW}),mW={kernelName:ko,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>fW(e,s,r,a,o,i)}}},gW={kernelName:So,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=qs(r,s.shape),i=l7(s.shape,a)[1],l=Tt(i);return{x:()=>{let c=s.shape.slice();a.forEach(h=>{c[h]=1});let p=H(e,c);return de(L(p,ms(s.shape,"float32")),l)}}}},yW={kernelName:Io,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=qs(r,a.shape),l=s6(e,o,a,i);return{x:()=>l.x()}}},AW={kernelName:Co,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,ge(Dl(n,s),"float32")),b:()=>L(e,ge(As(n,s),"float32"))}}},xW={kernelName:To,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Pe(e,a,s.shape)}}},bW={kernelName:tc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=bt(n.shape,s.shape);return{a:()=>{let i=Jt(n.shape,r);return i.length>0?H(ke(e,i),n.shape):e},b:()=>{let i=L(e,zt(kp(de(n,s)))),l=Jt(s.shape,r);return l.length>0?H(ke(i,l),s.shape):i}}}},vW={kernelName:No,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=bt(n.shape,s.shape);return{a:()=>{let i=L(e,ge(s,"float32")),l=Jt(n.shape,r);return l.length>0?H(ke(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Jt(s.shape,r);return l.length>0?H(ke(i,l),s.shape):i}}}},wW={kernelName:il,gradFunc:e=>({x:()=>zt(e)})},kW={kernelName:pl,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Ft(n.shape,"float32")}}},SW={kernelName:dl,gradFunc:e=>({x:()=>rt(e)})},IW={kernelName:hl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return ss(e,s).map(a=>()=>a)}},rv={kernelName:Eo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>Pe(e,a,s.shape)}}},CW={kernelName:Ro,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=bt(a.shape,o.shape);return{a:()=>{let c=ge(o,"float32"),p=L(e,L(c,Ua(a,he(c,Ie(1))))),d=Jt(a.shape,i);return d.length>0&&(p=ke(p,d)),H(p,a.shape)},b:()=>{let c=As(a,0),p=Gn(c,Ps(a),rt(a)),d=L(e,L(r,p)),h=Jt(o.shape,i);return h.length>0&&(d=ke(d,h)),H(d,o.shape)}}}},TW={kernelName:_o,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=As(n,0);return{x:()=>Gn(r,e,L(e,s)),alpha:()=>{let a=Gn(r,rt(e),L(e,n)),o=Jt(s.shape,e.shape);return o.length>0&&(a=ke(a,o)),H(a,s.shape)}}}};function NW(e,t,n){let s=e.shape.slice();s[n]=1;let r=H(t,s),a=Tf(e,n,!0,!1),o=Tf(e,n,!0,!0),i=L(a,o);return L(r,i)}function EW(e,t,n){let s=e.shape.length,r=s-n.length,a=T.getAxesPermutation(n,s),o=e;a!=null&&(o=et(e,a));let i=o.shape.slice(),u=i.splice(s-n.length,n.length).reduce((d,h)=>d*h,1);i.push(u);let c=o.reshape(i),p=NW(c,t,r);if(p=p.reshape(o.shape),a!=null){let d=T.getUndoAxesPermutation(a);p=et(p,d)}return p}var RW={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=[];return r==null?a=s.shape.map((o,i)=>i):typeof r=="number"?a=[r]:a=r,{x:()=>EW(s,e,a)}}},_W={kernelName:co,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=bt(n.shape,s.shape);return{a:()=>{let i=de(e,ge(s,"float32")),l=Jt(n.shape,r);return l.length>0?H(ke(i,l),n.shape):i},b:()=>{let i=L(e,ge(n,"float32")),l=Jt(s.shape,r);l.length>0&&(i=H(ke(i,l),s.shape));let u=At(s);return zt(de(i,ge(u,"float32")))}}}},$W={kernelName:rc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,zt(At(n)))}}},DW={kernelName:Fo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(Dl(n,6),Ip(n));return{x:()=>L(e,ge(s,"float32"))}}},PW={kernelName:Do,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,ge(Ip(n),"float32"))}}},FW={kernelName:fl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>H(e,n.shape)}}},OW={kernelName:Po,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>W.runKernel(Am,r,n)}}},MW={kernelName:ac,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>W.runKernel(ym,r,n)}}},zW={kernelName:ml,gradFunc:(e,t,n)=>{let{dims:s}=n,r=qs(s,e.shape);return{x:()=>Os(e,r)}}},LW={kernelName:gl,gradFunc:e=>({x:()=>rt(e)})},BW={kernelName:Oo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>zt(de(e,L(Ua(n,1.5),2)))}}},WW={kernelName:Al,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>ge(rt(n),"float32"),t:()=>L(e,ge(n,e.dtype)),e:()=>L(e,ge(_m(n),e.dtype))}}},VW={kernelName:oc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=As(n,Ie(0)),r=Ie(L7),a=Ie(B7),o=L(e,a),i=L(L(e,r),Ds(ge(n,"float32")));return Gn(s,o,i)}}}},UW={kernelName:zo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(n,he(Ie(1),n)))}}},GW={kernelName:ic,gradFunc:e=>({x:()=>rt(e)})},HW={kernelName:Mo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Cm(ge(n,"float32")),e)}}},jW={kernelName:bl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Uy(ge(n,"float32")),e)}}},qW={kernelName:xl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=Sw(s,r,a),u=[];for(let c=0;c<e.rank;c++)u.push([i[c],o[c]-i[c]-l[c]]);return{x:()=>Ks(e,u)}}},XW={kernelName:Wo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=L(e,s);return{logits:()=>he(o,L(ke(o,[r],a),s))}}},KW={kernelName:lc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Cn(n))}}},av={kernelName:vl,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>Im(e,s,r)}}},ov={kernelName:wl,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>St(e,s)}}},ZW={kernelName:Lo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,L(Nn(ge(n,"float32")),2))}}},YW={kernelName:cc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(ge(n,"float32"),2))}}},JW={kernelName:Vo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ie(2);return{a:()=>L(e,L(r,he(n,s))),b:()=>L(e,L(r,he(s,n)))}}},QW={kernelName:jo,gradFunc:e=>({x:()=>rt(e)})},eV={kernelName:Uo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=bt(n.shape,s.shape);return{a:()=>{let i=e,l=Jt(n.shape,r);return l.length>0&&(i=ke(i,l)),H(i,n.shape)},b:()=>{let i=e,l=Jt(s.shape,r);return l.length>0&&(i=ke(i,l)),H(zt(i),s.shape)}}}},tV={kernelName:Bo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;qs(a,s.shape).forEach(u=>{r[u]=1});let i=H(e,r),l=L(i,ms(s.shape,"float32"));return{x:()=>l}}},nV={kernelName:Sl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>de(e,At(Cm(n)))}}},sV={kernelName:Go,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(he(Ie(1),At(n)),e)}}},rV={kernelName:sa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=rt(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=ue(o,Pe(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=ue(o,Pe(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)o=ue(o,Pe(e,[i*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)o=ue(o,Pe(e,[i*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},aV={kernelName:Ho,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=Ky(r);return{x:()=>et(e,a)}}},oV={kernelName:Tl,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>cn(e,r)}}},iV={kernelName:hp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>lV(e,n)}}};function lV(e,t){let n=ra(t,rt(t)),s=Cu(e,n),r=$l(t,Ie(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=Kt(r,i+1);r=gr(r,ms(s.shape,"bool"));let o=rt(s);return Gn(r,s,o)}var uV={kernelName:Nl,gradFunc:e=>({x:()=>rt(e)})},cV=[n6,iB,lB,uB,cB,dB,pB,hB,fB,mB,gB,yB,bB,kB,SB,IB,CB,TB,NB,EB,RB,_B,DB,$B,OB,MB,zB,LB,BB,WB,_W,VB,UB,GB,HB,jB,XB,qB,KB,ZB,YB,JB,QB,eW,tW,nW,sW,rW,aW,lW,sv,sv,uW,pW,mW,gW,yW,AW,xW,bW,vW,wW,kW,SW,IW,rv,rv,CW,TW,RW,$W,DW,PW,FW,OW,MW,zW,LW,BW,WW,VW,UW,GW,HW,jW,qW,XW,KW,av,av,ov,ov,ZW,JW,YW,QW,eV,tV,nV,sV,rV,aV,oV,iV,uV];for(let e of cV)O4(e);var r6={};Le(r6,{maxNorm:()=>dV,minMaxNorm:()=>fV,nonNeg:()=>hV,unitNorm:()=>pV});function EA(e,t){return K(()=>Nn(ke(L(e,e),t,!0)))}var _p=class extends ce.Serializable{getConfig(){return{}}},RA=class extends _p{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>{let t=EA(e,this.axis),n=gs(t,0,this.maxValue);return L(e,de(n,ue(an(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};RA.className="MaxNorm";ce.registerClass(RA);var _A=class extends _p{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>de(e,ue(an(),EA(e,this.axis))))}getConfig(){return{axis:this.axis}}};_A.className="UnitNorm";ce.registerClass(_A);var $A=class extends _p{apply(e){return Mr(e)}};$A.className="NonNeg";ce.registerClass($A);var DA=class extends _p{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return K(()=>{let t=EA(e,this.axis),n=ue(L(this.rate,gs(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,de(n,ue(an(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};DA.className="MinMaxNorm";ce.registerClass(DA);var iv={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ln(e){return AA(e)}function lv(e,t={}){return Tp(e,ce.SerializationMap.getMap().classNameMap,t,"constraint")}function un(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in iv?iv[e]:e,config:{}};return lv(n)}else return e instanceof _p?e:lv(e)}function dV(e){return new RA(e)}function pV(e){return new _A(e)}function hV(){return new $A}function fV(e){return new DA(e)}var a6={};Le(a6,{constant:()=>yV,glorotNormal:()=>SV,glorotUniform:()=>kV,heNormal:()=>IV,heUniform:()=>CV,identity:()=>vV,leCunNormal:()=>TV,leCunUniform:()=>NV,ones:()=>gV,orthogonal:()=>EV,randomNormal:()=>xV,randomUniform:()=>AV,truncatedNormal:()=>bV,varianceScaling:()=>wV,zeros:()=>mV});function mV(){return new vA}function gV(){return new Qm}function yV(e){return new wA(e)}function AV(e){return new kA(e)}function xV(e){return new SA(e)}function bV(e){return new IA(e)}function vV(e){return new CA(e)}function wV(e){return new rs(e)}function kV(e){return new e0(e)}function SV(e){return new t0(e)}function IV(e){return new n0(e)}function CV(e){return new s0(e)}function TV(e){return new r0(e)}function NV(e){return new a0(e)}function EV(e){return new TA(e)}var o6={};Le(o6,{Layer:()=>at,RNN:()=>ia,RNNCell:()=>Pp,activation:()=>eG,add:()=>uG,alphaDropout:()=>jG,average:()=>cG,averagePooling1d:()=>Vx,averagePooling2d:()=>Ux,averagePooling3d:()=>Gx,avgPool1d:()=>xG,avgPool2d:()=>vG,avgPool3d:()=>kG,avgPooling1d:()=>bG,avgPooling2d:()=>wG,avgPooling3d:()=>SG,batchNormalization:()=>gG,bidirectional:()=>zG,concatenate:()=>dG,conv1d:()=>HU,conv2d:()=>jU,conv2dTranspose:()=>qU,conv3d:()=>XU,conv3dTranspose:()=>KU,convLstm2d:()=>PG,convLstm2dCell:()=>FG,cropping2D:()=>YU,dense:()=>tG,depthwiseConv2d:()=>QU,dot:()=>mG,dropout:()=>nG,elu:()=>LU,embedding:()=>lG,flatten:()=>rG,gaussianDropout:()=>HG,gaussianNoise:()=>GG,globalAveragePooling1d:()=>IG,globalAveragePooling2d:()=>CG,globalMaxPool1d:()=>BG,globalMaxPool2d:()=>WG,globalMaxPooling1d:()=>tk,globalMaxPooling2d:()=>nk,gru:()=>NG,gruCell:()=>EG,input:()=>S6,inputLayer:()=>zU,layerNormalization:()=>yG,leakyReLU:()=>WU,lstm:()=>RG,lstmCell:()=>_G,masking:()=>qG,maxPool1d:()=>VG,maxPool2d:()=>UG,maxPooling1d:()=>sk,maxPooling2d:()=>rk,maxPooling3d:()=>TG,maximum:()=>pG,minimum:()=>hG,multiply:()=>fG,permute:()=>iG,prelu:()=>VU,reLU:()=>BU,repeatVector:()=>aG,reshape:()=>oG,rnn:()=>OG,separableConv2d:()=>ZU,simpleRNN:()=>$G,simpleRNNCell:()=>DG,softmax:()=>UU,spatialDropout1d:()=>sG,stackedRNNCells:()=>MG,thresholdedReLU:()=>GU,timeDistributed:()=>LG,upSampling2d:()=>JU,zeroPadding2d:()=>AG});async function Na(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];ne(s)}}function i6(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var RV=125,Ru=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},l6=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},_V=class extends Ru{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=K(()=>ue(this.totals[s],L(r,n)));this.totals[s]=o,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:K(()=>{let s=L(de(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),fn(t[n])}))}},u6=class extends Ru{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},c6=class extends Ru{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||gA,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=RV),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=NL(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Na(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Na(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Na(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Na(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Na(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Na(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Na(e),await this.trainEnd(e))}};function d6(e,t){return e==null&&(e={}),e instanceof Ru?[e]:Array.isArray(e)&&e[0]instanceof Ru?e:It(e).map(s=>new c6(s,t))}var Cr=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Cr.checkForDuplicate(t),Cr.constructors[e]==null&&(Cr.constructors[e]=[]),Cr.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Cr.constructors)Cr.constructors[+t].forEach(s=>{if(s===e)throw new j("Duplicate callback constructor.")})}static clear(){Cr.constructors={}}static createCallbacks(e){let t=[];for(let n in Cr.constructors){let s=+n;e>=s&&t.push(...Cr.constructors[s])}return t.map(n=>new n)}},PA=Cr;PA.constructors={};function p6(e,t,n,s,r,a,o,i,l){let u=new u6,c=[new _V,...PA.createCallbacks(t)];e!=null&&c.push(...e),c.push(u);let p=new l6(c);return p.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:p,history:u}}function fr(e,t={},n=!1){return Tp(e,ce.SerializationMap.getMap().classNameMap,t,"layer",n)}function $f(e,t){return K(()=>{e.dtype!=="float32"&&(e=ge(e,"float32"));let n=ke(Ep(e),t,!0),s=hc(n.shape,an()),r=Nn(ra(n,s));return de(e,r)})}function Ol(e,t){return K(()=>Vt(Ep(he(t,e)),-1))}function i0(e,t){return K(()=>Vt(sn(he(t,e)),-1))}function bc(e,t){return K(()=>{let n=he(e,t),s=gs(sn(e),an(),Number.MAX_VALUE),r=sn(de(n,s));return L(100,Vt(r,-1))})}function $V(e,t){return K(()=>{let n=gs(t,an(),Number.MAX_VALUE),s=Ps(ue(1,n)),r=gs(e,an(),Number.MAX_VALUE),a=Ps(ue(1,r));return Vt(Ep(he(s,a)),-1)})}function DV(e,t){return K(()=>{let n=ra(0,he(1,L(e,t)));return Vt(Ep(n),-1)})}function PV(e,t){return K(()=>{let n=ra(0,he(1,L(e,t)));return Vt(n,-1)})}function FV(e,t){return K(()=>{let n=ke(L(e,t),-1),s=gn(L(he(1,e),t),-1);return ra(0,ue(1,he(s,n)))})}function OV(e,t){return K(()=>{let n=Math.log(2),s=he(t,e),r=he(ue(s,fc(L(-2,s))),n);return Vt(r,-1)})}function Hd(e,t,n=!1){return K(()=>{if(n)t=yc(t);else{let s=ke(t,t.shape.length-1,!0);t=de(t,s)}return t=gs(t,an(),1-an()),zt(ke(L(ge(e,"float32"),Ps(t)),t.shape.length-1))})}function Df(e,t,n=!1){return K(()=>{let s=ge(kp(BL(e)),"int32");t=gs(t,an(),1-an());let r=t.shape,a=H(Vd(s,r[r.length-1]),r);return Hd(a,t,n)})}function MV(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new j(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return K(()=>{let n=Mr(t),s=zt(sn(t));return ue(he(n,L(t,e)),Em(Ds(s)))})}function l0(e,t){return K(()=>{let n;return n=gs(t,an(),1-an()),n=Ps(de(n,he(1,n))),Vt(MV(e,n),-1)})}function zV(e,t){return K(()=>{let n=gs(e,an(),1),s=gs(t,an(),1);return ke(L(e,Ps(de(n,s))),-1)})}function LV(e,t){return K(()=>{let n=Ps(ue(an(),t));return Vt(he(t,L(e,n)),-1)})}function FA(e,t){return K(()=>{let n=$f(e,-1),s=$f(t,-1),r=L(n,s);return zt(ke(r,-1))})}var Pf={meanSquaredError:Ol,meanAbsoluteError:i0,meanAbsolutePercentageError:bc,meanSquaredLogarithmicError:$V,squaredHinge:DV,hinge:PV,categoricalHinge:FV,logcosh:OV,categoricalCrossentropy:Hd,sparseCategoricalCrossentropy:Df,binaryCrossentropy:l0,kullbackLeiblerDivergence:zV,poisson:LV,cosineProximity:FA};function ag(e){if(typeof e=="string"){if(e in Pf)return Pf[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new j(t)}else return e}function OA(e,t){return K(()=>{let n=L(.5,Fs(t)),s=Ym(As(t,n),e.dtype);return Vt($s(e,s),-1)})}function MA(e,t){return K(()=>Ym($s(_s(e,-1),_s(t,-1)),"float32"))}function h6(e,t){return K(()=>ge(ke(gr($s(e,1),$s(t,1))),"float32"))}function BV(e,t){return K(()=>ge(ke(gr($s(e,1),$s(t,0))),"float32"))}function WV(e,t){return K(()=>ge(ke(gr($s(e,0),$s(t,1))),"float32"))}function f6(e,t){return K(()=>{let n=h6(e,t),s=WV(e,t),r=ue(n,s);return ge(Gn(As(r,0),de(n,r),0),"float32")})}function VV(e,t){return K(()=>{let n=h6(e,t),s=BV(e,t),r=ue(n,s);return ge(Gn(As(r,0),de(n,r),0),"float32")})}function m6(e,t){return l0(e,t)}function g6(e,t){return e.rank===t.rank&&(e=tt(e,[e.rank-1])),t=_s(t,-1),t.dtype!==e.dtype&&(t=ge(t,e.dtype)),ge($s(e,t),"float32")}var UV=Ol,GV=Ol,HV=i0,jV=i0,qV=bc,XV=bc,zA=Hd,KV=FA,y6=Df,Ff={binaryAccuracy:OA,categoricalAccuracy:MA,precision:f6,categoricalCrossentropy:zA,sparseCategoricalCrossentropy:y6,mse:UV,MSE:GV,mae:HV,MAE:jV,mape:qV,MAPE:XV,cosine:KV};function ZV(e){if(typeof e=="string"&&e in Ff)return Ff[e];if(typeof e!="string"&&e!=null)return e;throw new j(`Unknown metric ${e}`)}function Kh(e){if(Nr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Pf))if(Pf[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Ff))if(Ff[n]===e){t=n;break}return t!==void 0?t:e.name}}function YV(e){let t={Adagrad:()=>xi.adagrad(.01),Adadelta:()=>xi.adadelta(1,.95,an()),Adam:()=>xi.adam(.001,.9,.999,an()),Adamax:()=>xi.adamax(.002,.9,.999,an(),0),RMSProp:()=>xi.rmsprop(.001,.9,0,an()),SGD:()=>xi.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new j(`Unknown Optimizer ${e}`)}var uv=1*1024*1024;function cv(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!Rg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>uv&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${uv}.`)}}function Rg(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!Rg(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!Rg(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function JV(e,t,n,s=console.log){let r=eU(e),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let o;if(!r){a.push("Receives inputs"),o=[];for(let c in e.nodesByDepth)o.push(...e.nodesByDepth[c])}s("_".repeat(t)),Of(a,n,s),s("=".repeat(t));let i=e.layers;for(let c=0;c<i.length;++c)r?tU(i[c],n,s):nU(i[c],n,o,s),s((c===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=QV(e),u=Ef(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function QV(e){let t;return e.collectedTrainableWeights!=null?t=Ef(e.collectedTrainableWeights):t=Ef(e.trainableWeights),t}function eU(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Of(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function tU(e,t,n){let s,r;try{r=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch(l){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(l){s="multiple"}let a=e.name,o=e.getClassName(),i=[`${a} (${o})`,r,s,e.countParams().toString()];Of(i,t,n)}function nU(e,t,n,s){let r,a;try{a=e.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch(p){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(p){r="multiple"}let o=[];for(let p of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(p)===-1))for(let d=0;d<p.inboundLayers.length;++d){let h=p.inboundLayers[d].name,f=p.nodeIndices[d],m=p.tensorIndices[d];o.push(`${h}[${f}][${m}]`)}let i=e.name,l=e.getClassName(),u=o.length===0?"":o[0],c=[`${i} (${l})`,a,r,e.countParams().toString(),u];Of(c,t,s);for(let p=1;p<o.length;++p)Of(["","","","",o[p]],t,s)}function A6(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function jd(e,t){if(e===null)return null;if(typeof e=="string")return ki(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];A6(t,r,a)?n.push(a):n.push(jd(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=ki(s);n[a]=jd(r,a)}}return n}}function _g(e,t){if(e==null)return null;if(typeof e=="string")return Xr(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];A6(t,r,a)?n.push(a):n.push(_g(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=Xr(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=_g(r,s)}return n}}var LA="0.0.0",Tr=class extends at{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=Zm(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Da(this.inputs).length!==this.inputs.length)throw new j(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Da(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(A),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;Nr(A===0,"input layer has >1 nodes"),Nr(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(A),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let x=this.inputLayers[y];if(!(x instanceof xc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},s={},r={},a={},o=[],i=(y,x,A,b,v,k)=>{(b==null||v==null||k==null)&&(b=y.sourceLayer,v=y.nodeIndex,k=y.tensorIndex);let I=b.inboundNodes[v];if(A.indexOf(I)!==-1)throw new cr(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(I)!==-1)return;this.containerNodes.add(Tr.nodeKey(b,v)),b.id in a||(a[b.id]=Object.keys(a).length),A.indexOf(I)===-1&&A.push(I);let E=I.inboundLayers.length;for(let R=0;R<E;R++){let P=I.inputTensors[R],_=I.inboundLayers[R],D=I.nodeIndices[R],C=I.tensorIndices[R];i(P,x,A,_,D,C)}for(x.push(I);A.indexOf(I)>=0;)A.splice(A.indexOf(I),1);o.push(I)},l=[],u=[];for(let y of this.outputs)i(y,l,u);let c=o.slice().reverse();for(let y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let x=t[y.id],A=s[y.outboundLayer.id]==null?0:s[y.outboundLayer.id];x=Math.max(x,A),s[y.outboundLayer.id]=x,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=x;for(let b=0;b<y.inboundLayers.length;b++){let v=y.inboundLayers[b],k=y.nodeIndices[b],I=v.inboundNodes[k],E=t[I.id]==null?0:t[I.id];t[I.id]=Math.max(x+1,E),n[I.id]=I}}let p={};for(let y in t){let x=t[y];x in p||(p[x]=[]),p[x].push(n[y])}let d={};for(let y in s){let x=s[y];x in d||(d[x]=[]),d[x].push(r[y])}let h=Object.keys(d).map(y=>parseInt(y,10)).sort(jh);this.layers=[];for(let y of h){let x=d[y];x.sort((A,b)=>{let v=a[A.id],k=a[b.id];return v<k?-1:v>k?1:0});for(let A of x)A instanceof Tr&&this.internalContainerRefs.push(A),this.layers.push(A)}this.layersByDepth=d,h=Object.keys(p).map(y=>parseInt(y,10)).sort(jh);let f=this.inputs.slice(),m=[];for(let y of h)for(let x of p[y]){let A=x.outboundLayer;if(A!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new cr(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${A.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(A.name)}}this.nodesByDepth=p;let g=this.layers.map(y=>y.name);for(let y of g){let x=g.filter(A=>A===y).length;if(x!==1)throw new cr(`The name "${y}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new o0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new j("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new j(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new j(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new j(`${a.length} of ${s} weights are not set: ${a}`)}NA(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${LA}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=_g(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return K(()=>{e=It(e);let n=new Ci;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return Sd(this.outputs,n,t)})}computeMask(e,t){return K(()=>{e=It(e);let n;return t==null?n=Mi(null,e.length):n=It(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Nf(e);if(t.length!==this.inputLayers.length)throw new j(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],u=i.name+"_0_0";n[u]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(jh);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let u=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(u.id)!==-1)continue;let c=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],x=`${m.name}_${g}_${y}`,A=n[x];c.push(A)}let p=u.computeOutputShape(ts(c)),d=Nf(p),h=u.inboundNodes.indexOf(l);for(let f=0;f<d.length;f++){let m=`${u.name}_${h}_${f}`;n[m]=d[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],u=this.outputLayersTensorIndices[o],c=`${i.name}_${l}_${u}`;a.push(c)}for(let o=0;o<a.length;o++){let i=a[o];Nr(i in n),r.push(n[i])}return ts(r)}runInternalGraph(e,t){t==null&&(t=Mi(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],u=e[i],c=t[i];n[l.id]=[u,c]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(jh);for(let i of s){let l=this.nodesByDepth[i];for(let u of l){let c=u.outboundLayer,p=u.inputTensors,d=u.outputTensors,h=new Array;for(let f of p)f.id in n&&h.push(n[f.id]);if(h.length===p.length){let f={},m,g,y,x;if(u.callArgs!=null&&(f=u.callArgs),h.length===1){let[A,b]=h[0];f.mask==null&&(f.mask=b),y=It(c.call(A,f)),x=It(c.computeMask(A,b)),m=[A],g=[b]}else m=h.map(A=>A[0]),g=h.map(A=>A[1]),f.mask==null&&(f.mask=g),y=It(c.call(m,f)),x=It(c.computeMask(m,g));if(c.activityRegularizer)throw new Ve("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let A=0;A<d.length;++A){let b=d[A],v=y[A],k=x[A];n[b.id]=[v,k]}}}}let r=[],a=[],o=[];for(let i of this.outputs){Nr(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,u]=n[i.id];o.push(l.shape),r.push(l),a.push(u)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Tr?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Tr.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new j(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new j("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new j(`No such layer: ${e}`)}calculateLosses(){return K(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Tr.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let c=0;c<a.inboundNodes.length;c++){let p=a.inboundNodes[c],d=Tr.nodeKey(a,c),h={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),h=p.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(p.inboundLayers.length>0){let f=[];for(let m=0;m<p.inboundLayers.length;m++){let g=p.inboundLayers[m],y=p.nodeIndices[m],x=p.tensorIndices[m],A=Tr.nodeKey(g,y),b=t[A];b==null&&(b=0),f.push([g.name,b,x,h])}l.push(f)}}}let u={};u.name=a.name,u.className=o,u.config=i,u.inboundNodes=l,n.push(u)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=Tr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.inputLayersTensorIndices[a];s.push([o.name,u,c])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=Tr.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.outputLayersTensorIndices[a];r.push([o.name,u,c])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let y=[],x;for(let A of g){let b=A[0],v=A[1],k=A[2];if(x=A[3]==null?{}:A[3],!(b in r)){o(m,g);return}let I=r[b];if(I.inboundNodes.length<=v){o(m,g);return}let E=I.inboundNodes[v];y.push(E.outputTensors[k])}y.length>0&&m.apply(ts(y),x)}function l(m){let g=m.name,y=fr(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(s),r[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new j(`Corrupted configuration, expected array for nodeData: ${A}`);o(y,A)})}let u=t.name,c=t.layers;for(let m of c)l(m);for(;!TL(a);)for(let m of c){let g=r[m.name];if(g.name in a){let y=a[g.name];delete a[g.name];for(let x of y)i(g,x)}}let p=[],d=[],h=t.inputLayers;for(let m of h){let g=m[0],y=m[1],x=m[2];Nr(g in r);let b=r[g].inboundNodes[y].outputTensors;p.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],x=m[2];Nr(g in r);let b=r[g].inboundNodes[y].outputTensors;d.push(b[x])}return new e({inputs:p,outputs:d,name:u})}get stateful(){if(this._stateful)throw new j("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){K(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function sU(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function x6(e,t){return sU(e,t,"classWeight")}async function b6(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=K(()=>{if(e.shape.length===1)return Un(e);if(e.shape.length===2){if(e.shape[1]>1)return _s(e,1);if(e.shape[1]===1)return H(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());ne(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),Ct(o,"float32")}else return null}function rU(e,t){return L(e,t)}var aU=32;function v6(e,t){let n,s,r=t;n=r.xs,s=r.ys,w.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=dv("input",e.inputNames,n),o=dv("output",e.outputNames,s),i=a[0].shape[0];w.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)w.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)w.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function dv(e,t,n){if(n instanceof st)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new j(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function oU(e){if(e.length===3)throw new Ve("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function iU(e,t,n){let s=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(pv(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=oU(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;r?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=d6(n.callbacks,n.yieldEvery),p=n.verbose==null?1:n.verbose,{callbackList:d,history:h}=p6(c,p,n.epochs,null,null,lU(t,n),null,r,u);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await d.onEpochBegin(f);let y=0,x=0;for(s||(m=await t.iterator());!s||y<n.batchesPerEpoch;){let A=await m.next();if(s&&A.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(A.value!=null){let{xs:b,ys:v}=v6(e,A.value),k={};k.batch=x,k.size=b[0].shape[0],await d.onBatchBegin(x,k);let I=[];if(n.classWeight!=null){let P=x6(n.classWeight,e.outputNames);for(let _=0;_<P.length;++_)I.push(await b6(v[_],null,P[_]))}let E=b.concat(v).concat(I),R=i(E);ne(E);for(let P=0;P<l.length;++P){let _=l[P],D=R[P];k[_]=D,fn(D)}await d.onBatchEnd(x,k),i6(k),x++,y++}if(s?y>=n.batchesPerEpoch:A.done){if(r){let b;pv(n.validationData)?b=It(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=It(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?aU:n.validationBatchSize,verbose:0}));for(let v=0;v<e.metricsNames.length;++v)g[`val_${e.metricsNames[v]}`]=b[v]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function lU(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function pv(e){return typeof e.iterator=="function"}function uU(e){return typeof e.next=="function"}async function cU(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Ve("Verbose mode is not implemented yet.");w.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=uU(t)?t:await t.iterator(),i=0,l=0;for(;!s||l<n.batches;){let u=await o.next();if(a=K(()=>{if(u.value){let{xs:c,ys:p}=v6(e,u.value),d=c.concat(p),h=K(()=>r(d));if(ne(d),l===0)for(let m=0;m<h.length;++m)a.push(Ie(0));let f=d[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],y=a[m];a[m]=K(()=>ue(a[m],L(f,g))),l>0&&ne(y)}ne(h),i+=f,++l}return a}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){let c=a[u];a[u]=de(a[u],i),ne(c)}return ts(a)}function $g(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Id(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>Ri(s,t,n-t)):Ri(e,t,n-t)}function BA(e,t){return K(()=>e==null?null:Array.isArray(e)?e.map(n=>BA(n,t)):Y7(e,t.dtype==="int32"?t:ge(t,"int32")))}function Dg(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function dU(e,t,n,s,r,a,o,i,l,u,c,p,d,h,f){r==null&&(r=32),a==null&&(a=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new j("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),y;g!=null&&(y=yr(0,g)),o==null&&(o=1);let{callbackList:x,history:A}=p6(i,o,a,d,g,h,r,m,p);x.setModel(e),e.history=A,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=d;b<a;++b){await x.onEpochBegin(b);let v={};if(h!=null)throw new Ve("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Ve("batch shuffling is not implemneted yet");c&&w.shuffle(y);let k=Ct(y),I=Dg(g,r);for(let E=0;E<I.length;++E){let R={};if(await x.onBatchBegin(E,R),K(()=>{let P=I[E][0],_=I[E][1],D=Ri(k,P,_-P);R.batch=E,R.size=_-P;let C=BA(n,D),F=t(C);for(let U=0;U<s.length;++U){let X=s[U],z=F[U];R[X]=z,fn(z)}if(E===I.length-1&&m){let U=e.testLoop(l,u,r);for(let X=0;X<s.length;++X){let z=s[X],Z=U[X];fn(Z),v["val_"+z]=Z}}}),await x.onBatchEnd(E,R),i6(R),e.stopTraining_)break}k.dispose()}if(await x.onEpochEnd(b,v),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function pU(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,u,c,p,d;try{let h=s.batchSize==null?32:s.batchSize;$g(h);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,h);r=m[0],a=m[1],d=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new Ve("validationData including sample weights is not supported yet."):new j(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let R=!0,P=await e.standardizeUserData(l,u,null,null,R,h);c=P[0],p=P[1],y=c.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let R=Math.floor(r[0].shape[0]*(1-s.validationSplit)),P=r[0].shape[0];c=Id(r,R,P),o=r,r=Id(r,0,R),p=Id(a,R,P),i=a,a=Id(a,0,R),y=c.concat(p)}else s.validationSteps!=null&&(g=!0);let x=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();let A=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),v,k;g?(e.makeTestFunction(),v=e.testFunction,k=b.slice().concat(b.map(R=>"val_"+R))):(v=null,y=[],k=b.slice());let I=d6(s.callbacks,s.yieldEvery);return await dU(e,A,x,b,h,s.epochs,s.verbose,I,v,y,s.shuffle,k,s.initialEpoch,null,null)}finally{e.isTraining=!1,ur(r,t),ur(a,n),ur(o,t),ur(i,n),ur(c,l),ur(p,u),d!=null&&ne(d)}}function w6(e){let t=[];e instanceof st&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(Np(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function ur(e,t){if(e==null)return;let n=[];if(t instanceof st)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof st)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function hU(e){return e instanceof st}function Pg(e){return Array.isArray(e)}function hv(e){return!hU(e)&&!Pg(e)}function fv(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(Pg(e)&&e.length>0)o=!0;else if(hv(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new j(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if(hv(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new j(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(Pg(e)){if(e=e,e.length!==t.length)throw new j(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new j(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=w6(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new j(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let u=i.shape[l],c=n[o][l];if(c!=null&&c>=0&&u!==c)throw new j(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function fU(e,t,n){let s=Da(e.map(a=>a.shape[0]));s.sort();let r=Da(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new j(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new j(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!w.arraysEqual(s,r))throw new j(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function mU(e,t,n){let s=[Ol,l0,Hd];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===Hd&&a.shape[a.shape.length-1]===1)throw new j(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){let p=l[c],d=u[c];if(d!=null&&p!==d)throw new j(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function mv(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new j(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new j(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new j(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let u=i.shape[l],c=n[o][l];if(c!=null&&c!==u)throw new j(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function gU(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var yU="layers-model",Jr=class extends Tr{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new j("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");JV(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=YV(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof oa))throw new j("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new j(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(ag(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new j(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>ag(o))}else{let a=ag(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ei("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=gU(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};Ei("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let u="",c,p,d;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===l0?["accuracy","acc"].indexOf(h)!==-1?p=OA:["crossentropy","ce"].indexOf(h)!==-1&&(p=m6):this.lossFunctions[a]===Df?["accuracy","acc"].indexOf(h)!==-1?p=g6:["crossentropy","ce"].indexOf(h)!==-1&&(p=y6):["accuracy","acc"].indexOf(h)!==-1?p=MA:["crossentropy","ce"].indexOf(h)!==-1&&(p=zA);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),d=p,c=u+g}else d=ZV(h),c=u+Kh(h);let f;Ei(c,()=>{f=d}),r(a,c,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;$g(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return ts(l)}finally{ur(a[0],e),ur(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),cU(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new j(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new j(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new j("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Ci;if(e instanceof st&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new j(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new j(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=Sd(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=Mi(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new j(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return K(()=>{let s=this.checkNumSamples(e);if(n)throw new Ve("Verbose predictLoop() is not implemented yet.");let r=Dg(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)K(()=>{let l=r[o][0],u=r[o][1],c=Id(e,l,u),p=[];if(Array.isArray(c))for(let h=0;h<c.length;++h)p.push({key:this.inputs[h],value:c[h]});else p.push({key:this.inputs[0],value:c});let d=new Ci(p);return Sd(this.outputs,d)}).forEach((l,u)=>a[u].push(l));return ts(a.map(o=>St(o,0)))})}predict(e,t={}){let n=w6(e);mv(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return $g(s),this.predictLoop(n,s)}finally{ur(n,e)}}predictOnBatch(e){mv(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new cr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===Df?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=fv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=fv(t,this.feedOutputNames,r,!1,"target"),fU(e,t,null),mU(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new j(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let u=x6(s,this.outputNames);l=[];for(let c=0;c<u.length;++c)l.push(await b6(i[c],null,u[c]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return K(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new Ve("Verbose mode is not implemented yet.");if(r!=null)throw new Ve("steps mode in testLoop() is not implemented yet");{let i=Dg(a,n),l=Ct(yr(0,a));for(let u=0;u<i.length;++u){let c=i[u][0],p=i[u][1],d=Ri(l,c,p-c),h=BA(t,d),f=e(h);if(u===0)for(let m=0;m<f.length;++m)o.push(Ie(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=ue(o[m],L(p-c,g))}}for(let u=0;u<o.length;++u)o[u]=de(o[u],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;Xb(e,s)>1&&(r+=`_${Xb(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let c=[];for(let f=0;f<this.inputs.length;++f)c.push({key:this.inputs[f],value:n[f]});let p=new Ci(c),d=Sd(this.outputs,p,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let g=this.lossFunctions[f](s[f],d[f]);r[f]!=null&&(g=rU(g,r[f]));let y=Vt(g);t.push(y),f===0?h=g:h=ue(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],y=this.metricsTensors[f][1];m=Vt(g(s[y],d[y]))}fn(m),a.push(m)}return h=Vt(h),this.calculateLosses().forEach(f=>{h=ue(h,f)}),h},i=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>K(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new Ci(a),i=Sd(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],c=Vt(u(r[l],i[l]));l===0?n=c:n=ue(n,c),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],c=this.metricsTensors[l][1],p=Vt(u(r[c],i[c]));t.push(p)}return t})}async fit(e,t,n={}){return pU(this,e,t,n)}async fitDataset(e,t){return iU(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let u=await l.data();i.push(u[0])}return ne(o),ur(n[0],e),ur(n[1],t),ts(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=Sf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Sf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Xr(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Xr(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=Xr(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Xr(Kh(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Xr(Kh(e)));{let e={};for(let t in this.metrics)e[t]=Xr(Kh(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=jd(e.optimizer_config),n=fr(t),s;if(typeof e.loss=="string")s=ki(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>ki(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=ki(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>ki(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=ki(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=In.getSaveHandlers(e);if(l.length===0)throw new j(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new j(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new j("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await In.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:yU,generatedBy:`TensorFlow.js tfjs-layers v${LA}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:u,specs:c}=await In.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...c),n.data=In.concatenateArrayBuffers([n.data,u])}return this.userDefinedMetadata!=null&&(cv(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){cv(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Jr.className="Model";ce.registerClass(Jr);var k6=class extends Jr{};k6.className="Functional";ce.registerClass(k6);async function AU(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=jd(n),r=fr(s,t);if(e.weightsManifest!=null){let a=await In.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),ne(a)}return r}async function xU(e,t){if(t==null&&(t={}),typeof e=="string"){let n=In.getLoadHandlers(e,t);if(n.length===0)n.push(In.browserHTTPRequest(e,t));else if(n.length>1)throw new j(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return bU(e,void 0,t)}async function bU(e,t,n){if(n==null&&(n={}),e.load==null)throw new j("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=fr(jd(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new j("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:c}=vU(s.weightData,s.weightSpecs);i.loadWeights(u,a),i.optimizer!=null&&c.length>0&&await i.optimizer.setWeights(c),ne(u),ne(c.map(p=>p.tensor))}return i}function vU(e,t){let n=In.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var Fg=class extends Jr{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Zm("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new j(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Fg||e instanceof Jr,n;if(t){if(n=e,n.outputs.length!==1)throw new j("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new j("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new j("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=t6({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new j(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new j("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=e6(this.outputs[0])}this.inboundNodes=[],new o0({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Mi(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(mt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Jr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new j("Legacy serialization format not supported yet.");r=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof Fg))throw new Ve(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let u=fr(i,void 0,s);s&&u.setFastWeightInitDuringBuild(!0),o.add(u)}return o}set stopTraining(e){if(this.model==null)throw new j("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new j("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},u0=Fg;u0.className="Sequential";ce.registerClass(u0);function wU(e){return new Jr(e)}function kU(e){return new u0(e)}function SU(e,t){return t==null&&(t={}),xU(e,t)}function S6(e){return t6(e)}function IU(e,t){PA.registerCallbackConstructor(e,t)}var os=class extends ce.Serializable{getConfig(){return{}}},I6=class extends os{apply(e,t=1){return VL(e,t)}};I6.className="elu";ce.registerClass(I6);var C6=class extends os{apply(e){return rA(e)}};C6.className="selu";ce.registerClass(C6);var T6=class extends os{apply(e){return Mr(e)}};T6.className="relu";ce.registerClass(T6);var N6=class extends os{apply(e){return K(()=>Sp(6,Mr(e)))}};N6.className="relu6";ce.registerClass(N6);var E6=class extends os{apply(e){return e}};E6.className="linear";ce.registerClass(E6);var R6=class extends os{apply(e){return Cn(e)}};R6.className="sigmoid";ce.registerClass(R6);var _6=class extends os{apply(e){return GL(e)}};_6.className="hardSigmoid";ce.registerClass(_6);var $6=class extends os{apply(e){return fc(e)}};$6.className="softplus";ce.registerClass($6);var D6=class extends os{apply(e){return UL(e)}};D6.className="softsign";ce.registerClass(D6);var P6=class extends os{apply(e){return Su(e)}};P6.className="tanh";ce.registerClass(P6);var WA=class extends os{apply(e,t=-1){return yc(e,t)}};WA.className="softmax";ce.registerClass(WA);var F6=class extends os{apply(e,t=-1){return qy(e,t)}};F6.className="logSoftmax";ce.registerClass(F6);var O6=class extends os{apply(e,t=1){return K(()=>L(Cn(L(e,t)),e))}};O6.className="swish";ce.registerClass(O6);var M6=class extends os{apply(e){return K(()=>L(e,Su(fc(e))))}};M6.className="mish";ce.registerClass(M6);function ja(e){return e.getClassName()}function og(e,t={}){return Tp(e,ce.SerializationMap.getMap().classNameMap,t,"activation")}function qa(e){if(e==null){let t={};return t.className="linear",t.config={},og(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},og(t)}else return e instanceof os?e:og(e)}function VA(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var z6=class extends ce.Serializable{},$p=class extends z6{constructor(e){super(),VA(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return K(()=>{let t=Ft([1]);return this.hasL1&&(t=ue(t,ke(L(this.l1,sn(e))))),this.hasL2&&(t=ue(t,ke(L(this.l2,Ep(e))))),H(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};$p.className="L1L2";ce.registerClass($p);function CU(e){return VA(e),new $p({l1:e!=null?e.l1:null,l2:0})}function TU(e){return VA(e),new $p({l2:e!=null?e.l2:null,l1:0})}var gv={l1l2:"L1L2"};function xt(e){return AA(e)}function yv(e,t={}){return Tp(e,ce.SerializationMap.getMap().classNameMap,t,"regularizer")}function _t(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in gv?gv[e]:e,config:{}};return yv(n)}else return e instanceof z6?e:yv(e)}var UA=class extends at{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=He(e);let n=Mr(e);return this.maxValue!=null&&(n=gs(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};UA.className="ReLU";ce.registerClass(UA);var GA=class extends at{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=He(e);return Nm(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};GA.className="LeakyReLU";ce.registerClass(GA);var HA=class extends at{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Rt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_t(e.alphaRegularizer),this.alphaConstraint=un(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new j(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=mt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Zt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=He(e),Fm(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Ot(this.alphaInitializer),alphaRegularizer:xt(this.alphaRegularizer),alphaConstraint:ln(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};HA.className="PReLU";ce.registerClass(HA);var jA=class extends at{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Ve(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=He(e);return wp(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};jA.className="ELU";ce.registerClass(jA);var qA=class extends at{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=He(e);return L(n,ge(As(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};qA.className="ThresholdedReLU";ce.registerClass(qA);var XA=class extends at{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new WA().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=He(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};XA.className="Softmax";ce.registerClass(XA);function bu(e,t,n){if(typeof e=="number")return Mi(e,t);if(e.length!==t)throw new j(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!zL(r))throw new j(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function mr(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function Er(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+Ha([n-t,0]);else if(s==="same")e=e*t;else throw new j(`Unsupport padding mode: ${s}.`);return e}function KA(e,t){return K(()=>(Ht(t),t==="channelsFirst"?et(e,[0,2,3,1]):e))}function L6(e,t){return K(()=>(Ht(t),t==="channelsFirst"?et(e,[0,2,3,4,1]):e))}function NU(e,t,n,s=1,r="valid",a,o=1){return K(()=>{if(a==null&&(a=Ar()),Ht(a),e.shape.length!==3)throw new j(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new j(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new j(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=et(e,[0,2,1])),r==="causal")throw new Ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Ly(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=vr(i,n)),i})}function Av(e,t,n,s=[1,1],r="valid",a,o,i=null){return K(()=>{if(a==null&&(a=Ar()),Ht(a),e.rank!==3&&e.rank!==4)throw new j(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new j(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=KA(e,a);if(r==="causal")throw new Ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ga.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=et(l,[0,3,1,2])),l})}function EU(e,t,n,s=[1,1,1],r="valid",a,o){return K(()=>{if(a==null&&(a=Ar()),Ht(a),e.rank!==4&&e.rank!==5)throw new j(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new j(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=L6(e,a);if(r==="causal")throw new Ve("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Vy(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=vr(i,n)),a==="channelsFirst"&&(i=et(i,[0,4,1,2,3])),i})}var ZA=class extends at{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ZA.verifyArgs(t),this.rank=e,mn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ve(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=bu(t.kernelSize,e,"kernelSize"),this.strides=bu(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Bs(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ht(this.dataFormat),this.activation=qa(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Rt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=un(t.biasConstraint),this.biasRegularizer=_t(t.biasRegularizer),this.activityRegularizer=_t(t.activityRegularizer),this.dilationRate=bu(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new j(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new j(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new j(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Nr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!xA(e.kernelSize,"number",1,3))throw new j(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ja(this.activation),useBias:this.useBias,biasInitializer:Ot(this.biasInitializer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),biasConstraint:ln(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Dp=class extends ZA{constructor(e,t){super(e,t),this.kernel=null,Dp.verifyArgs(t),this.filters=t.filters,mn(this.filters,"filters"),this.kernelInitializer=Rt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=un(t.kernelConstraint),this.kernelRegularizer=_t(t.kernelRegularizer)}build(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new j(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return K(()=>{e=He(e);let n,s=this.bias==null?null:this.bias.read(),r=H7(this.activation.getClassName());if(r!=null&&this.rank===2)n=Av(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=NU(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=Av(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=EU(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ve("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=mt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=mr(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Ot(this.kernelInitializer),kernelRegularizer:xt(this.kernelRegularizer),kernelConstraint:ln(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new j(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},B6=class extends Dp{constructor(e){super(2,e),B6.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!xA(e.kernelSize,"number",1,2))throw new j(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},c0=B6;c0.className="Conv2D";ce.registerClass(c0);var W6=class extends Dp{constructor(e){super(3,e),W6.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new j(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},d0=W6;d0.className="Conv3D";ce.registerClass(d0);var YA=class extends c0{constructor(e){if(super(e),this.inputSpec=[new Zt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new j(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=mt(e),e.length!==4)throw new j("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new j("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Zt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{let n=He(e);if(n.shape.length!==4)throw new j(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],u=this.kernelSize[0],c=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=Er(i,p,u,this.padding),f=Er(l,d,c,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=et(n,[0,2,3,1]));let g=Wy(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=et(g,[0,3,1,2])),this.bias!=null&&(g=vr(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=mt(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Er(t[s],i,a,this.padding),t[r]=Er(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};YA.className="Conv2DTranspose";ce.registerClass(YA);var JA=class extends d0{constructor(e){if(super(e),this.inputSpec=[new Zt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new j(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=mt(e),e.length!==5)throw new j("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new j("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Zt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{let n=He(e);if(n.shape.length!==5)throw new j(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],u=s[a],c=s[o],p=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=Er(l,f,p,this.padding),x=Er(u,m,d,this.padding),A=Er(c,g,h,this.padding),b=[r,y,x,A,this.filters];this.dataFormat!=="channelsLast"&&(n=et(n,[0,2,3,4,1]));let v=Kw(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=et(v,[0,4,1,2,3])),this.bias!==null&&(v=vr(v,this.bias.read(),this.dataFormat)),this.activation!==null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=mt(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],p=this.strides[2];return t[n]=this.filters,t[s]=Er(t[s],u,o,this.padding),t[r]=Er(t[r],c,i,this.padding),t[a]=Er(t[a],p,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};JA.className="Conv3DTranspose";ce.registerClass(JA);var V6=class extends Dp{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new j("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new j("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new j(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Rt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_t(t.depthwiseRegularizer),this.depthwiseConstraint=un(t.depthwiseConstraint),this.pointwiseInitializer=Rt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_t(t.pointwiseRegularizer),this.pointwiseConstraint=un(t.pointwiseConstraint)}build(e){if(e=mt(e),e.length<this.rank+2)throw new j(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new j(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Zt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return K(()=>{e=He(e);let n;if(this.rank===1)throw new Ve("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=et(e,[0,2,3,1])),n=g7(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=vr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=et(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ot(this.depthwiseInitializer),e.pointwiseInitializer=Ot(this.pointwiseInitializer),e.depthwiseRegularizer=xt(this.depthwiseRegularizer),e.pointwiseRegularizer=xt(this.pointwiseRegularizer),e.depthwiseConstraint=ln(this.depthwiseConstraint),e.pointwiseConstraint=ln(this.pointwiseConstraint),e}};V6.className="SeparableConv";var QA=class extends V6{constructor(e){super(2,e)}};QA.className="SeparableConv2D";ce.registerClass(QA);var U6=class extends Dp{constructor(e){super(1,e),U6.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!xA(e.kernelSize,"number",1,1))throw new j(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},ex=U6;ex.className="Conv1D";ce.registerClass(ex);var tx=class extends at{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return K(()=>{if(e=He(e),this.dataFormat==="channelsLast"){let n=Xh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Xh(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Xh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Xh(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};tx.className="Cropping2D";ce.registerClass(tx);var nx=class extends at{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,FL(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return K(()=>{let n=He(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=et(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?Se.resizeNearestNeighbor(n,[r,a]):Se.resizeBilinear(n,[r,a]);return et(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Se.resizeNearestNeighbor(n,[r,a]):Se.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};nx.className="UpSampling2D";ce.registerClass(nx);function RU(e,t,n=[1,1],s="valid",r,a){return K(()=>{r==null&&(r=Ar()),Ht(r);let o=KA(e,r);if(e.rank!==4)throw new j(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new j(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=vp(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=et(o,[0,3,1,2])),o})}var sx=class extends ZA{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Rt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=un(e.depthwiseConstraint),this.depthwiseRegularizer=_t(e.depthwiseRegularizer)}build(e){if(e=mt(e),e.length<4)throw new j(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new j(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{e=He(e);let n=RU(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=vr(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=mr(t,this.kernelSize[0],this.padding,this.strides[0]),a=mr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ot(this.depthwiseInitializer),e.depthwiseRegularizer=xt(this.depthwiseRegularizer),e.depthwiseConstraint=ln(this.depthwiseRegularizer),e}};sx.className="DepthwiseConv2D";ce.registerClass(sx);function G6(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new j("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function H6(e,t,n,s=!1,r,a,o=!1,i=!1){return K(()=>{let l=t.shape.length;if(l<3)throw new j(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(yr(2,l));if(t=et(t,u),a!=null)throw new Ve("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=ge(ge(r,"bool"),"float32"),r.rank===l-1&&(r=Kt(r,-1)),r=et(r,u)),s&&(t=Os(t,0),r!=null&&(r=Os(r,0)));let c=[],p,d=n,h=t.shape[0],f=ss(t),m;r!=null&&(m=ss(r));for(let y=0;y<h;++y){let x=f[y],A=K(()=>e(x,d));if(r==null)p=A[0],d=A[1];else{let b=K(()=>{let v=m[y],k=he(Fs(v),v),I=ue(L(A[0],v),L(d[0],k)),E=d.map((R,P)=>ue(L(A[1][P],v),L(R,k)));return{output:I,newStates:E}});p=b.output,d=b.newStates}i&&c.push(p)}let g;return i&&(g=cn(c,1)),[p,g,d]})}var j6=class extends at{constructor(e){super(e);let t;if(e.cell==null)throw new j("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new f0({cells:e.cell}):t=e.cell,t.stateSize==null)throw new j("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Zt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return yr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ng(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return K(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Ve("Constants support is not implemented in RNN yet.");Ng(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Zt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new j(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new Zt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){K(()=>{if(!this.stateful)throw new qr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new j("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ft([n,s])):this.states_=[Ft([n,this.cell.stateSize])];else if(e==null)ne(this.states_),this.keptStates!=null&&(ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Ft([n,s])):this.states_[0]=Ft([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new j(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):ne(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!w.arraysEqual(r.shape,o))throw new j(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>fn(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=G6(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Zt({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof dr){let l=[e].concat(a),u=this.inputSpec.concat(o),c=this.inputSpec;this.inputSpec=u;let p=super.apply(l,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return K(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=He(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new j(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=H6((h,f)=>{let m=this.cell.call([h].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=l[0],c=l[1],p=l[2];this.stateful&&this.resetStates(p,s);let d=this.returnSequences?c:u;return this.returnState?[d].concat(p):d})}getInitialState(e){return K(()=>{let t=Ft(e.shape);return t=ke(t,[1,2]),t=Np(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Cg(t,[1,n]):t):this.cell.stateSize>1?[Cg(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===j6.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=fr(s,n);return new e(Object.assign(t,{cell:r}))}},ia=j6;ia.className="RNN";ce.registerClass(ia);var Pp=class extends at{},p0=class extends Pp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,mn(this.units,"units"),this.activation=qa(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Rt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=un(e.kernelConstraint),this.recurrentConstraint=un(e.recurrentConstraint),this.biasConstraint=un(e.biasConstraint),this.dropout=Eu([1,Ha([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Eu([1,Ha([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{if(e=e,e.length!==2)throw new j(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xa({ones:()=>Fs(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xa({ones:()=>Fs(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=_r(L(e,a),this.kernel.read()):r=_r(e,this.kernel.read()),this.bias!=null&&(r=vr(r,this.bias.read())),o!=null&&(n=L(n,o));let i=ue(r,_r(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ja(this.activation),useBias:this.useBias,kernelInitializer:Ot(this.kernelInitializer),recurrentInitializer:Ot(this.recurrentInitializer),biasInitializer:Ot(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:ln(this.kernelConstraint),recurrentConstraint:ln(this.recurrentConstraint),biasConstraint:ln(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};p0.className="SimpleRNNCell";ce.registerClass(p0);var rx=class extends ia{constructor(e){e.cell=new p0(e),super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};rx.className="SimpleRNN";ce.registerClass(rx);var h0=class extends Pp{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new j("GRUCell does not support reset_after parameter set to true.");this.units=e.units,mn(this.units,"units"),this.activation=qa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Rt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=un(e.kernelConstraint),this.recurrentConstraint=un(e.recurrentConstraint),this.biasConstraint=un(e.biasConstraint),this.dropout=Eu([1,Ha([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Eu([1,Ha([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return K(()=>{if(e=e,e.length!==2)throw new j(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xa({ones:()=>Fs(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xa({ones:()=>Fs(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=L(e,r[0]));let u=_r(e,this.kernel.read());this.useBias&&(u=vr(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,a[0]));let c=this.recurrentKernel.read(),[p,d]=Yt(c,[2*this.units,this.units],c.rank-1),h=_r(s,p),[f,m,g]=Yt(u,3,u.rank-1),[y,x]=Yt(h,2,h.rank-1);o=this.recurrentActivation.apply(ue(f,y)),i=this.recurrentActivation.apply(ue(m,x));let A=_r(L(i,s),d);l=this.activation.apply(ue(g,A));let b=ue(L(o,s),L(ue(1,zt(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ja(this.activation),recurrentActivation:ja(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ot(this.kernelInitializer),recurrentInitializer:Ot(this.recurrentInitializer),biasInitializer:Ot(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:ln(this.kernelConstraint),recurrentConstraint:ln(this.recurrentConstraint),biasConstraint:ln(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};h0.className="GRUCell";ce.registerClass(h0);var ax=class extends ia{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new h0(e),super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};ax.className="GRU";ce.registerClass(ax);var Fp=class extends Pp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,mn(this.units,"units"),this.activation=qa(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qa(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Rt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_t(e.kernelRegularizer),this.recurrentRegularizer=_t(e.recurrentRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.kernelConstraint=un(e.kernelConstraint),this.recurrentConstraint=un(e.recurrentConstraint),this.biasConstraint=un(e.biasConstraint),this.dropout=Eu([1,Ha([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Eu([1,Ha([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=mt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends Ys{apply(o,i){let l=r.apply([a]),u=new Qm().apply([a]),c=r.apply([a*2]);return Zb(Zb(l,u),c)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return K(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new j(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xa({ones:()=>Fs(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xa({ones:()=>Fs(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,u,c;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let p=_r(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,o[0])),p=ue(p,_r(s,this.recurrentKernel.read())),this.useBias&&(p=vr(p,this.bias.read()));let[d,h,f,m]=Yt(p,4,p.rank-1);i=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(h),u=ue(L(l,r),L(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);let g=L(c,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:ja(this.activation),recurrentActivation:ja(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ot(this.kernelInitializer),recurrentInitializer:Ot(this.recurrentInitializer),biasInitializer:Ot(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:ln(this.kernelConstraint),recurrentConstraint:ln(this.recurrentConstraint),biasConstraint:ln(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};Fp.className="LSTMCell";ce.registerClass(Fp);var ox=class extends ia{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Fp(e),super(e)}call(e,t){return K(()=>{this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};ox.className="LSTM";ce.registerClass(ox);var f0=class extends Pp{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return K(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){Ng(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{Ei(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(fr(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return Eg(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}NA(t)}};f0.className="StackedRNNCells";ce.registerClass(f0);function Xa(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):J7(t(),n),i=()=>Rp(o,t,s);return!r||r<=1?fn(i().clone()):Array(r).fill(void 0).map(i).map(u=>fn(u.clone()))}var q6=class extends ia{constructor(e){if(e.unroll)throw new Ve("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ve("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Zt({ndim:5})]}call(e,t){return K(()=>{if(this.cell.dropoutMask!=null&&(ne(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(ne(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new j("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return K(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Ft(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){K(()=>{if(!this.stateful)throw new qr("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new j("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ft(r)):this.states_=[Ft(r)];else if(e==null)ne(this.states_),this.keptStates!=null&&(ne(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ft(r)):this.states_[0]=Ft(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new j(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ne(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!w.arraysEqual(i.shape,l))throw new j(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>fn(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],u=e[i?4:3],c=mr(l,s[0],r,a[0],o[0]),p=mr(u,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,c,p]:[c,p,n]]}};q6.className="ConvRNN2D";var m0=class extends Fp{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super({...e,units:t}),this.filters=t,mn(this.filters,"filters"),this.kernelSize=bu(n,2,"kernelSize"),this.kernelSize.forEach(i=>mn(i,"kernelSize")),this.strides=bu(s||1,2,"strides"),this.strides.forEach(i=>mn(i,"strides")),this.padding=r||"valid",Bs(this.padding),this.dataFormat=a||"channelsLast",Ht(this.dataFormat),this.dilationRate=bu(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>mn(i,"dilationRate"))}build(e){var t;e=mt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new j(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,u=this.filters;i=new(t=class extends Ys{apply(c,p){let d=l.apply([u]),h=ms([u]),f=l.apply([u*2]);return bA([d,h,f])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return K(()=>{if(e.length!==3)throw new j(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xa({ones:()=>Fs(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(B,ee,Q)=>!ee||!ee[Q]?B:L(ee[Q],B),u=l(s,i,0),c=l(s,i,1),p=l(s,i,2),d=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xa({ones:()=>Fs(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=l(r,h,0),m=l(r,h,1),g=l(r,h,2),y=l(r,h,3),x=3,[A,b,v,k]=Yt(this.kernel.read(),o,x),[I,E,R,P]=this.useBias?Yt(this.bias.read(),o):[null,null,null,null];u=this.inputConv(u,A,I,this.padding),c=this.inputConv(c,b,E,this.padding),p=this.inputConv(p,v,R,this.padding),d=this.inputConv(d,k,P,this.padding);let[_,D,C,F]=Yt(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,_),m=this.recurrentConv(m,D),g=this.recurrentConv(g,C),y=this.recurrentConv(y,F);let U=this.recurrentActivation.apply(ue(u,f)),X=this.recurrentActivation.apply(ue(c,m)),z=ue(L(X,a),L(U,this.activation.apply(ue(p,g)))),Z=L(this.recurrentActivation.apply(ue(d,y)),this.activation.apply(z));return[Z,Z,z]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=Wa(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?vr(r,n,this.dataFormat):r}recurrentConv(e,t){return Wa(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};m0.className="ConvLSTM2DCell";ce.registerClass(m0);var ix=class extends q6{constructor(e){let t=new m0(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};ix.className="ConvLSTM2D";ce.registerClass(ix);var g0=class extends at{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=He(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Rp(()=>J7(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};g0.className="Dropout";ce.registerClass(g0);var lx=class extends g0{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};lx.className="SpatialDropout1D";ce.registerClass(lx);var ux=class extends at{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,mn(this.units,"units"),this.activation=qa(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Rt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Rt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=un(e.kernelConstraint),this.biasConstraint=un(e.biasConstraint),this.kernelRegularizer=_t(e.kernelRegularizer),this.biasRegularizer=_t(e.biasRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=mt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=mt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=He(e),s=H7(this.activation.getClassName()),r;return s!=null?r=_r(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=_r(n,this.kernel.read()),this.bias!=null&&(r=vr(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:ja(this.activation),useBias:this.useBias,kernelInitializer:Ot(this.kernelInitializer),biasInitializer:Ot(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:ln(this.kernelConstraint),biasConstraint:ln(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};ux.className="Dense";ce.registerClass(ux);var cx=class extends at{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=mt(e);for(let t of e.slice(1))if(t==null)throw new j(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Pa(e,1)]}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=He(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=et(n,s)}return WL(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};cx.className="Flatten";ce.registerClass(cx);var dx=class extends at{constructor(e){super(e),this.supportsMasking=!0,this.activation=qa(e.activation)}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=He(e);return this.activation.apply(n)})}getConfig(){let e={activation:ja(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};dx.className="Activation";ce.registerClass(dx);var px=class extends at{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return K(()=>(e=He(e),LL(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};px.className="RepeatVector";ce.registerClass(px);var hx=class extends at{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new j("Can only specifiy one unknown dimension.");else r*=l}let o=Pa(e);if(a!==null){if(r===0||o%r!==0)throw new j(n);s[a]=o/r}else if(o!==r)throw new j(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=He(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return H(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};hx.className="Reshape";ce.registerClass(hx);var fx=class extends at{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=yr(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Zt({ndim:this.dims.length+1})]}computeOutputShape(e){e=mt(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return et(He(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};fx.className="Permute";ce.registerClass(fx);var mx=class extends at{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=He(e),s=-1;return If(Tu(n,this.maskValue),s)}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=He(e),s=-1,r=!0,a=If(Tu(n,this.maskValue),s,r);return L(n,ge(a,n.dtype))})}};mx.className="Masking";ce.registerClass(mx);var gx=class extends at{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(It(e.inputLength))}this.inputDim=e.inputDim,mn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,mn(this.outputDim,"outputDim"),this.embeddingsInitializer=Rt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_t(e.embeddingsRegularizer),this.activityRegularizer=_t(e.activityRegularizer),this.embeddingsConstraint=un(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return K(()=>this.maskZero?(e=He(e),Tu(e,rt(e))):null)}computeOutputShape(e){if(e=mt(e),this.inputLength==null)return[...e,this.outputDim];let t=It(this.inputLength);if(t.length!==e.length-1)throw new j(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new j(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=He(e);n.dtype!=="int32"&&(n=Ym(n,"int32"));let s=Y7(this.embeddings.read(),H(n,[n.size]));return H(s,mt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ot(this.embeddingsInitializer),embeddingsRegularizer:xt(this.embeddingsRegularizer),activityRegularizer:xt(this.activityRegularizer),embeddingsConstraint:ln(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};gx.className="Embedding";ce.registerClass(gx);var Ml=class extends at{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ve}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new j("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[mt(e)]),e=e,e.length<2)throw new j(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Da(t),t.length>1)throw new j(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&Da(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return K(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=Ha(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=Np(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let u=i.shape,c=u[0],p=u.slice(1).concat([c]),d=H(i,[c].concat(Pa(u.slice(1))));d=et(d,[1,0]),d=H(d,p),n.push(d),r=!0}else if(l>1){let u=yr(1,l).concat([0]);n.push(et(i,u)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,u=i[l-1],c=[u].concat(i.slice(0,i.length-1));a=H(et(H(a,[-1,u]),[1,0]),c)}else if(o>1){let i=[o-1].concat(yr(0,o-1));a=et(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=Da(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return K(()=>{if(t==null)return null;if(!Array.isArray(t))throw new j("`mask` should be an Array");if(!Array.isArray(e))throw new j("`inputs` should be an Array");if(t.length!==e.length)throw new j(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Kt(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=gr(n,t[s]);return n})}},yx=class extends Ml{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return t})}};yx.className="Add";ce.registerClass(yx);var Ax=class extends Ml{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};Ax.className="Multiply";ce.registerClass(Ax);var xx=class extends Ml{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ue(t,e[n]);return L(1/e.length,t)})}};xx.className="Average";ce.registerClass(xx);var bx=class extends Ml{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ra(t,e[n]);return t})}};bx.className="Maximum";ce.registerClass(bx);var vx=class extends Ml{constructor(e){super(e)}mergeFunction(e){return K(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Sp(t,e[n]);return t})}};vx.className="Minimum";ce.registerClass(vx);var wx=class extends Ml{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new j("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(w.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new j("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return K(()=>bA(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new j("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new j("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new j("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new j(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return K(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(ge(Fs(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Kt(t[a],-1)):s.push(t[a]);let r=St(s,this.axis);return Fy(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};wx.className="Concatenate";ce.registerClass(wx);function Ad(e,t){for(;e<0;)e+=t;return e}function _U(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Ve("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Ve("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return K(()=>{let o;if(s>r){o=s-r;let l=[];for(let u=0;u<o;++u)l.push(1);t=H(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let u=0;u<o;++u)l.push(1);e=H(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=ke(L(e,t),a[0]):i=ke(L(et(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,u=a[1]===t.shape.length-1;i=Ye(e,t,l,u)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let u=[];for(let c=l;c<l+o;++c)u.push(c);i=tt(i,u)}return i.shape.length===1&&(i=Kt(i,1)),i})}var kx=class extends Ml{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Ve("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new j(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new j(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>Ad(r,e[a].shape.length)):s=[Ad(this.axes,t.shape.length),Ad(this.axes,n.shape.length)],this.normalize&&(t=$f(t,s[0]),n=$f(n,s[1])),_U(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Ad(this.axes,e.length),Ad(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Ve("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};kx.className="Dot";ce.registerClass(kx);var Sx=class extends at{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=He(e);return Rp(()=>ue(Jm(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Sx.className="GaussianNoise";ce.registerClass(Sx);var Ix=class extends at{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return K(()=>{this.invokeCallHook(e,t);let n=He(e);return this.rate>0&&this.rate<1?Rp(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return L(n,Jm(n.shape,1,r))},()=>n,t.training||!1):n})}};Ix.className="GaussianDropout";ce.registerClass(Ix);var Cx=class extends at{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||He(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return K(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Rp(()=>{let r=He(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=$l(gc(n),this.rate);l=Ym(l,"float32");let u=((1-this.rate)*(1+this.rate*i**2))**-.5,c=-u*i*this.rate,p=ue(L(r,l),L(ue(l,-1),i));return ue(L(p,u),c)},()=>He(e),t.training||!1)}return e})}};Cx.className="AlphaDropout";ce.registerClass(Cx);function qd(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=Bw(e,t,n,s,r,a);else if(e.rank===3)o=Ww(e,t,n,s,r,a);else if(e.rank===4)o=Vw(e,t,n,s,r,a);else throw new Ve(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function $U(e,t,n,s,r=.001){return K(()=>{let a=Dm(e,s),o=a.mean,i=a.variance;return[qd(e,o,i,n,t,r),o,i]})}function DU(e,t,n,s,r=.001){return K(()=>{let a=Dm(e,s),o=a.mean,i=a.variance,l=[];for(let f of yr(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let u=H(o,l),c=H(i,l),p=t==null?null:H(t,l),d=n==null?null:H(n,l);return[qd(e,u,c,d,p,r),o,i]})}function PU(e,t,n,s,r=.001){return w.arraysEqual(s.slice().sort(),yr(0,e.rank-1))?$U(e,t,n,s,r):DU(e,t,n,s,r)}var Tx=class extends at{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Rt(e.betaInitializer||"zeros"),this.gammaInitializer=Rt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Rt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Rt(e.movingVarianceInitializer||"ones"),this.betaConstraint=un(e.betaConstraint),this.gammaConstraint=un(e.gammaConstraint),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer)}build(e){e=mt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new j(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Zt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return K(()=>{let n=t.training==null?!1:t.training,s=He(e),r=s.shape,a=r.length,o=yr(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=Mi(1,a);l[i]=r[i];let u=o.slice();u.sort();let c=!w.arraysEqual(u,yr(0,a).slice(0,a-1)),p=()=>{if(c){let y=H(this.movingMean.read(),l),x=H(this.movingVariance.read(),l),A=this.center?H(this.beta.read(),l):null,b=this.scale?H(this.gamma.read(),l):null;return qd(s,y,x,A,b,this.epsilon)}else return qd(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,h,f]=PU(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(y,x,A)=>{K(()=>{let b=1-A,v=y.read(),k=L(he(v,x),b);y.write(he(v,k))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ot(this.betaInitializer),gammaInitializer:Ot(this.gammaInitializer),movingMeanInitializer:Ot(this.movingMeanInitializer),movingVarianceInitializer:Ot(this.movingVarianceInitializer),betaRegularizer:xt(this.betaRegularizer),gammaRegularizer:xt(this.gammaRegularizer),betaConstraint:ln(this.betaConstraint),gammaConstraint:ln(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Tx.className="BatchNormalization";ce.registerClass(Tx);var Nx=class extends at{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Rt(e.betaInitializer||"zeros"),this.gammaInitializer=Rt(e.gammaInitializer||"ones"),this.betaRegularizer=_t(e.betaRegularizer),this.gammaRegularizer=_t(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=mt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Da(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=He(e),s=n.shape,r=s.length;return K(()=>{let{mean:o,variance:i}=Dm(n,this.axis,!0),l=Mi(1,r);for(let f of this.axis)l[f]=s[f];let u=f=>f!=null&&f.shape.length!==r?H(f,l):f,c=u(this.gamma.read()),p=u(this.beta.read()),d=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(d.push(s[f]),h.push(1)):(d.push(1),h.push(s[f]));return o=Hs(o,d),i=Hs(i,d),c=Hs(c,h),p=Hs(p,h),qd(n,o,i,p,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ot(this.betaInitializer),gammaInitializer:Ot(this.gammaInitializer),betaRegularizer:xt(this.betaRegularizer),gammaRegularizer:xt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Nx.className="LayerNormalization";ce.registerClass(Nx);function FU(e,t,n){return K(()=>{if(e.rank!==4)throw new j(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new j("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Ar()),n!=="channelsLast"&&n!=="channelsFirst")throw new j(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Ks(e,s)})}var Ex=class extends at{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Ar():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new j(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new j(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new j(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Zt({ndim:4})]}computeOutputShape(e){e=mt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return K(()=>FU(He(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Ex.className="ZeroPadding2D";ce.registerClass(Ex);function y0(e,t,n,s,r,a){return K(()=>{Ht(r),q7(a),Bs(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=Ar()),a==null&&(a="max"),e=KA(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=$m(e,t,n,i):o=Sm(e,t,n,i),r==="channelsFirst"&&(o=et(o,[0,3,1,2])),o})}function X6(e,t,n,s,r,a){return K(()=>{Ht(r),q7(a),Bs(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Ar()),a==null&&(a="max"),e=L6(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=Yy(e,t,n,i):o=My(e,t,n,i),r==="channelsFirst"&&(o=et(o,[0,4,1,2,3])),o})}var K6=class extends at{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new j(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(mn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new j(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);mn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Bs(this.padding),this.inputSpec=[new Zt({ndim:3})]}computeOutputShape(e){e=mt(e);let t=mr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return K(()=>{this.invokeCallHook(e,t),e=Np(He(e),2);let n=this.poolingFunction(He(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return tt(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Rx=class extends K6{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Bs(s),y0(e,t,n,s,r,"max")}};Rx.className="MaxPooling1D";ce.registerClass(Rx);var _x=class extends K6{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Bs(s),y0(e,t,n,s,r,"avg")}};_x.className="AveragePooling1D";ce.registerClass(_x);var Z6=class extends at{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new j(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];mn(this.poolSize,"poolSize"),mn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),Bs(this.padding),this.inputSpec=[new Zt({ndim:4})]}computeOutputShape(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=mr(t,this.poolSize[0],this.padding,this.strides[0]),n=mr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return K(()=>(this.invokeCallHook(e,t),this.poolingFunction(He(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},$x=class extends Z6{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Bs(s),y0(e,t,n,s,r,"max")}};$x.className="MaxPooling2D";ce.registerClass($x);var Dx=class extends Z6{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Bs(s),y0(e,t,n,s,r,"avg")}};Dx.className="AveragePooling2D";ce.registerClass(Dx);var Y6=class extends at{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new j(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];mn(this.poolSize,"poolSize"),mn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),Bs(this.padding),this.inputSpec=[new Zt({ndim:5})]}computeOutputShape(e){e=mt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=mr(t,this.poolSize[0],this.padding,this.strides[0]),n=mr(n,this.poolSize[1],this.padding,this.strides[1]),s=mr(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return K(()=>(this.invokeCallHook(e,t),this.poolingFunction(He(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Px=class extends Y6{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Bs(s),X6(e,t,n,s,r,"max")}};Px.className="MaxPooling3D";ce.registerClass(Px);var Fx=class extends Y6{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Ht(r),Bs(s),X6(e,t,n,s,r,"avg")}};Fx.className="AveragePooling3D";ce.registerClass(Fx);var J6=class extends at{constructor(e){super(e),this.inputSpec=[new Zt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ve}},Ox=class extends J6{constructor(e){super(e||{})}call(e,t){return K(()=>{let n=He(e);return Vt(n,1)})}};Ox.className="GlobalAveragePooling1D";ce.registerClass(Ox);var Mx=class extends J6{constructor(e){super(e||{})}call(e,t){return K(()=>{let n=He(e);return gn(n,1)})}};Mx.className="GlobalMaxPooling1D";ce.registerClass(Mx);var Q6=class extends at{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ht(this.dataFormat),this.inputSpec=[new Zt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ve}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},zx=class extends Q6{call(e,t){return K(()=>{let n=He(e);return this.dataFormat==="channelsLast"?Vt(n,[1,2]):Vt(n,[2,3])})}};zx.className="GlobalAveragePooling2D";ce.registerClass(zx);var Lx=class extends Q6{call(e,t){return K(()=>{let n=He(e);return this.dataFormat==="channelsLast"?gn(n,[1,2]):gn(n,[2,3])})}};Lx.className="GlobalMaxPooling2D";ce.registerClass(Lx);var ek=class extends at{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=fr(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},Bx=class extends ek{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=mt(e),e.length<3)throw new j(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=mt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return K(()=>(e=He(e),H6((a,o)=>[He(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Bx.className="TimeDistributed";ce.registerClass(Bx);function OU(e){Fl(PL,"BidirectionalMergeMode",e)}var MU="concat",Wx=class extends ek{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=fr(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=fr(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?MU:e.mergeMode,OU(this.mergeMode),e.weights)throw new Ve("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):ts(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=G6(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new j("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let u=n.map(c=>new Zt({shape:c.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),o.push(...u)}if(s!=null)throw new Ve("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof dr;for(let l of a)if(l instanceof dr!==i)throw new j("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),u=this.inputSpec.concat(o),c=this.inputSpec;this.inputSpec=u;let p=super.apply(l,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return K(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Os(r,1));let o;return this.mergeMode==="concat"?o=bA([s,r]):this.mergeMode==="sum"?o=ue(s,r):this.mergeMode==="ave"?o=L(.5,ue(s,r)):this.mergeMode==="mul"?o=L(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ei(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ei(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=fr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Ve("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};Wx.className="Bidirectional";ce.registerClass(Wx);function zU(e){return new xc(e)}function LU(e){return new jA(e)}function BU(e){return new UA(e)}function WU(e){return new GA(e)}function VU(e){return new HA(e)}function UU(e){return new XA(e)}function GU(e){return new qA(e)}function HU(e){return new ex(e)}function jU(e){return new c0(e)}function qU(e){return new YA(e)}function XU(e){return new d0(e)}function KU(e){return new JA(e)}function ZU(e){return new QA(e)}function YU(e){return new tx(e)}function JU(e){return new nx(e)}function QU(e){return new sx(e)}function eG(e){return new dx(e)}function tG(e){return new ux(e)}function nG(e){return new g0(e)}function sG(e){return new lx(e)}function rG(e){return new cx(e)}function aG(e){return new px(e)}function oG(e){return new hx(e)}function iG(e){return new fx(e)}function lG(e){return new gx(e)}function uG(e){return new yx(e)}function cG(e){return new xx(e)}function dG(e){return new wx(e)}function pG(e){return new bx(e)}function hG(e){return new vx(e)}function fG(e){return new Ax(e)}function mG(e){return new kx(e)}function gG(e){return new Tx(e)}function yG(e){return new Nx(e)}function AG(e){return new Ex(e)}function Vx(e){return new _x(e)}function xG(e){return Vx(e)}function bG(e){return Vx(e)}function Ux(e){return new Dx(e)}function vG(e){return Ux(e)}function wG(e){return Ux(e)}function Gx(e){return new Fx(e)}function kG(e){return Gx(e)}function SG(e){return Gx(e)}function IG(e){return new Ox(e)}function CG(e){return new zx(e)}function tk(e){return new Mx(e)}function nk(e){return new Lx(e)}function sk(e){return new Rx(e)}function rk(e){return new $x(e)}function TG(e){return new Px(e)}function NG(e){return new ax(e)}function EG(e){return new h0(e)}function RG(e){return new ox(e)}function _G(e){return new Fp(e)}function $G(e){return new rx(e)}function DG(e){return new p0(e)}function PG(e){return new ix(e)}function FG(e){return new m0(e)}function OG(e){return new ia(e)}function MG(e){return new f0(e)}function zG(e){return new Wx(e)}function LG(e){return new Bx(e)}var BG=tk,WG=nk,VG=sk,UG=rk;function GG(e){return new Sx(e)}function HG(e){return new Ix(e)}function jG(e){return new Cx(e)}function qG(e){return new mx(e)}var ak={};Le(ak,{MAPE:()=>rH,MSE:()=>iH,binaryAccuracy:()=>XG,binaryCrossentropy:()=>KG,categoricalAccuracy:()=>YG,categoricalCrossentropy:()=>JG,cosineProximity:()=>tH,mape:()=>aH,meanAbsoluteError:()=>nH,meanAbsolutePercentageError:()=>sH,meanSquaredError:()=>oH,mse:()=>lH,precision:()=>QG,recall:()=>eH,sparseCategoricalAccuracy:()=>ZG});function XG(e,t){return OA(e,t)}function KG(e,t){return m6(e,t)}function ZG(e,t){return g6(e,t)}function YG(e,t){return MA(e,t)}function JG(e,t){return zA(e,t)}function QG(e,t){return f6(e,t)}function eH(e,t){return VV(e,t)}function tH(e,t){return FA(e,t)}function nH(e,t){return i0(e,t)}function sH(e,t){return bc(e,t)}function rH(e,t){return bc(e,t)}function aH(e,t){return bc(e,t)}function oH(e,t){return Ol(e,t)}function iH(e,t){return Ol(e,t)}function lH(e,t){return Ol(e,t)}var ok={};Le(ok,{modelFromJSON:()=>AU});var ik={};Le(ik,{l1:()=>cH,l1l2:()=>uH,l2:()=>dH});function uH(e){return new $p(e)}function cH(e){return CU(e)}function dH(e){return TU(e)}var lk=class extends Ru{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Jr))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Zh(e,t){return e<t}function xv(e,t){return e>t}var uk=class extends lk{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Ve("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Zh:this.mode==="max"?this.monitorFunc=xv:this.monitor.indexOf("acc")!==-1?this.monitorFunc=xv:this.monitorFunc=Zh,this.monitorFunc===Zh&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Zh?1/0:-1/0}async onEpochEnd(e,t){await Na(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function pH(e){return new uk(e)}var hH={earlyStopping:pH},fH=Y();fH.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var ck=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(ck||{}),bv;(e=>{let t;(n=>{n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(bv||(bv={}));var Hx={};function mH(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Hx[e]=n}function dk(e){return Hx[e]}function gH(e){delete Hx[e]}function S(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return Wn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(d=>Wn(d,n,s,r));let u=Wn(t.inputNames.slice(i)[0],n,s,r),c=u.dataSync();return a.type==="number"?c[0]:w.toNestedArray(u.shape,c)}let o=t.attrParams[e];return o&&o.value}function Wn(e,t,n,s){let[r,a]=hs(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[Mf(r,i)]);return o!==void 0?t[Mf(r,o)][a]:void 0}function yH(e,t,n){return t[Mf(e,n.currentContextId)]}function Rr(e,t){let[n,s,r]=hs(e);return[Mf(n,t&&t.currentContextId),s,r]}function Mf(e,t){return t?`${e}-${t}`:e}function hs(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function of(e,t,n){let s=S("pad",e,t,n);if(s==="explicit"){s=S("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function Kr(e){return e.kept?e:Un(e)}var pk={};Le(pk,{json:()=>AH});var AH=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hk={};Le(hk,{json:()=>xH});var xH=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fk={};Le(fk,{json:()=>bH});var bH=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],mk={};Le(mk,{json:()=>vH});var vH=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],gk={};Le(gk,{json:()=>wH});var wH=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],yk={};Le(yk,{json:()=>kH});var kH=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ak={};Le(Ak,{json:()=>SH});var SH=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],xk={};Le(xk,{json:()=>IH});var IH=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],bk={};Le(bk,{json:()=>CH});var CH=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],vk={};Le(vk,{json:()=>TH});var TH=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],wk={};Le(wk,{json:()=>NH});var NH=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kk={};Le(kk,{json:()=>EH});var EH=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Sk={};Le(Sk,{json:()=>RH});var RH=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Ik={};Le(Ik,{json:()=>_H});var _H=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Ck={};Le(Ck,{json:()=>$H});var $H=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Tk={};Le(Tk,{json:()=>DH});var DH=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Nk={};Le(Nk,{json:()=>PH});var PH=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Ek={};Le(Ek,{json:()=>FH});var FH=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Rk={};Le(Rk,{json:()=>OH});var OH=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],vv=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[pk,hk,fk,mk,gk,yk,Ak,xk,bk,vk,wk,kk,Sk,Ik,Ck,Tk,Nk,Ek,Rk],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],u={},c={};t!=null&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let p=Object.keys(o);p.forEach(f=>{let m=o[f];m.inputNames.forEach((g,y)=>{let[x,,A]=Rr(g),b=o[x];if(b.outputs!=null){let v=b.outputs.indexOf(A);if(v!==-1){let k=`${x}:${v}`;m.inputNames[y]=k}}m.inputs.push(b),b.children.push(m)})}),Object.keys(c).length===0?p.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(c).forEach(f=>{let[m]=Rr(f),g=o[m];g!=null&&(g.signatureKey=c[f],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(f=>{let[m]=Rr(f),g=o[m];g&&(g.signatureKey=u[f],i.push(g))}):i=s;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:d};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=dk(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=Og(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Og(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=Ug(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Ug(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=zg(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=zg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=Vg(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Vg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=Mg(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Mg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=Hg(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Hg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=Wg(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Wg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=Gg(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Gg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=Lg(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Lg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=Bg(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=Bg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=wv(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=wv(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((c,p)=>(c[p.name]=this.mapNode(p),p.op==="Const"&&s.push(c[p.name]),c),{}));let a=[],o=[];e.signature.inputArg.forEach(c=>{let[p]=Rr(c.name),d={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:jx(c.type),type:"dtype"}},children:[]};d.signatureKey=c.name,a.push(d),r[p]=d}),Object.keys(r).forEach(c=>{let p=r[c];p.inputNames.forEach((d,h)=>{let[f,,m]=Rr(d),g=r[f];if(g.outputs!=null){let y=g.outputs.indexOf(m);if(y!==-1){let x=`${f}:${y}`;p.inputNames[h]=x}}p.inputs.push(g),g.children.push(p)})});let l=e.ret;e.signature.outputArg.forEach(c=>{let[p,d]=Rr(l[c.name]),h=r[p];h!=null&&(h.defaultOutput=d,o.push(h))});let u=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function MH(e){let t=Y().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function _k(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):MH(e);return t?n:n.toLowerCase()}function Og(e,t,n,s=!1){let r=e[t];return r!=null?_k(r.s,s):n}function Mg(e,t,n){let s=e[t];return s?s.b:n}function zg(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function jx(e){switch(typeof e=="string"&&(e=ck[e]),e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function wv(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function Lg(e,t,n){let s=e[t];return s&&s.type?jx(s.type):n}function Bg(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>jx(r)):n}function $k(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Wg(e,t,n){let s=e[t];return s&&s.shape?$k(s.shape):n}function Vg(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function Ug(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>_k(a,s)):n}function Gg(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>$k(r)):n}function Hg(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var zH=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return Wn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Wn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return zg(this.node.rawAttrs,e,t);if(n.s!=null)return Og(this.node.rawAttrs,e,t);if(n.b!=null)return Mg(this.node.rawAttrs,e,t);if(n.shape!=null)return Wg(this.node.rawAttrs,e,t);if(n.type!=null)return Lg(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Vg(this.node.rawAttrs,e,t);if(n.list.s!=null)return Ug(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Gg(this.node.rawAttrs,e,t);if(n.list.b!=null)return Hg(this.node.rawAttrs,e,t);if(n.list.type!=null)return Bg(this.node.rawAttrs,e,t)}return t}},LH=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ue(S("a",e,t,n),S("b",e,t,n))];case"AddN":return[km(S("tensors",e,t,n))];case"FloorMod":case"Mod":return[mc(S("a",e,t,n),S("b",e,t,n))];case"Mul":return[L(S("a",e,t,n),S("b",e,t,n))];case"RealDiv":case"Div":return[de(S("a",e,t,n),S("b",e,t,n))];case"DivNoNan":return[Qw(S("a",e,t,n),S("b",e,t,n))];case"FloorDiv":return[xp(S("a",e,t,n),S("b",e,t,n))];case"Sub":return[he(S("a",e,t,n),S("b",e,t,n))];case"Minimum":return[Sp(S("a",e,t,n),S("b",e,t,n))];case"Maximum":return[ra(S("a",e,t,n),S("b",e,t,n))];case"Pow":return[Ua(S("a",e,t,n),S("b",e,t,n))];case"SquaredDifference":return[uA(S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},BH=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[sn(S("x",e,t,n))];case"Acos":return[Ew(S("x",e,t,n))];case"Acosh":return[Rw(S("x",e,t,n))];case"Asin":return[$w(S("x",e,t,n))];case"Asinh":return[Dw(S("x",e,t,n))];case"Atan":return[Pw(S("x",e,t,n))];case"Atan2":return[Fw(S("x",e,t,n),S("y",e,t,n))];case"Atanh":return[Ow(S("x",e,t,n))];case"Ceil":return[Gw(S("x",e,t,n))];case"Complex":return[La(S("real",e,t,n),S("imag",e,t,n))];case"Cos":return[Cm(S("x",e,t,n))];case"Cosh":return[Uy(S("x",e,t,n))];case"Elu":return[wp(S("x",e,t,n))];case"Erf":return[t7(S("x",e,t,n))];case"Exp":return[Ds(S("x",e,t,n))];case"Expm1":return[n7(S("x",e,t,n))];case"Floor":return[kp(S("x",e,t,n))];case"Log":return[Ps(S("x",e,t,n))];case"Log1p":return[Em(S("x",e,t,n))];case"Imag":return[Tm(S("x",e,t,n))];case"Neg":return[zt(S("x",e,t,n))];case"Reciprocal":return[m7(S("x",e,t,n))];case"Real":return[Ud(S("x",e,t,n))];case"Relu":return[Mr(S("x",e,t,n))];case"Round":return[nA(S("x",e,t,n))];case"Selu":return[rA(S("x",e,t,n))];case"Sigmoid":return[Cn(S("x",e,t,n))];case"Sin":return[aA(S("x",e,t,n))];case"Sign":return[A7(S("x",e,t,n))];case"Sinh":return[oA(S("x",e,t,n))];case"Softplus":return[fc(S("x",e,t,n))];case"Sqrt":return[Nn(S("x",e,t,n))];case"Square":return[At(S("x",e,t,n))];case"Tanh":return[Su(S("x",e,t,n))];case"Tan":return[b7(S("x",e,t,n))];case"ClipByValue":return[gs(S("x",e,t,n),S("clipValueMin",e,t,n),S("clipValueMax",e,t,n))];case"Relu6":return[tA(S("x",e,t,n))];case"Rsqrt":return[sA(Wn(e.inputNames[0],t,n))];case"Prod":return[Jy(S("x",e,t,n),S("axes",e,t,n))];case"LeakyRelu":return[Nm(S("x",e,t,n),S("alpha",e,t,n))];case"Prelu":return[Fm(S("x",e,t,n),S("alpha",e,t,n))];case"IsNan":return[s7(Wn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Gs(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];w.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function kv(e){return!(typeof e=="number"||e.some(t=>t<0))}function xd(e,t,n){let s=jg(e,n),r=!kv(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=jg(a.shape,s)}),!kv(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function jg(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var WH=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ie(0),fn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Gs(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,fn(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return ht([],[0].concat(this.elementShape));let n=this.readMany(e);return Gs(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),cn(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return ht([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return Gs(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),St(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ss(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];K(()=>{t=H(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],u=[0,l,0],c=[1,e[i],r];a[i]=H(Pe(t,u,c),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},_u=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);Gs(t,r.shape,"TensorList shape mismatch: "),fn(r)}),this.idTensor=Ie(0),this.maxNumElements=s,fn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new _u([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Gs(e,this.elementShape,"TensorList shape mismatch: ");let s=xd(this.elementShape,this.tensors,e);return K(()=>{let r=this.tensors.map(a=>H(a,s));return cn(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=xd(this.elementShape,this.tensors,e),s=this.tensors.pop();return Gs(s.shape,e,"TensorList shape mismatch: "),H(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Gs(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");fn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new _u([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Gs(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=xd(this.elementShape,this.tensors,t);return H(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Gs(this.elementShape,t.shape,"TensorList shape mismatch: "),fn(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Gs(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=xd(this.elementShape,this.tensors,n);return e.length===0?ht([],[0].concat(s)):K(()=>{let r=e.map(a=>H(this.tensors[a],s));return cn(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Gs(this.elementShape,t,"TensorList shape mismatch: ");let n=xd(this.elementShape,this.tensors,t);return this.size()===0?ht([],[0].concat(n)):K(()=>{let s=this.tensors.map(r=>H(r,n));return St(s,0)})}};function VH(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);Gs(r,t,"TensorList shape mismatch: ");let a=ss(e);return new _u(a,t,s)}function UH(e,t,n){return new _u([],e,t,n)}function GH(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new _u([],n,e.dtype,s),o=ss(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function HH(e,t,n){let s=0,r=t.map(c=>(s+=c,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=jg(a,n),i=s===0?0:e.size/s,l=K(()=>{let c=[];e=H(e,[1,s,i]);for(let p=0;p<t.length;++p){let d=p===0?0:r[p-1],h=[0,d,0],f=[1,t[p],i];c[p]=H(Pe(e,h,f),o)}return e.dispose(),c}),u=new _u([],n,e.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var jH=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=S("thenBranch",e,t,n),r=S("elseBranch",e,t,n),a=S("cond",e,t,n),o=S("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=S("body",e,t,n),r=S("cond",e,t,n),a=S("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(c=>c.id),l=await o[0].data();o.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let u=a;for(;l[0];){let c=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let p=u.map(h=>h.id);c.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()});let d=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()})}return u}case"LoopCond":{let s=S("pred",e,t,n);return[Kr(s)]}case"Switch":{let s=S("pred",e,t,n),r=S("data",e,t,n);return r.kept||(r=Kr(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>Wn(r,t,n)!==void 0);if(s){let r=Wn(s,t,n);return[Kr(r)]}return}case"Enter":{let s=S("frameName",e,t,n),r=S("tensor",e,t,n);return n.enterFrame(s),[Kr(r)]}case"Exit":{let s=S("tensor",e,t,n);return n.exitFrame(),[Kr(s)]}case"NextIteration":{let s=S("tensor",e,t,n);return n.nextIteration(),[Kr(s)]}case"TensorArrayV3":{let s=S("size",e,t,n),r=S("dtype",e,t,n),a=S("elementShape",e,t,n),o=S("dynamicSize",e,t,n),i=S("clearAfterRead",e,t,n),l=S("identicalElementShapes",e,t,n),u=S("name",e,t,n),c=new WH(u,r,s,a,l,o,i);return n.addTensorArray(c),[c.idTensor,Ie(1)]}case"TensorArrayWriteV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=S("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=S("tensorArrayId",e,t,n),r=S("tensor",e,t,n),a=S("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ie(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("elementShape",e,t,n),o=S("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=S("indices",e,t,n),r=S("tensor",e,t,n),a=S("elementShape",e,t,n),o=S("numElements",e,t,n),i=GH(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=S("elementShape",e,t,n),r=S("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=S(a,e,t,n),i=UH(s,r,o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let s=S("tensorListId",e,t,n),r=S("indices",e,t,n),a=S("elementShape",e,t,n),o=S("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),o=S("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),o=VH(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id),a=S("dtype",e,t,n),o=S("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=S("tensorListId",e,t,n),r=S("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("lengths",e,t,n),o=HH(s,a,r);return n.addTensorList(o),[o.idTensor]}case"TensorListLength":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id);return[Ie(r.size(),"int32")]}case"TensorListResize":{let s=S("tensorListId",e,t,n),r=S("size",e,t,n),o=n.getTensorList(s.id).resize(r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Sv(e,t,n){let[s,r]=S("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",u=S("numArgs",e,t,n);if(a){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=S("strides",e,t,n),p=of(e,t,n),d=S("dataFormat",e,t,n).toUpperCase(),h=S("dilations",e,t,n),[f,m]=S("args",e,t,n);o&&(m=f,f=void 0);let g=S("leakyreluAlpha",e,t,n);return{stride:c,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var qH=(e,t,n)=>{switch(e.op){case"Conv1D":{let s=S("stride",e,t,n),r=S("pad",e,t,n),a=S("dataFormat",e,t,n).toUpperCase(),o=S("dilation",e,t,n);return[Ly(S("x",e,t,n),S("filter",e,t,n),s,r,a,o)]}case"Conv2D":{let s=S("strides",e,t,n),r=of(e,t,n),a=S("dataFormat",e,t,n).toUpperCase(),o=S("dilations",e,t,n);return[Wa(S("x",e,t,n),S("filter",e,t,n),[s[1],s[2]],r,a,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Sv(e,t,n);return[Ga.conv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:s,pad:r,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Sv(e,t,n);return[Ga.depthwiseConv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let s=S("outputShape",e,t,n),r=S("strides",e,t,n),a=of(e,t,n);return[Wy(S("x",e,t,n),S("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let s=S("strides",e,t,n),r=of(e,t,n),a=S("dilations",e,t,n),o=S("dataFormat",e,t,n).toUpperCase();return[vp(S("input",e,t,n),S("filter",e,t,n),[s[1],s[2]],r,o,[a[1],a[2]])]}case"Conv3D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("dataFormat",e,t,n).toUpperCase(),o=S("dilations",e,t,n);return[Vy(S("x",e,t,n),S("filter",e,t,n),[s[1],s[2],s[3]],r,a,[o[1],o[2],o[3]])]}case"AvgPool":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[Sm(S("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[$m(S("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n),o=S("includeBatchInIndex",e,t,n),{result:i,indexes:l}=d7(S("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,o);return[i,l]}case"AvgPool3D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[My(S("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("kernelSize",e,t,n);return[Yy(S("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{let s=S("strides",e,t,n),r=S("pad",e,t,n),a=S("dilations",e,t,n),o=s[1],i=s[2],l=a[1],u=a[2];return[Jw(S("x",e,t,n),S("filter",e,t,n),[o,i],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},XH=(e,t,n)=>{switch(e.op){case"Fill":{let s=S("shape",e,t,n),r=S("dtype",e,t,n),a=S("value",e,t,n);return[hc(s,a,r)]}case"LinSpace":{let s=S("start",e,t,n),r=S("stop",e,t,n),a=S("num",e,t,n);return[r7(s,r,a)]}case"Multinomial":{let s=S("logits",e,t,n),r=S("numSamples",e,t,n),a=S("seed",e,t,n);return[h7(s,r,a)]}case"OneHot":{let s=S("indices",e,t,n),r=S("depth",e,t,n),a=S("onValue",e,t,n),o=S("offValue",e,t,n);return[Vd(s,r,a,o)]}case"Ones":return[ms(S("shape",e,t,n),S("dtype",e,t,n))];case"OnesLike":return[Fs(S("x",e,t,n))];case"RandomUniform":return[gc(S("shape",e,t,n),S("minval",e,t,n),S("maxval",e,t,n),S("dtype",e,t,n))];case"Range":{let s=S("start",e,t,n),r=S("stop",e,t,n),a=S("step",e,t,n);return[Nu(s,r,a,S("dtype",e,t,n))]}case"TruncatedNormal":{let s=S("shape",e,t,n),r=S("mean",e,t,n),a=S("stdDev",e,t,n),o=S("seed",e,t,n);return[Lm(s,r,a,S("dtype",e,t,n),o)]}case"Zeros":return[Ft(S("shape",e,t,n),S("dtype",e,t,n))];case"ZerosLike":return[rt(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ig(e,t,n){let s=S("boxes",e,t,n),r=S("scores",e,t,n),a=S("maxOutputSize",e,t,n),o=S("iouThreshold",e,t,n),i=S("scoreThreshold",e,t,n),l=S("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var KH=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=ig(e,t,n),u=await Se.nonMaxSuppressionWithScoreAsync(s,r,a,o,i,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=ig(e,t,n),l=S("padToMaxOutputSize",e,t,n),u=await Se.nonMaxSuppressionPaddedAsync(s,r,a,o,i,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=ig(e,t,n);return[await Se.nonMaxSuppressionAsync(s,r,a,o,i)]}case"Where":{let s=ge(S("condition",e,t,n),"bool"),r=[await cA(s)];return s.dispose(),r}case"ListDiff":return y7(S("x",e,t,n),S("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},ZH=(e,t,n)=>{switch(e.op){case"TopKV2":{let s=S("x",e,t,n),r=S("k",e,t,n),a=S("sorted",e,t,n),o=v7(s,r,a);return[o.values,o.indices]}case"Unique":{let s=S("x",e,t,n),r=Sg(s);return[r.values,r.indices]}case"UniqueV2":{let s=S("x",e,t,n),r=S("axis",e,t,n),a=Sg(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},YH=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let s=S("default",e,t,n);return[Wn(e.name,t,n)||s];case"Placeholder":return[Wn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=S("x",e,t,n);return[Kr(u)]}case"IdentityN":return S("x",e,t,n).map(u=>Kr(u));case"Snapshot":let r=S("x",e,t,n);return[Kr(r)];case"Shape":return[Ct(S("x",e,t,n).shape,"int32")];case"ShapeN":return S("x",e,t,n).map(u=>Ct(u.shape));case"Size":return[Ie(S("x",e,t,n).size,"int32")];case"Rank":return[Ie(S("x",e,t,n).rank,"int32")];case"NoOp":return[Ie(1)];case"Print":let a=S("x",e,t,n),o=S("data",e,t,n),i=S("message",e,t,n),l=S("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let u=0;u<o.length;u++)console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}},JH=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ie(0),this.tensorMap=new Map,fn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ie(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),K(()=>{let s=ss(t),r=n.length,a=s.length;w.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];fn(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return K(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return cn(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},QH=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=S("keyDType",e,t,n),a=S("valueDType",e,t,n),o=new JH(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),o=S("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),o=S("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=S("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ej=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{let s=S("images",e,t,n),r=S("size",e,t,n),a=S("alignCorners",e,t,n),o=S("halfPixelCenters",e,t,n);return[Se.resizeBilinear(s,[r[0],r[1]],a,o)]}case"ResizeNearestNeighbor":{let s=S("images",e,t,n),r=S("size",e,t,n),a=S("alignCorners",e,t,n),o=S("halfPixelCenters",e,t,n);return[Se.resizeNearestNeighbor(s,[r[0],r[1]],a,o)]}case"CropAndResize":{let s=S("image",e,t,n),r=S("boxes",e,t,n),a=S("boxInd",e,t,n),o=S("cropSize",e,t,n),i=S("method",e,t,n),l=S("extrapolationValue",e,t,n);return[Se.cropAndResize(s,r,a,o,i,l)]}case"ImageProjectiveTransformV3":{let s=S("images",e,t,n),r=S("transforms",e,t,n),a=S("outputShape",e,t,n),o=S("fillValue",e,t,n),i=S("interpolation",e,t,n),l=S("fillMode",e,t,n);return[Se.transform(s,r,i.toLowerCase(),l.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},tj=(e,t,n)=>{switch(e.op){case"Equal":return[$s(S("a",e,t,n),S("b",e,t,n))];case"NotEqual":return[Tu(S("a",e,t,n),S("b",e,t,n))];case"Greater":return[As(S("a",e,t,n),S("b",e,t,n))];case"GreaterEqual":return[$l(S("a",e,t,n),S("b",e,t,n))];case"Less":return[jy(S("a",e,t,n),S("b",e,t,n))];case"LessEqual":return[Dl(S("a",e,t,n),S("b",e,t,n))];case"LogicalAnd":return[gr(S("a",e,t,n),S("b",e,t,n))];case"LogicalNot":return[_m(S("a",e,t,n))];case"LogicalOr":return[Zy(S("a",e,t,n),S("b",e,t,n))];case"Select":case"SelectV2":return[Gn(S("condition",e,t,n),S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},nj=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ye(S("a",e,t,n),S("b",e,t,n),S("transposeA",e,t,n),S("transposeB",e,t,n))];case"Einsum":return[e7(S("equation",e,t,n),...S("tensors",e,t,n))];case"Transpose":return[et(S("x",e,t,n),S("perm",e,t,n))];case"_FusedMatMul":let[s,r]=S("fusedOps",e,t,n),a=s==="biasadd",o=r==="prelu",i=S("numArgs",e,t,n),l=S("leakyreluAlpha",e,t,n);if(a){if(o&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,c]=S("args",e,t,n);return[Ga.matMul({a:S("a",e,t,n),b:S("b",e,t,n),transposeA:S("transposeA",e,t,n),transposeB:S("transposeB",e,t,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},sj=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Iu(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"FusedBatchNormV3":return[Iu(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"LRN":return[a7(S("x",e,t,n),S("radius",e,t,n),S("bias",e,t,n),S("alpha",e,t,n),S("beta",e,t,n))];case"Softmax":return[yc(S("x",e,t,n))];case"LogSoftmax":return[qy(S("x",e,t,n))];case"SparseToDense":return[pA(S("sparseIndices",e,t,n),S("outputShape",e,t,n),S("sparseValues",e,t,n),S("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},rj=(e,t,n)=>{switch(e.op){case"Max":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[gn(S("x",e,t,n),o,i)]}case"Mean":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[Vt(S("x",e,t,n),o,i)]}case"Min":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[Va(S("x",e,t,n),o,i)]}case"Sum":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[ke(S("x",e,t,n),o,i)]}case"All":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[Fy(S("x",e,t,n),o,i)]}case"Any":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[If(S("x",e,t,n),o,i)]}case"ArgMax":{let o=S("axis",e,t,n);return[_s(S("x",e,t,n),o)]}case"ArgMin":{let o=S("axis",e,t,n);return[_w(S("x",e,t,n),o)]}case"Prod":{let o=S("axis",e,t,n),i=S("keepDims",e,t,n);return[Jy(S("x",e,t,n),o,i)]}case"Cumprod":{let o=S("axis",e,t,n),i=S("exclusive",e,t,n),l=S("reverse",e,t,n);return[Tf(S("x",e,t,n),o,i,l)]}case"Cumsum":{let o=S("axis",e,t,n),i=S("exclusive",e,t,n),l=S("reverse",e,t,n);return[Gy(S("x",e,t,n),o,i,l)]}case"Bincount":let s=S("x",e,t,n),r=S("weights",e,t,n),a=S("size",e,t,n);return[zy(s,r,a)];case"DenseBincount":{let o=S("x",e,t,n),i=S("weights",e,t,n),l=S("size",e,t,n),u=S("binaryOutput",e,t,n);return[Zw(o,i,l,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aj=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let s=S("n",e,t,n),r=S("axis",e,t,n),a=S("tensors",e,t,n);return a=a.slice(0,s),[St(a,r)]}case"Gather":{let s=S("x",e,t,n),r=S("indices",e,t,n);return[Cu(s,ge(r,"int32"),0)]}case"GatherV2":{let s=S("axis",e,t,n),r=S("batchDims",e,t,n),a=S("x",e,t,n),o=S("indices",e,t,n);return[Cu(a,ge(o,"int32"),s,r)]}case"Reverse":{let s=S("dims",e,t,n),r=[];for(let o=0;o<s.length;o++)s[o]&&r.push(o);let a=S("x",e,t,n);return[Os(a,r)]}case"ReverseV2":{let s=S("axis",e,t,n),r=S("x",e,t,n);return[Os(r,s)]}case"Slice":{let s=S("begin",e,t,n),r=S("size",e,t,n);return[Pe(S("x",e,t,n),s,r)]}case"StridedSlice":{let s=S("begin",e,t,n),r=S("end",e,t,n),a=S("strides",e,t,n),o=S("beginMask",e,t,n),i=S("endMask",e,t,n),l=S("ellipsisMask",e,t,n),u=S("newAxisMask",e,t,n),c=S("shrinkAxisMask",e,t,n),p=S("x",e,t,n);return[x7(p,s,r,a,o,i,l,u,c)]}case"Pack":return K(()=>{let s=S("axis",e,t,n),r=S("tensors",e,t,n),a=r[0].shape,o=tt(r[0]).shape,i=r.map(l=>{let u=w.arraysEqual(l.shape,a);if(!u&&!w.arraysEqual(tt(l).shape,o))throw new Error("the input tensors shape does not match");return u?l:H(l,a)});return[cn(i,s)]});case"Unpack":{let s=S("axis",e,t,n),r=S("tensor",e,t,n);return ss(r,s)}case"Tile":{let s=S("reps",e,t,n);return[Hs(S("x",e,t,n),s)]}case"Split":case"SplitV":{let s=S("axis",e,t,n),r=S("numOrSizeSplits",e,t,n),a=S("x",e,t,n);return Yt(a,r,s)}case"ScatterNd":{let s=S("indices",e,t,n),r=S("values",e,t,n),a=S("shape",e,t,n);return[C7(s,r,a)]}case"GatherNd":{let s=S("x",e,t,n),r=S("indices",e,t,n);return[T7(s,r)]}case"SparseToDense":{let s=S("sparseIndices",e,t,n),r=S("outputShape",e,t,n),a=S("sparseValues",e,t,n),o=S("defaultValue",e,t,n);return[pA(s,a,r,a.dtype===o.dtype?o:ge(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},oj=(e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:o}=kd.sparseFillEmptyRows(S("indices",e,t,n),S("values",e,t,n),S("denseShape",e,t,n),S("defaultValue",e,t,n));return[s,r,a,o]}case"SparseReshape":{let{outputIndices:s,outputShape:r}=kd.sparseReshape(S("inputIndices",e,t,n),S("inputShape",e,t,n),S("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[kd.sparseSegmentMean(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];case"SparseSegmentSum":return[kd.sparseSegmentSum(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ij=(e,t,n)=>{switch(e.op){case"FFT":return[Mm(S("x",e,t,n))];case"IFFT":return[Gd(S("x",e,t,n))];case"RFFT":return[zm(S("x",e,t,n))];case"IRFFT":return[lA(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},lj=(e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:s,nGramsSplits:r}=af.stringNGrams(S("data",e,t,n),S("dataSplits",e,t,n),S("separator",e,t,n),S("nGramWidths",e,t,n),S("leftPad",e,t,n),S("rightPad",e,t,n),S("padWidth",e,t,n),S("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{let{indices:s,values:r,shape:a}=af.stringSplit(S("input",e,t,n),S("delimiter",e,t,n),S("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[af.stringToHashBucketFast(S("input",e,t,n),S("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},uj=(e,t,n)=>{switch(e.op){case"Cast":return[ge(S("x",e,t,n),S("dtype",e,t,n))];case"ExpandDims":{let s=S("axis",e,t,n);return[Kt(S("x",e,t,n),s)]}case"Squeeze":{let s=S("axis",e,t,n);return[tt(S("x",e,t,n),s)]}case"Reshape":return[H(S("x",e,t,n),S("shape",e,t,n))];case"MirrorPad":return[p7(S("x",e,t,n),S("padding",e,t,n),S("mode",e,t,n))];case"PadV2":case"Pad":return[Ks(S("x",e,t,n),S("padding",e,t,n),S("constantValue",e,t,n))];case"SpaceToBatchND":{let s=S("blockShape",e,t,n),r=S("paddings",e,t,n);return[Pm(S("x",e,t,n),s,r)]}case"BatchToSpaceND":{let s=S("blockShape",e,t,n),r=S("crops",e,t,n);return[Im(S("x",e,t,n),s,r)]}case"DepthToSpace":{let s=S("blockSize",e,t,n),r=S("dataFormat",e,t,n).toUpperCase();return[Yw(S("x",e,t,n),s,r)]}case"BroadcastTo":return[$d(S("x",e,t,n),S("shape",e,t,n))];case"BroadcastArgs":return[Uw(S("s0",e,t,n),S("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Iv(e,t,n,s){let r=((a,o,i)=>{switch(a.category){case"arithmetic":return K(()=>LH(a,o,i));case"basic_math":return K(()=>BH(a,o,i));case"control":return jH(a,o,i);case"convolution":return K(()=>qH(a,o,i));case"creation":return K(()=>XH(a,o,i));case"dynamic":return KH(a,o,i);case"evaluation":return K(()=>ZH(a,o,i));case"image":return K(()=>ej(a,o,i));case"graph":return K(()=>YH(a,o,i));case"logical":return K(()=>tj(a,o,i));case"matrices":return K(()=>nj(a,o,i));case"normalization":return K(()=>sj(a,o,i));case"reduction":return K(()=>rj(a,o,i));case"slice_join":return K(()=>aj(a,o,i));case"sparse":return K(()=>oj(a,o,i));case"spectral":return K(()=>ij(a,o,i));case"string":return K(()=>lj(a,o,i));case"transformation":return K(()=>uj(a,o,i));case"hash_table":return QH(a,o,i,s);case"custom":let l=dk(a.op);if(l&&l.customExecutor)return l.customExecutor(new zH(a,o,i));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(r)?r.then(a=>[].concat(a)):[].concat(r)}var Cv=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Tv(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,u=Object.keys(e).map(d=>hs(d)[0]),c=[];s!=null&&(c=s.map(d=>hs(d.name)[0]));let p=[...t];for(;p.length>0;){let d=p.pop();if((Dk(d)||fj(d)||mj(d))&&o==null&&(o=d,i=o.children.map(h=>h.name).filter(h=>r.has(h))),r.add(d.name),n[d.name]==null&&u.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){a.push(d.name);continue}d.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),p.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function cj(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(c=>hs(c)[0]).map(c=>e.nodes[c]),i=e.initNodes;o.forEach(c=>{s.has(c.name)&&a.push(c)}),e.weights.forEach(c=>{s.has(c.name)&&a.push(c)}),i!=null&&i.forEach(c=>{s.has(c.name)&&a.push(c)});let l=new Set,u=[];for(;a.length>0;){let c=a.pop();l.add(c.name),t[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&s.has(p.name)&&p.inputs.every(d=>l.has(d.name))&&a.push(p)})}return u}var dj=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],pj=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],hj=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Dk(e){return dj.indexOf(e.op)>=0}function fj(e){return pj.indexOf(e.op)>=0}function mj(e){return hj.indexOf(e.op)>=0}var qg=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new qg(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=Tv(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return cj(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(c=>this.graph.nodes[hs(c)[0]]),r=t.map(c=>hs(c)[0]),a=r.map(c=>this.graph.nodes[c]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},u={};return K(()=>{let c=new Cv(this.weightMap,l,u,this.functionExecutorMap),p={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=hs(f),y=[];y[g]=e[f],p[m]=y});let d=this.getFrozenTensorIds(p),h={};for(let f=0;f<i.length;f++){let m=i[f];if(!p[m.name]){let g=Iv(m,p,c,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);p[m.name]=g,this.checkTensorForDisposal(m.name,m,p,c,d,r,h)}}return this.parent==null&&c.dispose(d),t.map(f=>Wn(f,p,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=yH(i.name,n,s);l!=null&&l.forEach(u=>{if(u&&!u.kept&&!r.has(u.id)){let c=o[u.id];if(c===1){if(!this.keepTensorForDebug)u.dispose();else{let[p,d]=Rr(t.name,s);this.intermediateTensors[p]?this.intermediateTensors[p][d]=u:(this.intermediateTensors[p]=[],this.intermediateTensors[p][d]=u)}delete o[u.id]}else c!=null&&o[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Y().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();let a=new Cv(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(u=>Wn(u,this.tensorsMap,a)),i=o.map(u=>u.id),l=Object.keys(e).map(u=>e[u].id);return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(x=>this.graph.nodes[hs(x)[0]]),o=n.map(x=>hs(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:p}=Tv(e,i,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(x=>{let[A,b]=hs(x),v=[];v[b]=e[x],h[A]=v});let f={},m=this.getFrozenTensorIds(h),g={};for(;d.length>0;){let x=this.processStack(a,d,t,h,g,m,o,f,l);await Promise.all(x)}c==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=i.filter(x=>!Dk(x)&&!Wn(x.name,h,t)).map(x=>x.name);if(y.length>0){let x="";throw c!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${x}`)}return h}processStack(e,t,n,s,r,a,o,i,l){let u=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let p="";if(c.node.op==="Enter"&&S("isConstant",c.node,s,n)&&([p]=Rr(c.node.name,n)),s[c.node.name]==null){let d=Iv(c.node,s,n,this._resourceManager);p||([p]=Rr(c.node.name,n));let h=n.currentContext;w.isPromise(d)?u.push(d.then(f=>(s[p]=f,n.currentContext=h,this.checkTensorForDisposal(p,c.node,s,n,a,o,i),this.processChildNodes(c.node,t,n,s,r,l),f))):(s[p]=d,this.checkTensorForDisposal(p,c.node,s,n,a,o,i),this.processChildNodes(c.node,t,n,s,r,l))}else this.processChildNodes(c.node,t,n,s,r,l)}return u}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=Rr(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Wn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!Wn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=hs(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);w.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&w.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=hs(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=hs(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},gj=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},yj="?tfjs-format=file",Aj="model.json",A0=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new gj}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=In.browserHTTPRequest(e,this.loadOptions);else{let t=In.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(In.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=In.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new qg(vv.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=vv.Instance.transformGraph(e.modelInitializer);this.initializer=new qg(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=In.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof st)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function xj(e,t={}){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&e.load==null&&(e.endsWith("/")||(e=e+"/"),e=`${e}${Aj}${yj}`);let n=new A0(e,t);return await n.load(),n}var bj="0.0.0",Pk={};Le(Pk,{CSVDataset:()=>jk,Dataset:()=>vc,FileDataSource:()=>Qk,TextLineDataset:()=>Hk,URLDataSource:()=>eS,array:()=>Uj,csv:()=>eq,func:()=>tq,generator:()=>nq,microphone:()=>rq,version_data:()=>aq,webcam:()=>sq,zip:()=>Gj});var vj=Ui(Xf()),wj=Ui(Xf());function kj(e,t){return zf(e,t)}function zf(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if($u(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=zf(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function Sj(e,t=Ok){return Fk(e,t)}function Fk(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if($u(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(u=>u[o]),l=Fk(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function Ok(e){return e===null?null:$u(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Mk(e,t){let n=new Map;zf(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let o=await a;n.set(r,o)}}return zf(e,t,n)}function $u(e){let t=!1;if(Y().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=v4();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof st)&&!(e instanceof Promise)&&!t)}function Ij(e){return e==null||Cj(e)||Array.isArray(e)||typeof e=="object"&&e instanceof st||w.isTypedArray(e)}function Cj(e){return e===null||typeof e!="object"&&typeof e!="function"}function Tj(e){return kj(e,Nj)}function Nj(e){return e instanceof st?{value:e.clone(),recurse:!1}:$u(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var zk=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},Lk=class extends zk{constructor(){super(Lk.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},Bk=Lk;Bk.INITIAL_CAPACITY=32;function Wk(e){return new _j(e)}function qx(e){return new $j(e)}function Ej(e,t){return new Vk(e,t)}function Rj(e,t=Uk.FAIL){return new Wj(e,t)}var An=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Lj(this,e)}filter(e){return new Mj(this,e)}map(e){return new zj(this,e)}mapAsync(e){return new Nv(this,e)}serialMapAsync(e){return new Nv(this,e).serial()}flatmap(e){return new Bj(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new Oj(this,e,t)}columnMajorBatch(e,t=!0,n=Ok){return this.rowMajorBatch(e,t).map(r=>Sj(r,n))}concatenate(e,t){return new Vk(Wk([this,e]),t)}take(e){return e<0||e==null?this:new Fj(this,e)}skip(e){return e<0||e==null?this:new Pj(this,e)}prefetch(e){return new Gk(this,e)}shuffle(e,t){return new Vj(this,e,t)}serial(){return new Dj(this)}},_j=class extends An{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:Tj(e),done:!1}}},$j=class extends An{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},Dj=class extends An{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},Pj=class extends An{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ne(e.value)}return this.upstream.next()}},Fj=class extends An{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},Oj=class extends An{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},Mj=class extends An{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ne(e.value)}}},zj=class extends An{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=pr.getTensorsInContainer(e.value),n=this.transform(e.value),s=pr.getTensorsInContainer(n);for(let r of t)pr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},Lj=class extends An{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Nv=class extends An{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=pr.getTensorsInContainer(e.value),n=await this.transform(e.value),s=pr.getTensorsInContainer(n);for(let r of t)pr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},Xx=class extends An{constructor(){super(),this.outputQueue=new Bk,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},Bj=class extends Xx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=pr.getTensorsInContainer(e.value),n=this.transform(e.value),s=pr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)pr.isTensorInList(r,s)||r.dispose();return!0}},Vk=class extends An{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Uk=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(Uk||{}),Wj=class extends An{constructor(e,t=0){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof An?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await Mk(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},Gk=class extends An{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new zk(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},Vj=class extends Gk{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=wj.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},vc=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),ps(async()=>(await n.iterator()).columnMajorBatch(e,t,Hj),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,ps(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,ps(async()=>(await t.iterator()).filter(s=>K(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return ps(async()=>(await t.iterator()).map(n=>K(()=>e(n))),this.size)}mapAsync(e){let t=this;return ps(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return ps(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,ps(async()=>{let s=qx(async()=>({value:await t.iterator(),done:!1}));return Ej(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,ps(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=vj.alea(t||w.now().toString());return ps(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,ps(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};vc.MAX_BUFFER_SIZE=1e4;function ps(e,t=null){return new class extends vc{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Uj(e){return ps(async()=>Wk(e),e.length)}function Gj(e){if(!$u(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return ps(async()=>{let n=await Mk(e,s=>{if(s instanceof vc)return{value:s.iterator(),recurse:!1};if($u(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return Rj(n,1)},t)}function Hj(e){if(e===null)return null;let t=e[0];return Ij(t)?{value:jj(e),recurse:!1}:{value:null,recurse:!0}}function jj(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof st?cn(e):ht(e)}var Hk=class extends vc{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Yh='"',bd=Symbol("out"),Ev=Symbol("field"),Jh=Symbol("quote"),lg=Symbol("quoteafterquote"),Rv=Symbol("quoteinquote"),jk=class extends vc{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Hk(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let u=Number(i);if(isNaN(u))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=u;else switch(o.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(i);break;default:l=u}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=bd;for(let o=0;o<r;o++)switch(a){case bd:switch(e.charAt(o)){case Yh:s=o+1,a=Jh;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=bd;break;default:a=Ev,s=o;break}break;case Ev:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=bd,s=o+1;break;default:}break;case Jh:switch(e.charAt(o)){case Yh:a=lg;break;default:}break;case lg:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=bd,s=o+1;break;case Yh:a=Jh;break;default:a=Rv;break}break;case Rv:switch(e.charAt(o)){case Yh:a=Jh;break;default:}break;default:}if(a===lg?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},qk=class extends An{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Y().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new qk(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),ht(n,t)}},Xk=class extends An{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ct([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=hr([a,r,i,o],[1,4])}else this.cropBox=hr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Y().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Xk(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=zs.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return K(()=>{let t=Kt(ge(e,"float32"),0),n;n=Se.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return H(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},Kk=class{},Zk=class extends An{split(e){return new qj(this,e)}},qj=class extends Zk{constructor(e,t){super(),this.upstream=e,this.impl=new Xj(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Xj=class extends Xx{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},Kj=class extends An{decodeUTF8(){return new Zj(this)}},Zj=class extends Zk{constructor(e){super(),this.upstream=e,this.impl=new Yj(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Yj=class extends Xx{constructor(e){if(super(),this.upstream=e,Y().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=v4();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return Y().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},Yk=class extends Kj{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(Y().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function Jj(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=Qj(e));let a=await(n||w.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new Yk(o,t)}else throw new Error(a.statusText)}var Qj=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function Jk(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var Qk=class extends Kk{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(Jk(this.input)&&Y().get("IS_NODE")){let e=dy();this.input=e.readFileSync(this.input.slice(7))}return new Yk(this.input,this.options)}},eS=class extends Kk{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return Jk(this.url)?new Qk(this.url,this.fileOptions).iterator():Jj(this.url,this.fileOptions)}};function eq(e,t={}){return new jk(new eS(e),t)}function tq(e){let t=qx(e);return ps(async()=>t)}function nq(e){return ps(async()=>{let t=await e();return qx(()=>t.next())})}async function sq(e,t){return Xk.create(e,t)}async function rq(e){return qk.create(e)}var aq="0.0.0";function Ce(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var oq=Zs.whereImpl,tS=class extends Ou{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Zd(this,rn())}nextDataId(){return tS.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&T.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return T.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,n)}makeOutput(e,t,n){let s=this.write(e,t,n);return rn().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ce([e],"where");let t=this.readSync(e.dataId);return oq(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Kx=tS;Kx.nextDataId=0;var x0={};Le(x0,{addImpl:()=>sS,bincountImpl:()=>Yx,bincountReduceImpl:()=>rS,ceilImpl:()=>aS,concatImpl:()=>Jx,equalImpl:()=>oS,expImpl:()=>lS,expm1Impl:()=>cS,floorImpl:()=>dS,gatherNdImpl:()=>pS,gatherV2Impl:()=>hS,greaterEqualImpl:()=>mS,greaterImpl:()=>fS,lessEqualImpl:()=>yS,lessImpl:()=>gS,linSpaceImpl:()=>AS,logImpl:()=>xS,maxImpl:()=>bS,maximumImpl:()=>vS,minimumImpl:()=>wS,multiplyImpl:()=>Qx,negImpl:()=>kS,notEqualImpl:()=>SS,prodImpl:()=>IS,rangeImpl:()=>t3,rsqrtImpl:()=>CS,sigmoidImpl:()=>Xq,simpleAbsImpl:()=>nS,sliceImpl:()=>Bf,sparseFillEmptyRowsImpl:()=>NS,sparseReshapeImpl:()=>ES,sparseSegmentReductionImpl:()=>n3,sqrtImpl:()=>Yq,squaredDifferenceImpl:()=>RS,stridedSliceImpl:()=>_S,stringNGramsImpl:()=>$S,stringSplitImpl:()=>DS,stringToHashBucketFastImpl:()=>PS,subImpl:()=>FS,tileImpl:()=>OS,topKImpl:()=>zS,transposeImpl:()=>e3,uniqueImpl:()=>LS});function nS(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var iq=e=>{let{x:t}=e.inputs,n=e.backend;Ce(t,"abs");let s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=nS(r),n.makeOutput(s,t.shape,t.dtype)},lq={kernelName:Hi,backendName:"cpu",kernelFunc:iq};function Qt(e){return(t,n,s,r,a)=>{let o=T.assertAndGetBroadcastShape(t,n),i=o.length,l=w.computeStrides(o),u=w.sizeFromShape(o),c=w.getTypedArrayFromDType(a,u),p=t.length,d=n.length,h=w.computeStrides(t),f=w.computeStrides(n),m=T.getBroadcastDims(t,o),g=T.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){let x=w.indexToLoc(y,i,l),A=x.slice(-p);m.forEach(I=>A[I]=0);let b=w.locToIndex(A,p,h),v=x.slice(-d);g.forEach(I=>v[I]=0);let k=w.locToIndex(v,d,f);c[y]=e(s[b],r[k])}return[c,o]}}function fs(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var uq={kernelName:Jd,backendName:"cpu",kernelFunc:fs};function Lf(e,t,n="float32"){if(n==="complex64"){let r=Lf(e,t,"float32"),a=Lf(e,t,"float32");return fs({inputs:{real:r,imag:a},backend:e})}let s=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Fr(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var cq={kernelName:Ao,backendName:"cpu",kernelFunc:Fr};function zi(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var dq={kernelName:ip,backendName:"cpu",kernelFunc:zi};function Ka(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Fr({inputs:{x:r},backend:n});let o=Lf(n,r.shape,r.dtype),i=Ka({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=fs({inputs:{real:i,imag:o},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=zi({inputs:{input:r},backend:n}),i=Ka({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(r.dtype,a)){let o=Fr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32"){let o=n.data.get(r.dataId).values,i=Int32Array.from(o);return n.makeTensorInfo(r.shape,"int32",i)}if(a==="bool"){let o=n.data.get(r.dataId).values,i=w.toTypedArray([0],r.dtype),[l,u]=Qt((c,p)=>c!==p?1:0)(r.shape,[],o,i,"bool");return n.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var pq={kernelName:no,backendName:"cpu",kernelFunc:Ka};function xn(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Ce([o,i],e);let u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,p=o.dtype==="string"?T.fromUint8ToStringArray(u):u,d=o.dtype==="string"?T.fromUint8ToStringArray(c):c,h=s||o.dtype,[f,m]=t(o.shape,i.shape,p,d,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let u=Ka({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,h=l.data.get(p.dataId).values,f=l.data.get(d.dataId).values,m=Ka({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,A=l.data.get(y.dataId).values,b=l.data.get(x.dataId).values,[v,k,I]=n(o.shape,i.shape,h,f,A,b),E=l.makeTensorInfo(I,"float32",v),R=l.makeTensorInfo(I,"float32",k),P=fs({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),P}else{let u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,p=s||o.dtype,[d,h]=t(o.shape,i.shape,u,c,p);return l.makeTensorInfo(h,p,d)}}}function Zx(e){return(t,n,s,r,a,o)=>{let i=T.assertAndGetBroadcastShape(t,n),l=w.sizeFromShape(i),u=i.length,c=w.computeStrides(i),p=w.getTypedArrayFromDType("float32",l),d=w.getTypedArrayFromDType("float32",l),h=T.getBroadcastDims(t,i),f=T.getBroadcastDims(n,i),m=T.mergeRealAndImagArrays(s,r),g=T.mergeRealAndImagArrays(a,o),y=t.length,x=w.computeStrides(t),A=n.length,b=w.computeStrides(n);if(h.length+f.length===0)for(let v=0;v<p.length;v++){let k=v%m.length,I=v%g.length,E=e(m[k*2],m[k*2+1],g[I*2],g[I*2+1]);p[v]=E.real,d[v]=E.imag}else for(let v=0;v<p.length;v++){let k=w.indexToLoc(v,u,c),I=k.slice(-y);h.forEach(D=>I[D]=0);let E=w.locToIndex(I,y,x),R=k.slice(-A);f.forEach(D=>R[D]=0);let P=w.locToIndex(R,A,b),_=e(m[E*2],m[E*2+1],g[P*2],g[P*2+1]);p[v]=_.real,d[v]=_.imag}return[p,d,i]}}var sS=Qt((e,t)=>e+t),hq=Zx((e,t,n,s)=>({real:e+n,imag:t+s})),Op=xn(ta,sS,hq),fq={kernelName:ta,backendName:"cpu",kernelFunc:Op};function Yx(e,t,n,s,r){let a=w.sizeFromShape(s),o=w.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function rS(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=We([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let u=e.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(s?o.set(1,i,u):t.size>0?o.set(o.get(i,u)+t.get(i,l),i,u):o.set(o.get(i,u)+1,i,u))}return o}function Ko(e){return(t,n,s)=>{let r=w.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function gt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ce(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,u=w.sizeFromShape(o.shape),c=n||o.dtype,p=w.getArrayFromDType(c,u);for(let d=0;d<u;++d)p[d]=t(l[d],r);return i.makeTensorInfo(o.shape,c,p)}}function wc(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ce(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,u=n||o.dtype,c=t(l,u,r);return i.makeTensorInfo(o.shape,u,c)}}var aS=Ko(e=>Math.ceil(e)),mq=wc(so,aS),gq={kernelName:so,backendName:"cpu",kernelFunc:mq};function Jx(e,t,n,s){let r=w.getArrayFromDType(n,w.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=w.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?T.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let u=0;u<o.shape[0];++u){let c=u*t[1]+a;for(let p=0;p<o.shape[1];++p)r[c+p]=i[l++]}a+=o.shape[1]})}return r}var oS=Qt((e,t)=>e===t?1:0),iS=xn(Yi,oS,null,"bool"),yq={kernelName:Yi,backendName:"cpu",kernelFunc:iS},lS=Ko(e=>Math.exp(e)),uS=wc(ho,lS,"float32"),Aq={kernelName:ho,backendName:"cpu",kernelFunc:uS},cS=Ko(e=>Math.expm1(e)),xq=wc(Qi,cS),bq={kernelName:Qi,backendName:"cpu",kernelFunc:xq},dS=Ko(e=>Math.floor(e)),vq=wc(fo,dS),wq={kernelName:fo,backendName:"cpu",kernelFunc:vq};function pS(e,t,n,s,r,a,o,i,l){let u=We([s,a],n);for(let c=0;c<s;c++){let p=[],d=0;for(let h=0;h<r;h++){let f=e[c*r+h];d+=f*o[h],p.push(f)}if(d<0||d>=l/a)throw new Error(`Invalid indices: ${p} does not index into ${i}`);for(let h=0;h<a;h++)u.values[c*a+h]=t.get(...t.indexToLoc(d*a+h))}return u}function hS(e,t,n){let s=We(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],u=t.locToIndex([i,l]);o[2]=t.values[u];let c=e.locToIndex(o);0<=c&&c<e.values.length&&(s.values[r]=e.values[c])}return s}var fS=Qt((e,t)=>e>t?1:0),kq=xn(sl,fS,null,"bool"),Sq={kernelName:sl,backendName:"cpu",kernelFunc:kq},mS=Qt((e,t)=>e>=t?1:0),Iq=xn(yo,mS,null,"bool"),Cq={kernelName:yo,backendName:"cpu",kernelFunc:Iq},gS=Qt((e,t)=>e<t?1:0),Tq=xn(rl,gS,null,"bool"),Nq={kernelName:rl,backendName:"cpu",kernelFunc:Tq},yS=Qt((e,t)=>e<=t?1:0),Eq=xn(al,yS,null,"bool"),Rq={kernelName:al,backendName:"cpu",kernelFunc:Eq};function AS(e,t,n){let s=(t-e)/(n-1),r=w.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var xS=Ko(e=>Math.log(e)),_q=wc(bo,xS),$q={kernelName:bo,backendName:"cpu",kernelFunc:_q};function bS(e,t,n,s){let r=w.getTypedArrayFromDType(s,w.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let u=e[o+l];(Number.isNaN(u)||u>i)&&(i=u)}r[a]=i}return r}var vS=Qt((e,t)=>Math.max(e,t)),Dq=xn(wo,vS),Pq={kernelName:wo,backendName:"cpu",kernelFunc:Dq},wS=Qt((e,t)=>Math.min(e,t)),Fq=xn(Co,wS),Oq={kernelName:Co,backendName:"cpu",kernelFunc:Fq},Qx=Qt((e,t)=>e*t),Mq=Zx((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),b0=xn(No,Qx,Mq),zq={kernelName:No,backendName:"cpu",kernelFunc:b0};function kS(e,t,n){let s=w.createScalarValue(-1,n);return Qx([],t,s,e,n)}function Lq(e){let{inputs:t,backend:n}=e,{x:s}=t;Ce(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=kS(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var Bq={kernelName:il,backendName:"cpu",kernelFunc:Lq},SS=Qt((e,t)=>e!==t?1:0),Wq=xn(ll,SS,null,"bool"),Vq={kernelName:ll,backendName:"cpu",kernelFunc:Wq};function e3(e,t,n,s,r){let a=t.length,o=w.sizeFromShape(t),i=w.computeStrides(t),l=w.computeStrides(r),u=w.getTypedArrayFromDType(n,w.sizeFromShape(r));for(let c=0;c<o;++c){let p=w.indexToLoc(c,a,i),d=new Array(p.length);for(let f=0;f<d.length;f++)d[f]=p[s[f]];let h=w.locToIndex(d,a,l);u[h]=e[c]}return u}function as(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Ce(r,"transpose");let o=r.shape.length,i=new Array(o);for(let p=0;p<i.length;p++)i[p]=r.shape[a[p]];let l=s.data.get(r.dataId).values,u=e3(l,r.shape,r.dtype,a,i);return{dataId:s.write(u,i,r.dtype),shape:i,dtype:r.dtype}}var Uq={kernelName:Ho,backendName:"cpu",kernelFunc:as};function IS(e,t,n,s){let[r,a]=T.computeOutAndReduceShapes(e,s),o=Tn(t,"int32"),i=w.makeZerosTypedArray(w.sizeFromShape(r),o),l=w.sizeFromShape(a);for(let u=0;u<i.length;++u){let c=u*l,p=1;for(let d=0;d<l;++d)p*=n[c+d];i[u]=p}return{outVals:i,outShape:r,outDtype:o}}function Gq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ce(r,"prod");let i=r.shape.length,l=w.parseAxisParam(a,r.shape),u=T.getAxesPermutation(l,i),c=l,p=r,d=[];u!=null&&(p=as({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(p),c=T.getInnerMostAxes(c.length,i));let h=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=IS(p.shape,p.dtype,h,c),y=m;return o&&(y=T.expandShapeToKeepDim(m,l)),d.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(y,g,f)}var Hq={kernelName:$o,backendName:"cpu",kernelFunc:Gq};function t3(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return w.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=w.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var CS=Ko(e=>1/Math.sqrt(e)),jq=wc(Oo,CS),qq={kernelName:Oo,backendName:"cpu",kernelFunc:jq},Xq=Ko(e=>1/(1+Math.exp(-e))),TS=gt(zo,e=>1/(1+Math.exp(-e))),Kq={kernelName:zo,backendName:"cpu",kernelFunc:TS};function Bf(e,t,n,s,r){let a=Mt.isSliceContinous(s,t,n),o=w.sizeFromShape(n),i=w.computeStrides(s);if(a){let p=Mt.computeFlatOffset(t,i);return r==="string"?e.slice(p,p+o):e.subarray(p,p+o)}let l=r==="string"?T.fromUint8ToStringArray(e):e,u=We(s,r,l),c=We(n,r);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),h=d.map((f,m)=>f+t[m]);c.set(u.get(...h),...d)}return r==="string"?T.fromStringArrayToUint8(c.values):c.values}function Li(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Ce(r,"slice");let[i,l]=Mt.parseSliceParams(r,a,o);Mt.assertParamsValid(r,i,l);let u=n.data.get(r.dataId).values,c=Bf(u,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}var Zq={kernelName:xl,backendName:"cpu",kernelFunc:Li};function NS(e,t,n,s,r,a,o){let i=t[0],l=a[0],u=new Array(l),c=new Array(i),p=t[1];if(l===0){if(i!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=w.getArrayFromDType(n,0),y=w.getArrayFromDType(r,0);return[g,[0,p],y,u,c]}let d=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let y=e[g*p];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],d=d&&y>=h,h=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,y=s;for(let x=0;x<i;++x)c[x]=x;return[g,[i,p],y,u,c]}else{let g=f[l-1],y=w.getArrayFromDType(n,g*p),x=w.getArrayFromDType(r,g),A=new Array(l).fill(0);for(let b=0;b<i;++b){let v=e[b*p],k=A[v],I=(v===0?0:f[v-1])+k;A[v]++;for(let E=0;E<p;++E)y[I*p+E]=e[b*p+E];x[I]=s[b],c[b]=I}for(let b=0;b<l;++b)if(A[b]===0){let k=b===0?0:f[b-1];y[k*p+0]=b;for(let I=1;I<p;++I)y[k*p+I]=0;x[k]=o}return[y,[g,p],x,u,c]}}function ES(e,t,n,s,r){let a=w.sizeFromShape(s),o=t[0],i=r.length,l=[],u=1,c=-1;for(let g=0;g<i;++g){let y=r[g];if(y===-1){if(c!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,l.push(1)}else{if(y<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(g,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/u);if(u*g!==a)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[c]=g}if(w.sizeFromShape(l)!==a)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(s,l));let d=s.length,h=[];if(d>0){h[d-1]=1;for(let g=d-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=w.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let y=0;for(let x=0;x<d;++x)y+=e[g*d+x]*h[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(y/f[x]),y%=f[x]}return[m,[o,i],l]}function n3(e,t,n,s,r,a=!1,o=0){let i=s.length,l=[t[0],e.length/t[0]],u=l[1],p=i>0?r[i-1]+1:0;if(p<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let h=d.reduce((A,b)=>A*b,1),f=w.getArrayFromDType(n,h);if(i===0)return p>0&&f.fill(o),[f,d];if(p<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=r[m];for(;;){let A=0;if(g<i){if(A=r[g],x===A){++g;continue}if(x>=A)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=p)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,p));x>y&&f.fill(o,y*u,x*u);for(let b=m;b<g;++b){let v=s[b];if(v<0||v>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b,s[b],l[0]));for(let k=0;k<u;k++)f[x*u+k]+=e[v*u+k]}if(a)for(let b=0;b<u;b++)f[x*u+b]/=g-m;if(m=g,++g,y=x+1,x=A,g>i)break}return y<p&&f.fill(o,y*u,p*u),[f,d]}var Yq=Ko(e=>Math.sqrt(e)),Jq=gt(Lo,e=>Math.sqrt(e)),Qq={kernelName:Lo,backendName:"cpu",kernelFunc:Jq},RS=Qt((e,t)=>{let n=e-t;return n*n}),eX=xn(Vo,RS),tX={kernelName:Vo,backendName:"cpu",kernelFunc:eX};function _S(e,t,n,s){let r=We(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var nX=class{constructor(e,t,n,s,r,a){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),u=Math.max(0,i-(r-(o+1))),c=a-(l+u),p=t+(l>0?0:o-i),d=0;d+=l*this.leftPad.length;for(let y=0;y<c;++y)d+=e[p+y].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[s+o]=new Uint8Array(d);let f=n[s+o],m=0,g=y=>y.forEach(x=>f[m++]=x);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<c-1;++y)g(e[p+y]),g(this.separator);if(c>0){g(e[p+c-1]);for(let y=0;y<u;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<u-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let u=t[l]>=i;if(u=u&&t[l]<=n,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=w.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],u=0;this.nGramWidths.forEach(c=>{u+=this.getNumNGrams(l,c)}),this.preserveShort&&l>0&&u===0&&(u=1),a[i]=a[i-1]+u}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],u=a[i];if(this.nGramWidths.forEach(c=>{let p=t[i+1]-t[i],d=this.getNumNGrams(p,c);this.createNGrams(e,l,o,u,d,c),u+=d}),this.preserveShort&&u===a[i]){let c=t[i+1]-t[i];if(c===0)continue;let p=c+2*this.padWidth,d=1;this.createNGrams(e,l,o,u,d,p)}}return[o,a]}};function $S(e,t,n,s,r,a,o,i){return new nX(n,s,r,a,o,i).compute(e,t)}function sX(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function DS(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let d=0;d<s;++d){let h=r.length;sX(e[d],t,n,r);let f=r.length-h;i[d]=f,a+=f,o=Math.max(o,f)}let l=w.getArrayFromDType("int32",a*2),u=new Array(a),c=[s,o],p=0;for(let d=0;d<s;++d)for(let h=0;h<i[d];++h)l[p*2]=d,l[p*2+1]=h,u[p]=r[p],++p;return[l,u,c]}function PS(e,t){let n=w.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=w.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var FS=Qt((e,t)=>e-t),rX=Zx((e,t,n,s)=>({real:e-n,imag:t-s})),s3=xn(Uo,FS,rX),aX={kernelName:Uo,backendName:"cpu",kernelFunc:s3};function OS(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=We(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var Cd=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function MS(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,u=Math.log(i),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(i-c)/i)*Math.sign(l-i/2),d=Math.max(n,Math.floor(t-l*c/i+p)),h=Math.min(s,Math.floor(t+(i-l)*c/i+p));MS(e,t,d,h)}let r=e[t],a=n,o=s;for(w.swap(e,n,t),Cd(e[s],r)>0&&w.swap(e,n,s);a<o;){for(w.swap(e,a,o),a++,o--;Cd(e[a],r)<0;)a=a+1;for(;Cd(e[o],r)>0;)o=o-1}Cd(e[n],r)===0?w.swap(e,n,o):(o=o+1,w.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function zS(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=w.getTypedArrayFromDType(n,o*s),u=w.getTypedArrayFromDType("int32",o*s);for(let p=0;p<o;p++){let d=p*i,h=e.subarray(d,d+i),f=new Array(h.length);h.forEach((x,A)=>f[A]={value:x,index:A}),s<f.length&&(MS(f,s),f=f.slice(0,s)),r&&f.sort(Cd);let m=p*s,g=l.subarray(m,m+s),y=u.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,y[x]=f[x].index}let c=t.slice();return c[c.length-1]=s,[We(c,n,l),We(c,"int32",u)]}function LS(e,t,n,s){let r=w.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new on(a,s,e),u=[],c=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=e[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let x=0;x<a[2];x++)g.push(l.get(y,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,u.push(f)}}let p=a.slice();p[1]=Object.keys(o).length;let d=new on(p,s);u.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)d.set(l.get(g,f,y),g,m,y)});let h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:i}}var oX="0.0.0";_l("cpu",()=>new Kx,1);var BS=gt(po,e=>e>=0?e:Math.exp(e)-1),iX={kernelName:po,backendName:"cpu",kernelFunc:BS};function WS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Ce([r],"leakyRelu");let o=w.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=w.getTypedArrayFromDType("float32",o);for(let u=0;u<i.length;u++)l[u]=i[u]<0?a*i[u]:i[u];return n.makeTensorInfo(r.shape,"float32",l)}var lX={kernelName:xo,backendName:"cpu",kernelFunc:WS},uX=Qt((e,t)=>e<0?t*e:e);function VS(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Ce([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=uX(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var cX={kernelName:_o,backendName:"cpu",kernelFunc:VS},US=gt(Do,e=>Math.max(0,e)),dX={kernelName:Do,backendName:"cpu",kernelFunc:US},GS=gt(Fo,e=>Math.min(Math.max(0,e),6)),pX={kernelName:Fo,backendName:"cpu",kernelFunc:GS};function r3(e,t,n,s,r){if(n==="linear")return Fr({inputs:{x:t},backend:e});if(n==="relu")return US({inputs:{x:t},backend:e});if(n==="elu")return BS({inputs:{x:t},backend:e});if(n==="relu6")return GS({inputs:{x:t},backend:e});if(n==="prelu")return VS({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return WS({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return TS({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function $t(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=w.sizeFromShape(r.shape),i=w.inferFromImplicitShape(a,o),l=w.sizeFromShape(i);w.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=i,p.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var hX={kernelName:fl,backendName:"cpu",kernelFunc:$t};function HS(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Ce([r,a],"matMul");let l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],p=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=Rl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);w.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,c,d]:[g,d,c],v=i?[y,h,p]:[y,p,h],k=$t({inputs:{x:r},backend:n,attrs:{shape:b}}),I=$t({inputs:{x:a},backend:n,attrs:{shape:v}}),E=o?k.shape[1]:k.shape[2],R=o?k.shape[2]:k.shape[1],P=i?I.shape[1]:I.shape[2],_=Math.max(g,y),D=n.data.get(k.dataId).values,C=n.data.get(I.dataId).values,F=w.computeStrides(k.shape),U=w.computeStrides(I.shape),[X,z,Z]=o?[F[0],1,F[1]]:[F[0],F[1],1],[B,ee,Q]=i?[1,U[1],U[0]]:[U[1],1,U[0]],ae=R*P,J=We([_,R,P],k.dtype),re=J.values,ie=n.blockSize;for(let me=0;me<_;me++)for(let be=0;be<R;be+=ie)for(let Ee=0;Ee<P;Ee+=ie)for(let Re=0;Re<E;Re+=ie){let ze=Math.min(be+ie,R),Be=Math.min(Ee+ie,P),nt=Math.min(Re+ie,E);for(let it=be;it<ze;it++)for(let lt=Ee;lt<Be;lt++){let ft=0;for(let $e=Re;$e<nt;$e++){let wt=Math.min(me,g-1)*X,yt=Math.min(me,y-1)*Q,Dn=D[wt+it*z+$e*Z],qt=C[$e*B+lt*ee+yt];ft+=Dn*qt}re[me*ae+(it*P+lt)]+=ft}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(A,J.dtype,J.values)}var fX={kernelName:to,backendName:"cpu",kernelFunc:HS};function mX(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s,d,h,f,m=[];d=HS({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),o&&(h=Op({inputs:{a:d,b:o},backend:n}),m.push(d),d=h),c&&(f=r3(n,d,c,i,p),m.push(d),d=f);for(let y of m)n.disposeIntermediateTensorInfo(y);return d}var gX={kernelName:Oa,backendName:"cpu",kernelFunc:mX},yX=gt(zu,e=>Math.acos(e)),AX={kernelName:zu,backendName:"cpu",kernelFunc:yX},xX=gt(Lu,e=>Math.acosh(e)),bX={kernelName:Lu,backendName:"cpu",kernelFunc:xX};function vX(e){let{inputs:t,backend:n}=e,s=t;Ce(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=We(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let u=0;u<o.length;u++)o[u]+=l[u]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var wX={kernelName:Ja,backendName:"cpu",kernelFunc:vX};function kX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ce(r,"all");let i=w.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=as({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let v=m[x+b];A=A&&v}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(p,i),x=$t({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var SX={kernelName:Bu,backendName:"cpu",kernelFunc:kX};function IX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ce(r,"any");let i=w.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=as({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let v=m[x+b];A=A||v}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(p,i),x=$t({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var CX={kernelName:Wu,backendName:"cpu",kernelFunc:IX};function TX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ce(r,"argMax");let o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=as({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[c,p]=T.computeOutAndReduceShapes(l.shape,o),d=w.sizeFromShape(c),h=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let v=m[y+b];v>x&&(x=v,A=b)}h[g]=A}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var NX={kernelName:Qa,backendName:"cpu",kernelFunc:TX};function EX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ce(r,"argMin");let o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=as({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[c,p]=T.computeOutAndReduceShapes(l.shape,o),d=w.sizeFromShape(c),h=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let v=m[y+b];v<x&&(x=v,A=b)}h[g]=A}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var RX={kernelName:Vu,backendName:"cpu",kernelFunc:EX},_X=gt(Uu,e=>Math.asin(e)),$X={kernelName:Uu,backendName:"cpu",kernelFunc:_X},DX=gt(Gu,e=>Math.asinh(e)),PX={kernelName:Gu,backendName:"cpu",kernelFunc:DX},FX=gt(Hu,e=>Math.atan(e)),OX={kernelName:Hu,backendName:"cpu",kernelFunc:FX},MX=Qt((e,t)=>Math.atan2(e,t)),zX=xn(qu,MX),LX={kernelName:qu,backendName:"cpu",kernelFunc:zX},BX=gt(ju,e=>Math.atanh(e)),WX={kernelName:ju,backendName:"cpu",kernelFunc:BX};function a3(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=We(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],A=r.outShape[3];for(let b=0;b<r.batchSize;++b){let v=b*y,k=b*s[0];for(let I=0;I<r.inChannels;++I)for(let E=0;E<r.outHeight;++E){let R=E*o-d,P=Math.max(0,R),_=Math.min(r.inHeight,c+R),D=v+E*x;for(let C=0;C<r.outWidth;++C){let F=C*i-h,U=Math.max(0,F),X=Math.min(r.inWidth,p+F),z=f,Z=0,B=0;for(let Q=P;Q<_;Q+=l){let ae=k+Q*s[1];for(let J=U;J<X;J+=u){let re=ae+J*s[2],ie=e[re+I];a==="max"&&ie>z?z=ie:a==="avg"&&(Z+=ie,B++)}if(isNaN(z))break}let ee=D+C*A+I;g[ee]=a==="avg"?Z/B:z}}}return m}function jS(e,t,n,s,r=!1,a=!1){let o=We(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,p=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=We(t,n,e);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){let A=x*i-h,b=A;for(;b<0;)b+=u;let v=Math.min(s.inHeight,p+A);for(let k=0;k<s.outWidth;++k){let I=k*l-f,E=I;for(;E<0;)E+=c;let R=Math.min(s.inWidth,d+I),P=Number.NEGATIVE_INFINITY,_=-1;for(let D=b;D<v;D+=u){let C=D-A;for(let F=E;F<R;F+=c){let U=F-I,X=m.get(g,D,F,y);X>P&&(P=X,r?_=a?((g*s.inHeight+D)*s.inWidth+F)*s.inChannels+y:(D*s.inWidth+F)*s.inChannels+y:_=C*d+U)}}o.set(_,g,x,k,y)}}return o}function qS(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=We(r.outShape,n),b=A.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){let P=R*v,_=R*s[0];for(let D=0;D<r.inChannels;++D)for(let C=0;C<r.outDepth;++C){let F=C*o-m,U=F;for(;U<0;)U+=u;let X=Math.min(r.inDepth,d+F),z=P+C*k;for(let Z=0;Z<r.outHeight;++Z){let B=Z*i-g,ee=B;for(;ee<0;)ee+=c;let Q=Math.min(r.inHeight,h+B),ae=z+Z*I;for(let J=0;J<r.outWidth;++J){let re=J*l-y,ie=re;for(;ie<0;)ie+=p;let me=Math.min(r.inWidth,f+re),be=ae+J*E,Ee=x,Re=0,ze=0;for(let nt=U;nt<X;nt+=u){let it=_+nt*s[1];for(let lt=ee;lt<Q;lt+=c){let ft=it+lt*s[2];for(let $e=ie;$e<me;$e+=p){let wt=ft+$e*s[3],yt=e[wt+D];if(a==="max"&&yt>Ee?Ee=yt:a==="avg"&&(Re+=yt,ze++),isNaN(Ee))break}if(isNaN(Ee))break}if(isNaN(Ee))break}let Be=be+D;b[Be]=a==="avg"?Re/ze:Ee}}}}return A}function VX(e,t){let n=We(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let x=y*s-d,A=x;for(;A<0;)A+=o;let b=Math.min(t.inDepth,u+x);for(let v=0;v<t.outHeight;++v){let k=v*r-h,I=k;for(;I<0;)I+=i;let E=Math.min(t.inHeight,c+k);for(let R=0;R<t.outWidth;++R){let P=R*a-f,_=P;for(;_<0;)_+=l;let D=Math.min(t.inWidth,p+P),C=Number.NEGATIVE_INFINITY,F=-1;for(let U=A;U<b;U+=o){let X=U-x;for(let z=I;z<E;z+=i){let Z=z-k;for(let B=_;B<D;B+=l){let ee=B-P,Q=e.get(m,U,z,B,g);Q>=C&&(C=Q,F=X*c*p+Z*c+ee)}}}n.set(F,m,y,v,R,g)}}}return n}function UX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ce(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;w.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))p=Fr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=a3(d,r.shape,r.dtype,h,c,"avg");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var GX={kernelName:eo,backendName:"cpu",kernelFunc:UX};function HX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;Ce(r,"avgPool3d");let c=T.computePool3DInfo(r.shape,a,o,1,i,l,u),p=n.data.get(r.dataId).values,d=qS(p,r.shape,r.dtype,w.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var jX={kernelName:Yd,backendName:"cpu",kernelFunc:HX};function qX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;Ce([r,a],"avgPool3DGrad");let c=T.computePool3DInfo(a.shape,o,i,1,l,u),p=c.strideDepth,d=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,A=c.dilationWidth,b=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=b-1-c.padInfo.front,E=k-1-c.padInfo.left,R=v-1-c.padInfo.top,P=We(a.shape,"float32"),_=1/(f*m*g),D=n.bufferSync(r);for(let C=0;C<c.batchSize;++C)for(let F=0;F<c.inChannels;++F)for(let U=0;U<c.inDepth;++U)for(let X=0;X<c.inHeight;++X)for(let z=0;z<c.inWidth;++z){let Z=U-I,B=X-R,ee=z-E,Q=0;for(let ae=0;ae<b;ae+=y){let J=(Z+ae)/p;if(!(J<0||J>=c.outDepth||Math.floor(J)!==J))for(let re=0;re<v;re+=x){let ie=(B+re)/d;if(!(ie<0||ie>=c.outHeight||Math.floor(ie)!==ie))for(let me=0;me<k;me+=A){let be=(ee+me)/h;if(be<0||be>=c.outWidth||Math.floor(be)!==be)continue;Q+=D.get(C,J,ie,be,F)}}}P.set(Q*_,C,U,X,z,F)}return n.makeTensorInfo(P.shape,P.dtype,P.values)}var XX={kernelName:Jf,backendName:"cpu",kernelFunc:qX};function KX(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Ce([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=s,c=T.computePool2DInfo(o.shape,i,l,1,u),p=c.strideHeight,d=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,A=x-1-c.padInfo.left,b=y-1-c.padInfo.top,v=We(o.shape,"float32"),k=1/(h*f),I=n.data.get(r.dataId).values,E=We(r.shape,"float32",I);for(let R=0;R<c.batchSize;++R)for(let P=0;P<c.inChannels;++P)for(let _=0;_<c.inHeight;++_)for(let D=0;D<c.inWidth;++D){let C=_-b,F=D-A,U=0;for(let X=0;X<y;X+=m){let z=(C+X)/p;if(!(z<0||z>=c.outHeight||Math.floor(z)!==z))for(let Z=0;Z<x;Z+=g){let B=(F+Z)/d;if(B<0||B>=c.outWidth||Math.floor(B)!==B)continue;U+=E.get(R,z,B,P)}}v.set(U*k,R,_,D,P)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var ZX={kernelName:Yf,backendName:"cpu",kernelFunc:KX};function YX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;w.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ce([r,i,l,a,o],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);let c=n.data.get(r.dataId).values,p=n.data.get(i.dataId).values,d=n.data.get(l.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=h.length,x=d.length,A=p.length,b=0,v=0,k=0,I=0;for(let E=0;E<c.length;++E)m[E]=f[b++]+(c[E]-p[v++])*h[k++]/Math.sqrt(d[I++]+u),b>=g&&(b=0),v>=A&&(v=0),k>=y&&(k=0),I>=x&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var JX={kernelName:go,backendName:"cpu",kernelFunc:YX};function QX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Ce([r],"batchToSpaceND");let i=a.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=$t({inputs:{x:r},backend:n,attrs:{shape:l}}),f=as({inputs:{x:h},backend:n,attrs:{perm:u}}),m=$t({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Li({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var eK={kernelName:ji,backendName:"cpu",kernelFunc:QX};function tK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=Yx(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var nK={kernelName:Qf,backendName:"cpu",kernelFunc:tK};function sK(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var rK={kernelName:em,backendName:"cpu",kernelFunc:sK},aK=gt(na,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),oK={kernelName:na,backendName:"cpu",kernelFunc:aK},iK=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let u=0;u<i.length;u++){let c=i[u],p=l[u];s[u]=Math.hypot(c,p)}return n.makeOutput(s,t.shape,"float32")},lK={kernelName:Qd,backendName:"cpu",kernelFunc:iK};function Du(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var uK={kernelName:sp,backendName:"cpu",kernelFunc:Du};function Pu(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(m=>m.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>w.sizeFromShape(m.shape)>0);if(i.length===1)return Fr({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(T.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>zi({inputs:{input:b},backend:n})),g=i.map(b=>Du({inputs:{input:b},backend:n})),y=Pu({inputs:m,backend:n,attrs:{axis:a}}),x=Pu({inputs:g,backend:n,attrs:{axis:a}}),A=fs({inputs:{real:y,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),A}let u=i.map(m=>{let g=w.sizeFromShape(m.shape.slice(a));return $t({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),c=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=T.computeOutShape(u.map(m=>m.shape),1);let p=u[0].shape[0]===1,d=Jx(c,o,t[0].dtype,p),h=T.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,d);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var cK={kernelName:qi,backendName:"cpu",kernelFunc:Pu};function XS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Ce([r,a],"conv2d");let p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,p),h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,A=d.dataFormat==="channelsLast",b=new on(d.outShape,r.dtype),v=w.computeStrides(r.shape),k=w.computeStrides(a.shape),I=v[0],E=A?v[1]:v[2],R=A?v[2]:1,P=A?1:v[1],_=b.strides[0],D=A?b.strides[1]:b.strides[2],C=A?b.strides[2]:1,F=A?1:b.strides[1],U=n.data.get(r.dataId).values,X=n.data.get(a.dataId).values,z=b.values;for(let Z=0;Z<d.batchSize;++Z){let B=Z*I,ee=Z*_;for(let Q=0;Q<d.outHeight;++Q){let ae=ee+Q*D,J=Q*d.strideHeight-x;for(let re=0;re<h;++re){let ie=J+re*m;if(ie<0||ie>=d.inHeight)continue;let me=re*k[0],be=B+ie*E;for(let Ee=0;Ee<d.outWidth;++Ee){let Re=ae+Ee*C,ze=Ee*d.strideWidth-y;for(let Be=0;Be<f;++Be){let nt=ze+Be*g;if(nt<0||nt>=d.inWidth)continue;let it=me+Be*k[1],lt=be+nt*R,ft=it;for(let $e=0;$e<d.inChannels;++$e){let wt=U[lt+$e*P];for(let yt=0;yt<d.outChannels;++yt)z[Re+yt*F]+=wt*X[ft+yt];ft+=d.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,z)}var dK={kernelName:ro,backendName:"cpu",kernelFunc:XS};function pK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Ce([r,a],"conv2dBackpropFilter");let p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,c,o,1,i,u,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",x=new on(d.filterShape,"float32"),A=d.padInfo.left,b=d.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new on(r.shape,r.dtype,v),E=new on(a.shape,a.dtype,k);for(let R=0;R<m;++R){let P=Math.max(0,Math.ceil((b-R)/h)),_=Math.min(d.outHeight,(d.inHeight+b-R)/h);for(let D=0;D<g;++D){let C=Math.max(0,Math.ceil((A-D)/f)),F=Math.min(d.outWidth,(d.inWidth+A-D)/f);for(let U=0;U<d.inChannels;++U)for(let X=0;X<d.outChannels;++X){let z=0;for(let Z=0;Z<d.batchSize;++Z)for(let B=P;B<_;++B){let ee=R+B*h-b;for(let Q=C;Q<F;++Q){let ae=D+Q*f-A;y?z+=I.get(Z,ee,ae,U)*E.get(Z,B,Q,X):z+=I.get(Z,U,ee,ae)*E.get(Z,X,B,Q)}}x.set(z,R,D,U,X)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var hK={kernelName:tm,backendName:"cpu",kernelFunc:pK};function fK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s;Ce([r,a],"conv2dBackpropInput");let p=w.computeStrides(a.shape),d=w.computeStrides(r.shape),h=T.convertConv2DDataFormat(u),f=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,h),m=new on(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[A,b,v]=p,{batchSize:k,filterHeight:I,filterWidth:E,inChannels:R,inHeight:P,inWidth:_,outChannels:D,outHeight:C,outWidth:F,strideHeight:U,strideWidth:X}=f;h=f.dataFormat;let z=I-1-f.padInfo.top,Z=E-1-f.padInfo.left,B=h==="channelsLast",ee=m.strides[0],Q=B?m.strides[1]:m.strides[2],ae=B?m.strides[2]:1,J=B?1:m.strides[1],re=d[0],ie=B?d[1]:d[2],me=B?d[2]:1,be=B?1:d[1];for(let Ee=0;Ee<k;++Ee)for(let Re=0;Re<R;++Re)for(let ze=0;ze<P;++ze){let Be=ze-z,nt=Math.max(0,Math.ceil(Be/U)),it=Math.min(C,(I+Be)/U);for(let lt=0;lt<_;++lt){let ft=lt-Z,$e=Math.max(0,Math.ceil(ft/X)),wt=Math.min(F,(E+ft)/X),yt=0;for(let qt=nt;qt<it;++qt){let ls=qt*U-Be;for(let nn=$e;nn<wt;++nn){let Pn=nn*X-ft,us=re*Ee+ie*qt+me*nn,cs=A*(I-1-ls)+b*(E-1-Pn)+v*Re;for(let kn=0;kn<D;++kn){let Cs=y[us+be*kn],Fn=x[cs+kn];yt+=Cs*Fn}}}let Dn=ee*Ee+Q*ze+ae*lt+J*Re;g[Dn]=yt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var mK={kernelName:ao,backendName:"cpu",kernelFunc:fK};function gK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Ce([r,a],"conv3d");let u=T.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:c,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,x=g.left,A=g.top,b=new on(u.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=b.values,E=w.computeStrides(r.shape),R=w.computeStrides(a.shape);for(let P=0;P<u.batchSize;++P){let _=P*E[0],D=P*b.strides[0];for(let C=0;C<u.outDepth;++C){let F=D+C*b.strides[1],U=C*u.strideDepth-y;for(let X=0;X<c;++X){let z=U+X*h;if(z<0||z>=u.inDepth)continue;let Z=X*R[0],B=_+z*E[1];for(let ee=0;ee<u.outHeight;++ee){let Q=F+ee*b.strides[2],ae=ee*u.strideHeight-A;for(let J=0;J<p;++J){let re=ae+J*f;if(re<0||re>=u.inHeight)continue;let ie=Z+J*R[1],me=B+re*E[2];for(let be=0;be<u.outWidth;++be){let Ee=Q+be*u.outChannels,Re=be*u.strideWidth-x;for(let ze=0;ze<d;++ze){let Be=Re+ze*m;if(Be<0||Be>=u.inWidth)continue;let nt=ie+ze*R[2],it=me+Be*u.inChannels,lt=nt;for(let ft=0;ft<u.inChannels;++ft){let $e=v[it+ft];for(let wt=0;wt<u.outChannels;++wt)I[Ee+wt]+=$e*k[lt+wt];lt+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var yK={kernelName:ep,backendName:"cpu",kernelFunc:gK};function AK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Ce([r,a],"conv3dBackpropFilterV2");let u=w.computeStrides(r.shape),c=w.computeStrides(a.shape),p=T.computeConv3DInfo(r.shape,l,o,1,i),d=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,x=new on(p.filterShape,"float32"),A=x.values,[b,v,k,I]=x.strides,E=n.data.get(a.dataId).values,[R,P,_,D]=c,C=n.data.get(r.dataId).values,[F,U,X,z]=u,Z=p.padInfo.front,B=p.padInfo.left,ee=p.padInfo.top;for(let Q=0;Q<m;++Q){let ae=Math.max(0,Math.ceil((Z-Q)/d)),J=Math.min(p.outDepth,(p.inDepth+Z-Q)/d),re=Q*b;for(let ie=0;ie<g;++ie){let me=Math.max(0,Math.ceil((ee-ie)/h)),be=Math.min(p.outHeight,(p.inHeight+ee-ie)/h),Ee=ie*v+re;for(let Re=0;Re<y;++Re){let ze=Math.max(0,Math.ceil((B-Re)/f)),Be=Math.min(p.outWidth,(p.inWidth+B-Re)/f),nt=Re*k+Ee;for(let it=0;it<p.inChannels;++it){let lt=it*I+nt;for(let ft=0;ft<p.outChannels;++ft){let $e=0;for(let wt=0;wt<p.batchSize;++wt){let yt=wt*F,Dn=wt*R;for(let qt=ae;qt<J;++qt){let nn=(Q+qt*d-Z)*U+yt,Pn=qt*P+Dn;for(let us=me;us<be;++us){let kn=(ie+us*h-ee)*X+nn,Cs=us*_+Pn;for(let Fn=ze;Fn<Be;++Fn){let Hr=(Re+Fn*f-B)*z+kn,Kl=Fn*D+Cs;$e+=C[Hr+it]*E[Kl+ft]}}}}A[lt+ft]=$e}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var xK={kernelName:nm,backendName:"cpu",kernelFunc:AK};function bK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Ce([r],"conv3dBackpropInputV2");let u=w.computeStrides(r.shape),c=w.computeStrides(a.shape),p=T.computeConv3DInfo(l,a.shape,i,1,o),d=new on(p.inShape,"float32"),h=d.values,[f,m,g,y]=d.strides,x=n.data.get(r.dataId).values,[A,b,v,k]=u,I=n.data.get(a.dataId).values,[E,R,P,_]=c,{batchSize:D,filterDepth:C,filterHeight:F,filterWidth:U,inChannels:X,inDepth:z,inHeight:Z,inWidth:B,outChannels:ee,outDepth:Q,outHeight:ae,outWidth:J,strideDepth:re,strideHeight:ie,strideWidth:me}=p,be=C-1-p.padInfo.front,Ee=F-1-p.padInfo.top,Re=U-1-p.padInfo.left;for(let ze=0;ze<D;++ze)for(let Be=0;Be<X;++Be)for(let nt=0;nt<z;++nt){let it=nt-be,lt=Math.max(0,Math.ceil(it/re)),ft=Math.min(Q,(C+it)/re);for(let $e=0;$e<Z;++$e){let wt=$e-Ee,yt=Math.max(0,Math.ceil(wt/ie)),Dn=Math.min(ae,(F+wt)/ie);for(let qt=0;qt<B;++qt){let ls=qt-Re,nn=Math.max(0,Math.ceil(ls/me)),Pn=Math.min(J,(U+ls)/me),us=0;for(let cs=lt;cs<ft;++cs){let kn=cs*re-it;for(let Cs=yt;Cs<Dn;++Cs){let Fn=Cs*ie-wt;for(let Gr=nn;Gr<Pn;++Gr){let Hr=Gr*me-ls,Kl=A*ze+b*cs+v*Cs+k*Gr,ba=E*(C-1-kn)+R*(F-1-Fn)+P*(U-1-Hr)+_*Be;for(let jr=0;jr<ee;++jr){let nd=x[Kl+jr],Zl=I[ba+jr];us+=nd*Zl}}}}h[f*ze+m*nt+g*$e+y*qt+Be]=us}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var vK={kernelName:sm,backendName:"cpu",kernelFunc:bK},wK=gt(oo,e=>Math.cos(e)),kK={kernelName:oo,backendName:"cpu",kernelFunc:wK},SK=gt(io,e=>Math.cosh(e)),IK={kernelName:io,backendName:"cpu",kernelFunc:SK};function CK(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,[c,p,d,h]=r.shape,f=a.shape[0],[m,g]=i,y=We([f,m,g,h],"float32"),x=n.data.get(a.dataId).values,A=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,v=w.computeStrides(r.shape),k=w.computeStrides(y.shape);for(let I=0;I<f;I++){let E=I*4,R=x[E],P=x[E+1],_=x[E+2],D=x[E+3],C=A[I];if(C>=c)continue;let F=m>1?(_-R)*(p-1)/(m-1):0,U=g>1?(D-P)*(d-1)/(g-1):0;for(let X=0;X<m;X++){let z=m>1?R*(p-1)+X*F:.5*(R+_)*(p-1);if(z<0||z>p-1){for(let Z=0;Z<g;Z++)for(let B=0;B<h;B++){let ee=B+Z*k[2]+X*k[1]+I*k[0];y.values[ee]=u}continue}if(l==="bilinear"){let Z=Math.floor(z),B=Math.ceil(z),ee=z-Z;for(let Q=0;Q<g;Q++){let ae=g>1?P*(d-1)+Q*U:.5*(P+D)*(d-1);if(ae<0||ae>d-1){for(let me=0;me<h;me++){let be=me+Q*k[2]+X*k[1]+I*k[0];y.values[be]=u}continue}let J=Math.floor(ae),re=Math.ceil(ae),ie=ae-J;for(let me=0;me<h;me++){let be=me+J*v[2]+Z*v[1]+C*v[0],Ee=b[be];be=me+re*v[2]+Z*v[1]+C*v[0];let Re=b[be];be=me+J*v[2]+B*v[1]+C*v[0];let ze=b[be];be=me+re*v[2]+B*v[1]+C*v[0];let Be=b[be],nt=Ee+(Re-Ee)*ie,it=ze+(Be-ze)*ie;be=me+Q*k[2]+X*k[1]+I*k[0],y.values[be]=nt+(it-nt)*ee}}}else for(let Z=0;Z<g;++Z){let B=g>1?P*(d-1)+Z*U:.5*(P+D)*(d-1);if(B<0||B>d-1){for(let ae=0;ae<h;ae++){let J=ae+Z*k[2]+X*k[1]+I*k[0];y.values[J]=u}continue}let ee=Math.round(B),Q=Math.round(z);for(let ae=0;ae<h;ae++){let J=ae+ee*v[2]+Q*v[1]+C*v[0],re=ae+Z*k[2]+X*k[1]+I*k[0];y.values[re]=b[J]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var TK={kernelName:Ki,backendName:"cpu",kernelFunc:CK};function NK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Ce(r,"cumprod");let l=T.getAxesPermutation([a],r.shape.length),u=r;l!=null&&(u=as({inputs:{x:r},backend:n,attrs:{perm:l}}));let c=T.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=Tn(u.dtype,"int32"),d=w.makeOnesTypedArray(w.sizeFromShape(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)d[A]=o?1:h[A];else{let b=m(y,x-1);d[A]=o?h[b]*d[b]:h[A]*d[b]}}let g=n.makeTensorInfo(u.shape,p,d);if(l!=null){let y=T.getUndoAxesPermutation(l),x=as({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}var EK={kernelName:Xi,backendName:"cpu",kernelFunc:NK};function RK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Ce(r,"cumsum");let l=T.getAxesPermutation([a],r.shape.length),u=r;l!=null&&(u=as({inputs:{x:r},backend:n,attrs:{perm:l}}));let c=T.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=Tn(u.dtype,"int32"),d=w.makeZerosTypedArray(w.sizeFromShape(u.shape),p),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)d[A]=o?0:h[A];else{let b=m(y,x-1);d[A]=o?h[b]+d[b]:h[A]+d[b]}}let g=n.makeTensorInfo(u.shape,p,d);if(l!=null){let y=T.getUndoAxesPermutation(l),x=as({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}var _K={kernelName:lo,backendName:"cpu",kernelFunc:RK};function $K(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=Yx(l,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(a),c=rS(l,u,o,i);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var DK={kernelName:rm,backendName:"cpu",kernelFunc:$K};function PK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;w.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],p=l*a,d=u*a,h=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*p*d*h),g=0;for(let y=0;y<i;++y)for(let x=0;x<p;++x){let A=Math.floor(x/a),b=x%a;for(let v=0;v<d;++v){let k=Math.floor(v/a),I=v%a,E=(b*a+I)*h;for(let R=0;R<h;++R){let _=R+E+c*(k+u*(A+l*y));m[g++]=f[_]}}}return n.makeTensorInfo([i,p,d,h],r.dtype,m)}var FK={kernelName:Zi,backendName:"cpu",kernelFunc:PK};function KS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s;Ce([r,a],"depthwiseConv2DNative");let c=w.computeStrides(r.shape),p=w.computeStrides(a.shape),d=l;d==null&&(d=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);let h=T.computeConv2DInfo(r.shape,a.shape,o,d,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=h,A=x.left,b=x.top,v=h.outChannels/h.inChannels,k=new on(h.outShape,r.dtype),I=n.data.get(r.dataId).values,E=n.data.get(a.dataId).values,R=k.values;for(let P=0;P<h.batchSize;++P){let _=P*c[0],D=P*k.strides[0];for(let C=0;C<h.outHeight;++C){let F=D+C*k.strides[1],U=C*h.strideHeight-b;for(let X=0;X<f;++X){let z=U+X*g;if(z<0||z>=h.inHeight)continue;let Z=X*p[0],B=_+z*c[1];for(let ee=0;ee<h.outWidth;++ee){let Q=F+ee*k.strides[2],ae=ee*h.strideWidth-A;for(let J=0;J<m;++J){let re=ae+J*y;if(re<0||re>=h.inWidth)continue;let ie=Z+J*p[1],me=B+re*h.inChannels,be=Q,Ee=ie;for(let Re=0;Re<h.inChannels;++Re){let ze=I[me+Re];for(let Be=0;Be<v;++Be)R[be+Be]+=ze*E[Ee+Be];be+=v,Ee+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var OK={kernelName:uo,backendName:"cpu",kernelFunc:KS};function MK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s;Ce([r,a],"depthwiseConv2dNativeBackpropFilter");let p=T.computeConv2DInfo(r.shape,c,o,i,l,u,!0),{strideHeight:d,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new on(p.filterShape,"float32"),y=p.padInfo.left,x=p.padInfo.top,A=p.outChannels/p.inChannels,b=n.data.get(r.dataId).values,v=new on(r.shape,r.dtype,b),k=n.data.get(a.dataId).values,I=new on(a.shape,a.dtype,k);for(let E=0;E<f;++E){let R=Math.max(0,Math.ceil((x-E)/d)),P=Math.min(p.outHeight,(p.inHeight+x-E)/d);for(let _=0;_<m;++_){let D=Math.max(0,Math.ceil((y-_)/h)),C=Math.min(p.outWidth,(p.inWidth+y-_)/h);for(let F=0;F<p.outChannels;++F){let U=Math.trunc(F/A),X=F%A,z=0;for(let Z=0;Z<p.batchSize;++Z)for(let B=R;B<P;++B){let ee=E+B*d-x;for(let Q=D;Q<C;++Q){let ae=_+Q*h-y;z+=v.get(Z,ee,ae,U)*I.get(Z,B,Q,F)}}g.set(z,E,_,U,X)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var zK={kernelName:am,backendName:"cpu",kernelFunc:MK};function LK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s;Ce([r,a],"depthwiseConv2DNativeBackpropInput");let p=w.computeStrides(r.shape),d=w.computeStrides(a.shape),h=T.computeConv2DInfo(c,a.shape,o,i,l,u,!0),f=new on(h.inShape,"float32"),m=f.values,[g,y,x]=f.strides,A=n.data.get(r.dataId).values,[b,v,k]=p,I=n.data.get(a.dataId).values,[E,R,P]=d,{batchSize:_,filterHeight:D,filterWidth:C,inChannels:F,inHeight:U,inWidth:X,outChannels:z,outHeight:Z,outWidth:B,strideHeight:ee,strideWidth:Q}=h,ae=D-1-h.padInfo.top,J=C-1-h.padInfo.left,re=z/F;for(let ie=0;ie<_;++ie)for(let me=0;me<F;++me)for(let be=0;be<U;++be){let Ee=be-ae,Re=Math.max(0,Math.ceil(Ee/ee)),ze=Math.min(Z,(D+Ee)/ee);for(let Be=0;Be<X;++Be){let nt=Be-J,it=Math.max(0,Math.ceil(nt/Q)),lt=Math.min(B,(C+nt)/Q),ft=0;for(let $e=Re;$e<ze;++$e){let wt=$e*ee-Ee;for(let yt=it;yt<lt;++yt){let Dn=yt*Q-nt,qt=b*ie+v*$e+k*yt,ls=E*(D-1-wt)+R*(C-1-Dn)+P*me;for(let nn=0;nn<re;++nn){let Pn=me*re+nn,us=A[qt+Pn],cs=I[ls+nn];ft+=us*cs}}}m[g*ie+y*be+x*Be+me]=ft}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var BK={kernelName:om,backendName:"cpu",kernelFunc:LK};function WK(e){let{inputs:t,backend:n}=e,{x:s}=t,r=w.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=We([r,r],s.dtype),i=o.values;for(let u=0;u<a.length;u++)i[u*r+u]=a[u];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var VK={kernelName:im,backendName:"cpu",kernelFunc:WK},UK={kernelName:tp,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,p=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:A,strideHeight:b,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:E,dilationWidth:R,outShape:P}=T.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),_=w.sizeFromShape(P),D=P.length,C=w.getArrayFromDType(s.dtype,_);for(let U=0;U<h;++U)for(let X=0;X<y;++X){let z=X*b-A.top;for(let Z=0;Z<x;++Z){let B=Z*v-A.left;for(let ee=0;ee<g;++ee){let Q=Number.MIN_SAFE_INTEGER;for(let J=0;J<k;++J){let re=z+J*E;if(re>=0&&re<f)for(let ie=0;ie<I;++ie){let me=B+ie*R;if(me>=0&&me<m){let be=w.locToIndex([U,re,me,ee],c,w.computeStrides(s.shape)),Ee=w.locToIndex([J,ie,ee],d,w.computeStrides(r.shape)),Re=u[be]+p[Ee];Re>Q&&(Q=Re)}}}let ae=w.locToIndex([U,X,Z,ee],D,w.computeStrides(P));C[ae]=Q}}}return{dataId:l.write(w.toTypedArray(C,s.dtype),P,s.dtype),shape:P,dtype:s.dtype}}},GK={kernelName:xf,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=w.toNestedArray(s.shape,u.data.get(s.dataId).values),p=w.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);w.assert(a.rank===R.length,()=>`Error in ${xf}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let P=w.toNestedArray(R,u.data.get(a.dataId).values),_=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let C=0;C<d;++C)for(let F=0;F<g;++F){let U=F*A-x.top;for(let X=0;X<y;++X){let z=X*b-x.left;for(let Z=0;Z<m;++Z){let B=Number.MIN_SAFE_INTEGER,ee=0,Q=0;for(let ae=0;ae<v;++ae){let J=U+ae*I;if(J>=0&&J<h)for(let re=0;re<k;++re){let ie=z+re*E;if(ie>=0&&ie<f){let me=c[C][J][ie][Z]+p[ae][re][Z];me>B&&(B=me,ee=ae,Q=re)}}}_[ee][Q][Z]+=P[C][F][X][Z]}}}return{dataId:u.write(w.toTypedArray(_,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},HK={kernelName:Af,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=w.toNestedArray(s.shape,u.data.get(s.dataId).values),p=w.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:E,outShape:R}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);w.assert(a.rank===R.length,()=>`Error in ${Af}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let P=w.toNestedArray(R,u.data.get(a.dataId).values),_=w.makeZerosNestedTypedArray(s.shape,s.dtype);for(let C=0;C<d;++C)for(let F=0;F<g;++F){let U=F*A-x.top;for(let X=0;X<y;++X){let z=X*b-x.left;for(let Z=0;Z<m;++Z){let B=Number.MIN_SAFE_INTEGER,ee=U<0?0:U,Q=z<0?0:z;for(let ae=0;ae<v;++ae){let J=U+ae*I;if(J>=0&&J<h)for(let re=0;re<k;++re){let ie=z+re*E;if(ie>=0&&ie<f){let me=c[C][J][ie][Z]+p[ae][re][Z];me>B&&(B=me,ee=J,Q=ie)}}}_[C][ee][Q][Z]+=P[C][F][X][Z]}}}return{dataId:u.write(w.toTypedArray(_,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function Mp(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ce(r,"sum");let i;r.dtype==="bool"?i=Ka({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=Fr({inputs:{x:r},backend:n});let l=i.shape.length,u=w.parseAxisParam(a,i.shape),c=T.getAxesPermutation(u,l),p=u,d=i;c!=null&&(d=as({inputs:{x:i},backend:n,attrs:{perm:c}}),p=T.getInnerMostAxes(p.length,l)),T.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[h,f]=T.computeOutAndReduceShapes(d.shape,p),m=T.upcastType(d.dtype,"int32"),g=Lf(n,h,m),y=w.sizeFromShape(f),x=n.data.get(g.dataId).values,A=n.data.get(d.dataId).values;for(let b=0;b<x.length;++b){let v=b*y,k=0;for(let I=0;I<y;++I)k+=A[v+I];x[b]=k}if(o){let b=T.expandShapeToKeepDim(g.shape,u),v=g;g=$t({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(i),c!=null&&n.disposeIntermediateTensorInfo(d),g}var jK={kernelName:Bo,backendName:"cpu",kernelFunc:Mp};function qK(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),p=c.length,d=null,h=o.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(h,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=as({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(A.shape,b)||(A=$t({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=b0({inputs:{a:A,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=Mp({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var XK={kernelName:np,backendName:"cpu",kernelFunc:qK};function KK(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Ce([s,r],"eluGrad");let a=new Float32Array(w.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let u=o[l];u>=1?a[l]=i[l]:a[l]=i[l]*(u+1)}return n.makeTensorInfo(r.shape,"float32",a)}var ZK={kernelName:lm,backendName:"cpu",kernelFunc:KK},YK=T.ERF_P,JK=T.ERF_A1,QK=T.ERF_A2,eZ=T.ERF_A3,tZ=T.ERF_A4,nZ=T.ERF_A5,sZ=gt(Xu,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+YK*n);return t*(1-((((nZ*s+tZ)*s+eZ)*s+QK)*s+JK)*s*Math.exp(-n*n))}),rZ={kernelName:Xu,backendName:"cpu",kernelFunc:sZ};function Wf(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),$t({inputs:{x:r},backend:n,attrs:{shape:i}})}var aZ={kernelName:Ji,backendName:"cpu",kernelFunc:Wf},oZ=Qt((e,t)=>e/t),o3=xn(co,oZ),Xg={kernelName:co,backendName:"cpu",kernelFunc:o3};function ZS(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[r,a],c=w.sizeFromShape(u),p=w.getTypedArrayFromDType("float32",c),d=w.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){let y=Li({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=Li({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),A=fs({inputs:{real:y,imag:x},backend:n}),{real:b,imag:v}=iZ(A,t,n),k=T.mergeRealAndImagArrays(b,v);for(let I=0;I<a;I++){let E=T.getComplexWithIndex(k,I);p[g*a+I]=E.real,d[g*a+I]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(A)}let h=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=fs({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function iZ(e,t,n){let s=w.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(lZ(s)){let i=Kg(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(l,"float32",i.real),c=n.makeTensorInfo(l,"float32",i.imag),p=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),d=Fr({inputs:{x:p},backend:n}),h=Xg.kernelFunc({inputs:{a:u,b:p},backend:n}),f=Xg.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=T.mergeRealAndImagArrays(a,o),l=uZ(i,s,t);return T.splitRealAndImagArrays(l)}}function lZ(e){return(e&e-1)===0}function Kg(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=T.mergeRealAndImagArrays(e,t),o=n/2,i=T.complexWithEvenIndex(a),l=i.real,u=i.imag,c=[l.length],p=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),h=fs({inputs:{real:p,imag:d},backend:r}),f=T.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),A=r.makeTensorInfo(y,"float32",g),b=fs({inputs:{real:x,imag:A},backend:r}),v=Kg(l,u,o,s,r),k=v.real,I=v.imag,E=[k.length],R=r.makeTensorInfo(E,"float32",k),P=r.makeTensorInfo(E,"float32",I),_=fs({inputs:{real:R,imag:P},backend:r}),D=Kg(m,g,o,s,r),C=D.real,F=D.imag,U=[C.length],X=r.makeTensorInfo(U,"float32",C),z=r.makeTensorInfo(U,"float32",F),Z=fs({inputs:{real:X,imag:z},backend:r}),B=T.exponents(n,s),ee=[B.real.length],Q=r.makeTensorInfo(ee,"float32",B.real),ae=r.makeTensorInfo(ee,"float32",B.imag),J=fs({inputs:{real:Q,imag:ae},backend:r}),re=b0({inputs:{a:J,b:Z},backend:r}),ie=Op({inputs:{a:_,b:re},backend:r}),me=s3({inputs:{a:_,b:re},backend:r}),be=zi({inputs:{input:ie},backend:r}),Ee=zi({inputs:{input:me},backend:r}),Re=Du({inputs:{input:ie},backend:r}),ze=Du({inputs:{input:me},backend:r}),Be=Pu({inputs:[be,Ee],backend:r,attrs:{axis:0}}),nt=Pu({inputs:[Re,ze],backend:r,attrs:{axis:0}}),it=r.data.get(Be.dataId).values,lt=r.data.get(nt.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(Re),r.disposeIntermediateTensorInfo(Ee),r.disposeIntermediateTensorInfo(ze),r.disposeIntermediateTensorInfo(Be),r.disposeIntermediateTensorInfo(nt),{real:it,imag:lt}}function uZ(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=T.exponent(r*i,t,n),u=T.getComplexWithIndex(e,i);a+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}n&&(a/=t,o/=t),T.assignToTypedArray(s,a,o,r)}return s}function cZ(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=$t({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=ZS(i,!1,n),u=$t({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var dZ={kernelName:um,backendName:"cpu",kernelFunc:cZ};function i3(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||w.inferDtype(r),i=w.getArrayFromDType(o,w.sizeFromShape(s));return hZ(i,r,o),t.makeTensorInfo(s,o,i)}var pZ={kernelName:Ku,backendName:"cpu",kernelFunc:i3};function hZ(e,t,n){e.fill(t)}var fZ={kernelName:el,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[o,i,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<o;d++){let h=d*l*i*u;for(let f=0;f<i;f++){let m=f*(l*u);for(let g=0;g<l;g++){let y=g*u;for(let x=0;x<u;x++){let A=Math.round(l-g-1),b=h+m+y+x,v=c[b];if(A>=0&&A<l){let k=A*u,I=h+m+k+x;v=c[I]}a[b]=v}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},mZ=Qt((e,t)=>Math.floor(e/t)),gZ=xn(mo,mZ,null,"int32"),yZ={kernelName:mo,backendName:"cpu",kernelFunc:gZ};function AZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=XS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(o){let g=m;m=Op({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=r3(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var xZ={kernelName:Ma,backendName:"cpu",kernelFunc:AZ};function bZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=KS({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d}});if(o){let g=m;m=Op({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=r3(n,m,h,i,f),n.disposeIntermediateTensorInfo(g)}return m}var vZ={kernelName:za,backendName:"cpu",kernelFunc:bZ};function wZ(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=w.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,u,c,p]=T.prepareAndValidate(s,r);if(u===0)return n.makeTensorInfo(l,s.dtype,[]);let d=n.data.get(r.dataId).values,h=n.bufferSync(s),f=pS(d,h,s.dtype,u,i,c,p,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var kZ={kernelName:nl,backendName:"cpu",kernelFunc:wZ};function SZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Ce([r,a],"gatherV2");let l=w.parseAxisParam(o,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let b=0;b<u.length;++b){let v=u[b];w.assert(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let p=i;i==null&&(p=0);let d=w.sizeFromShape(a.shape),h=T.segment_util.collectGatherOpShapeInfo(r,a,l,p),f=$t({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=$t({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),g=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],y=n.bufferSync(m),x=n.bufferSync(f),A=hS(x,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,A.dtype,A.values)}var IZ={kernelName:tl,backendName:"cpu",kernelFunc:SZ};function CZ(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=$t({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=ZS(i,!0,n),u=$t({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var TZ={kernelName:cm,backendName:"cpu",kernelFunc:CZ},NZ=gt(Zu,e=>Number.isFinite(e)?1:0,"bool"),EZ={kernelName:Zu,backendName:"cpu",kernelFunc:NZ},RZ=gt(Yu,e=>Math.abs(e)===1/0?1:0,"bool"),_Z={kernelName:Yu,backendName:"cpu",kernelFunc:RZ},$Z=gt(Ju,e=>Number.isNaN(e)?1:0,"bool"),DZ={kernelName:Ju,backendName:"cpu",kernelFunc:$Z};function PZ(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=AS(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var FZ={kernelName:dm,backendName:"cpu",kernelFunc:PZ},OZ=gt(Qu,e=>Math.log1p(e)),MZ={kernelName:Qu,backendName:"cpu",kernelFunc:OZ},zZ=Qt((e,t)=>e&&t),LZ=xn(ol,zZ,null,"bool"),BZ={kernelName:ol,backendName:"cpu",kernelFunc:LZ},WZ=gt(ec,e=>e?0:1,"bool"),VZ={kernelName:ec,backendName:"cpu",kernelFunc:WZ},UZ=Qt((e,t)=>e||t),GZ=xn(rp,UZ,null,"bool"),HZ={kernelName:rp,backendName:"cpu",kernelFunc:GZ};function jZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Ce(r,"LRN");let u=r.shape[3],c=u-1,p=n.data.get(r.dataId).values,d=w.sizeFromShape(r.shape),h=new Float32Array(d);function f(m){let g=m%u,y=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,c),A=0;for(;y<=x;y++){let b=p[y];A+=b*b}return A}for(let m=0;m<d;m++){let g=f(m),y=p[m]*Math.pow(o+i*g,-l);h[m]=y}return n.makeTensorInfo(r.shape,r.dtype,h)}var qZ={kernelName:ap,backendName:"cpu",kernelFunc:jZ};function XZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s;Ce(o,"LRNGrad");let p=w.sizeFromShape(o.shape),d=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(p),y=p;for(let x=0;x<y;x++){let A=x%d,b=x-A+Math.max(0,A-i),v=x-A+Math.min(d,A+i+1),k=0;for(let I=b;I<v;I++)k+=Math.pow(f[I],2);k=u*k+l;for(let I=b;I<v;I++){let E=-2*u*c*f[I]*m[x]/k;x===I&&(E+=Math.pow(k,-c)),E*=h[x],g[I]+=E}}return n.makeTensorInfo(o.shape,r.dtype,g)}var KZ={kernelName:pm,backendName:"cpu",kernelFunc:XZ};function YS(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,u=l.length,c=w.parseAxisParam(a,l),p=c,d=T.getAxesPermutation(p,u),h=i.data.get(r.dataId).values;if(d!=null){let b=new Array(u);for(let v=0;v<b.length;v++)b[v]=l[d[v]];h=e3(h,l,r.dtype,d,b),p=T.getInnerMostAxes(p.length,u),l=b}Ce(r,"max"),T.assertAxesAreInnerMostDims("max",p,u);let[f,m]=T.computeOutAndReduceShapes(l,p),g=w.sizeFromShape(m),y=bS(h,g,f,r.dtype),x=i.write(y,f,r.dtype),A=f;return o&&(A=T.expandShapeToKeepDim(f,c)),{dataId:x,shape:A,dtype:r.dtype}}var ZZ={kernelName:vo,backendName:"cpu",kernelFunc:YS};function YZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ce(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;w.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))p=Fr({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=a3(d,r.shape,r.dtype,h,c,"max");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var JZ={kernelName:ko,backendName:"cpu",kernelFunc:YZ};function QZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;Ce(r,"maxPool3d");let c=T.computePool3DInfo(r.shape,a,o,1,i,l,u),p=n.data.get(r.dataId).values,d=qS(p,r.shape,r.dtype,w.computeStrides(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var eY={kernelName:op,backendName:"cpu",kernelFunc:QZ};function tY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;Ce([r,a],"maxPool3DGrad");let c=T.computePool3DInfo(a.shape,o,i,1,l,u),p=n.bufferSync(a),d=VX(p,c),h=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,A=c.effectiveFilterDepth,b=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=A-1-c.padInfo.front,I=v-1-c.padInfo.left,E=b-1-c.padInfo.top,R=We(a.shape,"float32"),P=n.bufferSync(r);for(let _=0;_<c.batchSize;++_)for(let D=0;D<c.inChannels;++D)for(let C=0;C<c.inDepth;++C)for(let F=0;F<c.inHeight;++F)for(let U=0;U<c.inWidth;++U){let X=C-k,z=F-E,Z=U-I,B=0;for(let ee=0;ee<A;ee+=g){let Q=(X+ee)/h;if(!(Q<0||Q>=c.outDepth||Math.floor(Q)!==Q))for(let ae=0;ae<b;ae+=y){let J=(z+ae)/f;if(!(J<0||J>=c.outHeight||Math.floor(J)!==J))for(let re=0;re<v;re+=x){let ie=(Z+re)/m;if(ie<0||ie>=c.outWidth||Math.floor(ie)!==ie)continue;let me=A*b*v-1-d.get(_,Q,J,ie,D),be=ee*b*v+ae*v+re,Ee=me===be?1:0;if(Ee===0)continue;B+=P.get(_,Q,J,ie,D)*Ee}}}R.set(B,_,C,F,U,D)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var nY={kernelName:fm,backendName:"cpu",kernelFunc:tY};function sY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Ce([a,o],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=s,d=T.computePool2DInfo(i.shape,l,u,1,c,p),h=n.data.get(i.dataId).values,f=We(d.outShape,i.dtype,jS(h,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,A=d.effectiveFilterHeight,b=d.effectiveFilterWidth,v=b-1-d.padInfo.left,k=A-1-d.padInfo.top,I=We(i.shape,"float32"),E=n.data.get(r.dataId).values,R=We(r.shape,"float32",E);for(let P=0;P<d.batchSize;++P)for(let _=0;_<d.inChannels;++_)for(let D=0;D<d.inHeight;++D)for(let C=0;C<d.inWidth;++C){let F=D-k,U=C-v,X=0;for(let z=0;z<A;z+=y){let Z=(F+z)/m;if(!(Z<0||Z>=d.outHeight||Math.floor(Z)!==Z))for(let B=0;B<b;B+=x){let ee=(U+B)/g;if(ee<0||ee>=d.outWidth||Math.floor(ee)!==ee)continue;let Q=A*b-1-f.get(P,Z,ee,_),ae=z*b+B,J=Q===ae?1:0;if(J===0)continue;X+=R.get(P,Z,ee,_)*J}}I.set(X,P,D,C,_)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var rY={kernelName:hm,backendName:"cpu",kernelFunc:sY};function aY(e,t,n,s,r){let a=w.computeStrides(t),o=a3(e,t,n,a,r,"max"),i=jS(e,t,n,r,!0,s);return[o.values,i.values]}var oY={kernelName:mm,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Ce(s,"MaxPoolWithArgmax");let u=l.data.get(s.dataId).values,c=T.computePool2DInfo(s.shape,r,a,[1,1],o),[p,d]=aY(u,s.shape,s.dtype,i,c),h=l.write(p,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:h,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function iY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=w.parseAxisParam(a,r.shape),u=T.computeOutAndReduceShapes(r.shape,i)[1],c=w.sizeFromShape(u),p=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));p.push(d);let h=Ka({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});p.push(h);let f=o3({inputs:{a:h,b:d},backend:n});p.push(f);let m=Mp({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var lY={kernelName:So,backendName:"cpu",kernelFunc:iY};function uY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ce(r,"min");let i=w.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=as({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let v=m[x+b];(Number.isNaN(v)||v<A)&&(A=v)}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(p,i),x=$t({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var cY={kernelName:Io,backendName:"cpu",kernelFunc:uY};function dY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Ce(r,"mirrorPad");let i=a.map((A,b)=>A[0]+r.shape[b]+A[1]),l=a.map(A=>A[0]),u=a.map((A,b)=>A[0]+r.shape[b]),c=o==="reflect"?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=w.computeStrides(r.shape),f=w.sizeFromShape(i),m=i.length,g=w.computeStrides(i),y=w.getTypedArrayFromDType(r.dtype,f);for(let A=0;A<f;A++){let b=w.indexToLoc(A,m,g);for(let k=0;k<m;k++)b[k]<l[k]?b[k]=l[k]*2-b[k]-c:b[k]>=u[k]&&(b[k]=(u[k]-1)*2-b[k]+c);b=b.map((k,I)=>k-l[I]);let v=w.locToIndex(b,d,h);y[A]=p[v]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}var pY={kernelName:To,backendName:"cpu",kernelFunc:dY},hY=Qt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),fY=xn(tc,hY),mY={kernelName:tc,backendName:"cpu",kernelFunc:fY},gY=Ui(Xf());function JS(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=w.parseAxisParam([i],r.shape),u=YS({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=T.expandShapeToKeepDim(u.shape,l),p=$t({inputs:{x:u},backend:n,attrs:{shape:c}}),d=s3({inputs:{a:r,b:p},backend:n}),h=uS({inputs:{x:d},backend:n}),f=Mp({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=$t({inputs:{x:f},backend:n,attrs:{shape:c}}),g=o3({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var yY={kernelName:Wo,backendName:"cpu",kernelFunc:JS};function AY(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Ce(r,"multinomial");let l=i?r:JS({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=n.data.get(l.dataId).values,d=[u,a],h=w.makeZerosTypedArray(w.sizeFromShape(d),"int32");for(let f=0;f<u;++f){let m=f*c,g=new Float32Array(c-1);g[0]=p[m];for(let A=1;A<g.length;++A)g[A]=g[A-1]+p[m+A];let y=gY.alea(o.toString()),x=f*a;for(let A=0;A<a;++A){let b=y();h[x+A]=g.length;for(let v=0;v<g.length;v++)if(b<g[v]){h[x+A]=v;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",h)}var xY={kernelName:gm,backendName:"cpu",kernelFunc:AY},bY=Zs.nonMaxSuppressionV3Impl;function vY(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Ce(r,"NonMaxSuppression");let u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:p}=bY(u,c,o,i,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var wY={kernelName:ul,backendName:"cpu",kernelFunc:vY},kY=Zs.nonMaxSuppressionV4Impl;function SY(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s;Ce(r,"NonMaxSuppressionPadded");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:h}=kY(c,p,o,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var IY={kernelName:nc,backendName:"cpu",kernelFunc:SY},CY=Zs.nonMaxSuppressionV5Impl;function TY(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s;Ce(r,"NonMaxSuppressionWithScore");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,d=o,h=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=CY(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var NY={kernelName:cl,backendName:"cpu",kernelFunc:TY};function EY(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s;Ce(r,"oneHot");let l=w.sizeFromShape(r.shape),u=new Float32Array(l*a);u.fill(i);let c=n.data.get(r.dataId).values;for(let p=0;p<l;++p)c[p]>=0&&c[p]<a&&(u[p*a+c[p]]=o);return n.makeTensorInfo([...r.shape,a],"int32",u)}var RY={kernelName:pl,backendName:"cpu",kernelFunc:EY};function Vf(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=zi({inputs:{input:s},backend:n}),a=Vf({inputs:{x:r},backend:n}),o=Du({inputs:{input:s},backend:n}),i=Vf({inputs:{x:o},backend:n}),l=fs({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return i3({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var _Y={kernelName:Nl,backendName:"cpu",kernelFunc:Vf};function QS(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=zi({inputs:{input:s},backend:n}),a=QS({inputs:{x:r},backend:n}),o=Du({inputs:{input:s},backend:n}),i=Vf({inputs:{x:o},backend:n}),l=fs({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return i3({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var $Y={kernelName:dl,backendName:"cpu",kernelFunc:QS};function eI(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Wf({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=Wf({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=Pu({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var DY={kernelName:hl,backendName:"cpu",kernelFunc:eI};function PY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Ce(r,"pad");let i=a.map((x,A)=>x[0]+r.shape[A]+x[1]),l=a.map(x=>x[0]),u=n.data.get(r.dataId).values,c=w.sizeFromShape(r.shape),p=r.shape.length,d=w.computeStrides(r.shape),h=w.sizeFromShape(i),f=i.length,m=w.computeStrides(i),g=w.getTypedArrayFromDType(r.dtype,h);o!==0&&g.fill(o);for(let x=0;x<c;x++){let b=w.indexToLoc(x,p,d).map((k,I)=>k+l[I]),v=w.locToIndex(b,f,m);g[v]=u[x]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var tI={kernelName:Eo,backendName:"cpu",kernelFunc:PY},FY=Qt((e,t)=>Math.pow(e,t)),OY=xn(Ro,FY),MY={kernelName:Ro,backendName:"cpu",kernelFunc:OY};function zY(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=t3(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var LY={kernelName:sc,backendName:"cpu",kernelFunc:zY},BY=gt(rc,e=>1/e),WY={kernelName:rc,backendName:"cpu",kernelFunc:BY};function VY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ce(r,"resizeBilinear");let l=w.computeStrides(r.shape),[u,c]=i,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(w.sizeFromShape([p,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?h-1:h],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],A=0,b=y[0]/x[0],v=y[1]/x[1];for(let k=0;k<p;k++)for(let I=0;I<u;I++){let E;o?E=b*(I+.5)-.5:E=b*I;let R=Math.max(0,Math.floor(E)),P=E-R,_=Math.min(d-1,Math.ceil(E)),D=k*l[0]+R*l[1],C=k*l[0]+_*l[1];for(let F=0;F<c;F++){let U;o?U=v*(F+.5)-.5:U=v*F;let X=Math.max(0,Math.floor(U)),z=U-X,Z=Math.min(h-1,Math.ceil(U)),B=D+X*l[2],ee=C+X*l[2],Q=D+Z*l[2],ae=C+Z*l[2];for(let J=0;J<f;J++){let re=m[B+J],ie=m[ee+J],me=m[Q+J],be=m[ae+J],Ee=re+(me-re)*z,Re=ie+(be-ie)*z,ze=Ee+(Re-Ee)*P;g[A++]=ze}}}return n.makeTensorInfo([p,u,c,f],"float32",g)}var UY={kernelName:Po,backendName:"cpu",kernelFunc:VY};function GY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ce([a,r],"resizeBilinearGrad");let i=w.computeStrides(r.shape),[l,u,c,p]=r.shape,[,d,h]=a.shape,f=new Float32Array(l*u*c*p),m=[o&&d>1?u-1:u,o&&h>1?c-1:c],g=[o&&d>1?d-1:d,o&&h>1?h-1:h],y=m[0]/g[0],x=m[1]/g[1],A=n.data.get(a.dataId).values,b=0;for(let v=0;v<l;v++){let k=v*i[0];for(let I=0;I<d;I++){let E=I*y,R=Math.floor(E),P=Math.min(Math.ceil(E),u-1),_=k+R*i[1],D=k+P*i[1],C=E-R,F=1-C;for(let U=0;U<h;U++){let X=U*x,z=Math.floor(X),Z=Math.min(Math.ceil(X),c-1),B=X-z,ee=1-B,Q=_+z*i[2],ae=_+Z*i[2],J=D+z*i[2],re=D+Z*i[2],ie=F*ee,me=F*B,be=C*ee,Ee=C*B;for(let Re=0;Re<p;Re++){let ze=A[b++];f[Q+Re]+=ze*ie,f[ae+Re]+=ze*me,f[J+Re]+=ze*be,f[re+Re]+=ze*Ee}}}}return n.makeTensorInfo([l,c,u,p],"float32",f)}var HY={kernelName:Am,backendName:"cpu",kernelFunc:GY};function jY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ce(r,"resizeNearestNeighbor");let l=w.computeStrides(r.shape),[u,c]=i,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(p*u*c*f),y=[a&&u>1?d-1:d,a&&c>1?h-1:h],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],A=y[0]/x[0],b=y[1]/x[1],v=0;for(let k=0;k<p;k++){let I=k*l[0];for(let E=0;E<u;E++){let R=o?A*(E+.5):A*E,P=Math.min(d-1,a?Math.round(R):Math.floor(R));o&&(P=Math.max(0,P));let _=I+P*l[1];for(let D=0;D<c;D++){let C=o?b*(D+.5):b*D,F=Math.min(h-1,a?Math.round(C):Math.floor(C));o&&(F=Math.max(0,F));let U=_+F*l[2];for(let X=0;X<f;X++){let z=m[U+X];g[v++]=z}}}}return n.makeTensorInfo([p,u,c,f],r.dtype,g)}var qY={kernelName:ac,backendName:"cpu",kernelFunc:jY};function XY(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ce([a,r],"resizeNearestNeighborGrad");let i=w.computeStrides(r.shape),l=w.computeStrides(a.shape),[u,c,p,d]=r.shape,[,h,f]=a.shape,m=new Float32Array(u*c*p*d),g=n.data.get(a.dataId).values,y=[o&&h>1?c-1:c,o&&f>1?p-1:p],x=[o&&h>1?h-1:h,o&&f>1?f-1:f],A=y[0]/x[0],b=y[1]/x[1],v=1/A,k=1/b,I=Math.ceil(v)*2+2,E=Math.ceil(k)*2+2;for(let R=0;R<u;R++){let P=R*i[0];for(let _=0;_<c;_++){let D=P+_*i[1],C=Math.floor(_*v),F=Math.floor(C-I/2);for(let U=0;U<p;U++){let X=D+U*i[2],z=Math.floor(U*k),Z=Math.floor(z-E/2);for(let B=0;B<d;B++){let ee=0;for(let Q=0;Q<I;Q++){let ae=Q+F;if(ae<0||ae>=h)continue;let J=P+ae*l[1],re=ae*A,ie=Math.min(c-1,o?Math.round(re):Math.floor(re));if(_===ie)for(let me=0;me<E;me++){let be=me+Z;if(be<0||be>=f)continue;let Ee=J+be*l[2],Re=be*b,ze=Math.min(p-1,o?Math.round(Re):Math.floor(Re));U===ze&&(ee+=g[Ee+B])}}m[X+B]=ee}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var KY={kernelName:ym,backendName:"cpu",kernelFunc:XY};function ZY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Ce(r,"reverse");let o=r.shape.length,i=w.parseAxisParam(a,r.shape);if(o===0)return Fr({inputs:{x:r},backend:n});let l=new on(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),d=p.slice();i.forEach(h=>d[h]=r.shape[h]-1-d[h]),l.set(u.get(...d),...p)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var YY={kernelName:ml,backendName:"cpu",kernelFunc:ZY},JY={kernelName:El,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[u,c,p,d]=s.shape,[h,f]=T.getImageCenter(o,c,p),m=255,g=Math.sin(r),y=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<u;b++){let v=b*p*c*d;for(let k=0;k<c;k++){let I=k*(p*d);for(let E=0;E<p;E++){let R=E*d;for(let P=0;P<d;P++){let _=[u,k,E,P],D=_[2],C=_[1],F=(D-h)*y-(C-f)*g,U=(D-h)*g+(C-f)*y;F=Math.round(F+h),U=Math.round(U+f);let X=a;if(typeof a!="number"&&(P===3?X=m:X=a[P]),F>=0&&F<p&&U>=0&&U<c){let Z=U*(p*d),B=F*d,ee=v+Z+B+P;X=x[ee]}let z=v+I+R+P;l[z]=X}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},QY=gt(gl,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),eJ={kernelName:gl,backendName:"cpu",kernelFunc:QY};function nI(e,t,n,s,r,a,o,i,l,u){let c=[s/r,r],p=e.values,d=t.values;if(s===0)return We(n,t.dtype);let h=We(c,t.dtype);h.values.fill(l);for(let f=0;f<a;f++){let m=[],g=0;for(let y=0;y<o;y++){let x=p[f*o+y];m.push(x),g+=x*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<r;y++)u?h.values[g*r+y]+=d[f*r+y]:h.values[g*r+y]=t.rank===0?d[0]:d[f*r+y]}return h}function tJ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(a,r,o),d=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=nI(h,f,o,p,u,l,i,c,0,d);return n.makeTensorInfo(o,m.dtype,m.values)}var nJ={kernelName:yl,backendName:"cpu",kernelFunc:tJ};function sJ(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Ce([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=Tn(r.dtype,a.dtype),p=w.makeZerosTypedArray(w.sizeFromShape(r.shape),c),d=0,h=o===0||o>1||r.shape.length===1?1:w.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?p[d++]=l[f]:p[d++]=u[f];return n.makeTensorInfo(r.shape,c,p)}var rJ={kernelName:Al,backendName:"cpu",kernelFunc:sJ},aJ=T.SELU_SCALEALPHA,oJ=T.SELU_SCALE,iJ=gt(oc,e=>e>=0?oJ*e:aJ*(Math.exp(e)-1)),lJ={kernelName:oc,backendName:"cpu",kernelFunc:iJ},uJ=gt(ic,e=>e<0?-1:e>0?1:0),cJ={kernelName:ic,backendName:"cpu",kernelFunc:uJ},dJ=gt(Mo,e=>Math.sin(e)),pJ={kernelName:Mo,backendName:"cpu",kernelFunc:dJ},hJ=gt(bl,e=>Math.sinh(e)),fJ={kernelName:bl,backendName:"cpu",kernelFunc:hJ},mJ=11920928955078125e-23,_v=Math.log(mJ)+2,gJ=gt(lc,e=>{let t=e>-_v,n=e<_v,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),yJ={kernelName:lc,backendName:"cpu",kernelFunc:gJ};function AJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Ce([r],"spaceToBatchND");let i=w.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let u=tI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(u.shape,a,i,!1),p=T.getPermuted(c.length,a.length,!1),d=T.getReshapedPermuted(u.shape,a,i,!1),m=$t({inputs:{x:u},backend:n,attrs:{shape:c}}),x=as({inputs:{x:m},backend:n,attrs:{perm:p}}),v=$t({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),v}var xJ={kernelName:vl,backendName:"cpu",kernelFunc:AJ};function bJ(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[p,d,h,f,m]=NS(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var vJ={kernelName:lp,backendName:"cpu",kernelFunc:bJ};function wJ(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,p]=ES(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var kJ={kernelName:uc,backendName:"cpu",kernelFunc:wJ};function SJ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=n3(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}var IJ={kernelName:up,backendName:"cpu",kernelFunc:SJ};function CJ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=n3(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}var TJ={kernelName:cp,backendName:"cpu",kernelFunc:CJ};function NJ(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=T.calculateShapes(a,r,i),h=!1,f=n.bufferSync(r),m=n.bufferSync(a),g=n.data.get(o.dataId).values[0],y=nI(f,m,i,d,c,u,l,p,g,h);return n.makeTensorInfo(i,y.dtype,y.values)}var EJ={kernelName:dp,backendName:"cpu",kernelFunc:NJ};function RJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=w.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(p=>{let d=[...c];d[i]=p;let h=Li({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});return u[i]+=p,h})}var _J={kernelName:wl,backendName:"cpu",kernelFunc:RJ},$J={kernelName:cc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Ce(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},DJ=gt(jo,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),PJ={kernelName:jo,backendName:"cpu",kernelFunc:DJ};function FJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s;Ce(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Mt.sliceInfo(r.shape,a,o,i,l,u,c,p,d),v;if(m)v=$t({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Mt.computeOutShape(x,A,b),I=Li({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});v=$t({inputs:{x:I},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(I)}else{let k=n.bufferSync(r),I=_S(h,k,b,x);v=n.makeTensorInfo(f,I.dtype,I.values)}return v}var OJ={kernelName:kl,backendName:"cpu",kernelFunc:FJ};function MJ(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:p}=t,d=n.data.get(c.dataId).values,h=n.data.get(p.dataId).values,[f,m]=$S(d,h,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var zJ={kernelName:pp,backendName:"cpu",kernelFunc:MJ};function LJ(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[u,c,p]=DS(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var BJ={kernelName:xm,backendName:"cpu",kernelFunc:LJ};function WJ(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=PS(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var VJ={kernelName:bm,backendName:"cpu",kernelFunc:WJ},UJ=gt(Sl,e=>Math.tan(e)),GJ={kernelName:Sl,backendName:"cpu",kernelFunc:UJ},HJ=gt(Go,e=>Math.tanh(e)),jJ={kernelName:Go,backendName:"cpu",kernelFunc:HJ};function qJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Ce(r,"tile");let o=OS(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var XJ={kernelName:sa,backendName:"cpu",kernelFunc:qJ};function KJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Ce(r,"topk");let i=n.data.get(r.dataId).values,[l,u]=zS(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var ZJ={kernelName:Il,backendName:"cpu",kernelFunc:KJ};function YJ(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=n,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=w.computeStrides(r.shape),x=y[0],A=y[1],b=y[2],v=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(g));v.fill(l);let k=s.data.get(r.dataId).values,I=s.data.get(a.dataId).values;for(let R=0;R<c;++R){let P=a.shape[0]===1?I:I.subarray(R*8,R*8+8);for(let _=0;_<f;++_)for(let D=0;D<m;++D)for(let C=0;C<h;++C){let F,U=P[6]*D+P[7]*_+1;if(U===0)continue;let X=(P[0]*D+P[1]*_+P[2])/U,z=(P[3]*D+P[4]*_+P[5])/U,Z=$v(X,d,i),B=$v(z,p,i);switch(o){case"nearest":F=sQ(k,p,d,x,A,b,R,B,Z,C,l);break;case"bilinear":F=rQ(k,p,d,x,A,b,R,B,Z,C,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let ee=R*x+_*A+D*b+C;v[ee]=F}return s.makeTensorInfo(g,r.dtype,v)}return{dataId:s.write(v,g,r.dtype),shape:r.shape,dtype:r.dtype}}var JJ={kernelName:Cl,backendName:"cpu",kernelFunc:YJ};function $v(e,t,n){switch(n){case"reflect":return QJ(e,t);case"wrap":return eQ(e,t);case"nearest":return nQ(e,t);case"constant":default:return tQ(e,t)}}function QJ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return w.clamp(0,n,t-1)}function eQ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return w.clamp(0,n,t-1)}function tQ(e,t){return e}function nQ(e,t){return w.clamp(0,e,t-1)}function Td(e,t,n,s,r,a,o,i,l,u,c){let p=o*s+i*r+l*a+u;return 0<=i&&i<t&&0<=l&&l<n?e[p]:c}function sQ(e,t,n,s,r,a,o,i,l,u,c){let p=Math.round(i),d=Math.round(l);return Td(e,t,n,s,r,a,o,p,d,u,c)}function rQ(e,t,n,s,r,a,o,i,l,u,c){let p=Math.floor(i),d=Math.floor(l),h=p+1,f=d+1,m=(f-l)*Td(e,t,n,s,r,a,o,p,d,u,c)+(l-d)*Td(e,t,n,s,r,a,o,p,f,u,c),g=(f-l)*Td(e,t,n,s,r,a,o,h,d,u,c)+(l-d)*Td(e,t,n,s,r,a,o,h,f,u,c);return(h-i)*m+(i-p)*g}function aQ(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Ce(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:u}=LS(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}var oQ={kernelName:vm,backendName:"cpu",kernelFunc:aQ};function iQ(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),u=0;for(let h=0;h<o;h++)h!==a&&(l[u++]=r.shape[h]);let c=new Array(o).fill(0),p=r.shape.slice();p[a]=1;let d=new Array(i);for(let h=0;h<d.length;h++){c[a]=h;let f=Li({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});d[h]=$t({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return d}var lQ={kernelName:Tl,backendName:"cpu",kernelFunc:iQ};function uQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Ce(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,u=[],c=[],p=i-l,d=a;for(let f=0;f<p;++f){let m=Wf({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<o;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=iS({inputs:{a:g,b:d},backend:n}),x=Ka({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),A=b0({inputs:{a:x,b:r},backend:n}),b=Mp({inputs:{x:A},backend:n,attrs:{axis:0,keepDims:!1}});u.push(b),c.push(g),c.push(y),c.push(x),c.push(A),c.push(b)}let h=eI({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var cQ={kernelName:hp,backendName:"cpu",kernelFunc:uQ},dQ=[gX,lq,AX,bX,fq,wX,SX,CX,NX,RX,$X,PX,OX,LX,WX,GX,jX,XX,ZX,fX,JX,eK,nK,rK,pq,gq,oK,uq,lK,cK,dK,hK,mK,yK,xK,vK,kK,IK,TK,EK,_K,DK,FK,OK,zK,BK,VK,UK,GK,HK,XK,iX,ZK,yq,rZ,Aq,aZ,bq,dZ,pZ,fZ,wq,yZ,xZ,vZ,kZ,IZ,Sq,Cq,cq,TZ,uK,EZ,_Z,DZ,lX,Nq,Rq,FZ,$q,MZ,BZ,VZ,HZ,qZ,KZ,ZZ,Pq,JZ,eY,nY,rY,oY,lY,cY,Oq,pY,mY,xY,zq,Bq,wY,IY,NY,Vq,RY,$Y,DY,tI,MY,cX,Hq,LY,dq,Xg,WY,dX,pX,hX,UY,HY,qY,KY,YY,JY,eJ,qq,nJ,rJ,lJ,Kq,cJ,pJ,fJ,Zq,yY,yJ,xJ,vJ,kJ,IJ,TJ,EJ,_J,Qq,$J,tX,PJ,OJ,zJ,BJ,VJ,aX,jK,GJ,jJ,XJ,ZJ,JJ,Uq,oQ,lQ,cQ,_Y];for(let e of dQ)Xs(e);var sI={};Le(sI,{assertNotComplex:()=>Sc,bindCanvasToFramebuffer:()=>wQ,bindColorTextureToFramebuffer:()=>uf,bindTextureToProgramUniformSampler:()=>AI,bindTextureUnit:()=>mI,bindVertexBufferToProgramAttribute:()=>Zg,callAndCheck:()=>we,canBeRepresented:()=>rI,createFragmentShader:()=>iI,createFramebuffer:()=>fI,createProgram:()=>lI,createStaticIndexBuffer:()=>dI,createStaticVertexBuffer:()=>cI,createTexture:()=>pI,createVertexShader:()=>oI,getBatchDim:()=>Bi,getExtensionOrThrow:()=>Nd,getFramebufferErrorMessage:()=>xI,getMaxTexturesInShader:()=>kI,getNumChannels:()=>bQ,getProgramUniformLocation:()=>yI,getProgramUniformLocationOrThrow:()=>gI,getRowsCols:()=>Wi,getShapeAs3D:()=>cf,getTextureShapeFromLogicalShape:()=>vI,getWebGLDisjointQueryTimerVersion:()=>SI,getWebGLErrorMessage:()=>aI,getWebGLMaxTextureSize:()=>wI,hasExtension:()=>Rs,isCapableOfRenderingToFloatTexture:()=>II,isDownloadFloatTextureEnabled:()=>CI,isReshapeFree:()=>Xd,isWebGLFenceEnabled:()=>TI,isWebGLVersionEnabled:()=>Jg,linkProgram:()=>uI,logShaderSourceAndInfoLog:()=>u3,resetMaxTextureSize:()=>kQ,resetMaxTexturesInShader:()=>SQ,unbindColorTextureFromFramebuffer:()=>Yg,unbindTextureUnit:()=>vQ,validateFramebuffer:()=>Ed,validateProgram:()=>lf,validateTextureSize:()=>hI});var Si={},ug={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function v0(e,t){Si[e]=t}function xr(e,t){if(!(e in Si)||t!=null){let s=hQ(e,t);if(s!==null)Si[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=Si[e];return n==null||n.isContextLost()?(delete Si[e],xr(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Si[e])}function pQ(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function hQ(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?pQ(e):t;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Si[e]},!1),e===1?n.getContext("webgl",ug)||n.getContext("experimental-webgl",ug):n.getContext("webgl2",ug)}function zp(e,t){return[t,e]}function fQ(e,t){return e*t}function Qh(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function kc(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function mQ(e,t){let[n,s]=kc(e,t);return n*s*4}function l3(e,t){let n=e,s,r,a,o,i,l,u,c,p,d;return Y().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,u=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function we(e,t){let n=t();return Y().getBool("DEBUG")&&gQ(e),n}function gQ(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+aI(e,t))}var yQ=596e-10,AQ=65504;function rI(e){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||yQ<Math.abs(e)&&Math.abs(e)<AQ)}function aI(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Nd(e,t){return la(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function oI(e,t){let n=la(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(we(e,()=>e.shaderSource(n,t)),we(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function iI(e,t){let n=la(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(we(e,()=>e.shaderSource(n,t)),we(e,()=>e.compileShader(n)),Y().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw u3(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var xQ=/ERROR: [0-9]+:([0-9]+):/g;function u3(e,t){let n=xQ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((p,d)=>w.rightPad((d+1).toString(),a)+p),i=0;for(let p=0;p<o.length;p++)i=Math.max(o[p].length,i);let l=o.slice(0,s-1),u=o.slice(s-1,s),c=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function lI(e){return la(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function uI(e,t){if(we(e,()=>e.linkProgram(t)),!Y().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function lf(e,t){if(we(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function cI(e,t){let n=la(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),we(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function dI(e,t){let n=la(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return we(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),we(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function bQ(){return Y().getNumber("WEBGL_VERSION")===2?1:4}function pI(e){return la(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function hI(e,t){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function fI(e){return la(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Zg(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),we(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),we(e,()=>e.enableVertexAttribArray(i)),!0)}function mI(e,t,n){bI(e,n),we(e,()=>e.activeTexture(e.TEXTURE0+n)),we(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function vQ(e,t){bI(e,t),we(e,()=>e.activeTexture(e.TEXTURE0+t)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function gI(e,t,n){return la(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function yI(e,t,n){return e.getUniformLocation(t,n)}function AI(e,t,n,s){we(e,()=>mI(e,t,s)),we(e,()=>e.uniform1i(n,s))}function wQ(e){we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),we(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),we(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function uf(e,t,n){we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),we(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Yg(e,t){we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),we(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Ed(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+xI(e,t))}function xI(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function la(e,t,n){let s=we(e,()=>t());if(s==null)throw new Error(n);return s}function bI(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Bi(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function Wi(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function cf(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Bi(e),...Wi(e)]),t}function vI(e,t=!1){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?w.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let s=w.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=Bi(e),a=2,o=2;return e.length&&([a,o]=Wi(e)),s=r*(a/2)*(o/2),w.sizeToSquarishShape(s).map(i=>i*2)}return w.sizeToSquarishShape(s)}function ef(e){return e%2===0}function Xd(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||ef(n)&&ef(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&ef(e[0])&&ef(t[0])}var df,pf;function wI(e){if(df==null){let t=xr(e);df=t.getParameter(t.MAX_TEXTURE_SIZE)}return df}function kQ(){df=null}function SQ(){pf=null}function kI(e){if(pf==null){let t=xr(e);pf=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,pf)}function SI(e){if(e===0)return 0;let t,n=xr(e);return Rs(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Rs(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Rs(e,t){return e.getExtension(t)!=null}function Jg(e){try{if(xr(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function II(e){if(e===0)return!1;let t=xr(e);if(e===1){if(!Rs(t,"OES_texture_float"))return!1}else if(!Rs(t,"EXT_color_buffer_float"))return!1;return Qg(t)}function CI(e){if(e===0)return!1;let t=xr(e);if(e===1){if(!Rs(t,"OES_texture_float")||!Rs(t,"WEBGL_color_buffer_float"))return!1}else{if(Rs(t,"EXT_color_buffer_float"))return Qg(t);let s="EXT_color_buffer_half_float";if(Rs(t,s)){let r=t.getExtension(s);return IQ(t,r)}return!1}return Qg(t)}function Qg(e){let t=l3(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function IQ(e,t){let n=l3(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function TI(e){return e!==2?!1:xr(e).fenceSync!=null}function Sc(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var De=Y();De.registerFlag("HAS_WEBGL",()=>De.getNumber("WEBGL_VERSION")>0);De.registerFlag("WEBGL_VERSION",()=>Jg(2)?2:Jg(1)?1:0);De.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);De.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>De.get("WEBGL_VERSION")===2);De.registerFlag("WEBGL_CPU_FORWARD",()=>!0);De.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);De.registerFlag("WEBGL_PACK",()=>De.getBool("HAS_WEBGL"));De.registerFlag("WEBGL_PACK_NORMALIZATION",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_CLIP",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_REDUCE",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_LAZILY_UNPACK",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_CONV_IM2COL",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>wI(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>kI(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=De.getNumber("WEBGL_VERSION");return e===0?0:SI(e)});De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>De.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!yp.isMobile());De.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>II(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>De.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:De.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));De.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>CI(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_FENCE_API_ENABLED",()=>TI(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>De.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);De.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});De.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>yp.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});De.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);De.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);De.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);De.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);function Kn(){let e,t,n,s,r,a,o,i,l,u;return Y().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function zl(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function w0(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function CQ(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function TQ(e,t,n="index"){let s=e.map((a,o)=>o),r=CQ(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function c3(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function d3(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var NI=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:EI}=T;function NQ(e,t,n){let s=[];if(e.forEach(h=>{let f=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=p3(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>EQ(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=Kn(),l=$Q(i),u,c,p=FQ(i);return t.isPacked?(u=RQ(t.logicalShape,o,n.enableShapeUniforms),c=PQ(i)):(u=_Q(t.logicalShape,o,n.enableShapeUniforms),c=DQ(i)),n.packedInputs&&(p+=LQ),[p,l,c,r,u,a,n.userCode].join(`
`)}function Ic(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return YQ(e,t);case 1:return QQ(e,t);case 2:return tee(e,t);case 3:return see(e,t);case 4:return aee(e,t);case 5:return oee(e);case 6:return iee(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function RI(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return ZQ(e);case 1:return JQ(e,t);case 2:return eee(e,t);case 3:return nee(e,t);default:return ree(e,t)}}function EQ(e,t,n=!1,s){let r="";n?r+=RI(e,s):r+=Ic(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=lee(e,t):r+=uee(e,t)),r}function RQ(e,t,n){switch(e.length){case 0:return _I();case 1:return BQ(e,t,n);case 2:return XQ(e,t,n);case 3:return VQ(e,t,n);default:return GQ(e,t,n)}}function _Q(e,t,n){switch(e.length){case 0:return _I();case 1:return WQ(e,t,n);case 2:return KQ(e,t,n);case 3:return UQ(e,t,n);case 4:return HQ(e,t,n);case 5:return jQ(e,t);case 6:return qQ(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function $Q(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function DQ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function PQ(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function FQ(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${OQ}
    ${MQ}
    ${zQ}
  `}var OQ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,MQ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,zQ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,LQ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function _I(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function BQ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function WQ(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function VQ(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function UQ(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${w0(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=zl(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function GQ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let u=2;u<e.length-1;u++)o*=e[e.length-u-1],i=`
      int b${u} = index / ${o};
      index -= b${u} * ${o};
    `+i,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function HQ(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${w0(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=zl(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function jQ(e,t){let n=zl(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function qQ(e,t){let n=zl(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function XQ(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function KQ(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Ll(e){return`offset${e}`}function ZQ(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Kn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function YQ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Ll(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function JQ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=Kn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function QQ(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Cc(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Ll(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function eee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=Kn();if(a!=null&&w.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function tee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&w.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let d=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=w.squeezeShape(n),l=o;if(l.length<n.length){let d=Tc(e,l),h=["row","col"];return`
      ${Ic(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${Nc(h,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Cc(e)}
      }
    `;let u=a[0],c=a[1],p=Ll(s);return c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function nee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let d=n.slice(1),h=[1,2],f=Tc(e,d),m=["b","row","col"];return`
        ${RI(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Nc(m,h)});
        }
      `}let i=Kn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],u=o[1],c=Math.ceil(n[2]/2),p=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function see(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=w.squeezeShape(n),u=i;if(u.length<n.length){let m=Tc(e,u),g=["row","col","depth"];return`
        ${Ic(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Nc(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${Cc(e)}
      }
    `;let c=e.shapeInfo.texShape,p=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===o&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=Ll(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function ree(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Kn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],p=Math.ceil(a[o-1]/2),d=p*Math.ceil(a[o-2]/2),h="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,d*=a[o-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${n}, uv);
    }
  `}function aee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:u}=w.squeezeShape(n);if(l.length<n.length){let x=Tc(e,l),A=["row","col","depth","depth2"];return`
      ${Ic(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Nc(A,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${Cc(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===i&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;let y=Ll(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${d}, ${h}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function oee(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:u}=w.squeezeShape(t);if(l.length<t.length){let m=Tc(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${Ic(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Nc(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${Cc(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===i&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Ll(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function iee(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=w.squeezeShape(t);if(r.length<t.length){let g=Tc(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${Ic(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Nc(y,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Cc(e)}
      }
    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===c&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Ll(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Cc(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function lee(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=EI(e.shapeInfo.logicalShape,t.logicalShape),l=vt(o),u=o-a,c,p=["x","y","z","w","u","v"];a===0?c="":o<2&&i.length>=1?c="coords = 0;":c=i.map(x=>`coords.${p[x+u]} = 0;`).join(`
`);let d="";o<2&&a>0?d="coords":d=e.shapeInfo.logicalShape.map((x,A)=>`coords.${p[A+u]}`).join(", ");let h="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,y=w.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!y)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)o===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,A=a-1;i.indexOf(x)>-1&&i.indexOf(A)>-1?h="return vec4(outputValue.x);":i.indexOf(x)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(A)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${h}
    }
  `}function uee(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&w.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=vt(l),c=EI(e.shapeInfo.logicalShape,t.logicalShape),p=l-i,d,h=["x","y","z","w","u","v"];i===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${h[m+p]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+p]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function vt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function p3(e,t,n){let{newShape:s,keptDims:r}=w.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!w.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function Tc(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Nc(e,t){return t.map(n=>e[n]).join(", ")}function cee(e,t,n,s){let r=n.map((c,p)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:d}}),a=r.map(c=>c.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=NQ(r,o,t),l=iI(e.gl,i),u=e.createProgram(l);return Y().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o,...$I(e,t,u)}}function $I(e,t,n){let s={},r={},a={},o=[],i,l,u,c=null,p=null;p=e.getUniformLocation(n,"NAN",!1),Y().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let h=0;h<t.variableNames.length;h++){let f=t.variableNames[h];s[f]=e.getUniformLocation(n,f,d),s[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),a[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((h,f)=>{o[f]=e.getUniformLocation(n,h.name,d)}),{uniformLocations:s,customUniformLocations:o,infLoc:c,nanLoc:p,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:l}}function Dv(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!w.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!w.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function dee(e,t,n,s,r){t.program.enableShapeUniforms||(Dv(t.inShapeInfos,n),Dv([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),Y().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,u)=>{let c=t.program.variableNames[u],p=t.uniformLocations[c],d=t.uniformLocations[`offset${c}`],h=t.inShapesLocations[`${c}Shape`],f=t.inTexShapesLocations[`${c}TexShape`];if(h){let{uniformShape:m}=p3(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),p!=null){if(l.isUniform){if(w.sizeFromShape(l.shape)<2)e.gl.uniform1f(p,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(p,m)}return}l.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,p,u)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=w.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,u)=>{let c=t.customUniformLocations[u],p=r[u];if(l.type==="float")e.gl.uniform1fv(c,p);else if(l.type==="vec2")e.gl.uniform2fv(c,p);else if(l.type==="vec3")e.gl.uniform3fv(c,p);else if(l.type==="vec4")e.gl.uniform4fv(c,p);else if(l.type==="int")e.gl.uniform1iv(c,p);else if(l.type==="ivec2")e.gl.uniform2iv(c,p);else if(l.type==="ivec3")e.gl.uniform3iv(c,p);else if(l.type==="ivec4")e.gl.uniform4iv(c,p);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function pee(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=p3(e.packedInputs,o.shape,l),d="",h="",f="";if(c.length===1&&e.packedInputs){let v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(c.length===2&&!e.packedInputs)h=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!e.packedInputs){let v=w.computeStrides(c);f=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}let m=o.shape.length,g=c.length===2&&w.arraysEqual(o.shape,l),y=w.sizeFromShape(o.shape)===1,x=T.getBroadcastDims(o.shape,n.shape),A=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(l,n.texData.texShape),b=e.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${A}_${u?p:""}_${c.length}_${y}_${x}_${g}_${d}_${h}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${Y().getNumber("WEBGL_VERSION")}`,a}function is(e){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var hee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Kn();this.outputShape=e,this.enableShapeUniforms=is(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?w0(["r","c","d"],e):zl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},fee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Kn();this.outputShape=e,this.enableShapeUniforms=is(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?w0(["r","c","d"],e):zl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},mee=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=Kn();this.outputShape=e,this.userCode=`
      ${NI}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},gee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=Kn();this.outputShape=e,this.userCode=`
      ${NI}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},yee=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Kn();this.outputShape=e,this.enableShapeUniforms=is(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?d3():c3(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},Aee=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Kn();this.outputShape=e,this.enableShapeUniforms=is(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?d3():c3(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},DI={};Le(DI,{bindVertexProgramAttributeStreams:()=>VI,createBufferFromOutputTexture:()=>HI,createFloat16MatrixTexture:()=>zI,createFloat16PackedMatrixTexture:()=>WI,createFloat32MatrixTexture:()=>MI,createIndexBuffer:()=>OI,createPackedMatrixTexture:()=>BI,createUnsignedBytesMatrixTexture:()=>LI,createVertexBuffer:()=>FI,createVertexShader:()=>PI,downloadByteEncodedFloatMatrixFromOutputTexture:()=>qI,downloadFloat32MatrixFromBuffer:()=>jI,downloadMatrixFromPackedOutputTexture:()=>KI,downloadPackedMatrixFromBuffer:()=>XI,getInternalFormatForFloat16MatrixTexture:()=>f3,getInternalFormatForFloat16PackedMatrixTexture:()=>y3,getInternalFormatForFloat32MatrixTexture:()=>h3,getInternalFormatForPackedMatrixTexture:()=>g3,getInternalFormatForUnsignedBytesMatrixTexture:()=>m3,uploadDenseMatrixToTexture:()=>UI,uploadPixelDataToTexture:()=>GI});function PI(e){let t=Kn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return oI(e,n)}function FI(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return cI(e,t)}function OI(e){let t=new Uint16Array([0,1,2,2,1,3]);return dI(e,t)}function Lp(e,t,n,s,r,a){hI(t,n);let o=pI(e),i=e.TEXTURE_2D;return we(e,()=>e.bindTexture(i,o)),we(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),we(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),we(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),we(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),Y().getNumber("WEBGL_VERSION")===1?we(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)):we(e,()=>e.texStorage2D(i,1,s,t,n)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function h3(e){return e.internalFormatFloat}function MI(e,t,n,s){let[r,a]=zp(t,n);return Lp(e,r,a,h3(s),s.textureFormatFloat,e.FLOAT)}function f3(e){return e.internalFormatHalfFloat}function zI(e,t,n,s){let[r,a]=zp(t,n);return Lp(e,r,a,f3(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function m3(e){return e.downloadTextureFormat}function LI(e,t,n,s){let[r,a]=zp(t,n);return Lp(e,r,a,m3(s),e.RGBA,e.UNSIGNED_BYTE)}function g3(e){return e.internalFormatPackedFloat}function BI(e,t,n,s){let[r,a]=kc(t,n);return Lp(e,r,a,g3(s),e.RGBA,e.FLOAT)}function y3(e){return e.internalFormatPackedHalfFloat}function WI(e,t,n,s){let[r,a]=kc(t,n);return Lp(e,r,a,y3(s),e.RGBA,s.textureTypeHalfFloat)}function VI(e,t,n){return we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Zg(e,t,"clipSpacePos",n,3,20,0)&&Zg(e,t,"uv",n,2,20,12)}function UI(e,t,n,s,r,a){we(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),Y().getNumber("WEBGL_VERSION")===2?we(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,i,o)):we(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function GI(e,t,n){we(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?Y().getNumber("WEBGL_VERSION")===2?we(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):we(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):Y().getNumber("WEBGL_VERSION")===2?we(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):we(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function HI(e,t,n,s){let r=e.createBuffer();we(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return we(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),we(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),we(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function jI(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function qI(e,t,n,s){let[r,a]=zp(t,n),o=4,i=new Uint8Array(fQ(t*n,o));return we(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function XI(e,t,n,s,r,a,o,i){let l=e,u=new Float32Array(mQ(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function KI(e,t,n){let s=new Float32Array(t*n*4);return we(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var vu=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Y().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,v0(t,e)):this.gl=xr(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),Y().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Nd(this.gl,r),Rs(this.gl,a))this.textureHalfFloatExtension=Nd(this.gl,a);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Rs(this.gl,s))this.colorBufferHalfFloatExtension=Nd(this.gl,s);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Rs(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Rs(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=FI(this.gl),this.indexBuffer=OI(this.gl),this.framebuffer=fI(this.gl),this.textureConfig=l3(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;we(e,()=>e.finish()),we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),we(e,()=>e.deleteFramebuffer(this.framebuffer)),we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),we(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),we(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),MI(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),zI(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),LI(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),GI(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),UI(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),WI(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),BI(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Yg(this.gl,this.framebuffer),this.outputTexture=null),we(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>qI(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return XI(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return jI(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=HI(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>KI(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=PI(t));let n=lI(t);return we(t,()=>t.attachShader(n,this.vertexShader)),we(t,()=>t.attachShader(n,e)),uI(t,n),this.debug&&lf(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=VI(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&we(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&lf(this.gl,this.program),we(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?gI(this.gl,e,t):yI(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),we(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),AI(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=kc(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&lf(this.gl,this.program),Ed(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),we(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),we(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Nd(this.gl,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=xee(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),uf(this.gl,e,this.framebuffer),this.debug&&Ed(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(uf(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ed(this.gl)):Yg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;uf(s,e,this.framebuffer),this.debug&&Ed(s),this.outputTexture=e,we(s,()=>s.viewport(0,0,t,n)),we(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),we(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function xee(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:bee,bincountImpl:ZI,bincountReduceImpl:vee,ceilImpl:wee,concatImpl:kee,equalImpl:See,expImpl:Iee,expm1Impl:Cee,floorImpl:Tee,gatherNdImpl:Nee,gatherV2Impl:Eee,greaterImpl:Ree,greaterEqualImpl:_ee,lessImpl:$ee,lessEqualImpl:Dee,linSpaceImpl:Pee,logImpl:Fee,maxImpl:Oee,maximumImpl:Mee,minimumImpl:zee,multiplyImpl:Lee,negImpl:Bee,notEqualImpl:Wee,prodImpl:Vee,rangeImpl:Uee,rsqrtImpl:Gee,sigmoidImpl:Hee,simpleAbsImpl:YI,sliceImpl:jee,sparseFillEmptyRowsImpl:qee,sparseReshapeImpl:Xee,sparseSegmentReductionImpl:JI,sqrtImpl:Kee,stridedSliceImpl:Zee,stringNGramsImpl:Yee,stringSplitImpl:Jee,stringToHashBucketFastImpl:Qee,subImpl:ete,tileImpl:tte,topKImpl:nte,transposeImpl:A3,uniqueImpl:ste}=x0;function QI(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Vn(e,t){return t===1?[e]:QI(e,t)}function rte(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var ate=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=is(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=Vn("rc",this.rank),n=vt(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},e8=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=is(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${ote(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?d3():c3(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function ote(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?TQ(["r","c","d"],"inputShape"):zl(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var ite=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=Fv(t,n),r=Ov(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=Pv(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===3?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===4?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===1?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===0?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===2&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=Fv(n,s),a=Ov(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=Pv(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function lte(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Pv(e,t,n,s,r){let a=ute(t,s),o;if(r){let[l,u]=kc(e[0],e[1]);o=l*u}else{let[l,u]=zp(e[0],e[1]);o=l*u}let i=lte(n,a);return o*i}function ute(e,t){switch(e){case 3:return g3(t);case 4:return y3(t);case 1:return h3(t);case 0:return f3(t);case 2:return m3(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function cte(e){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function Fv(e,t){if(e===1)return 3;if(e===0||e==null)return cte(t);if(e===3||e===2)return 2;throw new Error(`Unknown logical texture type ${e}`)}function Ov(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Yr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=is(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Js="if (isnan(x)) return x;",dte="return x;",Mv="return abs(x);",pte="return (x >= 0.0) ? x : (exp(x) - 1.0);",hte=Js+`
  return (x < 0.0) ? 0.0 : x;
`,fte=Js+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,cu="return x;",mte="return 1.0 / (1.0 + exp(-1.0 * x));",gte="return x;",yte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Ate=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bte="return 1.0 / (1.0 + exp(-1.0 * x));",Ti=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=is(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},vte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=is(this.outputShape.length);let t=e.length,n=Vn("rc",t),s=vt(t),r=rte(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},wte=Zs.whereImpl,kte=1e-7,Ste=1e-4,tf={};function Ite(e){return e in tf||(tf[e]={}),tf[e]}var Cte=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Tte=600;function Nte(){return Y().global.screen==null?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*Tte/1024/1024}var t8=class extends Ou{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof vu)t=e;else{let n=xr(Y().getNumber("WEBGL_VERSION"),e);t=new vu(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=xr(Y().getNumber("WEBGL_VERSION"));t=new vu(n),this.binaryCache=Ite(Y().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ite(this.gpgpu),this.numMBBeforeWarning=Nte(),this.texData=new Zd(this,rn())}nextDataId(){return t8.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:1,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let p;i?p=new Ti(o,cu):p=new Yr(o,cu);let d=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:s}],s),h=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,u;l&&(u=w.now());let c;if(s==="complex64"){let p=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);c=T.mergeRealAndImagArrays(p,d)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=w.now()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let h;i?h=new Ti(s,cu):h=new Yr(s,cu);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(Y().getBool("DEBUG")&&!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Y().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(a!=="complex64"&&Y().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let h=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(h.texture.texture,...Qh(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(a==="complex64"){let h=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=h[0],m=h[1];c=T.mergeRealAndImagArrays(f,m)}else if(l==null)c=this.getValuesFromTexture(e);else{let h=w.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){let h=this.gpgpu.gl;we(h,()=>h.deleteBuffer(l))}let p=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(h=>h(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&rn().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:o,isPacked:i,texture:l}=n;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;i?d=new Ti(r,cu):d=new Yr(r,cu);let h=this.runWebGLProgram(d,[{dataId:e,shape:r,dtype:o}],o),f=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),f}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),c=rn().makeTensorFromDataId(u.dataId,u.shape,u.dtype),p=this.texData.get(u.dataId);return{tensorRef:c,...p.texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!rI(n))throw Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=w.sizeFromShape(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(e),d=this.texData.get(p.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Qh(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(p),h}let a=Y().getBool("WEBGL_PACK")&&s===!0,o=a?cf(t):t,i=a?new gee(o):new mee(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=w.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=w.sum(i),o.getExtraProfileInfo=()=>i.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Cte){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return wte(e.shape,t)}packedUnaryOp(e,t,n){let s=new Ti(e.shape,t),r=this.compileAndRun(s,[e],n);return rn().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=YI(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Mv,e.dtype);let t=new Yr(e.shape,Mv),n=this.compileAndRun(t,[e]);return rn().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:s}=this.makeTensorInfo(e,t,n);return rn().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){let t=new vte(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new ate(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Bi(e.shape),...Wi(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Bi(t),...Wi(t)],a=new e8(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let p=w.sizeFromShape(r),d=t[0]*t[1]*4;w.assert(p<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=cf(r),i;s?i=new fee(o):i=new hee(o);let l=!0,u=[t!=null?t:Qh(o)],c=this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,u,l,t);return{dtype:a,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===0){let g=a!=null?a:Qh(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),w.sizeFromShape(o.shape)===0)return i.values=w.getTypedArrayFromDType(o.dtype,0),o;let l=[],u=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!Xd(y.shape,g.shape)){let x=g,A=g.shape;g.shape=y.shape,g=this.packedReshape(g,A),l.push(g),y=this.texData.get(g.dataId),x.shape=A}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(o.dataId);let c={shape:o.shape,texData:i,isUniform:!1},p=pee(e,u,c),d=this.getAndSaveBinary(p,()=>cee(this.gpgpu,e,u,c)),h=this.activeTimers!=null,f;h&&(f=this.startTimer()),Y().get("ENGINE_COMPILE_ONLY")||dee(this.gpgpu,d,u,c,s),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=Y().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&r===!1){let g=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),g}return o}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=K(()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Y().getBool("DEBUG");Y().set("DEBUG",!1);let t=this.abs(Ie(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?kte:Ste}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,u;l&&(u=w.now());let c=t.texShape;if(c==null&&(c=vI(n,i),t.texShape=c),r!=null){let p=cf(n),d,h=c[1],f=c[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(i||!m)&&([h,f]=kc(c[0],c[1])),i?d=new Aee(p,m):d=new yee(p,m);let g=m?[f,h]:c,y=this.makeTensorInfo(g,s),x=this.texData.get(y.dataId);m?x.usage=2:x.usage=1,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),h,f,r);let A=[[f,h]],b=!0,v=this.runWebGLProgram(d,[y],s,A,b),k=this.texData.get(v.dataId);t.texShape=k.texShape,t.isPacked=k.isPacked,t.usage=k.usage,Y().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=k.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=w.now()-u)}else{let p=this.acquireTexture(c,o,s,i);t.texture=p}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=Ete(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(r){throw r}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await gA(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(u3(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:o,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=$I(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=o,e.outShapeLocation=i,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}},Bp=t8;Bp.nextDataId=0;function Ete(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var Rte="0.0.0";function n8(){Y().set("WEBGL_FORCE_F16_TEXTURES",!0)}yp.isBrowser()&&_l("webgl",()=>new Bp,2);var _te={forceHalfFloat:n8},s8=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Fu=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=is(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},k0=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,Wp=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=is(r);let a="";if(s)if(r===0||w.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${vt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Vn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function ys(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var $te={kernelName:Ao,backendName:"webgl",kernelFunc:ys};function Zo(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=ys({inputs:{x:s},backend:n}),l=ys({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var Dte={kernelName:Jd,backendName:"webgl",kernelFunc:Zo},r8="return (a < 0.) ? b * a : a;",a8=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Pte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wp(a8,r.shape,o.shape):new Fu(r8,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var Fte={kernelName:xo,backendName:"webgl",kernelFunc:Pte},o8="return (a < 0.) ? b * a : a;",i8=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Ote(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wp(i8,s.shape,r.shape):new Fu(o8,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var Mte={kernelName:_o,backendName:"webgl",kernelFunc:Ote},Ec="if (isnan(x)) return x;",zte=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Lte=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function ot({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let p=i.texData.get(o.dataId),d=n(p.values,l);return i.makeTensorInfo(o.shape,l,d)}let u=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Ti(o.shape,t):c=new Yr(o.shape,e),i.runWebGLProgram(c,[o],l)}}function bn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:u}=o,c=i;if(s&&l.dtype==="complex64"){let f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(A=>{let[b,v]=A,k={dataId:b.dataId,dtype:b.dtype,shape:l.shape},I={dataId:v.dataId,dtype:v.dtype,shape:u.shape},E=new Fu(e,l.shape,u.shape);return c.runWebGLProgram(E,[k,I],Tn(b.dtype,v.dtype))}),x=Zo({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),x}let p=a||Tn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){let f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(f):f,y=l.dtype==="string"?T.fromUint8ToStringArray(m):m,[x,A]=r(l.shape,u.shape,g,y,p),b=c.makeTensorInfo(A,p),v=c.texData.get(b.dataId);return v.values=x,b}let d=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return d?h=new Wp(t,l.shape,u.shape,n):h=new Fu(e,l.shape,u.shape),c.runWebGLProgram(h,[l,u],p)}}function S0(e,t=!1){if(e==="linear")return t?gte:dte;if(e==="relu")return t?Ate:hte;if(e==="elu")return t?yte:pte;if(e==="relu6")return t?xte:fte;if(e==="prelu")return t?i8:o8;if(e==="leakyrelu")return t?a8:r8;if(e==="sigmoid")return t?bte:mte;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var l8=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=is(this.outputShape.length);let u=s?e[1]:e[2],c=Math.ceil(u/2),p=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",A="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(A=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${x};
          int batchB = ${A};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},zv={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Lv=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Bv="return a * b;";function x3(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=T.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),u=new Lv(zv.REAL,s.shape,r.shape),c=new Lv(zv.IMAG,s.shape,r.shape),p=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(u,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=Zo({inputs:{real:d,imag:h},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[u,c]=Lee(s.shape,r.shape,i.values,l.values,a),p=n.makeTensorInfo(c,a),d=n.texData.get(p.dataId);return d.values=u,p}let o;return Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Wp(Bv,s.shape,r.shape):o=new Fu(Bv,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var Bte={kernelName:No,backendName:"webgl",kernelFunc:x3};function Wte(e,t,n){let s=[Bi(e.shape),...Wi(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[Bi(t),...Wi(t)],o=new e8(a,s),i=!0,l=[s],u=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function ve(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=w.sizeFromShape(r.shape),l=w.inferFromImplicitShape(a,i),u=w.sizeFromShape(l);w.assert(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let c=o.texData.get(r.dataId);return c.isPacked&&!Xd(r.shape,l)&&!(c.texture!==null&&Xd(c.shape,l))?Wte(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var Vte={kernelName:fl,backendName:"webgl",kernelFunc:ve},Wv=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let c=1/t;l=`sumValue += dot(values * ${w.isInt(c)?c.toPrecision(2):c}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},Ute=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(n/4)*4,c=n%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(o="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(o="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function Gte(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function Bl(e,t,n,s){let r=Gte(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:u}=r[o],c,p;n==="mean"?c=o===0?new Wv({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},i):new Wv({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u}):c=new Ute({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},n),p=a,a=s.runWebGLProgram(c,[a],t),p.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(p)}return a}var Hte=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=vt(this.rank),r=jte(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function jte(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var qte=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=vt(this.rank),r=QI("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=r[u];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function I0(e,t,n){let s=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qte(e.shape,t):new Hte(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function Xte(e,t,n,s){let r=t,a=e.shape.length,o=w.parseAxisParam(r,e.shape),i=o,l=T.getAxesPermutation(i,a),u=l!=null,c=e;u&&(c=I0(e,l,s),i=T.getInnerMostAxes(i.length,a)),T.assertAxesAreInnerMostDims("sum",i,a);let[p,d]=T.computeOutAndReduceShapes(c.shape,i),h=p;n&&(h=T.expandShapeToKeepDim(p,o));let f=w.sizeFromShape(d),g=w.sizeFromShape(e.shape)/f,y=ve({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),x=gp(e.dtype),A=Bl(y,x,"sum",s),b=ve({inputs:{x:A},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(A),u&&s.disposeIntermediateTensorInfo(c),b}function C0(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Xte(r,a,o,n)}var Kte={kernelName:Bo,backendName:"webgl",kernelFunc:C0};function Hn(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];let u;if(o.shouldExecuteOnCPU([r])){let p=o.texData.get(r.dataId).values,d=A3(p,r.shape,r.dtype,a,l);u=o.makeTensorInfo(l,r.dtype);let h=o.texData.get(u.dataId);h.values=d}else u=I0(r,a,o);return u}var Zte={kernelName:Ho,backendName:"webgl",kernelFunc:Hn},u8=1e3;function Uf({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let u=e.shape.length,c=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),x=w.sizeFromShape(g),b=Rl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=n?[y,p,h]:[y,h,p],k=s?[x,f,d]:[x,d,f],I=ve({inputs:{x:e},backend:r,attrs:{shape:v}}),E=ve({inputs:{x:t},backend:r,attrs:{shape:k}}),R=[I,E],P=Math.max(y,x),_=n?I.shape[1]:I.shape[2],D=a!=null,C=o!=null,F=l==="leakyrelu",U=l!=null?S0(l,!0):null,X=D||C||F||U!=null,z;if((h===1||f===1)&&_>u8&&X===!1){let B=I,ee=E;n&&(B=Hn({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),R.push(B)),s&&(ee=Hn({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),R.push(ee));let Q=f!==1,ae=f===1,J=B;Q&&(J=ve({inputs:{x:B},backend:r,attrs:{shape:[P,_,1]}}),R.push(J));let re=f===1?2:1,ie=ee;ae&&(ie=ve({inputs:{x:ee},backend:r,attrs:{shape:[P,1,_]}}),R.push(ie));let me=x3({inputs:{a:J,b:ie},backend:r});z=C0({inputs:{x:me},backend:r,attrs:{axis:re,keepDims:!0}}),R.push(me)}else{let B=Tn(e.dtype,t.dtype),ee=new l8(v,k,[P,h,f],n,s,D,U,C,F),Q=[I,E];if(a!=null&&Q.push(a),C&&Q.push(o),F){let ae=r.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));Q.push(ae),R.push(ae)}z=r.runWebGLProgram(ee,Q,B)}let Z=ve({inputs:{x:z},backend:r,attrs:{shape:b}});R.push(z);for(let B of R)r.disposeIntermediateTensorInfo(B);return Z}function Yte(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s;return Uf({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var Jte={kernelName:Oa,backendName:"webgl",kernelFunc:Yte},Vv="return abs(x);";function Qte(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=YI(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ti(s.shape,Vv):r=new Yr(s.shape,Vv),n.runWebGLProgram(r,[s],s.dtype)}var ene={kernelName:Hi,backendName:"webgl",kernelFunc:Qte},tne=Js+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,nne=ot({opSnippet:tne}),sne={kernelName:zu,backendName:"webgl",kernelFunc:nne},rne=Js+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,ane=ot({opSnippet:rne}),one={kernelName:Lu,backendName:"webgl",kernelFunc:ane},Uv="return a + b;",ine=bn({opSnippet:Uv,packedOpSnippet:Uv,supportsComplex:!0,cpuKernelImpl:bee}),lne={kernelName:ta,backendName:"webgl",kernelFunc:ine},une=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},cne=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function hf(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return ys({inputs:{x:s[0]},backend:n});if(s.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),u=hf({inputs:s.slice(0,l),backend:n}),c=hf({inputs:s.slice(l),backend:n});return hf({inputs:[u,c],backend:n})}let r=s.map(l=>l.dtype).reduce((l,u)=>Tn(l,u)),a=s.map(l=>l.shape),i=Y().getBool("WEBGL_PACK")?new cne(s[0].shape,a):new une(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var dne={kernelName:Ja,backendName:"webgl",kernelFunc:hf};function pne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=r;c!=null&&(p=Hn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("all",u,i);let[d,h]=T.computeOutAndReduceShapes(p.shape,u),f=w.sizeFromShape(h),m=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=Bl(m,m.dtype,"all",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var hne={kernelName:Bu,backendName:"webgl",kernelFunc:pne};function fne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=r;c!=null&&(p=Hn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("any",u,i);let[d,h]=T.computeOutAndReduceShapes(p.shape,u),f=w.sizeFromShape(h),m=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=Bl(m,m.dtype,"any",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var mne={kernelName:Wu,backendName:"webgl",kernelFunc:fne},gne=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},yne=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=vt(i),u=Vn("coords",i),c,p;if(a===1){p=i+1;let I=vt(p);c=`
        ${I} sourceLocR = ${I}(${u.join()}, 0);
        ++${u[i-1]};
        ${I} sourceLocG = ${I}(${u.join()}, 0);
        ++${u[i-2]};
        ${I} sourceLocA = ${I}(${u.join()}, 0);
        --${u[i-1]};
        ${I} sourceLocB = ${I}(${u.join()}, 0);
        --${u[i-2]};`}else p=i,c=`
        ${l} sourceLocR = coords;
        ++${u[i-1]};
        ${l} sourceLocG = coords;
        ++${u[i-2]};
        ${l} sourceLocA = coords;
        --${u[i-1]};
        ${l} sourceLocB = coords;
        --${u[i-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map(I=>"int "+I),m=Vn("sourceLocR",p-1).concat("inIdx.r"),g=Vn("sourceLocG",p-1).concat("inIdx.g"),y=Vn("sourceLocB",p-1).concat("inIdx.b"),x=Vn("sourceLocA",p-1).concat("inIdx.a"),A=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()})));`,v=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${u[i-2]} < ${o[i-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function c8(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=T.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new gne(i,n,s==null),u=[t];s!=null&&u.push(s);let c=e.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=c8(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function d8(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=T.computeOptimalWindowSize(a),i=new yne(r,o,n,s==null),l=s==null?[t]:[t,s],u=e.runWebGLProgram(i,l,"int32");if(u.shape.length===t.shape.length){let c=d8(e,t,n,u);return e.disposeIntermediateTensorInfo(u),c}return u}function p8(e,t,n,s){let r=[n];if(T.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[u,c]=T.computeOutAndReduceShapes(l.shape,r),p=w.sizeFromShape(c),d=ve({inputs:{x:l},backend:e,attrs:{shape:[-1,p]}});a.push(d);let h=c8(e,d,s);a.push(h);let f=ve({inputs:{x:h},backend:e,attrs:{shape:u}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return d8(e,t,s)}function Ane(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=Hn({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let c=p8(n,l,o[0],"max");return u.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var xne={kernelName:Qa,backendName:"webgl",kernelFunc:Ane};function bne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=Hn({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let c=p8(n,l,o[0],"min");return u.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var vne={kernelName:Vu,backendName:"webgl",kernelFunc:bne},wne=Js+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,kne=ot({opSnippet:wne}),Sne={kernelName:Uu,backendName:"webgl",kernelFunc:kne},Ine=Js+"return log(x + sqrt(x * x + 1.0));",Cne=ot({opSnippet:Ine}),Tne={kernelName:Gu,backendName:"webgl",kernelFunc:Cne},Nne=Js+`
  return atan(x);
`,Ene=ot({opSnippet:Nne}),Rne={kernelName:Hu,backendName:"webgl",kernelFunc:Ene},_ne=zte+`
  return atan(a, b);
`,$ne=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Lte+`
  return result;
`,Dne=bn({opSnippet:_ne,packedOpSnippet:$ne}),Pne={kernelName:qu,backendName:"webgl",kernelFunc:Dne},Fne=Js+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,One=ot({opSnippet:Fne}),Mne={kernelName:ju,backendName:"webgl",kernelFunc:One},Kd=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let I=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${d}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${I} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");let b=Math.floor(a/4)*4,v=a%4,k=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${d}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${b};
          if (${v===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${v===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${v===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${A});
      }
    `}},b3=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",A="0.0";if(x||(A="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let k=Math.floor(a/4)*4,I=a%4,E=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${k};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${v});
        }
      }
    `}};function zne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Sc(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;w.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return ys({inputs:{x:r},backend:n});let p=new Kd(c,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var Lne={kernelName:eo,backendName:"webgl",kernelFunc:zne};function Bne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],p=T.computePool3DInfo(r.shape,a,o,c,i,l,u),d=new b3(p,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var Wne={kernelName:Yd,backendName:"webgl",kernelFunc:Bne},Vne=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.top,c=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${c});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Une=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Gne(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,p=[1,1,1],d=T.computePool3DInfo(o.shape,i,l,p,u,c),h=new Une(d);return n.runWebGLProgram(h,[r],o.dtype)}var Hne={kernelName:Jf,backendName:"webgl",kernelFunc:Gne};function jne(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Sc([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=s,c=T.computePool2DInfo(o.shape,i,l,1,u),p=new Vne(c);return n.runWebGLProgram(p,[r],o.dtype)}var qne={kernelName:Yf,backendName:"webgl",kernelFunc:jne};function Xne(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return Uf({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var Kne={kernelName:to,backendName:"webgl",kernelFunc:Xne},Zne=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},Yne=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},Jne=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;w.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let u=[s,r,a],c=null;o!=null&&(c=o.shape,u.push(o));let p=null;i!=null&&(p=i.shape,u.push(i));let d=Y().getBool("WEBGL_PACK_NORMALIZATION")?new Yne(s.shape,r.shape,a.shape,c,p,l):new Zne(s.shape,r.shape,a.shape,c,p,l);return t.runWebGLProgram(d,u,u[0].dtype)},Qne={kernelName:go,backendName:"webgl",kernelFunc:Jne},ese=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=vt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=tse(this.rank),s,r=e.map((a,o)=>`sourceLoc.${ey[o]} = start[${o}] + coords.${ey[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},ey=["x","y","z","w","u","v"];function tse(e){if(e===1)return"sourceLoc";if(e<=6)return ey.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var nse=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=vt(this.rank),n=Vn("coords",this.rank),s=Vn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,c)=>`start[${c}]`).join()});`:e.map((u,c)=>`${s[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function sse(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Mt.computeFlatOffset(t,w.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function Rc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Mt.parseSliceParams(r,a,o);if(Mt.assertParamsValid(r,i,l),w.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.texData.get(r.dataId),d=jee(p.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}let{isPacked:u}=n.texData.get(r.dataId),c=Mt.isSliceContinous(r.shape,i,l);if(u||!c){let p=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nse(l):new ese(l),d=[i];return n.runWebGLProgram(p,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),sse(r,i,l,n)}var rse={kernelName:xl,backendName:"webgl",kernelFunc:Rc},ase=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=[],f=ve({inputs:{x:r},backend:n,attrs:{shape:l}}),m=Hn({inputs:{x:f},backend:n,attrs:{perm:u}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:c}}),y=Rc({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),y},ose={kernelName:ji,backendName:"webgl",kernelFunc:ase};function ise(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),u=ZI(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var lse={kernelName:Qf,backendName:"webgl",kernelFunc:ise};function use(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var cse={kernelName:em,backendName:"webgl",kernelFunc:use},dse="return float(a != b);",h8=bn({opSnippet:dse,cpuKernelImpl:Wee,dtype:"bool"}),pse={kernelName:ll,backendName:"webgl",kernelFunc:h8};function Vp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return ys({inputs:{x:r.complexTensorInfos.real},backend:n})}var hse={kernelName:ip,backendName:"webgl",kernelFunc:Vp},fse="return float(int(x));";function mse(e,t){let n=new Yr(e.shape,fse),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function ty(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return ys({inputs:{x:r},backend:n});let o=Ft(r.shape),i=ty({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=Zo({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Vp({inputs:{input:r},backend:n}),i=ty({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!w.hasEncodingLoss(r.dtype,a)){let o=ys({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return mse(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),l=h8({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var gse={kernelName:no,backendName:"webgl",kernelFunc:ty},Gv="return ceil(x);",yse=ot({opSnippet:Gv,packedOpSnippet:Gv,cpuKernelImpl:wee}),Ase={kernelName:so,backendName:"webgl",kernelFunc:yse},xse=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},bse=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function vse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;Y().getBool("WEBGL_PACK_CLIP")?i=new bse(r.shape):i=new xse(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var wse={kernelName:na,backendName:"webgl",kernelFunc:vse},kse=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function Hv(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Sse(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new kse(s.shape),o=[Hv(s,r.complexTensorInfos.real),Hv(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var Ise={kernelName:Qd,backendName:"webgl",kernelFunc:Sse},Cse=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},Tse=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=vt(s),a=Vn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],u=o.slice(-2),c=o.join(),p=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${c}), vec2(${u.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];p+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${nf(o,l,m)}),
            vec2(${nf(u,l,m)}));
        }`}let d=i.length,h=i[i.length-1];p+=`
        return getChannel(
          getT${d}(${nf(o,l,h)}),
          vec2(${nf(u,l,h)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${p}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function nf(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function T0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return ys({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Nse={kernelName:sp,backendName:"webgl",kernelFunc:T0};function gu(e,t,n){let s=e[0].dtype;if(s==="complex64"){let c=e.map(m=>Vp({inputs:{input:m},backend:n})),p=e.map(m=>T0({inputs:{input:m},backend:n})),d=gu(c,t,n),h=gu(p,t,n),f=Zo({inputs:{real:d,imag:h},backend:n});return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),p.forEach(m=>n.disposeIntermediateTensorInfo(m)),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let c=e.map(y=>{let x=w.sizeFromShape(y.shape.slice(t));return ve({inputs:{x:y},backend:n,attrs:{shape:[-1,x]}})}),p=c.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),d=T.computeOutShape(c.map(y=>y.shape),1),h=c[0].shape[0]===1,f=kee(p,d,s,h),m=T.computeOutShape(e.map(y=>y.shape),t),g=n.makeTensorInfo(m,s,f);return c.forEach(y=>n.disposeIntermediateTensorInfo(y)),g}if(e.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let c=Math.floor(e.length/2),p=gu(e.slice(0,c),t,n),d=gu(e.slice(c),t,n),h=gu([p,d],t,n);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),h}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let c=new Tse(e.map(p=>p.shape),t);return n.runWebGLProgram(c,e,s)}let{tensors2D:a,outShape:o}=Ese(e,t,n),i=new Cse(a.map(c=>c.shape)),l=n.runWebGLProgram(i,a,s);a.forEach(c=>n.disposeIntermediateTensorInfo(c));let u=ve({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),u}function Ese(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ve({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function f8(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(u=>u.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(u=>w.sizeFromShape(u.shape)>0);if(i.length===1)return ys({inputs:{x:i[0]},backend:n});let l=i.map(u=>u.shape);return T.assertParamsConsistent(l,a),gu(i,a,n)}var Rse={kernelName:qi,backendName:"webgl",kernelFunc:f8},m8=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,x=m?3:1,A="",b="";n&&(s?A=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?A=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:A=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${A}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${v}
        ${b}
        setOutput(result);
      }
    `}},_se=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},$se=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=is(this.outputShape.length);let{dataFormat:n}=t,s=Kn(),r=n==="channelsLast",a=r?0:1,o=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let u=0;u<=1;u++)for(let c=0;c<=1;c++)l+=`
          blockIndex = rc.y + ${c};
          pos = rc.x + ${u};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+c}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+c}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function g8({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(!((p===1||d===1)&&c>u8)&&u.isPacked&&h&&u.texture!=null&&l[2]%2!==0&&w.arraysEqual(u.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),v={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},k=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,w.assert(Xd(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);let I=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let E=Uf({a:v,b:I,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=s.texData.get(E.dataId);w.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=k,R.shape=n.outShape,g=ys({inputs:{x:E},backend:s}),g.shape=n.outShape,y.push(E)}else{let b=h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],v=ve({inputs:{x:e},backend:s,attrs:{shape:[1,b,n.inChannels]}}),k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=Uf({a:v,b:k,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=ve({inputs:{x:I},backend:s,attrs:{shape:n.outShape}}),y.push(v),y.push(k),y.push(I)}for(let b of y)s.disposeIntermediateTensorInfo(b);return g}function y8({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:d,dataFormat:h}=n,f=h==="channelsLast",m=l*u*c,g=d*p,y=[m,g],x=!0,A=!1,b=[],v=ve({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),k=ve({inputs:{x:t},backend:s,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});b.push(v),b.push(k);let I=new $se(y,n),E=[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],R=s.runWebGLProgram(I,[v],"float32",E),P=ve({inputs:{x:R},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(R),b.push(P);let _=r!=null,D=a!=null,C=i==="leakyrelu",F=i?S0(i,!0):null,U=new l8(P.shape,k.shape,[1,g,n.outChannels],x,A,_,F,D,C),X=[P,k];if(r&&X.push(r),D&&X.push(a),C){let ee=s.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));X.push(ee),b.push(ee)}let z=s.runWebGLProgram(U,X,"float32"),Z=f?[1,d,p,n.outChannels]:[1,n.outChannels,d,p],B=ve({inputs:{x:z},backend:s,attrs:{shape:Z}});b.push(z);for(let ee of b)s.disposeIntermediateTensorInfo(ee);return B}function Dse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,p),h;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))h=g8({x:r,filter:a,convInfo:d,backend:n});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)h=y8({x:r,filter:a,convInfo:d,backend:n});else{let m=new m8(d);h=n.runWebGLProgram(m,[r,a],"float32")}let f=ve({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}var Pse={kernelName:ro,backendName:"webgl",kernelFunc:Dse},Fse=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ose=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Mse=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},zse=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Lse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,c,o,1,i,u,!1,p),h=new Fse(d);return n.runWebGLProgram(h,[r,a],"float32")}var Bse={kernelName:tm,backendName:"webgl",kernelFunc:Lse};function Wse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,p),h=new Ose(d);return n.runWebGLProgram(h,[r,a],"float32")}var Vse={kernelName:ao,backendName:"webgl",kernelFunc:Wse};function Use(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=T.computeConv3DInfo(r.shape,a.shape,o,l,i),c=new _se(u);return n.runWebGLProgram(c,[r,a],"float32")}var Gse={kernelName:ep,backendName:"webgl",kernelFunc:Use};function Hse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,u=T.computeConv3DInfo(r.shape,l,o,1,i),c=new Mse(u);return n.runWebGLProgram(c,[r,a],"float32")}var jse={kernelName:nm,backendName:"webgl",kernelFunc:Hse};function qse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,u=T.computeConv3DInfo(l,a.shape,i,1,o),c=new zse(u);return n.runWebGLProgram(c,[r,a],"float32")}var Xse={kernelName:sm,backendName:"webgl",kernelFunc:qse},Kse=Ec+`
  return cos(x);
`,Zse=ot({opSnippet:Kse}),Yse={kernelName:oo,backendName:"webgl",kernelFunc:Zse},Jse=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Qse=ot({opSnippet:Jse}),ere={kernelName:io,backendName:"webgl",kernelFunc:Qse},tre=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[u]=t,[c,p]=n;this.outputShape=[u,c,p,l];let d=s==="bilinear"?1:0,[h,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,y]=c>1?[`${(o-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,A,b]=p>1?[`${(i-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${A};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},nre=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new tre(r.shape,a.shape,i,l,u);return n.runWebGLProgram(c,[r,a,o],"float32")},sre={kernelName:Ki,backendName:"webgl",kernelFunc:nre},jv=class{constructor(e,t,n,s){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.op=e,this.outputShape=t;let r=t.length,a=this.op==="*"?"1.0":"0.0",o=n?a:`getX(${qv(r,"coords",this.op)})`,i=t[t.length-1],l="",u="";n?(l=s?`end != ${i-1}`:"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${i}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${vt(r)} coords = getOutputCoords();
        int end = ${Xv(r,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${Xv(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${qv(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function qv(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Xv(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function A8(e,t,n,s,r,a){let o=t.shape.length,i=T.getAxesPermutation([s],o),l=t;i!=null&&(l=Hn({inputs:{x:t},backend:n,attrs:{perm:i}}));let u=T.getInnerMostAxes(1,o)[0];if(u!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=l.shape[u],p=ys({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new jv(e,l.shape,!1,a),f=[[d]],m=p;p=n.runWebGLProgram(h,[p],p.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){let d=new jv(e,l.shape,r,a),h=p;p=n.runWebGLProgram(d,[p],p.dtype),n.disposeIntermediateTensorInfo(h)}if(i!=null){let d=T.getUndoAxesPermutation(i),h=Hn({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),h}return p}function rre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return A8("*",r,n,a,o,i)}var are={kernelName:Xi,backendName:"webgl",kernelFunc:rre};function ore(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return A8("+",r,n,a,o,i)}var ire={kernelName:lo,backendName:"webgl",kernelFunc:ore};function lre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=ZI(l,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(a),c=vee(l,u,o,i);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var ure={kernelName:rm,backendName:"webgl",kernelFunc:lre},cre=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function dre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],p=l*a,d=u*a,h=c/(a*a),f=o==="NHWC"?[i,p,d,h]:[i,h,p,d],m=new cre(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var pre={kernelName:Zi,backendName:"webgl",kernelFunc:dre},x8=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=is(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",u="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${u}
        setOutput(result);
      }
    `}},b8=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=is(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,p=c,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<c;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(p+1)/2;g++){let y=g*2;if(d+=`
          xC = xCCorner + ${y*l};
          `,i===1){if(y<c&&(o%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?d+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<c)){let x=o%2===0?w.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1&&(d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                      xTexelC${y} = getX(batch, xR, xCOffset, d1);
                      xTexelC${y}Ready = 1;
                    }
                    `),d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                  `):x===1?d+=`
                    xC${y+1} = xTexelC${y};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<c&&(o%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<c&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<c&&(d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<c&&(d+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<c&&(d+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function hre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s,c=l;c==null&&(c=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let p=T.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!0),d;Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?d=new b8(p):d=new x8(p);let h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",h)}var fre={kernelName:uo,backendName:"webgl",kernelFunc:hre},mre=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},gre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function yre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s,p=T.computeConv2DInfo(r.shape,c,o,i,l,u,!0),d=new mre(p);return n.runWebGLProgram(d,[r,a],"float32")}var Are={kernelName:am,backendName:"webgl",kernelFunc:yre};function xre(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s,p=T.computeConv2DInfo(c,a.shape,o,i,l,u,!0),d=new gre(p);return n.runWebGLProgram(d,[r,a],"float32")}var bre={kernelName:om,backendName:"webgl",kernelFunc:xre},vre=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function wre(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=w.sizeFromShape(s.shape),o=ve({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new vre(a),l=n.runWebGLProgram(i,[o],o.dtype),u=ve({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var kre={kernelName:im,backendName:"webgl",kernelFunc:wre},Sre=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:u}=e,{top:c,left:p}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${c}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Ire(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=T.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),c,p=new Sre(u);c=n.runWebGLProgram(p,[r,a],"float32");let d=ve({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}var Cre={kernelName:tp,backendName:"webgl",kernelFunc:Ire};function Tre(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),p=c.length,d=null,h=o.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(h,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=Hn({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(A.shape,b)||(A=ve({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=x3({inputs:{a:A,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=C0({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var Nre={kernelName:np,backendName:"webgl",kernelFunc:Tre},Ere="return (x >= 0.0) ? x : (exp(x) - 1.0);",Rre=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,_re=ot({opSnippet:Ere,packedOpSnippet:Rre}),$re={kernelName:po,backendName:"webgl",kernelFunc:_re},Dre="return (b >= 1.0) ? a : a * (b + 1.0);",Pre=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Fre=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Wp(Pre,s.shape,r.shape):new Fu(Dre,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},Ore={kernelName:lm,backendName:"webgl",kernelFunc:Fre},Mre=`
  return vec4(equal(a, b));
`,zre="return float(a == b);",Lre=bn({opSnippet:zre,packedOpSnippet:Mre,dtype:"bool",cpuKernelImpl:See}),Bre={kernelName:Yi,backendName:"webgl",kernelFunc:Lre},Wre=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Vre=ot({opSnippet:Wre}),Ure={kernelName:Xu,backendName:"webgl",kernelFunc:Vre},Gre=Ec+`
  return exp(x);
`,Hre=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,v8=ot({opSnippet:Gre,packedOpSnippet:Hre,cpuKernelImpl:Iee,dtype:"float32"}),jre={kernelName:ho,backendName:"webgl",kernelFunc:v8};function ny(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(w.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),ve({inputs:{x:a},backend:s,attrs:{shape:i}})}var qre={kernelName:Ji,backendName:"webgl",kernelFunc:ny},Kv="return exp(x) - 1.0;",Xre=ot({opSnippet:Kv,packedOpSnippet:Kv,cpuKernelImpl:Cee}),Kre={kernelName:Qi,backendName:"webgl",kernelFunc:Xre},Zv=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function w8(e,t,n){let s=n.texData.get(e.dataId),r=w.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=ve({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,u=new Zv("real",l,t),c=new Zv("imag",l,t),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=Zo({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);let m=ve({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function Zre(e){let{inputs:t,backend:n}=e,{input:s}=t;return w8(s,!1,n)}var Yre={kernelName:um,backendName:"webgl",kernelFunc:Zre},Jre=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Up(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let o=w.getArrayFromDType(a,w.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new Jre(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var Qre={kernelName:Ku,backendName:"webgl",kernelFunc:Up},eae=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},tae={kernelName:el,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new eae(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},Yv="return floor(x);",nae=ot({opSnippet:Yv,packedOpSnippet:Yv,cpuKernelImpl:Tee}),sae={kernelName:fo,backendName:"webgl",kernelFunc:nae},rae=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,aae=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,oae=bn({opSnippet:rae,packedOpSnippet:aae,dtype:"int32"}),iae={kernelName:mo,backendName:"webgl",kernelFunc:oae},lae=class{constructor(e){this.variableNames=["A"];let t=Kn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},uae=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Kn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},cae={kernelName:Md,backendName:"webgl",kernelFunc:dae},du;function dae(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[l,u]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],p=[u,l,a];(i||o)&&(du==null&&(du=document.createElement("canvas").getContext("2d")),du.canvas.width=l,du.canvas.height=u,du.drawImage(r,0,0,l,u),r=du.canvas);let d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=2,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let h=Y().getBool("WEBGL_PACK")?new uae(p):new lae(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}function pae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(c),g=T.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!1,m),y,x=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=g8({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(Y().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=y8({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{let b=o!=null,v=i!=null,k=h==="leakyrelu",I=h?S0(h,!1):null,E=new m8(g,b,I,v,k),R=[r,a];if(o&&R.push(o),i&&R.push(i),k){let P=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));R.push(P),x.push(P)}y=n.runWebGLProgram(E,R,"float32")}let A=ve({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var hae={kernelName:Ma,backendName:"webgl",kernelFunc:pae};function fae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=[],m=c;m==null&&(m=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=T.computeConv2DInfo(r.shape,a.shape,l,m,u,p,!0),y=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=d?S0(d,y):null,A=[r,a],b=o!=null,v=i!=null,k=d==="leakyrelu";if(b&&A.push(o),v&&A.push(i),k){let P=n.makeTensorInfo([],"float32",w.createScalarValue(h,"float32"));A.push(P),f.push(P)}let I;y?I=new b8(g,b,x,v,k):I=new x8(g,b,x,v,k);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(I,A,"float32",E);return f.forEach(P=>n.disposeIntermediateTensorInfo(P)),R}var mae={kernelName:za,backendName:"webgl",kernelFunc:fae},gae=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let s=vt(t.length),r=vt(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${s} strides = ${s}(${this.strides});
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function yae(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=w.sizeFromShape(s.shape),[l,u,c,p]=T.prepareAndValidate(s,r),d=ve({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),h=ve({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),x=n.bufferSync(s),A=Nee(y,x,s.dtype,u,o,c,p,s.shape,i);return n.makeTensorInfo(l,s.dtype,A.values)}let f=new gae(o,p,[u,c]),m=n.runWebGLProgram(f,[h,d],h.dtype),g=ve({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var Aae={kernelName:nl,backendName:"webgl",kernelFunc:yae},xae=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=vt(this.rank),s=bae(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function bae(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function k8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=w.parseAxisParam(o,r.shape)[0];if(Y().get("DEBUG")){let x=n.readSync(a.dataId),A=r.shape[l];for(let b=0;b<x.length;++b){let v=x[b];w.assert(v<=A-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${A-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),c=w.sizeFromShape(a.shape),p=[],d=ve({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=ve({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(h);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let x=n.bufferSync(h),A=n.bufferSync(d),b=Eee(A,x,f);return p.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(u.outputShape,b.dtype,b.values)}let m=new xae(d.shape,f),g=n.runWebGLProgram(m,[d,h],d.dtype);p.push(g);let y=ve({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(x=>n.disposeIntermediateTensorInfo(x)),y}var vae={kernelName:tl,backendName:"webgl",kernelFunc:k8},wae="return float(a > b);",kae=`
  return vec4(greaterThan(a, b));
`,Sae=bn({opSnippet:wae,packedOpSnippet:kae,cpuKernelImpl:Ree,dtype:"bool"}),Iae={kernelName:sl,backendName:"webgl",kernelFunc:Sae},Cae="return float(a >= b);",Tae=`
  return vec4(greaterThanEqual(a, b));
`,Nae=bn({opSnippet:Cae,packedOpSnippet:Tae,dtype:"bool",cpuKernelImpl:_ee}),Eae={kernelName:yo,backendName:"webgl",kernelFunc:Nae};function Rae(e){let{inputs:t,backend:n}=e,{input:s}=t;return w8(s,!0,n)}var _ae={kernelName:cm,backendName:"webgl",kernelFunc:Rae},$ae="return float(!isnan(x) && !isinf(x));",Dae=ot({opSnippet:$ae,dtype:"bool"}),Pae={kernelName:Zu,backendName:"webgl",kernelFunc:Dae},Fae="return float(isinf(x));",Oae=ot({opSnippet:Fae,dtype:"bool"}),Mae={kernelName:Yu,backendName:"webgl",kernelFunc:Oae},zae="return float(isnan(x));",Lae=ot({opSnippet:zae,dtype:"bool"}),Bae={kernelName:Ju,backendName:"webgl",kernelFunc:Lae},Wae="return float(a < b);",Vae=`
  return vec4(lessThan(a, b));
`,Uae=bn({opSnippet:Wae,packedOpSnippet:Vae,cpuKernelImpl:$ee,dtype:"bool"}),Gae={kernelName:rl,backendName:"webgl",kernelFunc:Uae},Hae="return float(a <= b);",jae=`
  return vec4(lessThanEqual(a, b));
`,qae=bn({opSnippet:Hae,packedOpSnippet:jae,cpuKernelImpl:Dee,dtype:"bool"}),Xae={kernelName:al,backendName:"webgl",kernelFunc:qae};function Kae(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=Pee(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var Zae={kernelName:dm,backendName:"webgl",kernelFunc:Kae},Yae=Ec+`
  return x < 0.0 ? 0./0. : log(x);
`,Jae=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Qae=ot({opSnippet:Yae,packedOpSnippet:Jae,cpuKernelImpl:Fee}),eoe={kernelName:bo,backendName:"webgl",kernelFunc:Qae},toe=Ec+`
  return log(1.0 + x);
`,noe=ot({opSnippet:toe}),soe={kernelName:Qu,backendName:"webgl",kernelFunc:noe},roe="return float(a >= 1.0 && b >= 1.0);",aoe=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,ooe=bn({opSnippet:roe,packedOpSnippet:aoe,dtype:"bool"}),ioe={kernelName:ol,backendName:"webgl",kernelFunc:ooe},loe="return float(!(x >= 1.0));",uoe=ot({opSnippet:loe}),coe={kernelName:ec,backendName:"webgl",kernelFunc:uoe},doe="return float(a >= 1.0 || b >= 1.0);",poe=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,hoe=bn({opSnippet:doe,packedOpSnippet:poe,dtype:"bool"}),foe={kernelName:rp,backendName:"webgl",kernelFunc:hoe},moe=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},goe=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},yoe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,u=Y().getBool("WEBGL_PACK_NORMALIZATION")?new goe(r.shape,a,o,i,l):new moe(r.shape,a,o,i,l);return n.runWebGLProgram(u,[r],r.dtype)},Aoe={kernelName:ap,backendName:"webgl",kernelFunc:yoe},xoe=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},boe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s,p=new xoe(r.shape,i,l,u,c);return n.runWebGLProgram(p,[r,a,o],r.dtype)},voe={kernelName:pm,backendName:"webgl",kernelFunc:boe};function woe(e,t,n,s){let r=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=Bl(i,e.dtype,"max",s),u=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}function S8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=c!=null,d=n.shouldExecuteOnCPU([r]),h=r;if(p){if(d){let A=n.texData.get(h.dataId).values,b=new Array(i);for(let I=0;I<b.length;I++)b[I]=r.shape[c[I]];let v=A3(A,r.shape,r.dtype,c,b);h=n.makeTensorInfo(b,r.dtype);let k=n.texData.get(h.dataId);k.values=v}else h=I0(r,c,n);u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("max",u,i);let[f,m]=T.computeOutAndReduceShapes(h.shape,u),g=f;o&&(g=T.expandShapeToKeepDim(f,l));let y;if(d){let A=n.texData.get(h.dataId).values,b=Oee(A,w.sizeFromShape(m),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let v=n.texData.get(y.dataId);v.values=b}else y=woe(h,m,g,n);return p&&n.disposeIntermediateTensorInfo(h),y}var koe={kernelName:vo,backendName:"webgl",kernelFunc:S8},Soe=s8+`
  return max(a, b);
`,Ioe=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+k0+`
  return result;
`,Coe=bn({opSnippet:Soe,packedOpSnippet:Ioe,cpuKernelImpl:Mee}),Toe={kernelName:wo,backendName:"webgl",kernelFunc:Coe};function Noe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Sc(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;w.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return ys({inputs:{x:r},backend:n});let p=new Kd(c,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var Eoe={kernelName:ko,backendName:"webgl",kernelFunc:Noe};function Roe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],p=T.computePool3DInfo(r.shape,a,o,c,i,u,l),d=new b3(p,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var _oe={kernelName:op,backendName:"webgl",kernelFunc:Roe},$oe=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Doe=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left,h=i*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Poe(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,p=[1,1,1],d=T.computePool3DInfo(o.shape,i,l,p,u,c),h=new b3(d,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new Doe(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var Foe={kernelName:fm,backendName:"webgl",kernelFunc:Poe};function Ooe(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Sc([a,o],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=s,d=T.computePool2DInfo(i.shape,l,u,1,c,p),h=!0,f=new Kd(d,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),g=new $oe(d),y=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}var Moe={kernelName:hm,backendName:"webgl",kernelFunc:Ooe};function zoe(e,t,n,s){let r=new Kd(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new Kd(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var Loe={kernelName:mm,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;w.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let u=[1,1];w.assert(T.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=T.computePool2DInfo(s.shape,r,a,u,o),[p,d]=zoe(s,i,c,l);return[p,d]}};function Boe(e,t,n,s){let r=w.sizeFromShape(t),o=w.sizeFromShape(e.shape)/r,i=ve({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=Bl(i,"float32","mean",s),u=ve({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}var Woe={kernelName:So,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=w.parseAxisParam(a,s.shape),u=l,c=T.getAxesPermutation(u,i),p=c!=null,d=o.shouldExecuteOnCPU([s]),h=[],f=s;if(p){if(d){let b=o.texData.get(f.dataId).values,v=new Array(i);for(let E=0;E<v.length;E++)v[E]=s.shape[c[E]];let k=A3(b,s.shape,s.dtype,c,v);f=o.makeTensorInfo(v,s.dtype);let I=o.texData.get(f.dataId);I.values=k}else f=I0(s,c,o);h.push(f),u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("sum",u,i);let[m,g]=T.computeOutAndReduceShapes(f.shape,u),y=m;r&&(y=T.expandShapeToKeepDim(m,l));let x=Boe(f,g,y,o);for(let A of h)o.disposeIntermediateTensorInfo(A);return x}};function Voe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=w.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),p=r;c!=null&&(p=Hn({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",u,i);let[d,h]=T.computeOutAndReduceShapes(p.shape,u),f=w.sizeFromShape(h),m=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=Bl(m,m.dtype,"min",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=ve({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=ve({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),y}var Uoe={kernelName:Io,backendName:"webgl",kernelFunc:Voe},Goe=s8+`
  return min(a, b);
`,Hoe=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+k0+`
  return result;
`,joe=bn({opSnippet:Goe,packedOpSnippet:Hoe,cpuKernelImpl:zee}),qoe={kernelName:Co,backendName:"webgl",kernelFunc:joe},Xoe=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let s=e.length,r=vt(s),a=t.map(u=>u[0]).join(","),o=t.map((u,c)=>u[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},Koe=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=vt(s),a=t.map(h=>h[0]).join(","),o=t.map((h,f)=>h[0]+e[f]).join(","),i=Vn("rc",s),l=Vn("source",s),u=`${i[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${l.slice(-2).join()})`,p=n==="reflect"?0:1,d="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${i[s-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${i[s-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${c});
          ${i[s-1]} += 1;
          if(${u}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},Zoe=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Koe(s.shape,r,a):new Xoe(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},Yoe={kernelName:To,backendName:"webgl",kernelFunc:Zoe},Joe=`if (b == 0.0) return NAN;
  return mod(a, b);`,Qoe=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+k0+`
  return result;
`,eie=bn({opSnippet:Joe,packedOpSnippet:Qoe}),tie={kernelName:tc,backendName:"webgl",kernelFunc:eie},nie=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},sie=`
if (a == b) {
  return 1.0;
};
return a / b;`,rie=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,I8=bn({opSnippet:sie,packedOpSnippet:rie,checkOutOfBounds:!0}),aie={kernelName:co,backendName:"webgl",kernelFunc:I8},Jv="return a - b;",C8=bn({opSnippet:Jv,packedOpSnippet:Jv,supportsComplex:!0,cpuKernelImpl:ete}),oie={kernelName:Uo,backendName:"webgl",kernelFunc:C8};function T8(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=w.parseAxisParam([a],r.shape),i=S8({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),u=ve({inputs:{x:i},backend:n,attrs:{shape:l}}),c=C8({inputs:{a:r,b:u},backend:n}),p=v8({inputs:{x:c},backend:n}),d=C0({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),h=ve({inputs:{x:d},backend:n,attrs:{shape:l}}),f=I8({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}var iie={kernelName:Wo,backendName:"webgl",kernelFunc:T8};function lie(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:T8({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new nie(u,c,a),d=[[o]],h=n.runWebGLProgram(p,[l],"int32",d);return i||n.disposeIntermediateTensorInfo(l),h}var uie={kernelName:gm,backendName:"webgl",kernelFunc:lie},cie=Js+`
  return -x;
`,die=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function pie(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=Bee(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Ti(s.shape,die):r=new Yr(s.shape,cie),n.runWebGLProgram(r,[s],s.dtype)}var hie={kernelName:il,backendName:"webgl",kernelFunc:pie},fie=Zs.nonMaxSuppressionV3Impl;function mie(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=fie(u,c,o,i,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var gie={kernelName:ul,backendName:"webgl",kernelFunc:mie},yie=Zs.nonMaxSuppressionV4Impl;function Aie(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),{selectedIndices:d,validOutputs:h}=yie(c,p,o,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var xie={kernelName:nc,backendName:"webgl",kernelFunc:Aie},bie=Zs.nonMaxSuppressionV5Impl;function vie(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=o,h=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=bie(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var wie={kernelName:cl,backendName:"webgl",kernelFunc:vie},kie=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Sie=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=w.sizeFromShape(r.shape),u=new kie(l,a,o,i),c=ve({inputs:{x:r},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);let d=[...r.shape,a],h=ve({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),h},Iie={kernelName:pl,backendName:"webgl",kernelFunc:Sie};function Gf(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Vp({inputs:{input:s},backend:n}),a=Gf({inputs:{x:r},backend:n}),o=T0({inputs:{input:s},backend:n}),i=Gf({inputs:{x:o},backend:n}),l=Zo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Up({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Cie={kernelName:Nl,backendName:"webgl",kernelFunc:Gf};function N8(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Vp({inputs:{input:s},backend:n}),a=N8({inputs:{x:r},backend:n}),o=T0({inputs:{input:s},backend:n}),i=Gf({inputs:{x:o},backend:n}),l=Zo({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return Up({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Tie={kernelName:dl,backendName:"webgl",kernelFunc:N8};function Nie(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return ny({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=ny({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=f8({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var Eie={kernelName:hl,backendName:"webgl",kernelFunc:Nie},Rie=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let s=e.length,r=vt(s),a=t.map(l=>l[0]).join(","),o=t.map((l,u)=>l[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},_ie=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=vt(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=Vn("rc",s),l=Vn("source",s),u=`${i[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${u}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${u}) {`],d=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${p[f]}
        if (${d}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${c});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},E8=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(w.sizeFromShape(r.shape)===0){let u=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return Up({backend:n,attrs:{shape:u,value:o,dtype:r.dtype}})}let i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _ie(r.shape,a,o):new Rie(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},$ie={kernelName:Eo,backendName:"webgl",kernelFunc:E8},Die=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Pie=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+k0+`
  return result;
`,Fie=bn({opSnippet:Die,packedOpSnippet:Pie}),Oie={kernelName:Ro,backendName:"webgl",kernelFunc:Fie};function Mie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],u=w.parseAxisParam(a,r.shape),c=u,p=T.getAxesPermutation(c,i),d=r;p!=null&&(d=Hn({inputs:{x:r},backend:n,attrs:{perm:p}}),c=T.getInnerMostAxes(c.length,i),l.push(d)),T.assertAxesAreInnerMostDims("prod",c,i);let h;if(n.shouldExecuteOnCPU([d])){let f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=Vee(d.shape,d.dtype,f,c);h=n.makeTensorInfo(g,y,m)}else{let[f,m]=T.computeOutAndReduceShapes(d.shape,c),g=w.sizeFromShape(m),y=ve({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),x=gp(r.dtype),A=Bl(y,x,"prod",n);h=ve({inputs:{x:A},backend:n,attrs:{shape:f}}),l.push(y),l.push(A)}if(o){l.push(h);let f=T.expandShapeToKeepDim(h.shape,u);h=ve({inputs:{x:h},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var zie={kernelName:$o,backendName:"webgl",kernelFunc:Mie},R8=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=Uee(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Lie={kernelName:sc,backendName:"webgl",kernelFunc:R8},Bie="return 1.0 / x;",Wie=ot({opSnippet:Bie}),Vie={kernelName:rc,backendName:"webgl",kernelFunc:Wie},Uie=Js+`
  return (x < 0.0) ? 0.0 : x;
`,Gie=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Hie=ot({opSnippet:Uie,packedOpSnippet:Gie}),jie={kernelName:Do,backendName:"webgl",kernelFunc:Hie},qie=Js+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Xie=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Kie=ot({opSnippet:qie,packedOpSnippet:Xie}),Zie={kernelName:Fo,backendName:"webgl",kernelFunc:Kie},Yie=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Jie=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Qie(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Jie(r.shape,l,u,a,o):new Yie(r.shape,l,u,a,o);return n.runWebGLProgram(c,[r],"float32")}var ele={kernelName:Po,backendName:"webgl",kernelFunc:Qie},tle=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],p=1/u,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function nle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new tle(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var sle={kernelName:Am,backendName:"webgl",kernelFunc:nle},rle=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},ale=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function ole(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ale(r.shape,l,u,a,o):new rle(r.shape,l,u,a,o);return n.runWebGLProgram(c,[r],r.dtype)}var ile={kernelName:ac,backendName:"webgl",kernelFunc:ole},lle=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],p=1/u,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function ule(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new lle(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var cle={kernelName:ym,backendName:"webgl",kernelFunc:ule},dle=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=vt(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},ple=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=Vn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=vt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${u(s.slice())};
            if(${r}) {
              result.a = ${c(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(h){return p(h)}function l(h){return h[n-1]="("+h[n-1]+" + 1)",p(h)}function u(h){return h[n-2]="("+h[n-2]+" + 1)",p(h)}function c(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",p(h)}function p(h){let f=e.map((y,x)=>d(x,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function d(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function hle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=w.parseAxisParam(a,r.shape);if(o===0)return ys({inputs:{x:r},backend:n});let l=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ple(r.shape,i):new dle(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var fle={kernelName:ml,backendName:"webgl",kernelFunc:hle},mle=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},gle={kernelName:El,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new mle(s.shape,a),[u,c]=T.getImageCenter(o,s.shape[1],s.shape[2]),p=[[u,c,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,p)}},yle=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Ale=ot({opSnippet:yle}),xle={kernelName:gl,backendName:"webgl",kernelFunc:Ale},ble="return inversesqrt(x);",vle=ot({opSnippet:ble,cpuKernelImpl:Gee}),wle={kernelName:Oo,backendName:"webgl",kernelFunc:vle},_8=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=vt(r.length),l=vt(a.length),u="";n===1?u="i":n===2&&(u="i, j");let c=`getIndices(${u})`,p="";s===1?p="i":s===2&&(p="i, coords[1]");let d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function kle(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(a,r,o),d=[p/u,u];if(p===0)return n.makeTensorInfo(o,r.dtype);let h=ve({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=ve({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new _8(l,i,h.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,h,m],f.dtype),x=ve({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}var Sle={kernelName:yl,backendName:"webgl",kernelFunc:kle},Ile=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let u=0;u<t.length;u++)l.push(`${o[u]}`),u<e&&i.push(`${o[u]}`);s=i.join(),r=l.join()}let a=vt(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Cle(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new Ile(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],Tn(r.dtype,a.dtype))}var Tle={kernelName:Al,backendName:"webgl",kernelFunc:Cle},Nle=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Ele=ot({opSnippet:Nle}),Rle={kernelName:oc,backendName:"webgl",kernelFunc:Ele},_le=Ec+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,$le=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Dle=ot({opSnippet:_le,packedOpSnippet:$le,cpuKernelImpl:Hee}),Ple={kernelName:zo,backendName:"webgl",kernelFunc:Dle},Fle=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Ole=ot({opSnippet:Fle}),Mle={kernelName:ic,backendName:"webgl",kernelFunc:Ole},zle=Ec+`
  return sin(x);
`,Lle=ot({opSnippet:zle}),Ble={kernelName:Mo,backendName:"webgl",kernelFunc:Lle},Wle=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Vle=ot({opSnippet:Wle}),Ule={kernelName:bl,backendName:"webgl",kernelFunc:Vle},Gle=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Hle=ot({opSnippet:Gle}),jle={kernelName:lc,backendName:"webgl",kernelFunc:Hle},qle=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let u=[],c=E8({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(p.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),f=ve({inputs:{x:c},backend:n,attrs:{shape:p}}),m=Hn({inputs:{x:f},backend:n,attrs:{perm:d}}),g=ve({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},Xle={kernelName:vl,backendName:"webgl",kernelFunc:qle};function Kle(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[p,d,h,f,m]=qee(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var Zle={kernelName:lp,backendName:"webgl",kernelFunc:Kle};function Yle(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,p]=Xee(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var Jle={kernelName:uc,backendName:"webgl",kernelFunc:Yle};function Qle(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=JI(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}var eue={kernelName:up,backendName:"webgl",kernelFunc:Qle};function tue(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=JI(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}var nue={kernelName:cp,backendName:"webgl",kernelFunc:tue};function sue(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:p}=T.calculateShapes(a,r,i),d=!1,h=new _8(u,l,r.shape.length,a.shape.length,c,[p,1],d),f=n.runWebGLProgram(h,[a,r,o],a.dtype),m=ve({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}var rue={kernelName:dp,backendName:"webgl",kernelFunc:sue};function aue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=w.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=r.shape.length,c=new Array(u).fill(0),p=r.shape.slice();return l.map(d=>{let h=[...p];h[i]=d;let f=Rc({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[i]+=d,f})}var oue={kernelName:wl,backendName:"webgl",kernelFunc:aue},Qv="return sqrt(x);",iue=ot({opSnippet:Qv,packedOpSnippet:Qv,cpuKernelImpl:Kee}),lue={kernelName:Lo,backendName:"webgl",kernelFunc:iue},uue="return x * x;",cue=ot({opSnippet:uue}),due={kernelName:cc,backendName:"webgl",kernelFunc:cue},e4="return (a - b) * (a - b);",pue=bn({opSnippet:e4,packedOpSnippet:e4}),hue={kernelName:Vo,backendName:"webgl",kernelFunc:pue};function fue({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=Js+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Yr(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var mue={kernelName:jo,backendName:"webgl",kernelFunc:fue},gue=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=vt(n.length),a=vt(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,u)=>(i++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${i-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function yue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Mt.sliceInfo(r.shape,a,o,i,l,u,c,p,d),v;if(m)v=ve({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let I=Mt.computeOutShape(x,A,b),E=Rc({inputs:{x:r},backend:n,attrs:{begin:x,size:I}});v=ve({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([r])){let E=n.readSync(r.dataId),R=We(r.shape,r.dtype,E),P=Zee(h,R,b,x);v=n.makeTensorInfo(f,r.dtype,P.values)}else{let E=new gue(x,b,h);v=n.runWebGLProgram(E,[r],r.dtype)}let k=ve({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}var Aue={kernelName:kl,backendName:"webgl",kernelFunc:yue};function xue(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=Yee(d,h,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var bue={kernelName:pp,backendName:"webgl",kernelFunc:xue};function vue(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[u,c,p]=Jee(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var wue={kernelName:xm,backendName:"webgl",kernelFunc:vue};function kue(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=Qee(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var Sue={kernelName:bm,backendName:"webgl",kernelFunc:kue},Iue="return tan(x);",Cue=ot({opSnippet:Iue}),Tue={kernelName:Sl,backendName:"webgl",kernelFunc:Cue},Nue=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Eue=ot({opSnippet:Nue}),Rue={kernelName:Go,backendName:"webgl",kernelFunc:Eue},_ue=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=vt(this.rank),r=$ue(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function $ue(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function $8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>w.decodeString(d)):l,c=We(r.shape,r.dtype,u),p=tte(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let o=new _ue(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var Due={kernelName:sa,backendName:"webgl",kernelFunc:$8},Pue=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Fue=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function yi(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function t4(e){let t=1;for(;t<e;)t*=2;return t}function Oue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<i||a>l){let P=n.readSync(r.dataId),[_,D]=nte(P,u,r.dtype,a,o);return[n.makeTensorInfo(_.shape,_.dtype,_.values),n.makeTensorInfo(D.shape,D.dtype,D.values)]}if(a===0)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(c===1)return[r,Up({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(r.dataId),d=p!==null&&p.isPacked,h=d?n.unpackTensor(r):r,m=w.sizeFromShape(u)/c,g=ve({inputs:{x:h},attrs:{shape:[m,c]},backend:n});d&&yi(n,h);let y=t4(a),x=t4(c),A=null,b=()=>A===null?[g,g]:[g,A],v=(P,_,D)=>{let C=b(),F=new Pue(D),X=[[c],[A===null?1:0],[Number.NEGATIVE_INFINITY],[P],[_]],z=A;A=n.runWebGLProgram(F,C,"int32",X),yi(n,z)};for(let P=1;P<y;P*=2){let _=P*2;for(let D=P;D>=1;D/=2)v(_,D,[m,x])}for(let P=x;P>y;P/=2){let _=b(),D=new Fue([m,P/2]),F=[[c],[A===null?1:0],[y]],U=A;A=n.runWebGLProgram(D,_,"int32",F),yi(n,U);let X=y/2,z=X*2;for(let Z=X;Z>=1;Z/=2)v(z,Z,A.shape)}let k=A;A=Rc({inputs:{x:A},backend:n,attrs:{begin:0,size:[m,a]}}),yi(n,k);let I=k8({inputs:{x:g,indices:A},backend:n,attrs:{axis:1,batchDims:1}});yi(n,g);let E=u.slice(0,-1);E.push(a),k=A,A=ve({inputs:{x:A},attrs:{shape:E},backend:n}),yi(n,k);let R=I;return I=ve({inputs:{x:I},attrs:{shape:E},backend:n}),yi(n,R),[I,A]}var Mue={kernelName:Il,backendName:"webgl",kernelFunc:Oue},zue=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Lue(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=new zue(p,d,o,i,l,g);return n.runWebGLProgram(y,[r,a],"float32")}var Bue={kernelName:Cl,backendName:"webgl",kernelFunc:Lue};function Wue(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Sc(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:u}=ste(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}var Vue={kernelName:vm,backendName:"webgl",kernelFunc:Wue};function Uue(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1),c=0;for(let m=0;m<i;m++)m!==a&&(u[c++]=o.shape[m]);let p=[],d=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;let g=Rc({inputs:{x:o},backend:n,attrs:{begin:d,size:h}}),y=ve({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=y,p.push(g)}return p.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Gue={kernelName:Tl,backendName:"webgl",kernelFunc:Uue},Hue=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",u=Math.floor(n/4)*4,c=n%4,p=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}};function jue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],u=0,c=T.getAxesPermutation([u],i),p=r;c!=null&&(p=Hn({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(p),u=T.getInnerMostAxes(1,i)[0]);let d=T.segment_util.computeOutShape(p.shape,u,o),h=w.sizeFromShape([p.shape[u]]),f=ve({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=gp(r.dtype),g=(b,v,k,I,E)=>{let R=b.shape[0],P=b.shape[1],_=T.segment_util.segOpComputeOptimalWindowSize(P,E),D={windowSize:_,inSize:P,batchSize:R,numSegments:E},C=new Hue(D,v),F=n.compileAndRun(C,[b,k],I);if(l.push(F),F.shape[1]===E)return F;let U=R8({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),X=$8({inputs:{x:U},backend:n,attrs:{reps:[P/_]}});return l.push(U),l.push(X),g(F,v,X,I,E)},y=g(f,"unsortedSegmentSum",a,m,o),x=ve({inputs:{x:y},backend:n,attrs:{shape:d}}),A=x;if(c!=null){l.push(x);let b=T.getUndoAxesPermutation(c);A=Hn({inputs:{x:A},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var que={kernelName:hp,backendName:"webgl",kernelFunc:jue},Xue=[Jte,ene,sne,one,lne,dne,hne,mne,xne,vne,Sne,Tne,Rne,Pne,Mne,Lne,Wne,Hne,qne,Kne,Qne,ose,lse,cse,gse,Ase,wse,Dte,Ise,Rse,Pse,Bse,Vse,Gse,jse,Xse,Yse,ere,sre,are,ire,ure,pre,fre,Are,bre,kre,Cre,Nre,$re,Ore,Bre,Ure,jre,qre,Kre,Yre,Qre,tae,sae,iae,cae,hae,mae,Aae,vae,Iae,Eae,$te,_ae,Nse,Pae,Mae,Bae,Fte,Gae,Xae,Zae,eoe,soe,ioe,coe,foe,Aoe,voe,koe,Toe,Eoe,_oe,Foe,Moe,Loe,Woe,Uoe,qoe,Yoe,tie,uie,Bte,hie,gie,xie,wie,pse,Iie,Tie,Eie,$ie,Oie,Mte,zie,Lie,hse,aie,Vie,jie,Zie,Vte,ele,sle,ile,cle,fle,gle,xle,wle,Sle,Tle,Rle,Ple,Mle,Ble,Ule,rse,iie,jle,Xle,Zle,Jle,eue,nue,rue,oue,lue,due,hue,mue,Aue,bue,wue,Sue,oie,Kte,Tue,Rue,Due,Mue,Bue,Zte,Vue,Gue,que,Cie];for(let e of Xue)Xs(e);var zr=Y();zr.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);zr.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);zr.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);zr.registerFlag("WEBGPU_USE_NAIVE_CONV2D",()=>!1);zr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);zr.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);zr.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);zr.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);zr.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);zr.registerFlag("WEBGPU_USE_IMPORT",()=>!1);var Kue="return a + b;",Zue="return areal * breal - aimag * bimag;",Yue="return areal * bimag + aimag * breal;",Jue="return a / b;",Que="return a * b;",ece="return (a - b) * (a - b);",tce="return a - b;",nce="return f32(a == b);",sce="return vec4<f32>(a == b);",rce="return f32(a > b);",ace="return vec4<f32>(a > b);",oce="return f32(a >= b);",ice="return vec4<f32>(a >= b);",lce="return f32(a < b);",uce="return vec4<f32>(a < b);",cce="return f32(a <= b);",dce="return vec4<f32>(a <= b);",pce="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",hce=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,fce=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,D8=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,mce=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,gce=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,yce="return f32(a != b);",Ace="return vec4<f32>(a != b);",xce=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,bce=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${D8}
  return resultTemp;
  `,vce="if (a < 0.0) { return b * a; }  return a;",wce=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function n4(e,t){let n=t?D8:fce;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function Gp(e,t){switch(e){case 0:return Que;case 1:return Kue;case 2:return tce;case 3:return Jue;case 4:return t?sce:nce;case 5:return t?ace:rce;case 6:return t?ice:oce;case 7:return t?uce:lce;case 8:return t?dce:cce;case 9:return t?hce:pce;case 10:return t?Ace:yce;case 11:return ece;case 12:return t?gce:mce;case 14:return t?wce:vce;case 15:return n4("max",t);case 16:return n4("min",t);case 13:return t?bce:xce;case 17:return Zue;case 18:return Yue;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var kce="return abs(a);",Sce="return ceil(a);",Ice="return cos(a);",Cce=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Tce="return exp(a) - 1.0;",Nce="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Ece=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Rce="return exp(a);",_ce="return floor(a);",$ce="return a;",Dce=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Pce="return f32(!(a >= 1.0));",Fce="return -a;",Oce="if (a < 0.0) { return uniforms.alpha * a; } return a;",Mce=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,zce="if(a < 0.0) { return 0.0; } return a;",Lce="return clamp(a, 0.0, 6.0);",Bce="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Wce=`
  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));
  let isNaN = isnanVec4(a);

  if (isNaN.r) {
    resFloat.r = a.r;
  }
  if (isNaN.g) {
    resFloat.g = a.g;
  }
  if (isNaN.b) {
    resFloat.b = a.b;
  }
  if (isNaN.a) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Vce="return 1.0/sqrt(a);",Uce="return 1.0 / (1.0 + exp(-1.0 * a));",Gce="return sin(a);",Hce=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,jce="return sqrt(a);",qce="return a * a;",Xce=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Kce="return f32(i32((a)));";function bi(e,t){switch(e){case 0:return kce;case 2:return Ice;case 3:return Cce;case 1:return Sce;case 4:return t?Ece:Nce;case 5:return Rce;case 6:return Tce;case 7:return _ce;case 8:return $ce;case 9:return Dce;case 10:return Pce;case 11:return Fce;case 14:return t?Mce:Oce;case 12:return t?Wce:zce;case 13:return t?Bce:Lce;case 15:return Vce;case 18:return Uce;case 16:return Gce;case 17:return Hce;case 19:return jce;case 20:return qce;case 21:return Xce;case 22:return Kce;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function ua(e,t=!1){if(e===null)return null;if(e==="linear")return bi(8);if(e==="relu")return bi(12,t);if(e==="elu")return bi(4,t);if(e==="relu6")return bi(13,t);if(e==="prelu")return Gp(14,t);if(e==="sigmoid")return bi(18,t);if(e==="leakyrelu")return bi(14,t);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function Zce(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function yn(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function ff(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function v3(){return`
  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function Yo(){return`
  ${v3()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Qe(){return`
    ${Yo()}
      let index = getGlobalIndex();
`}function Yce(e,t,n,s=!1){let r=[];if(r.push(`
    let workGroupSizeX = ${n.workGroupSize[0]}u;
    let workGroupSizeY = ${n.workGroupSize[1]}u;
    let workGroupSizeZ = ${n.workGroupSize[2]}u;

    var<private> localId: vec3<u32>;
    var<private> globalId: vec3<u32>;
    var<private> numWorkgroups: vec3<u32>;

    // Only used when the y/z dimension of workgroup size is 1.
    fn getGlobalIndex() -> i32 {
      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {
        return i32(globalId.x);
      }

      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
          localId.y * workGroupSizeX + localId.x;
      let workGroupID = (globalId - localId)/vec3<u32>(
          workGroupSizeX, workGroupSizeY, workGroupSizeZ);

      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
        workGroupID.y * numWorkgroups.x + workGroupID.x) *
        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
        localInvocationIndex);
    }
  `),s===!0)return r.push(`
      struct Uniform {
        size            : i32,
        numChannels     : i32,
        outShapeStrides : vec2<i32>,
        dispatchSize    : vec3<u32>,
      };

      @group(0) @binding(0) var<storage, write> result: array<${ff(t.dtype,n.isVec4)}>;
      @group(0) @binding(2) var<uniform> uniforms: Uniform;
    `),[s4,r.join(`
`),r4(t.shape),n.getUserCode()].join(`
`);let a="struct Uniforms { NAN : f32, ";n.variableNames.forEach((p,d)=>{a+=`${p.charAt(0).toLowerCase()+p.slice(1)}Shape : ${yn(e[d].shape.length)}, `}),a+=`outShape : ${yn(t.shape.length)}, `;let o=t.shape.length-1;a+=`
       outShapeStrides: ${yn(o)}, `,n.size&&(a+="size : i32, "),n.uniforms&&(a+=n.uniforms),a+="};",r.push(a),n.atomic?r.push(`
    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
  `):r.push(`
    @group(0) @binding(0) var<storage, write> result: array<${ff(t.dtype,n.isVec4)}>;
  `),n.variableNames.forEach((p,d)=>{r.push(`
    @group(0) @binding(${1+d}) var<storage, read> ${p}: array<${ff(e[d].dtype,n.isVec4)}>;
    `)}),a!==""&&r.push(`
    @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
    `);let[i,l]=sde(t.shape,n.dispatchLayout),u=[s4,r.join(`
`),r4(t.shape),i,Jce(t.shape.length)];if(n.atomic||u.push(Qce(t.shape,t.dtype,n.isVec4)),l===t.shape.length){let p=e.map(d=>ede(d,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);u.push(p)}return u.push(n.getUserCode()),u.join(`
`)}var s4=`
  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let mod: i32 = a % b;
    if (sign < 0. && mod != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function Jce(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function Qce(e,t,n){let s=e.length,r=ff(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3"].slice(0,s),i=yn(s);n?a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}function ede(e,t,n,s){let r=tde(e,n);return e.shape.length<=t.length&&(r+=nde(e,t,n,s)),r}function tde(e,t){let n=e.name,s=e.shape.length,r=yn(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3"].slice(0,s),i=o.map(c=>`${c} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${s}D`;return s===0&&(u="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}[getIndexFromCoords${u}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}[getIndexFromCoords${u}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function nde(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"ByOutput",i=e.shape.length,l=t.length,u=yn(l);if(w.arraysEqual(e.shape,t)&&s)return n?`
        fn ${o}Index(globalIndex : i32) -> vec4<f32> {
          return vec4<f32>(${r}[globalIndex]);
        }

        fn ${o}Coords(coords : ${u}) -> vec4<f32> {
          return vec4<f32>(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
        }
        `:`
      fn ${o}Index(globalIndex : i32) -> f32 {
        return f32(${r}[globalIndex]);
      }

      fn ${o}Coords(coords : ${u}) -> f32 {
        return f32(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
      }
      `;let c=T.getBroadcastDims(e.shape,t),p=l-i,d="";if(i===0)return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        return get${a}();
      }

      fn ${o}Coords(coords : ${u}) -> vec4<f32> {
        return get${a}();
      }
    `:`
      fn ${o}Index(globalIndex : i32) -> f32{
        return get${a}();
      }

      fn ${o}Coords(coords : ${u}) -> f32{
        return get${a}();
      }
    `;l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords[${g+p}] = 0;`).join(`
`);let h="";if(l<2&&i>0)h="coords";else if(l>1){let g=yn(i),y=e.shape.map((x,A)=>`coords[${A+p}]`).join(", ");h=`${g}(${y})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        var coords = getCoordsFromIndex(globalIndex);
        ${d}
        return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }

      fn ${o}Coords(coordsIn : ${u}) -> vec4<f32> {
        var coords = coordsIn;
        ${d}
        return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
      }
    `:`
    fn ${o}Index(globalIndex : i32) -> f32 {
      var coords = getCoordsFromIndex(globalIndex);
      ${d}
      return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
    }

    fn ${o}Coords(coordsIn : ${u}) -> f32 {
      var coords = coordsIn;
      ${d}
      return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
    }
  `}function sde(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return[`fn getOutputCoords() -> ${yn(a)}{
      let globalIndex = getGlobalIndex();
      return getCoordsFromIndex(globalIndex);
    }
    `,a];let o="",i=[n,s,r],l=0;for(let d=0;d<i.length;d++){let h=i[d];if(h.length!==0)if(l+=h.length,h.length===1)o+=`let d${h[0]} = i32(globalId[${d}]);`;else{let f=Zce(h,"uniforms.outShape");o+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${d} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${d} - d${h[m]} * ${f[m]};`:o+=`index${d} = index${d} - d${h[m]} * ${f[m]};`}}let u=[];for(let d=0;d<l;d++)u.push(`d${d}`);let c=yn(l),p=`fn getOutputCoords() -> ${c} {
    ${o}
  `;return u.length===0?p+=`return ${c}(0); }`:p+=`return ${c}(${u.join(",")}); }`,[p,l]}function r4(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=w.computeStrides(e),s=yn(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides[${i}]`,u=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides[${i}]`;return`${l}; ${u};`}).join("");return`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}var P8={};Le(P8,{ArrayBufferToTypedArray:()=>O8,GPUBytesPerElement:()=>sy,computeDispatch:()=>Oe,computeWorkGroupSizeForConv2d:()=>w3,computeWorkGroupSizeForMatMul:()=>F8,computeWorkPerThreadForConv2d:()=>k3,flatDispatchLayout:()=>Xe,isWebGPUSupported:()=>S3,tilesFitEvenlyIntoShape:()=>Qr});var _i=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function Qr(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function Oe(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(_i(e.x.map(i=>t[i]))/(n[0]*s[0])),e.y?Math.ceil(_i(e.y.map(i=>t[i]))/(n[1]*s[1])):1,e.z?Math.ceil(_i(e.z.map(i=>t[i]))/(n[2]*s[2])):1];return[r,a,o]}function w3(e,t){let n=_i(e.x.map(r=>t[r])),s=_i(e.y.map(r=>t[r]));return n<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function F8(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function k3(e,t){let n=_i(e.x.map(r=>t[r])),s=_i(e.y.map(r=>t[r]));return n<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function Xe(e){return{x:e.map((t,n)=>n)}}function sy(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function O8(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function S3(){return(typeof window!="undefined"||typeof WorkerGlobalScope!="undefined")&&!!navigator.gpu}function M8(e,t,n,s){return w.assert(s%4===0&&e[0]===4,()=>"tileInner must be divisible by 4. And ColPerThread must be 4"),`
  var<workgroup> mm_Asub : array<array<vec4<f32>, ${s/e[0]}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${s}>;

  let RowPerThread = ${e[1]};
  let ColPerThread = ${e[0]};
  let TileInner = ${s};

  ${Yo()}

    let tileRow = ${t===1?"0":"i32(localId.y) * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var ACached : vec4<f32>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    var globalColA = tileCol;
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = i32(localId.y) * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);
        }
        globalColA = globalColA + TileInner / ColPerThread;

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {
            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];
            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];
            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];
            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];

            for (var i = 0; i < RowPerThread; i = i + 1) {
                ACached = mm_Asub[tileRow + i][k];
                acc[i] = BCached[0] * ACached.x + acc[i];
                acc[i] = BCached[1] * ACached.y + acc[i];
                acc[i] = BCached[2] * ACached.z + acc[i];
                acc[i] = BCached[3] * ACached.w + acc[i];
            }
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(globalRow + innerRow,
                 globalCol,
                 acc[innerRow], globalId);
    }
  }`}var rde=class{constructor(e,t,n,s,r,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let l=a!=null,u=i!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,this.batchAEqualOne=s,this.batchBEqualOne=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],s=[this.tileAOuter,this.tileInner],r=[this.tileInner,this.tileBOuter];return[Qr(s,this.aShape.slice(1)),Qr(r,n.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":`if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];
        }
        return vec4<f32>(0.0)`,t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];
        }
        return vec4<f32>(0.0)`,n="",s="";if(this.activation){let o=ua(this.activation,this.isVec4);this.hasPreluActivationWeights?n=`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${o}
                }`:n=`
            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {
              ${o}
            }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}
      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
        `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;
          let batch = i32(globalId.z);
        `}

        ${e};
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {
        ${this.batchBEqualOne?`
          let batchBSize = 0;
          let batch = 0;
          `:`
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;
          let batch = i32(globalId.z);
       `}
        ${t};
      }

      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {
        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])
        {
          var value = valueIn;
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col * 4);
          ${r}
          ${s}
          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);
        }
      }
      ${M8(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}
    `}};function I3(e,t){let n=t[1]*e[1],s=t[0]*e[0],r=n>s?n:s;return`
    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;
    var<workgroup> mm_Bsub : array<array<f32, ${s}>, ${r}>;
    ${Yo()}
      let tileRow = i32(localId.y) * ${e[1]};
      let tileCol = i32(localId.x) * ${e[0]};

      let globalRow = i32(globalId.y) * ${e[1]};
      let globalCol = i32(globalId.x) * ${e[0]};

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;

      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;
      var ACached : f32;
      var BCached : array<f32, ${e[0]}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let ColPerThreadA = ${r} / ${t[0]};
      let tileColA = i32(localId.x) * ColPerThreadA;
      let RowPerThreadB = ${r} / ${t[1]};
      let tileRowB = i32(localId.y) * RowPerThreadB;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;

            mm_Asub[inputRow][inputCol] = mm_readA(
                globalRow + innerRow,
                t * ${r} + inputCol, globalId);
          }
        }
        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;

            mm_Bsub[inputRow][inputCol] = mm_readB(
              t * ${r} + inputRow,
              globalCol + innerCol, globalId);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r}; k = k + 1) {
          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
            ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {

          if ((globalCol + innerCol) < uniforms.dimBOuter &&
              (globalRow + innerRow) < uniforms.dimAOuter) {
            mm_write(globalRow + innerRow,
                     globalCol + innerCol,
                     acc[innerRow][innerCol], globalId);
          }
        }
      }
    }
  `}function ade(e){return`
    let TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Yo()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;

      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),
                                mm_readA(globalRow, colA + 1, globalId),
                                mm_readA(globalRow, colA + 2, globalId),
                                mm_readA(globalRow, colA + 3, globalId));
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),
                              mm_readB(rowB + 1, globalCol, globalId),
                              mm_readB(rowB + 2, globalCol, globalId),
                              mm_readB(rowB + 3, globalCol, globalId));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {
        mm_write(globalRow, globalCol, acc, globalId);
      }
    }
  `}var z8=class{constructor(e,t,n,s,r,a=!1,o=!1,i=null,l=null,u=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let c=a?e[1]:e[2];this.workGroupSize=F8(t[1],c,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let p=i!=null,d=u!=null;p&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=a,this.transposeB=o,this.addBias=p,this.activation=l,this.hasPreluActivationWeights=d,this.batchAEqualOne=s,this.batchBEqualOne=r;let h=this.outputShape[2],f=this.transposeB?[this.outputShape[0],h,c]:[this.outputShape[0],c,h];[this.fitA,this.fitB]=this.getShapeFit(f),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${o}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,s=t>n?t:n;this.outputShape[1]===1&&(s*=4),w.assert(s%this.workGroupSize[0]===0&&s%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let r=[t,s],a=[s,n];return[Qr(r,this.aShape.slice(1)),Qr(a,e.slice(1))]}getUserCode(){let e;this.transposeA===!1?e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch * batchASize + row * uniforms.dimInner + col];
           }
           return 0.0;`:e=this.fitA?"return A[batch * batchASize + col * uniforms.dimAOuter + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
             return A[batch* batchASize + col * uniforms.dimAOuter + row];
           }
           return 0.0;`;let t;this.transposeB===!1?t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + row * uniforms.dimBOuter + col];
           }
           return 0.0;`:t=this.fitB?"return B[batch * batchBSize + col * uniforms.dimInner + row];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
             return B[batch * batchBSize + col * uniforms.dimInner + row];
           }
           return 0.0;`;let n="",s="";if(this.activation){let o=ua(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
        let batch = 0;
        let batchASize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
        `}
        ${e}
      }

      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
        let batch = 0;
        let batchBSize = 0;
        `:`
        let batch = i32(globalId.z);
        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
        `}
        ${t}
      }

      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        var value = valueIn;
        let batch = i32(globalId.z);
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${this.outputShape[1]>1?I3([this.workPerThread,this.workPerThread,1],this.workGroupSize):ade(this.workGroupSize)}
    `}};function ode(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Yo()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var ide=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=a!=null,u=i!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e;this.transposeA===!1?e="return A[batch * batchASize + row * uniforms.dimInner + col];":e="return A[batch * batchASize + col * uniforms.dimAOuter + row];";let t;this.transposeB===!1?t="return B[batch * batchBSize + row * uniforms.dimBOuter + col];":t="return B[batch * batchBSize + col * uniforms.dimInner + row];";let n="",s="";if(this.activation){let o=ua(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${o}
            }`:n=`
              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
                ${o}
              }
            `,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchAEqualOne?`
          let batchASize = 0;
          let batch = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = batchIn;
          `}
        ${e}
      }

      fn mm_readB(batchIn: i32, row : i32, col : i32) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = batchIn;
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        var value = valueIn;
        let outCoord = vec3<i32>(batch, row, col);
        ${r}
        ${s}
        setOutputAtCoords(batch, row, col, value);
      }
      ${ode()}
    `}};function lde(e){let t=e[1]/2,n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub1 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${s}>;
  var<workgroup> mm_Asub2 : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Introduces two shared memory buffers, some logical threads could handle
  // arithmetic operations and others handle IO operations between barrier api,
  // makes ALUs and load/store units work simultaneously, could improves
  // the performance.
  ${Yo()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = tileRow;
    for (var t = 0; t < numTiles; t = t + 1) {
      if (t == 0) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        }
      } else {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub1[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];
          }
        }
      }
      workgroupBarrier();
      if (t != 0) {
        t = t + 1;
      }

      if (t < numTiles) {
        if (tileRow < ${t}) {
          // Load one tile of A and B into local memory.
          // globalRow is always greater than or equal tileRow.
          mm_Asub2[tileRow][tileCol] =
              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);
          globalColA = globalColA + ${s};
          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);
          globalRowB = globalRowB + ${s};
        } else {
          // Compute acc values for a single thread.
          for (var k = 0; k < ${s}; k = k + 1) {
            let subRow = tileRow - ${t};
            if (subRow < 0) {
              continue;
            }
            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];
          }
        }
      }
      workgroupBarrier();
    }
    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};
    if (tileRow >= ${t} && writeCol >= 0) {
      mm_write(writeCol, globalCol, acc, globalId);
    }
  }
  `}var ude=class{constructor(e,t,n,s=null,r=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,16,1],w.assert(e[1]<=16||t[2]<=16,()=>"This program can be only used when A width or B Height are small"),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]*2/this.workGroupSize[1]),n[0]];let o=s!=null;o&&this.variableNames.push("bias");let i=a!=null;i&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=r,this.hasPreluActivationWeights=i,this.batchAEqualOne=e[0]===0,this.batchBEqualOne=t[0]===0,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){let e=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {
          return A[batch * batchASize + row * uniforms.dimInner + col];
        }
        return 0.0;`,t=`if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return B[batch * batchBSize + row * uniforms.dimBOuter + col];
         }
         return 0.0;`,n="",s="";if(this.activation){let o=ua(this.activation,!1);this.hasPreluActivationWeights?n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            let b = getPreluActivationWeightsByOutputCoords(outCoord);
            ${o}
            }`:n=`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {
            ${o}
        }`,s="value = activation(value, outCoord);"}let r=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${n}

      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchAEqualOne?`
          let batch = 0;
          let batchASize = 0;
          `:`
          let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
          let batch = i32(globalId.z);
          `}
        ${e}
      }
      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {
        ${this.batchBEqualOne?`
          let batch = 0;
          let batchBSize = 0;
          `:`
          let batch = i32(globalId.z);
          let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
          `}
        ${t}
      }
      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {
        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {
          let batch = i32(globalId.z);
          let outCoord = vec3<i32>(batch, row, col);
          var value = valueIn;
          ${r}
          ${s}
          setOutputAtCoords(batch, row, col, value);
        }
      }
      ${lde(this.workGroupSize)}
    `}};function qe(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),o=w.inferFromImplicitShape(r,a),i=w.sizeFromShape(o);return w.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var cde={kernelName:fl,backendName:"webgpu",kernelFunc:qe};function C3({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let u=e.shape.length,c=t.shape.length,p=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=w.sizeFromShape(m),x=w.sizeFromShape(g),b=Rl.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=n?[y,p,h]:[y,h,p],k=s?[x,f,d]:[x,d,f],I=qe({inputs:{x:e},backend:r,attrs:{shape:v}}),E=qe({inputs:{x:t},backend:r,attrs:{shape:k}}),R=[I,E],P=Math.max(y,x),_=y===1,D=x===1,C=p%4===0&&f%4===0&&!n&&!s,F;h*f<=32?F=new ide([P,h,f],_,D,n,s,a,l,o):!n&&!s&&(h<=16&&(f<=512||d>=2*f)||f<=16&&(h<=512||p>=2*h))?F=new ude(v,k,[P,h,f],a,l,o):C?F=new rde(v,[P,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),_,D,a,l,o):F=new z8(v,[P,h,f],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),_,D,n,s,a,l,o);let U=[I,E];a&&U.push(a),o&&U.push(o);let X=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[p]}];l==="leakyrelu"&&(X.push({type:"float32",data:[i]}),F.uniforms+=" alpha : f32,");let z=r.runWebGPUProgram(F,U,e.dtype,X),Z=qe({inputs:{x:z},backend:r,attrs:{shape:b}});R.push(z);for(let B of R)r.disposeData(B.dataId);return Z}function dde(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s;return C3({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var pde={kernelName:Oa,backendName:"webgpu",kernelFunc:dde},a4=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Gp(this.op,!1)}
      }

      ${Qe()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},hde=class{constructor(e,t,n,s){this.variableNames=["A","B"],this.size=!0;let r=256;this.workGroupSize=[r,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Xe(this.outputShape),this.lastDimensionSize=s?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=s,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];
         let b = getBByOutputCoords(coords);`;return`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Gp(this.op,!1)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Qe()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${t}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}},fde=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`
      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {
        ${Gp(this.op,this.isVec4)}
      }
      ${Qe()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
    `}},L8=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;let s=128;this.workGroupSize=[s,1,1],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`
      fn binaryOperation(a : f32, b : f32) -> f32 {
        ${Gp(this.op,!1)}
      }
      ${Qe()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          let b = getBByOutputIndex(index);
          setOutputAtIndex(index, binaryOperation(a, b));
        }
      }
      `}};function o4(e,t,n){if(w.arraysEqual(t,n)&&w.sizeFromShape(t)%4===0)return new fde(e,t,n);let r=t.length===1&&n.length>1&&t[0]<1024,a=n.length===1&&t.length>1&&n[0]<1024;return r||a?new hde(e,t,n,a):new L8(e,t,n)}function Ms(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var mde={kernelName:Ao,backendName:"webgpu",kernelFunc:Ms};function _c(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=Ms({inputs:{x:s},backend:n}),l=Ms({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var gde={kernelName:Jd,backendName:"webgpu",kernelFunc:_c},Hp=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${bi(this.op,!1)}
      }
      ${Qe()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function vn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let u=o.tensorMap.get(a.dataId),c=t(u.values,i);return o.makeTensorInfo(a.shape,i,c)}let l=new Hp(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function Zn({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let p=l.tensorMap.get(o.dataId),d=l.tensorMap.get(i.dataId),h,f;if(e!==0)[h,f]=[[p.complexTensorInfos.real,d.complexTensorInfos.real],[p.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{let[y,x]=g,A={dataId:y.dataId,dtype:y.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},v=o4(e,o.shape,i.shape);return l.runWebGPUProgram(v,[A,b],Tn(y.dtype,x.dtype))});else{let g=new a4(17,o.shape,i.shape),y=new a4(18,o.shape,i.shape),x=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:i.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:i.shape}];h=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(y,x,"float32")}let m=_c({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let u=s||Tn(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let p=l.tensorMap.get(o.dataId).values,d=l.tensorMap.get(i.dataId).values,h=o.dtype==="string"?T.fromUint8ToStringArray(p):p,f=o.dtype==="string"?T.fromUint8ToStringArray(d):d,[m,g]=t(o.shape,i.shape,h,f,u);return l.makeTensorInfo(g,u,m)}let c=o4(e,o.shape,i.shape);return l.runWebGPUProgram(c,[o,i],u)}}var{addImpl:yde,ceilImpl:Ade,concatImpl:xde,equalImpl:bde,expImpl:vde,expm1Impl:wde,floorImpl:kde,gatherNdImpl:Sde,gatherV2Impl:Ide,greaterEqualImpl:Cde,greaterImpl:Tde,lessEqualImpl:Nde,lessImpl:Ede,logImpl:Rde,maxImpl:_de,maximumImpl:$de,minimumImpl:Dde,multiplyImpl:Pde,negImpl:Fde,notEqualImpl:Ode,prodImpl:Mde,rangeImpl:zde,rsqrtImpl:Lde,simpleAbsImpl:Bde,sliceImpl:Wde,stridedSliceImpl:Vde,stringNGramsImpl:Ude,subImpl:Gde,tileImpl:Hde,topKImpl:jde,transposeImpl:qde,uniqueImpl:Axe}=x0,Xde=vn({opType:0,cpuKernelImpl:Bde}),Kde={kernelName:Hi,backendName:"webgpu",kernelFunc:Xde},Zde=Zn({opSnippet:1,cpuKernelImpl:yde,supportsComplex:!0}),Yde={kernelName:ta,backendName:"webgpu",kernelFunc:Zde},Jde=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Qe()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Qde(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Ms({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>Tn(i,l)),a=s.map(i=>i.shape),o=new Jde(a);return n.runWebGPUProgram(o,s,r)}var epe={kernelName:Ja,backendName:"webgpu",kernelFunc:Qde},B8=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32, infinityValue : f32,",this.size=!0;let s=[t];T.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=T.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=(r,a)=>this.outputShape.length===1?r:`${r}[${a}]`,n=r=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape[${r}]`;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      // In order to get a flattened index into the input tensor, we need to
      // add back the index along the reduced dimension to |outputCoords|.
      // This function outputs the offset to the first value along
      // |axis| and the stride to get the next value of the input along |axis|.
      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{
        let outputCoords = getCoordsFromIndex(outputIndex);
        var i = ${this.outputShape.length-1};

        var stride = 1;
        var inputStride = 1;
        var offset = 0;

        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {
          let length = ${n(`${this.inputShape.length} - r`)};
          if (${this.inputShape.length} - r == uniforms.axis) {
            inputStride = stride;
          } else {
            offset = offset + ${t("outputCoords","i")} * stride;
            i = i - 1;
          }
          stride = stride * length;
        }

        return vec2<i32>(offset, inputStride);
      }

      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{
        return coordInfo[0] + coordInfo[1] * index;
      }

      ${Qe()}
        let outputIndex = index / i32(workGroupSizeX);
        let coordInfo = getInputCoordInfo(outputIndex);
        let Length = ${n("uniforms.axis")};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;

        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = f32(x[getInputIndex(coordInfo, k)]);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(Length), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},tpe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      let TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${v3()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},npe=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=yn(this.outputShape.length),t=spe(this.newDim);return`
      ${Qe()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function spe(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC[${s}]`;return n.join()}function ea(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];if(n.shouldExecuteOnCPU([r])){let p=o.tensorMap.get(r.dataId).values,d=qde(p,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,d)}if(r.shape.length===2&&w.arraysEqual(a,[1,0])){let c=new tpe(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}let u=new npe(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}var rpe={kernelName:Ho,backendName:"webgpu",kernelFunc:ea};function ape(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=ea({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let c=new B8(l.shape,o[0],"max"),p=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",p);return u.forEach(h=>n.disposeData(h.dataId)),d}var ope={kernelName:Qa,backendName:"webgpu",kernelFunc:ape};function ipe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=w.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=ea({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let c=new B8(l.shape,o[0],"min"),p=[{type:"int32",data:[o[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",p);return u.forEach(h=>n.disposeData(h.dataId)),d}var lpe={kernelName:Vu,backendName:"webgpu",kernelFunc:ipe},W8=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Qe()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},V8=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function upe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1,c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Ms({inputs:{x:r},backend:n});let p,d=[{type:"int32",data:[c.strideHeight,c.strideWidth]}];return c.filterHeight===1&&c.filterWidth===1?p=new V8(c):(p=new W8(c,"avg"),d.push({type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]})),n.runWebGPUProgram(p,[r],r.dtype,d)}var cpe={kernelName:eo,backendName:"webgpu",kernelFunc:upe};function dpe(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return C3({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var ppe={kernelName:to,backendName:"webgpu",kernelFunc:dpe},hpe=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${yn(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=yn(this.rank),t=fpe(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${ry[a]} = uniforms.start[${a}] + coords.${ry[a]};`),`
      ${Qe()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},ry=["x","y","z","w","u","v"];function fpe(e){if(e===1)return"sourceLoc";if(e<=6)return ry.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function $c(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=Mt.parseSliceParams(r,a,o);if(Mt.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.tensorMap.get(r.dataId),d=Wde(p.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}if(w.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let u=new hpe(i,l),c=[{type:"int32",data:i}];return n.runWebGPUProgram(u,[r],r.dtype,c)}var mpe={kernelName:xl,backendName:"webgpu",kernelFunc:$c},gpe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=[],f=qe({inputs:{x:r},backend:n,attrs:{shape:l}}),m=ea({inputs:{x:f},backend:n,attrs:{perm:u}}),g=qe({inputs:{x:m},backend:n,attrs:{shape:c}}),y=$c({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>n.disposeData(x.dataId)),y},ype={kernelName:ji,backendName:"webgpu",kernelFunc:gpe},U8=Zn({opSnippet:10,dtype:"bool",cpuKernelImpl:Ode}),Ape={kernelName:ll,backendName:"webgpu",kernelFunc:U8};function jp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Ms({inputs:{x:r.complexTensorInfos.real},backend:n})}var xpe={kernelName:ip,backendName:"webgpu",kernelFunc:jp};function bpe(e,t){let n=new Hp(e.shape,22),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function ay(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Ms({inputs:{x:r},backend:n});let o=Ft(r.shape),i=ay({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=_c({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=jp({inputs:{input:r},backend:n}),i=ay({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!w.hasEncodingLoss(r.dtype,a)){let o=Ms({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(a==="int32")return bpe(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),l=U8({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var vpe={kernelName:no,backendName:"webgpu",kernelFunc:ay},wpe=vn({opType:1,cpuKernelImpl:Ade}),kpe={kernelName:so,backendName:"webgpu",kernelFunc:wpe},Spe=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Qe()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},Ipe=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Qe()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Cpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return w.sizeFromShape(r.shape)%4===0?i=new Spe(r.shape):i=new Ipe(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var Tpe={kernelName:na,backendName:"webgpu",kernelFunc:Cpe},Npe=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Qe()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function N0(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Ms({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Epe={kernelName:sp,backendName:"webgpu",kernelFunc:N0};function oy(e,t,n){let s=e[0].dtype;if(s==="complex64"){let h=e.map(x=>jp({inputs:{input:x},backend:n})),f=e.map(x=>N0({inputs:{input:x},backend:n})),m=oy(h,t,n),g=oy(f,t,n),y=_c({inputs:{real:m,imag:g},backend:n});return h.forEach(x=>n.disposeData(x.dataId)),f.forEach(x=>n.disposeData(x.dataId)),n.disposeData(m.dataId),n.disposeData(g.dataId),y}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let h=e.map(b=>{let v=w.sizeFromShape(b.shape.slice(t));return qe({inputs:{x:b},backend:n,attrs:{shape:[-1,v]}})}),f=h.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),m=T.computeOutShape(h.map(b=>b.shape),1),g=h[0].shape[0]===1,y=xde(f,m,s,g),x=T.computeOutShape(e.map(b=>b.shape),t),A=n.makeTensorInfo(x,s,y);return h.forEach(b=>n.disposeData(b.dataId)),A}let{tensors2D:a,outShape:o}=Rpe(e,t,n),i=a.map(h=>h.shape),l=new Npe(i),u=[],c=new Array(i.length-1);if(c.length>0){c[0]=i[0][1],u.push({type:"int32",data:[c[0]]});for(let h=1;h<c.length;h++)c[h]=c[h-1]+i[h][1],u.push({type:"int32",data:[c[h]]})}let p=n.runWebGPUProgram(l,a,a[0].dtype,u);a.forEach(h=>n.disposeData(h.dataId));let d=qe({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeData(p.dataId),d}function Rpe(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>qe({inputs:{x:a},backend:n,attrs:{shape:[w.sizeFromShape(a.shape.slice(0,t)),w.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function G8(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(u=>u.shape),a);if(w.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(u=>w.sizeFromShape(u.shape)>0);if(i.length===1)return Ms({inputs:{x:i[0]},backend:n});let l=i.map(u=>u.shape);return T.assertParamsConsistent(l,a),oy(i,a,n)}var _pe={kernelName:qi,backendName:"webgpu",kernelFunc:G8},$pe=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.uniforms=`filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      dimAOuter : i32, dimBOuter : i32, dimInner : i32,`,this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.outputShape[1]===1?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=this.outputShape[1]===1?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],s=this.outputShape[3],r=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Qr(e,[n,r]),Qr(t,[r,s])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);
    let divBy4Remainder${e} = flatIndex${e} % 4;
    let divBy4Index${e} = flatIndex${e} / 4;
    let curData${e} = x[divBy4Index${e}];
    if (divBy4Remainder${e} == 0) {
      temp = curData${e};
    } else {
      // TODO: This could end up being a redundant load with another one in
      // the same shader invocation. Perhaps there's an opportunity for
      // optimization
      let nextData${e} = x[divBy4Index${e} + 1];
      if (divBy4Remainder${e} == 1) {
        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);
      } else if (divBy4Remainder${e} == 2) {
        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);
      } else if (divBy4Remainder${e} == 3) {
        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);
      }
    }
    `}getUserCode(){let e=M8(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),s=`let outRow = r / uniforms.outShape[2];
        let outCol = r % uniforms.outShape[2];
        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);
        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];
        let inChCoord = c % uniforms.xShape[3];
        var coord = vec4<i32>(
            batch,
            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],
            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],
            inChCoord);
        var resData = vec4<f32>(0.0);
        ${this.convInfo.inChannels%4===0?`// The bounds checking is always needed since we use it to pad zero for
          // the 'same' padding type.
          if (coordsInBounds4D(coord, uniforms.xShape)) {
            resData = x[getIndexFromCoords4D(coord, uniforms.xShape) / 4];
          } else {
            resData = vec4<f32>(0.0); }`:`var temp = vec4<f32>(0.0);
          ${this.getSampleAWithRemainder(1)}
          resData = temp;
          if (WCol == (uniforms.filterDims[1] - 1)) {
            coord = vec4<i32>(
              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);
              ${this.getSampleAWithRemainder(2)}
            if (inChCoord == 0) {
              resData = vec4<f32>(resData.xyz, temp.x);
            } else if (inChCoord == 1) {
              resData = vec4<f32>(resData.xy, temp.xy);
            } else {
              resData = vec4<f32>(resData.x, temp.xyz);
            }
          }
          `}
        return resData;`,r=this.fitA?`${s}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {
          ${s}
         }
         return vec4<f32>(0.0);
        `,a=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":`if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter / 4 + col];
         }
         return vec4<f32>(0.0);
        `,o="",i="";if(this.activation){let c=ua(this.activation,this.isVec4);if(this.hasPreluActivationWeights)o=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${c}
        }`;else{if(this.hasLeakyreluAlpha)throw o=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {
          let b = getLeakyreluAlphaByOutputCoords(outCoord);
          ${c}
        }`,new Error("Leakyrelu is not supported.");o=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          ${c}
        }`}i="value = activation(value, outCoord);"}let l=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
        ${o}
        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          let r = row;
          let c = col * 4;
          var batch = i32(globalId.z);
          ${r}
        }

        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {
          ${a}
        }

        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {
          var batch = i32(globalId.z);
          var value = valueInput;
          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)
          {
            let outCoord = vec4<i32>(
              batch,
              row / uniforms.outShape[2],
              row % uniforms.outShape[2],
              col * 4);
            ${l}
            ${i}
            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],
              value);
          }
        }
        ${e}
      `}},Dpe=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[1],y:[2,3],z:[0]},this.workGroupSize=w3(this.dispatchLayout,this.outputShape),this.elementsPerThread=k3(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}_${this.isChannelsLast}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;w.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y");let s=[e,n],r=[n,t],a=this.convInfo.outHeight*this.convInfo.outWidth,o=this.convInfo.outChannels,i=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[Qr(s,[a,i]),Qr(r,[i,o])]}getUserCode(){let e=this.isChannelsLast?`
    let coord = vec4<i32>(batch, xRow, xCol, col % inChannels);
    `:`
    let coord = vec4<i32>(batch, col % inChannels, xRow, xCol);
    `,t=this.isChannelsLast?`
    let outCoord = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let outCoord = vec4<i32>(
      batch,
      col,
      row / outWidth,
      row % outWidth);
    `,n=I3(this.elementsPerThread,this.workGroupSize),s=`
    let inChannels = uniforms.wShape[2];
    let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
    let outRow = row / outWidth;
    let outCol = row % outWidth;

    let WRow = col / (uniforms.filterDims[1] * inChannels);
    let WCol = col / inChannels % uniforms.filterDims[1];
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    ${e}
    // The bounds checking is always needed since we use it to pad zero for the
    // 'same' padding type.
    if(coordsInBounds4D(coord, uniforms.xShape)) {
      return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;`,r=this.fitA?`${s}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      ${s}
    }
    return 0.0;
    `,a=this.fitB?"return W[row * uniforms.dimBOuter + col];":`if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {
           return W[row * uniforms.dimBOuter + col];
	 }
	 return 0.0;
	 `,o="",i="";if(this.activation){let c=ua(this.activation,!1);this.hasPreluActivationWeights?o=`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {
                  let b = getPreluActivationWeightsByOutputCoords(outCoord);
                  ${c}
                }`:o=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
                    ${c}
                  }
                `,i="value = activation(value, outCoord);"}let l=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
    ${o}
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      ${r}
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      ${a}
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outWidth = ${this.isChannelsLast?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      ${t}
      ${l}
      ${i}
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }
    ${n}
  `}},Ppe=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=s,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ua(this.activation);this.hasPreluActivationWeights?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32{
               let b = getPreluActivationWeightsByOutputCoords(outCoord);
               ${r}
             }`:e=`
                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{
                    ${r}
                  }
                `,t="value = activation(value, outCoord);"}let n=this.addBias?"value = value + getBiasByOutputCoords(outCoord);":"";return`
      ${e}
      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {
        let coord = vec4<i32>(batch, row, col, chan);
        if(coordsInBounds4D(coord, uniforms.xShape)) {
          return getX(batch, row, col, chan);
        }
        return 0.0;
      }

      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
        let coord = vec4<i32>(row, col, xChannel, outChannel);
        if(coordsInBounds4D(coord, uniforms.wShape)) {
          return getW(row, col, xChannel, outChannel);
        }
        return 0.0;
      }

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          ${n}
          ${t}
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Yo()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let outChannel = coords[3];

        var acc = 0.0;

        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {
              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
              let v = readInp(batch, coordRow, coordCol, xChannel);
              let f = readFilt(row, col, xChannel, outChannel);
              acc = acc + v * f;
            }
          }
        }

        writeResult(batch, coords[1], coords[2], outChannel, acc);
      }
    `}},Fpe=class{constructor(e,t){this.variableNames=["A"],this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
      inChannels : i32,`,this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`
    ${Qe()}

      for(var i = 0; i<${this.workPerThread}; i = i + 1) {
        let flatIndex = index * ${this.workPerThread} + i;

        let rc = getCoordsFromIndex(flatIndex);

        if(flatIndex < uniforms.size) {
          let blockIndex = rc[0];
          let pos = rc[1];

          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];
          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;
          var value = 0.0;
          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {
            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -
              uniforms.pad[0];
            let d1 = offsetX + uniforms.dilation[0] * ((pos %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
            let ch = pos % uniforms.inChannels;
            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {
              value = getA(d0, d1, ch);
            }
          }
          setOutputAtIndex(flatIndex, value);
        }
      }
    }
  `}};function Ope({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=n.dataFormat==="channelsLast",u=!l,c=!1,p=l&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d,h;if(p){let g=n.inHeight*n.inWidth*n.inChannels;d=qe({inputs:{x:e},backend:s,attrs:{shape:[1,n.batchSize,g]}}),h=qe({inputs:{x:t},backend:s,attrs:{shape:[1,g,n.outChannels]}})}else d=qe({inputs:{x:e},backend:s,attrs:{shape:l?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),h=qe({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});let f=C3({a:l?d:h,b:l?h:d,transposeA:u,transposeB:c,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),m=qe({inputs:{x:f},backend:s,attrs:{shape:n.outShape}});return s.disposeData(d.dataId),s.disposeData(h.dataId),s.disposeData(f.dataId),m}function Mpe({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:p,strideHeight:d,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=n,A=x==="channelsLast",b=l*u*c,v=m*f,k=[v,b],I=!1,E=!1,R=[],P=qe({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),_=qe({inputs:{x:t},backend:s,attrs:{shape:[1,b,-1]}});R.push(P),R.push(_);let D=new Fpe(k,A),C=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[p,d]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],F=s.runWebGPUProgram(D,[P],P.dtype,C),U=qe({inputs:{x:F},backend:s,attrs:{shape:[1,k[0],k[1]]}});R.push(F),R.push(U);let X=[1,k[0],k[1]],z=new z8(X,[1,v,n.outChannels],Y().get("WEBGPU_MATMUL_WORK_PER_THREAD"),!0,!0,I,E,r,i,a),Z=X[1],B=X[2],ee=n.outChannels,Q=[{type:"int32",data:[Z]},{type:"int32",data:[ee]},{type:"int32",data:[B]}],ae=[U,_];r&&ae.push(r),a&&ae.push(a),i==="leakyrelu"&&(C.push({type:"float32",data:[o]}),z.uniforms+=" alpha : f32,");let J=s.runWebGPUProgram(z,ae,U.dtype,Q),re=A?[1,m,f,n.outChannels]:[1,n.outChannels,m,f],ie=qe({inputs:{x:J},backend:s,attrs:{shape:re}});R.push(J);for(let me of R)s.disposeData(me.dataId);return ie}function H8({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=r!=null,u=a!=null,c=n.dataFormat==="channelsLast",p;if(c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID"||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID"))return Ope({x:e,filter:t,convInfo:n,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});if(Y().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&e.shape[0]===1)return w.assert(c,()=>"TODO: NCHW is unimplemented"),Mpe({x:e,filter:t,convInfo:n,backend:s,bias:r,preluActivationWeights:a,leakyreluAlpha:o,activation:i});let h=Y().getBool("WEBGPU_USE_NAIVE_CONV2D"),f=(n.inChannels%4===0||n.inChannels===3&&n.padInfo.type==="VALID")&&n.outChannels%4===0&&c,m=[n.padInfo.top,n.padInfo.left],g=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...m]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(h)w.assert(c,()=>"TODO: NCHW is unimplemented"),p=new Ppe(n,l,i,u);else{f?p=new $pe(n,l,i,u):p=new Dpe(n,l,i,u);let x=n.outHeight*n.outWidth,A=n.outChannels,b=n.filterHeight*n.filterWidth*n.inChannels;g.push({type:"int32",data:[x]},{type:"int32",data:[A]},{type:"int32",data:[b]})}let y=[e,t];return l&&y.push(r),u&&y.push(a),i==="leakyrelu"&&(g.push({type:"float32",data:[o]}),p.uniforms+=" alpha : f32,"),s.runWebGPUProgram(p,y,e.dtype,g)}function zpe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n,p=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,p);return H8({x:r,filter:a,convInfo:d,backend:s})}var Lpe={kernelName:ro,backendName:"webgpu",kernelFunc:zpe},Bpe=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=w3(this.dispatchLayout,this.outputShape),this.elementsPerThread=k3(this.dispatchLayout,this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`
    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      var batch = i32(globalId.z);
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
      
    let outRow = row / uniforms.outShape[2];
    let outCol = row % uniforms.outShape[2];

    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
      return 0.0;
    }
    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
      return 0.0;
    }
    let coord = vec4<i32>(
        batch,
        i32(xR),
        i32(xC),
        col % uniforms.outBackprop[3]);
    return x[getIndexFromCoords4D(coord, uniforms.xShape)];
    }
    return 0.0;
    }

    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {
      let coordX = uniforms.filterDims.x - 1 -
          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let coordY = uniforms.filterDims.y - 1 -
          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
          coordX >= 0 && coordY >= 0) {
        let coord = vec4<i32>(coordX, coordY, col,
            row % uniforms.outBackprop[3]);
        return W[getIndexFromCoords4D(coord, uniforms.wShape)];
      }
      return 0.0;
    }

    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {
      var batch = i32(globalId.z);
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;
    }

    ${I3(this.elementsPerThread,this.workGroupSize)}
  `}},Wpe=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Qe()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Vpe(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,p=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,p),h=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(Y().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new Wpe(d);else{f=new Bpe(d);let m=d.inShape[1]*d.inShape[2],g=d.inShape[3],y=d.filterHeight*d.filterWidth*d.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var Upe={kernelName:ao,backendName:"webgpu",kernelFunc:Vpe},Gpe=vn({opType:2}),Hpe={kernelName:oo,backendName:"webgpu",kernelFunc:Gpe},jpe=vn({opType:3}),qpe={kernelName:io,backendName:"webgpu",kernelFunc:jpe},Xpe=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Qe()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},Kpe=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new Xpe(r.shape[3],a.shape,i,l),p=[{type:"float32",data:[u]}];return n.runWebGPUProgram(c,[r,a,o],"float32",p)},Zpe={kernelName:Ki,backendName:"webgpu",kernelFunc:Kpe},i4=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=t,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",n=this.exclusive?t:`getX(${l4(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1],r="",a="";return this.exclusive?(r=this.reverse?`end != ${s-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${s}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${Qe()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${u4(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${a};
           ${u4(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${l4(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function l4(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function u4(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function j8(e,t,n,s,r,a){let o=t.shape.length,i=T.getAxesPermutation([s],o),l=t;i!=null&&(l=ea({inputs:{x:t},backend:n,attrs:{perm:i}}));let u=T.getInnerMostAxes(1,o)[0];if(u!==o-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=l.shape[u],p=Ms({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new i4(e,l.shape,!1,a),f=p,m=[{type:"float32",data:[d]}];p=n.runWebGPUProgram(h,[p],p.dtype,m),n.disposeData(f.dataId)}if(r){let d=new i4(e,l.shape,r,a),h=p,f=[{type:"float32",data:[0]}];p=n.runWebGPUProgram(d,[p],p.dtype,f),n.disposeData(h.dataId)}if(i!=null){let d=T.getUndoAxesPermutation(i),h=ea({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeData(p.dataId),n.disposeData(l.dataId),h}return p}function Ype(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return j8("*",r,n,a,o,i)}var Jpe={kernelName:Xi,backendName:"webgpu",kernelFunc:Ype};function Qpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return j8("+",r,n,a,o,i)}var ehe={kernelName:lo,backendName:"webgpu",kernelFunc:Qpe},the=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function nhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],p=l*a,d=u*a,h=c/(a*a),f=o==="NHWC"?[i,p,d,h]:[i,h,p,d],m=[{type:"int32",data:[a]}],g=new the(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var she={kernelName:Zi,backendName:"webgpu",kernelFunc:nhe},q8=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let r=ua(this.activation,this.isVec4);this.hasPreluActivation?e=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {
            ${r}
          }
        `,t="dotProd[i] = activation(dotProd[i], coords);"}let n=this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":"";return`
      ${e}

      ${v3()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = 0;
        let r = i32(globalId.x);
        let c = i32(globalId.y) * 4;
        let d2 = i32(globalId.z) * 4;
        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;
        let d1 = d2;
        let q = 0;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;

        var wVals : array<vec4<f32>, 9>;
        wVals[0] = getW(0, 0, d1, q);
        wVals[1] = getW(0, 1, d1, q);
        wVals[2] = getW(0, 2, d1, q);
        wVals[3] = getW(1, 0, d1, q);
        wVals[4] = getW(1, 1, d1, q);
        wVals[5] = getW(1, 2, d1, q);
        wVals[6] = getW(2, 0, d1, q);
        wVals[7] = getW(2, 1, d1, q);
        wVals[8] = getW(2, 2, d1, q);

        var xVals : array<array<vec4<f32>, 6>, 3>;
        for (var wR = 0; wR < 3; wR = wR + 1) {
          let xR = xRCorner + wR * uniforms.dilation[0];
          for (var wC = 0; wC < 6; wC = wC + 1) {
            let xC = xCCorner + wC * uniforms.dilation[1];
            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {
              xVals[wR][wC] = vec4<f32>(0.0);
            } else {
              xVals[wR][wC] = getX(batch, xR, xC, d1);
            }
          }
        }

        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        for (var wR = 0; wR < 3; wR = wR + 1) {
          for (var wC = 0; wC < 3; wC = wC + 1) {
            let indexW = wR * 3 + wC;
            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];
            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];
            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];
            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d2);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            ${n}
            ${t}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
          }
        }
      }
    `}},X8=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,
      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,
      channelMul : i32,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let r=ua(this.activation,!1);this.hasPreluActivation?e=`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
          let b = getPreluActivationWeightsByOutputCoords(outCoord);
          ${r}
        }`:e=`
          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {
            ${r}
          }
        `,t="dotProd = activation(dotProd, coords);"}let n=this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":"";return`
      ${e}

      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,
          value : f32) {
        let coord = vec4<i32>(batch, row, col, chan);
        if (coordsInBounds4D(coord, uniforms.outShape)) {
          setOutputAtCoords(batch, row, col, chan, value);
        }
      }

      ${Yo()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
        let d2 = coords[3];
        let d1 = d2 / uniforms.channelMul;
        let q = d2 - d1 * uniforms.channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            // Here using a constant value |this.convInfo.filterHeight| instead
            // of uniform value is in order to loop unrolling.
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = getX(batch, xR, xC, d1);
                let wVal = getW(wR, wC, d1, q);
                dotProd = dotProd + xVal * wVal;
              }
            }
          }

        ${n}
        ${t}
        writeResult(batch, coords[1], coords[2], d2, dotProd);
      }
    `}};function rhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s,c=l;c==null&&(c=[1,1]);let p=T.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!0),d=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]}],h;return p.batchSize===1&&p.inHeight===p.outHeight&&p.inWidth===p.outWidth&&p.strideHeight===1&&p.strideWidth===1&&p.filterHeight===p.filterWidth&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.filterHeight===3&&p.inChannels%4===0?h=new q8(p):(h=new X8(p),d.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.outChannels/p.inChannels]})),n.runWebGPUProgram(h,[r,a],r.dtype,d)}var ahe={kernelName:uo,backendName:"webgpu",kernelFunc:rhe},K8=Zn({opSnippet:0,cpuKernelImpl:Pde,supportsComplex:!0}),ohe={kernelName:No,backendName:"webgpu",kernelFunc:K8},ihe=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=T.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Qe()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function qp(e,t,n,s,r){let a=e.shape.length,o=[],i=w.parseAxisParam(t,e.shape),l=i,u=T.getAxesPermutation(l,a),c=e;u!=null&&(c=ea({inputs:{x:e},attrs:{perm:u},backend:r}),l=T.getInnerMostAxes(l.length,a),o.push(c)),T.assertAxesAreInnerMostDims(s,l,a);let[p,d]=T.computeOutAndReduceShapes(c.shape,l),h=p;n&&(h=T.expandShapeToKeepDim(p,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){let m=r.tensorMap.get(c.dataId).values;switch(s){case"max":let g=_de(m,w.sizeFromShape(d),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:A}=Mde(c.shape,c.dtype,m,l);f=r.makeTensorInfo(x,A,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(d),y=w.sizeFromShape(c.shape)/m,x={windowSize:m,inSize:m,batchSize:y,outSize:1},A=s==="mean"?"float32":gp(e.dtype),b=[{type:"int32",data:[m]}],v=new ihe(x,s),k=r.runWebGPUProgram(v,[c],A,b);o.push(k),f=qe({inputs:{x:k},attrs:{shape:h},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function T3(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return qp(r,a,o,"sum",n)}var lhe={kernelName:Bo,backendName:"webgpu",kernelFunc:T3};function uhe(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),p=c.length,d=null,h=o.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(h,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=ea({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let v=0;v<x.length;++v)b.splice(x[v],0,1);w.arraysEqual(A.shape,b)||(A=qe({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=K8({inputs:{a:A,b:d},backend:n}),f.push(d))}m<p-1&&(u[m]>=0&&(d=T3({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeData(m.dataId);return d}var che={kernelName:np,backendName:"webgpu",kernelFunc:uhe},dhe=vn({opType:4}),phe={kernelName:po,backendName:"webgpu",kernelFunc:dhe},hhe=Zn({opSnippet:4,dtype:"bool",cpuKernelImpl:bde}),fhe={kernelName:Yi,backendName:"webgpu",kernelFunc:hhe},Z8=vn({opType:5,cpuKernelImpl:vde,dtype:"float32"}),mhe={kernelName:ho,backendName:"webgpu",kernelFunc:Z8};function iy(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(w.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),qe({inputs:{x:a},backend:s,attrs:{shape:i}})}var ghe={kernelName:Ji,backendName:"webgpu",kernelFunc:iy},yhe=vn({opType:6,cpuKernelImpl:wde}),Ahe={kernelName:Qi,backendName:"webgpu",kernelFunc:yhe},xhe=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Qe()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Dc(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let o=w.getArrayFromDType(a,w.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new xhe(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var bhe={kernelName:Ku,backendName:"webgpu",kernelFunc:Dc},vhe=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},whe={kernelName:el,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new vhe(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},khe=vn({opType:7,cpuKernelImpl:kde}),She={kernelName:fo,backendName:"webgpu",kernelFunc:khe},Ihe=Zn({opSnippet:12,dtype:"int32"}),Che={kernelName:mo,backendName:"webgpu",kernelFunc:Ihe},The=class{constructor(e,t=!1){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.useImport=t,this.shaderKey=`fromPixels_${this.useImport}`}getUserCode(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};

      ${Qe()}
        let flatIndexBase = index * uniforms.numChannels;
        for (var i = 0; i < uniforms.numChannels; i = i + 1) {
          let flatIndex = flatIndexBase + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndexBase);
            let values = ${e};
            result[flatIndex] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},Nhe={kernelName:Md,backendName:"webgpu",kernelFunc:Ehe},pu;function Ehe(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,u=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[c,p]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[p,c,a];if(Y().getBool("WEBGPU_USE_IMPORT")&&o)return c4({externalImage:r,backend:n,attrs:s,outShape:d,useImport:!0});if((o||i)&&(pu==null&&(pu=document.createElement("canvas").getContext("2d")),pu.canvas.width=c,pu.canvas.height=p,pu.drawImage(r,0,0,c,p),r=pu.canvas),u||l||o||i)return c4({externalImage:r,backend:n,attrs:s,outShape:d,useImport:!1});let h=r.data,f=h;if(a!=null&&a!==4){f=new Uint8Array(r.width*r.height*a);let y=h.length,x=0;for(let A=0;A<y;A++)A%4<a&&(f[x++]=h[A])}let m=n.makeTensorInfo(d,"int32"),g=n.tensorMap.get(m.dataId);return g.values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}function c4(e){let{externalImage:t,backend:n,attrs:s,outShape:r,useImport:a}=e,{numChannels:o}=s,i=w.sizeFromShape(r),l=w.computeStrides(r),u=new The(r,a),c=[{type:"uint32",data:[i]},{type:"uint32",data:[o]},{type:"uint32",data:[...l]},{type:"uint32",data:[...u.dispatch]}];return n.runFromPixelsProgram(u,r,c,a,t)}var Rhe=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Qe()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},_he={kernelName:go,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,u=n,c=[s,o,i],p=null;a!=null&&(p=a.shape,c.push(a));let d=null;r!=null&&(d=r.shape,c.push(r));let h=new Rhe(s.shape,o.shape,i.shape,p,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(h,c,s.dtype,f)}};function $he(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(c),g=T.computeConv2DInfo(r.shape,a.shape,l,p,u,d,!1,m);return H8({x:r,filter:a,convInfo:g,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:f,activation:h})}var Dhe={kernelName:Ma,backendName:"webgpu",kernelFunc:$he};function Phe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=c;f==null&&(f=[1,1]),w.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let m=T.computeConv2DInfo(r.shape,a.shape,l,f,u,p,!0),g=[r,a],y=o!=null,x=i!=null;y&&g.push(o),x&&g.push(i);let A=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}],b;return m.batchSize===1&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&m.strideHeight===1&&m.strideWidth===1&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.filterHeight===3&&m.inChannels%4===0?b=new q8(m,y,d,x):(b=new X8(m,y,d,x),A.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),d==="leakyrelu"&&(A.push({type:"float32",data:[h]}),b.uniforms+=" alpha : f32,"),n.runWebGPUProgram(b,g,"float32",A)}var Fhe={kernelName:za,backendName:"webgpu",kernelFunc:Phe},Ohe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${yn(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Mhe(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=w.sizeFromShape(s.shape),[l,u,c,p]=T.prepareAndValidate(s,r),d=qe({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),h=qe({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let x=n.readSync(r.dataId),A=n.bufferSync(s),b=Sde(x,A,s.dtype,u,o,c,p,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new Ohe(o,[u,c]),m=[{type:"int32",data:[o]},{type:"int32",data:p}],g=n.runWebGPUProgram(f,[h,d],h.dtype,m),y=qe({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}var zhe={kernelName:nl,backendName:"webgpu",kernelFunc:Mhe},Lhe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Bhe(this.aShape);return`
      ${Qe()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function Bhe(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)s===2?n.push("indexZ"):n.push(`${t[s]}`);return n.join()}function Y8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=w.parseAxisParam(o,r.shape)[0],u=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),c=w.sizeFromShape(a.shape),p=[],d=qe({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=qe({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(d),p.push(h);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let A=n.tensorMap.get(h.dataId).values,b=We(h.shape,h.dtype,A),k=n.tensorMap.get(d.dataId).values,I=We(d.shape,d.dtype,k),E=Ide(I,b,f);return p.forEach(R=>n.disposeData(R.dataId)),n.makeTensorInfo(u.outputShape,E.dtype,E.values)}let m=new Lhe(d.shape,f),g=n.runWebGPUProgram(m,[d,h],d.dtype);p.push(g);let y=qe({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(x=>n.disposeData(x.dataId)),y}var Whe={kernelName:tl,backendName:"webgpu",kernelFunc:Y8},Vhe=Zn({opSnippet:5,cpuKernelImpl:Tde,dtype:"bool"}),Uhe={kernelName:sl,backendName:"webgpu",kernelFunc:Vhe},Ghe=Zn({opSnippet:6,dtype:"bool",cpuKernelImpl:Cde}),Hhe={kernelName:yo,backendName:"webgpu",kernelFunc:Ghe};function jhe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=[{type:"float32",data:[a]}],i=new Hp(r.shape,14);return i.uniforms="alpha : f32,",n.runWebGPUProgram(i,[r],"float32",o)}var qhe={kernelName:xo,backendName:"webgpu",kernelFunc:jhe},Xhe=Zn({opSnippet:7,dtype:"bool",cpuKernelImpl:Ede}),Khe={kernelName:rl,backendName:"webgpu",kernelFunc:Xhe},Zhe=Zn({opSnippet:8,dtype:"bool",cpuKernelImpl:Nde}),Yhe={kernelName:al,backendName:"webgpu",kernelFunc:Zhe},Jhe=vn({opType:9,cpuKernelImpl:Rde}),Qhe={kernelName:bo,backendName:"webgpu",kernelFunc:Jhe},efe=Zn({opSnippet:9,dtype:"bool"}),tfe={kernelName:ol,backendName:"webgpu",kernelFunc:efe},nfe=vn({opType:10}),sfe={kernelName:ec,backendName:"webgpu",kernelFunc:nfe};function J8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return qp(r,a,o,"max",n)}var rfe={kernelName:vo,backendName:"webgpu",kernelFunc:J8},afe=Zn({opSnippet:15,cpuKernelImpl:$de}),ofe={kernelName:wo,backendName:"webgpu",kernelFunc:afe};function ife(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1,c=T.computePool2DInfo(r.shape,a,o,u,i,l),p,d=[];if(c.filterHeight===1&&c.filterWidth===1){if(w.arraysEqual(c.inShape,c.outShape))return Ms({inputs:{x:r},backend:n});p=new V8(c),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]})}else p=new W8(c,"max"),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]});return n.runWebGPUProgram(p,[r],r.dtype,d)}var lfe={kernelName:ko,backendName:"webgpu",kernelFunc:ife};function ufe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return qp(r,o,a,"mean",n)}var cfe={kernelName:So,backendName:"webgpu",kernelFunc:ufe};function dfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return qp(r,a,o,"min",n)}var pfe={kernelName:Io,backendName:"webgpu",kernelFunc:dfe},hfe=Zn({opSnippet:16,cpuKernelImpl:Dde}),ffe={kernelName:Co,backendName:"webgpu",kernelFunc:hfe},mfe=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,u)=>`uniforms.pad${u}[0]`).join(","),n=this.xShape.map((l,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=yn(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Qe()}
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${i}));
        }
      }
    `}},gfe={kernelName:To,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new mfe(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function yfe(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=Fde(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new Hp(s.shape,11);return n.runWebGPUProgram(r,[s],s.dtype)}var Afe={kernelName:il,backendName:"webgpu",kernelFunc:yfe};function xfe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=Zs.nonMaxSuppressionV3Impl(u,c,o,i,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var bfe={kernelName:ul,backendName:"webgpu",kernelFunc:xfe};function vfe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=o,h=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=Zs.nonMaxSuppressionV5Impl(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var wfe={kernelName:cl,backendName:"webgpu",kernelFunc:vfe};function Hf(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=jp({inputs:{input:s},backend:n}),a=Hf({inputs:{x:r},backend:n}),o=N0({inputs:{input:s},backend:n}),i=Hf({inputs:{x:o},backend:n}),l=_c({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return Dc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var kfe={kernelName:Nl,backendName:"webgpu",kernelFunc:Hf};function Q8(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=jp({inputs:{input:s},backend:n}),a=Q8({inputs:{x:r},backend:n}),o=N0({inputs:{input:s},backend:n}),i=Hf({inputs:{x:o},backend:n}),l=_c({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return Dc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Sfe={kernelName:dl,backendName:"webgpu",kernelFunc:Q8};function Ife(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return iy({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=iy({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=G8({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeData(c.dataId)),u}var Cfe={kernelName:hl,backendName:"webgpu",kernelFunc:Ife},Tfe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=yn(e),n=this.xShape.map((c,p)=>`uniforms.pad${p}[0]`).join(","),s=this.xShape.map((c,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Qe()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${o} || ${i}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},eC=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(u=>w.arraysEqual(u,[0,0])))return Ms({inputs:{x:r},backend:n});if(w.sizeFromShape(r.shape)===0){let u=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return Dc({backend:n,attrs:{shape:u,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(u=>i.push({type:"int32",data:[u[0],u[1]]}));let l=new Tfe(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},Nfe={kernelName:Eo,backendName:"webgpu",kernelFunc:eC},Efe=Zn({opSnippet:13}),Rfe={kernelName:Ro,backendName:"webgpu",kernelFunc:Efe};function _fe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new L8(14,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var $fe={kernelName:_o,backendName:"webgpu",kernelFunc:_fe};function Dfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return qp(r,a,o,"prod",n)}var Pfe={kernelName:$o,backendName:"webgpu",kernelFunc:Dfe},Ffe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=zde(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},Ofe={kernelName:sc,backendName:"webgpu",kernelFunc:Ffe},tC=Zn({opSnippet:3}),Mfe={kernelName:co,backendName:"webgpu",kernelFunc:tC},zfe=vn({opType:12}),Lfe={kernelName:Do,backendName:"webgpu",kernelFunc:zfe},Bfe=vn({opType:13}),Wfe={kernelName:Fo,backendName:"webgpu",kernelFunc:Bfe},Vfe=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Qe()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Ufe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,u]=o,c=a&&l>1?1:0,p=a&&u>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[i?.5:0]}],f=new Vfe(r.shape,l,u);return n.runWebGPUProgram(f,[r],"float32",h)}var Gfe={kernelName:Po,backendName:"webgpu",kernelFunc:Ufe},Hfe=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Qe()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function jfe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=a&&l>1?1:0,p=a&&u>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[a?.5:0]}],f=new Hfe(r.shape,l,u,o);return n.runWebGPUProgram(f,[r],r.dtype,h)}var qfe={kernelName:ac,backendName:"webgpu",kernelFunc:jfe},Xfe=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Qe()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},Kfe={kernelName:El,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Xfe(s.shape,a),[u,c]=T.getImageCenter(o,s.shape[1],s.shape[2]),p=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?p.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):p.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,p)}},Zfe=vn({opType:15,cpuKernelImpl:Lde}),Yfe={kernelName:Oo,backendName:"webgpu",kernelFunc:Zfe},Jfe=class{constructor(e,t,n,s,r,a,o){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.dispatchLayout=Xe(e),this.dispatch=Oe(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}`;let i=yn(r.length);this.uniforms=`sliceDim : i32, strides: ${i}, size: i32,`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="",a="";this.updatesRank===1?(s="coords[0]",r="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.updatesRank===2&&(s="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        let d0 = index / uniforms.updatesShape[1];
        let d1 = index - d0 * uniforms.updatesShape[1];
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${s})`,i=this.type==="int32"?"atomicAdd(&(result[flatIndex]), i32(updateValue));":`
     var assumed = atomicLoad(&(result[flatIndex]));
     var success = 0;
     for (; success == 0;) {
       let new = bitcast<f32>(assumed) + updateValue;
       let newI32 = bitcast<i32>(new);
       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);
       assumed = resValue[0];
       success = resValue[1];
     }
     `;return`
    ${a}

      ${Qe()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue = ${o};
          let flatIndex = getOutputIndexFromCoords(${r});

         ${i}
        }
      }`}};function Qfe(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=T.calculateShapes(a,r,o),d=[p/u,u];if(p===0)return n.makeTensorInfo(o,r.dtype);let h=qe({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=qe({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=Dc({backend:n,attrs:{shape:d,value:0,dtype:m}}),y=w.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:c},{type:"int32",data:[y]}],A=new Jfe(f.shape,i,h.shape.length,f.shape.length,c,d,m),b=n.runWebGPUProgram(A,[f,h],m,x,g),v=qe({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),v}var eme={kernelName:yl,backendName:"webgpu",kernelFunc:Qfe},tme=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${Qe()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function nme(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new tme(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],Tn(r.dtype,a.dtype))}var sme={kernelName:Al,backendName:"webgpu",kernelFunc:nme},rme=vn({opType:18}),ame={kernelName:zo,backendName:"webgpu",kernelFunc:rme},ome=vn({opType:16}),ime={kernelName:Mo,backendName:"webgpu",kernelFunc:ome},lme=vn({opType:17}),ume={kernelName:bl,backendName:"webgpu",kernelFunc:lme},nC=Zn({opSnippet:2,cpuKernelImpl:Gde,supportsComplex:!0}),cme={kernelName:Uo,backendName:"webgpu",kernelFunc:nC};function dme(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=w.parseAxisParam([a],r.shape),i=J8({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),u=qe({inputs:{x:i},backend:n,attrs:{shape:l}}),c=nC({inputs:{a:r,b:u},backend:n}),p=Z8({inputs:{x:c},backend:n}),d=T3({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),h=qe({inputs:{x:d},backend:n,attrs:{shape:l}}),f=tC({inputs:{a:p,b:h},backend:n});return n.disposeData(i.dataId),n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(p.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),f}var pme={kernelName:Wo,backendName:"webgpu",kernelFunc:dme},hme=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let u=[],c=eC({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(p.length,a.length,!1),h=T.getReshapedPermuted(c.shape,a,i,!1),f=qe({inputs:{x:c},backend:n,attrs:{shape:p}}),m=ea({inputs:{x:f},backend:n,attrs:{perm:d}}),g=qe({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>n.disposeData(y.dataId)),g},fme={kernelName:vl,backendName:"webgpu",kernelFunc:hme},mme=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=a,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${s}_${i}`;let l=yn(r.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${l},`;let u="";n===1?u="i":n===2&&(u="i, j"),this.indicesSnippet=`getIndices(${u})`;let c="";s===1?c="i":s===2&&(c="i, coords[1]"),this.updatesSnippet=`getUpdates(${c})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`
      ${Qe()}

        let globalIndex = index * ${this.workPerThread};
        if (globalIndex < uniforms.size) {
          var sum = vec4<f32>(0.0);
          var found = vec4<bool>(false);
          for (var i = 0; i < uniforms.updateSize; i = i + 1) {
            var flattenedIndex = 0;
            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
              let indexInside = i32(round(${this.indicesSnippet}));
              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};
            }
            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
              let curIndex = globalIndex + innerIndex;
              let coords = getCoordsFromIndex(curIndex);
              if (flattenedIndex == coords[0]) {
                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};
                found[innerIndex] = true;
              }
            }
          }
          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {
            let curIndex = globalIndex + innerIndex;
            if (curIndex < uniforms.size)
            {
              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));
            }
          }
        }
      }`}};function gme(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:p}=T.calculateShapes(a,r,i),d=!1,h=[{type:"int32",data:[u]},{type:"int32",data:[l]},{type:"int32",data:c}],f=new mme(u,l,r.shape.length,a.shape.length,c,[p,1],d),m=n.runWebGPUProgram(f,[a,r,o],a.dtype,h),g=qe({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),g}var yme={kernelName:dp,backendName:"webgpu",kernelFunc:gme};function Ame(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=w.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=r.shape.length,c=new Array(u).fill(0),p=r.shape.slice();return l.map(d=>{let h=[...p];h[i]=d;let f=$c({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[i]+=d,f})}var xme={kernelName:wl,backendName:"webgpu",kernelFunc:Ame},bme=vn({opType:19}),vme={kernelName:Lo,backendName:"webgpu",kernelFunc:bme},wme={kernelName:cc,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new Hp(n.shape,20);return s.runWebGPUProgram(r,[n],n.dtype)}},kme=Zn({opSnippet:11}),Sme={kernelName:Vo,backendName:"webgpu",kernelFunc:kme},Ime=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=yn(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Qe()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Cme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Mt.sliceInfo(r.shape,a,o,i,l,u,c,p,d),v;if(m)v=qe({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Mt.computeOutShape(x,A,b),I=$c({inputs:{x:r},backend:n,attrs:{begin:x,size:k}});v=qe({inputs:{x:I},backend:n,attrs:{shape:f}}),n.disposeData(I.dataId)}else if(n.shouldExecuteOnCPU([r])){let I=n.readSync(r.dataId),E=We(r.shape,r.dtype,I),R=Vde(h,E,b,x);v=n.makeTensorInfo(f,r.dtype,R.values)}else{let I=new Ime(h),E=[{type:"int32",data:x},{type:"int32",data:b}],R=n.runWebGPUProgram(I,[r],r.dtype,E);v=qe({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}return v}var Tme={kernelName:kl,backendName:"webgpu",kernelFunc:Cme};function Nme(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=Ude(d,h,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var Eme={kernelName:pp,backendName:"webgpu",kernelFunc:Nme},Rme=vn({opType:21}),_me={kernelName:Go,backendName:"webgpu",kernelFunc:Rme},$me=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Dme(this.rank,"uniforms.");return`
      ${Qe()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Dme(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function Pme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>w.decodeString(d)):l,c=We(r.shape,r.dtype,u),p=Hde(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let o=new $me(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var Fme={kernelName:sa,backendName:"webgpu",kernelFunc:Pme},Ome=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Qe()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Mme=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Qe()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function hu(e,t){t!==null&&e.disposeData(t.dataId)}function d4(e){let t=1;for(;t<e;)t*=2;return t}function zme(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let v=n.readSync(r.dataId),[k,I]=jde(v,i,r.dtype,a,o);return[n.makeTensorInfo(k.shape,k.dtype,k.values),n.makeTensorInfo(I.shape,I.dtype,I.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[r,Dc({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let c=w.sizeFromShape(i)/l,p=qe({inputs:{x:r},attrs:{shape:[c,l]},backend:n}),d=d4(a),h=d4(l),f=null,m=()=>f===null?[p,p]:[p,f],g=(v,k,I)=>{let E=m(),R=new Ome(I),_=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[v]},{type:"int32",data:[k]}],D=f;f=n.runWebGPUProgram(R,E,"int32",_),hu(n,D)};for(let v=1;v<d;v*=2){let k=v*2;for(let I=v;I>=1;I/=2)g(k,I,[c,h])}for(let v=h;v>d;v/=2){let k=m(),I=new Mme([c,v/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],P=f;f=n.runWebGPUProgram(I,k,"int32",R),hu(n,P);let _=d/2,D=_*2;for(let C=_;C>=1;C/=2)g(D,C,f.shape)}let y=f;f=$c({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,a]}}),hu(n,y);let x=Y8({inputs:{x:p,indices:f},backend:n,attrs:{axis:1,batchDims:1}});hu(n,p);let A=i.slice(0,-1);A.push(a),y=f,f=qe({inputs:{x:f},attrs:{shape:A},backend:n}),hu(n,y);let b=x;return x=qe({inputs:{x},attrs:{shape:A},backend:n}),hu(n,b),[x,f]}var Lme={kernelName:Il,backendName:"webgpu",kernelFunc:zme},Bme=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Xe(this.outputShape),this.dispatch=Oe(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Qe()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function Wme(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=new Bme(g),x=o==="nearest"?1:2,A;switch(i){case"constant":A=1;break;case"reflect":A=2;break;case"wrap":A=3;break;case"nearest":A=4;break;default:A=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[A]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[r,a],"float32",b)}var Vme={kernelName:Cl,backendName:"webgpu",kernelFunc:Wme};function Ume(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1),c=0;for(let m=0;m<i;m++)m!==a&&(u[c++]=o.shape[m]);let p=[],d=new Array(i).fill(0),h=o.shape.slice();h[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;let g=$c({inputs:{x:o},backend:n,attrs:{begin:d,size:h}}),y=qe({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=y,p.push(g)}return p.forEach(m=>n.disposeData(m.dataId)),f}var Gme={kernelName:Tl,backendName:"webgpu",kernelFunc:Ume},Hme=[pde,Kde,Yde,epe,ope,lpe,cpe,ppe,ype,vpe,kpe,Tpe,gde,_pe,Lpe,Upe,Hpe,qpe,Zpe,Jpe,ehe,she,ahe,che,phe,fhe,mhe,ghe,Ahe,bhe,whe,Nhe,She,Che,_he,Dhe,Fhe,zhe,Whe,Uhe,Hhe,mde,Epe,qhe,Khe,Yhe,Qhe,tfe,sfe,rfe,ofe,lfe,cfe,pfe,ffe,gfe,ohe,Afe,bfe,wfe,Ape,Sfe,Cfe,Nfe,Rfe,$fe,Pfe,Ofe,xpe,Mfe,Lfe,Wfe,cde,Gfe,qfe,Kfe,Yfe,eme,sme,ame,ime,ume,mpe,Tme,Eme,pme,fme,yme,xme,vme,wme,Sme,cme,lhe,_me,Fme,Lme,Vme,rpe,Gme,kfe];for(let e of Hme)Xs(e);var jme=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=p4(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=p4(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function p4(e,t){return`${e}_${t}`}var qme=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,s){let r=f4(n),a=e*t*r,o=h4(e,t,n,s);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;let l=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(l),l}this.numBytesAllocated+=a;let i=this.device.createTexture({size:[e,t],format:n,usage:s});return this.usedTextures.get(o).push(i),i}releaseTexture(e,t,n,s,r){if(this.freeTextures.size===0)return;let a=h4(t,n,s,r);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let o=this.usedTextures.get(a),i=o.indexOf(e);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(i,1);let l=f4(s),u=t*n*l;this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function h4(e,t,n,s){return`${e}_${t}_${n}_${s}`}function f4(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}var Xme=(e,t,n,s,r)=>{let a=[s,...n];return r&&a.push(r),e.createBindGroup({layout:t,entries:a.map((o,i)=>({binding:i,resource:o}))})},m4=(e,t,n,s,r,a=!1)=>{let o={dtype:r.dtype,shape:r.shape},i=Yce(s,o,t,a),l=e.createShaderModule({code:i,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function g4(e,t,n=[],s="",r=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(o=>o.length).join(",")+n.join(",")+e.variableNames.join(",")+s+r}var Kme=Y().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),y4=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,s=t.dispatchLayout,r=t.dispatch;if(r.every(o=>o<=n))return r;w.assert(r[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(r[0]));return a>n?(a=Math.ceil(Math.cbrt(r[0])),w.assert(a<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]},sC=class extends Ou{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.textureDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,this.fromPixelTextureLayout=null,this.fromPixelImportTextureLayout=null,!S3())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new jme(this.device),this.textureManager=new qme(this.device),this.tensorMap=new Zd(this,rn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return sC.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach(e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)}),this.uniformDisposalQueue.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage)),this.stagingDisposalQueue.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage)),this.textureDisposalQueue.forEach(e=>this.textureManager.releaseTexture(e.texture,e.width,e.height,e.format,e.usage)),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.textureDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:s}=this.tensorMap.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}getTextureManager(){return this.textureManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);t!=null&&t.bufferInfo.buffer!=null&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()},r=w.sizeFromShape(t)*sy(n);return this.tensorMap.set(s,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a=w.sizeFromShape(n)*sy(s);this.tensorMap.set(e,{dtype:s,values:t,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(e.values!=null)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),t!=null&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Y().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=T.mergeRealAndImagArrays(a,o)}else{let r=await this.getBufferData(t);s=O8(r,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(s=>w.decodeString(s))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=w.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=w.sum(i),o.getExtraProfileInfo=()=>i.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.bufferInfo.buffer==null&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let n=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),s=n.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),n.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(n,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:n};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0,n=[];e.forEach(o=>{o.data.length===0&&(o.data=[1]);let i;switch(o.data.length){case 1:i=4;break;case 2:i=8;break;case 3:i=16;break;case 4:i=16;break;default:w.assert(!1,()=>`Unsupported ${o.data.length}D shape`)}t=Math.ceil(t/i)*i,n.push(t),t+=o.data.length*4});let s=new ArrayBuffer(t);e.forEach((o,i)=>{let l=n[i];o.type==="int32"?new Int32Array(s,l,o.data.length).set(o.data):o.type==="uint32"?new Uint32Array(s,l,o.data.length).set(o.data):new Float32Array(s,l,o.data.length).set(o.data)});let r=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(r,0,s,0,t);let a={byteSize:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:r};return this.uniformDisposalQueue.push(a),{offset:0,size:t,buffer:r}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let r=0;r<e;r++)t.push({binding:r+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,s,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),w.sizeFromShape(r.shape)===0){let k=this.tensorMap.get(r.dataId);return k.values=w.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}e.dispatch=y4(this.device,e);let a=[{type:"float32",data:[NaN]}],o=t.concat(r).map(k=>k.shape),i="int32";o.map(k=>{a.push({type:i,data:k})});let l=w.computeStrides(r.shape);if(a.push({type:i,data:l}),e.size){let k=w.sizeFromShape(e.outputShape);a.push({type:i,data:[e.isVec4?k/4:k]})}s&&(a=[...a,...s]);let u=this.makeUniforms(a),c=t.map((k,I)=>{if(k.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(k.dataId),{dtype:this.tensorMap.get(k.dataId).dtype,shape:k.shape,name:e.variableNames[I]}}),p=c.map(k=>k.dtype).concat(r.dtype),d=c.map(k=>T.getBroadcastDims(k.shape,r.shape)),h=c.map(k=>w.arraysEqual(k.shape,r.shape)).join("_"),f=d.map(k=>k.join("_")).join(";"),m=g4(e,o,p,f,h),{bindGroupLayout:g,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),x=this.getAndSavePipeline(m,()=>m4(this.device,e,y,c,r)),A=this.activeTimers!=null,b=Xme(this.device,g,t.map(k=>this.tensorToBinding(k)),this.tensorToBinding(r),u);this.ensureCommandEncoderReady();let v=this.getComputePass();return A&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,0),v.setPipeline(x),v.setBindGroup(0,b),v.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),A&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(k=>{this.commandQueueOwnedIds.add(k.dataId)}),this.commandQueueOwnedIds.add(r.dataId),Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),A&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}getFromPixelTextureLayout(e){return e?(this.fromPixelImportTextureLayout===null&&(this.fromPixelImportTextureLayout=this.createFromPixelTextureLayout(!0)),this.fromPixelImportTextureLayout):(this.fromPixelTextureLayout===null&&(this.fromPixelTextureLayout=this.createFromPixelTextureLayout(!1)),this.fromPixelTextureLayout)}createFromPixelTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),e?t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}):t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=this.device.createBindGroupLayout({entries:t}),s=this.device.createPipelineLayout({bindGroupLayouts:[n]});return{bindGroupLayout:n,pipelineLayout:s}}copyExternalImageToTexture(e,t){let n=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,s="rgba8unorm",r=this.textureManager.acquireTexture(t[1],t[0],s,n),a=r.createView();this.queue.copyExternalImageToTexture({source:e},{texture:r},[t[1],t[0]]);let o={width:t[1],height:t[0],format:s,usage:n,texture:r};return this.textureDisposalQueue.push(o),a}runFromPixelsProgram(e,t,n,s,r){e.dispatch=y4(this.device,e);let a=this.makeTensorInfo(t,"int32");if(w.sizeFromShape(a.shape)===0){let m=this.tensorMap.get(a.dataId);return m.values=w.getTypedArrayFromDType(a.dtype,0),a}this.uploadToGPU(a.dataId);let o=g4(e,[a.shape]),i=this.getFromPixelTextureLayout(s),l=this.getAndSavePipeline(o,()=>m4(this.device,e,i.pipelineLayout,[],a,!0)),u;if(s){let m={source:r};u=this.device.importExternalTexture(m)}else u=this.copyExternalImageToTexture(r,a.shape);let c=this.tensorToBinding(a),p=this.makeUniforms(n),d=this.device.createBindGroup({layout:i.bindGroupLayout,entries:[{binding:0,resource:{buffer:c.buffer}},{binding:1,resource:u},{binding:2,resource:{buffer:p.buffer}}]});this.ensureCommandEncoderReady();let h=this.getComputePass(),f=this.activeTimers!=null;return f&&this.supportTimeQuery&&h.writeTimestamp(this.querySet,0),h.setPipeline(l),h.setBindGroup(0,d),h.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),f&&this.supportTimeQuery&&h.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(a.dataId),this.dispatchNumberInEncoder++,Y().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),f&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=Kme){return Y().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).bufferInfo.buffer==null&&w.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},N3=sC;N3.nextDataId=0;var rC={};Le(rC,{WebGPUBackend:()=>N3,webgpu_util:()=>P8});S3()&&_l("webgpu",async()=>{Y().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Y().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,s={},r=t.features.has("timestamp-query");s.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension},r?s.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let a=await t.requestDevice(s);return new N3(a,r)},3);var Ut=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(Ut||{}),E0=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(E0||{}),aC;function Zme(e){aC=e.wasm.cwrap(Oa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Yme(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=s,d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let E=n.dataIdMap.get(o.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);f=E.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=E0[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],x=u?a.shape[1]:a.shape[2],A=Rl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...A,y,x],r.dtype),v=n.dataIdMap.get(b.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),I=new Uint8Array(new Int32Array(a.shape).buffer);return aC(d,k,r.shape.length,h,I,a.shape.length,l,u,g,f,m,p||0,v),b}var Jme={kernelName:Oa,backendName:"wasm",setupFunc:Zme,kernelFunc:Yme};function wn(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,u=o.makeOutput(i.shape,t||i.dtype),c=o.dataIdMap.get(u.dataId).id;return w.sizeFromShape(u.shape)===0||n(l,Ut[i.dtype],c),u}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var Qme=wn(Hi);function Yn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:u,b:c}=l,p=i.dataIdMap.get(u.dataId).id,d=i.dataIdMap.get(c.dataId).id,h=n!=null?n:u.dtype,f=T.assertAndGetBroadcastShape(u.shape,c.shape),m=i.makeOutput(f,h);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(c.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>s(p,g,u.shape.length,d,y,c.shape.length,Ut[u.dtype],x))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var e0e=!0,t0e=Yn(ta,e0e),oC;function n0e(e){oC=e.wasm.cwrap(Ja,null,["array","number","number","number"])}function s0e(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return oC(a,r.length,Ut[s.dtype],o),s}var r0e={kernelName:Ja,backendName:"wasm",setupFunc:n0e,kernelFunc:s0e};function R0(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var a0e={kernelName:Ao,backendName:"wasm",kernelFunc:R0},iC;function o0e(e){iC=e.wasm.cwrap(Ho,null,["number","array","number","number","number","array","number"])}function Za(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=l0e(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=i0e(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=R0({inputs:t,backend:n});return f.shape=i,f}let u=n.makeOutput(i,l.dtype),c=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return iC(c,h,l.shape.length,Ut[l.dtype],p,d,a.length),u}function i0e(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function l0e(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var u0e={kernelName:Ho,backendName:"wasm",kernelFunc:Za,setupFunc:o0e};function Jo(e,t,n){let s=e.shape,r=e.shape.length,a=w.parseAxisParam(t,s),o=a,i=T.getAxesPermutation(o,r),l=null,u=!1;if(i!=null){let c=new Array(r);for(let h=0;h<c.length;h++)c[h]=s[i[h]];o=T.getInnerMostAxes(o.length,r),l=Za({inputs:{x:e},attrs:{perm:i},backend:n});let p=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==p&&(u=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:u}}var lC;function c0e(e){lC=e.wasm.cwrap(Bu,null,["number, number, number"])}function d0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Jo(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("all",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;lC(l,y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var p0e={kernelName:Bu,backendName:"wasm",setupFunc:c0e,kernelFunc:d0e},uC;function h0e(e){uC=e.wasm.cwrap(Wu,null,["number, number, number"])}function f0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Jo(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("any",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;uC(l,y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var m0e={kernelName:Wu,backendName:"wasm",setupFunc:h0e,kernelFunc:f0e},cC;function g0e(e){cC=e.wasm.cwrap(Qa,null,["number","number","number","number","number"])}function y0e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:u,axes:c,inputWasTransposed:p}=Jo(a,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;y!==o&&(l=u,i=y)}let d=l.shape.slice(0,-1),h=t.makeOutput(d,"int32"),f=t.dataIdMap.get(h.dataId).id,m=w.sizeFromShape(h.shape),g=l.shape[c[0]];return cC(i,Ut[l.dtype],m,g,f),p&&t.disposeData(u.dataId),h}var A0e={kernelName:Qa,backendName:"wasm",kernelFunc:y0e,setupFunc:g0e},dC;function x0e(e){dC=e.wasm.cwrap(eo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function b0e(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=n,c=T.computePool2DInfo(r.shape,o,i,1,l,u),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,x=c.strideWidth,A=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let b=s.makeOutput(c.outShape,"float32"),v=s.dataIdMap.get(b.dataId).id;return dC(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,y,x,A,v),b}var v0e={kernelName:eo,backendName:"wasm",setupFunc:x0e,kernelFunc:b0e};function ns(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),o=w.inferFromImplicitShape(r,a);return w.assert(a===w.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var w0e={kernelName:fl,backendName:"wasm",kernelFunc:ns},pC;function k0e(e){pC=e.wasm.cwrap(to,null,["number","array","number","number","array","number","number","number","number"])}function S0e(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],p=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],h=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),y=w.sizeFromShape(m),A=Rl.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);w.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,c,d]:[g,d,c],v=i?[y,h,p]:[y,p,h],k=ns({inputs:{x:r},backend:n,attrs:{shape:b}}),I=ns({inputs:{x:a},backend:n,attrs:{shape:v}}),E=n.dataIdMap.get(k.dataId).id,R=n.dataIdMap.get(I.dataId).id,P=o?k.shape[2]:k.shape[1],_=i?I.shape[1]:I.shape[2],D=Math.max(g,y),C=n.makeOutput([D,P,_],k.dtype),F=n.dataIdMap.get(C.dataId).id,U=new Uint8Array(new Int32Array(k.shape).buffer),X=new Uint8Array(new Int32Array(I.shape).buffer);return pC(E,U,k.shape.length,R,X,I.shape.length,o,i,F),n.disposeData(k.dataId),n.disposeData(I.dataId),C.shape=A,C}var I0e={kernelName:to,backendName:"wasm",setupFunc:k0e,kernelFunc:S0e};function Vi(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=Mt.parseSliceParams(t,n,s),i=Mt.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),u=r.makeOutput(o,t.dtype),c=w.computeStrides(t.shape),p=r.dataIdMap.get(u.dataId);if(i){let f=Mt.computeFlatOffset(a,c);return t.dtype==="string"?p.stringBytes=l.slice(f,f+w.sizeFromShape(o)):r.typedArrayFromHeap(u).set(l.subarray(f,f+w.sizeFromShape(o))),u}if(t.dtype==="string"){let f=Bf(l,a,o,t.shape,t.dtype);return p.stringBytes=f,u}let d=r.typedArrayFromHeap(u),h=t.shape.length;if(h===2)C0e(l,c[0],d,a,o);else if(h===3)T0e(l,c[0],c[1],d,a,o);else if(h===4)N0e(l,c[0],c[1],c[2],d,a,o);else{let f=Bf(l,a,o,t.shape,t.dtype);d.set(f)}return u}function C0e(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let u=o;u<l;u++){let c=u*t+i;n.set(e.subarray(c,c+r[1]),a),a+=r[1]}}function T0e(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],u=r[2],c=i+a[0],p=l+a[1];for(let d=i;d<c;d++)for(let h=l;h<p;h++){let f=d*t+h*n+u;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function N0e(e,t,n,s,r,a,o){let i=0,l=a[0],u=a[1],c=a[2],p=l+o[0],d=u+o[1],h=c+o[2],f=a[3];for(let m=l;m<p;m++)for(let g=u;g<d;g++)for(let y=c;y<h;y++){let x=m*t+g*n+y*s+f;r.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var E0e={kernelName:xl,backendName:"wasm",kernelFunc:Vi};function R0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),p=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),h=ns({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Za({inputs:{x:h},backend:n,attrs:{perm:u}}),m=ns({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Vi({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var _0e={kernelName:ji,backendName:"wasm",kernelFunc:R0e};function Xp(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var $0e={kernelName:no,backendName:"wasm",kernelFunc:Xp},D0e=wn(so),hC;function P0e(e){hC=e.wasm.cwrap(na,null,["number","number","number","number"])}function F0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return hC(i,a,o,u),l}var O0e={kernelName:na,backendName:"wasm",setupFunc:P0e,kernelFunc:F0e};function fC(e){let{inputs:t,backend:n}=e,s=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=T.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>w.sizeFromShape(h.shape)>0);if(a.length===1)return R0({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(w.sizeFromShape(r)===0)return o;let i=a.map(h=>h.shape);if(T.assertParamsConsistent(i,s),a[0].dtype==="string"){let h=a.map(A=>{let b=w.sizeFromShape(A.shape.slice(s));return ns({inputs:{x:A},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(A=>({vals:n.readSync(A.dataId),shape:A.shape}));r=T.computeOutShape(h.map(A=>A.shape),1);let m=h[0].shape[0]===1,g=Jx(f,r,t[0].dtype,m),y=T.computeOutShape(a.map(A=>A.shape),s);o.shape=y;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=T.fromStringArrayToUint8(g),h.forEach(A=>n.disposeData(A.dataId)),o}let l=w.sizeFromShape(a[0].shape.slice(0,s)),u=0,c=a.map(h=>{let f=w.sizeFromShape(h.shape.slice(s));return u+=f,f}),p=a.map(h=>n.typedArrayFromHeap(h)),d=n.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*u;for(let m=0;m<p.length;m++){let g=c[m],y=h*g,x=p[m].subarray(y,y+g);d.set(x,f),f+=g}}return o}var M0e={kernelName:qi,backendName:"wasm",kernelFunc:fC},mC;function z0e(e){mC=e.wasm.cwrap(ro,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function L0e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p,dataFormat:d}=n,h=T.convertConv2DDataFormat(d),f=T.computeConv2DInfo(r.shape,a.shape,l,u,c,p,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,A=f.padInfo.bottom,b=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,E=f.strideWidth,R=f.inChannels,P=f.outChannels,_=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let D=s.makeOutput(f.outShape,"float32"),C=s.dataIdMap.get(D.dataId).id;return mC(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,x,A,b,_,v,k,I,E,R,P,C),D}var B0e={kernelName:ro,backendName:"wasm",setupFunc:z0e,kernelFunc:L0e},gC;function W0e(e){gC=e.wasm.cwrap(ao,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function V0e(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,inputShape:c}=s,p=1,d=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(c,a.shape,o,p,i,u,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:x,inWidth:A,outChannels:b,outHeight:v,outWidth:k,strideHeight:I,strideWidth:E}=h,R=m-1-h.padInfo.top,P=g-1-h.padInfo.left,_=h.dataFormat==="channelsLast",D=w.computeStrides(h.inShape),C=w.computeStrides(r.shape),[F,U,X]=w.computeStrides(a.shape),z=D[0],Z=_?D[1]:D[2],B=_?D[2]:1,ee=_?1:D[1],Q=C[0],ae=_?C[1]:C[2],J=_?C[2]:1,re=_?1:C[1],ie=t.makeOutput(h.inShape,"float32"),me=t.dataIdMap.get(ie.dataId).id,be=t.dataIdMap.get(r.dataId).id,Ee=t.dataIdMap.get(a.dataId).id;return gC(be,Ee,f,m,g,x,A,y,v,k,b,I,E,R,P,F,U,X,z,Z,B,ee,Q,ae,J,re,me),ie}var U0e={kernelName:ao,backendName:"wasm",setupFunc:W0e,kernelFunc:V0e},G0e=wn(oo),H0e=wn(io),yC=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(yC||{}),AC;function j0e(e){AC=e.wasm.cwrap(Ki,null,["number","number","number","number","array","number","number","number","number","number"])}function q0e(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:u}=n,c=l.shape[0],[p,d]=o,h=[c,p,d,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Xp({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(u.dataId).id,A=t.makeOutput(h,"float32"),b=t.dataIdMap.get(A.dataId).id,v=new Uint8Array(new Int32Array(i.shape).buffer);return AC(g,y,x,c,v,p,d,yC[r],a,b),m!=null&&t.disposeData(m.dataId),A}var X0e={kernelName:Ki,backendName:"wasm",setupFunc:j0e,kernelFunc:q0e},xC;function K0e(e){xC=e.wasm.cwrap(Xi,null,["number","number","number","number","number","number"])}function Z0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([a],l),c=r;u!==null&&(c=Za({inputs:{x:r},attrs:{perm:u},backend:n}));let p=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[p],l);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;xC(f,o?1:0,i?1:0,h,m,Ut[r.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=Za({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var Y0e={kernelName:Xi,backendName:"wasm",setupFunc:K0e,kernelFunc:Z0e},bC;function J0e(e){bC=e.wasm.cwrap(lo,null,["number","number","number","number","number","number"])}function Q0e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([a],l),c=r;u!==null&&(c=Za({inputs:{x:r},attrs:{perm:u},backend:n}));let p=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[p],l);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;bC(f,o?1:0,i?1:0,h,m,Ut[r.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=Za({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var e2e={kernelName:lo,backendName:"wasm",setupFunc:J0e,kernelFunc:Q0e},vC;function t2e(e){vC=e.wasm.cwrap(Zi,null,["number","number","number","array","number","array","array","number","number"])}function n2e(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],p=l*a,d=u*a,h=c/(a*a),f=o==="NHWC"?[i,p,d,h]:[i,h,p,d],m=t.makeOutput(f,"float32"),y=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),v=t.dataIdMap.get(m.dataId).id;return vC(y,a,o==="NHWC"?1:0,x,r.shape.length-1,A,b,f.length,v),m}var s2e={kernelName:Zi,backendName:"wasm",setupFunc:t2e,kernelFunc:n2e},wC;function r2e(e){wC=e.wasm.cwrap(uo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function a2e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p}=n,d=u==null?[1,1]:u,h=T.computeConv2DInfo(r.shape,a.shape,l,d,c,p,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,x=h.padInfo.bottom,A=h.padInfo.left,b=h.dilationHeight,v=h.dilationWidth,k=h.strideHeight,I=h.strideWidth,E=h.inChannels,R=h.outChannels,P=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let _=s.makeOutput(h.outShape,"float32"),D=s.dataIdMap.get(_.dataId).id;return wC(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,x,A,P,b,v,k,I,E,R,D),_}var o2e={kernelName:uo,backendName:"wasm",setupFunc:r2e,kernelFunc:a2e},i2e=wn(po),l2e=!1,u2e=Yn(Yi,l2e,"bool"),c2e=wn(ho,"float32");function ly(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(w.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),ns({inputs:{x:r},backend:s,attrs:{shape:i}})}var d2e={kernelName:Ji,backendName:"wasm",kernelFunc:ly};function kC(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var p2e={kernelName:Ku,backendName:"wasm",kernelFunc:kC},SC;function h2e(e){SC=e.wasm.cwrap(el,null,["number","number","number","number","number","number"])}function f2e(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,u,c]=s.shape;return SC(a,i,l,u,c,o),r}var m2e={kernelName:el,backendName:"wasm",kernelFunc:f2e,setupFunc:h2e},g2e=wn(fo),y2e=!1,A2e=Yn(mo,y2e),IC;function x2e(e){IC=e.wasm.cwrap(go,null,["number","number","number","number","number","number","number"])}function b2e(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:u}=n,c=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=u!=null?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return IC(c,p,d,h,f,r,g),m}var v2e={kernelName:go,backendName:"wasm",setupFunc:x2e,kernelFunc:b2e},CC;function w2e(e){CC=e.wasm.cwrap(Ma,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function k2e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,c,u,d),g=E0[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let J=s.dataIdMap.get(o.dataId);if(J.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==A)throw new Error(`FusedConv2D bias shape (${J.shape}) does not match the number of output channels (${A})`);b=J.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,P=m.padInfo.left,_=m.dilationHeight,D=m.dilationWidth,C=m.strideHeight,F=m.strideWidth,U=m.inChannels,X=m.padInfo.type==="SAME"?1:0,z=m.batchSize,Z=m.inHeight,B=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ee=s.makeOutput(m.outShape,"float32"),Q=s.dataIdMap.get(ee.dataId).id,ae=i==null?0:s.dataIdMap.get(i.dataId).id;return CC(y,z,Z,B,x,v,k,b,I,E,R,P,X,_,D,C,F,U,A,g,ae,f||0,Q),ee}var S2e={kernelName:Ma,backendName:"wasm",setupFunc:w2e,kernelFunc:k2e},TC;function I2e(e){TC=e.wasm.cwrap(za,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function C2e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!0),g=E0[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let J=s.dataIdMap.get(o.dataId);if(J.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==A)throw new Error(`FusedDepthwiseConv2D bias shape (${J.shape}) does not match the number of output channels (${A})`);b=J.id}let v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,E=m.padInfo.right,R=m.padInfo.bottom,P=m.padInfo.left,_=m.dilationHeight,D=m.dilationWidth,C=m.strideHeight,F=m.strideWidth,U=m.inChannels,X=m.padInfo.type==="SAME"?1:0,z=m.batchSize,Z=m.inHeight,B=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ee=s.makeOutput(m.outShape,"float32"),Q=s.dataIdMap.get(ee.dataId).id,ae=i==null?0:s.dataIdMap.get(i.dataId).id;return TC(y,z,Z,B,x,v,k,b,I,E,R,P,X,_,D,C,F,U,A,g,ae,f||0,Q),ee}var T2e={kernelName:za,backendName:"wasm",setupFunc:I2e,kernelFunc:C2e},NC;function N2e(e){NC=e.wasm.cwrap(nl,null,["number","number","number","number","number","number","array","number"])}function E2e(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=Sy.prepareAndValidate(s,r),u=t.makeOutput(a,s.dtype);if(o===0)return u;let c=r.shape,p=c[c.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=t.dataIdMap.get(u.dataId).id;return NC(h,Ut[s.dtype],m,o,p,i,g,y),u}var R2e={kernelName:nl,backendName:"wasm",setupFunc:N2e,kernelFunc:E2e},EC;function _2e(e){EC=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function $2e(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=w.parseAxisParam(o,r.shape)[0],u=t.readSync(a.dataId),c=r.shape[l];for(let R=0;R<u.length;++R){let P=u[R];w.assert(P<=c-1&&P>=0,()=>`GatherV2: the index value ${P} is not in [0, ${c-1}]`)}let p=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),d=ns({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),h=w.sizeFromShape(a.shape),f=ns({inputs:{x:a},attrs:{shape:[p.batchSize,h/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],g=t.makeOutput(m,r.dtype);if(w.sizeFromShape(r.shape)===0)return g;let y=d.shape.length-1,A=t.dataIdMap.get(d.dataId).id,v=t.dataIdMap.get(f.dataId).id,k=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(w.computeStrides(d.shape)).buffer),E=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return EC(A,Ut[r.dtype],I,y,v,p.batchSize,E,k),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var D2e={kernelName:tl,backendName:"wasm",setupFunc:_2e,kernelFunc:$2e},P2e=!1,F2e=Yn(sl,P2e,"bool"),O2e=!1,M2e=Yn(yo,O2e,"bool"),RC;function z2e(e){RC=e.wasm.cwrap(xo,null,["number","number","number","number"])}function L2e(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;RC(r,Ut[t.dtype],n,o)}return a}var B2e={kernelName:xo,backendName:"wasm",setupFunc:z2e,kernelFunc:L2e},W2e=!1,V2e=Yn(rl,W2e,"bool"),U2e=!1,G2e=Yn(al,U2e,"bool"),H2e=wn(bo),j2e=!1,q2e=Yn(ol,j2e,"bool"),_C;function X2e(e){_C=e.wasm.cwrap(vo,null,["number","number","number","number"])}function K2e(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Jo(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("max",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=w.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(w.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;_C(l,Ut[o.dtype],y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Z2e={kernelName:vo,backendName:"wasm",setupFunc:X2e,kernelFunc:K2e},Y2e=!1,J2e=Yn(wo,Y2e),$C;function Q2e(e){$C=e.wasm.cwrap(ko,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function e1e(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;w.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=n,c=T.computePool2DInfo(r.shape,o,i,1,l,u),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,x=c.dilationWidth,A=c.strideHeight,b=c.strideWidth,v=c.inChannels,k=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let I=s.makeOutput(c.outShape,"float32"),E=s.dataIdMap.get(I.dataId).id;return $C(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,y,x,A,b,v,k,E),I}var t1e={kernelName:ko,backendName:"wasm",setupFunc:Q2e,kernelFunc:e1e},DC;function n1e(e){DC=e.wasm.cwrap(So,null,["number, number, number"])}function s1e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Jo(o,r,t),f=p;if(h){let b=t.dataIdMap.get(c.dataId).id;b!==i&&(u=c,l=b,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(g),x=u;u.dtype!=="float32"&&(x=Xp({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let A=t.makeOutput(m,"float32");if(w.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(A.dataId).id;DC(l,y,b)}if(h&&t.disposeData(c.dataId),a){let b=T.expandShapeToKeepDim(A.shape,d);A.shape=b}return u.dtype!=="float32"&&t.disposeData(x.dataId),A}var r1e={kernelName:So,backendName:"wasm",setupFunc:n1e,kernelFunc:s1e},PC;function a1e(e){PC=e.wasm.cwrap(Io,null,["number","number","number","number"])}function o1e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Jo(o,r,t);if(h){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A)}let f=u.shape.length;T.assertAxesAreInnerMostDims("min",p,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,p),y=w.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(w.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;PC(l,Ut[o.dtype],y,A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var i1e={kernelName:Io,backendName:"wasm",setupFunc:a1e,kernelFunc:o1e},l1e=!1,u1e=Yn(Co,l1e),FC=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(FC||{}),OC;function c1e(e){OC=e.wasm.cwrap(To,null,["number","array","number","number","array","array","number","number"])}function d1e(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),c=s.map(f=>f[0]),p=s.map(f=>f[1]),d=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(p).buffer);return OC(o,u,t.shape.length,Ut[t.dtype],d,h,FC[r],l),i}var p1e={kernelName:To,backendName:"wasm",kernelFunc:d1e,setupFunc:c1e},h1e=!0,f1e=Yn(No,h1e),m1e=wn(il);function E3(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var MC;function g1e(e){MC=e.wasm.cwrap(ul,"number",["number","number","number","number","number"])}function y1e(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,u=t.dataIdMap.get(i.dataId).id,c=t.dataIdMap.get(l.dataId).id,p=MC(u,c,a,r,o),{pSelectedIndices:d,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=E3(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",d)}var A1e={kernelName:ul,backendName:"wasm",setupFunc:g1e,kernelFunc:y1e},zC;function x1e(e){zC=e.wasm.cwrap(nc,"number",["number","number","number","number","number","bool"])}function b1e(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=zC(c,p,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=E3(t,d);t.wasm._free(m);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([],"int32",g);return[y,x]}var v1e={kernelName:nc,backendName:"wasm",setupFunc:x1e,kernelFunc:b1e},LC;function w1e(e){LC=e.wasm.cwrap(cl,"number",["number","number","number","number","number","number"])}function k1e(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,d=LC(c,p,a,r,o,i),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=E3(t,d);t.wasm._free(g);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([f],"float32",m);return[y,x]}var S1e={kernelName:cl,backendName:"wasm",setupFunc:w1e,kernelFunc:k1e},I1e=!1,C1e=Yn(ll,I1e,"bool"),BC;function T1e(e){BC=e.wasm.cwrap(pl,null,["number","number","number","number","number"])}function N1e(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:i}=s,l=n.makeOutput([...r.shape,a],"int32"),u=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(r.dataId).id;return BC(p,a,o,i,u),l}var E1e={kernelName:pl,backendName:"wasm",setupFunc:T1e,kernelFunc:N1e};function R1e(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var _1e={kernelName:dl,backendName:"wasm",kernelFunc:R1e};function $1e(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return ly({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let p=ly({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(p),p}),u=fC({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeData(c.dataId)),u}var D1e={kernelName:hl,backendName:"wasm",kernelFunc:$1e},WC;function P1e(e){WC=e.wasm.cwrap(Eo,null,["number","array","number","number","array","array","number","number"])}function F1e(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(w.sizeFromShape(t.shape)===0)return kC({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),p=s.map(m=>m[0]),d=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(d).buffer);return WC(o,c,t.shape.length,Ut[t.dtype],h,f,r,u),i}var VC={kernelName:Eo,backendName:"wasm",kernelFunc:F1e,setupFunc:P1e},O1e=!1,M1e=Yn(Ro,O1e),UC;function z1e(e){UC=e.wasm.cwrap(_o,null,["number","number","number"])}function L1e(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,u=l;l.dtype!=="float32"&&(u=Xp({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(u.dataId).id);let c=n.makeOutput(s.shape,"float32"),p=n.dataIdMap.get(c.dataId).id;return UC(i,o,p),l.dtype!=="float32"&&n.disposeData(u.dataId),c}var B1e={kernelName:_o,backendName:"wasm",setupFunc:z1e,kernelFunc:L1e},GC;function W1e(e){GC=e.wasm.cwrap($o,null,["number","number","number","number"])}function V1e(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Jo(o,r,t),f=p;if(h){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(w.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;GC(l,y,Ut[x.dtype],A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var U1e={kernelName:$o,backendName:"wasm",setupFunc:W1e,kernelFunc:V1e},G1e=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=t3(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},H1e={kernelName:sc,backendName:"wasm",kernelFunc:G1e},j1e=!0,q1e=Yn(co,j1e),X1e=wn(Do),K1e=wn(Fo),HC;function Z1e(e){HC=e.wasm.cwrap(Po,null,["number","number","number","number","number","number","number","number","number","number"])}function Y1e(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,[c,p,d,h]=r.shape,f=[c,l,u,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Xp({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,x=t.makeOutput(f,"float32");if(w.sizeFromShape(r.shape)===0)return x;let A=t.dataIdMap.get(x.dataId).id;return HC(y,c,p,d,h,l,u,a?1:0,o?1:0,A),g!=null&&t.disposeData(g.dataId),x}var J1e={kernelName:Po,backendName:"wasm",setupFunc:Z1e,kernelFunc:Y1e},jC;function Q1e(e){jC=e.wasm.cwrap(ml,null,["number","array","number","array","number","number"])}function ege(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=w.parseAxisParam(a,r.shape);if(r.shape.length===0)return R0({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(o).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);jC(l,c,o.length,p,r.shape.length,u);let d=ns({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),d}var tge={kernelName:ml,backendName:"wasm",kernelFunc:ege,setupFunc:Q1e},qC;function nge(e){qC=e.wasm.cwrap(El,null,["number","number","number","number","number","number","number","number","array","number","number"])}function sge(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(l.dataId).id,[p,d,h,f]=r.shape,[m,g]=T.getImageCenter(i,d,h),y=o===0,x=255,A=typeof o=="number"?[o,o,o,y?0:x]:[...o,x],b=new Uint8Array(new Int32Array(A).buffer);return qC(u,p,d,h,f,a,m,g,b,A.length,c),l}var rge={kernelName:El,backendName:"wasm",kernelFunc:sge,setupFunc:nge},age=wn(gl),oge=wn(Oo),XC;function ige(e){XC=e.wasm.cwrap(yl,null,["number","number","number","number","number","number","array","number","number"])}function lge(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(w.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:d}=Iy.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),x=t.dataIdMap.get(i.dataId).id;return XC(f,g,Ut[a.dtype],l,u,c,y,d,x),i}var uge={kernelName:yl,backendName:"wasm",setupFunc:ige,kernelFunc:lge},KC;function cge(e){KC=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function dge(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(u.dataId).id,p=s.shape.length,d=r.shape.length,h=p===0||p>1||d===1?1:w.sizeFromShape(r.shape.slice(1));return KC(o,i,l,h,c),u}var pge={kernelName:Al,backendName:"wasm",kernelFunc:dge,setupFunc:cge},ZC;function hge(e){ZC=e.wasm.cwrap(zo,null,["number","number"])}function fge(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return w.sizeFromShape(r.shape)===0||ZC(s,a),r}var mge={kernelName:"Sigmoid",backendName:"wasm",setupFunc:hge,kernelFunc:fge},gge=wn(Mo),YC;function yge(e){YC=e.wasm.cwrap(Wo,null,["number","number","number","number"])}function Age(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=w.sizeFromShape(n.shape)/i;return w.sizeFromShape(a.shape)===0||YC(r,o,i,l),a}var xge={kernelName:Wo,backendName:"wasm",setupFunc:yge,kernelFunc:Age};function bge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=w.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let k=1+a.length;k<r.shape.length;++k)l.push([0,0]);let u=VC.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(u.shape,a,i,!1),p=T.getPermuted(c.length,a.length,!1),d=T.getReshapedPermuted(u.shape,a,i,!1),m=ns({inputs:{x:u},backend:n,attrs:{shape:c}}),x=Za({inputs:{x:m},backend:n,attrs:{perm:p}}),v=ns({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),v}var vge={kernelName:vl,backendName:"wasm",kernelFunc:bge},JC;function wge(e){JC=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function kge(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=n,i=s.shape[0],l=s.shape[1],u=t.readSync(a.dataId)[0],c=[i+u,l],p=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(o.dataId).id,f=t.makeOutput(c,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([u],"bool"),A=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([i],s.dtype),v=t.dataIdMap.get(b.dataId).id,k=t.makeOutput([4],"int32"),I=t.dataIdMap.get(k.dataId).id,E=JC(p,d,Ut[r.dtype],i,u,l,h,m,y,A,v,I),R=t.readSync(k.dataId),P;switch(R[0]){case 1:{P=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{P=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:P=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:P=""}if(t.disposeData(k.dataId),P)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error(P);let _=f,D=g;return E!==c[0]&&(_=Vi({inputs:{x:f},attrs:{begin:0,size:[E,l]},backend:t}),D=Vi({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[_,D,x,b]}var Sge={kernelName:lp,backendName:"wasm",setupFunc:wge,kernelFunc:kge},QC;function Ige(e){QC=e.wasm.cwrap(uc,null,["number","number","number","number","number","number","number"])}function Cge(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(a.dataId).id,u=s.shape[0],c=w.sizeFromShape(a.shape),p=t.makeOutput([u,c],s.dtype),d=t.dataIdMap.get(p.dataId).id,h=t.makeOutput([c],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;QC(o,i,l,u,d,f,g);let y=t.readSync(m.dataId),x;switch(y[0]){case 0:{x=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{x=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:x=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=T.getSparseReshapeInputOutputMultipleErrorMessage(A,b);break}case 4:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=T.getSparseReshapeInputOutputMismatchErrorMessage(A,b);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(p.dataId),t.disposeData(h.dataId),new Error(x);return[p,h]}var Tge={kernelName:uc,backendName:"wasm",setupFunc:Ige,kernelFunc:Cge},e9;function t9(e){e9=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function n9(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:o}=s,i=a.shape[0],l=n.readSync(o.dataId,i-1,i)[0],c=i>0?l+1:0;if(c<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=r.shape.slice();p[0]=c;let d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,r.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput([4],"int32"),x=n.dataIdMap.get(y.dataId).id;e9(d,Ut[r.dtype],r.shape[0],h,f,g,x,t,0);let A=n.readSync(y.dataId),b;switch(A[0]){case 0:{b=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{b=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:b=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:b=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(y.dataId),b)throw n.disposeData(m.dataId),new Error(b);return m}function Nge(e){return n9(e,!0)}var Ege={kernelName:up,backendName:"wasm",setupFunc:t9,kernelFunc:Nge};function Rge(e){return n9(e,!1)}var _ge={kernelName:cp,backendName:"wasm",setupFunc:t9,kernelFunc:Rge};function $ge(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=w.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(p=>{let d=[...c];d[i]=p;let h=Vi({inputs:{x:r},attrs:{begin:u,size:d},backend:s});return u[i]+=p,h})}var Dge={kernelName:wl,backendName:"wasm",kernelFunc:$ge},Pge=wn(Lo),Fge=wn(cc),Oge=!0,Mge=Yn(Vo,Oge),s9;function zge(e){s9=e.wasm.cwrap(jo,null,["number","number","number","number"])}function Lge(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return s9(o,r,Ut[a.dtype],l),i}var Bge={kernelName:jo,backendName:"wasm",setupFunc:zge,kernelFunc:Lge},r9;function Wge(e){r9=e.wasm.cwrap(kl,null,["number","array","number","array","array","array","array","array","number","number"])}function Vge(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=Mt.sliceInfo(r.shape,a,o,i,l,u,c,p,d),v;if(m)v=ns({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let k=Mt.computeOutShape(x,A,b),I=Vi({inputs:{x:r},backend:t,attrs:{begin:x,size:k}});v=ns({inputs:{x:I},backend:t,attrs:{shape:f}}),t.disposeData(I.dataId)}else{let k=t.makeOutput(h,"float32"),I=t.dataIdMap.get(r.dataId).id,E=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),P=new Uint8Array(new Int32Array(A).buffer),_=new Uint8Array(new Int32Array(b).buffer),D=new Uint8Array(new Int32Array(h).buffer),C=new Uint8Array(new Int32Array(w.computeStrides(h)).buffer),F=t.dataIdMap.get(k.dataId).id;r9(I,E,r.shape.length,R,P,_,D,C,h.length,F),v=ns({inputs:{x:k},backend:t,attrs:{shape:f}}),t.disposeData(k.dataId)}return v}var Uge={kernelName:kl,backendName:"wasm",setupFunc:Wge,kernelFunc:Vge},Gge=!0,Hge=Yn(Uo,Gge),a9;function jge(e){a9=e.wasm.cwrap(Bo,null,["number","number","number","number"])}function qge(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Jo(o,r,t),f=p;if(h){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=w.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(w.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;a9(l,y,Ut[x.dtype],A)}if(h&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Xge={kernelName:Bo,backendName:"wasm",setupFunc:jge,kernelFunc:qge},Kge=wn(Sl),Zge=wn(Go),o9;function Yge(e){o9=e.wasm.cwrap(sa,null,["number","array","number","array","number","number"])}function Jge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let d=0;d<i.length;d++)i[d]=r.shape[d]*o[d];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),c=n.makeOutput(i,r.dtype),p=n.dataIdMap.get(c.dataId).id;return o9(a,l,r.shape.length,u,i.length,Ut[c.dtype],p),c}var Qge={kernelName:sa,backendName:"wasm",setupFunc:Yge,kernelFunc:Jge},i9;function eye(e){i9=e.wasm.cwrap(Il,null,["number","array","number","number","number","bool","number","number"])}var tye=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let u=t.makeOutput(l,s.dtype),c=t.dataIdMap.get(u.dataId).id,p=t.makeOutput(l,"int32"),d=t.dataIdMap.get(p.dataId).id;return i9(o,i,s.shape.length,Ut[s.dtype],r,a,c,d),[u,p]},nye={kernelName:Il,backendName:"wasm",setupFunc:eye,kernelFunc:tye},l9;function sye(e){l9=e.wasm.cwrap(Cl,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function rye(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,p,d,h]=r.shape,[f,m]=u!=null?u:[p,d],g=[c,f,m,h],y=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),x=t.makeOutput(g,r.dtype),A=t.dataIdMap.get(x.dataId).id,v=t.dataIdMap.get(r.dataId).id,I=t.dataIdMap.get(a.dataId).id,E=o==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return l9(v,I,a.shape[0]>1,c,f,m,h,d,p,y,r.shape.length-1,E,R,l,A),x}var aye={kernelName:Cl,backendName:"wasm",setupFunc:sye,kernelFunc:rye};function oye(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),u=0;for(let h=0;h<i;h++)h!==a&&(l[u++]=r.shape[h]);let c=new Array(o),p=new Array(i).fill(0),d=r.shape.slice();d[a]=1;for(let h=0;h<c.length;h++)p[a]=h,c[h]=Vi({inputs:{x:r},attrs:{begin:p,size:d},backend:n});return c.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var iye={kernelName:Tl,backendName:"wasm",kernelFunc:oye};function lye(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var uye={kernelName:Nl,backendName:"wasm",kernelFunc:lye},cye=[Jme,Qme,t0e,r0e,p0e,m0e,A0e,v0e,I0e,_0e,$0e,D0e,O0e,M0e,B0e,U0e,G0e,H0e,X0e,Y0e,e2e,s2e,o2e,i2e,u2e,c2e,d2e,p2e,m2e,g2e,A2e,v2e,S2e,T2e,R2e,D2e,F2e,M2e,a0e,B2e,V2e,G2e,H2e,q2e,Z2e,J2e,t1e,r1e,i1e,u1e,p1e,f1e,m1e,A1e,v1e,S1e,C1e,E1e,_1e,D1e,VC,M1e,B1e,U1e,H1e,q1e,X1e,K1e,w0e,J1e,tge,rge,age,oge,uge,pge,mge,gge,E0e,xge,vge,Sge,Tge,Ege,_ge,Dge,Pge,Fge,Mge,Bge,Uge,Hge,Xge,Kge,Zge,Qge,nye,aye,u0e,iye,uye];for(let e of cye)Xs(e);var uy=Y();uy.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));uy.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(uy.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var A4=Ui(dR()),dye=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});`,pye=Ui(pR()),u9=class extends Ou{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(c9),cy=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Zd(this,rn())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let u=t;this.dataIdMap.set(e,{id:a,stringBytes:u,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=w.sizeFromShape(n),i=o*w.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:o}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=o.length)?o:o.slice(t,n);t=t||0,n=n||w.sizeFromShape(a);let i=w.bytesPerElement(r),l=this.wasm.HEAPU8.slice(s+t*i,s+n*i);return mye(l.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function hye(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function x4(e,t,n){if(jf!=null)return jf;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),Pd!=null&&Pd[s]!=null?Pd[s]:n+s}async function fye(){let[e,t]=await Promise.all([Y().getAsync("WASM_HAS_SIMD_SUPPORT"),Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let u=dye.replace(/\n/g,"\\n"),c=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(c)}return i.endsWith(".wasm")?x4(e,t,Rd!=null?Rd:l):l+i},R3&&(r.instantiateWasm=hye(x4(e,t,Rd!=null?Rd:"")));let a=!1;r.onAbort=()=>{if(a||Fd)return;Fd=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&jf==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+A4.default.toString()],{type:"text/javascript"}),o=(0,A4.default)(r)):o=(0,pye.default)(r),o.then(i=>{a=!0,Fd=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})})})}function mye(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var gye=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],jf=null,Rd=null,Pd={},Fd=!1,R3=!1;function yye(e,t=!1){if($y("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Fd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");jf=e,R3=t}function _3(e,t=!1){if(Fd)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Rd=e;else{Pd=e;let n=gye.filter(s=>Pd[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}R3=t}var c9=-1,cy=-1;function Aye(e){c9=e}function xye(){if(cy===-1)throw new Error("WASM backend not initialized.");return cy}var bye="0.0.0",vye=2;_l("wasm",async()=>{let{wasm:e}=await fye();return new u9(e)},vye);var Ca="3.16.0-20220421",Kp={tfjs:Ca,"tfjs-core":Ca,"tfjs-data":Ca,"tfjs-layers":Ca,"tfjs-converter":Ca,"tfjs-backend-cpu":Ca,"tfjs-backend-webgl":Ca,"tfjs-backend-wasm":Ca};var d9=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`;var p9=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,h9=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,f9=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,m9=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,g9=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`;var $3=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},D3=class{constructor(t,n,s){fe(this,"uniform",{});fe(this,"attribute",{});fe(this,"gl");fe(this,"id");fe(this,"compile",(t,n)=>{let s=this.gl.createShader(n);return s?(this.gl.shaderSource(s,t),this.gl.compileShader(s),this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS)?s:(oe(`filter: gl compile failed: ${this.gl.getShaderInfoLog(s)}`),null)):(oe("filter: could not create shader"),null)});this.gl=t;let r=this.compile(n,this.gl.VERTEX_SHADER),a=this.compile(s,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!r||!a)){if(!this.id){oe("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){oe(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);return}this.gl.useProgram(this.id),$3(n,"attribute",this.attribute);for(let o in this.attribute)this.attribute[o]=this.gl.getAttribLocation(this.id,o);$3(n,"uniform",this.uniform),$3(s,"uniform",this.uniform);for(let o in this.uniform)this.uniform[o]=this.gl.getUniformLocation(this.id,o)}}};function y9(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=Jn(100,100),u={},c={INTERMEDIATE:1},p=l.getContext("webgl");if(!p){oe("filter: cannot get webgl context");return}this.gl=p;function d(x,A){if(!(x===l.width&&A===l.height)){if(l.width=x,l.height=A,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,o),p.bufferData(p.ARRAY_BUFFER,b,p.STATIC_DRAW),p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}p.viewport(0,0,l.width,l.height),r=[null,null]}}function h(x,A){let b=p.createFramebuffer();p.bindFramebuffer(p.FRAMEBUFFER,b);let v=p.createRenderbuffer();p.bindRenderbuffer(p.RENDERBUFFER,v);let k=p.createTexture();return p.bindTexture(p.TEXTURE_2D,k),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,x,A,0,p.RGBA,p.UNSIGNED_BYTE,null),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,p.TEXTURE_2D,k,0),p.bindTexture(p.TEXTURE_2D,null),p.bindFramebuffer(p.FRAMEBUFFER,null),{fbo:b,texture:k}}function f(x){return r[x]=r[x]||h(l.width,l.height),r[x]}function m(x=0){if(!i)return;let A=null,b=null,v=!1;e===0?A=t:A=f(s).texture||null,e++,n&&!(x&c.INTERMEDIATE)?(b=null,v=e%2===0):(s=(s+1)%2,b=f(s).fbo||null),p.bindTexture(p.TEXTURE_2D,A),p.bindFramebuffer(p.FRAMEBUFFER,b),p.uniform1f(i.uniform.flipY,v?-1:1),p.drawArrays(p.TRIANGLES,0,6)}function g(x){if(u[x])return i=u[x],p.useProgram((i?i.id:null)||null),i;if(i=new D3(p,d9,x),!i)return oe("filter: could not get webgl program"),null;let A=Float32Array.BYTES_PER_ELEMENT,b=4*A;return p.enableVertexAttribArray(i.attribute.pos),p.vertexAttribPointer(i.attribute.pos,2,p.FLOAT,!1,b,0*A),p.enableVertexAttribArray(i.attribute.uv),p.vertexAttribPointer(i.attribute.uv,2,p.FLOAT,!1,b,2*A),u[x]=i,i}let y={colorMatrix:x=>{let A=new Float32Array(x);A[4]/=255,A[9]/=255,A[14]/=255,A[19]/=255;let b=A[18]===1&&A[3]===0&&A[8]===0&&A[13]===0&&A[15]===0&&A[16]===0&&A[17]===0&&A[19]===0?h9:p9,v=g(b);!v||(p.uniform1fv(v.uniform.m,A),m())},brightness:x=>{let A=(x||0)+1;y.colorMatrix([A,0,0,0,0,0,A,0,0,0,0,0,A,0,0,0,0,0,1,0])},saturation:x=>{let A=(x||0)*2/3+1,b=(A-1)*-.5;y.colorMatrix([A,b,b,0,0,b,A,b,0,0,b,b,A,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:x=>{let A=(x||0)+1,b=-128*(A-1);y.colorMatrix([A,0,0,0,b,0,A,0,0,b,0,0,A,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let A=Math.cos(x),b=Math.sin(x),v=.213,k=.715,I=.072;y.colorMatrix([v+A*(1-v)+b*-v,k+A*-k+b*-k,I+A*-I+b*(1-I),0,0,v+A*-v+b*.143,k+A*(1-k)+b*.14,I+A*-I+b*-.283,0,0,v+A*-v+b*-(1-v),k+A*-k+b*k,I+A*(1-I)+b*I,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let A=new Float32Array(x),b=1/l.width,v=1/l.height,k=g(g9);!k||(p.uniform1fv(k.uniform.m,A),p.uniform2f(k.uniform.px,b,v),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let A=x||1;y.convolution.call(this,[0,-1*A,0,-1*A,1+4*A,-1*A,0,-1*A,0])},emboss:x=>{let A=x||1;y.convolution.call(this,[-2*A,-1*A,0,-1*A,1,1*A,0,1*A,2*A])},blur:x=>{let A=x/7/l.width,b=x/7/l.height,v=g(m9);!v||(p.uniform2f(v.uniform.px,0,b),m(c.INTERMEDIATE),p.uniform2f(v.uniform.px,A,0),m())},pixelate:x=>{let A=x/l.width,b=x/l.height,v=g(f9);!v||(p.uniform2f(v.uniform.size,A,b),m())}};this.add=function(x){let A=Array.prototype.slice.call(arguments,1),b=y[x];a.push({func:b,args:A})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){d(x.width,x.height),e=0,t||(t=p.createTexture()),p.bindTexture(p.TEXTURE_2D,t),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,p.RGBA,p.UNSIGNED_BYTE,x);for(let A=0;A<a.length;A++){n=A===a.length-1;let b=a[A];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function _0(e){let t=e.shape.length===4?tt(e):e,n=Yt(t,3,2),s=[Va(n[0]),Va(n[1]),Va(n[2])],r=[gn(n[0]),gn(n[1]),gn(n[2])],a=await Promise.all(r.map(h=>h.data())),o=.99*Math.max(a[0][0],a[1][0],a[2][0]),i=[he(n[0],s[0]),he(n[1],s[1]),he(n[2],s[2])],l=[he(r[0],s[0]),he(r[1],s[1]),he(r[2],s[2])],u=[de(o,l[0]),de(o,l[1]),de(o,l[2])],c=[L(i[0],u[0]),L(i[1],u[1]),L(i[2],u[2])],p=cn([c[0],c[1],c[2]],2),d=H(p,[1,t.shape[0],t.shape[1],3]);return ne([...n,...s,...r,...i,...l,...u,...c,p,t]),d}var $0=2048,ct=null,en=null,Pc=null,Nt,ca={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function Jn(e,t){let n;if(pe.browser)if(pe.worker){if(typeof OffscreenCanvas=="undefined")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if(typeof document=="undefined")throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof pe.Canvas!="undefined"?n=new pe.Canvas(e,t):typeof globalThis.Canvas!="undefined"&&(n=new globalThis.Canvas(e,t));return n}function D0(e,t){let n=t||Jn(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function Fc(e,t,n=!0){if(!e)return t.debug&&oe("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof st)&&!(typeof Image!="undefined"&&e instanceof Image)&&!(typeof pe.Canvas!="undefined"&&e instanceof pe.Canvas)&&!(typeof globalThis.Canvas!="undefined"&&e instanceof globalThis.Canvas)&&!(typeof ImageData!="undefined"&&e instanceof ImageData)&&!(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement!="undefined"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas!="undefined"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof st){let s=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)s=Kt(e,0);else if(e.shape[2]===4){let r=Pl(e,[0,0,0],[-1,-1,3]);s=Kt(r,0),ne(r)}}else e.shape.length===4&&(e.shape[3]===3?s=Un(e):e.shape[3]===4&&(s=Oi(e,[0,0,0,0],[-1,-1,-1,3])));if(s==null||s.shape.length!==4||s.shape[0]!==1||s.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if(s.dtype==="int32"){let r=ge(s,"float32");ne(s),s=r}return{tensor:s,canvas:t.filter.return?en:null}}else{if(typeof e.readyState!="undefined"&&e.readyState<=2)return t.debug&&oe("input stream is not ready"),{tensor:null,canvas:ct};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!r)return t.debug&&oe("cannot determine input dimensions"),{tensor:null,canvas:ct};let a=s,o=r;if(a>$0&&(a=$0,o=Math.trunc(a*r/s)),o>$0&&(o=$0,a=Math.trunc(o*s/r)),(t.filter.width||0)>0?a=t.filter.width:(t.filter.height||0)>0&&(a=s*((t.filter.height||0)/r)),(t.filter.height||0)>0?o=t.filter.height:(t.filter.width||0)>0&&(o=r*((t.filter.width||0)/s)),!a||!o)throw new Error("input error: cannot determine dimension");(!ct||(ct==null?void 0:ct.width)!==a||(ct==null?void 0:ct.height)!==o)&&(ct=Jn(a,o));let i=ct.getContext("2d");if(typeof ImageData!="undefined"&&e instanceof ImageData?i.putImageData(e,0,0):t.filter.flip&&typeof i.translate!="undefined"?(i.translate(s,0),i.scale(-1,1),i.drawImage(e,0,0,s,r,0,0,ct==null?void 0:ct.width,ct==null?void 0:ct.height),i.setTransform(1,0,0,1,0,0)):i.drawImage(e,0,0,s,r,0,0,ct==null?void 0:ct.width,ct==null?void 0:ct.height),(!en||ct.width!==en.width||(ct==null?void 0:ct.height)!==(en==null?void 0:en.height))&&(en=Jn(ct.width,ct.height)),t.filter.enabled&&pe.webgl.supported?(Nt||(Nt=pe.browser?new y9:null),pe.filter=!!Nt,!Nt||!Nt.add?(t.debug&&oe("input process error: cannot initialize filters"),pe.webgl.supported=!1,t.filter.enabled=!1,D0(ct,en)):(Nt.reset(),t.filter.brightness!==0&&Nt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Nt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Nt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Nt.add("blur",t.filter.blur),t.filter.saturation!==0&&Nt.add("saturation",t.filter.saturation),t.filter.hue!==0&&Nt.add("hue",t.filter.hue),t.filter.negative&&Nt.add("negative"),t.filter.sepia&&Nt.add("sepia"),t.filter.vintage&&Nt.add("brownie"),t.filter.sepia&&Nt.add("sepia"),t.filter.kodachrome&&Nt.add("kodachrome"),t.filter.technicolor&&Nt.add("technicolor"),t.filter.polaroid&&Nt.add("polaroid"),t.filter.pixelate!==0&&Nt.add("pixelate",t.filter.pixelate),Nt.get()>0?en=Nt.apply(ct):en=Nt.draw(ct))):(D0(ct,en),Nt&&(Nt=null),pe.filter=!!Nt),!n)return{tensor:null,canvas:en};if(!en)throw new Error("canvas error: cannot create output");let l,u=3;if(typeof ImageData!="undefined"&&e instanceof ImageData||e.data&&e.width&&e.height)if(pe.browser&&zs)l=zs?zs.fromPixels(e):null;else{u=e.data.length/e.height/e.width;let d=new Uint8Array(e.data.buffer);l=ht(d,[e.height,e.width,u],"int32")}else if((!Pc||en.width!==Pc.width||en.height!==Pc.height)&&(Pc=Jn(en.width,en.height)),zs&&pe.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?l=zs.fromPixels(en):(Pc=D0(en),l=zs.fromPixels(Pc));else{let f=D0(en).getContext("2d").getImageData(0,0,a,o);u=f.data.length/a/o;let m=new Uint8Array(f.data.buffer);l=ht(m,[a,o,u])}if(u===4){let d=Pl(l,[0,0,0],[-1,-1,3]);ne(l),l=d}if(!l)throw new Error("input error: cannot create tensor");let c=ge(l,"float32"),p=t.filter.equalization?await _0(c):Kt(c,0);return ne([l,c]),{tensor:p,canvas:t.filter.return?en:null}}}async function A9(e,t){let n=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return n;if(!ca.inputTensor)ca.inputTensor=Un(t);else if(ca.inputTensor.shape[1]!==t.shape[1]||ca.inputTensor.shape[2]!==t.shape[2])ne(ca.inputTensor),ca.inputTensor=Un(t);else{let s={};s.diff=he(t,ca.inputTensor),s.squared=L(s.diff,s.diff),s.sum=ke(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;ne([ca.inputTensor,s.diff,s.squared,s.sum]),ca.inputTensor=Un(t),n=a<=(e.cacheSensitivity||0)}return n}async function x9(e,t,n){let s={};if(!t||!n||t.shape.length!==4||t.shape.length!==n.shape.length)return e.debug||oe("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(t.shape[0]!==1||n.shape[0]!==1||t.shape[3]!==3||n.shape[3]!==3)return e.debug||oe("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;s.input1=Un(t),s.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Se.resizeBilinear(n,[t.shape[1],t.shape[2]]):Un(n),s.diff=he(s.input1,s.input2),s.squared=L(s.diff,s.diff),s.sum=ke(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return ne([s.input1,s.input2,s.diff,s.squared,s.sum]),a}var P3=class{constructor(){fe(this,"browser");fe(this,"node");fe(this,"worker");fe(this,"platform","");fe(this,"agent","");fe(this,"backends",[]);fe(this,"initial");fe(this,"filter");fe(this,"tfjs");fe(this,"offscreen");fe(this,"perfadd",!1);fe(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0});fe(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0});fe(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0});fe(this,"cpu",{model:void 0,flags:[]});fe(this,"kernels",[]);fe(this,"Canvas");fe(this,"Image");fe(this,"ImageData");if(this.browser=typeof navigator!="undefined",this.node=typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined",this.tfjs={version:Kp["tfjs-core"]},this.offscreen=typeof OffscreenCanvas!="undefined",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope!="undefined":void 0,typeof navigator!="undefined"){let t=navigator.userAgent.match(/\(([^()]+)\)/g);if(t&&t[0]){let n=t[0].match(/\(([^()]+)\)/g);this.platform=n&&n[0]?n[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process!="undefined"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(rn().registryFactory),this.wasm.supported=typeof WebAssembly!="undefined",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&qn()==="wasm"&&(this.wasm.simd=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));let t=Jn(100,100),n=t?t.getContext("webgl2"):void 0;if(this.webgl.supported=typeof n!="undefined",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(qn()==="webgl"||qn()==="humangl")){let s=Ls().gpgpu!=="undefined"?await Ls().getGPGPUContext().gl:null;s&&(this.webgl.version=s.getParameter(s.VERSION),this.webgl.renderer=s.getParameter(s.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu!="undefined",this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(s){this.webgpu.supported=!1}try{this.kernels=$r(qn()).map(s=>s.kernelName.toLowerCase())}catch(s){}}async updateCPU(){let t={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=t:Object.defineProperty(this,"cpu",{value:t})}},pe=new P3;var da={cacheModels:!1,verbose:!0,debug:!1,modelBasePath:""};async function Iye(e,t){return da.debug&&oe("load model fetch:",e,t),fetch(e,t)}function b9(e){da.cacheModels=e.cacheModels,da.verbose=e.debug,da.modelBasePath=e.modelBasePath}async function Ge(e){let t=$b(da.modelBasePath,e||""),n=t.split("/"),s="indexeddb://"+n[n.length-1].replace(".json",""),r=await In.listModels(),a=da.cacheModels&&Object.keys(r).includes(s),o=typeof fetch=="undefined"?{}:{fetchFunc:(u,c)=>Iye(u,c)},i=new A0(a?s:t,o),l=!1;try{i.findIOHandler(),da.debug&&oe("model load handler:",i.handler);let u=await i.handler.load();i.loadSync(u),da.verbose&&oe("load model:",i.modelUrl),l=!0}catch(u){oe("error loading model:",t,u)}if(l&&da.cacheModels&&!a)try{let u=await i.save(s);oe("model saved:",s,u)}catch(u){oe("error saving model:",t,u)}return i}var F3="2.7.0";var f2={};Sa(f2,{Models:()=>ah,load:()=>X5,reset:()=>h2,validate:()=>K5});var Qs,O3=[],Nye=["white","black","asian","indian","other"],Eye=[15,23,28,35.5,45.5,55.5,65],v9=0,w9=0,M3=Number.MAX_SAFE_INTEGER;async function k9(e){return pe.initial&&(Qs=null),Qs?e.debug&&oe("cached model:",Qs.modelUrl):Qs=await Ge(e.face.gear),Qs}async function z3(e,t,n,s){var o,i;if(!Qs)return{age:0,gender:"unknown",genderScore:0,race:[]};let r=M3<(((o=t.face.gear)==null?void 0:o.skipFrames)||0),a=(((i=t.face.gear)==null?void 0:i.skipTime)||0)>le()-w9;return t.skipAllowed&&a&&r&&v9===s&&O3[n]?(M3++,O3[n]):(M3=0,new Promise(async l=>{var y,x;if(!(Qs!=null&&Qs.inputs[0].shape))return;let u={},c=[[0,.1,.9,.9]];u.resize=Se.cropAndResize(e,c,[0],[Qs.inputs[0].shape[2],Qs.inputs[0].shape[1]]);let p={age:0,gender:"unknown",genderScore:0,race:[]};(y=t.face.gear)!=null&&y.enabled&&([u.age,u.gender,u.race]=Qs.execute(u.resize,["age_output","gender_output","race_output"]));let d=await u.gender.data();p.gender=d[0]>d[1]?"male":"female",p.genderScore=Math.round(100*(d[0]>d[1]?d[0]:d[1]))/100;let h=await u.race.data();for(let A=0;A<h.length;A++)h[A]>(((x=t.face.gear)==null?void 0:x.minConfidence)||.2)&&p.race.push({score:Math.round(100*h[A])/100,race:Nye[A]});p.race.sort((A,b)=>b.score-A.score);let m=Array.from(await u.age.data()).map((A,b)=>[Eye[b],A]).sort((A,b)=>b[1]-A[1]),g=m[0][0];for(let A=1;A<m.length;A++)g+=m[A][1]*(m[A][0]-g);p.age=Math.round(10*g)/10,Object.keys(u).forEach(A=>ne(u[A])),O3[n]=p,v9=s,w9=le(),l(p)}))}var Je={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function I9(){Je.tf255=Ie(255,"float32"),Je.tf1=Ie(1,"float32"),Je.tf2=Ie(2,"float32"),Je.tf05=Ie(.5,"float32"),Je.tf127=Ie(127.5,"float32"),Je.rgb=Ct([.2989,.587,.114],"float32")}var xs,P0=[],C9=0,T9=0,L3=Number.MAX_SAFE_INTEGER;async function N9(e){return pe.initial&&(xs=null),xs?e.debug&&oe("cached model:",xs.modelUrl):xs=await Ge(e.face.ssrnet.modelPathAge),xs}async function B3(e,t,n,s){var o,i,l,u;if(!xs)return{age:0};let r=L3<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>le()-T9;return t.skipAllowed&&r&&a&&C9===s&&((l=P0[n])==null?void 0:l.age)&&((u=P0[n])==null?void 0:u.age)>0?(L3++,P0[n]):(L3=0,new Promise(async c=>{if(!(xs!=null&&xs.inputs)||!xs.inputs[0]||!xs.inputs[0].shape)return;let p={};p.resize=Se.resizeBilinear(e,[xs.inputs[0].shape[2],xs.inputs[0].shape[1]],!1),p.enhance=L(p.resize,Je.tf255);let d={age:0};if(t.face.ssrnet.enabled&&(p.age=xs.execute(p.enhance)),p.age){let h=await p.age.data();d.age=Math.trunc(10*h[0])/10}Object.keys(p).forEach(h=>ne(p[h])),P0[n]=d,C9=s,T9=le(),c(d)}))}var er,F0=[],R9=0,_9=0,W3=Number.MAX_SAFE_INTEGER,V3=[.2989,.587,.114];async function $9(e){return pe.initial&&(er=null),er?e.debug&&oe("cached model:",er.modelUrl):er=await Ge(e.face.ssrnet.modelPathGender),er}async function U3(e,t,n,s){var o,i,l,u;if(!er)return{gender:"unknown",genderScore:0};let r=W3<(((o=t.face.ssrnet)==null?void 0:o.skipFrames)||0),a=(((i=t.face.ssrnet)==null?void 0:i.skipTime)||0)>le()-_9;return t.skipAllowed&&r&&a&&R9===s&&((l=F0[n])==null?void 0:l.gender)&&((u=F0[n])==null?void 0:u.genderScore)>0?(W3++,F0[n]):(W3=0,new Promise(async c=>{if(!(er!=null&&er.inputs[0].shape))return;let p={};p.resize=Se.resizeBilinear(e,[er.inputs[0].shape[2],er.inputs[0].shape[1]],!1),p.enhance=K(()=>{let[f,m,g]=Yt(p.resize,3,3),y=L(f,V3[0]),x=L(m,V3[1]),A=L(g,V3[2]),b=km([y,x,A]);return L(he(b,Je.tf05),2)});let d={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(p.gender=er.execute(p.enhance));let h=await p.gender.data();d.gender=h[0]>h[1]?"female":"male",d.genderScore=h[0]>h[1]?Math.trunc(100*h[0])/100:Math.trunc(100*h[1])/100,Object.keys(p).forEach(f=>ne(p[f])),F0[n]=d,R9=s,_9=le(),c(d)}))}var En,O0=[],G3=Number.MAX_SAFE_INTEGER,P9=0,F9=0;async function O9(e){var t;return pe.initial&&(En=null),En?e.debug&&oe("cached model:",En.modelUrl):En=await Ge((t=e.face.antispoof)==null?void 0:t.modelPath),En}async function H3(e,t,n,s){var o,i;if(!En)return 0;let r=(((o=t.face.antispoof)==null?void 0:o.skipTime)||0)>le()-F9,a=G3<(((i=t.face.antispoof)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&P9===s&&O0[n]?(G3++,O0[n]):(G3=0,new Promise(async l=>{let u=Se.resizeBilinear(e,[En!=null&&En.inputs[0].shape?En.inputs[0].shape[2]:0,En!=null&&En.inputs[0].shape?En.inputs[0].shape[1]:0],!1),c=En==null?void 0:En.execute(u),p=(await c.data())[0];O0[n]=Math.round(100*p)/100,P9=s,F9=le(),ne([u,c]),l(O0[n])}))}var tr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},j3={count:468,mouth:13,symmetryLine:[13,tr.midwayBetweenEyes[0]]},Yp={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},q3=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],Jp=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],Wl=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];var _ye=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],$ye=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],Dye=[33,133,362,263,1,78,308],C7e=_ye.map(e=>Jp[e]),T7e=$ye.map(e=>Jp[e]),N7e=Dye.map(e=>Jp[e]);function Qo(e){let t=e.map(n=>n[0]);return t.push(e[e.length-1][1]),t}var Pye=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],Fye=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Oye=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Mye=[[474,475],[475,476],[476,477],[477,474]],zye=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Lye=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Bye=[[469,470],[470,471],[471,472],[472,469]],Wye=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],E7e={lips:Qo(Pye),leftEye:Qo(Fye),leftEyebrow:Qo(Oye),leftIris:Qo(Mye),rightEye:Qo(zye),rightEyebrow:Qo(Lye),rightIris:Qo(Bye),faceOval:Qo(Wye)};var Oc=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],M0=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],Y3=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],J3=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],B9=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s,landmarks:e.landmarks,confidence:e.confidence}},K3=(e,t,n)=>{let s=t.shape[1],r=t.shape[2],a=[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r],o=Se.cropAndResize(t,[a],[0],n),i=de(o,Je.tf255);return ne(o),i},z0=(e,t)=>{let n=M0(e),s=Oc(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},L0=e=>{let t=M0(e),n=Oc(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks,confidence:e.confidence}},W9=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},Z3=[[1,0,0],[0,1,0],[0,0,1]],Vye=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),Uye=(e,t)=>Vye(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]));var z9=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Vl=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},Gye=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},L9=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(Vl(e[r],Gye(t,a)))}return n},V9=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=z9(t[0],t[1]),o=L9(a,r),i=z9(-t[0],-t[1]);return L9(o,i)},Hye=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-Vl(t[0],n),-Vl(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},jye=(e,t)=>[Vl(e,t[0]),Vl(e,t[1])];function U9(e){let t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let u=r*(l+.5);for(let c=0;c<o;c++){let p=r*(c+.5);for(let d=0;d<i;d++)n.push([p,u])}}}return n}function G9(e,t,n,s,r){let a=Oc(t),o=e.map(h=>[a[0]/r*(h[0]-r/2),a[1]/r*(h[1]-r/2),h[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?V9(n,[0,0]):Z3,u=i?o.map(h=>[...jye(h,l),h[2]]):o,c=i?Hye(s):Z3,p=M0(t),d=[Vl(p,c[0]),Vl(p,c[1])];return u.map(h=>[Math.trunc(h[0]+d[0]),Math.trunc(h[1]+d[1]),Math.trunc(h[2]||0)])}function H9(e,t,n,s){let r=t.landmarks.length>=j3.count?j3.symmetryLine:Yp.symmetryLine,a=0,o=Z3,i;if(e&&pe.kernels.includes("rotatewithoffset"))if(a=Uye(t.landmarks[r[0]],t.landmarks[r[1]]),a&&a!==0&&Math.abs(a)>.2){let u=M0(t),c=[u[0]/n.shape[2],u[1]/n.shape[1]],p=Se.rotateWithOffset(n,a,0,c);o=V9(-a,u),i=K3(t,p,[s,s]),ne(p)}else i=K3(t,n,[s,s]);else i=K3(t,n,[s,s]);return[a,o,i]}var qye=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]},j9=(e,t)=>{let n=qye(e),s=Oc(t);return{startPoint:[n[0]-s[0]/2,n[1]-s[1]/2],endPoint:[n[0]+s[0]/2,n[1]+s[1]/2]}};var q9=6,Xye=1.4,Lr,X9=null,ei=0,Qp=null,B0=()=>ei;async function K9(e){var t;return pe.initial&&(Lr=null),Lr?e.debug&&oe("cached model:",Lr.modelUrl):Lr=await Ge((t=e.face.detector)==null?void 0:t.modelPath),ei=Lr.inputs[0].shape?Lr.inputs[0].shape[2]:0,Qp=Ie(ei,"int32"),X9=hr(U9(ei)),Lr}function Kye(e){let t={};t.boxStarts=Pe(e,[0,1],[-1,2]),t.centers=ue(t.boxStarts,X9),t.boxSizes=Pe(e,[0,3],[-1,2]),t.boxSizesNormalized=de(t.boxSizes,Qp),t.centersNormalized=de(t.centers,Qp),t.halfBoxSize=de(t.boxSizesNormalized,Je.tf2),t.starts=he(t.centersNormalized,t.halfBoxSize),t.ends=ue(t.centersNormalized,t.halfBoxSize),t.startNormalized=L(t.starts,Qp),t.endNormalized=L(t.ends,Qp);let n=pc([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(s=>ne(t[s])),n}async function Z9(e,t){var i,l,u,c;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let n={};n.resized=Se.resizeBilinear(e,[ei,ei]),n.div=de(n.resized,Je.tf127),n.normalized=he(n.div,Je.tf05);let s=Lr==null?void 0:Lr.execute(n.normalized);if(Array.isArray(s)){let p=s.sort((d,h)=>d.size-h.size);n.concat384=St([p[0],p[2]],2),n.concat512=St([p[1],p[3]],2),n.concat=St([n.concat512,n.concat384],1),n.batch=tt(n.concat,0)}else n.batch=tt(s);ne(s),n.boxes=Kye(n.batch),n.logits=Pe(n.batch,[0,0],[-1,1]),n.sigmoid=Cn(n.logits),n.scores=tt(n.sigmoid),n.nms=await Se.nonMaxSuppressionAsync(n.boxes,n.scores,((i=t.face.detector)==null?void 0:i.maxDetected)||0,((l=t.face.detector)==null?void 0:l.iouThreshold)||0,((u=t.face.detector)==null?void 0:u.minConfidence)||0);let r=await n.nms.array(),a=[],o=await n.scores.data();for(let p=0;p<r.length;p++){let d=o[r[p]];if(d>(((c=t.face.detector)==null?void 0:c.minConfidence)||0)){let h={};h.bbox=Pe(n.boxes,[r[p],0],[1,-1]),h.slice=Pe(n.batch,[r[p],q9-1],[1,-1]),h.squeeze=tt(h.slice),h.landmarks=H(h.squeeze,[q9,-1]);let f=await h.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await h.landmarks.array(),confidence:d},g=B9(m,[(e.shape[2]||0)/ei,(e.shape[1]||0)/ei]),y=z0(g,t.face.scale||Xye),x=L0(y);a.push(x),Object.keys(h).forEach(A=>ne(h[A]))}}return Object.keys(n).forEach(p=>ne(n[p])),a}var W0={};Sa(W0,{connected:()=>t5,kpt:()=>e5});var e5=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],t5={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]};var J9=224,Zye,Yye=5,V0=[8,16,32,32,32];async function Q9(){let e=[],t=0;for(;t<Yye;){let n=0,s=t;for(;s<V0.length&&V0[s]===V0[t];)n+=2,s++;let r=V0[t],a=Math.ceil(J9/r),o=Math.ceil(J9/r);for(let i=0;i<a;++i)for(let l=0;l<o;++l)for(let u=0;u<n;++u)e.push({x:(l+.5)/o,y:(i+.5)/a});t=s}Zye={x:Ct(e.map(n=>n.x)),y:Ct(e.map(n=>n.y))}}function pa(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function eT(e,t=[1,1]){let n=[e.map(u=>u[0]),e.map(u=>u[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function U0(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var sT={initial:!0},bs={detector:null,landmarks:null},Mc={detector:[224,224],landmarks:[256,256]},n5=Number.MAX_SAFE_INTEGER,Qye={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},H0=null,eh,ti=[[0,0],[0,0],[0,0],[0,0]],tT=0,nT=e=>1-1/(1+Math.exp(e));async function rT(e){if(sT.initial&&(bs.detector=null),!bs.detector&&e.body.detector&&e.body.detector.modelPath){bs.detector=await Ge(e.body.detector.modelPath);let t=Object.values(bs.detector.modelSignature.inputs);Mc.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Mc.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&bs.detector&&oe("cached model:",bs.detector.modelUrl);return await Q9(),bs.detector}async function aT(e){if(sT.initial&&(bs.landmarks=null),bs.landmarks)e.debug&&oe("cached model:",bs.landmarks.modelUrl);else{bs.landmarks=await Ge(e.body.modelPath);let t=Object.values(bs.landmarks.modelSignature.inputs);Mc.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,Mc.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return bs.landmarks}async function eAe(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let s;if(eh&&(n.cropped=Se.cropAndResize(e,[eh],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let r=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];ti=[[0,0],r,a,[0,0]],n.pad=Ks(n.cropped||e,ti),n.resize=Se.resizeBilinear(n.pad,[t,t]),s=de(n.resize,Je.tf255)}else e.shape[1]!==t?(n.resize=Se.resizeBilinear(n.cropped||e,[t,t]),s=de(n.resize,Je.tf255)):s=de(n.cropped||e,Je.tf255);return Object.keys(n).forEach(r=>ne(n[r])),s}function tAe(e,t){for(let n of e)n.position=[Math.trunc(n.position[0]*(t[0]+ti[2][0]+ti[2][1])/t[0]-ti[2][0]),Math.trunc(n.position[1]*(t[1]+ti[1][0]+ti[1][1])/t[1]-ti[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];if(eh)for(let n of e)n.positionRaw=[n.positionRaw[0]+eh[1],n.positionRaw[1]+eh[0],n.positionRaw[2]],n.position=[Math.trunc(n.positionRaw[0]*t[0]),Math.trunc(n.positionRaw[1]*t[1]),n.positionRaw[2]];return e}async function nAe(e){let t=e.find(i=>i.part==="leftPalm"),n=e.find(i=>i.part==="leftWrist"),s=e.find(i=>i.part==="leftIndex");t.position[2]=((n.position[2]||0)+(s.position[2]||0))/2;let r=e.find(i=>i.part==="rightPalm"),a=e.find(i=>i.part==="rightWrist"),o=e.find(i=>i.part==="rightIndex");r.position[2]=((a.position[2]||0)+(o.position[2]||0))/2}async function sAe(e,t,n){var f;let s={};[s.ld,s.segmentation,s.heatmap,s.world,s.poseflag]=(f=bs.landmarks)==null?void 0:f.execute(e,Qye.landmarks);let r=(await s.poseflag.data())[0],a=await s.ld.data(),o=await s.world.data();Object.keys(s).forEach(m=>ne(s[m]));let i=[],l=5;for(let m=0;m<a.length/l;m++){let g=nT(a[l*m+3]),y=nT(a[l*m+4]),x=Math.trunc(100*g*y*r)/100,A=[a[l*m+0]/Mc.landmarks[0],a[l*m+1]/Mc.landmarks[1],a[l*m+2]+0],b=[Math.trunc(n[0]*A[0]),Math.trunc(n[1]*A[1]),A[2]],v=[o[l*m+0],o[l*m+1],o[l*m+2]+0];i.push({part:e5[m],positionRaw:A,position:b,distance:v,score:x})}if(r<(t.body.minConfidence||0))return null;nAe(i);let u=tAe(i,n),c=u.map(m=>m.position),p=pa(c,[n[0],n[1]]),d={};for(let[m,g]of Object.entries(t5)){let y=[];for(let x=0;x<g.length-1;x++){let A=u.find(v=>v.part===g[x]),b=u.find(v=>v.part===g[x+1]);A&&b&&y.push([A.position,b.position])}d[m]=y}return{id:0,score:Math.trunc(100*r)/100,box:p.box,boxRaw:p.boxRaw,keypoints:u,annotations:d}}async function s5(e,t){let n=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>le()-tT,r=n5<(t.body.skipFrames||0);if(t.skipAllowed&&s&&r&&H0!==null)n5++;else{let a={};a.landmarks=await eAe(e,256),H0=await sAe(a.landmarks,t,n),Object.keys(a).forEach(o=>ne(a[o])),tT=le(),n5=0}return H0?[H0]:[]}var zc=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}];var ha,Ul=0,r5=[],iT=0,a5=Number.MAX_SAFE_INTEGER;async function lT(e){if(pe.initial&&(ha=null),ha)e.debug&&oe("cached model:",ha.modelUrl);else{ha=await Ge(e.object.modelPath);let t=Object.values(ha.modelSignature.inputs);Ul=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return ha}async function rAe(e,t,n){if(!e)return[];let s={},r=[],a=await e.array();s.squeeze=tt(e);let o=Yt(s.squeeze,6,1);s.stack=cn([o[1],o[0],o[3],o[2]],1),s.boxes=tt(s.stack),s.scores=tt(o[4]),s.classes=tt(o[5]),ne([e,...o]),s.nms=await Se.nonMaxSuppressionAsync(s.boxes,s.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);let i=await s.nms.data(),l=0;for(let u of Array.from(i)){let c=Math.trunc(100*a[0][u][4])/100,p=a[0][u][5],d=zc[p].label,[h,f]=[a[0][u][0]/Ul,a[0][u][1]/Ul],m=[h,f,a[0][u][2]/Ul-h,a[0][u][3]/Ul-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:l++,score:c,class:p,label:d,box:g,boxRaw:m})}return Object.keys(s).forEach(u=>ne(s[u])),r}async function o5(e,t){let n=(t.object.skipTime||0)>le()-iT,s=a5<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&r5.length>0?(a5++,r5):(a5=0,new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Se.resizeBilinear(e,[Ul,Ul]),i=t.object.enabled?ha==null?void 0:ha.execute(o,["tower_0/detections"]):null;iT=le(),ne(o);let l=await rAe(i,a,t);r5=l,r(l)}))}var j0={};Sa(j0,{connected:()=>l5,kpt:()=>i5});var i5=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],l5={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var Rn,cT=0,Qn={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},u5=Number.MAX_SAFE_INTEGER;async function dT(e){return pe.initial&&(Rn=null),Rn?e.debug&&oe("cached model:",Rn.modelUrl):Rn=await Ge(e.body.modelPath),Rn}async function aAe(e,t){let[n,s]=e.shape,r=H(e,[s*n]),a=gn(r,0),o=(await a.data())[0];if(ne([r,a]),o>t){let i=_s(r,0),l=mc(i,n),u=(await l.data())[0],c=de(i,Ie(n,"int32")),p=(await c.data())[0];return ne([l,c]),[u,p,o]}return[0,0,o]}async function c5(e,t){let n=(t.body.skipTime||0)>le()-cT,s=u5<(t.body.skipFrames||0);return t.skipAllowed&&n&&s&&Object.keys(Qn.keypoints).length>0?(u5++,[Qn]):(u5=0,new Promise(async r=>{var p;let a=K(()=>{if(!(Rn!=null&&Rn.inputs[0].shape))return null;let d=Se.resizeBilinear(e,[Rn.inputs[0].shape[2],Rn.inputs[0].shape[1]],!1),h=L(d,Je.tf2);return he(h,Je.tf1)}),o;if(t.body.enabled&&(o=Rn==null?void 0:Rn.execute(a)),cT=le(),ne(a),o){Qn.keypoints.length=0;let d=o.squeeze();ne(o);let h=d.unstack(2);ne(d);for(let f=0;f<h.length;f++){let[m,g,y]=await aAe(h[f],t.body.minConfidence);y>(((p=t.body)==null?void 0:p.minConfidence)||0)&&Qn.keypoints.push({score:Math.round(100*y)/100,part:i5[f],positionRaw:[m/Rn.inputs[0].shape[2],g/Rn.inputs[0].shape[1]],position:[Math.round(e.shape[2]*m/Rn.inputs[0].shape[2]),Math.round(e.shape[1]*g/Rn.inputs[0].shape[1])]})}h.forEach(f=>ne(f))}Qn.score=Qn.keypoints.reduce((d,h)=>h.score>d?h.score:d,0);let i=Qn.keypoints.map(d=>d.position[0]),l=Qn.keypoints.map(d=>d.position[1]);Qn.box=[Math.min(...i),Math.min(...l),Math.max(...i)-Math.min(...i),Math.max(...l)-Math.min(...l)];let u=Qn.keypoints.map(d=>d.positionRaw[0]),c=Qn.keypoints.map(d=>d.positionRaw[1]);Qn.boxRaw=[Math.min(...u),Math.min(...c),Math.max(...u)-Math.min(...u),Math.max(...c)-Math.min(...c)];for(let[d,h]of Object.entries(l5)){let f=[];for(let m=0;m<h.length-1;m++){let g=Qn.keypoints.find(x=>x.part===h[m]),y=Qn.keypoints.find(x=>x.part===h[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}Qn.annotations[d]=f}r([Qn])}))}var oAe=["angry","disgust","fear","happy","sad","surprise","neutral"],Ws,q0=[],hT=0,fT=0,d5=Number.MAX_SAFE_INTEGER;async function mT(e){var t;return pe.initial&&(Ws=null),Ws?e.debug&&oe("cached model:",Ws.modelUrl):Ws=await Ge((t=e.face.emotion)==null?void 0:t.modelPath),Ws}async function p5(e,t,n,s){var o,i;if(!Ws)return[];let r=d5<(((o=t.face.emotion)==null?void 0:o.skipFrames)||0),a=(((i=t.face.emotion)==null?void 0:i.skipTime)||0)>le()-fT;return t.skipAllowed&&a&&r&&hT===s&&q0[n]&&q0[n].length>0?(d5++,q0[n]):(d5=0,new Promise(async l=>{var c,p;let u=[];if((c=t.face.emotion)!=null&&c.enabled){let d={},h=Ws!=null&&Ws.inputs[0].shape?Ws.inputs[0].shape[2]:0;d.resize=Se.resizeBilinear(e,[h,h],!1),d.channels=L(d.resize,Je.rgb),d.grayscale=ke(d.channels,3,!0),d.grayscaleSub=he(d.grayscale,Je.tf05),d.grayscaleMul=L(d.grayscaleSub,Je.tf2),d.emotion=Ws==null?void 0:Ws.execute(d.grayscaleMul),fT=le();let f=await d.emotion.data();for(let m=0;m<f.length;m++)f[m]>(((p=t.face.emotion)==null?void 0:p.minConfidence)||0)&&u.push({score:Math.min(.99,Math.trunc(100*f[m])/100),emotion:oAe[m]});u.sort((m,g)=>g.score-m.score),Object.keys(d).forEach(m=>ne(d[m]))}q0[n]=u,hT=s,l(u)}))}var vs,h5=[],yT=0,AT=0,xT=Number.MAX_SAFE_INTEGER;async function bT(e){return pe.initial&&(vs=null),vs?e.debug&&oe("cached model:",vs.modelUrl):vs=await Ge(e.face.mobilefacenet.modelPath),vs}async function f5(e,t,n,s){var o,i;if(!vs)return[];let r=xT<(((o=t.face.embedding)==null?void 0:o.skipFrames)||0),a=(((i=t.face.embedding)==null?void 0:i.skipTime)||0)>le()-AT;return t.skipAllowed&&a&&r&&yT===s&&h5[n]?(xT++,h5[n]):new Promise(async l=>{var c;let u=[];if(((c=t.face.embedding)==null?void 0:c.enabled)&&(vs==null?void 0:vs.inputs[0].shape)){let p={};p.crop=Se.resizeBilinear(e,[vs.inputs[0].shape[2],vs.inputs[0].shape[1]],!1),p.data=vs==null?void 0:vs.execute(p.crop);let d=await p.data.data();u=Array.from(d)}h5[n]=u,yT=s,AT=le(),l(u)})}var fa,ni=0,iAe=2.3,m5=tr.leftEyeLower0,g5=tr.rightEyeLower0,Lc={leftBounds:[m5[0],m5[m5.length-1]],rightBounds:[g5[0],g5[g5.length-1]]},Bc={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function IT(e){var t;return pe.initial&&(fa=null),fa?e.debug&&oe("cached model:",fa.modelUrl):fa=await Ge((t=e.face.iris)==null?void 0:t.modelPath),ni=fa.inputs[0].shape?fa.inputs[0].shape[2]:0,ni===-1&&(ni=64),fa}function X0(e,t,n,s){for(let r=0;r<q3.length;r++){let{key:a,indices:o}=q3[r],i=tr[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let u=o[l];e[i[l]]=[t[u][0],t[u][1],(t[u][2]+e[i[l]][2])/2]}}}var lAe=e=>{let t=e[Lc.leftBounds[0]][2],n=e[Lc.rightBounds[0]][2];return t-n},wT=(e,t,n,s,r,a=!1)=>{let o=L0(z0(W9([e[n],e[s]]),iAe)),i=Oc(o),l=Se.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[ni,ni]);if(a&&pe.kernels.includes("flipleftright")){let u=Se.flipLeftRight(l);ne(l),l=u}return{box:o,boxSize:i,crop:l}},kT=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<Bc.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/ni:o/ni)*n[0]+t.startPoint[0],i/ni*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(Bc.index)}},ST=(e,t,n)=>{let s=e[tr[`${n}EyeUpper0`][Bc.upperCenter]][2],r=e[tr[`${n}EyeLower0`][Bc.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function CT(e,t,n,s){if(!fa)return n.debug&&oe("face mesh iris detection requested, but model is not loaded"),e;let{box:r,boxSize:a,crop:o}=wT(e,t,Lc.leftBounds[0],Lc.leftBounds[1],s,!0),{box:i,boxSize:l,crop:u}=wT(e,t,Lc.rightBounds[0],Lc.rightBounds[1],s,!0),c=St([o,u]);ne(o),ne(u);let p=fa.execute(c);ne(c);let d=await p.data();ne(p);let h=d.slice(0,Bc.numCoordinates*3),{rawCoords:f,iris:m}=kT(h,r,a,!0),g=d.slice(Bc.numCoordinates*3),{rawCoords:y,iris:x}=kT(g,i,l,!1),A=lAe(e);Math.abs(A)<30?(X0(e,f,"left",null),X0(e,y,"right",null)):A<1?X0(e,f,"left",["EyeUpper0","EyeLower0"]):X0(e,y,"right",["EyeUpper0","EyeLower0"]);let b=ST(e,m,"left"),v=ST(e,x,"right");return e.concat(b).concat(v)}var ws={eyeLLower:[33,7,163,144,145,153,154,155,133],eyeRLower:[263,249,390,373,374,380,381,382,362],lips:[185,96,90,181,84,17,314,405,320,307,409,40,39,73,37,0,267,269,270,409,40,88,178,178,87,14,268,402,318,324,409,80,41,38,87,12,268,303,318,324,185,95,80,81,85,16,315,404,319,325,409,40,39,73,72,0,302,303,270,408,185,88,88,81,82,15,316,403,319,324,409,80,41,38,87,12,268,303,318,324],eyeL:[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],eyeR:[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417]};async function NT(e,t){let n={irisL:t[3].dataSync(),irisR:t[1].dataSync(),eyeL:t[0].dataSync(),eyeR:t[6].dataSync(),lips:t[5].dataSync()},s=ws.eyeRLower.reduce((a,o)=>a+=e[o][2],0)/ws.eyeRLower.length;for(let a=0;a<n.irisR.length/2;a++)e.push([n.irisR[2*a+0],n.irisR[2*a+1],s]);let r=ws.eyeLLower.reduce((a,o)=>a+=e[o][2],0)/ws.eyeLLower.length;for(let a=0;a<n.irisL.length/2;a++)e.push([n.irisL[2*a+0],n.irisL[2*a+1],r]);for(let a=0;a<n.eyeL.length/2;a++)e[ws.eyeL[a]]=[n.eyeL[2*a+0],n.eyeL[2*a+1],e[ws.eyeL[a]][2]];for(let a=0;a<n.eyeR.length/2;a++)e[ws.eyeR[a]]=[n.eyeR[2*a+0],n.eyeR[2*a+1],e[ws.eyeR[a]][2]];for(let a=0;a<n.lips.length/2;a++)e[ws.lips[a]]=[n.lips[2*a+0],n.lips[2*a+1],e[ws.lips[a]][2]];return e}var Br={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},Wr=null,Wc=0;async function ET(e,t){var i,l,u,c,p,d,h,f,m,g;let n=(((i=t.face.detector)==null?void 0:i.skipTime)||0)>le()-Br.timestamp,s=Br.skipped<(((l=t.face.detector)==null?void 0:l.skipFrames)||0);!t.skipAllowed||!n||!s||Br.boxes.length===0?(Br.boxes=await Z9(e,t),Br.timestamp=le(),Br.skipped=0):Br.skipped++;let r=[],a=[],o=0;for(let y=0;y<Br.boxes.length;y++){let x=Br.boxes[y],A=0,b,v={id:o++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([A,b,v.tensor]=H9((u=t.face.detector)==null?void 0:u.rotation,x,e,(c=t.face.mesh)!=null&&c.enabled?Wc:B0()),(p=t==null?void 0:t.filter)!=null&&p.equalization){let k=await _0(v.tensor);ne(v.tensor),v.tensor=k}if(v.boxScore=Math.round(100*x.confidence)/100,(d=t.face.mesh)!=null&&d.enabled)if(!Wr)t.debug&&oe("face mesh detection requested, but model is not loaded");else{let k=Wr.execute(v.tensor),I=k.find(D=>D.shape[D.shape.length-1]===1),E=k.find(D=>D.shape[D.shape.length-1]===1404),R=await I.data();v.faceScore=Math.round(100*R[0])/100;let P=H(E,[-1,3]),_=await P.array();if(v.faceScore<(((h=t.face.detector)==null?void 0:h.minConfidence)||1))x.confidence=v.faceScore;else{(f=t.face.attention)!=null&&f.enabled?_=await NT(_,k):(m=t.face.iris)!=null&&m.enabled&&(_=await CT(_,v.tensor,t,Wc)),v.mesh=G9(_,x,A,b,Wc),v.meshRaw=v.mesh.map(C=>[C[0]/(e.shape[2]||0),C[1]/(e.shape[1]||0),(C[2]||0)/Wc]);for(let C of Object.keys(tr))v.annotations[C]=tr[C].map(F=>v.mesh[F]);v.score=v.faceScore;let D={...j9(v.mesh,x),confidence:x.confidence,landmarks:x.landmarks};v.box=Y3(D,e),v.boxRaw=J3(D,e),a.push(D)}ne([...k,P])}else{v.box=Y3(x,e),v.boxRaw=J3(x,e),v.score=v.boxScore,v.mesh=x.landmarks.map(k=>[(x.startPoint[0]+x.endPoint[0])/2+(x.endPoint[0]+x.startPoint[0])*k[0]/B0(),(x.startPoint[1]+x.endPoint[1])/2+(x.endPoint[1]+x.startPoint[1])*k[1]/B0()]),v.meshRaw=v.mesh.map(k=>[k[0]/(e.shape[2]||0),k[1]/(e.shape[1]||0),(k[2]||0)/Wc]);for(let k of Object.keys(Yp))v.annotations[k]=[v.mesh[Yp[k]]]}v.score>(((g=t.face.detector)==null?void 0:g.minConfidence)||1)?r.push(v):ne(v.tensor)}return Br.boxes=a,r}async function RT(e){var t,n,s;return pe.initial&&(Wr=null),Wr?e.debug&&oe("cached model:",Wr.modelUrl):(t=e.face.attention)!=null&&t.enabled?Wr=await Ge((n=e.face.attention)==null?void 0:n.modelPath):Wr=await Ge((s=e.face.mesh)==null?void 0:s.modelPath),Wc=Wr.inputs[0].shape?Wr.inputs[0].shape[2]:0,Wr}var _T=Wl,$T=Jp;var ks,K0=[],DT=0,PT=0,A5=Number.MAX_SAFE_INTEGER;async function FT(e){var t;return pe.initial&&(ks=null),ks?e.debug&&oe("cached model:",ks.modelUrl):ks=await Ge((t=e.face.description)==null?void 0:t.modelPath),ks}function x5(e){let t=e.image||e.tensor||e;if(!(ks!=null&&ks.inputs[0].shape))return t;let n=Se.resizeBilinear(t,[ks.inputs[0].shape[2],ks.inputs[0].shape[1]],!1),s=L(n,Je.tf255);return ne(n),s}async function b5(e,t,n,s){var o,i,l,u;if(!ks)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};let r=A5<(((o=t.face.description)==null?void 0:o.skipFrames)||0),a=(((i=t.face.description)==null?void 0:i.skipTime)||0)>le()-DT;return t.skipAllowed&&r&&a&&PT===s&&((l=K0[n])==null?void 0:l.age)&&((u=K0[n])==null?void 0:u.age)>0?(A5++,K0[n]):(A5=0,new Promise(async c=>{var d,h;let p={age:0,gender:"unknown",genderScore:0,descriptor:[]};if((d=t.face.description)!=null&&d.enabled){let f=x5(e),m=ks==null?void 0:ks.execute(f);DT=le(),ne(f);let y=await(await m.find(R=>R.shape[1]===1)).data(),x=Math.trunc(200*Math.abs(y[0]-.5))/100;x>(((h=t.face.description)==null?void 0:h.minConfidence)||0)&&(p.gender=y[0]<=.5?"female":"male",p.genderScore=Math.min(.99,x));let A=_s(m.find(R=>R.shape[1]===100),1),b=(await A.data())[0];ne(A);let k=await m.find(R=>R.shape[1]===100).data();p.age=Math.round(k[b-1]>k[b+1]?10*b-100*k[b-1]:10*b+100*k[b+1])/10;let I=m.find(R=>R.shape[1]===1024),E=I?await I.data():[];p.descriptor=Array.from(E),m.forEach(R=>ne(R))}K0[n]=p,PT=s,c(p)}))}function Z0(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function th(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function zT(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return Se.cropAndResize(t,a,[0],n)}function LT(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function Y0(e,t=1.5){let n=th(e),s=Z0(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function J0(e){let t=th(e),n=Z0(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function cAe(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function BT(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return cAe(n)}var OT=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function si(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function dAe(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function MT(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(si(e[r],dAe(t,a)))}return n}function w5(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=OT(t[0],t[1]),o=MT(a,r),i=OT(-t[0],-t[1]);return MT(o,i)}function WT(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-si(t[0],n),-si(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function k5(e,t){return[si(e,t[0]),si(e,t[1])]}var UT=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}];var Q0=class{constructor(t){fe(this,"model");fe(this,"anchors");fe(this,"anchorsTensor");fe(this,"inputSize");fe(this,"inputSizeTensor");fe(this,"doubleInputSizeTensor");this.model=t,this.anchors=UT.map(n=>[n.x,n.y]),this.anchorsTensor=hr(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Ct([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Ct([this.inputSize*2,this.inputSize*2])}normalizeBoxes(t){let n={};n.boxOffsets=Pe(t,[0,0],[-1,2]),n.boxSizes=Pe(t,[0,2],[-1,2]),n.div=de(n.boxOffsets,this.inputSizeTensor),n.boxCenterPoints=ue(n.div,this.anchorsTensor),n.halfBoxSizes=de(n.boxSizes,this.doubleInputSizeTensor),n.sub=he(n.boxCenterPoints,n.halfBoxSizes),n.startPoints=L(n.sub,this.inputSizeTensor),n.add=ue(n.boxCenterPoints,n.halfBoxSizes),n.endPoints=L(n.add,this.inputSizeTensor);let s=pc([n.startPoints,n.endPoints],1);return Object.keys(n).forEach(r=>ne(n[r])),s}normalizeLandmarks(t,n){let s={};s.reshape=H(t,[-1,7,2]),s.div=de(s.reshape,this.inputSizeTensor),s.landmarks=ue(s.div,this.anchors[n]);let r=L(s.landmarks,this.inputSizeTensor);return Object.keys(s).forEach(a=>ne(s[a])),r}async predict(t,n){let s={};s.resize=Se.resizeBilinear(t,[this.inputSize,this.inputSize]),s.div=de(s.resize,Je.tf127),s.image=he(s.div,Je.tf1),s.batched=this.model.execute(s.image),s.predictions=tt(s.batched),s.slice=Pe(s.predictions,[0,0],[-1,1]),s.sigmoid=Cn(s.slice),s.scores=tt(s.sigmoid);let r=await s.scores.data();s.boxes=Pe(s.predictions,[0,1],[-1,4]),s.norm=this.normalizeBoxes(s.boxes),s.nms=await Se.nonMaxSuppressionAsync(s.norm,s.scores,3*n.hand.maxDetected,n.hand.iouThreshold,n.hand.minConfidence);let a=await s.nms.array(),o=[];for(let i of a){let l={};l.box=Pe(s.norm,[i,0],[1,-1]),l.slice=Pe(s.predictions,[i,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,i),l.palmLandmarks=H(l.norm,[-1,2]);let u=await l.box.data(),c=u.slice(0,2),p=u.slice(2,4),d=await l.palmLandmarks.array(),h={startPoint:c,endPoint:p,palmLandmarks:d,confidence:r[i]},f=LT(h,[t.shape[2]/this.inputSize,t.shape[1]/this.inputSize]);o.push(f),Object.keys(l).forEach(m=>ne(l[m]))}return Object.keys(s).forEach(i=>ne(s[i])),o}};var fAe=5,GT=1.65,HT=[0,5,9,13,17,1,2],mAe=0,gAe=2,jT=0,e2=class{constructor(t,n){fe(this,"handDetector");fe(this,"handPoseModel");fe(this,"inputSize");fe(this,"storedBoxes");fe(this,"skipped");fe(this,"detectedHands");this.handDetector=t,this.handPoseModel=n,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(t){let n=t.map(o=>o[0]),s=t.map(o=>o[1]),r=[Math.min(...n),Math.min(...s)],a=[Math.max(...n),Math.max(...s)];return{startPoint:r,endPoint:a}}getBoxForPalmLandmarks(t,n){let s=t.map(a=>k5([...a,1],n)),r=this.calculateLandmarksBoundingBox(s);return Y0(J0(r),fAe)}getBoxForHandLandmarks(t){let n=this.calculateLandmarksBoundingBox(t),s=Y0(J0(n),GT);s.palmLandmarks=[];for(let r=0;r<HT.length;r++)s.palmLandmarks.push(t[HT[r]].slice(0,2));return s}transformRawCoords(t,n,s,r){let a=Z0(n),o=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=t.map(h=>[o[0]*(h[0]-this.inputSize/2),o[1]*(h[1]-this.inputSize/2),o[2]*h[2]]),l=w5(s,[0,0]),u=i.map(h=>[...k5(h,l),h[2]]),c=WT(r),p=[...th(n),1],d=[si(p,c[0]),si(p,c[1])];return u.map(h=>[Math.trunc(h[0]+d[0]),Math.trunc(h[1]+d[1]),Math.trunc(h[2])])}async estimateHands(t,n){let s=!1,r,a=(n.hand.skipTime||0)>le()-jT,o=this.skipped<(n.hand.skipFrames||0);n.skipAllowed&&a&&o&&(r=await this.handDetector.predict(t,n),this.skipped=0),n.skipAllowed&&this.skipped++,r&&r.length>0&&(r.length!==this.detectedHands&&this.detectedHands!==n.hand.maxDetected||!n.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...r],this.storedBoxes.length>0&&(s=!0));let i=[];for(let l=0;l<this.storedBoxes.length;l++){let u=this.storedBoxes[l];if(!!u)if(n.hand.landmarks){let c=n.hand.rotation?BT(u.palmLandmarks[mAe],u.palmLandmarks[gAe]):0,p=th(u),d=[p[0]/t.shape[2],p[1]/t.shape[1]],h=n.hand.rotation&&pe.kernels.includes("rotatewithoffset")?Se.rotateWithOffset(t,c,0,d):t.clone(),f=w5(-c,p),m=s?this.getBoxForPalmLandmarks(u.palmLandmarks,f):u,g=zT(m,h,[this.inputSize,this.inputSize]),y=de(g,Je.tf255);ne(g),ne(h);let[x,A]=this.handPoseModel.execute(y);jT=le(),ne(y);let b=(await x.data())[0];if(ne(x),b>=n.hand.minConfidence/4){let v=H(A,[-1,3]),k=await v.array();ne(A),ne(v);let I=this.transformRawCoords(k,m,c,f),E=this.getBoxForHandLandmarks(I);this.storedBoxes[l]={...E,confidence:b};let R={landmarks:I,confidence:b,boxConfidence:u.confidence,fingerConfidence:b,box:{topLeft:E.startPoint,bottomRight:E.endPoint}};i.push(R)}else this.storedBoxes[l]=null;ne(A)}else{let c=Y0(J0(u),GT),p={confidence:u.confidence,boxConfidence:u.confidence,fingerConfidence:0,box:{topLeft:c.startPoint,bottomRight:c.endPoint},landmarks:[]};i.push(p)}}return this.storedBoxes=this.storedBoxes.filter(l=>l!==null),this.detectedHands=i.length,i.length>n.hand.maxDetected&&(i.length=n.hand.maxDetected),i}};var es={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>es.nameMapping[e],getPoints:e=>es.pointsMapping[e]},ai={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>ai.nameMapping[e]},Bt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Bt.nameMapping[e]},ri=class{constructor(t){fe(this,"name");fe(this,"curls");fe(this,"directions");fe(this,"weights");fe(this,"weightsRelative");this.name=t,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(t,n,s){typeof this.curls[t]=="undefined"&&(this.curls[t]=[]),this.curls[t].push([n,s])}direction(t,n,s){this.directions[t]||(this.directions[t]=[]),this.directions[t].push([n,s])}weight(t,n){this.weights[t]=n;let s=this.weights.reduce((r,a)=>r+a,0);this.weightsRelative=this.weights.map(r=>r*5/s)}matchAgainst(t,n){let s=0;for(let r in t){let a=t[r],o=this.curls[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}for(let r in n){let a=n[r],o=this.directions[r];if(typeof o=="undefined"){s+=this.weightsRelative[r];continue}for(let[i,l]of o)if(a===i){s+=l*this.weightsRelative[r];break}}return s/10}};var{thumb:wr,index:ma,middle:ga,ring:Gl,pinky:Hl}=es,{none:kr,half:AAe,full:Sr}=ai,{verticalUp:Vc,verticalDown:A6e,horizontalLeft:S5,horizontalRight:xAe,diagonalUpRight:bAe,diagonalUpLeft:Uc,diagonalDownRight:x6e,diagonalDownLeft:b6e}=Bt,oi=new ri("thumbs up");oi.curl(wr,kr,1);oi.direction(wr,Vc,1);oi.direction(wr,Uc,.25);oi.direction(wr,bAe,.25);for(let e of[es.index,es.middle,es.ring,es.pinky])oi.curl(e,Sr,1),oi.direction(e,S5,1),oi.direction(e,xAe,1);var tn=new ri("victory");tn.curl(wr,AAe,.5);tn.curl(wr,kr,.5);tn.direction(wr,Vc,1);tn.direction(wr,Uc,1);tn.curl(ma,kr,1);tn.direction(ma,Vc,.75);tn.direction(ma,Uc,1);tn.curl(ga,kr,1);tn.direction(ga,Vc,1);tn.direction(ga,Uc,.75);tn.curl(Gl,Sr,1);tn.direction(Gl,Vc,.2);tn.direction(Gl,Uc,1);tn.direction(Gl,S5,.2);tn.curl(Hl,Sr,1);tn.direction(Hl,Vc,.2);tn.direction(Hl,Uc,1);tn.direction(Hl,S5,.2);tn.weight(ma,2);tn.weight(ga,2);var ii=new ri("point");ii.curl(wr,Sr,1);ii.curl(ma,kr,.5);ii.curl(ga,Sr,.5);ii.curl(Gl,Sr,.5);ii.curl(Hl,Sr,.5);ii.weight(ma,2);ii.weight(ga,2);var li=new ri("middle finger");li.curl(wr,kr,1);li.curl(ma,Sr,.5);li.curl(ga,Sr,.5);li.curl(Gl,Sr,.5);li.curl(Hl,Sr,.5);li.weight(ma,2);li.weight(ga,2);var Gc=new ri("open palm");Gc.curl(wr,kr,.75);Gc.curl(ma,kr,.75);Gc.curl(ga,kr,.75);Gc.curl(Gl,kr,.75);Gc.curl(Hl,kr,.75);var qT=[oi,tn,ii,li,Gc];var vAe=.7,jl={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function XT(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function ZT(e,t){if(!e||!t)return[0,0];let n=XT(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=XT(e[1],e[2],t[1],t[2]);return[n,s]}function KT(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function wAe(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],c=e[2]-n[2],p=t[2]-n[2],d=Math.sqrt(s*s+o*o+u*u),h=Math.sqrt(r*r+i*i+c*c),f=Math.sqrt(a*a+l*l+p*p),m=(f*f+d*d-h*h)/(2*f*d);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>jl.NO_CURL_START_LIMIT?y=ai.none:g>jl.HALF_CURL_START_LIMIT?y=ai.half:y=ai.full,y}function YT(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=Bt.horizontalLeft:r=Bt.horizontalRight:s===Math.abs(t)?t>0?r=Bt.horizontalLeft:r=Bt.horizontalRight:n>0?r=Bt.horizontalLeft:r=Bt.horizontalRight,r}function JT(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=Bt.verticalDown:r=Bt.verticalUp:s===Math.abs(t)?t<0?r=Bt.verticalDown:r=Bt.verticalUp:n<0?r=Bt.verticalDown:r=Bt.verticalUp,r}function kAe(e,t,n,s,r,a,o,i){let l,u=JT(e,t,n,s),c=YT(r,a,o,i);return u===Bt.verticalUp?c===Bt.horizontalLeft?l=Bt.diagonalUpLeft:l=Bt.diagonalUpRight:c===Bt.horizontalLeft?l=Bt.diagonalDownLeft:l=Bt.diagonalDownRight,l}function SAe(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],c=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),p=Math.max(Math.abs(i),Math.abs(l),Math.abs(u)),d=0,h=0,f=0,m=p/(c+1e-5);m>1.5?d+=jl.DISTANCE_VOTE_POWER:m>.66?h+=jl.DISTANCE_VOTE_POWER:f+=jl.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),y=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+u*u),A=Math.max(g,y,x),b=e[0],v=e[1],k=n[0],I=n[1];A===g?(k=n[0],I=n[1]):A===x&&(b=t[0],v=t[1]);let P=ZT([b,v],[k,I]),_=KT(P,jl.TOTAL_ANGLE_VOTE_POWER);d+=_[0],h+=_[1],f+=_[2];for(let C of s){let F=KT(C,jl.SINGLE_ANGLE_VOTE_POWER);d+=F[0],h+=F[1],f+=F[2]}let D;return d===Math.max(d,h,f)?D=JT(l,i,u,p):f===Math.max(h,f)?D=YT(a,r,o,c):D=kAe(l,i,u,p,a,r,o,c),D}function QT(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of es.all){let o=es.getPoints(a),i=[],l=[];for(let u of o){let c=e[u[0]],p=e[u[1]],d=ZT(c,p),h=d[0],f=d[1];i.push(h),l.push(f)}t.push(i),n.push(l)}for(let a of es.all){let o=a===es.thumb?1:0,i=es.getPoints(a),l=e[i[o][0]],u=e[i[o+1][1]],c=e[i[3][1]],p=wAe(l,u,c),d=SAe(l,u,c,t[a].slice(o));s[a]=p,r[a]=d}return{curls:s,directions:r}}function t2(e){if(!e||e.length===0)return null;let t=QT(e),n={};for(let s of es.all)n[es.getName(s)]={curl:ai.getName(t.curls[s]),direction:Bt.getName(t.directions[s])};return n}function eN(e){let t=[];if(!e||e.length===0)return t;let n=QT(e);for(let s of qT){let r=s.matchAgainst(n.curls,n.directions);r>=vAe&&t.push({name:s.name,confidence:r})}return t}var tN={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},Hc,jc,nN;async function C5(e,t){let n=await nN.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let c of Object.keys(tN))a[c]=tN[c].map(p=>n[r].landmarks[p]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let c of o)c[0]<i[0]&&(i[0]=c[0]),c[1]<i[1]&&(i[1]=c[1]),c[0]>i[2]&&(i[2]=c[0]),c[1]>i[3]&&(i[3]=c[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let u=t2(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:u})}return s}async function T5(e){var n,s;pe.initial&&(Hc=null,jc=null),!Hc||!jc?[Hc,jc]=await Promise.all([e.hand.enabled?Ge((n=e.hand.detector)==null?void 0:n.modelPath):null,e.hand.landmarks?Ge((s=e.hand.skeleton)==null?void 0:s.modelPath):null]):(e.debug&&oe("cached model:",Hc.modelUrl),e.debug&&oe("cached model:",jc.modelUrl));let t=new Q0(Hc);return nN=new e2(t,jc),[Hc,jc]}var pn=[null,null],IAe=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ui=[[0,0],[0,0]],CAe=["hand","fist","pinch","point","face","tip","pinchtip"],rN=4,aN=1.6,TAe=512,NAe=1.4,n2=Number.MAX_SAFE_INTEGER,N5=0,ya=[0,0],jt={boxes:[],hands:[]},oN={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function iN(e){var t;if(pe.initial&&(pn[0]=null),pn[0])e.debug&&oe("cached model:",pn[0].modelUrl);else{s2(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),pn[0]=await Ge((t=e.hand.detector)==null?void 0:t.modelPath);let n=Object.values(pn[0].modelSignature.inputs);ui[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,ui[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return pn[0]}async function lN(e){var t;if(pe.initial&&(pn[1]=null),pn[1])e.debug&&oe("cached model:",pn[1].modelUrl);else{pn[1]=await Ge((t=e.hand.skeleton)==null?void 0:t.modelPath);let n=Object.values(pn[1].modelSignature.inputs);ui[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,ui[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return pn[1]}async function EAe(e,t){let n=[];if(!e||!pn[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,TAe),o=Math.round(a*r/8)*8;s.resize=Se.resizeBilinear(e,[a,o]),s.cast=ge(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await pn[0].executeAsync(s.cast,IAe),s.boxes=tt(s.rawBoxes,[0,2]),s.scores=tt(s.rawScores,[0]);let i=ss(s.scores,1);ne(i[rN]),i.splice(rN,1),s.filtered=cn(i,1),ne(i),s.max=gn(s.filtered,1),s.argmax=_s(s.filtered,1);let l=0;s.nms=await Se.nonMaxSuppressionAsync(s.boxes,s.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let u=await s.nms.data(),c=await s.max.data(),p=await s.argmax.data();for(let d of Array.from(u)){let h=Pe(s.boxes,d,1),f=await h.data();ne(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=U0(m,NAe),y=[Math.trunc(m[0]*ya[0]),Math.trunc(m[1]*ya[1]),Math.trunc(m[2]*ya[0]),Math.trunc(m[3]*ya[1])],x=c[d],A=CAe[p[d]],b={id:l++,score:x,box:y,boxRaw:g,label:A};n.push(b)}return Object.keys(s).forEach(d=>ne(s[d])),n.sort((d,h)=>h.score-d.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function E5(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&pn[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={},a=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=Se.cropAndResize(e,[a],[0],[ui[1][0],ui[1][1]],"bilinear"),r.div=de(r.crop,Je.tf255),[r.score,r.keypoints]=pn[1].execute(r.div,["Identity_1","Identity"]);let o=(await r.score.data())[0],i=(100-Math.trunc(100/(1+Math.exp(o))))/100;if(i>=(n.hand.minConfidence||0)){s.fingerScore=i,r.reshaped=H(r.keypoints,[-1,3]);let c=(await r.reshaped.array()).map(p=>[p[0]/ui[1][1],p[1]/ui[1][0],p[2]||0]).map(p=>[p[0]*t.boxRaw[2],p[1]*t.boxRaw[3],p[2]||0]);s.keypoints=c.map(p=>[ya[0]*(p[0]+t.boxRaw[0]),ya[1]*(p[1]+t.boxRaw[1]),p[2]||0]),s.landmarks=t2(s.keypoints);for(let p of Object.keys(oN))s.annotations[p]=oN[p].map(d=>s.landmarks&&s.keypoints[d]?s.keypoints[d]:null)}Object.keys(r).forEach(l=>ne(r[l]))}return s}async function R5(e,t){var r,a;if(!pn[0]||!pn[1]||!((r=pn[0])!=null&&r.inputs[0].shape)||!((a=pn[1])!=null&&a.inputs[0].shape))return[];ya=[e.shape[2]||0,e.shape[1]||0],n2++;let n=(t.hand.skipTime||0)>le()-N5,s=n2<(t.hand.skipFrames||0);return t.skipAllowed&&n&&s?jt.hands:new Promise(async o=>{let i=3*(t.hand.skipTime||0)>le()-N5,l=n2<3*(t.hand.skipFrames||0);t.skipAllowed&&jt.hands.length===t.hand.maxDetected?jt.hands=await Promise.all(jt.boxes.map(c=>E5(e,c,t))):t.skipAllowed&&i&&l&&jt.hands.length>0?jt.hands=await Promise.all(jt.boxes.map(c=>E5(e,c,t))):(jt.boxes=await EAe(e,t),N5=le(),jt.hands=await Promise.all(jt.boxes.map(c=>E5(e,c,t))),n2=0);let u=[...jt.boxes];if(jt.boxes.length=0,t.cacheSensitivity>0)for(let c=0;c<jt.hands.length;c++){let p=eT(jt.hands[c].keypoints,ya);if(p.box[2]/(e.shape[2]||1)>.05&&p.box[3]/(e.shape[1]||1)>.05&&jt.hands[c].fingerScore&&jt.hands[c].fingerScore>(t.hand.minConfidence||0)){let d=U0(p.box,aN),h=U0(p.boxRaw,aN);jt.boxes.push({...u[c],box:d,boxRaw:h})}}for(let c=0;c<jt.hands.length;c++){let p=pa(jt.hands[c].keypoints,ya);jt.hands[c].box=p.box,jt.hands[c].boxRaw=p.boxRaw}o(jt.hands)})}var _n,r2=[],_5=Number.MAX_SAFE_INTEGER,cN=0,dN=0;async function pN(e){var t;return pe.initial&&(_n=null),_n?e.debug&&oe("cached model:",_n.modelUrl):_n=await Ge((t=e.face.liveness)==null?void 0:t.modelPath),_n}async function $5(e,t,n,s){var o,i;if(!_n)return 0;let r=(((o=t.face.liveness)==null?void 0:o.skipTime)||0)>le()-dN,a=_5<(((i=t.face.liveness)==null?void 0:i.skipFrames)||0);return t.skipAllowed&&r&&a&&cN===s&&r2[n]?(_5++,r2[n]):(_5=0,new Promise(async l=>{let u=Se.resizeBilinear(e,[_n!=null&&_n.inputs[0].shape?_n.inputs[0].shape[2]:0,_n!=null&&_n.inputs[0].shape?_n.inputs[0].shape[1]:0],!1),c=_n==null?void 0:_n.execute(u),p=(await c.data())[0];r2[n]=Math.round(100*p)/100,cN=s,dN=le(),ne([u,c]),l(r2[n])}))}var nh={};Sa(nh,{connected:()=>o2,horizontal:()=>D5,kpt:()=>a2,relative:()=>F5,vertical:()=>P5});var a2=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],D5=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],P5=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],F5=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],o2={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]};var fN=.005,Ss={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function O5(e){for(let t of D5){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of P5){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of F5){let s=e.keypoints.findIndex(u=>u&&u.part===t[0]),r=e.keypoints.findIndex(u=>u&&u.part===t[1]),a=e.keypoints.findIndex(u=>u&&u.part===n[0]),o=e.keypoints.findIndex(u=>u&&u.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let u=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=u}}}function mN(e){for(let t=0;t<e.length;t++)if(e[t]&&Ss.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-Ss.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Ss.keypoints[t].positionRaw[1])];n[0]<fN&&n[1]<fN?e[t]=Ss.keypoints[t]:Ss.keypoints[t]=e[t]}else Ss.keypoints[t]=e[t];return e}function gN(e,t){let n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;Ss.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=Ks(e,Ss.padding),n.resize=Se.resizeBilinear(n.pad,[t,t]);let s=ge(n.resize,"int32");return Object.keys(n).forEach(r=>ne(n[r])),s}function yN(e,t){e.keypoints=e.keypoints.filter(s=>s&&s.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+Ss.padding[2][0]+Ss.padding[2][1])/t[0]-Ss.padding[2][0],s.position[1]*(t[1]+Ss.padding[1][0]+Ss.padding[1][1])/t[1]-Ss.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=pa(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Is,i2=0,M5=Number.MAX_SAFE_INTEGER,ql={boxes:[],bodies:[],last:0};async function AN(e){return pe.initial&&(Is=null),Is?e.debug&&oe("cached model:",Is.modelUrl):(s2(["size"],e),Is=await Ge(e.body.modelPath)),i2=Is.inputs[0].shape?Is.inputs[0].shape[2]:0,i2<64&&(i2=256),Is}async function _Ae(e,t,n){let s=e[0][0],r=[],a=0;for(let c=0;c<s.length;c++)if(a=s[c][2],a>t.body.minConfidence){let p=[s[c][1],s[c][0]];r.push({score:Math.round(100*a)/100,part:a2[c],positionRaw:p,position:[Math.round((n.shape[2]||0)*p[0]),Math.round((n.shape[1]||0)*p[1])]})}a=r.reduce((c,p)=>p.score>c?p.score:c,0);let o=[],i=pa(r.map(c=>c.position),[n.shape[2],n.shape[1]]),l={};for(let[c,p]of Object.entries(o2)){let d=[];for(let h=0;h<p.length-1;h++){let f=r.find(g=>g.part===p[h]),m=r.find(g=>g.part===p[h+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&d.push([f.position,m.position])}l[c]=d}let u={id:0,score:a,box:i.box,boxRaw:i.boxRaw,keypoints:r,annotations:l};return O5(u),o.push(u),o}async function $Ae(e,t,n){let s=[];for(let r=0;r<e[0].length;r++){let a=e[0][r],o=Math.round(100*a[51+4])/100;if(o>t.body.minConfidence){let i=[];for(let p=0;p<17;p++){let d=a[3*p+2];if(d>t.body.minConfidence){let h=[a[3*p+1],a[3*p+0]];i.push({part:a2[p],score:Math.round(100*d)/100,positionRaw:h,position:[Math.round((n.shape[2]||0)*h[0]),Math.round((n.shape[1]||0)*h[1])]})}}let l=pa(i.map(p=>p.position),[n.shape[2],n.shape[1]]),u={};for(let[p,d]of Object.entries(o2)){let h=[];for(let f=0;f<d.length-1;f++){let m=i.find(y=>y.part===d[f]),g=i.find(y=>y.part===d[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}u[p]=h}let c={id:r,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:[...i],annotations:u};O5(c),s.push(c)}}return s.sort((r,a)=>a.score-r.score),s.length>t.body.maxDetected&&(s.length=t.body.maxDetected),s}async function z5(e,t){if(!Is||!(Is!=null&&Is.inputs[0].shape))return[];t.skipAllowed||(ql.boxes.length=0),M5++;let n=(t.body.skipTime||0)>le()-ql.last,s=M5<(t.body.skipFrames||0);return t.skipAllowed&&n&&s?ql.bodies:new Promise(async r=>{let a={};M5=0,a.input=gN(e,i2),a.res=Is==null?void 0:Is.execute(a.input),ql.last=le();let o=await a.res.array();ql.bodies=a.res.shape[2]===17?await _Ae(o,t,e):await $Ae(o,t,e);for(let i of ql.bodies)yN(i,[e.shape[2]||1,e.shape[1]||1]),mN(i.keypoints);Object.keys(a).forEach(i=>ne(a[i])),r(ql.bodies)})}var qc,l2=[],bN=0,L5=Number.MAX_SAFE_INTEGER,c2=0,u2=2.5;async function vN(e){if(!qc||pe.initial){qc=await Ge(e.object.modelPath);let t=Object.values(qc.modelSignature.inputs);c2=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&oe("cached model:",qc.modelUrl);return qc}async function DAe(e,t,n){let s=0,r=[];for(let l of[1,2,4])K(async()=>{let u=l*13,c=tt(e.find(m=>m.shape[1]===u**2&&(m.shape[2]||0)===zc.length)),p=tt(e.find(m=>m.shape[1]===u**2&&(m.shape[2]||0)<zc.length)),h=await p.reshape([-1,4,p.shape[1]/4]).argMax(2).array(),f=await c.array();for(let m=0;m<c.shape[0];m++)for(let g=0;g<c.shape[1];g++){let y=f[m][g];if(y>(n.object.minConfidence||0)&&g!==61){let x=(.5+Math.trunc(m%u))/u,A=(.5+Math.trunc(m/u))/u,b=h[m].map(D=>D*(u/l/c2)),[v,k]=[x-u2/l*b[0],A-u2/l*b[1]],[I,E]=[x+u2/l*b[2]-v,A+u2/l*b[3]-k],R=[v,k,I,E];R=R.map(D=>Math.max(0,Math.min(D,1)));let P=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],_={id:s++,score:Math.round(100*y)/100,class:g+1,label:zc[g].label,box:P.map(D=>Math.trunc(D)),boxRaw:R};r.push(_)}}});e.forEach(l=>ne(l));let a=r.map(l=>[l.boxRaw[1],l.boxRaw[0],l.boxRaw[3],l.boxRaw[2]]),o=r.map(l=>l.score),i=[];if(a&&a.length>0){let l=await Se.nonMaxSuppressionAsync(a,o,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);i=await l.data(),ne(l)}return r=r.filter((l,u)=>i.includes(u)).sort((l,u)=>u.score-l.score),r}async function B5(e,t){let n=(t.object.skipTime||0)>le()-bN,s=L5<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&l2.length>0?(L5++,l2):(L5=0,!pe.kernels.includes("mod")||!pe.kernels.includes("sparsetodense")?l2:new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=Se.resizeBilinear(e,[c2,c2],!1),i=de(o,Je.tf255),l=i.transpose([0,3,1,2]);ne(i),ne(o);let u;t.object.enabled&&(u=qc.execute(l)),bN=le(),ne(l);let c=await DAe(u,a,t);l2=c,r(c)}))}var rh=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],PAe=rh.length,sh=rh.reduce((e,t,n)=>(e[t]=n,e),{}),FAe=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],G6e=FAe.map(([e,t])=>[sh[e],sh[t]]),kN=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function SN(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function IN(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(u,c)=>({id:c,score:u.score,boxRaw:[u.box[0]/r,u.box[1]/s,u.box[2]/r,u.box[3]/s],box:[Math.trunc(u.box[0]*o),Math.trunc(u.box[1]*a),Math.trunc(u.box[2]*o),Math.trunc(u.box[3]*a)],keypoints:u.keypoints.map(({score:p,part:d,position:h})=>({score:p,part:d,position:[Math.trunc(h.x*o),Math.trunc(h.y*a)],positionRaw:[h.x/s,h.y/s]})),annotations:{}});return e.map((u,c)=>i(u,c))}var d2=class{constructor(t,n){fe(this,"priorityQueue");fe(this,"numberOfElements");fe(this,"getElementValue");this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=n}enqueue(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)}dequeue(){let t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(t){for(;t>0&&this.less(Math.floor(t/2),t);)this.exchange(t,Math.floor(t/2)),t=Math.floor(t/2)}sink(t){for(;2*t<=this.numberOfElements;){let n=2*t;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(t,n))break;this.exchange(t,n),t=n}}getValueAt(t){return this.getElementValue(this.priorityQueue[t])}less(t,n){return this.getValueAt(t)<this.getValueAt(n)}exchange(t,n){let s=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[n],this.priorityQueue[n]=s}};function W5(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+PAe)}}function V5(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=W5(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function U5(e,t,n){return e<t?t:e>n?n:e}function CN(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function G5(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Ir,MAe=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],p2=1,Xc=16,zAe=50**2;function TN(e,t,n,s,r,a,o=2){let i=y=>({y:a.get(y.y,y.x,e),x:a.get(y.y,y.x,a.shape[2]/2+e)}),l=(y,x,A)=>({y:U5(Math.round(y.y/Xc),0,x-1),x:U5(Math.round(y.x/Xc),0,A-1)}),[u,c]=s.shape,p=l(t.position,u,c),d=i(p),f=G5(t.position,d);for(let y=0;y<o;y++){let x=l(f,u,c),A=W5(x.y,x.x,n,r);f=G5({x:x.x*Xc,y:x.y*Xc},{x:A.x,y:A.y})}let m=l(f,u,c),g=s.get(m.y,m.x,n);return{position:f,part:rh[n],score:g}}function LAe(e,t,n,s,r){let a=kN.map(([d,h])=>[sh[d],sh[h]]),o=a.map(([,d])=>d),i=a.map(([d])=>d),l=t.shape[2],u=o.length,c=new Array(l),p=V5(e.part,Xc,n);c[e.part.id]={score:e.score,part:rh[e.part.id],position:p};for(let d=u-1;d>=0;--d){let h=o[d],f=i[d];c[h]&&!c[f]&&(c[f]=TN(d,c[h],f,t,n,r))}for(let d=0;d<u;++d){let h=i[d],f=o[d];c[h]&&!c[f]&&(c[f]=TN(d,c[h],f,t,n,s))}return c}function BAe(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-p2,0),u=Math.min(n+p2+1,a);for(let c=l;c<u;++c){let p=Math.max(s-p2,0),d=Math.min(s+p2+1,o);for(let h=p;h<d;++h)if(r.get(c,h,e)>t){i=!1;break}if(!i)break}return i}function WAe(e,t){let[n,s,r]=t.shape,a=new d2(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let u=t.get(o,i,l);u<e||BAe(l,u,o,i,t)&&a.enqueue({score:u,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function NN(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var o;let a=(o=r[s])==null?void 0:o.position;return a?CN(n,t,a.y,a.x)<=zAe:!1})}function VAe(e,t){return t.reduce((s,{position:r,score:a},o)=>(NN(e,r,o)||(s+=a),s),0)/t.length}function UAe(e,t,n,s,r,a){let o=[],i=WAe(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),u=V5(l.part,Xc,e);if(NN(o,u,l.part.id))continue;let c=LAe(l,t,e,n,s);c=c.filter(h=>h.score>a);let p=VAe(o,c),d=SN(c);p>a&&o.push({keypoints:c,box:d,score:Math.round(100*p)/100})}return o}async function H5(e,t){let n=K(()=>{if(!Ir.inputs[0].shape)return[];let o=Se.resizeBilinear(e,[Ir.inputs[0].shape[2],Ir.inputs[0].shape[1]]),i=he(de(ge(o,"float32"),127.5),1),u=Ir.execute(i,MAe).map(c=>tt(c,[0]));return u[1]=Cn(u[1]),u}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)ne(o);let r=await UAe(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return Ir.inputs[0].shape?IN(r,[e.shape[1],e.shape[2]],[Ir.inputs[0].shape[2],Ir.inputs[0].shape[1]]):[]}async function EN(e){return!Ir||pe.initial?Ir=await Ge(e.body.modelPath):e.debug&&oe("cached model:",Ir.modelUrl),Ir}var Vr,j5=!1;async function q5(e){return!Vr||pe.initial?Vr=await Ge(e.segmentation.modelPath):e.debug&&oe("cached model:",Vr.modelUrl),Vr}async function _N(e,t,n){var m,g;if(j5)return{data:[],canvas:null,alpha:null};j5=!0,Vr||await q5(n);let s=await Fc(e,n),r=((m=s.tensor)==null?void 0:m.shape[2])||0,a=((g=s.tensor)==null?void 0:g.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};let o={};o.resize=Se.resizeBilinear(s.tensor,[Vr.inputs[0].shape?Vr.inputs[0].shape[1]:0,Vr.inputs[0].shape?Vr.inputs[0].shape[2]:0],!1),ne(s.tensor),o.norm=de(o.resize,Je.tf255),o.res=Vr.execute(o.norm),o.squeeze=tt(o.res,0),o.squeeze.shape[2]===2?(o.softmax=yc(o.squeeze),[o.bg,o.fg]=ss(o.softmax,2),o.expand=Kt(o.fg,2),o.pad=Kt(o.expand,0),o.crop=Se.cropAndResize(o.pad,[[0,0,.5,.5]],[0],[r,a]),o.data=tt(o.crop,0)):o.data=Se.resizeBilinear(o.squeeze,[a,r]);let i=Array.from(await o.data.data());if(pe.node&&!pe.Canvas&&typeof ImageData=="undefined")return n.debug&&oe("canvas support missing"),Object.keys(o).forEach(y=>ne(o[y])),{data:i,canvas:null,alpha:null};let l=Jn(r,a);zs&&await zs.toPixels(o.data,l);let u=l.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(u.filter=`blur(${n.segmentation.blur}px)`);let c=u.getImageData(0,0,r,a),p=Jn(r,a),d=p.getContext("2d");s.canvas&&d.drawImage(s.canvas,0,0),d.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(d.filter=`blur(${n.segmentation.blur}px)`),d.drawImage(l,0,0),d.globalCompositeOperation="source-over",d.filter="none";let h=d.getImageData(0,0,r,a);for(let y=0;y<r*a;y++)h.data[4*y+3]=c.data[4*y+0];d.putImageData(h,0,0);let f=null;if(t&&p){f=Jn(r,a);let y=await Fc(t,n);ne(y.tensor);let x=f.getContext("2d");x.drawImage(y.canvas,0,0,f.width,f.height),x.drawImage(p,0,0)}return Object.keys(o).forEach(y=>ne(o[y])),j5=!1,{data:i,canvas:p,alpha:l}}var ah=class{constructor(){fe(this,"ssrnetage",null);fe(this,"gear",null);fe(this,"blazeposedetect",null);fe(this,"blazepose",null);fe(this,"centernet",null);fe(this,"efficientpose",null);fe(this,"mobilefacenet",null);fe(this,"emotion",null);fe(this,"facedetect",null);fe(this,"faceiris",null);fe(this,"facemesh",null);fe(this,"faceres",null);fe(this,"ssrnetgender",null);fe(this,"handpose",null);fe(this,"handskeleton",null);fe(this,"handtrack",null);fe(this,"liveness",null);fe(this,"movenet",null);fe(this,"nanodet",null);fe(this,"posenet",null);fe(this,"segmentation",null);fe(this,"antispoof",null)}};function h2(e){for(let t of Object.keys(e.models))e.models[t]=null}async function X5(e){var t,n,s,r,a,o,i,l,u,c,p,d,h,f,m,g,y,x,A,b,v,k,I,E,R,P,_,D,C,F,U;pe.initial&&h2(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await T5(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await T5(e.config))),e.config.body.enabled&&!e.models.blazepose&&((o=(a=e.config.body)==null?void 0:a.modelPath)==null?void 0:o.includes("blazepose"))&&(e.models.blazepose=aT(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=rT(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((l=(i=e.config.body)==null?void 0:i.modelPath)==null?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=dT(e.config)),e.config.body.enabled&&!e.models.movenet&&((c=(u=e.config.body)==null?void 0:u.modelPath)==null?void 0:c.includes("movenet"))&&(e.models.movenet=AN(e.config)),e.config.body.enabled&&!e.models.posenet&&((d=(p=e.config.body)==null?void 0:p.modelPath)==null?void 0:d.includes("posenet"))&&(e.models.posenet=EN(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=K9(e.config)),e.config.face.enabled&&((h=e.config.face.antispoof)==null?void 0:h.enabled)&&!e.models.antispoof&&(e.models.antispoof=O9(e.config)),e.config.face.enabled&&((f=e.config.face.liveness)==null?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=pN(e.config)),e.config.face.enabled&&((m=e.config.face.description)==null?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=FT(e.config)),e.config.face.enabled&&((g=e.config.face.emotion)==null?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=mT(e.config)),e.config.face.enabled&&((y=e.config.face.iris)==null?void 0:y.enabled)&&!((x=e.config.face.attention)!=null&&x.enabled)&&!e.models.faceiris&&(e.models.faceiris=IT(e.config)),e.config.face.enabled&&((A=e.config.face.mesh)==null?void 0:A.enabled)&&!e.models.facemesh&&(e.models.facemesh=RT(e.config)),e.config.face.enabled&&((b=e.config.face.gear)==null?void 0:b.enabled)&&!e.models.gear&&(e.models.gear=k9(e.config)),e.config.face.enabled&&((v=e.config.face.ssrnet)==null?void 0:v.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=N9(e.config)),e.config.face.enabled&&((k=e.config.face.ssrnet)==null?void 0:k.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=$9(e.config)),e.config.face.enabled&&((I=e.config.face.mobilefacenet)==null?void 0:I.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=bT(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((R=(E=e.config.hand.detector)==null?void 0:E.modelPath)==null?void 0:R.includes("handtrack"))&&(e.models.handtrack=iN(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((_=(P=e.config.hand.detector)==null?void 0:P.modelPath)==null?void 0:_.includes("handtrack"))&&(e.models.handskeleton=lN(e.config)),e.config.object.enabled&&!e.models.centernet&&((C=(D=e.config.object)==null?void 0:D.modelPath)==null?void 0:C.includes("centernet"))&&(e.models.centernet=lT(e.config)),e.config.object.enabled&&!e.models.nanodet&&((U=(F=e.config.object)==null?void 0:F.modelPath)==null?void 0:U.includes("nanodet"))&&(e.models.nanodet=vN(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=q5(e.config));for await(let X of Object.keys(e.models))e.models[X]&&typeof e.models[X]!="undefined"&&(e.models[X]=await e.models[X])}async function K5(e){let t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(let n of Object.keys(e.models)){let s=e.models[n];if(!s)continue;let r=[],a=s==null?void 0:s.executor;if(a&&a.graph.nodes)for(let i of Object.values(a.graph.nodes)){let l=i.op.toLowerCase();r.includes(l)||r.push(l)}else!a&&e.config.debug&&oe("model signature not determined:",n);let o=[];for(let i of r)!t.includes(i)&&!e.env.kernels.includes(i)&&!e.env.kernels.includes(i.replace("_",""))&&!e.env.kernels.includes(i.replace("native",""))&&!e.env.kernels.includes(i.replace("v2",""))&&o.push(i);e.config.debug&&o.length>0&&oe("model validation failed:",n,o)}}var Et={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function GAe(){let e=Et.gl;!e||(Et.extensions=e.getSupportedExtensions())}async function DN(e){var t;if(e.config.backend==="humangl"&&(Et.name in rn().registry&&(!Et.gl||!Et.gl.getParameter(Et.gl.VERSION))&&(oe("error: humangl backend invalid context"),h2(e)),!Py(Et.name))){try{Et.canvas=await Jn(100,100)}catch(s){oe("error: cannot create canvas:",s);return}try{if(Et.gl=(t=Et.canvas)==null?void 0:t.getContext("webgl2",Et.webGLattr),!Et.gl.getParameter(Et.gl.VERSION).includes("2.0")){oe("override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}Et.canvas&&(Et.canvas.addEventListener("webglcontextlost",async r=>{throw oe("error: humangl:",r.type),oe("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),Et.canvas.addEventListener("webglcontextrestored",r=>{oe("error: humangl context restored:",r)}),Et.canvas.addEventListener("webglcontextcreationerror",r=>{oe("error: humangl context create:",r)}))}catch(s){oe("error: cannot get WebGL context:",s);return}try{v0(2,Et.gl)}catch(s){oe("error: cannot set WebGL context:",s);return}try{let s=new vu(Et.gl);_l(Et.name,()=>new Bp(s),Et.priority)}catch(s){oe("error: cannot register WebGL backend:",s);return}try{$r("webgl").forEach(r=>{let a={...r,backendName:Et.name};Xs(a)})}catch(s){oe("error: cannot update WebGL backend registration:",s);return}let n=Ls().getGPGPUContext?Ls().getGPGPUContext().gl:null;if(n)oe(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);else{oe("error: no current gl context:",n,Et.gl);return}try{br.set("WEBGL_VERSION",2)}catch(s){oe("error: cannot set WebGL backend flags:",s);return}GAe(),oe("backend registered:",Et.name)}}function HAe(){if(!pe.kernels.includes("mod")){let e={kernelName:"Mod",backendName:qn(),kernelFunc:t=>K(()=>he(t.inputs.a,L(de(t.inputs.a,t.inputs.b),t.inputs.b)))};Xs(e),pe.kernels.push("mod")}if(!pe.kernels.includes("floormod")){let e={kernelName:"FloorMod",backendName:qn(),kernelFunc:t=>K(()=>xp(t.inputs.a/t.inputs.b)*t.inputs.b+mc(t.inputs.a,t.inputs.b))};Xs(e),pe.kernels.push("floormod")}}async function m2(e,t=!1){if(e.state="backend",t||pe.initial||e.config.backend&&e.config.backend.length>0&&qn()!==e.config.backend){let n=le();if(e.config.backend&&e.config.backend.length>0){if(typeof window=="undefined"&&typeof WorkerGlobalScope!="undefined"&&e.config.debug&&e.config.debug&&oe("running inside web worker"),pe.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&oe("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),pe.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&oe(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),pe.browser&&e.config.backend==="webgpu")if(typeof navigator=="undefined"||typeof navigator.gpu=="undefined")oe("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{let r=await navigator.gpu.requestAdapter();e.config.debug&&oe("enumerated webgpu adapter:",r)}e.config.backend==="humangl"&&await DN(e);let s=Object.keys(rn().registryFactory);if(e.config.debug&&oe("available backends:",s),s.includes(e.config.backend)||(oe(`error: backend ${e.config.backend} not found in registry`),e.config.backend=pe.node?"tensorflow":"webgl",e.config.debug&&oe(`override: setting backend ${e.config.backend}`)),e.config.debug&&oe("setting backend:",e.config.backend),e.config.backend==="wasm"){if(e.config.debug&&oe("wasm path:",e.config.wasmPath),typeof(Ue==null?void 0:Ue.setWasmPaths)!="undefined")await _3(e.config.wasmPath,e.config.wasmPlatformFetch);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let r=await Y().getAsync("WASM_HAS_SIMD_SUPPORT"),a=await Y().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&oe(`wasm execution: ${r?"SIMD":"no SIMD"} ${a?"multithreaded":"singlethreaded"}`),e.config.debug&&!r&&oe("warning: wasm simd support is not enabled")}try{await Dy(e.config.backend),await dc(),I9()}catch(r){return oe("error: cannot set backend:",e.config.backend,r),!1}}if(qn()==="humangl"&&(br.set("CHECK_COMPUTATION_FOR_ERRORS",!1),br.set("WEBGL_CPU_FORWARD",!0),br.set("WEBGL_USE_SHAPES_UNIFORMS",!0),br.set("CPU_HANDOFF_SIZE_THRESHOLD",256),typeof e.config.deallocate!="undefined"&&e.config.deallocate&&(oe("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),br.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Ls().getGPGPUContext)){let s=await Ls().getGPGPUContext().gl;e.config.debug&&oe(`gl version:${s.getParameter(s.VERSION)} renderer:${s.getParameter(s.RENDERER)}`)}qn(),_y(),await dc(),e.performance.initBackend=Math.trunc(le()-n),e.config.backend=qn(),await pe.updateBackend(),HAe()}return!0}function s2(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&oe("kernelFunc",n,t.backend)}};Xs(s)}pe.kernels=$r(qn()).map(n=>n.kernelName.toLowerCase())}var nb={};Sa(nb,{all:()=>tb,body:()=>Zc,canvas:()=>eb,face:()=>Kc,gesture:()=>Qc,hand:()=>Yc,object:()=>Jc,options:()=>$n,person:()=>Q5});var Vs=e=>{if(!e)oe("draw error: invalid canvas");else if(!e.getContext)oe("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)oe("draw error: cannot get canvas context");else return t}return null},Xl=e=>Math.round(e*180/Math.PI),Aa=(e,t)=>{if(!t.useDepth||typeof e=="undefined")return t.color;let n=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${n[0]}, ${n[1]}, ${n[2]}, ${t.alpha})`};function xa(e,t,n,s,r){e.fillStyle=Aa(s,r),e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function Ur(e,t,n,s,r,a){if(e.beginPath(),e.lineWidth=a.lineWidth,a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function Z5(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t)e.strokeStyle=Aa(s[2],n),e.lineTo(Math.trunc(s[0]),Math.trunc(s[1]));e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function FN(e,t,n){if(!(t.length<2)){if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2){Z5(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function Y5(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}var $n={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1};var dt;function qAe(e,t){if(dt.drawLabels){let n=[];if(n.push(`face: ${Math.trunc(100*e.score)}%`),e.genderScore&&n.push(`${e.gender||""} ${Math.trunc(100*e.genderScore)}%`),e.age&&n.push(`age: ${e.age||""}`),e.iris&&n.push(`distance: ${e.iris}`),e.real&&n.push(`real: ${Math.trunc(100*e.real)}%`),e.live&&n.push(`live: ${Math.trunc(100*e.live)}%`),e.emotion&&e.emotion.length>0){let s=e.emotion.map(r=>`${Math.trunc(100*r.score)}% ${r.emotion}`);s.length>3&&(s.length=3),n.push(s.join(" "))}e.rotation&&e.rotation.angle&&e.rotation.gaze&&(e.rotation.angle.roll&&n.push(`roll: ${Xl(e.rotation.angle.roll)}\xB0 yaw:${Xl(e.rotation.angle.yaw)}\xB0 pitch:${Xl(e.rotation.angle.pitch)}\xB0`),e.rotation.gaze.bearing&&n.push(`gaze: ${Xl(e.rotation.gaze.bearing)}\xB0`)),n.length===0&&n.push("face"),t.fillStyle=dt.color;for(let s=n.length-1;s>=0;s--){let r=Math.max(e.box[0],0),a=s*dt.lineHeight+e.box[1];dt.shadowColor&&dt.shadowColor!==""&&(t.fillStyle=dt.shadowColor,t.fillText(n[s],r+5,a+16)),t.fillStyle=dt.labelColor,t.fillText(n[s],r+4,a+15)}}}function XAe(e,t){if(e.annotations&&e.annotations.leftEyeIris&&e.annotations.leftEyeIris[0]){t.strokeStyle=dt.useDepth?"rgba(255, 200, 255, 0.3)":dt.color,t.beginPath();let n=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,s=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],n,s,0,0,2*Math.PI),t.stroke(),dt.fillPolygons&&(t.fillStyle=dt.useDepth?"rgba(255, 255, 200, 0.3)":dt.color,t.fill())}if(e.annotations&&e.annotations.rightEyeIris&&e.annotations.rightEyeIris[0]){t.strokeStyle=dt.useDepth?"rgba(255, 200, 255, 0.3)":dt.color,t.beginPath();let n=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,s=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],n,s,0,0,2*Math.PI),t.stroke(),dt.fillPolygons&&(t.fillStyle=dt.useDepth?"rgba(255, 255, 200, 0.3)":dt.color,t.fill())}}function KAe(e,t){var n;if(dt.drawGaze&&((n=e.rotation)==null?void 0:n.angle)&&typeof Path2D!="undefined"){t.strokeStyle="pink";let s=e.box[0]+e.box[2]/2-e.box[3]*Xl(e.rotation.angle.yaw)/90,r=e.box[1]+e.box[3]/2+e.box[2]*Xl(e.rotation.angle.pitch)/90,a=new Path2D(`
      M ${e.box[0]+e.box[2]/2} ${e.box[1]}
      C
        ${s} ${e.box[1]},
        ${s} ${e.box[1]+e.box[3]},
        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}
    `),o=new Path2D(`
      M ${e.box[0]} ${e.box[1]+e.box[3]/2}
      C 
        ${e.box[0]} ${r},
        ${e.box[0]+e.box[2]} ${r},
        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}
    `);t.stroke(o),t.stroke(a)}}function ZAe(e,t){var n,s,r,a;if(dt.drawGaze&&((s=(n=e.rotation)==null?void 0:n.gaze)==null?void 0:s.strength)&&((a=(r=e.rotation)==null?void 0:r.gaze)==null?void 0:a.bearing)&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";let o=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];Y5(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[o[0],o[1]],4);let i=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];Y5(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[i[0],i[1]],4)}}function YAe(e,t){if(dt.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let n=0;n<Wl.length/3;n++){let s=[Wl[n*3+0],Wl[n*3+1],Wl[n*3+2]].map(r=>e.mesh[r]);Z5(t,s,dt)}XAe(e,t)}}function JAe(e,t){if(dt.drawPoints&&e.mesh.length>=468)for(let n=0;n<e.mesh.length;n++)xa(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2],dt),dt.drawAttention&&(ws.lips.includes(n)&&xa(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]+127,dt),ws.eyeL.includes(n)&&xa(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,dt),ws.eyeR.includes(n)&&xa(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,dt))}function QAe(e,t){dt.drawBoxes&&Ur(t,e.box[0],e.box[1],e.box[2],e.box[3],dt)}async function Kc(e,t,n){if(dt=Gt($n,n),!t||!e)return;let s=Vs(e);if(!!s){s.font=dt.font,s.strokeStyle=dt.color,s.fillStyle=dt.color;for(let r of t)QAe(r,s),qAe(r,s),r.mesh&&r.mesh.length>0&&(JAe(r,s),YAe(r,s),KAe(r,s),ZAe(r,s))}}async function Zc(e,t,n){var a;let s=Gt($n,n);if(!t||!e)return;let r=Vs(e);if(!!r){r.lineJoin="round";for(let o=0;o<t.length;o++){if(r.strokeStyle=s.color,r.fillStyle=s.color,r.lineWidth=s.lineWidth,r.font=s.font,s.drawBoxes&&t[o].box&&((a=t[o].box)==null?void 0:a.length)===4&&(Ur(r,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+3,1+t[o].box[1]+s.lineHeight,t[o].box[2])),r.fillStyle=s.labelColor,r.fillText(`body ${100*t[o].score}%`,t[o].box[0]+2,0+t[o].box[1]+s.lineHeight,t[o].box[2]))),s.drawPoints&&t[o].keypoints)for(let i=0;i<t[o].keypoints.length;i++)!t[o].keypoints[i].score||t[o].keypoints[i].score===0||(r.fillStyle=Aa(t[o].keypoints[i].position[2],s),xa(r,t[o].keypoints[i].position[0],t[o].keypoints[i].position[1],0,s));if(s.drawLabels&&t[o].keypoints){r.font=s.font;for(let i of t[o].keypoints)!i.score||i.score===0||(r.fillStyle=Aa(i.position[2],s),r.fillText(`${i.part} ${Math.trunc(100*i.score)}%`,i.position[0]+4,i.position[1]+4))}if(s.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let i of Object.values(t[o].annotations))for(let l of i)FN(r,l,s)}}}async function Yc(e,t,n){let s=Gt($n,n);if(!t||!e)return;let r=Vs(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,Ur(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=Aa(o[2],s),xa(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{if(!i||i.length===0||!i[0])return;let u=i[i.length-1][2]||-256;r.fillStyle=Aa(u,s),r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4)};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++){r.beginPath();let u=i[l][2]||0;r.strokeStyle=Aa(l*u,s),r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()}};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}}async function Jc(e,t,n){let s=Gt($n,n);if(!t||!e)return;let r=Vs(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Ur(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}}async function Qc(e,t,n){let s=Gt($n,n);if(!(!t||!e)&&s.drawGestures){let r=Vs(e);if(!r)return;r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let u=i[1]>0?`#${i[1]}`:"",c=`${i[0]} ${u}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(c,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(c,6,0+a*s.lineHeight),a+=1}}}}var J5=0;async function Q5(e,t,n){let s=Gt($n,n);if(!t||!e)return;let r=Vs(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Ur(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}}async function eb(e,t){if(!e||!t)return;let n=Vs(t);!n||n.drawImage(e,0,0)}async function tb(e,t,n){if(!t||!t.performance||!t||!e)return null;let s=le(),r=Gt($n,n),a=Promise.all([Kc(e,t.face,r),Zc(e,t.body,r),Yc(e,t.hand,r),Jc(e,t.object,r),Qc(e,t.gesture,r)]);return J5=pe.perfadd?J5+Math.round(le()-s):Math.round(le()-s),t.performance.draw=J5,a}var ed=.1,sb=.5;function exe(e,t,n){let s=!1,r=n.length-1;for(let a=0;a<n.length;r=a++)n[a].y>t!=n[r].y>t&&e<(n[r].x-n[a].x)*(t-n[a].y)/(n[r].y-n[a].y)+n[a].x&&(s=!s);return s}async function ON(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,s=await e.tensor.buffer(),r=[];for(let o of tr.silhouette)r.push({x:(e.mesh[o][0]-e.box[0])/e.box[2],y:(e.mesh[o][1]-e.box[1])/e.box[3]});ed&&ed>0&&(r=r.map(o=>({x:o.x>.5?o.x+ed:o.x-ed,y:o.y>.5?o.y+ed:o.y-ed})));for(let o=0;o<t;o++)for(let i=0;i<n;i++)exe(o/t,i/t,r)||(s.set(sb*s.get(0,i,o,0),0,i,o,0),s.set(sb*s.get(0,i,o,1),0,i,o,1),s.set(sb*s.get(0,i,o,2),0,i,o,2));let a=s.toTensor();return ne(s),a}var nxe=e=>{let t=(p,d)=>Math.atan2(p[1]-d[1],p[0]-d[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],u=Math.sqrt(l[0]*l[0]+l[1]*l[1]);return u=Math.min(u,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:u}},MN=(e,t)=>{let n=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},s=(m,g)=>{let y=m[0]-g[0],x=m[1]-g[1],A=m[2]-g[2];return[y,x,A]},r=(m,g)=>{let y=m[1]*g[2]-m[2]*g[1],x=m[2]*g[0]-m[0]*g[2],A=m[0]*g[1]-m[1]*g[0];return[y,x,A]},a=m=>{let[g,y,x,A,b,v,k,I,E]=m,R,P,_;return A<1?A>-1?(_=Math.asin(A),P=Math.atan2(-k,g),R=Math.atan2(-v,b)):(_=-Math.PI/2,P=-Math.atan2(I,E),R=0):(_=Math.PI/2,P=Math.atan2(I,E),R=0),isNaN(R)&&(R=0),isNaN(P)&&(P=0),isNaN(_)&&(_=0),{pitch:2*-R,yaw:2*-P,roll:2*-_}},o=e.meshRaw;if(!o||o.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[o[10],o[152],o[234],o[454]].map(m=>[m[0]*t[0]/i,m[1]*t[1]/i,m[2]]),u=n(s(l[1],l[0])),c=n(s(l[3],l[2])),p=n(r(c,u));c=r(u,p);let d=[c[0],c[1],c[2],u[0],u[1],u[2],p[0],p[1],p[2]],h=a(d),f=o.length===478?nxe(e):{bearing:0,strength:0};return{angle:h,matrix:d,gaze:f}};var rb=async(e,t)=>{var h,f,m,g,y,x,A,b,v,k,I,E,R,P,_,D,C,F,U,X,z,Z;let n=le(),s,r,a,o,i,l,u,c,p=[];e.state="run:face";let d=await ET(t,e.config);if(e.performance.face=pe.perfadd?(e.performance.face||0)+Math.trunc(le()-n):Math.trunc(le()-n),!t.shape||t.shape.length!==4)return[];if(!d)return[];for(let B=0;B<d.length;B++){if(e.analyze("Get Face"),!d[B].tensor||d[B].tensor.isDisposedInternal){oe("Face object is disposed:",d[B].tensor);continue}if((h=e.config.face.detector)!=null&&h.mask){let re=await ON(d[B]);ne(d[B].tensor),d[B].tensor=re}let ee=d[B].mesh&&d[B].mesh.length>200?MN(d[B],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?o=(f=e.config.face.emotion)!=null&&f.enabled?p5(d[B].tensor||ht([]),e.config,B,d.length):[]:(e.state="run:emotion",n=le(),o=(m=e.config.face.emotion)!=null&&m.enabled?await p5(d[B].tensor||ht([]),e.config,B,d.length):[],e.performance.emotion=pe.perfadd?(e.performance.emotion||0)+Math.trunc(le()-n):Math.trunc(le()-n)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?l=(g=e.config.face.antispoof)!=null&&g.enabled?H3(d[B].tensor||ht([]),e.config,B,d.length):0:(e.state="run:antispoof",n=le(),l=(y=e.config.face.antispoof)!=null&&y.enabled?await H3(d[B].tensor||ht([]),e.config,B,d.length):0,e.performance.antispoof=pe.perfadd?(e.performance.antispoof||0)+Math.trunc(le()-n):Math.trunc(le()-n)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?u=(x=e.config.face.liveness)!=null&&x.enabled?$5(d[B].tensor||ht([]),e.config,B,d.length):0:(e.state="run:liveness",n=le(),u=(A=e.config.face.liveness)!=null&&A.enabled?await $5(d[B].tensor||ht([]),e.config,B,d.length):0,e.performance.liveness=pe.perfadd?(e.performance.antispoof||0)+Math.trunc(le()-n):Math.trunc(le()-n)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?r=(b=e.config.face.gear)!=null&&b.enabled?z3(d[B].tensor||ht([]),e.config,B,d.length):null:(e.state="run:gear",n=le(),r=(v=e.config.face.gear)!=null&&v.enabled?await z3(d[B].tensor||ht([]),e.config,B,d.length):null,e.performance.gear=Math.trunc(le()-n)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(s=(k=e.config.face.ssrnet)!=null&&k.enabled?B3(d[B].tensor||ht([]),e.config,B,d.length):null,a=(I=e.config.face.ssrnet)!=null&&I.enabled?U3(d[B].tensor||ht([]),e.config,B,d.length):null):(e.state="run:ssrnet",n=le(),s=(E=e.config.face.ssrnet)!=null&&E.enabled?await B3(d[B].tensor||ht([]),e.config,B,d.length):null,a=(R=e.config.face.ssrnet)!=null&&R.enabled?await U3(d[B].tensor||ht([]),e.config,B,d.length):null,e.performance.ssrnet=Math.trunc(le()-n)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?i=(P=e.config.face.mobilefacenet)!=null&&P.enabled?f5(d[B].tensor||ht([]),e.config,B,d.length):null:(e.state="run:mobilefacenet",n=le(),i=(_=e.config.face.mobilefacenet)!=null&&_.enabled?await f5(d[B].tensor||ht([]),e.config,B,d.length):null,e.performance.mobilefacenet=Math.trunc(le()-n)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?c=(D=e.config.face.description)!=null&&D.enabled?b5(d[B].tensor||ht([]),e.config,B,d.length):null:(e.state="run:description",n=le(),c=(C=e.config.face.description)!=null&&C.enabled?await b5(d[B].tensor||ht([]),e.config,B,d.length):null,e.performance.description=pe.perfadd?(e.performance.description||0)+Math.trunc(le()-n):Math.trunc(le()-n)),e.analyze("End Description:"),e.config.async&&([s,a,o,i,c,r,l,u]=await Promise.all([s,a,o,i,c,r,l,u])),e.analyze("Finish Face:"),((F=e.config.face.ssrnet)==null?void 0:F.enabled)&&s&&a&&(c={...c,age:s.age,gender:a.gender,genderScore:a.genderScore}),((U=e.config.face.gear)==null?void 0:U.enabled)&&r&&(c={...c,age:r.age,gender:r.gender,genderScore:r.genderScore,race:r.race}),((X=e.config.face.mobilefacenet)==null?void 0:X.enabled)&&i&&(c.descriptor=i),(z=e.config.face.iris)!=null&&z.enabled;let Q=d[B].annotations&&d[B].annotations.leftEyeIris&&d[B].annotations.leftEyeIris[0]&&d[B].annotations.rightEyeIris&&d[B].annotations.rightEyeIris[0]&&d[B].annotations.leftEyeIris.length>0&&d[B].annotations.rightEyeIris.length>0&&d[B].annotations.leftEyeIris[0]!==null&&d[B].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(d[B].annotations.leftEyeIris[3][0]-d[B].annotations.leftEyeIris[1][0]),Math.abs(d[B].annotations.rightEyeIris[4][1]-d[B].annotations.rightEyeIris[2][1]))/t.shape[2]:0,ae=(Z=e.config.face.detector)!=null&&Z.return?tt(d[B].tensor):null;ne(d[B].tensor),d[B].tensor&&delete d[B].tensor;let J={...d[B],id:B};c!=null&&c.age&&(J.age=c.age),c!=null&&c.gender&&(J.gender=c.gender),c!=null&&c.genderScore&&(J.genderScore=c==null?void 0:c.genderScore),c!=null&&c.descriptor&&(J.embedding=c==null?void 0:c.descriptor),c!=null&&c.race&&(J.race=c==null?void 0:c.race),o&&(J.emotion=o),l&&(J.real=l),u&&(J.live=u),Q&&Q!==0&&(J.iris=Math.trunc(500/Q/11.7)/100),ee&&(J.rotation=ee),ae&&(J.tensor=ae),p.push(J),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),p};var zN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&Math.abs(o.positionRaw[1]-i.positionRaw[1])>.1&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},LN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(s/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});let l=e[n].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:n,gesture:`head ${l<0?"up":"down"}`})}return t},BN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;let s=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],a=Math.abs(s*r),o=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],i=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(o*i),u=!1;Math.abs(a-l)/Math.max(a,l)<.25&&(u=!0,t.push({iris:n,gesture:"facing center"}));let p=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],d=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(p>.06||d>.06)&&(u=!1),p>d?p>.05&&t.push({iris:n,gesture:"looking right"}):d>.05&&t.push({iris:n,gesture:"looking left"});let h=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],f=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(f<.01||h<.01||f>.022||h>.022)&&(u=!1),(f<.01||h<.01)&&t.push({iris:n,gesture:"looking down"}),(f>.022||h>.022)&&t.push({iris:n,gesture:"looking up"}),u&&t.push({iris:n,gesture:"looking center"})}return t},WN=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>(o.position[2]||0)<(i.position[2]||0)?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=eN(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t};var Ne={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},ab=0;function VN(e,t){var o,i,l,u,c,p,d,h,f,m,g,y,x,A,b,v,k,I,E,R,P,_,D,C,F,U,X;let n=le();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let s=Date.now()-e.timestamp,r=s<1e3?8-Math.log(s+1):1;if(e.canvas&&(Ne.canvas=e.canvas),e.error&&(Ne.error=e.error),!Ne.body||e.body.length!==Ne.body.length)Ne.body=JSON.parse(JSON.stringify(e.body));else for(let z=0;z<e.body.length;z++){let Z=e.body[z].box.map((J,re)=>((r-1)*Ne.body[z].box[re]+J)/r),B=e.body[z].boxRaw.map((J,re)=>((r-1)*Ne.body[z].boxRaw[re]+J)/r),ee=e.body[z].keypoints.map((J,re)=>{var ie,me,be,Ee,Re,ze,Be,nt,it;return{score:J.score,part:J.part,position:[Ne.body[z].keypoints[re]?((r-1)*(Ne.body[z].keypoints[re].position[0]||0)+(J.position[0]||0))/r:J.position[0],Ne.body[z].keypoints[re]?((r-1)*(Ne.body[z].keypoints[re].position[1]||0)+(J.position[1]||0))/r:J.position[1],Ne.body[z].keypoints[re]?((r-1)*(Ne.body[z].keypoints[re].position[2]||0)+(J.position[2]||0))/r:J.position[2]],positionRaw:[Ne.body[z].keypoints[re]?((r-1)*(Ne.body[z].keypoints[re].positionRaw[0]||0)+(J.positionRaw[0]||0))/r:J.positionRaw[0],Ne.body[z].keypoints[re]?((r-1)*(Ne.body[z].keypoints[re].positionRaw[1]||0)+(J.positionRaw[1]||0))/r:J.positionRaw[1],Ne.body[z].keypoints[re]?((r-1)*(Ne.body[z].keypoints[re].positionRaw[2]||0)+(J.positionRaw[2]||0))/r:J.positionRaw[2]],distance:[Ne.body[z].keypoints[re]?((r-1)*(((ie=Ne.body[z].keypoints[re].distance)==null?void 0:ie[0])||0)+(((me=J.distance)==null?void 0:me[0])||0))/r:(be=J.distance)==null?void 0:be[0],Ne.body[z].keypoints[re]?((r-1)*(((Ee=Ne.body[z].keypoints[re].distance)==null?void 0:Ee[1])||0)+(((Re=J.distance)==null?void 0:Re[1])||0))/r:(ze=J.distance)==null?void 0:ze[1],Ne.body[z].keypoints[re]?((r-1)*(((Be=Ne.body[z].keypoints[re].distance)==null?void 0:Be[2])||0)+(((nt=J.distance)==null?void 0:nt[2])||0))/r:(it=J.distance)==null?void 0:it[2]]}}),Q={},ae={connected:{}};(i=(o=t.body)==null?void 0:o.modelPath)!=null&&i.includes("efficientpose")?ae=j0:(u=(l=t.body)==null?void 0:l.modelPath)!=null&&u.includes("blazepose")?ae=W0:(p=(c=t.body)==null?void 0:c.modelPath)!=null&&p.includes("movenet")&&(ae=nh);for(let[J,re]of Object.entries(ae.connected)){let ie=[];for(let me=0;me<re.length-1;me++){let be=ee.find(Re=>Re.part===re[me]),Ee=ee.find(Re=>Re.part===re[me+1]);be&&Ee&&ie.push([be.position,Ee.position])}Q[J]=ie}Ne.body[z]={...e.body[z],box:Z,boxRaw:B,keypoints:ee,annotations:Q}}if(!Ne.hand||e.hand.length!==Ne.hand.length)Ne.hand=JSON.parse(JSON.stringify(e.hand));else for(let z=0;z<e.hand.length;z++){let Z=e.hand[z].box.map((ae,J)=>((r-1)*Ne.hand[z].box[J]+ae)/r),B=e.hand[z].boxRaw.map((ae,J)=>((r-1)*Ne.hand[z].boxRaw[J]+ae)/r);Ne.hand[z].keypoints.length!==e.hand[z].keypoints.length&&(Ne.hand[z].keypoints=e.hand[z].keypoints);let ee=e.hand[z].keypoints&&e.hand[z].keypoints.length>0?e.hand[z].keypoints.map((ae,J)=>ae.map((re,ie)=>((r-1)*(Ne.hand[z].keypoints[J][ie]||1)+(re||0))/r)):[],Q={};if(Object.keys(Ne.hand[z].annotations).length!==Object.keys(e.hand[z].annotations).length)Ne.hand[z].annotations=e.hand[z].annotations,Q=Ne.hand[z].annotations;else if(e.hand[z].annotations)for(let ae of Object.keys(e.hand[z].annotations))Q[ae]=e.hand[z].annotations[ae]&&e.hand[z].annotations[ae][0]?e.hand[z].annotations[ae].map((J,re)=>J.map((ie,me)=>((r-1)*Ne.hand[z].annotations[ae][re][me]+ie)/r)):null;Ne.hand[z]={...e.hand[z],box:Z,boxRaw:B,keypoints:ee,annotations:Q}}if(!Ne.face||e.face.length!==Ne.face.length)Ne.face=JSON.parse(JSON.stringify(e.face));else for(let z=0;z<e.face.length;z++){let Z=e.face[z].box.map((ee,Q)=>((r-1)*Ne.face[z].box[Q]+ee)/r),B=e.face[z].boxRaw.map((ee,Q)=>((r-1)*Ne.face[z].boxRaw[Q]+ee)/r);if(e.face[z].rotation){let ee={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};ee.matrix=(d=e.face[z].rotation)==null?void 0:d.matrix,ee.angle={roll:((r-1)*(((f=(h=Ne.face[z].rotation)==null?void 0:h.angle)==null?void 0:f.roll)||0)+(((g=(m=e.face[z].rotation)==null?void 0:m.angle)==null?void 0:g.roll)||0))/r,yaw:((r-1)*(((x=(y=Ne.face[z].rotation)==null?void 0:y.angle)==null?void 0:x.yaw)||0)+(((b=(A=e.face[z].rotation)==null?void 0:A.angle)==null?void 0:b.yaw)||0))/r,pitch:((r-1)*(((k=(v=Ne.face[z].rotation)==null?void 0:v.angle)==null?void 0:k.pitch)||0)+(((E=(I=e.face[z].rotation)==null?void 0:I.angle)==null?void 0:E.pitch)||0))/r},ee.gaze={bearing:((r-1)*(((P=(R=Ne.face[z].rotation)==null?void 0:R.gaze)==null?void 0:P.bearing)||0)+(((D=(_=e.face[z].rotation)==null?void 0:_.gaze)==null?void 0:D.bearing)||0))/r,strength:((r-1)*(((F=(C=Ne.face[z].rotation)==null?void 0:C.gaze)==null?void 0:F.strength)||0)+(((X=(U=e.face[z].rotation)==null?void 0:U.gaze)==null?void 0:X.strength)||0))/r},Ne.face[z]={...e.face[z],rotation:ee,box:Z,boxRaw:B}}Ne.face[z]={...e.face[z],box:Z,boxRaw:B}}if(!Ne.object||e.object.length!==Ne.object.length)Ne.object=JSON.parse(JSON.stringify(e.object));else for(let z=0;z<e.object.length;z++){let Z=e.object[z].box.map((ee,Q)=>((r-1)*Ne.object[z].box[Q]+ee)/r),B=e.object[z].boxRaw.map((ee,Q)=>((r-1)*Ne.object[z].boxRaw[Q]+ee)/r);Ne.object[z]={...e.object[z],box:Z,boxRaw:B}}if(e.persons){let z=e.persons;if(!Ne.persons||z.length!==Ne.persons.length)Ne.persons=JSON.parse(JSON.stringify(z));else for(let Z=0;Z<z.length;Z++)Ne.persons[Z].box=z[Z].box.map((B,ee)=>((r-1)*Ne.persons[Z].box[ee]+B)/r)}e.gesture&&(Ne.gesture=e.gesture);let a=le();return ab=pe.perfadd?ab+Math.round(a-n):Math.round(a-n),e.performance&&(Ne.performance={...e.performance,interpolate:ab}),Ne}var lb={};Sa(lb,{distance:()=>oh,match:()=>ib,similarity:()=>ob});function oh(e,t,n={order:2,multiplier:25}){let s=0;for(let r=0;r<e.length;r++){let a=!n.order||n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*s}var UN=(e,t,n,s)=>{if(e===0)return 1;let r=t===2?Math.sqrt(e):e**(1/t),a=(1-r/100-n)/(s-n);return Math.max(Math.min(a,1),0)};function ob(e,t,n={order:2,multiplier:25,min:.2,max:.8}){let s=oh(e,t,n);return UN(s,n.order||2,n.min||0,n.max||1)}function ib(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let o=0;o<t.length;o++){let i=oh(e,t[o],n);if(i<s&&(s=i,r=o),s<(n.threshold||0))break}let a=UN(s,n.order||2,n.min||0,n.max||1);return{index:r,distance:s,similarity:a}}function GN(e,t,n,s,r){var i,l,u,c,p,d,h,f,m,g,y,x,A,b,v,k;let a=0,o=[];for(let I of e){let E={id:a++,face:I,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let F of t)I.box[0]>F.box[0]&&I.box[0]<F.box[0]+F.box[2]&&I.box[1]+I.box[3]>F.box[1]&&I.box[1]+I.box[3]<F.box[1]+F.box[3]&&(E.body=F);if(E.body)for(let F of n)F.box[0]+F.box[2]>E.body.box[0]&&F.box[0]+F.box[2]<E.body.box[0]+E.body.box[2]&&F.box[1]+F.box[3]>E.body.box[1]&&F.box[1]+F.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.left=F),F.box[0]<E.body.box[0]+E.body.box[2]&&F.box[0]>E.body.box[0]&&F.box[1]+F.box[3]>E.body.box[1]&&F.box[1]+F.box[3]<E.body.box[1]+E.body.box[3]&&E.hands&&(E.hands.right=F);for(let F of s)F.face!==void 0&&F.face===I.id?(i=E.gestures)==null||i.push(F):F.iris!==void 0&&F.iris===I.id?(l=E.gestures)==null||l.push(F):F.body!==void 0&&F.body===((u=E.body)==null?void 0:u.id)?(c=E.gestures)==null||c.push(F):F.hand!==void 0&&F.hand===((d=(p=E.hands)==null?void 0:p.left)==null?void 0:d.id)?(h=E.gestures)==null||h.push(F):F.hand!==void 0&&F.hand===((m=(f=E.hands)==null?void 0:f.right)==null?void 0:m.id)&&((g=E.gestures)==null||g.push(F));let R=[],P=[],_=F=>{F&&F.length===4&&(R.push(F[0],F[0]+F[2]),P.push(F[1],F[1]+F[3]))};_((y=E.face)==null?void 0:y.box),_((x=E.body)==null?void 0:x.box),_((b=(A=E.hands)==null?void 0:A.left)==null?void 0:b.box),_((k=(v=E.hands)==null?void 0:v.right)==null?void 0:k.box);let D=Math.min(...R),C=Math.min(...P);E.box=[D,C,Math.max(...R)-D,Math.max(...P)-C],r&&r[1]&&r[2]&&(E.boxRaw=[E.box[0]/r[2],E.box[1]/r[1],E.box[2]/r[2],E.box[3]/r[1]]),o.push(E)}return o}var g2=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,y2=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function lxe(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(g2);break;case"body":case"full":n=await t(y2);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function uxe(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+g2;break;case"full":case"body":n="data:image/jpeg;base64,"+y2;break;default:n=null}let s;if(typeof Image!="undefined")s=new Image;else if(pe.Image)s=new pe.Image;else return;s.onload=async()=>{let r=Jn(s.naturalWidth,s.naturalHeight);if(!r)oe("Warmup: Canvas not found"),t(void 0);else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=await e.detect(o.tensor,e.config);t(i)}},n?s.src=n:t(void 0)})}async function cxe(e){let t=r=>Buffer.from(r,"base64"),n;e.config.warmup==="face"?n=t(g2):n=t(y2);let s;if("node"in Ue){let r=(void 0).decodeJpeg(n),a=r.expandDims(0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&oe("Warmup tfjs-node not loaded");return s}async function dxe(e){let t;return typeof createImageBitmap=="function"?t=await lxe(e):typeof Image!="undefined"||pe.Canvas!==void 0?t=await uxe(e):t=await cxe(e),t}async function pxe(e){let t=qn(),n=Ls();if(t!=="webgl"&&t!=="humangl"||!n||!n.checkCompileCompletion)return;Y().set("ENGINE_COMPILE_ONLY",!0);let s=rn().state.numTensors,r=[];for(let[i,l]of Object.entries(e).filter(([u,c])=>u!==null&&c!==null)){let u=l.inputs&&l.inputs[0]&&l.inputs[0].shape?[...l.inputs[0].shape]:[1,64,64,3],c=l.inputs&&l.inputs[0]&&l.inputs[0].dtype?l.inputs[0].dtype:"float32";for(let d=0;d<u.length;d++)u[d]===-1&&(u[d]=d===0?1:64);let p=Ft(u,c);try{let d=l.execute(p);r.push(i),Array.isArray(d)?d.forEach(h=>ne(h)):ne(d)}catch(d){oe("compile fail model:",i)}ne(p)}let a=await n.checkCompileCompletionAsync();n.getUniformLocations(),oe("compile pass models:",r),oe("compile pass kernels:",a.length),Y().set("ENGINE_COMPILE_ONLY",!1);let o=rn().state.numTensors;o-s>0&&oe("tensor leak:",o-s)}async function HN(e,t){let n=le();return e.state="warmup",t&&(e.config=Gt(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none"?{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:le(),persons:[],error:null}:new Promise(async s=>{await pxe(e.models);let r=await dxe(e),a=le();e.config.debug&&oe("warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),s(r)})}var td,ih,lh,A2,ub=class{constructor(t){fe(this,"version");fe(this,"config");fe(this,"result");fe(this,"state");fe(this,"process");fe(this,"tf");fe(this,"env");fe(this,"draw");fe(this,"models");fe(this,"events");fe(this,"faceTriangulation");fe(this,"faceUVMap");fe(this,"performance");md(this,td,void 0);md(this,ih,void 0);md(this,lh,void 0);fe(this,"gl");fe(this,"analyze",(...t)=>{if(!fd(this,ih))return;let n=this.tf.engine().state.numTensors,s=fd(this,td);gd(this,td,n);let r=n-s;r!==0&&oe(...t,r)});md(this,A2,t=>{if(!fd(this,lh))return null;if(!t)return"input is not defined";if(this.env.node&&!(t instanceof st))return"input must be a tensor";try{this.tf.getBackend()}catch(n){return"backend not loaded"}return null});fe(this,"similarity",ob);fe(this,"distance",oh);fe(this,"match",ib);fe(this,"emit",t=>{var n;this.events&&this.events.dispatchEvent&&((n=this.events)==null||n.dispatchEvent(new Event(t)))});this.env=pe,Ia.wasmPath=Kp["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${Ry}/dist/`,Ia.modelBasePath=pe.browser?"../models/":"file://models/",Ia.backend=pe.browser?"humangl":"tensorflow",this.version=F3,Object.defineProperty(this,"version",{value:F3}),this.config=JSON.parse(JSON.stringify(Ia)),Object.seal(this.config),this.config.cacheModels=typeof indexedDB!="undefined",t&&(this.config=Gt(this.config,t)),b9(this.config),this.tf=Ue,this.state="idle",gd(this,td,0),gd(this,ih,!1),gd(this,lh,!1),this.performance={},this.events=typeof EventTarget!="undefined"?new EventTarget:void 0,this.models=new ah,this.draw={options:$n,canvas:(n,s)=>eb(n,s),face:(n,s,r)=>Kc(n,s,r),body:(n,s,r)=>Zc(n,s,r),hand:(n,s,r)=>Yc(n,s,r),gesture:(n,s,r)=>Qc(n,s,r),object:(n,s,r)=>Jc(n,s,r),person:(n,s,r)=>Q5(n,s,r),all:(n,s,r)=>tb(n,s,r)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=_T,this.faceUVMap=$T,this.gl=Et,this.emit("create")}reset(){let t=this.config.backend;this.config=JSON.parse(JSON.stringify(Ia)),this.config.backend=t}validate(t){return Z1(Ia,t||this.config)}now(){return le()}image(t,n=!0){return Fc(t,this.config,n)}async segmentation(t,n){return _N(t,n,this.config)}enhance(t){return x5(t)}compare(t,n){return x9(this.config,t,n)}async init(){await m2(this,!0),await this.tf.ready()}async load(t){this.state="load";let n=le(),s=Object.values(this.models).filter(o=>o).length;t&&(this.config=Gt(this.config,t)),this.env.initial&&(this.config.debug&&oe(`version: ${this.version}`),this.config.debug&&oe(`tfjs version: ${this.tf.version["tfjs-core"]}`),await m2(this)||oe("error: backend check failed"),await dc(),this.env.browser&&(this.config.debug&&oe("configuration:",this.config),this.config.debug&&oe("environment:",this.env),this.config.debug&&oe("tf flags:",this.tf.ENV.flags))),await X5(this),this.env.initial&&this.config.debug&&oe("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(o=>o).length!==s&&(await K5(this),this.emit("load"));let a=Math.trunc(le()-n);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(t=this.result){return VN(t,this.config)}async warmup(t){let n=le(),s=await HN(this,t),r=le();return this.performance.warmup=Math.trunc(r-n),s}async profile(t,n){let s=await this.tf.profile(()=>this.detect(t,n)),r={};for(let i of s.kernels)r[i.name]?r[i.name]+=i.kernelTimeMs:r[i.name]=i.kernelTimeMs;let a=[];Object.entries(r).forEach(i=>a.push({name:i[0],ms:i[1]})),a.sort((i,l)=>l.ms-i.ms),a.length=20;let o={};for(let i of a)o[i.name]=i.ms;return o}async detect(t,n){return this.state="detect",new Promise(async s=>{var g,y,x,A,b,v,k,I,E,R,P,_,D,C,F,U,X,z,Z,B,ee,Q;this.state="config";let r;this.config=Gt(this.config,n),this.state="check";let a=fd(this,A2).call(this,t);a&&(oe(a,t),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:le(),persons:[],error:a}));let o=le();await m2(this),await this.load(),r=le(),this.state="image";let i=await Fc(t,this.config);if(this.process=i,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(le()-r):Math.trunc(le()-r),this.analyze("Get Image:"),!i.tensor){this.config.debug&&oe("could not convert input to tensor"),this.emit("error"),s({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:le(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),r=le(),this.config.skipAllowed=await A9(this.config,i.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(le()-r):Math.trunc(le()-r),this.analyze("Check Changed:");let l=[],u=[],c=[],p=[];this.state="detect:face",this.config.async?(l=this.config.face.enabled?rb(this,i.tensor):[],this.performance.face&&delete this.performance.face):(r=le(),l=this.config.face.enabled?await rb(this,i.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(le()-r):Math.trunc(le()-r)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(l=await l),this.analyze("Start Body:"),this.state="detect:body";let d=this.config.body.maxDetected===-1?Gt(this.config,{body:{maxDetected:this.config.face.enabled?1*l.length:1}}):this.config;this.config.async?((g=this.config.body.modelPath)!=null&&g.includes("posenet")?u=this.config.body.enabled?H5(i.tensor,d):[]:(y=this.config.body.modelPath)!=null&&y.includes("blazepose")?u=this.config.body.enabled?s5(i.tensor,d):[]:(x=this.config.body.modelPath)!=null&&x.includes("efficientpose")?u=this.config.body.enabled?c5(i.tensor,d):[]:(A=this.config.body.modelPath)!=null&&A.includes("movenet")&&(u=this.config.body.enabled?z5(i.tensor,d):[]),this.performance.body&&delete this.performance.body):(r=le(),(b=this.config.body.modelPath)!=null&&b.includes("posenet")?u=this.config.body.enabled?await H5(i.tensor,d):[]:(v=this.config.body.modelPath)!=null&&v.includes("blazepose")?u=this.config.body.enabled?await s5(i.tensor,d):[]:(k=this.config.body.modelPath)!=null&&k.includes("efficientpose")?u=this.config.body.enabled?await c5(i.tensor,d):[]:(I=this.config.body.modelPath)!=null&&I.includes("movenet")&&(u=this.config.body.enabled?await z5(i.tensor,d):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(le()-r):Math.trunc(le()-r)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let h=this.config.hand.maxDetected===-1?Gt(this.config,{hand:{maxDetected:this.config.face.enabled?2*l.length:1}}):this.config;this.config.async?((R=(E=this.config.hand.detector)==null?void 0:E.modelPath)!=null&&R.includes("handdetect")?c=this.config.hand.enabled?C5(i.tensor,h):[]:(_=(P=this.config.hand.detector)==null?void 0:P.modelPath)!=null&&_.includes("handtrack")&&(c=this.config.hand.enabled?R5(i.tensor,h):[]),this.performance.hand&&delete this.performance.hand):(r=le(),(C=(D=this.config.hand.detector)==null?void 0:D.modelPath)!=null&&C.includes("handdetect")?c=this.config.hand.enabled?await C5(i.tensor,h):[]:(U=(F=this.config.hand.detector)==null?void 0:F.modelPath)!=null&&U.includes("handtrack")&&(c=this.config.hand.enabled?await R5(i.tensor,h):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(le()-r):Math.trunc(le()-r)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((X=this.config.object.modelPath)!=null&&X.includes("nanodet")?p=this.config.object.enabled?B5(i.tensor,this.config):[]:(z=this.config.object.modelPath)!=null&&z.includes("centernet")&&(p=this.config.object.enabled?o5(i.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(r=le(),(Z=this.config.object.modelPath)!=null&&Z.includes("nanodet")?p=this.config.object.enabled?await B5(i.tensor,this.config):[]:(B=this.config.object.modelPath)!=null&&B.includes("centernet")&&(p=this.config.object.enabled?await o5(i.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(le()-r):Math.trunc(le()-r)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([l,u,c,p]=await Promise.all([l,u,c,p])),this.state="detect:gesture";let f=[];this.config.gesture.enabled&&(r=le(),f=[...LN(l),...zN(u),...WN(c),...BN(l)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(le()-r):Math.trunc(le()-r)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(le()-o):Math.trunc(le()-o);let m=((Q=(ee=this.process)==null?void 0:ee.tensor)==null?void 0:Q.shape)||[];this.result={face:l,body:u,hand:c,gesture:f,object:p,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return GN(l,u,c,f,m)}},ne(i.tensor),this.emit("detect"),this.state="idle",s(this.result)})}};td=new WeakMap,ih=new WeakMap,lh=new WeakMap,A2=new WeakMap;return GE(fxe);})();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * Human main module
 * @default Human Library
 * @summary <https://github.com/vladmandic/human>
 * @author <https://github.com/vladmandic>
 * @copyright <https://github.com/vladmandic>
 * @license MIT
 */
/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/** @license See the LICENSE file. */
